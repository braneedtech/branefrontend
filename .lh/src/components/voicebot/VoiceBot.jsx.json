{
    "sourceFile": "src/components/voicebot/VoiceBot.jsx",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 98,
            "patches": [
                {
                    "date": 1700643137796,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                },
                {
                    "date": 1700643195452,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -579,47 +579,47 @@\n       response:\r\n         \"we support multiple Boards let me say few Telangana State Board Andhra Pradesh Board Maharashtra Board Assam Board\",\r\n     },\r\n \r\n-    {\r\n-      utterance: \"Go to landing page\",\r\n+    // {\r\n+    //   utterance: \"Go to landing page\",\r\n \r\n-      response: \"Okay, I am taking you to the landing page.\",\r\n+    //   response: \"Okay, I am taking you to the landing page.\",\r\n \r\n-      route: \"/childpage\",\r\n-    },\r\n+    //   route: \"/childpage\",\r\n+    // },\r\n \r\n-    {\r\n-      utterance: \"take me to landing page\",\r\n+    // {\r\n+    //   utterance: \"take me to landing page\",\r\n \r\n-      response: \"Okay, I am taking you to the landing page.\",\r\n+    //   response: \"Okay, I am taking you to the landing page.\",\r\n \r\n-      route: \"/childpage\",\r\n-    },\r\n+    //   route: \"/childpage\",\r\n+    // },\r\n \r\n-    {\r\n-      utterance: \"move to landing page\",\r\n+    // {\r\n+    //   utterance: \"move to landing page\",\r\n \r\n-      response: \"Okay, I am taking you to the landing page.\",\r\n+    //   response: \"Okay, I am taking you to the landing page.\",\r\n \r\n-      route: \"/childpage\",\r\n-    },\r\n+    //   route: \"/childpage\",\r\n+    // },\r\n \r\n-    {\r\n-      utterance: \"roll back to landing page\",\r\n+    // {\r\n+    //   utterance: \"roll back to landing page\",\r\n \r\n-      response: \"Okay, I am taking you to the landing page.\",\r\n+    //   response: \"Okay, I am taking you to the landing page.\",\r\n \r\n-      route: \"/childpage\",\r\n-    },\r\n+    //   route: \"/childpage\",\r\n+    // },\r\n \r\n-    {\r\n-      utterance: \"move to landing page\",\r\n+    // {\r\n+    //   utterance: \"move to landing page\",\r\n \r\n-      response: \"Okay, I am taking you to the landing page.\",\r\n+    //   response: \"Okay, I am taking you to the landing page.\",\r\n \r\n-      route: \"/childpage\",\r\n-    },\r\n+    //   route: \"/childpage\",\r\n+    // },\r\n \r\n     {\r\n       utterance: \"what is today's quote\",\r\n \r\n"
                },
                {
                    "date": 1700643215675,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -540,20 +540,8 @@\n         \"Brane education has helped my son a lot in his studies. He improved a lot in his studies and is now able to score good marks in his exams\",\r\n     },\r\n \r\n     {\r\n-      utterance: \"Play today's motivational video\",\r\n-\r\n-      response: \"I am playing the video\",\r\n-    },\r\n-\r\n-    {\r\n-      utterance: \"Play today's video\",\r\n-\r\n-      response: \"I am playing Motivational video\",\r\n-    },\r\n-\r\n-    {\r\n       utterance: \"Leaders Voice\",\r\n \r\n       response:\r\n         \"This Voice-interactive AI Platform is a game Changer. It revolutionizes education.\",\r\n"
                },
                {
                    "date": 1700643247260,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -482,9 +482,16 @@\n       route: \"/login/mobile\",\r\n \r\n       response: \"Here's Mobile Login. Please proceed.\",\r\n     },\r\n+    {\r\n+      utterance: \"go to about page\",\r\n \r\n+      route: \"/aboutus\",\r\n+\r\n+      response: \"Here's Mobile Login. Please proceed.\",\r\n+    },\r\n+\r\n     {\r\n       utterance: \"what are platform features\",\r\n \r\n       response:\r\n"
                },
                {
                    "date": 1700643273775,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -487,11 +487,18 @@\n       utterance: \"go to about page\",\r\n \r\n       route: \"/aboutus\",\r\n \r\n-      response: \"Here's Mobile Login. Please proceed.\",\r\n+      response: \"This is About us.\",\r\n     },\r\n+    {\r\n+      utterance: \"go to about us page\",\r\n \r\n+      route: \"/aboutus\",\r\n+\r\n+      response: \"This is About us.\",\r\n+    },\r\n+\r\n     {\r\n       utterance: \"what are platform features\",\r\n \r\n       response:\r\n"
                },
                {
                    "date": 1700643281478,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -496,9 +496,16 @@\n       route: \"/aboutus\",\r\n \r\n       response: \"This is About us.\",\r\n     },\r\n+    {\r\n+      utterance: \"open about us page\",\r\n \r\n+      route: \"/aboutus\",\r\n+\r\n+      response: \"This is About us.\",\r\n+    },\r\n+\r\n     {\r\n       utterance: \"what are platform features\",\r\n \r\n       response:\r\n"
                },
                {
                    "date": 1700643288567,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -503,9 +503,16 @@\n       route: \"/aboutus\",\r\n \r\n       response: \"This is About us.\",\r\n     },\r\n+    {\r\n+      utterance: \"open about page\",\r\n \r\n+      route: \"/aboutus\",\r\n+\r\n+      response: \"This is About us.\",\r\n+    },\r\n+\r\n     {\r\n       utterance: \"what are platform features\",\r\n \r\n       response:\r\n"
                },
                {
                    "date": 1700643306283,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -510,9 +510,16 @@\n       route: \"/aboutus\",\r\n \r\n       response: \"This is About us.\",\r\n     },\r\n+    {\r\n+      utterance: \"take me to about page\",\r\n \r\n+      route: \"/aboutus\",\r\n+\r\n+      response: \"This is About us.\",\r\n+    },\r\n+\r\n     {\r\n       utterance: \"what are platform features\",\r\n \r\n       response:\r\n"
                },
                {
                    "date": 1700643314789,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -517,9 +517,16 @@\n       route: \"/aboutus\",\r\n \r\n       response: \"This is About us.\",\r\n     },\r\n+    {\r\n+      utterance: \"take me to about us page\",\r\n \r\n+      route: \"/aboutus\",\r\n+\r\n+      response: \"This is About us.\",\r\n+    },\r\n+\r\n     {\r\n       utterance: \"what are platform features\",\r\n \r\n       response:\r\n"
                },
                {
                    "date": 1700643479707,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -526,8 +526,52 @@\n       response: \"This is About us.\",\r\n     },\r\n \r\n     {\r\n+      utterance: \"go to contact page\",\r\n+\r\n+      route: \"/contactus\",\r\n+\r\n+      response: \"This is About us.\",\r\n+    },\r\n+    {\r\n+      utterance: \"go to about us page\",\r\n+\r\n+      route: \"/aboutus\",\r\n+\r\n+      response: \"This is About us.\",\r\n+    },\r\n+    {\r\n+      utterance: \"open about us page\",\r\n+\r\n+      route: \"/aboutus\",\r\n+\r\n+      response: \"This is About us.\",\r\n+    },\r\n+    {\r\n+      utterance: \"open about page\",\r\n+\r\n+      route: \"/aboutus\",\r\n+\r\n+      response: \"This is About us.\",\r\n+    },\r\n+    {\r\n+      utterance: \"take me to about page\",\r\n+\r\n+      route: \"/aboutus\",\r\n+\r\n+      response: \"This is About us.\",\r\n+    },\r\n+    {\r\n+      utterance: \"take me to contact us page\",\r\n+\r\n+      route: \"/aboutus\",\r\n+\r\n+      response: \"This is About us.\",\r\n+    },\r\n+\r\n+\r\n+    {\r\n       utterance: \"what are platform features\",\r\n \r\n       response:\r\n         \"Dashboard, Dynamic time table, Learning Networks, Little Masters, Video Based Dictionary, General Search.\",\r\n"
                },
                {
                    "date": 1700643489389,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -530,9 +530,9 @@\n       utterance: \"go to contact page\",\r\n \r\n       route: \"/contactus\",\r\n \r\n-      response: \"This is About us.\",\r\n+      response: \"You can contact us from here\",\r\n     },\r\n     {\r\n       utterance: \"go to about us page\",\r\n \r\n"
                },
                {
                    "date": 1700643538307,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,3681 @@\n+import React, { useState, useEffect, useRef } from \"react\";\r\n+import { useNavigate, useLocation } from \"react-router-dom\";\r\n+import Fuse from \"fuse.js\";\r\n+import \"./VoiceBot.css\";\r\n+import chatbotimage from \"../../assets/chatbotgif.gif\"\r\n+\r\n+const VoiceBot = ({ videoRef}) => {\r\n+  const [isListening, setIsListening] = useState(false);\r\n+  const [isSpeaking, setIsSpeaking] = useState(false);\r\n+  const recognition = useRef(null);\r\n+  const speechSynthesis = useRef(window.speechSynthesis);\r\n+  const [hasGreeted, setHasGreeted] = useState(false);\r\n+  const navigate = useNavigate();\r\n+\r\n+\r\n+ // Initialize speech recognition\r\n+ useEffect(() => {\r\n+  recognition.current = new window.webkitSpeechRecognition();\r\n+  recognition.current.continuous = true;\r\n+  recognition.current.interimResults = false;\r\n+  recognition.current.onresult = onResult;\r\n+  recognition.current.onend = onRecognitionEnd;\r\n+  recognition.current.starting = false;\r\n+\r\n+  recognition.current.onerror = (event) => {\r\n+    console.error(\"Recognition error:\", event.error);\r\n+    if (isListening && !isSpeaking) {\r\n+      restartRecognition();\r\n+    }\r\n+  };\r\n+\r\n+  return () => {\r\n+    if (recognition.current) {\r\n+      recognition.current.abort();\r\n+    }\r\n+  };\r\n+}, []);\r\n+\r\n+  useEffect(() => {\r\n+    const checkRecognition = () => {\r\n+      if (isListening && !isSpeaking && !recognition.current.starting) {\r\n+        console.log(\"Restarting recognition because it's not active.\");\r\n+        recognition.current.starting = true;\r\n+        recognition.current.start();\r\n+        console.log(\"Restarted recognition.\");\r\n+      }\r\n+    };\r\n+\r\n+    const recognitionCheckInterval = setInterval(checkRecognition, 500); // Check every .5 second\r\n+\r\n+    return () => {\r\n+      clearInterval(recognitionCheckInterval);\r\n+    };\r\n+  }, [isListening, isSpeaking]);\r\n+\r\n+\r\n+  const historyStack = useRef([]);\r\n+\r\n+  useEffect(() => {\r\n+    return () => {\r\n+      // Clean up the listener when the component unmounts\r\n+      window.removeEventListener(\"popstate\", handlePopState);\r\n+    };\r\n+  }, []);\r\n+\r\n+  const handlePopState = () => {\r\n+    // This needs to handle both back and forward browser actions\r\n+    // Use some logic to determine whether it's a back or forward action\r\n+    // For simplicity, assume it's always back\r\n+    historyStack.current.pop();\r\n+    forwardStack.current.length = 0; // Clear forward stack on manual navigation\r\n+  };\r\n+  \r\n+\r\n+  // Add a new entry to the stack whenever navigate is called\r\n+  const customNavigate = (to, options) => {\r\n+    historyStack.current.push(to);\r\n+    navigate(to, options);\r\n+  };\r\n+\r\n+  // Listen to popstate events to update the history stack\r\n+  useEffect(() => {\r\n+    window.addEventListener(\"popstate\", handlePopState);\r\n+  }, []);\r\n+\r\n+  const forwardStack = useRef([]);\r\n+\r\n+  const goBack = () => {\r\n+    if (window.history.state && window.history.state.idx > 0) {\r\n+      window.history.back();\r\n+      speak(\"Going back\");\r\n+    } else {\r\n+      speak(\"Can't go back any further.\");\r\n+    }\r\n+  };\r\n+\r\n+  const goForward = () => {\r\n+    if (window.history.state && window.history.state.idx < window.history.length - 1) {\r\n+      window.history.forward();\r\n+      speak(\"Going forward\");\r\n+    } else {\r\n+      speak(\"No forward history available.\");\r\n+    }\r\n+  };\r\n+\r\n+  const playVideo = () => {\r\n+    if (videoRef.current) {\r\n+      videoRef.current.play();\r\n+      speak(\"Playing video.\");\r\n+    } else {\r\n+      speak(\"No video to play.\");\r\n+    }\r\n+  };\r\n+\r\n+  const pauseVideo = () => {\r\n+    if (videoRef.current) {\r\n+      videoRef.current.pause();\r\n+      speak(\"Video paused.\");\r\n+    } else {\r\n+      speak(\"No video to pause.\");\r\n+    }\r\n+  };\r\n+\r\n+  const scrollAmount = window.innerHeight * 0.82;\r\n+\r\n+  const scrollUp = () => {\r\n+    if (window.pageYOffset === 0) {\r\n+      speak(\"Already at the top of the page.\");\r\n+    } else {\r\n+      window.scrollBy(0, -scrollAmount);\r\n+      speak(\"Scrolled up.\");\r\n+    }\r\n+  };\r\n+\r\n+  const scrollDown = () => {\r\n+    const maxScrollTop =\r\n+      document.documentElement.scrollHeight - window.innerHeight;\r\n+    if (window.pageYOffset >= maxScrollTop) {\r\n+      speak(\"Already at the bottom of the page.\");\r\n+    } else {\r\n+      window.scrollBy(0, scrollAmount);\r\n+      speak(\"Scrolled down.\");\r\n+    }\r\n+  };\r\n+\r\n+  const scrollToTop = () => {\r\n+    if (window.pageYOffset === 0) {\r\n+      speak(\"Already at the top of the page.\");\r\n+    } else {\r\n+      window.scrollTo(0, 0);\r\n+      speak(\"Scrolled to the top of the page.\");\r\n+    }\r\n+  };\r\n+\r\n+  const scrollToBottom = () => {\r\n+    const maxScrollTop =\r\n+      document.documentElement.scrollHeight - window.innerHeight;\r\n+    if (window.pageYOffset >= maxScrollTop) {\r\n+      speak(\"Already at the bottom of the page.\");\r\n+    } else {\r\n+      window.scrollTo(0, document.body.scrollHeight);\r\n+      speak(\"Scrolled to the bottom of the page.\");\r\n+    }\r\n+  };\r\n+\r\n+  const speak = (message) => {\r\n+    const utterance = new SpeechSynthesisUtterance(message);\r\n+    utterance.onend = () => {\r\n+      setIsSpeaking(false);\r\n+      // Restart recognition after speaking has ended\r\n+      if (isListening) {\r\n+        restartRecognition();\r\n+      }\r\n+    };\r\n+  \r\n+    setIsSpeaking(true);\r\n+    // Stop recognition when the bot starts speaking\r\n+    if (recognition.current) {\r\n+      recognition.current.abort();\r\n+    }\r\n+    speechSynthesis.current.speak(utterance);\r\n+  };\r\n+  \r\n+\r\n+  const restartRecognition = () => {\r\n+    // Check if recognition is not already started and if the bot is set to listen\r\n+    if (recognition.current && !recognition.current.starting && isListening && !isSpeaking) {\r\n+      recognition.current.abort(); // Ensure any ongoing recognition is stopped\r\n+      recognition.current.starting = true;\r\n+      recognition.current.start();\r\n+    }\r\n+  };\r\n+  \r\n+    // Restart recognition when bot finishes speaking and isListening is true\r\n+    useEffect(() => {\r\n+      if (!isSpeaking && isListening) {\r\n+        restartRecognition();\r\n+      }\r\n+    }, [isSpeaking, isListening]);\r\n+\r\n+  const onResult = (event) => {\r\n+    const resultIndex = event.resultIndex;\r\n+    const transcript = event.results[resultIndex][0].transcript\r\n+      .trim()\r\n+      .toLowerCase();\r\n+\r\n+    if (event.results[resultIndex].isFinal) {\r\n+      console.log(`Recognized text: ${transcript}`);\r\n+      if (transcript.includes(\"brain\")) {\r\n+        console.log(\"Wake word heard, processing command...\");\r\n+        handleCommandWithFuse(transcript.replace(\"brain\", \"\"));\r\n+      }\r\n+    }\r\n+  };\r\n+\r\n+  const onRecognitionEnd = () => {\r\n+    recognition.current.starting = false;\r\n+    if (isListening && !isSpeaking) {\r\n+      restartRecognition();\r\n+    }\r\n+  };\r\n+\r\n+  useEffect(() => {\r\n+    if (isListening && !hasGreeted) {\r\n+      speak(\"Hello, I'm Brane. How can I help you today?\");\r\n+      setHasGreeted(true);\r\n+    }\r\n+  }, [isListening, hasGreeted]);\r\n+\r\n+\r\n+  // Updated startListening function\r\n+  const startListening = () => {\r\n+    setIsListening(true);\r\n+    if (!recognition.current.starting) {\r\n+      restartRecognition();\r\n+    }\r\n+  };\r\n+\r\n+  // Updated stopListening function\r\n+  const stopListening = () => {\r\n+    setIsListening(false);\r\n+    if (speechSynthesis.current.speaking) {\r\n+      speechSynthesis.current.cancel();\r\n+    }\r\n+    recognition.current.abort();\r\n+  };\r\n+\r\n+\r\n+  const handleCommandWithFuse = (command) => {\r\n+    const fuse = new Fuse(commands, { keys: [\"utterance\"], threshold: 0.4 });\r\n+    const results = fuse.search(command);\r\n+    const foundCommand = results.length ? results[0].item : null;\r\n+\r\n+    if (foundCommand) {\r\n+      console.log(\"Command found:\", foundCommand.utterance);\r\n+\r\n+      if (foundCommand.action) {\r\n+        foundCommand.action();\r\n+      } else if (foundCommand.route) {\r\n+        navigate(foundCommand.route);\r\n+      }\r\n+\r\n+      // Speak after performing the action or navigation\r\n+      speak(foundCommand.response);\r\n+    } else {\r\n+      console.log(\"No command found.\");\r\n+      speak(\"I'm not sure how to respond to that.\");\r\n+    }\r\n+  };\r\n+\r\n+  const commands = [\r\n+    {\r\n+      utterance: \"Hello who are you ?\",\r\n+\r\n+      response:\r\n+        \"Hi! This is Brane! your Voice bot from Brane Education How can I Assist you Today ?\",\r\n+    },\r\n+\r\n+    {\r\n+      utterance: \"Hello\",\r\n+\r\n+      response: \"Hi! How can I assist you today?\",\r\n+    },\r\n+\r\n+    {\r\n+      utterance: \"hello\",\r\n+\r\n+      response: \"Hi! How can I assist you today?\",\r\n+    },\r\n+\r\n+    {\r\n+      utterance: \"Hi.\",\r\n+\r\n+      response: \"Hello! How can I assist you today?\",\r\n+    },\r\n+\r\n+    {\r\n+      utterance: \"Hey there\",\r\n+\r\n+      response: \"Hi! How can I assist you today?\",\r\n+    },\r\n+\r\n+    {\r\n+      utterance: \"Good morning Brane.\",\r\n+\r\n+      response: \"Hey Hiii! Good morning  ! How can I help you?\",\r\n+    },\r\n+\r\n+    {\r\n+      utterance: \"Good afternoon Brane.\",\r\n+\r\n+      response: \"Hey Hiii! Good after noon ! How can I help you?\",\r\n+    },\r\n+\r\n+    {\r\n+      utterance: \"Good evening Brane.\",\r\n+\r\n+      response: \"Hey Hiii! Good evening ! How can I help you?\",\r\n+    },\r\n+\r\n+    {\r\n+      utterance: \"can you please take me to login page\",\r\n+\r\n+      route: \"/login\",\r\n+\r\n+      response: \"Here's the Login Page, Please Login\",\r\n+    },\r\n+\r\n+    {\r\n+      utterance: \"please take me to login page\",\r\n+\r\n+      route: \"/login\",\r\n+\r\n+      response: \"Here's the Login Page, Please Login\",\r\n+    },\r\n+\r\n+    {\r\n+      utterance: \"Go to login page\",\r\n+\r\n+      route: \"/login\",\r\n+\r\n+      response: \"Here's the Login Page, Please Login\",\r\n+    },\r\n+\r\n+    {\r\n+      utterance: \"open login page\",\r\n+\r\n+      route: \"/login\",\r\n+\r\n+      response: \"Here's the Login Page, Please Login\",\r\n+    },\r\n+\r\n+    {\r\n+      utterance: \"can you please take me to signup page\",\r\n+\r\n+      route: \"/signup\",\r\n+\r\n+      response: \"Here's the signup page. Please proceed With Registration.\",\r\n+    },\r\n+\r\n+    {\r\n+      utterance: \"take me to signup page\",\r\n+\r\n+      route: \"/signup\",\r\n+\r\n+      response: \"Here's the signup page. Please proceed With Registration.\",\r\n+    },\r\n+\r\n+    {\r\n+      utterance: \"Go to signup page\",\r\n+\r\n+      route: \"/signup\",\r\n+\r\n+      response: \"Here's the signup page. Please proceed With Registration.\",\r\n+    },\r\n+\r\n+    {\r\n+      utterance: \"open signup page\",\r\n+\r\n+      route: \"/signup\",\r\n+\r\n+      response: \"Here's the signup page. Please proceed With Registration.\",\r\n+    },\r\n+\r\n+    {\r\n+      utterance: \"Go to face id\",\r\n+\r\n+      route: \"/login/faceid\",\r\n+\r\n+      response: \"Here's Face ID Login. Please proceed.\",\r\n+    },\r\n+\r\n+    {\r\n+      utterance: \"Go to face id login\",\r\n+\r\n+      route: \"/login/faceid\",\r\n+\r\n+      response: \"Here's Face ID Login. Please proceed.\",\r\n+    },\r\n+    {\r\n+      utterance: \"Go to face login\",\r\n+\r\n+      route: \"/login/faceid\",\r\n+\r\n+      response: \"Here's Face ID Login. Please proceed.\",\r\n+    },\r\n+\r\n+    {\r\n+      utterance: \"login with face id\",\r\n+\r\n+      route: \"/login/faceid\",\r\n+\r\n+      response: \"Here's Face ID Login. Please proceed.\",\r\n+    },\r\n+\r\n+    {\r\n+      utterance: \"login with face\",\r\n+\r\n+      route: \"/login/faceid\",\r\n+\r\n+      response: \"Here's Face ID Login. Please proceed.\",\r\n+    },\r\n+\r\n+    {\r\n+      utterance: \"i want to login with face\",\r\n+\r\n+      route: \"/login/faceid\",\r\n+\r\n+      response: \"Here's Face ID Login. Please proceed.\",\r\n+    },\r\n+\r\n+    {\r\n+      utterance: \"login with voice\",\r\n+\r\n+      route: \"/login/voiceid\",\r\n+\r\n+      response: \"Here's Voice Login. Please proceed.\",\r\n+    },\r\n+\r\n+    {\r\n+      utterance: \"i want to login with voice\",\r\n+\r\n+      route: \"/login/voiceid\",\r\n+\r\n+      response: \"Here's Voice Login. Please proceed.\",\r\n+    },\r\n+\r\n+    {\r\n+      utterance: \"go to voice login\",\r\n+\r\n+      route: \"/login/voiceid\",\r\n+\r\n+      response: \"Here's Voice Login. Please proceed.\",\r\n+    },\r\n+\r\n+    {\r\n+      utterance: \"login with voice\",\r\n+\r\n+      route: \"/login/voiceid\",\r\n+\r\n+      response: \"Here's Voice Login. Please proceed.\",\r\n+    },\r\n+\r\n+    {\r\n+      utterance: \"login with mobile\",\r\n+\r\n+      route: \"/login/mobile\",\r\n+\r\n+      response: \"Here's Mobile Login. Please proceed.\",\r\n+    },\r\n+\r\n+    {\r\n+      utterance: \"i want to login with mobile\",\r\n+\r\n+      route: \"/login/mobile\",\r\n+\r\n+      response: \"Here's Mobile Login. Please proceed.\",\r\n+    },\r\n+    {\r\n+      utterance: \"go to mobile login\",\r\n+\r\n+      route: \"/login/mobile\",\r\n+\r\n+      response: \"Here's Mobile Login. Please proceed.\",\r\n+    },\r\n+    {\r\n+      utterance: \"go to about page\",\r\n+\r\n+      route: \"/aboutus\",\r\n+\r\n+      response: \"This is About us.\",\r\n+    },\r\n+    {\r\n+      utterance: \"go to about us page\",\r\n+\r\n+      route: \"/aboutus\",\r\n+\r\n+      response: \"This is About us.\",\r\n+    },\r\n+    {\r\n+      utterance: \"open about us page\",\r\n+\r\n+      route: \"/aboutus\",\r\n+\r\n+      response: \"This is About us.\",\r\n+    },\r\n+    {\r\n+      utterance: \"open about page\",\r\n+\r\n+      route: \"/aboutus\",\r\n+\r\n+      response: \"This is About us.\",\r\n+    },\r\n+    {\r\n+      utterance: \"take me to about page\",\r\n+\r\n+      route: \"/aboutus\",\r\n+\r\n+      response: \"This is About us.\",\r\n+    },\r\n+    {\r\n+      utterance: \"take me to about us page\",\r\n+\r\n+      route: \"/aboutus\",\r\n+\r\n+      response: \"This is About us.\",\r\n+    },\r\n+\r\n+    {\r\n+      utterance: \"go to contact page\",\r\n+\r\n+      route: \"/contactus\",\r\n+\r\n+      response: \"You can contact us from here\",\r\n+    },\r\n+    {\r\n+      utterance: \"go to contact us page\",\r\n+\r\n+      route: \"/contactus\",\r\n+\r\n+      response: \"You can contact us from here\",\r\n+    },\r\n+    {\r\n+      utterance: \"open contact us page\",\r\n+\r\n+      route: \"/contactus\",\r\n+\r\n+      response: \"This is About us.\",\r\n+    },\r\n+    {\r\n+      utterance: \"open about page\",\r\n+\r\n+      route: \"/aboutus\",\r\n+\r\n+      response: \"This is About us.\",\r\n+    },\r\n+    {\r\n+      utterance: \"take me to about page\",\r\n+\r\n+      route: \"/aboutus\",\r\n+\r\n+      response: \"This is About us.\",\r\n+    },\r\n+    {\r\n+      utterance: \"take me to contact us page\",\r\n+\r\n+      route: \"/aboutus\",\r\n+\r\n+      response: \"This is About us.\",\r\n+    },\r\n+\r\n+\r\n+    {\r\n+      utterance: \"what are platform features\",\r\n+\r\n+      response:\r\n+        \"Dashboard, Dynamic time table, Learning Networks, Little Masters, Video Based Dictionary, General Search.\",\r\n+    },\r\n+\r\n+    {\r\n+      utterance: \"Features of platform\",\r\n+\r\n+      response:\r\n+        \"Dashboard, Dynamic time table, Learning Networks, Little Masters, Video Based Dictionary, General Search.\",\r\n+    },\r\n+\r\n+    {\r\n+      utterance: \"What does the platform offer\",\r\n+\r\n+      response:\r\n+        \"Dashboard, Dynamic time table, Learning Networks, Little Masters, Video Based Dictionary, General Search.\",\r\n+    },\r\n+\r\n+    {\r\n+      utterance: \"Say me the features of platform\",\r\n+\r\n+      response:\r\n+        \"Dashboard, Dynamic time table, Learning Networks, Little Masters, Video Based Dictionary, General Search.\",\r\n+    },\r\n+\r\n+    {\r\n+      utterance: \"Say me the services of platform\",\r\n+\r\n+      response:\r\n+        \"Dashboard, Dynamic time table, Learning Networks, Little Masters, Video Based Dictionary, General Search.\",\r\n+    },\r\n+\r\n+    {\r\n+      utterance: \"tell me the services offered by the platform\",\r\n+\r\n+      response:\r\n+        \"Dashboard, Dynamic time table, Learning Networks, Little Masters, Video Based Dictionary, General Search.\",\r\n+    },\r\n+\r\n+    {\r\n+      utterance: \"explain platform services\",\r\n+\r\n+      response:\r\n+        \"Dashboard, Dynamic time table, Learning Networks, Little Masters, Video Based Dictionary, General Search.\",\r\n+    },\r\n+\r\n+    {\r\n+      utterance: \"Give me the Parent voice of Julia Harris\",\r\n+\r\n+      response:\r\n+        \"Brane education has helped my son a lot in his studies. He improved a lot in his studies and is now able to score good marks in his exams\",\r\n+    },\r\n+\r\n+    {\r\n+      utterance: \"Leaders Voice\",\r\n+\r\n+      response:\r\n+        \"This Voice-interactive AI Platform is a game Changer. It revolutionizes education.\",\r\n+    },\r\n+\r\n+    {\r\n+      utterance: \"Curriculum Supported by Brane Education\",\r\n+\r\n+      response:\r\n+        \"we support multiple Boards let me say few Telangana State Board Andhra Pradesh Board Maharashtra Board Assam Board\",\r\n+    },\r\n+\r\n+    {\r\n+      utterance: \"Boards supported by the platform\",\r\n+\r\n+      response:\r\n+        \"we support multiple Boards let me say few Telangana State Board Andhra Pradesh Board Maharashtra Board Assam Board\",\r\n+    },\r\n+\r\n+    {\r\n+      utterance: \"Curriculum\",\r\n+\r\n+      response:\r\n+        \"we support multiple Boards let me say few Telangana State Board Andhra Pradesh Board Maharashtra Board Assam Board\",\r\n+    },\r\n+\r\n+    // {\r\n+    //   utterance: \"Go to landing page\",\r\n+\r\n+    //   response: \"Okay, I am taking you to the landing page.\",\r\n+\r\n+    //   route: \"/childpage\",\r\n+    // },\r\n+\r\n+    // {\r\n+    //   utterance: \"take me to landing page\",\r\n+\r\n+    //   response: \"Okay, I am taking you to the landing page.\",\r\n+\r\n+    //   route: \"/childpage\",\r\n+    // },\r\n+\r\n+    // {\r\n+    //   utterance: \"move to landing page\",\r\n+\r\n+    //   response: \"Okay, I am taking you to the landing page.\",\r\n+\r\n+    //   route: \"/childpage\",\r\n+    // },\r\n+\r\n+    // {\r\n+    //   utterance: \"roll back to landing page\",\r\n+\r\n+    //   response: \"Okay, I am taking you to the landing page.\",\r\n+\r\n+    //   route: \"/childpage\",\r\n+    // },\r\n+\r\n+    // {\r\n+    //   utterance: \"move to landing page\",\r\n+\r\n+    //   response: \"Okay, I am taking you to the landing page.\",\r\n+\r\n+    //   route: \"/childpage\",\r\n+    // },\r\n+\r\n+    {\r\n+      utterance: \"what is today's quote\",\r\n+\r\n+      response:\r\n+        \"Determination is the power that sees us through all our frustration and obstacles. It helps in building our willpower which is the very basis of success.\",\r\n+\r\n+      route: \"/childpage\",\r\n+    },\r\n+\r\n+    {\r\n+      utterance: \"Today's Inspirational quote\",\r\n+\r\n+      response:\r\n+        \"Determination is the power that sees us through all our frustration and obstacles. It helps in building our willpower which is the very basis of success.\",\r\n+\r\n+      route: \"/childpage\",\r\n+    },\r\n+\r\n+    {\r\n+      utterance: \"say me today's quote\",\r\n+\r\n+      response:\r\n+        \"Determination is the power that sees us through all our frustration and obstacles. It helps in building our willpower which is the very basis of success.\",\r\n+\r\n+      route: \"/childpage\",\r\n+    },\r\n+    {\r\n+      utterance: \"go back\",\r\n+      response: \"\",\r\n+      action: goBack, // Note the use of an action property\r\n+    },\r\n+    {\r\n+      utterance: \"go forward\",\r\n+      response: \"\",\r\n+      action: goForward,\r\n+    },\r\n+    {\r\n+      utterance: \"play video\",\r\n+      // response: \"Playing video.\",\r\n+      action: playVideo,\r\n+    },\r\n+    {\r\n+      utterance: \"pause video\",\r\n+      // response: \"Pausing video.\",\r\n+      action: pauseVideo,\r\n+    },\r\n+    {\r\n+      utterance: \"start video\",\r\n+      // response: \"Playing video.\",\r\n+      action: playVideo,\r\n+    },\r\n+    {\r\n+      utterance: \"stop video\",\r\n+      // response: \"Playing video.\",\r\n+      action: pauseVideo,\r\n+    },\r\n+    {\r\n+      utterance: \"scroll up\",\r\n+      // response: \"Scrolling up.\",\r\n+      action: scrollUp,\r\n+    },\r\n+    {\r\n+      utterance: \"scroll down\",\r\n+      // response: \"Scrolling down.\",\r\n+      action: scrollDown,\r\n+    },\r\n+    {\r\n+      utterance: \"go up\",\r\n+\r\n+      // response: \"Scrolling up.\",\r\n+      action: scrollUp,\r\n+    },\r\n+    {\r\n+      utterance: \"go down\",\r\n+      // response: \"Scrolling down.\",\r\n+      action: scrollDown,\r\n+    },\r\n+    {\r\n+      utterance: \"scroll to top\",\r\n+      action: scrollToTop,\r\n+    },\r\n+    {\r\n+      utterance: \"scroll to bottom\",\r\n+      action: scrollToBottom,\r\n+    },\r\n+    {\r\n+      utterance: \"brane stop\",\r\n+      action: stopListening,\r\n+    },\r\n+    {\r\n+      utterance: \"brane turn off\",\r\n+      action: stopListening,\r\n+    },\r\n+    {\r\n+      utterance: \"brane stop the bot\",\r\n+      action: stopListening,\r\n+    },\r\n+  ];\r\n+\r\n+  return (\r\n+    <div className=\"speech-bot-container\">\r\n+      <div\r\n+        className={`button-container ${\r\n+          isListening ? \"voicebotframeactive\" : \"voicebotframe\"\r\n+        }`}\r\n+      >\r\n+        {/* <button onClick={isListening ? stopListening : startListening}>\r\n+          {isListening ? \"Stop\" : \"Start\"} Animation\r\n+        </button> */}\r\n+        <img \r\n+        className=\"botimage\"\r\n+          src={chatbotimage} alt=\"\" \r\n+          onClick={isListening ? stopListening : startListening}  \r\n+        />\r\n+\r\n+      </div>\r\n+    </div>\r\n+  );\r\n+};\r\n+\r\n+export default VoiceBot;\r\n+\r\n+\r\n+{/* // import React, { useState, useEffect, useRef } from \"react\";\r\n+// import { useNavigate, useLocation } from \"react-router-dom\";\r\n+// import Fuse from \"fuse.js\";\r\n+// import \"./VoiceBot.css\";\r\n+\r\n+// const VoiceBot = ({ videoRef }) => {\r\n+//   const [isListening, setIsListening] = useState(false);\r\n+//   const [isSpeaking, setIsSpeaking] = useState(false);\r\n+//   const recognition = useRef(null);\r\n+//   const speechSynthesis = useRef(window.speechSynthesis);\r\n+//   const [hasGreeted, setHasGreeted] = useState(false);\r\n+//   const navigate = useNavigate();\r\n+\r\n+//   useEffect(() => {\r\n+//     recognition.current = new window.webkitSpeechRecognition();\r\n+//     recognition.current.continuous = true;\r\n+//     recognition.current.interimResults = false;\r\n+//     recognition.current.onresult = onResult;\r\n+//     recognition.current.onend = onRecognitionEnd;\r\n+//     recognition.current.starting = false;\r\n+\r\n+//     // Simplified error handling, removed specific handling for 'no-speech'\r\n+//     recognition.current.onerror = (event) => {\r\n+//       console.error(\"Recognition error:\", event.error);\r\n+//       // Check if listening is true and the bot isn't speaking\r\n+//       if (isListening && !isSpeaking) {\r\n+//         // Restart recognition\r\n+//         restartRecognition();\r\n+//       }\r\n+//     };\r\n+\r\n+//     return () => {\r\n+//       if (recognition.current) {\r\n+//         recognition.current.abort();\r\n+//       }\r\n+//     };\r\n+//   }, []);\r\n+\r\n+//   useEffect(() => {\r\n+//     const checkRecognition = () => {\r\n+//       if (isListening && !isSpeaking && !recognition.current.starting) {\r\n+//         console.log(\"Restarting recognition because it's not active.\");\r\n+//         recognition.current.starting = true;\r\n+//         recognition.current.start();\r\n+//         console.log(\"Restarted recognition.\");\r\n+//       }\r\n+//     };\r\n+\r\n+//     const recognitionCheckInterval = setInterval(checkRecognition, 100); // Check every 1 second\r\n+\r\n+//     return () => {\r\n+//       clearInterval(recognitionCheckInterval);\r\n+//     };\r\n+//   }, [isListening, isSpeaking]);\r\n+\r\n+//   const restartRecognition = () => {\r\n+//     if (recognition.current.starting) {\r\n+//       console.log(\"Recognition is already starting or running.\");\r\n+//       return;\r\n+//     }\r\n+\r\n+//     recognition.current.abort(); // Stop any existing recognition process\r\n+//     recognition.current.starting = true;\r\n+//     recognition.current.start();\r\n+//     console.log(\"Recognition restarted.\");\r\n+//   };\r\n+\r\n+//   const historyStack = useRef([]);\r\n+\r\n+//   useEffect(() => {\r\n+//     return () => {\r\n+//       // Clean up the listener when the component unmounts\r\n+//       window.removeEventListener(\"popstate\", handlePopState);\r\n+//     };\r\n+//   }, []);\r\n+\r\n+//   const handlePopState = () => {\r\n+//     // This needs to handle both back and forward browser actions\r\n+//     // Use some logic to determine whether it's a back or forward action\r\n+//     // For simplicity, assume it's always back\r\n+//     historyStack.current.pop();\r\n+//     forwardStack.current.length = 0; // Clear forward stack on manual navigation\r\n+//   };\r\n+  \r\n+\r\n+//   // Add a new entry to the stack whenever navigate is called\r\n+//   const customNavigate = (to, options) => {\r\n+//     historyStack.current.push(to);\r\n+//     navigate(to, options);\r\n+//   };\r\n+\r\n+//   // Listen to popstate events to update the history stack\r\n+//   useEffect(() => {\r\n+//     window.addEventListener(\"popstate\", handlePopState);\r\n+//   }, []);\r\n+\r\n+//   const forwardStack = useRef([]);\r\n+\r\n+//   const goBack = () => {\r\n+//     if (window.history.state && window.history.state.idx > 0) {\r\n+//       window.history.back();\r\n+//       speak(\"Going back\");\r\n+//     } else {\r\n+//       speak(\"Can't go back any further.\");\r\n+//     }\r\n+//   };\r\n+\r\n+//   const goForward = () => {\r\n+//     if (window.history.state && window.history.state.idx < window.history.length - 1) {\r\n+//       window.history.forward();\r\n+//       speak(\"Going forward\");\r\n+//     } else {\r\n+//       speak(\"No forward history available.\");\r\n+//     }\r\n+//   };\r\n+\r\n+//   const playVideo = () => {\r\n+//     if (videoRef.current) {\r\n+//       videoRef.current.play();\r\n+//       speak(\"Playing video.\");\r\n+//     } else {\r\n+//       speak(\"No video to play.\");\r\n+//     }\r\n+//   };\r\n+\r\n+//   const pauseVideo = () => {\r\n+//     if (videoRef.current) {\r\n+//       videoRef.current.pause();\r\n+//       speak(\"Video paused.\");\r\n+//     } else {\r\n+//       speak(\"No video to pause.\");\r\n+//     }\r\n+//   };\r\n+\r\n+//   const scrollAmount = window.innerHeight * 0.82;\r\n+\r\n+//   const scrollUp = () => {\r\n+//     if (window.pageYOffset === 0) {\r\n+//       speak(\"Already at the top of the page.\");\r\n+//     } else {\r\n+//       window.scrollBy(0, -scrollAmount);\r\n+//       speak(\"Scrolled up.\");\r\n+//     }\r\n+//   };\r\n+\r\n+//   const scrollDown = () => {\r\n+//     const maxScrollTop =\r\n+//       document.documentElement.scrollHeight - window.innerHeight;\r\n+//     if (window.pageYOffset >= maxScrollTop) {\r\n+//       speak(\"Already at the bottom of the page.\");\r\n+//     } else {\r\n+//       window.scrollBy(0, scrollAmount);\r\n+//       speak(\"Scrolled down.\");\r\n+//     }\r\n+//   };\r\n+\r\n+//   const scrollToTop = () => {\r\n+//     if (window.pageYOffset === 0) {\r\n+//       speak(\"Already at the top of the page.\");\r\n+//     } else {\r\n+//       window.scrollTo(0, 0);\r\n+//       speak(\"Scrolled to the top of the page.\");\r\n+//     }\r\n+//   };\r\n+\r\n+//   const scrollToBottom = () => {\r\n+//     const maxScrollTop =\r\n+//       document.documentElement.scrollHeight - window.innerHeight;\r\n+//     if (window.pageYOffset >= maxScrollTop) {\r\n+//       speak(\"Already at the bottom of the page.\");\r\n+//     } else {\r\n+//       window.scrollTo(0, document.body.scrollHeight);\r\n+//       speak(\"Scrolled to the bottom of the page.\");\r\n+//     }\r\n+//   };\r\n+\r\n+//   const speak = (message) => {\r\n+//     console.log(\"speak function called with message:\", message);\r\n+//     const utterance = new SpeechSynthesisUtterance(message);\r\n+//     utterance.onend = () => {\r\n+//       setIsSpeaking(false);\r\n+//       console.log(\"Speaking ended.\");\r\n+//       if (isListening && !recognition.current.starting) {\r\n+//         console.log(\"Restarting recognition after speaking.\");\r\n+//         recognition.current.starting = true;\r\n+//         recognition.current.start();\r\n+//         console.log(\"Restarted recognition after speaking.\");\r\n+//       }\r\n+//     };\r\n+\r\n+//     setIsSpeaking(true);\r\n+//     console.log(\"Speaking started.\");\r\n+//     recognition.current.stop(); // Ensure to stop recognition before speaking\r\n+//     speechSynthesis.current.speak(utterance);\r\n+//   };\r\n+\r\n+//   const onResult = (event) => {\r\n+//     const resultIndex = event.resultIndex;\r\n+//     const transcript = event.results[resultIndex][0].transcript\r\n+//       .trim()\r\n+//       .toLowerCase();\r\n+\r\n+//     if (event.results[resultIndex].isFinal) {\r\n+//       console.log(`Recognized text: ${transcript}`);\r\n+//       if (transcript.includes(\"brain\")) {\r\n+//         console.log(\"Wake word heard, processing command...\");\r\n+//         handleCommandWithFuse(transcript.replace(\"brain\", \"\"));\r\n+//       }\r\n+//     }\r\n+//   };\r\n+\r\n+//   const onRecognitionEnd = () => {\r\n+//     recognition.current.starting = false;\r\n+//     if (isListening && !isSpeaking) {\r\n+//       restartRecognition();\r\n+//     }\r\n+//   };\r\n+\r\n+//   useEffect(() => {\r\n+//     if (isListening) {\r\n+//       if (!hasGreeted) {\r\n+//         speak(\"Hello, I'm Brane. How can I help you today?\");\r\n+//         setHasGreeted(true);\r\n+//       } else {\r\n+//         speak(\"Listening.\");\r\n+//       }\r\n+//     }\r\n+//   }, [isListening, hasGreeted]);\r\n+\r\n+\r\n+//   const startListening = () => {\r\n+//     if (!recognition.current.starting) {\r\n+//       setIsListening(true);\r\n+//       restartRecognition();\r\n+//     }\r\n+//   };\r\n+\r\n+//   const stopListening = () => {\r\n+//     setIsListening(false);\r\n+//     recognition.current.abort();\r\n+//     if (speechSynthesis.current.speaking) {\r\n+//       speechSynthesis.current.cancel();\r\n+//     }\r\n+//   };\r\n+\r\n+//   const handleCommandWithFuse = (command) => {\r\n+//     const fuse = new Fuse(commands, { keys: [\"utterance\"], threshold: 0.4 });\r\n+//     const results = fuse.search(command);\r\n+//     const foundCommand = results.length ? results[0].item : null;\r\n+\r\n+//     if (foundCommand) {\r\n+//       console.log(\"Command found:\", foundCommand.utterance);\r\n+\r\n+//       if (foundCommand.action) {\r\n+//         foundCommand.action();\r\n+//       } else if (foundCommand.route) {\r\n+//         navigate(foundCommand.route);\r\n+//       }\r\n+\r\n+//       // Speak after performing the action or navigation\r\n+//       speak(foundCommand.response);\r\n+//     } else {\r\n+//       console.log(\"No command found.\");\r\n+//       speak(\"I'm not sure how to respond to that.\");\r\n+//     }\r\n+//   };\r\n+\r\n+//   const commands = [\r\n+//     {\r\n+//       utterance: \"Hello who are you ?\",\r\n+\r\n+//       response:\r\n+//         \"Hi! This is Brane! your Voice bot from Brane Education How can I Assist you Today ?\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"Hello\",\r\n+\r\n+//       response: \"Hi! How can I assist you today?\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"hello\",\r\n+\r\n+//       response: \"Hi! How can I assist you today?\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"Hi.\",\r\n+\r\n+//       response: \"Hello! How can I assist you today?\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"Hey there\",\r\n+\r\n+//       response: \"Hi! How can I assist you today?\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"Good morning Brane.\",\r\n+\r\n+//       response: \"Hey Hiii! Good morning  ! How can I help you?\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"Good afternoon Brane.\",\r\n+\r\n+//       response: \"Hey Hiii! Good after noon ! How can I help you?\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"Good evening Brane.\",\r\n+\r\n+//       response: \"Hey Hiii! Good evening ! How can I help you?\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"can you please take me to login page\",\r\n+\r\n+//       route: \"/login\",\r\n+\r\n+//       response: \"Here's the Login Page, Please Login\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"please take me to login page\",\r\n+\r\n+//       route: \"/login\",\r\n+\r\n+//       response: \"Here's the Login Page, Please Login\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"Go to login page\",\r\n+\r\n+//       route: \"/login\",\r\n+\r\n+//       response: \"Here's the Login Page, Please Login\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"open login page\",\r\n+\r\n+//       route: \"/login\",\r\n+\r\n+//       response: \"Here's the Login Page, Please Login\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"can you please take me to signup page\",\r\n+\r\n+//       route: \"/signup\",\r\n+\r\n+//       response: \"Here's the signup page. Please proceed With Registration.\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"take me to signup page\",\r\n+\r\n+//       route: \"/signup\",\r\n+\r\n+//       response: \"Here's the signup page. Please proceed With Registration.\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"Go to signup page\",\r\n+\r\n+//       route: \"/signup\",\r\n+\r\n+//       response: \"Here's the signup page. Please proceed With Registration.\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"open signup page\",\r\n+\r\n+//       route: \"/signup\",\r\n+\r\n+//       response: \"Here's the signup page. Please proceed With Registration.\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"Go to face id\",\r\n+\r\n+//       route: \"/login/faceid\",\r\n+\r\n+//       response: \"Here's Face ID Login. Please proceed.\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"Go to face id login\",\r\n+\r\n+//       route: \"/login/faceid\",\r\n+\r\n+//       response: \"Here's Face ID Login. Please proceed.\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"login with face id\",\r\n+\r\n+//       route: \"/login/faceid\",\r\n+\r\n+//       response: \"Here's Face ID Login. Please proceed.\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"login with face\",\r\n+\r\n+//       route: \"/login/faceid\",\r\n+\r\n+//       response: \"Here's Face ID Login. Please proceed.\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"i want to login with face\",\r\n+\r\n+//       route: \"/login/faceid\",\r\n+\r\n+//       response: \"Here's Face ID Login. Please proceed.\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"login with voice\",\r\n+\r\n+//       route: \"/login/voiceid\",\r\n+\r\n+//       response: \"Here's Voice Login. Please proceed.\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"i want to login with voice\",\r\n+\r\n+//       route: \"/login/voiceid\",\r\n+\r\n+//       response: \"Here's Voice Login. Please proceed.\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"go to voice login\",\r\n+\r\n+//       route: \"/login/voiceid\",\r\n+\r\n+//       response: \"Here's Voice Login. Please proceed.\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"login with voice\",\r\n+\r\n+//       route: \"/login/voiceid\",\r\n+\r\n+//       response: \"Here's Voice Login. Please proceed.\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"login with mobile\",\r\n+\r\n+//       route: \"/login/mobile\",\r\n+\r\n+//       response: \"Here's Mobile Login. Please proceed.\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"i want to login with mobile\",\r\n+\r\n+//       route: \"/login/mobile\",\r\n+\r\n+//       response: \"Here's Mobile Login. Please proceed.\",\r\n+//     },\r\n+//     {\r\n+//       utterance: \"go to mobile login\",\r\n+\r\n+//       route: \"/login/mobile\",\r\n+\r\n+//       response: \"Here's Mobile Login. Please proceed.\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"what are platform features\",\r\n+\r\n+//       response:\r\n+//         \"Dashboard, Dynamic time table, Learning Networks, Little Masters, Video Based Dictionary, General Search.\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"Features of platform\",\r\n+\r\n+//       response:\r\n+//         \"Dashboard, Dynamic time table, Learning Networks, Little Masters, Video Based Dictionary, General Search.\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"What does the platform offer\",\r\n+\r\n+//       response:\r\n+//         \"Dashboard, Dynamic time table, Learning Networks, Little Masters, Video Based Dictionary, General Search.\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"Say me the features of platform\",\r\n+\r\n+//       response:\r\n+//         \"Dashboard, Dynamic time table, Learning Networks, Little Masters, Video Based Dictionary, General Search.\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"Say me the services of platform\",\r\n+\r\n+//       response:\r\n+//         \"Dashboard, Dynamic time table, Learning Networks, Little Masters, Video Based Dictionary, General Search.\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"tell me the services offered by the platform\",\r\n+\r\n+//       response:\r\n+//         \"Dashboard, Dynamic time table, Learning Networks, Little Masters, Video Based Dictionary, General Search.\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"explain platform services\",\r\n+\r\n+//       response:\r\n+//         \"Dashboard, Dynamic time table, Learning Networks, Little Masters, Video Based Dictionary, General Search.\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"Give me the Parent voice of Julia Harris\",\r\n+\r\n+//       response:\r\n+//         \"Brane education has helped my son a lot in his studies. He improved a lot in his studies and is now able to score good marks in his exams\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"Play today's motivational video\",\r\n+\r\n+//       response: \"I am playing the video\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"Play today's video\",\r\n+\r\n+//       response: \"I am playing Motivational video\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"Leaders Voice\",\r\n+\r\n+//       response:\r\n+//         \"This Voice-interactive AI Platform is a game Changer. It revolutionizes education.\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"Curriculum Supported by Brane Education\",\r\n+\r\n+//       response:\r\n+//         \"we support multiple Boards let me say few Telangana State Board Andhra Pradesh Board Maharashtra Board Assam Board\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"Boards supported by the platform\",\r\n+\r\n+//       response:\r\n+//         \"we support multiple Boards let me say few Telangana State Board Andhra Pradesh Board Maharashtra Board Assam Board\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"Curriculum\",\r\n+\r\n+//       response:\r\n+//         \"we support multiple Boards let me say few Telangana State Board Andhra Pradesh Board Maharashtra Board Assam Board\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"Go to landing page\",\r\n+\r\n+//       response: \"Okay, I am taking you to the landing page.\",\r\n+\r\n+//       route: \"/childpage\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"take me to landing page\",\r\n+\r\n+//       response: \"Okay, I am taking you to the landing page.\",\r\n+\r\n+//       route: \"/childpage\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"move to landing page\",\r\n+\r\n+//       response: \"Okay, I am taking you to the landing page.\",\r\n+\r\n+//       route: \"/childpage\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"roll back to landing page\",\r\n+\r\n+//       response: \"Okay, I am taking you to the landing page.\",\r\n+\r\n+//       route: \"/childpage\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"move to landing page\",\r\n+\r\n+//       response: \"Okay, I am taking you to the landing page.\",\r\n+\r\n+//       route: \"/childpage\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"what is today's quote\",\r\n+\r\n+//       response:\r\n+//         \"Determination is the power that sees us through all our frustration and obstacles. It helps in building our willpower which is the very basis of success.\",\r\n+\r\n+//       route: \"/childpage\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"Today's Inspirational quote\",\r\n+\r\n+//       response:\r\n+//         \"Determination is the power that sees us through all our frustration and obstacles. It helps in building our willpower which is the very basis of success.\",\r\n+\r\n+//       route: \"/childpage\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"say me today's quote\",\r\n+\r\n+//       response:\r\n+//         \"Determination is the power that sees us through all our frustration and obstacles. It helps in building our willpower which is the very basis of success.\",\r\n+\r\n+//       route: \"/childpage\",\r\n+//     },\r\n+//     {\r\n+//       utterance: \"go back\",\r\n+//       response: \"\",\r\n+//       action: goBack, // Note the use of an action property\r\n+//     },\r\n+//     {\r\n+//       utterance: \"go forward\",\r\n+//       response: \"\",\r\n+//       action: goForward,\r\n+//     },\r\n+//     {\r\n+//       utterance: \"play video\",\r\n+//       // response: \"Playing video.\",\r\n+//       action: playVideo,\r\n+//     },\r\n+//     {\r\n+//       utterance: \"pause video\",\r\n+//       // response: \"Pausing video.\",\r\n+//       action: pauseVideo,\r\n+//     },\r\n+//     {\r\n+//       utterance: \"start video\",\r\n+//       // response: \"Playing video.\",\r\n+//       action: playVideo,\r\n+//     },\r\n+//     {\r\n+//       utterance: \"stop video\",\r\n+//       // response: \"Playing video.\",\r\n+//       action: pauseVideo,\r\n+//     },\r\n+//     {\r\n+//       utterance: \"scroll up\",\r\n+//       // response: \"Scrolling up.\",\r\n+//       action: scrollUp,\r\n+//     },\r\n+//     {\r\n+//       utterance: \"scroll down\",\r\n+//       // response: \"Scrolling down.\",\r\n+//       action: scrollDown,\r\n+//     },\r\n+//     {\r\n+//       utterance: \"go up\",\r\n+\r\n+//       // response: \"Scrolling up.\",\r\n+//       action: scrollUp,\r\n+//     },\r\n+//     {\r\n+//       utterance: \"go down\",\r\n+//       // response: \"Scrolling down.\",\r\n+//       action: scrollDown,\r\n+//     },\r\n+//     {\r\n+//       utterance: \"scroll to top\",\r\n+//       action: scrollToTop,\r\n+//     },\r\n+//     {\r\n+//       utterance: \"scroll to bottom\",\r\n+//       action: scrollToBottom,\r\n+//     },\r\n+//     {\r\n+//       utterance: \"brane stop\",\r\n+//       action: stopListening,\r\n+//     },\r\n+//     {\r\n+//       utterance: \"brane turn off\",\r\n+//       action: stopListening,\r\n+//     },\r\n+//     {\r\n+//       utterance: \"brane stop the bot\",\r\n+//       action: stopListening,\r\n+//     },\r\n+//   ];\r\n+\r\n+//   return (\r\n+//     <div className=\"speech-bot-container\">\r\n+//       <div\r\n+//         className={`button-container ${\r\n+//           isListening ? \"voicebotframeactive\" : \"voicebotframe\"\r\n+//         }`}\r\n+//       >\r\n+//         <button onClick={isListening ? stopListening : startListening}>\r\n+//           {isListening ? \"Stop\" : \"Start\"} Animation\r\n+//         </button>\r\n+//         {/* <button onClick={toggleBotActive}>\r\n+//         {isBotActive ? 'Deactivate Bot' : 'Activate Bot'}\r\n+//       </button> \r\n+//       </div>\r\n+//     </div>\r\n+//   );\r\n+// };\r\n+\r\n+// export default VoiceBot; */}\r\n+\r\n+\r\n+\r\n+//iska v1\r\n+\r\n+// import React, { useState, useEffect, useRef } from \"react\";\r\n+// import { useNavigate, useLocation } from \"react-router-dom\";\r\n+// import Fuse from \"fuse.js\";\r\n+// import \"./VoiceBot.css\";\r\n+\r\n+// const VoiceBot = ({ videoRef}) => {\r\n+//   const [isListening, setIsListening] = useState(false);\r\n+//   const [isSpeaking, setIsSpeaking] = useState(false);\r\n+//   const recognition = useRef(null);\r\n+//   const speechSynthesis = useRef(window.speechSynthesis);\r\n+//   const [hasGreeted, setHasGreeted] = useState(false);\r\n+//   const navigate = useNavigate();\r\n+\r\n+\r\n+//  // Initialize speech recognition\r\n+//  useEffect(() => {\r\n+//   recognition.current = new window.webkitSpeechRecognition();\r\n+//   recognition.current.continuous = true;\r\n+//   recognition.current.interimResults = false;\r\n+//   recognition.current.onresult = onResult;\r\n+//   recognition.current.onend = onRecognitionEnd;\r\n+//   recognition.current.starting = false;\r\n+\r\n+//   recognition.current.onerror = (event) => {\r\n+//     console.error(\"Recognition error:\", event.error);\r\n+//     if (isListening && !isSpeaking) {\r\n+//       restartRecognition();\r\n+//     }\r\n+//   };\r\n+\r\n+//   return () => {\r\n+//     if (recognition.current) {\r\n+//       recognition.current.abort();\r\n+//     }\r\n+//   };\r\n+// }, []);\r\n+\r\n+//   // useEffect(() => {\r\n+//   //   const checkRecognition = () => {\r\n+//   //     if (isListening && !isSpeaking && !recognition.current.starting) {\r\n+//   //       console.log(\"Restarting recognition because it's not active.\");\r\n+//   //       recognition.current.starting = true;\r\n+//   //       recognition.current.start();\r\n+//   //       console.log(\"Restarted recognition.\");\r\n+//   //     }\r\n+//   //   };\r\n+\r\n+//   //   const recognitionCheckInterval = setInterval(checkRecognition, 100); // Check every .5 second\r\n+\r\n+//   //   return () => {\r\n+//   //     clearInterval(recognitionCheckInterval);\r\n+//   //   };\r\n+//   // }, [isListening, isSpeaking]);\r\n+\r\n+\r\n+//   const historyStack = useRef([]);\r\n+\r\n+//   useEffect(() => {\r\n+//     return () => {\r\n+//       // Clean up the listener when the component unmounts\r\n+//       window.removeEventListener(\"popstate\", handlePopState);\r\n+//     };\r\n+//   }, []);\r\n+\r\n+//   const handlePopState = () => {\r\n+//     // This needs to handle both back and forward browser actions\r\n+//     // Use some logic to determine whether it's a back or forward action\r\n+//     // For simplicity, assume it's always back\r\n+//     historyStack.current.pop();\r\n+//     forwardStack.current.length = 0; // Clear forward stack on manual navigation\r\n+//   };\r\n+  \r\n+\r\n+//   // Add a new entry to the stack whenever navigate is called\r\n+//   const customNavigate = (to, options) => {\r\n+//     historyStack.current.push(to);\r\n+//     navigate(to, options);\r\n+//   };\r\n+\r\n+//   // Listen to popstate events to update the history stack\r\n+//   useEffect(() => {\r\n+//     window.addEventListener(\"popstate\", handlePopState);\r\n+//   }, []);\r\n+\r\n+//   const forwardStack = useRef([]);\r\n+\r\n+//   const goBack = () => {\r\n+//     if (window.history.state && window.history.state.idx > 0) {\r\n+//       window.history.back();\r\n+//       speak(\"Going back\");\r\n+//     } else {\r\n+//       speak(\"Can't go back any further.\");\r\n+//     }\r\n+//   };\r\n+\r\n+//   const goForward = () => {\r\n+//     if (window.history.state && window.history.state.idx < window.history.length - 1) {\r\n+//       window.history.forward();\r\n+//       speak(\"Going forward\");\r\n+//     } else {\r\n+//       speak(\"No forward history available.\");\r\n+//     }\r\n+//   };\r\n+\r\n+//   const playVideo = () => {\r\n+//     if (videoRef.current) {\r\n+//       videoRef.current.play();\r\n+//       speak(\"Playing video.\");\r\n+//     } else {\r\n+//       speak(\"No video to play.\");\r\n+//     }\r\n+//   };\r\n+\r\n+//   const pauseVideo = () => {\r\n+//     if (videoRef.current) {\r\n+//       videoRef.current.pause();\r\n+//       speak(\"Video paused.\");\r\n+//     } else {\r\n+//       speak(\"No video to pause.\");\r\n+//     }\r\n+//   };\r\n+\r\n+//   const scrollAmount = window.innerHeight * 0.82;\r\n+\r\n+//   const scrollUp = () => {\r\n+//     if (window.pageYOffset === 0) {\r\n+//       speak(\"Already at the top of the page.\");\r\n+//     } else {\r\n+//       window.scrollBy(0, -scrollAmount);\r\n+//       speak(\"Scrolled up.\");\r\n+//     }\r\n+//   };\r\n+\r\n+//   const scrollDown = () => {\r\n+//     const maxScrollTop =\r\n+//       document.documentElement.scrollHeight - window.innerHeight;\r\n+//     if (window.pageYOffset >= maxScrollTop) {\r\n+//       speak(\"Already at the bottom of the page.\");\r\n+//     } else {\r\n+//       window.scrollBy(0, scrollAmount);\r\n+//       speak(\"Scrolled down.\");\r\n+//     }\r\n+//   };\r\n+\r\n+//   const scrollToTop = () => {\r\n+//     if (window.pageYOffset === 0) {\r\n+//       speak(\"Already at the top of the page.\");\r\n+//     } else {\r\n+//       window.scrollTo(0, 0);\r\n+//       speak(\"Scrolled to the top of the page.\");\r\n+//     }\r\n+//   };\r\n+\r\n+//   const scrollToBottom = () => {\r\n+//     const maxScrollTop =\r\n+//       document.documentElement.scrollHeight - window.innerHeight;\r\n+//     if (window.pageYOffset >= maxScrollTop) {\r\n+//       speak(\"Already at the bottom of the page.\");\r\n+//     } else {\r\n+//       window.scrollTo(0, document.body.scrollHeight);\r\n+//       speak(\"Scrolled to the bottom of the page.\");\r\n+//     }\r\n+//   };\r\n+\r\n+//   const speak = (message) => {\r\n+//     const utterance = new SpeechSynthesisUtterance(message);\r\n+//     utterance.onend = () => {\r\n+//       setIsSpeaking(false);\r\n+//       // Restart recognition after speaking has ended\r\n+//       if (isListening) {\r\n+//         restartRecognition();\r\n+//       }\r\n+//     };\r\n+  \r\n+//     setIsSpeaking(true);\r\n+//     // Stop recognition when the bot starts speaking\r\n+//     if (recognition.current) {\r\n+//       recognition.current.abort();\r\n+//     }\r\n+//     speechSynthesis.current.speak(utterance);\r\n+//   };\r\n+  \r\n+\r\n+//   const restartRecognition = () => {\r\n+//     // Check if recognition is not already started and if the bot is set to listen\r\n+//     if (recognition.current && !recognition.current.starting && isListening && !isSpeaking) {\r\n+//       // Only start recognition if it's not already active\r\n+//       if (recognition.current.state !== 'active') {\r\n+//         recognition.current.abort(); // Ensure any ongoing recognition is stopped\r\n+//         recognition.current.starting = true;\r\n+//         recognition.current.start();\r\n+//       }\r\n+//     }\r\n+//   };\r\n+  \r\n+  \r\n+//     // Restart recognition when bot finishes speaking and isListening is true\r\n+//     useEffect(() => {\r\n+//       if (!isSpeaking && isListening) {\r\n+//         restartRecognition();\r\n+//       }\r\n+//     }, [isSpeaking, isListening]);\r\n+\r\n+//   const onResult = (event) => {\r\n+//     const resultIndex = event.resultIndex;\r\n+//     const transcript = event.results[resultIndex][0].transcript\r\n+//       .trim()\r\n+//       .toLowerCase();\r\n+\r\n+//     if (event.results[resultIndex].isFinal) {\r\n+//       console.log(`Recognized text: ${transcript}`);\r\n+//       if (transcript.includes(\"brain\")) {\r\n+//         console.log(\"Wake word heard, processing command...\");\r\n+//         handleCommandWithFuse(transcript.replace(\"brain\", \"\"));\r\n+//       }\r\n+//     }\r\n+//   };\r\n+\r\n+//   const onRecognitionEnd = () => {\r\n+//     recognition.current.starting = false;\r\n+//     if (isListening && !isSpeaking) {\r\n+//       restartRecognition();\r\n+//     }\r\n+//   };\r\n+\r\n+//   useEffect(() => {\r\n+//     if (isListening && !hasGreeted) {\r\n+//       speak(\"Hello, I'm Brane. How can I help you today?\");\r\n+//       setHasGreeted(true);\r\n+//     }\r\n+//   }, [isListening, hasGreeted]);\r\n+\r\n+\r\n+// // Updated startListening function\r\n+// const startListening = () => {\r\n+//   setIsListening(true);\r\n+//   if (recognition.current && !recognition.current.starting) {\r\n+//     recognition.current.start();\r\n+//   }\r\n+// };\r\n+\r\n+// // Updated stopListening function\r\n+// const stopListening = () => {\r\n+//   setIsListening(false);\r\n+//   setIsSpeaking(false); // Reset speaking state\r\n+//   setHasGreeted(false); // Reset greeting state if needed\r\n+//   if (recognition.current) {\r\n+//     recognition.current.abort(); // Stop any ongoing speech recognition\r\n+//   }\r\n+//   if (speechSynthesis.current.speaking) {\r\n+//     speechSynthesis.current.cancel(); // Stop any ongoing speech synthesis\r\n+//   }\r\n+// };\r\n+\r\n+\r\n+\r\n+//   const handleCommandWithFuse = (command) => {\r\n+//     const fuse = new Fuse(commands, { keys: [\"utterance\"], threshold: 0.4 });\r\n+//     const results = fuse.search(command);\r\n+//     const foundCommand = results.length ? results[0].item : null;\r\n+\r\n+//     if (foundCommand) {\r\n+//       console.log(\"Command found:\", foundCommand.utterance);\r\n+\r\n+//       if (foundCommand.action) {\r\n+//         foundCommand.action();\r\n+//       } else if (foundCommand.route) {\r\n+//         navigate(foundCommand.route);\r\n+//       }\r\n+\r\n+//       // Speak after performing the action or navigation\r\n+//       speak(foundCommand.response);\r\n+//     } else {\r\n+//       console.log(\"No command found.\");\r\n+//       speak(\"I'm not sure how to respond to that.\");\r\n+//     }\r\n+//   };\r\n+\r\n+//   const commands = [\r\n+//     {\r\n+//       utterance: \"Hello who are you ?\",\r\n+\r\n+//       response:\r\n+//         \"Hi! This is Brane! your Voice bot from Brane Education How can I Assist you Today ?\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"Hello\",\r\n+\r\n+//       response: \"Hi! How can I assist you today?\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"hello\",\r\n+\r\n+//       response: \"Hi! How can I assist you today?\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"Hi.\",\r\n+\r\n+//       response: \"Hello! How can I assist you today?\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"Hey there\",\r\n+\r\n+//       response: \"Hi! How can I assist you today?\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"Good morning Brane.\",\r\n+\r\n+//       response: \"Hey Hiii! Good morning  ! How can I help you?\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"Good afternoon Brane.\",\r\n+\r\n+//       response: \"Hey Hiii! Good after noon ! How can I help you?\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"Good evening Brane.\",\r\n+\r\n+//       response: \"Hey Hiii! Good evening ! How can I help you?\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"can you please take me to login page\",\r\n+\r\n+//       route: \"/login\",\r\n+\r\n+//       response: \"Here's the Login Page, Please Login\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"please take me to login page\",\r\n+\r\n+//       route: \"/login\",\r\n+\r\n+//       response: \"Here's the Login Page, Please Login\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"Go to login page\",\r\n+\r\n+//       route: \"/login\",\r\n+\r\n+//       response: \"Here's the Login Page, Please Login\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"open login page\",\r\n+\r\n+//       route: \"/login\",\r\n+\r\n+//       response: \"Here's the Login Page, Please Login\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"can you please take me to signup page\",\r\n+\r\n+//       route: \"/signup\",\r\n+\r\n+//       response: \"Here's the signup page. Please proceed With Registration.\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"take me to signup page\",\r\n+\r\n+//       route: \"/signup\",\r\n+\r\n+//       response: \"Here's the signup page. Please proceed With Registration.\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"Go to signup page\",\r\n+\r\n+//       route: \"/signup\",\r\n+\r\n+//       response: \"Here's the signup page. Please proceed With Registration.\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"open signup page\",\r\n+\r\n+//       route: \"/signup\",\r\n+\r\n+//       response: \"Here's the signup page. Please proceed With Registration.\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"Go to face id\",\r\n+\r\n+//       route: \"/login/faceid\",\r\n+\r\n+//       response: \"Here's Face ID Login. Please proceed.\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"Go to face id login\",\r\n+\r\n+//       route: \"/login/faceid\",\r\n+\r\n+//       response: \"Here's Face ID Login. Please proceed.\",\r\n+//     },\r\n+//     {\r\n+//       utterance: \"Go to face login\",\r\n+\r\n+//       route: \"/login/faceid\",\r\n+\r\n+//       response: \"Here's Face ID Login. Please proceed.\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"login with face id\",\r\n+\r\n+//       route: \"/login/faceid\",\r\n+\r\n+//       response: \"Here's Face ID Login. Please proceed.\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"login with face\",\r\n+\r\n+//       route: \"/login/faceid\",\r\n+\r\n+//       response: \"Here's Face ID Login. Please proceed.\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"i want to login with face\",\r\n+\r\n+//       route: \"/login/faceid\",\r\n+\r\n+//       response: \"Here's Face ID Login. Please proceed.\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"login with voice\",\r\n+\r\n+//       route: \"/login/voiceid\",\r\n+\r\n+//       response: \"Here's Voice Login. Please proceed.\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"i want to login with voice\",\r\n+\r\n+//       route: \"/login/voiceid\",\r\n+\r\n+//       response: \"Here's Voice Login. Please proceed.\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"go to voice login\",\r\n+\r\n+//       route: \"/login/voiceid\",\r\n+\r\n+//       response: \"Here's Voice Login. Please proceed.\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"login with voice\",\r\n+\r\n+//       route: \"/login/voiceid\",\r\n+\r\n+//       response: \"Here's Voice Login. Please proceed.\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"login with mobile\",\r\n+\r\n+//       route: \"/login/mobile\",\r\n+\r\n+//       response: \"Here's Mobile Login. Please proceed.\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"i want to login with mobile\",\r\n+\r\n+//       route: \"/login/mobile\",\r\n+\r\n+//       response: \"Here's Mobile Login. Please proceed.\",\r\n+//     },\r\n+//     {\r\n+//       utterance: \"go to mobile login\",\r\n+\r\n+//       route: \"/login/mobile\",\r\n+\r\n+//       response: \"Here's Mobile Login. Please proceed.\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"what are platform features\",\r\n+\r\n+//       response:\r\n+//         \"Dashboard, Dynamic time table, Learning Networks, Little Masters, Video Based Dictionary, General Search.\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"Features of platform\",\r\n+\r\n+//       response:\r\n+//         \"Dashboard, Dynamic time table, Learning Networks, Little Masters, Video Based Dictionary, General Search.\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"What does the platform offer\",\r\n+\r\n+//       response:\r\n+//         \"Dashboard, Dynamic time table, Learning Networks, Little Masters, Video Based Dictionary, General Search.\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"Say me the features of platform\",\r\n+\r\n+//       response:\r\n+//         \"Dashboard, Dynamic time table, Learning Networks, Little Masters, Video Based Dictionary, General Search.\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"Say me the services of platform\",\r\n+\r\n+//       response:\r\n+//         \"Dashboard, Dynamic time table, Learning Networks, Little Masters, Video Based Dictionary, General Search.\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"tell me the services offered by the platform\",\r\n+\r\n+//       response:\r\n+//         \"Dashboard, Dynamic time table, Learning Networks, Little Masters, Video Based Dictionary, General Search.\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"explain platform services\",\r\n+\r\n+//       response:\r\n+//         \"Dashboard, Dynamic time table, Learning Networks, Little Masters, Video Based Dictionary, General Search.\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"Give me the Parent voice of Julia Harris\",\r\n+\r\n+//       response:\r\n+//         \"Brane education has helped my son a lot in his studies. He improved a lot in his studies and is now able to score good marks in his exams\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"Play today's motivational video\",\r\n+\r\n+//       response: \"I am playing the video\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"Play today's video\",\r\n+\r\n+//       response: \"I am playing Motivational video\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"Leaders Voice\",\r\n+\r\n+//       response:\r\n+//         \"This Voice-interactive AI Platform is a game Changer. It revolutionizes education.\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"Curriculum Supported by Brane Education\",\r\n+\r\n+//       response:\r\n+//         \"we support multiple Boards let me say few Telangana State Board Andhra Pradesh Board Maharashtra Board Assam Board\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"Boards supported by the platform\",\r\n+\r\n+//       response:\r\n+//         \"we support multiple Boards let me say few Telangana State Board Andhra Pradesh Board Maharashtra Board Assam Board\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"Curriculum\",\r\n+\r\n+//       response:\r\n+//         \"we support multiple Boards let me say few Telangana State Board Andhra Pradesh Board Maharashtra Board Assam Board\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"Go to landing page\",\r\n+\r\n+//       response: \"Okay, I am taking you to the landing page.\",\r\n+\r\n+//       route: \"/childpage\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"take me to landing page\",\r\n+\r\n+//       response: \"Okay, I am taking you to the landing page.\",\r\n+\r\n+//       route: \"/childpage\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"move to landing page\",\r\n+\r\n+//       response: \"Okay, I am taking you to the landing page.\",\r\n+\r\n+//       route: \"/childpage\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"roll back to landing page\",\r\n+\r\n+//       response: \"Okay, I am taking you to the landing page.\",\r\n+\r\n+//       route: \"/childpage\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"move to landing page\",\r\n+\r\n+//       response: \"Okay, I am taking you to the landing page.\",\r\n+\r\n+//       route: \"/childpage\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"what is today's quote\",\r\n+\r\n+//       response:\r\n+//         \"Determination is the power that sees us through all our frustration and obstacles. It helps in building our willpower which is the very basis of success.\",\r\n+\r\n+//       route: \"/childpage\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"Today's Inspirational quote\",\r\n+\r\n+//       response:\r\n+//         \"Determination is the power that sees us through all our frustration and obstacles. It helps in building our willpower which is the very basis of success.\",\r\n+\r\n+//       route: \"/childpage\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"say me today's quote\",\r\n+\r\n+//       response:\r\n+//         \"Determination is the power that sees us through all our frustration and obstacles. It helps in building our willpower which is the very basis of success.\",\r\n+\r\n+//       route: \"/childpage\",\r\n+//     },\r\n+//     {\r\n+//       utterance: \"go back\",\r\n+//       response: \"\",\r\n+//       action: goBack, // Note the use of an action property\r\n+//     },\r\n+//     {\r\n+//       utterance: \"go forward\",\r\n+//       response: \"\",\r\n+//       action: goForward,\r\n+//     },\r\n+//     {\r\n+//       utterance: \"play video\",\r\n+//       // response: \"Playing video.\",\r\n+//       action: playVideo,\r\n+//     },\r\n+//     {\r\n+//       utterance: \"pause video\",\r\n+//       // response: \"Pausing video.\",\r\n+//       action: pauseVideo,\r\n+//     },\r\n+//     {\r\n+//       utterance: \"start video\",\r\n+//       // response: \"Playing video.\",\r\n+//       action: playVideo,\r\n+//     },\r\n+//     {\r\n+//       utterance: \"stop video\",\r\n+//       // response: \"Playing video.\",\r\n+//       action: pauseVideo,\r\n+//     },\r\n+//     {\r\n+//       utterance: \"scroll up\",\r\n+//       // response: \"Scrolling up.\",\r\n+//       action: scrollUp,\r\n+//     },\r\n+//     {\r\n+//       utterance: \"scroll down\",\r\n+//       // response: \"Scrolling down.\",\r\n+//       action: scrollDown,\r\n+//     },\r\n+//     {\r\n+//       utterance: \"go up\",\r\n+\r\n+//       // response: \"Scrolling up.\",\r\n+//       action: scrollUp,\r\n+//     },\r\n+//     {\r\n+//       utterance: \"go down\",\r\n+//       // response: \"Scrolling down.\",\r\n+//       action: scrollDown,\r\n+//     },\r\n+//     {\r\n+//       utterance: \"scroll to top\",\r\n+//       action: scrollToTop,\r\n+//     },\r\n+//     {\r\n+//       utterance: \"scroll to bottom\",\r\n+//       action: scrollToBottom,\r\n+//     },\r\n+//     {\r\n+//       utterance: \"brane stop\",\r\n+//       action: stopListening,\r\n+//     },\r\n+//     {\r\n+//       utterance: \"brane turn off\",\r\n+//       action: stopListening,\r\n+//     },\r\n+//     {\r\n+//       utterance: \"brane stop the bot\",\r\n+//       action: stopListening,\r\n+//     },\r\n+//   ];\r\n+\r\n+//   return (\r\n+//     <div className=\"speech-bot-container\">\r\n+//       <div\r\n+//         className={`button-container ${\r\n+//           isListening ? \"voicebotframeactive\" : \"voicebotframe\"\r\n+//         }`}\r\n+//       >\r\n+//         <button onClick={isListening ? stopListening : startListening}>\r\n+//           {isListening ? \"Stop\" : \"Start\"} Animation\r\n+//         </button>\r\n+//         {/* <button onClick={toggleBotActive}>\r\n+//         {isBotActive ? 'Deactivate Bot' : 'Activate Bot'}\r\n+//       </button> */}\r\n+//       </div>\r\n+//     </div>\r\n+//   );\r\n+// };\r\n+\r\n+// export default VoiceBot;\r\n+\r\n+\r\n+\r\n+\r\n+\r\n+\r\n+\r\n+\r\n+\r\n+\r\n+\r\n+\r\n+\r\n+\r\n+\r\n+\r\n+\r\n+\r\n+\r\n+\r\n+\r\n+\r\n+\r\n+\r\n+\r\n+\r\n+\r\n+\r\n+\r\n+\r\n+//Bot Video added but some start issues\r\n+\r\n+// import React, { useState, useEffect, useRef } from \"react\";\r\n+// import { useNavigate, useLocation } from \"react-router-dom\";\r\n+// import Fuse from \"fuse.js\";\r\n+// import \"./VoiceBot.css\";\r\n+\r\n+// const VoiceBot = ({ videoRef }) => {\r\n+//   const [isListening, setIsListening] = useState(false);\r\n+//   const [isSpeaking, setIsSpeaking] = useState(false);\r\n+//   const recognition = useRef(null);\r\n+//   const speechSynthesis = useRef(window.speechSynthesis);\r\n+//   const hasGreeted = useRef(false);\r\n+//   const restartRecognitionTimeout = useRef(null);\r\n+//   const navigate = useNavigate();\r\n+//   const location = useLocation();\r\n+//   const [isRecognitionActive, setIsRecognitionActive] = useState(false); // New state to track recognition status\r\n+\r\n+//   useEffect(() => {\r\n+//     recognition.current = new window.webkitSpeechRecognition();\r\n+//     recognition.current.continuous = true;\r\n+//     recognition.current.interimResults = false;\r\n+//     recognition.current.onresult = onResult;\r\n+//     recognition.current.onend = () => {\r\n+//       console.log(\"Recognition ended.\");\r\n+//       if (isListening) {\r\n+//         startListening();\r\n+//       }\r\n+//     };\r\n+//     recognition.current.onerror = (event) => {\r\n+//       console.error(\"Recognition error:\", event.error);\r\n+//     };\r\n+\r\n+//     return () => {\r\n+//       recognition.current.abort();\r\n+//     };\r\n+//   }, []);\r\n+\r\n+//   // Update useEffect for managing the recognition state based on isListening and isRecognitionActive\r\n+//   useEffect(() => {\r\n+//     if (isListening && !isRecognitionActive) {\r\n+//       startListening();\r\n+//     } else if (!isListening && isRecognitionActive) {\r\n+//       stopListening();\r\n+//     }\r\n+//   }, [isListening, isRecognitionActive]);\r\n+\r\n+//   const goBack = () => {\r\n+//     if (window.history.length > 1) {\r\n+//       navigate(-1);\r\n+//     } else {\r\n+//       speak(\"Can't go back any further.\");\r\n+//     }\r\n+//   };\r\n+\r\n+//   const goForward = () => {\r\n+//     // Unfortunately, there's no direct way to check if you can go forward in the history.\r\n+//     // You might need to manage this state manually based on user navigation.\r\n+//     navigate(1);\r\n+//   };\r\n+\r\n+//   const playVideo = () => {\r\n+//     if (videoRef.current && !videoRef.current.paused) {\r\n+//       speak(\"Video is already playing.\");\r\n+//     } else if (videoRef.current) {\r\n+//       videoRef.current.play();\r\n+//       speak(\"Playing video.\");\r\n+//     } else {\r\n+//       speak(\"No video to play.\");\r\n+//     }\r\n+//   };\r\n+\r\n+//   const pauseVideo = () => {\r\n+//     if (videoRef.current && videoRef.current.paused) {\r\n+//       speak(\"Video is already paused.\");\r\n+//     } else if (videoRef.current) {\r\n+//       videoRef.current.pause();\r\n+//       speak(\"Video paused.\");\r\n+//     } else {\r\n+//       speak(\"No video to pause.\");\r\n+//     }\r\n+//   };\r\n+\r\n+//   const scrollAmount = window.innerHeight * 0.82;\r\n+\r\n+//   const scrollUp = () => {\r\n+//     if (window.pageYOffset === 0) {\r\n+//       speak(\"Already at the top of the page.\");\r\n+//     } else {\r\n+//       window.scrollBy(0, -scrollAmount);\r\n+//       speak(\"Scrolled up.\");\r\n+//     }\r\n+//   };\r\n+\r\n+//   const scrollDown = () => {\r\n+//     const maxScrollTop =\r\n+//       document.documentElement.scrollHeight - window.innerHeight;\r\n+//     if (window.pageYOffset >= maxScrollTop) {\r\n+//       speak(\"Already at the bottom of the page.\");\r\n+//     } else {\r\n+//       window.scrollBy(0, scrollAmount);\r\n+//       speak(\"Scrolled down.\");\r\n+//     }\r\n+//   };\r\n+\r\n+//   const scrollToTop = () => {\r\n+//     if (window.pageYOffset === 0) {\r\n+//       speak(\"Already at the top of the page.\");\r\n+//     } else {\r\n+//       window.scrollTo(0, 0);\r\n+//       speak(\"Scrolled to the top of the page.\");\r\n+//     }\r\n+//   };\r\n+\r\n+//   const scrollToBottom = () => {\r\n+//     const maxScrollTop =\r\n+//       document.documentElement.scrollHeight - window.innerHeight;\r\n+//     if (window.pageYOffset >= maxScrollTop) {\r\n+//       speak(\"Already at the bottom of the page.\");\r\n+//     } else {\r\n+//       window.scrollTo(0, document.body.scrollHeight);\r\n+//       speak(\"Scrolled to the bottom of the page.\");\r\n+//     }\r\n+//   };\r\n+\r\n+//   // const speak = (message) => {\r\n+//   //   const utterance = new SpeechSynthesisUtterance(message);\r\n+//   //   utterance.onend = () => {\r\n+//   //     setIsSpeaking(false);\r\n+//   //     console.log(\"Speaking ended.\");\r\n+//   //     // Only restart recognition if we're still supposed to be listening\r\n+//   //     // if (isListening) {\r\n+//   //     //   if (restartRecognitionTimeout.current) {\r\n+//   //     //     clearTimeout(restartRecognitionTimeout.current);\r\n+//   //     //   }\r\n+//   //     //   restartRecognitionTimeout.current = setTimeout(() => {\r\n+//   //     //     console.log(\"Recognition restarted.\");\r\n+//   //     //     recognition.current.start();\r\n+//   //     //   }, 100); // Delay to prevent immediate restart\r\n+//   //     // }\r\n+//   //     if (isListening && !recognition.current.starting) { // Check the flag before restarting\r\n+//   //       recognition.current.starting = true; // Set the flag when starting recognition\r\n+//   //       recognition.current.start();\r\n+//   //     }\r\n+//   //   };\r\n+\r\n+//   //   setIsSpeaking(true);\r\n+//   //   console.log(\"Speaking started.\");\r\n+//   //   recognition.current.stop(); // Stop recognition when the bot starts speaking\r\n+//   //   speechSynthesis.current.speak(utterance);\r\n+//   // };\r\n+\r\n+//   const speak = (message) => {\r\n+//     console.log(\"speak function called with message:\", message);\r\n+//     const utterance = new SpeechSynthesisUtterance(message);\r\n+//     utterance.onend = () => {\r\n+//       setIsSpeaking(false);\r\n+//       console.log(\"Speaking ended.\");\r\n+//       // Directly handle the restart of recognition here if needed\r\n+//       if (isListening) {\r\n+//         startListening();\r\n+//       }\r\n+//     };\r\n+\r\n+//     setIsSpeaking(true);\r\n+//     console.log(\"Speaking started.\");\r\n+//     recognition.current.stop(); // Ensure to stop recognition before speaking\r\n+//     speechSynthesis.current.speak(utterance);\r\n+//   };\r\n+\r\n+//   const onResult = (event) => {\r\n+//     const resultIndex = event.resultIndex;\r\n+//     const transcript = event.results[resultIndex][0].transcript\r\n+//       .trim()\r\n+//       .toLowerCase();\r\n+\r\n+//     if (event.results[resultIndex].isFinal) {\r\n+//       console.log(`Recognized text: ${transcript}`);\r\n+//       if (transcript.includes(\"brain\")) {\r\n+//         console.log(\"Wake word heard, processing command...\");\r\n+//         handleCommandWithFuse(transcript.replace(\"brain\", \"\"));\r\n+//       }\r\n+//     }\r\n+//   };\r\n+\r\n+//   // const onRecognitionEnd = () => {\r\n+//   //   console.log(\"Recognition ended.\");\r\n+//   //   setIsRecognitionActive(false); // Update state when recognition ends\r\n+//   //   recognition.current.starting = false; // Reset the flag when recognition ends\r\n+//   //   // We now check if the recognition is already running before starting it again\r\n+//   //   if (isListening && !isSpeaking && !recognition.current?.starting) {\r\n+//   //     console.log(\"Restarting recognition.\");\r\n+//   //     recognition.current.start();\r\n+//   //   }\r\n+//   // };\r\n+\r\n+//   // useEffect(() => {\r\n+//   //   if (isListening && !hasGreeted.current) {\r\n+//   //     speak(\"Hello, I'm Brane. How can I assist you today?\");\r\n+//   //     hasGreeted.current = true;\r\n+//   //   } else if (isListening && !isSpeaking) {\r\n+//   //     recognition.current.start();\r\n+//   //   }\r\n+//   // }, [isListening, isSpeaking]);\r\n+\r\n+//   useEffect(() => {\r\n+//     if (isListening && !hasGreeted.current) {\r\n+//       speak(\"Hello, I'm Brane. How can I assist you today?\");\r\n+//       hasGreeted.current = true;\r\n+//     } else if (isListening && !isSpeaking && !recognition.current.starting) {\r\n+//       // Check the flag before starting\r\n+//       recognition.current.starting = true; // Set the flag when starting recognition\r\n+//       recognition.current.start();\r\n+//     }\r\n+//   }, [isListening, isSpeaking]);\r\n+\r\n+//   // const startListening = () => {\r\n+//   //   console.log(\"Attempting to start listening.\");\r\n+//   //   if (recognition.current && !recognition.current.starting) {\r\n+//   //     setIsListening(true);\r\n+//   //     recognition.current.starting = true; // Set the flag when starting recognition\r\n+//   //     recognition.current.start();\r\n+//   //     console.log(\"Listening started.\");\r\n+//   //   }\r\n+//   // };\r\n+\r\n+//   // const stopListening = () => {\r\n+//   //   console.log(\"Stopping listening.\");\r\n+\r\n+//   //   setIsListening(false);\r\n+//   //   recognition.current.stop();\r\n+//   //   if (speechSynthesis.current.speaking) {\r\n+//   //     speechSynthesis.current.cancel();\r\n+//   //   }\r\n+//   //   if (restartRecognitionTimeout.current) {\r\n+//   //     clearTimeout(restartRecognitionTimeout.current);\r\n+//   //   }\r\n+//   //   console.log(\"Listening stopped.\");\r\n+//   // };\r\n+//   // Handle start and stop listening logic\r\n+//   const startListening = () => {\r\n+//     console.log(\"Attempting to start listening.\");\r\n+//     if (!recognition.current.starting) {\r\n+//       setIsListening(true);\r\n+//       recognition.current.starting = true;\r\n+//       recognition.current.start();\r\n+//       console.log(\"Listening started.\");\r\n+//     } else {\r\n+//       console.log(\"Recognition already active.\");\r\n+//     }\r\n+//   };\r\n+\r\n+//   const stopListening = () => {\r\n+//     console.log(\"Stopping listening.\");\r\n+//     if (recognition.current.starting) {\r\n+//       setIsListening(false);\r\n+//       recognition.current.starting = false;\r\n+//       recognition.current.stop();\r\n+//       console.log(\"Listening stopped.\");\r\n+//     } else {\r\n+//       console.log(\"Recognition already inactive.\");\r\n+//     }\r\n+//   };\r\n+\r\n+//   // const handleCommandWithFuse = (command) => {\r\n+//   //   const fuse = new Fuse(commands, { keys: [\"utterance\"], threshold: 0.4 });\r\n+//   //   const results = fuse.search(command);\r\n+//   //   const foundCommand = results.length ? results[0].item : null;\r\n+\r\n+//   //   if (foundCommand) {\r\n+//   //     console.log(\"Command found:\", foundCommand.utterance);\r\n+//   //     speak(foundCommand.response);\r\n+//   //     if (foundCommand.route) {\r\n+//   //       navigate(foundCommand.route); // Navigate to the route specified in the command\r\n+//   //     }\r\n+//   //   } else {\r\n+//   //     console.log(\"No command found.\");\r\n+//   //     speak(\"I'm not sure how to respond to that.\");\r\n+//   //   }\r\n+//   // };\r\n+\r\n+//   const handleCommandWithFuse = (command) => {\r\n+//     const fuse = new Fuse(commands, { keys: [\"utterance\"], threshold: 0.4 });\r\n+//     const results = fuse.search(command);\r\n+//     const foundCommand = results.length ? results[0].item : null;\r\n+\r\n+//     if (foundCommand) {\r\n+//       console.log(\"Command found:\", foundCommand.utterance);\r\n+\r\n+//       if (foundCommand.route) {\r\n+//         if (location.pathname !== foundCommand.route) {\r\n+//           navigate(foundCommand.route);\r\n+//           speak(\r\n+//             `Navigating to ${\r\n+//               foundCommand.routeDescription || \"requested page\"\r\n+//             }.`\r\n+//           );\r\n+//         } else {\r\n+//           speak(\r\n+//             `You are already on the ${\r\n+//               foundCommand.routeDescription || \"requested page\"\r\n+//             }.`\r\n+//           );\r\n+//         }\r\n+//       } else if (foundCommand.action) {\r\n+//         foundCommand.action();\r\n+//       }\r\n+\r\n+//       if (foundCommand.response) {\r\n+//         speak(foundCommand.response);\r\n+//       }\r\n+//     } else {\r\n+//       console.log(\"No command found.\");\r\n+//       speak(\"I'm not sure how to respond to that.\");\r\n+//     }\r\n+//   };\r\n+\r\n+//   const commands = [\r\n+//     {\r\n+//       utterance: \"Hello who are you ?\",\r\n+\r\n+//       response:\r\n+//         \"Hi! This is Brane! your Voice bot from Brane Education How can I Assist you Today ?\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"Hello\",\r\n+\r\n+//       response: \"Hi! How can I assist you today?\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"hello\",\r\n+\r\n+//       response: \"Hi! How can I assist you today?\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"Hi.\",\r\n+\r\n+//       response: \"Hello! How can I assist you today?\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"Hey there\",\r\n+\r\n+//       response: \"Hi! How can I assist you today?\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"Good morning Brane.\",\r\n+\r\n+//       response: \"Hey Hiii! Good morning  ! How can I help you?\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"Good afternoon Brane.\",\r\n+\r\n+//       response: \"Hey Hiii! Good after noon ! How can I help you?\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"Good evening Brane.\",\r\n+\r\n+//       response: \"Hey Hiii! Good evening ! How can I help you?\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"can you please take me to login page\",\r\n+//       route: \"/login\",\r\n+//       routeDescription: \"login page\",\r\n+//       response: \"Navigating to the login page.\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"go to login page\",\r\n+//       route: \"/login\",\r\n+//       routeDescription: \"login page\",\r\n+//       response: \"Navigating to the login page.\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"please take me to login page\",\r\n+//       route: \"/login\",\r\n+//       routeDescription: \"login page\",\r\n+//       response: \"Navigating to the login page.\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"Go to login page\",\r\n+//       route: \"/login\",\r\n+//       routeDescription: \"login page\",\r\n+//       response: \"Navigating to the login page.\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"open login page\",\r\n+//       route: \"/login\",\r\n+//       routeDescription: \"login page\",\r\n+//       response: \"Navigating to the login page.\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"can you please take me to signup page\",\r\n+//       route: \"/signup\",\r\n+//       routeDescription: \"signup page\",\r\n+//       response: \"Navigating to the signup page.\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"take me to signup page\",\r\n+//       route: \"/signup\",\r\n+//       routeDescription: \"signup page\",\r\n+//       response: \"Navigating to the signup page.\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"Go to signup page\",\r\n+//       route: \"/signup\",\r\n+//       routeDescription: \"signup page\",\r\n+//       response: \"Navigating to the signup page.\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"open signup page\",\r\n+//       route: \"/signup\",\r\n+//       routeDescription: \"signup page\",\r\n+//       response: \"Navigating to the signup page.\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"what are platform features\",\r\n+\r\n+//       response:\r\n+//         \"Dashboard, Dynamic time table, Learning Networks, Little Masters, Video Based Dictionary, General Search.\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"Features of platform\",\r\n+\r\n+//       response:\r\n+//         \"Dashboard, Dynamic time table, Learning Networks, Little Masters, Video Based Dictionary, General Search.\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"What does the platform offer\",\r\n+\r\n+//       response:\r\n+//         \"Dashboard, Dynamic time table, Learning Networks, Little Masters, Video Based Dictionary, General Search.\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"Say me the features of platform\",\r\n+\r\n+//       response:\r\n+//         \"Dashboard, Dynamic time table, Learning Networks, Little Masters, Video Based Dictionary, General Search.\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"Say me the services of platform\",\r\n+\r\n+//       response:\r\n+//         \"Dashboard, Dynamic time table, Learning Networks, Little Masters, Video Based Dictionary, General Search.\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"tell me the services offered by the platform\",\r\n+\r\n+//       response:\r\n+//         \"Dashboard, Dynamic time table, Learning Networks, Little Masters, Video Based Dictionary, General Search.\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"explain platform services\",\r\n+\r\n+//       response:\r\n+//         \"Dashboard, Dynamic time table, Learning Networks, Little Masters, Video Based Dictionary, General Search.\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"Give me the Parent voice of Julia Harris\",\r\n+\r\n+//       response:\r\n+//         \"Brane education has helped my son a lot in his studies. He improved a lot in his studies and is now able to score good marks in his exams\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"Play today's motivational video\",\r\n+\r\n+//       response: \"I am playing the video\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"Play today's video\",\r\n+\r\n+//       response: \"I am playing Motivational video\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"Leaders Voice\",\r\n+\r\n+//       response:\r\n+//         \"This Voice-interactive AI Platform is a game Changer. It revolutionizes education.\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"Curriculum Supported by Brane Education\",\r\n+\r\n+//       response:\r\n+//         \"we support multiple Boards let me say few Telangana State Board Andhra Pradesh Board Maharashtra Board Assam Board\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"Boards supported by the platform\",\r\n+\r\n+//       response:\r\n+//         \"we support multiple Boards let me say few Telangana State Board Andhra Pradesh Board Maharashtra Board Assam Board\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"Curriculum\",\r\n+\r\n+//       response:\r\n+//         \"we support multiple Boards let me say few Telangana State Board Andhra Pradesh Board Maharashtra Board Assam Board\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"Go to landing page\",\r\n+\r\n+//       response: \"Okay, I am taking you to the landing page.\",\r\n+\r\n+//       route: \"/childpage\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"take me to landing page\",\r\n+\r\n+//       response: \"Okay, I am taking you to the landing page.\",\r\n+\r\n+//       route: \"/childpage\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"move to landing page\",\r\n+\r\n+//       response: \"Okay, I am taking you to the landing page.\",\r\n+\r\n+//       route: \"/childpage\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"roll back to landing page\",\r\n+\r\n+//       response: \"Okay, I am taking you to the landing page.\",\r\n+\r\n+//       route: \"/childpage\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"move to landing page\",\r\n+\r\n+//       response: \"Okay, I am taking you to the landing page.\",\r\n+\r\n+//       route: \"/childpage\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"what is today's quote\",\r\n+\r\n+//       response:\r\n+//         \"Determination is the power that sees us through all our frustration and obstacles. It helps in building our willpower which is the very basis of success.\",\r\n+\r\n+//       // route: \"/childpage\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"Today's Inspirational quote\",\r\n+\r\n+//       response:\r\n+//         \"Determination is the power that sees us through all our frustration and obstacles. It helps in building our willpower which is the very basis of success.\",\r\n+\r\n+//       // route: \"/childpage\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"say me today's quote\",\r\n+\r\n+//       response:\r\n+//         \"Determination is the power that sees us through all our frustration and obstacles. It helps in building our willpower which is the very basis of success.\",\r\n+\r\n+//       // route: \"/childpage\",\r\n+//     },\r\n+//     {\r\n+//       utterance: \"go back\",\r\n+//       response: \"Going back.\",\r\n+//       action: goBack, // Note the use of an action property\r\n+//     },\r\n+//     {\r\n+//       utterance: \"go forward\",\r\n+//       response: \"Going forward.\",\r\n+//       action: goForward,\r\n+//     },\r\n+//     {\r\n+//       utterance: \"play video\",\r\n+//       // response: \"Playing video.\",\r\n+//       action: playVideo,\r\n+//     },\r\n+//     {\r\n+//       utterance: \"pause video\",\r\n+//       // response: \"Pausing video.\",\r\n+//       action: pauseVideo,\r\n+//     },\r\n+//     {\r\n+//       utterance: \"start video\",\r\n+//       // response: \"Playing video.\",\r\n+//       action: playVideo,\r\n+//     },\r\n+//     {\r\n+//       utterance: \"stop video\",\r\n+//       // response: \"Playing video.\",\r\n+//       action: pauseVideo,\r\n+//     },\r\n+//     {\r\n+//       utterance: \"scroll up\",\r\n+//       // response: \"Scrolling up.\",\r\n+//       action: scrollUp,\r\n+//     },\r\n+//     {\r\n+//       utterance: \"scroll down\",\r\n+//       // response: \"Scrolling down.\",\r\n+//       action: scrollDown,\r\n+//     },\r\n+//     {\r\n+//       utterance: \"go up\",\r\n+\r\n+//       // response: \"Scrolling up.\",\r\n+//       action: scrollUp,\r\n+//     },\r\n+//     {\r\n+//       utterance: \"go down\",\r\n+//       // response: \"Scrolling down.\",\r\n+//       action: scrollDown,\r\n+//     },\r\n+//     {\r\n+//       utterance: \"scroll to top\",\r\n+//       action: scrollToTop,\r\n+//     },\r\n+//     {\r\n+//       utterance: \"scroll to bottom\",\r\n+//       action: scrollToBottom,\r\n+//     },\r\n+//   ];\r\n+//   return (\r\n+//     <div className=\"speech-bot-container\">\r\n+//       <div\r\n+//         className={`button-container ${\r\n+//           isListening ? \"voicebotframeactive\" : \"voicebotframe\"\r\n+//         }`}\r\n+//       >\r\n+//         <div onClick={isListening ? stopListening : startListening}>\r\n+//           <iframe\r\n+//             src={\r\n+//               isListening\r\n+//                 ? \"https://lottie.host/?file=a89aca3f-5407-4052-82c3-2048afca7a9f/NpCdWzLSKD.json\"\r\n+//                 : \"https://lottie.host/?file=d2b6cc0e-fe95-4847-85b5-35365fca7e00/vTudpCuPZq.json\"\r\n+//             }\r\n+//             width=\"120\" // Set your desired width\r\n+//             height=\"120\" // Set your desired height\r\n+//             title={isListening ? \"Stop Animation\" : \"Start Animation\"}\r\n+//             className={isListening ? \"voicebotframeactive\" : \"voicebotframe\"}\r\n+//           ></iframe>\r\n+//           {isListening ? (\r\n+//             <div className=\"overlay\" onClick={stopListening}></div>\r\n+//           ) : (\r\n+//             <div className=\"overlay\" onClick={startListening}></div>\r\n+//           )}\r\n+//         </div>\r\n+//       </div>\r\n+//     </div>\r\n+//   );\r\n+// };\r\n+\r\n+// export default VoiceBot;\r\n+\r\n+// All functionalities but messed up\r\n+\r\n+// import React, { useState, useEffect, useRef } from \"react\";\r\n+// import { useNavigate, useLocation } from \"react-router-dom\";\r\n+// import Fuse from \"fuse.js\";\r\n+// import \"./VoiceBot.css\";\r\n+\r\n+// const VoiceBot = ({ videoRef, takeTestRef, goBackRef }) => {\r\n+//   const [isListening, setIsListening] = useState(false);\r\n+//   const [isSpeaking, setIsSpeaking] = useState(false);\r\n+//   const recognition = useRef(null);\r\n+//   const speechSynthesis = useRef(window.speechSynthesis);\r\n+//   const hasGreeted = useRef(false);\r\n+//   const navigate = useNavigate();\r\n+//   const location = useLocation();\r\n+//   const isRecognitionActive = useRef(false);\r\n+\r\n+//   useEffect(() => {\r\n+//     recognition.current = new window.webkitSpeechRecognition();\r\n+//     recognition.current.continuous = true;\r\n+//     recognition.current.interimResults = false;\r\n+//     recognition.current.onresult = onResult;\r\n+//     recognition.current.onend = onRecognitionEnd;\r\n+\r\n+//     return () => {\r\n+//       if (recognition.current) {\r\n+//         recognition.current.abort();\r\n+//       }\r\n+//     };\r\n+//   }, [location.pathname]);\r\n+\r\n+//   const onResult = (event) => {\r\n+//     const resultIndex = event.resultIndex;\r\n+//     const transcript = event.results[resultIndex][0].transcript\r\n+//       .trim()\r\n+//       .toLowerCase();\r\n+\r\n+//     if (event.results[resultIndex].isFinal) {\r\n+//       console.log(`Recognized text: ${transcript}`);\r\n+//       if (transcript.includes(\"brain\")) {\r\n+//         console.log(\"Wake word heard, processing command...\");\r\n+//         handleCommandWithFuse(transcript.replace(\"brain\", \"\"));\r\n+//       }\r\n+//     }\r\n+//   };\r\n+\r\n+//   const startListening = () => {\r\n+//     if (!isRecognitionActive.current) {\r\n+//       setIsListening(true);\r\n+//       recognition.current.start();\r\n+//       isRecognitionActive.current = true;\r\n+//     }\r\n+//   };\r\n+\r\n+//   const stopListening = () => {\r\n+//     if (isRecognitionActive.current) {\r\n+//       setIsListening(false);\r\n+//       recognition.current.stop();\r\n+//       isRecognitionActive.current = false;\r\n+//     }\r\n+//   };\r\n+\r\n+//   const onRecognitionEnd = () => {\r\n+//     isRecognitionActive.current = false;\r\n+//     if (isListening) {\r\n+//       startListening();\r\n+//     }\r\n+//   };\r\n+\r\n+//   const speak = (message) => {\r\n+//     const utterance = new SpeechSynthesisUtterance(message);\r\n+//     utterance.onend = () => {\r\n+//       setIsSpeaking(false);\r\n+//       if (isListening && !isRecognitionActive.current) {\r\n+//         startListening();\r\n+//       }\r\n+//     };\r\n+\r\n+//     setIsSpeaking(true);\r\n+//     if (isRecognitionActive.current) {\r\n+//       stopListening(); // Adjusted to use stopListening\r\n+//     }\r\n+//     speechSynthesis.current.speak(utterance);\r\n+//   };\r\n+\r\n+//   useEffect(() => {\r\n+//     if (isListening && !hasGreeted.current) {\r\n+//       speak(\"Hello, I'm Brane. How can I assist you today?\");\r\n+//       hasGreeted.current = true;\r\n+//     }\r\n+//   }, [isListening]);\r\n+\r\n+//   const goBack = () => {\r\n+//     if (window.history.length > 1) {\r\n+//       navigate(-1);\r\n+//     } else {\r\n+//       speak(\"Can't go back any further.\");\r\n+//     }\r\n+//   };\r\n+\r\n+//   const goForward = () => {\r\n+//     // Unfortunately, there's no direct way to check if you can go forward in the history.\r\n+//     // You might need to manage this state manually based on user navigation.\r\n+//     navigate(1);\r\n+//   };\r\n+\r\n+//   const playVideo = () => {\r\n+//     if (videoRef.current && !videoRef.current.paused) {\r\n+//       speak(\"Video is already playing.\");\r\n+//     } else if (videoRef.current) {\r\n+//       videoRef.current.play();\r\n+//       speak(\"Playing video.\");\r\n+//     } else {\r\n+//       speak(\"No video to play.\");\r\n+//     }\r\n+//   };\r\n+\r\n+//   const pauseVideo = () => {\r\n+//     if (videoRef.current && videoRef.current.paused) {\r\n+//       speak(\"Video is already paused.\");\r\n+//     } else if (videoRef.current) {\r\n+//       videoRef.current.pause();\r\n+//       speak(\"Video paused.\");\r\n+//     } else {\r\n+//       speak(\"No video to pause.\");\r\n+//     }\r\n+//   };\r\n+\r\n+//   const scrollAmount = window.innerHeight * 0.82;\r\n+\r\n+//   const scrollUp = () => {\r\n+//     if (window.pageYOffset === 0) {\r\n+//       speak(\"Already at the top of the page.\");\r\n+//     } else {\r\n+//       window.scrollBy(0, -scrollAmount);\r\n+//       speak(\"Scrolled up.\");\r\n+//     }\r\n+//   };\r\n+\r\n+//   const scrollDown = () => {\r\n+//     const maxScrollTop =\r\n+//       document.documentElement.scrollHeight - window.innerHeight;\r\n+//     if (window.pageYOffset >= maxScrollTop) {\r\n+//       speak(\"Already at the bottom of the page.\");\r\n+//     } else {\r\n+//       window.scrollBy(0, scrollAmount);\r\n+//       speak(\"Scrolled down.\");\r\n+//     }\r\n+//   };\r\n+\r\n+//   const scrollToTop = () => {\r\n+//     if (window.pageYOffset === 0) {\r\n+//       speak(\"Already at the top of the page.\");\r\n+//     } else {\r\n+//       window.scrollTo(0, 0);\r\n+//       speak(\"Scrolled to the top of the page.\");\r\n+//     }\r\n+//   };\r\n+\r\n+//   const scrollToBottom = () => {\r\n+//     const maxScrollTop =\r\n+//       document.documentElement.scrollHeight - window.innerHeight;\r\n+//     if (window.pageYOffset >= maxScrollTop) {\r\n+//       speak(\"Already at the bottom of the page.\");\r\n+//     } else {\r\n+//       window.scrollTo(0, document.body.scrollHeight);\r\n+//       speak(\"Scrolled to the bottom of the page.\");\r\n+//     }\r\n+//   };\r\n+\r\n+//   // const speak = (message) => {\r\n+//   //   const utterance = new SpeechSynthesisUtterance(message);\r\n+//   //   utterance.onend = () => {\r\n+//   //     setIsSpeaking(false);\r\n+//   //     console.log(\"Speaking ended.\");\r\n+//   //     // Only restart recognition if we're still supposed to be listening\r\n+//   //     // if (isListening) {\r\n+//   //     //   if (restartRecognitionTimeout.current) {\r\n+//   //     //     clearTimeout(restartRecognitionTimeout.current);\r\n+//   //     //   }\r\n+//   //     //   restartRecognitionTimeout.current = setTimeout(() => {\r\n+//   //     //     console.log(\"Recognition restarted.\");\r\n+//   //     //     recognition.current.start();\r\n+//   //     //   }, 100); // Delay to prevent immediate restart\r\n+//   //     // }\r\n+//   //     if (isListening && !recognition.current.starting) { // Check the flag before restarting\r\n+//   //       recognition.current.starting = true; // Set the flag when starting recognition\r\n+//   //       recognition.current.start();\r\n+//   //     }\r\n+//   //   };\r\n+\r\n+//   //   setIsSpeaking(true);\r\n+//   //   console.log(\"Speaking started.\");\r\n+//   //   recognition.current.stop(); // Stop recognition when the bot starts speaking\r\n+//   //   speechSynthesis.current.speak(utterance);\r\n+//   // };\r\n+\r\n+//   // const onRecognitionEnd = () => {\r\n+//   //   console.log(\"Recognition ended.\");\r\n+//   //   setIsRecognitionActive(false); // Update state when recognition ends\r\n+//   //   recognition.current.starting = false; // Reset the flag when recognition ends\r\n+//   //   // We now check if the recognition is already running before starting it again\r\n+//   //   if (isListening && !isSpeaking && !recognition.current?.starting) {\r\n+//   //     console.log(\"Restarting recognition.\");\r\n+//   //     recognition.current.start();\r\n+//   //   }\r\n+//   // };\r\n+\r\n+//   // useEffect(() => {\r\n+//   //   if (isListening && !hasGreeted.current) {\r\n+//   //     speak(\"Hello, I'm Brane. How can I assist you today?\");\r\n+//   //     hasGreeted.current = true;\r\n+//   //   } else if (isListening && !isSpeaking) {\r\n+//   //     recognition.current.start();\r\n+//   //   }\r\n+//   // }, [isListening, isSpeaking]);\r\n+\r\n+//   // const startListening = () => {\r\n+//   //   console.log(\"Attempting to start listening.\");\r\n+//   //   if (recognition.current && !recognition.current.starting) {\r\n+//   //     setIsListening(true);\r\n+//   //     recognition.current.starting = true; // Set the flag when starting recognition\r\n+//   //     recognition.current.start();\r\n+//   //     console.log(\"Listening started.\");\r\n+//   //   }\r\n+//   // };\r\n+\r\n+//   // const stopListening = () => {\r\n+//   //   console.log(\"Stopping listening.\");\r\n+\r\n+//   //   setIsListening(false);\r\n+//   //   recognition.current.stop();\r\n+//   //   if (speechSynthesis.current.speaking) {\r\n+//   //     speechSynthesis.current.cancel();\r\n+//   //   }\r\n+//   //   if (restartRecognitionTimeout.current) {\r\n+//   //     clearTimeout(restartRecognitionTimeout.current);\r\n+//   //   }\r\n+//   //   console.log(\"Listening stopped.\");\r\n+//   // };\r\n+//   // Handle start and stop listening logic\r\n+\r\n+//   useEffect(() => {\r\n+//     if (isListening && !hasGreeted.current) {\r\n+//       speak(\"Hello, I'm Brane. How can I assist you today?\");\r\n+//       hasGreeted.current = true;\r\n+//     }\r\n+//   }, [isListening]);\r\n+\r\n+//   // const handleCommandWithFuse = (command) => {\r\n+//   //   const fuse = new Fuse(commands, { keys: [\"utterance\"], threshold: 0.4 });\r\n+//   //   const results = fuse.search(command);\r\n+//   //   const foundCommand = results.length ? results[0].item : null;\r\n+\r\n+//   //   if (foundCommand) {\r\n+//   //     console.log(\"Command found:\", foundCommand.utterance);\r\n+//   //     speak(foundCommand.response);\r\n+//   //     if (foundCommand.route) {\r\n+//   //       navigate(foundCommand.route); // Navigate to the route specified in the command\r\n+//   //     }\r\n+//   //   } else {\r\n+//   //     console.log(\"No command found.\");\r\n+//   //     speak(\"I'm not sure how to respond to that.\");\r\n+//   //   }\r\n+//   // };\r\n+\r\n+//   const handleCommandWithFuse = (command) => {\r\n+//     const fuse = new Fuse(commands, { keys: [\"utterance\"], threshold: 0.4 });\r\n+//     const results = fuse.search(command);\r\n+//     const foundCommand = results.length ? results[0].item : null;\r\n+\r\n+//     if (foundCommand) {\r\n+//       console.log(\"Command found:\", foundCommand.utterance);\r\n+\r\n+//       if (foundCommand.action) {\r\n+//         foundCommand.action();\r\n+//       } else if (foundCommand.route) {\r\n+//         navigate(foundCommand.route);\r\n+//       }\r\n+\r\n+//       if (foundCommand.response) {\r\n+//         speak(foundCommand.response);\r\n+//       }\r\n+//     } else {\r\n+//       console.log(\"No command found.\");\r\n+//       speak(\"I'm not sure how to respond to that.\");\r\n+//     }\r\n+//   };\r\n+\r\n+//   const commands = [\r\n+//     {\r\n+//       utterance: \"Hello who are you ?\",\r\n+\r\n+//       response:\r\n+//         \"Hi! This is Brane! your Voice bot from Brane Education How can I Assist you Today ?\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"Hello\",\r\n+\r\n+//       response: \"Hi! How can I assist you today?\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"hello\",\r\n+\r\n+//       response: \"Hi! How can I assist you today?\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"Hi.\",\r\n+\r\n+//       response: \"Hello! How can I assist you today?\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"Hey there\",\r\n+\r\n+//       response: \"Hi! How can I assist you today?\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"Good morning Brane.\",\r\n+\r\n+//       response: \"Hey Hiii! Good morning  ! How can I help you?\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"Good afternoon Brane.\",\r\n+\r\n+//       response: \"Hey Hiii! Good after noon ! How can I help you?\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"Good evening Brane.\",\r\n+\r\n+//       response: \"Hey Hiii! Good evening ! How can I help you?\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"can you please take me to login page\",\r\n+//       route: \"/login\",\r\n+//       routeDescription: \"login page\",\r\n+//       response: \"Navigating to the login page.\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"go to login page\",\r\n+//       route: \"/login\",\r\n+//       routeDescription: \"login page\",\r\n+//       response: \"Navigating to the login page.\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"please take me to login page\",\r\n+//       route: \"/login\",\r\n+//       routeDescription: \"login page\",\r\n+//       response: \"Navigating to the login page.\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"Go to login page\",\r\n+//       route: \"/login\",\r\n+//       routeDescription: \"login page\",\r\n+//       response: \"Navigating to the login page.\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"open login page\",\r\n+//       route: \"/login\",\r\n+//       routeDescription: \"login page\",\r\n+//       response: \"Navigating to the login page.\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"can you please take me to signup page\",\r\n+//       route: \"/signup\",\r\n+//       routeDescription: \"signup page\",\r\n+//       response: \"Navigating to the signup page.\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"take me to signup page\",\r\n+//       route: \"/signup\",\r\n+//       routeDescription: \"signup page\",\r\n+//       response: \"Navigating to the signup page.\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"Go to signup page\",\r\n+//       route: \"/signup\",\r\n+//       routeDescription: \"signup page\",\r\n+//       response: \"Navigating to the signup page.\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"open signup page\",\r\n+//       route: \"/signup\",\r\n+//       routeDescription: \"signup page\",\r\n+//       response: \"Navigating to the signup page.\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"what are platform features\",\r\n+\r\n+//       response:\r\n+//         \"Dashboard, Dynamic time table, Learning Networks, Little Masters, Video Based Dictionary, General Search.\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"Features of platform\",\r\n+\r\n+//       response:\r\n+//         \"Dashboard, Dynamic time table, Learning Networks, Little Masters, Video Based Dictionary, General Search.\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"What does the platform offer\",\r\n+\r\n+//       response:\r\n+//         \"Dashboard, Dynamic time table, Learning Networks, Little Masters, Video Based Dictionary, General Search.\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"Say me the features of platform\",\r\n+\r\n+//       response:\r\n+//         \"Dashboard, Dynamic time table, Learning Networks, Little Masters, Video Based Dictionary, General Search.\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"Say me the services of platform\",\r\n+\r\n+//       response:\r\n+//         \"Dashboard, Dynamic time table, Learning Networks, Little Masters, Video Based Dictionary, General Search.\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"tell me the services offered by the platform\",\r\n+\r\n+//       response:\r\n+//         \"Dashboard, Dynamic time table, Learning Networks, Little Masters, Video Based Dictionary, General Search.\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"explain platform services\",\r\n+\r\n+//       response:\r\n+//         \"Dashboard, Dynamic time table, Learning Networks, Little Masters, Video Based Dictionary, General Search.\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"Give me the Parent voice of Julia Harris\",\r\n+\r\n+//       response:\r\n+//         \"Brane education has helped my son a lot in his studies. He improved a lot in his studies and is now able to score good marks in his exams\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"Play today's motivational video\",\r\n+\r\n+//       response: \"I am playing the video\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"Play today's video\",\r\n+\r\n+//       response: \"I am playing Motivational video\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"Leaders Voice\",\r\n+\r\n+//       response:\r\n+//         \"This Voice-interactive AI Platform is a game Changer. It revolutionizes education.\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"Curriculum Supported by Brane Education\",\r\n+\r\n+//       response:\r\n+//         \"we support multiple Boards let me say few Telangana State Board Andhra Pradesh Board Maharashtra Board Assam Board\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"Boards supported by the platform\",\r\n+\r\n+//       response:\r\n+//         \"we support multiple Boards let me say few Telangana State Board Andhra Pradesh Board Maharashtra Board Assam Board\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"Curriculum\",\r\n+\r\n+//       response:\r\n+//         \"we support multiple Boards let me say few Telangana State Board Andhra Pradesh Board Maharashtra Board Assam Board\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"Go to landing page\",\r\n+\r\n+//       response: \"Okay, I am taking you to the landing page.\",\r\n+\r\n+//       route: \"/childpage\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"take me to landing page\",\r\n+\r\n+//       response: \"Okay, I am taking you to the landing page.\",\r\n+\r\n+//       route: \"/childpage\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"move to landing page\",\r\n+\r\n+//       response: \"Okay, I am taking you to the landing page.\",\r\n+\r\n+//       route: \"/childpage\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"roll back to landing page\",\r\n+\r\n+//       response: \"Okay, I am taking you to the landing page.\",\r\n+\r\n+//       route: \"/childpage\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"move to landing page\",\r\n+\r\n+//       response: \"Okay, I am taking you to the landing page.\",\r\n+\r\n+//       route: \"/childpage\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"what is today's quote\",\r\n+\r\n+//       response:\r\n+//         \"Determination is the power that sees us through all our frustration and obstacles. It helps in building our willpower which is the very basis of success.\",\r\n+\r\n+//       // route: \"/childpage\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"Today's Inspirational quote\",\r\n+\r\n+//       response:\r\n+//         \"Determination is the power that sees us through all our frustration and obstacles. It helps in building our willpower which is the very basis of success.\",\r\n+\r\n+//       // route: \"/childpage\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"say me today's quote\",\r\n+\r\n+//       response:\r\n+//         \"Determination is the power that sees us through all our frustration and obstacles. It helps in building our willpower which is the very basis of success.\",\r\n+\r\n+//       // route: \"/childpage\",\r\n+//     },\r\n+//     {\r\n+//       utterance: \"go back\",\r\n+//       response: \"Going back.\",\r\n+//       action: goBack, // Note the use of an action property\r\n+//     },\r\n+//     {\r\n+//       utterance: \"go forward\",\r\n+//       response: \"Going forward.\",\r\n+//       action: goForward,\r\n+//     },\r\n+//     {\r\n+//       utterance: \"play video\",\r\n+//       // response: \"Playing video.\",\r\n+//       action: playVideo,\r\n+//     },\r\n+//     {\r\n+//       utterance: \"pause video\",\r\n+//       // response: \"Pausing video.\",\r\n+//       action: pauseVideo,\r\n+//     },\r\n+//     {\r\n+//       utterance: \"start video\",\r\n+//       // response: \"Playing video.\",\r\n+//       action: playVideo,\r\n+//     },\r\n+//     {\r\n+//       utterance: \"stop video\",\r\n+//       // response: \"Playing video.\",\r\n+//       action: pauseVideo,\r\n+//     },\r\n+//     {\r\n+//       utterance: \"scroll up\",\r\n+//       // response: \"Scrolling up.\",\r\n+//       action: scrollUp,\r\n+//     },\r\n+//     {\r\n+//       utterance: \"scroll down\",\r\n+//       // response: \"Scrolling down.\",\r\n+//       action: scrollDown,\r\n+//     },\r\n+//     {\r\n+//       utterance: \"go up\",\r\n+\r\n+//       // response: \"Scrolling up.\",\r\n+//       action: scrollUp,\r\n+//     },\r\n+//     {\r\n+//       utterance: \"go down\",\r\n+//       // response: \"Scrolling down.\",\r\n+//       action: scrollDown,\r\n+//     },\r\n+//     {\r\n+//       utterance: \"scroll to top\",\r\n+//       action: scrollToTop,\r\n+//     },\r\n+//     {\r\n+//       utterance: \"scroll to bottom\",\r\n+//       action: scrollToBottom,\r\n+//     },\r\n+//     {\r\n+//       utterance: \"go back\",\r\n+//       action: goBackRef?.current?.click, // Use goBackRef directly\r\n+//       response: \"Going back.\",\r\n+//     },\r\n+//     {\r\n+//       utterance: \"take test\",\r\n+//       action: takeTestRef?.current?.click, // Use takeTestRef directly\r\n+//       response: \"Starting the test.\",\r\n+//     },\r\n+//   ];\r\n+//   return (\r\n+//     <div className=\"speech-bot-container\">\r\n+//       <div\r\n+//         className={`button-container ${\r\n+//           isListening ? \"voicebotframeactive\" : \"voicebotframe\"\r\n+//         }`}\r\n+//       >\r\n+//         <div onClick={isListening ? stopListening : startListening}>\r\n+//           <iframe\r\n+//             src={\r\n+//               isListening\r\n+//                 ? \"https://lottie.host/?file=a89aca3f-5407-4052-82c3-2048afca7a9f/NpCdWzLSKD.json\"\r\n+//                 : \"https://lottie.host/?file=d2b6cc0e-fe95-4847-85b5-35365fca7e00/vTudpCuPZq.json\"\r\n+//             }\r\n+//             width=\"120\" // Set your desired width\r\n+//             height=\"120\" // Set your desired height\r\n+//             title={isListening ? \"Stop Animation\" : \"Start Animation\"}\r\n+//             className={isListening ? \"voicebotframeactive\" : \"voicebotframe\"}\r\n+//           ></iframe>\r\n+//           {isListening ? (\r\n+//             <div className=\"overlay\" onClick={stopListening}></div>\r\n+//           ) : (\r\n+//             <div className=\"overlay\" onClick={startListening}></div>\r\n+//           )}\r\n+//         </div>\r\n+//       </div>\r\n+//     </div>\r\n+//   );\r\n+// };\r\n+\r\n+// export default VoiceBot;\r\n"
                },
                {
                    "date": 1700643627448,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -544,3715 +544,34 @@\n       utterance: \"open contact us page\",\r\n \r\n       route: \"/contactus\",\r\n \r\n-      response: \"This is About us.\",\r\n+      response: \"You can contact us from here\",\r\n     },\r\n     {\r\n-      utterance: \"open about page\",\r\n+      utterance: \"open contact page\",\r\n \r\n-      route: \"/aboutus\",\r\n+      route: \"/contactus\",\r\n \r\n-      response: \"This is About us.\",\r\n+      response: \"You can contact us from here\",\r\n     },\r\n     {\r\n       utterance: \"take me to about page\",\r\n \r\n       route: \"/aboutus\",\r\n \r\n-      response: \"This is About us.\",\r\n+      response: \"You can contact us from here\",\r\n     },\r\n     {\r\n       utterance: \"take me to contact us page\",\r\n \r\n-      route: \"/aboutus\",\r\n-\r\n-      response: \"This is About us.\",\r\n-    },\r\n-\r\n-\r\n-    {\r\n-      utterance: \"what are platform features\",\r\n-\r\n-      response:\r\n-        \"Dashboard, Dynamic time table, Learning Networks, Little Masters, Video Based Dictionary, General Search.\",\r\n-    },\r\n-\r\n-    {\r\n-      utterance: \"Features of platform\",\r\n-\r\n-      response:\r\n-        \"Dashboard, Dynamic time table, Learning Networks, Little Masters, Video Based Dictionary, General Search.\",\r\n-    },\r\n-\r\n-    {\r\n-      utterance: \"What does the platform offer\",\r\n-\r\n-      response:\r\n-        \"Dashboard, Dynamic time table, Learning Networks, Little Masters, Video Based Dictionary, General Search.\",\r\n-    },\r\n-\r\n-    {\r\n-      utterance: \"Say me the features of platform\",\r\n-\r\n-      response:\r\n-        \"Dashboard, Dynamic time table, Learning Networks, Little Masters, Video Based Dictionary, General Search.\",\r\n-    },\r\n-\r\n-    {\r\n-      utterance: \"Say me the services of platform\",\r\n-\r\n-      response:\r\n-        \"Dashboard, Dynamic time table, Learning Networks, Little Masters, Video Based Dictionary, General Search.\",\r\n-    },\r\n-\r\n-    {\r\n-      utterance: \"tell me the services offered by the platform\",\r\n-\r\n-      response:\r\n-        \"Dashboard, Dynamic time table, Learning Networks, Little Masters, Video Based Dictionary, General Search.\",\r\n-    },\r\n-\r\n-    {\r\n-      utterance: \"explain platform services\",\r\n-\r\n-      response:\r\n-        \"Dashboard, Dynamic time table, Learning Networks, Little Masters, Video Based Dictionary, General Search.\",\r\n-    },\r\n-\r\n-    {\r\n-      utterance: \"Give me the Parent voice of Julia Harris\",\r\n-\r\n-      response:\r\n-        \"Brane education has helped my son a lot in his studies. He improved a lot in his studies and is now able to score good marks in his exams\",\r\n-    },\r\n-\r\n-    {\r\n-      utterance: \"Leaders Voice\",\r\n-\r\n-      response:\r\n-        \"This Voice-interactive AI Platform is a game Changer. It revolutionizes education.\",\r\n-    },\r\n-\r\n-    {\r\n-      utterance: \"Curriculum Supported by Brane Education\",\r\n-\r\n-      response:\r\n-        \"we support multiple Boards let me say few Telangana State Board Andhra Pradesh Board Maharashtra Board Assam Board\",\r\n-    },\r\n-\r\n-    {\r\n-      utterance: \"Boards supported by the platform\",\r\n-\r\n-      response:\r\n-        \"we support multiple Boards let me say few Telangana State Board Andhra Pradesh Board Maharashtra Board Assam Board\",\r\n-    },\r\n-\r\n-    {\r\n-      utterance: \"Curriculum\",\r\n-\r\n-      response:\r\n-        \"we support multiple Boards let me say few Telangana State Board Andhra Pradesh Board Maharashtra Board Assam Board\",\r\n-    },\r\n-\r\n-    // {\r\n-    //   utterance: \"Go to landing page\",\r\n-\r\n-    //   response: \"Okay, I am taking you to the landing page.\",\r\n-\r\n-    //   route: \"/childpage\",\r\n-    // },\r\n-\r\n-    // {\r\n-    //   utterance: \"take me to landing page\",\r\n-\r\n-    //   response: \"Okay, I am taking you to the landing page.\",\r\n-\r\n-    //   route: \"/childpage\",\r\n-    // },\r\n-\r\n-    // {\r\n-    //   utterance: \"move to landing page\",\r\n-\r\n-    //   response: \"Okay, I am taking you to the landing page.\",\r\n-\r\n-    //   route: \"/childpage\",\r\n-    // },\r\n-\r\n-    // {\r\n-    //   utterance: \"roll back to landing page\",\r\n-\r\n-    //   response: \"Okay, I am taking you to the landing page.\",\r\n-\r\n-    //   route: \"/childpage\",\r\n-    // },\r\n-\r\n-    // {\r\n-    //   utterance: \"move to landing page\",\r\n-\r\n-    //   response: \"Okay, I am taking you to the landing page.\",\r\n-\r\n-    //   route: \"/childpage\",\r\n-    // },\r\n-\r\n-    {\r\n-      utterance: \"what is today's quote\",\r\n-\r\n-      response:\r\n-        \"Determination is the power that sees us through all our frustration and obstacles. It helps in building our willpower which is the very basis of success.\",\r\n-\r\n-      route: \"/childpage\",\r\n-    },\r\n-\r\n-    {\r\n-      utterance: \"Today's Inspirational quote\",\r\n-\r\n-      response:\r\n-        \"Determination is the power that sees us through all our frustration and obstacles. It helps in building our willpower which is the very basis of success.\",\r\n-\r\n-      route: \"/childpage\",\r\n-    },\r\n-\r\n-    {\r\n-      utterance: \"say me today's quote\",\r\n-\r\n-      response:\r\n-        \"Determination is the power that sees us through all our frustration and obstacles. It helps in building our willpower which is the very basis of success.\",\r\n-\r\n-      route: \"/childpage\",\r\n-    },\r\n-    {\r\n-      utterance: \"go back\",\r\n-      response: \"\",\r\n-      action: goBack, // Note the use of an action property\r\n-    },\r\n-    {\r\n-      utterance: \"go forward\",\r\n-      response: \"\",\r\n-      action: goForward,\r\n-    },\r\n-    {\r\n-      utterance: \"play video\",\r\n-      // response: \"Playing video.\",\r\n-      action: playVideo,\r\n-    },\r\n-    {\r\n-      utterance: \"pause video\",\r\n-      // response: \"Pausing video.\",\r\n-      action: pauseVideo,\r\n-    },\r\n-    {\r\n-      utterance: \"start video\",\r\n-      // response: \"Playing video.\",\r\n-      action: playVideo,\r\n-    },\r\n-    {\r\n-      utterance: \"stop video\",\r\n-      // response: \"Playing video.\",\r\n-      action: pauseVideo,\r\n-    },\r\n-    {\r\n-      utterance: \"scroll up\",\r\n-      // response: \"Scrolling up.\",\r\n-      action: scrollUp,\r\n-    },\r\n-    {\r\n-      utterance: \"scroll down\",\r\n-      // response: \"Scrolling down.\",\r\n-      action: scrollDown,\r\n-    },\r\n-    {\r\n-      utterance: \"go up\",\r\n-\r\n-      // response: \"Scrolling up.\",\r\n-      action: scrollUp,\r\n-    },\r\n-    {\r\n-      utterance: \"go down\",\r\n-      // response: \"Scrolling down.\",\r\n-      action: scrollDown,\r\n-    },\r\n-    {\r\n-      utterance: \"scroll to top\",\r\n-      action: scrollToTop,\r\n-    },\r\n-    {\r\n-      utterance: \"scroll to bottom\",\r\n-      action: scrollToBottom,\r\n-    },\r\n-    {\r\n-      utterance: \"brane stop\",\r\n-      action: stopListening,\r\n-    },\r\n-    {\r\n-      utterance: \"brane turn off\",\r\n-      action: stopListening,\r\n-    },\r\n-    {\r\n-      utterance: \"brane stop the bot\",\r\n-      action: stopListening,\r\n-    },\r\n-  ];\r\n-\r\n-  return (\r\n-    <div className=\"speech-bot-container\">\r\n-      <div\r\n-        className={`button-container ${\r\n-          isListening ? \"voicebotframeactive\" : \"voicebotframe\"\r\n-        }`}\r\n-      >\r\n-        {/* <button onClick={isListening ? stopListening : startListening}>\r\n-          {isListening ? \"Stop\" : \"Start\"} Animation\r\n-        </button> */}\r\n-        <img \r\n-        className=\"botimage\"\r\n-          src={chatbotimage} alt=\"\" \r\n-          onClick={isListening ? stopListening : startListening}  \r\n-        />\r\n-\r\n-      </div>\r\n-    </div>\r\n-  );\r\n-};\r\n-\r\n-export default VoiceBot;\r\n-\r\n-\r\n-{/* // import React, { useState, useEffect, useRef } from \"react\";\r\n-// import { useNavigate, useLocation } from \"react-router-dom\";\r\n-// import Fuse from \"fuse.js\";\r\n-// import \"./VoiceBot.css\";\r\n-\r\n-// const VoiceBot = ({ videoRef }) => {\r\n-//   const [isListening, setIsListening] = useState(false);\r\n-//   const [isSpeaking, setIsSpeaking] = useState(false);\r\n-//   const recognition = useRef(null);\r\n-//   const speechSynthesis = useRef(window.speechSynthesis);\r\n-//   const [hasGreeted, setHasGreeted] = useState(false);\r\n-//   const navigate = useNavigate();\r\n-\r\n-//   useEffect(() => {\r\n-//     recognition.current = new window.webkitSpeechRecognition();\r\n-//     recognition.current.continuous = true;\r\n-//     recognition.current.interimResults = false;\r\n-//     recognition.current.onresult = onResult;\r\n-//     recognition.current.onend = onRecognitionEnd;\r\n-//     recognition.current.starting = false;\r\n-\r\n-//     // Simplified error handling, removed specific handling for 'no-speech'\r\n-//     recognition.current.onerror = (event) => {\r\n-//       console.error(\"Recognition error:\", event.error);\r\n-//       // Check if listening is true and the bot isn't speaking\r\n-//       if (isListening && !isSpeaking) {\r\n-//         // Restart recognition\r\n-//         restartRecognition();\r\n-//       }\r\n-//     };\r\n-\r\n-//     return () => {\r\n-//       if (recognition.current) {\r\n-//         recognition.current.abort();\r\n-//       }\r\n-//     };\r\n-//   }, []);\r\n-\r\n-//   useEffect(() => {\r\n-//     const checkRecognition = () => {\r\n-//       if (isListening && !isSpeaking && !recognition.current.starting) {\r\n-//         console.log(\"Restarting recognition because it's not active.\");\r\n-//         recognition.current.starting = true;\r\n-//         recognition.current.start();\r\n-//         console.log(\"Restarted recognition.\");\r\n-//       }\r\n-//     };\r\n-\r\n-//     const recognitionCheckInterval = setInterval(checkRecognition, 100); // Check every 1 second\r\n-\r\n-//     return () => {\r\n-//       clearInterval(recognitionCheckInterval);\r\n-//     };\r\n-//   }, [isListening, isSpeaking]);\r\n-\r\n-//   const restartRecognition = () => {\r\n-//     if (recognition.current.starting) {\r\n-//       console.log(\"Recognition is already starting or running.\");\r\n-//       return;\r\n-//     }\r\n-\r\n-//     recognition.current.abort(); // Stop any existing recognition process\r\n-//     recognition.current.starting = true;\r\n-//     recognition.current.start();\r\n-//     console.log(\"Recognition restarted.\");\r\n-//   };\r\n-\r\n-//   const historyStack = useRef([]);\r\n-\r\n-//   useEffect(() => {\r\n-//     return () => {\r\n-//       // Clean up the listener when the component unmounts\r\n-//       window.removeEventListener(\"popstate\", handlePopState);\r\n-//     };\r\n-//   }, []);\r\n-\r\n-//   const handlePopState = () => {\r\n-//     // This needs to handle both back and forward browser actions\r\n-//     // Use some logic to determine whether it's a back or forward action\r\n-//     // For simplicity, assume it's always back\r\n-//     historyStack.current.pop();\r\n-//     forwardStack.current.length = 0; // Clear forward stack on manual navigation\r\n-//   };\r\n-  \r\n-\r\n-//   // Add a new entry to the stack whenever navigate is called\r\n-//   const customNavigate = (to, options) => {\r\n-//     historyStack.current.push(to);\r\n-//     navigate(to, options);\r\n-//   };\r\n-\r\n-//   // Listen to popstate events to update the history stack\r\n-//   useEffect(() => {\r\n-//     window.addEventListener(\"popstate\", handlePopState);\r\n-//   }, []);\r\n-\r\n-//   const forwardStack = useRef([]);\r\n-\r\n-//   const goBack = () => {\r\n-//     if (window.history.state && window.history.state.idx > 0) {\r\n-//       window.history.back();\r\n-//       speak(\"Going back\");\r\n-//     } else {\r\n-//       speak(\"Can't go back any further.\");\r\n-//     }\r\n-//   };\r\n-\r\n-//   const goForward = () => {\r\n-//     if (window.history.state && window.history.state.idx < window.history.length - 1) {\r\n-//       window.history.forward();\r\n-//       speak(\"Going forward\");\r\n-//     } else {\r\n-//       speak(\"No forward history available.\");\r\n-//     }\r\n-//   };\r\n-\r\n-//   const playVideo = () => {\r\n-//     if (videoRef.current) {\r\n-//       videoRef.current.play();\r\n-//       speak(\"Playing video.\");\r\n-//     } else {\r\n-//       speak(\"No video to play.\");\r\n-//     }\r\n-//   };\r\n-\r\n-//   const pauseVideo = () => {\r\n-//     if (videoRef.current) {\r\n-//       videoRef.current.pause();\r\n-//       speak(\"Video paused.\");\r\n-//     } else {\r\n-//       speak(\"No video to pause.\");\r\n-//     }\r\n-//   };\r\n-\r\n-//   const scrollAmount = window.innerHeight * 0.82;\r\n-\r\n-//   const scrollUp = () => {\r\n-//     if (window.pageYOffset === 0) {\r\n-//       speak(\"Already at the top of the page.\");\r\n-//     } else {\r\n-//       window.scrollBy(0, -scrollAmount);\r\n-//       speak(\"Scrolled up.\");\r\n-//     }\r\n-//   };\r\n-\r\n-//   const scrollDown = () => {\r\n-//     const maxScrollTop =\r\n-//       document.documentElement.scrollHeight - window.innerHeight;\r\n-//     if (window.pageYOffset >= maxScrollTop) {\r\n-//       speak(\"Already at the bottom of the page.\");\r\n-//     } else {\r\n-//       window.scrollBy(0, scrollAmount);\r\n-//       speak(\"Scrolled down.\");\r\n-//     }\r\n-//   };\r\n-\r\n-//   const scrollToTop = () => {\r\n-//     if (window.pageYOffset === 0) {\r\n-//       speak(\"Already at the top of the page.\");\r\n-//     } else {\r\n-//       window.scrollTo(0, 0);\r\n-//       speak(\"Scrolled to the top of the page.\");\r\n-//     }\r\n-//   };\r\n-\r\n-//   const scrollToBottom = () => {\r\n-//     const maxScrollTop =\r\n-//       document.documentElement.scrollHeight - window.innerHeight;\r\n-//     if (window.pageYOffset >= maxScrollTop) {\r\n-//       speak(\"Already at the bottom of the page.\");\r\n-//     } else {\r\n-//       window.scrollTo(0, document.body.scrollHeight);\r\n-//       speak(\"Scrolled to the bottom of the page.\");\r\n-//     }\r\n-//   };\r\n-\r\n-//   const speak = (message) => {\r\n-//     console.log(\"speak function called with message:\", message);\r\n-//     const utterance = new SpeechSynthesisUtterance(message);\r\n-//     utterance.onend = () => {\r\n-//       setIsSpeaking(false);\r\n-//       console.log(\"Speaking ended.\");\r\n-//       if (isListening && !recognition.current.starting) {\r\n-//         console.log(\"Restarting recognition after speaking.\");\r\n-//         recognition.current.starting = true;\r\n-//         recognition.current.start();\r\n-//         console.log(\"Restarted recognition after speaking.\");\r\n-//       }\r\n-//     };\r\n-\r\n-//     setIsSpeaking(true);\r\n-//     console.log(\"Speaking started.\");\r\n-//     recognition.current.stop(); // Ensure to stop recognition before speaking\r\n-//     speechSynthesis.current.speak(utterance);\r\n-//   };\r\n-\r\n-//   const onResult = (event) => {\r\n-//     const resultIndex = event.resultIndex;\r\n-//     const transcript = event.results[resultIndex][0].transcript\r\n-//       .trim()\r\n-//       .toLowerCase();\r\n-\r\n-//     if (event.results[resultIndex].isFinal) {\r\n-//       console.log(`Recognized text: ${transcript}`);\r\n-//       if (transcript.includes(\"brain\")) {\r\n-//         console.log(\"Wake word heard, processing command...\");\r\n-//         handleCommandWithFuse(transcript.replace(\"brain\", \"\"));\r\n-//       }\r\n-//     }\r\n-//   };\r\n-\r\n-//   const onRecognitionEnd = () => {\r\n-//     recognition.current.starting = false;\r\n-//     if (isListening && !isSpeaking) {\r\n-//       restartRecognition();\r\n-//     }\r\n-//   };\r\n-\r\n-//   useEffect(() => {\r\n-//     if (isListening) {\r\n-//       if (!hasGreeted) {\r\n-//         speak(\"Hello, I'm Brane. How can I help you today?\");\r\n-//         setHasGreeted(true);\r\n-//       } else {\r\n-//         speak(\"Listening.\");\r\n-//       }\r\n-//     }\r\n-//   }, [isListening, hasGreeted]);\r\n-\r\n-\r\n-//   const startListening = () => {\r\n-//     if (!recognition.current.starting) {\r\n-//       setIsListening(true);\r\n-//       restartRecognition();\r\n-//     }\r\n-//   };\r\n-\r\n-//   const stopListening = () => {\r\n-//     setIsListening(false);\r\n-//     recognition.current.abort();\r\n-//     if (speechSynthesis.current.speaking) {\r\n-//       speechSynthesis.current.cancel();\r\n-//     }\r\n-//   };\r\n-\r\n-//   const handleCommandWithFuse = (command) => {\r\n-//     const fuse = new Fuse(commands, { keys: [\"utterance\"], threshold: 0.4 });\r\n-//     const results = fuse.search(command);\r\n-//     const foundCommand = results.length ? results[0].item : null;\r\n-\r\n-//     if (foundCommand) {\r\n-//       console.log(\"Command found:\", foundCommand.utterance);\r\n-\r\n-//       if (foundCommand.action) {\r\n-//         foundCommand.action();\r\n-//       } else if (foundCommand.route) {\r\n-//         navigate(foundCommand.route);\r\n-//       }\r\n-\r\n-//       // Speak after performing the action or navigation\r\n-//       speak(foundCommand.response);\r\n-//     } else {\r\n-//       console.log(\"No command found.\");\r\n-//       speak(\"I'm not sure how to respond to that.\");\r\n-//     }\r\n-//   };\r\n-\r\n-//   const commands = [\r\n-//     {\r\n-//       utterance: \"Hello who are you ?\",\r\n-\r\n-//       response:\r\n-//         \"Hi! This is Brane! your Voice bot from Brane Education How can I Assist you Today ?\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"Hello\",\r\n-\r\n-//       response: \"Hi! How can I assist you today?\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"hello\",\r\n-\r\n-//       response: \"Hi! How can I assist you today?\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"Hi.\",\r\n-\r\n-//       response: \"Hello! How can I assist you today?\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"Hey there\",\r\n-\r\n-//       response: \"Hi! How can I assist you today?\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"Good morning Brane.\",\r\n-\r\n-//       response: \"Hey Hiii! Good morning  ! How can I help you?\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"Good afternoon Brane.\",\r\n-\r\n-//       response: \"Hey Hiii! Good after noon ! How can I help you?\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"Good evening Brane.\",\r\n-\r\n-//       response: \"Hey Hiii! Good evening ! How can I help you?\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"can you please take me to login page\",\r\n-\r\n-//       route: \"/login\",\r\n-\r\n-//       response: \"Here's the Login Page, Please Login\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"please take me to login page\",\r\n-\r\n-//       route: \"/login\",\r\n-\r\n-//       response: \"Here's the Login Page, Please Login\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"Go to login page\",\r\n-\r\n-//       route: \"/login\",\r\n-\r\n-//       response: \"Here's the Login Page, Please Login\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"open login page\",\r\n-\r\n-//       route: \"/login\",\r\n-\r\n-//       response: \"Here's the Login Page, Please Login\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"can you please take me to signup page\",\r\n-\r\n-//       route: \"/signup\",\r\n-\r\n-//       response: \"Here's the signup page. Please proceed With Registration.\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"take me to signup page\",\r\n-\r\n-//       route: \"/signup\",\r\n-\r\n-//       response: \"Here's the signup page. Please proceed With Registration.\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"Go to signup page\",\r\n-\r\n-//       route: \"/signup\",\r\n-\r\n-//       response: \"Here's the signup page. Please proceed With Registration.\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"open signup page\",\r\n-\r\n-//       route: \"/signup\",\r\n-\r\n-//       response: \"Here's the signup page. Please proceed With Registration.\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"Go to face id\",\r\n-\r\n-//       route: \"/login/faceid\",\r\n-\r\n-//       response: \"Here's Face ID Login. Please proceed.\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"Go to face id login\",\r\n-\r\n-//       route: \"/login/faceid\",\r\n-\r\n-//       response: \"Here's Face ID Login. Please proceed.\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"login with face id\",\r\n-\r\n-//       route: \"/login/faceid\",\r\n-\r\n-//       response: \"Here's Face ID Login. Please proceed.\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"login with face\",\r\n-\r\n-//       route: \"/login/faceid\",\r\n-\r\n-//       response: \"Here's Face ID Login. Please proceed.\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"i want to login with face\",\r\n-\r\n-//       route: \"/login/faceid\",\r\n-\r\n-//       response: \"Here's Face ID Login. Please proceed.\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"login with voice\",\r\n-\r\n-//       route: \"/login/voiceid\",\r\n-\r\n-//       response: \"Here's Voice Login. Please proceed.\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"i want to login with voice\",\r\n-\r\n-//       route: \"/login/voiceid\",\r\n-\r\n-//       response: \"Here's Voice Login. Please proceed.\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"go to voice login\",\r\n-\r\n-//       route: \"/login/voiceid\",\r\n-\r\n-//       response: \"Here's Voice Login. Please proceed.\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"login with voice\",\r\n-\r\n-//       route: \"/login/voiceid\",\r\n-\r\n-//       response: \"Here's Voice Login. Please proceed.\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"login with mobile\",\r\n-\r\n-//       route: \"/login/mobile\",\r\n-\r\n-//       response: \"Here's Mobile Login. Please proceed.\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"i want to login with mobile\",\r\n-\r\n-//       route: \"/login/mobile\",\r\n-\r\n-//       response: \"Here's Mobile Login. Please proceed.\",\r\n-//     },\r\n-//     {\r\n-//       utterance: \"go to mobile login\",\r\n-\r\n-//       route: \"/login/mobile\",\r\n-\r\n-//       response: \"Here's Mobile Login. Please proceed.\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"what are platform features\",\r\n-\r\n-//       response:\r\n-//         \"Dashboard, Dynamic time table, Learning Networks, Little Masters, Video Based Dictionary, General Search.\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"Features of platform\",\r\n-\r\n-//       response:\r\n-//         \"Dashboard, Dynamic time table, Learning Networks, Little Masters, Video Based Dictionary, General Search.\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"What does the platform offer\",\r\n-\r\n-//       response:\r\n-//         \"Dashboard, Dynamic time table, Learning Networks, Little Masters, Video Based Dictionary, General Search.\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"Say me the features of platform\",\r\n-\r\n-//       response:\r\n-//         \"Dashboard, Dynamic time table, Learning Networks, Little Masters, Video Based Dictionary, General Search.\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"Say me the services of platform\",\r\n-\r\n-//       response:\r\n-//         \"Dashboard, Dynamic time table, Learning Networks, Little Masters, Video Based Dictionary, General Search.\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"tell me the services offered by the platform\",\r\n-\r\n-//       response:\r\n-//         \"Dashboard, Dynamic time table, Learning Networks, Little Masters, Video Based Dictionary, General Search.\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"explain platform services\",\r\n-\r\n-//       response:\r\n-//         \"Dashboard, Dynamic time table, Learning Networks, Little Masters, Video Based Dictionary, General Search.\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"Give me the Parent voice of Julia Harris\",\r\n-\r\n-//       response:\r\n-//         \"Brane education has helped my son a lot in his studies. He improved a lot in his studies and is now able to score good marks in his exams\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"Play today's motivational video\",\r\n-\r\n-//       response: \"I am playing the video\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"Play today's video\",\r\n-\r\n-//       response: \"I am playing Motivational video\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"Leaders Voice\",\r\n-\r\n-//       response:\r\n-//         \"This Voice-interactive AI Platform is a game Changer. It revolutionizes education.\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"Curriculum Supported by Brane Education\",\r\n-\r\n-//       response:\r\n-//         \"we support multiple Boards let me say few Telangana State Board Andhra Pradesh Board Maharashtra Board Assam Board\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"Boards supported by the platform\",\r\n-\r\n-//       response:\r\n-//         \"we support multiple Boards let me say few Telangana State Board Andhra Pradesh Board Maharashtra Board Assam Board\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"Curriculum\",\r\n-\r\n-//       response:\r\n-//         \"we support multiple Boards let me say few Telangana State Board Andhra Pradesh Board Maharashtra Board Assam Board\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"Go to landing page\",\r\n-\r\n-//       response: \"Okay, I am taking you to the landing page.\",\r\n-\r\n-//       route: \"/childpage\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"take me to landing page\",\r\n-\r\n-//       response: \"Okay, I am taking you to the landing page.\",\r\n-\r\n-//       route: \"/childpage\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"move to landing page\",\r\n-\r\n-//       response: \"Okay, I am taking you to the landing page.\",\r\n-\r\n-//       route: \"/childpage\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"roll back to landing page\",\r\n-\r\n-//       response: \"Okay, I am taking you to the landing page.\",\r\n-\r\n-//       route: \"/childpage\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"move to landing page\",\r\n-\r\n-//       response: \"Okay, I am taking you to the landing page.\",\r\n-\r\n-//       route: \"/childpage\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"what is today's quote\",\r\n-\r\n-//       response:\r\n-//         \"Determination is the power that sees us through all our frustration and obstacles. It helps in building our willpower which is the very basis of success.\",\r\n-\r\n-//       route: \"/childpage\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"Today's Inspirational quote\",\r\n-\r\n-//       response:\r\n-//         \"Determination is the power that sees us through all our frustration and obstacles. It helps in building our willpower which is the very basis of success.\",\r\n-\r\n-//       route: \"/childpage\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"say me today's quote\",\r\n-\r\n-//       response:\r\n-//         \"Determination is the power that sees us through all our frustration and obstacles. It helps in building our willpower which is the very basis of success.\",\r\n-\r\n-//       route: \"/childpage\",\r\n-//     },\r\n-//     {\r\n-//       utterance: \"go back\",\r\n-//       response: \"\",\r\n-//       action: goBack, // Note the use of an action property\r\n-//     },\r\n-//     {\r\n-//       utterance: \"go forward\",\r\n-//       response: \"\",\r\n-//       action: goForward,\r\n-//     },\r\n-//     {\r\n-//       utterance: \"play video\",\r\n-//       // response: \"Playing video.\",\r\n-//       action: playVideo,\r\n-//     },\r\n-//     {\r\n-//       utterance: \"pause video\",\r\n-//       // response: \"Pausing video.\",\r\n-//       action: pauseVideo,\r\n-//     },\r\n-//     {\r\n-//       utterance: \"start video\",\r\n-//       // response: \"Playing video.\",\r\n-//       action: playVideo,\r\n-//     },\r\n-//     {\r\n-//       utterance: \"stop video\",\r\n-//       // response: \"Playing video.\",\r\n-//       action: pauseVideo,\r\n-//     },\r\n-//     {\r\n-//       utterance: \"scroll up\",\r\n-//       // response: \"Scrolling up.\",\r\n-//       action: scrollUp,\r\n-//     },\r\n-//     {\r\n-//       utterance: \"scroll down\",\r\n-//       // response: \"Scrolling down.\",\r\n-//       action: scrollDown,\r\n-//     },\r\n-//     {\r\n-//       utterance: \"go up\",\r\n-\r\n-//       // response: \"Scrolling up.\",\r\n-//       action: scrollUp,\r\n-//     },\r\n-//     {\r\n-//       utterance: \"go down\",\r\n-//       // response: \"Scrolling down.\",\r\n-//       action: scrollDown,\r\n-//     },\r\n-//     {\r\n-//       utterance: \"scroll to top\",\r\n-//       action: scrollToTop,\r\n-//     },\r\n-//     {\r\n-//       utterance: \"scroll to bottom\",\r\n-//       action: scrollToBottom,\r\n-//     },\r\n-//     {\r\n-//       utterance: \"brane stop\",\r\n-//       action: stopListening,\r\n-//     },\r\n-//     {\r\n-//       utterance: \"brane turn off\",\r\n-//       action: stopListening,\r\n-//     },\r\n-//     {\r\n-//       utterance: \"brane stop the bot\",\r\n-//       action: stopListening,\r\n-//     },\r\n-//   ];\r\n-\r\n-//   return (\r\n-//     <div className=\"speech-bot-container\">\r\n-//       <div\r\n-//         className={`button-container ${\r\n-//           isListening ? \"voicebotframeactive\" : \"voicebotframe\"\r\n-//         }`}\r\n-//       >\r\n-//         <button onClick={isListening ? stopListening : startListening}>\r\n-//           {isListening ? \"Stop\" : \"Start\"} Animation\r\n-//         </button>\r\n-//         {/* <button onClick={toggleBotActive}>\r\n-//         {isBotActive ? 'Deactivate Bot' : 'Activate Bot'}\r\n-//       </button> \r\n-//       </div>\r\n-//     </div>\r\n-//   );\r\n-// };\r\n-\r\n-// export default VoiceBot; */}\r\n-\r\n-\r\n-\r\n-//iska v1\r\n-\r\n-// import React, { useState, useEffect, useRef } from \"react\";\r\n-// import { useNavigate, useLocation } from \"react-router-dom\";\r\n-// import Fuse from \"fuse.js\";\r\n-// import \"./VoiceBot.css\";\r\n-\r\n-// const VoiceBot = ({ videoRef}) => {\r\n-//   const [isListening, setIsListening] = useState(false);\r\n-//   const [isSpeaking, setIsSpeaking] = useState(false);\r\n-//   const recognition = useRef(null);\r\n-//   const speechSynthesis = useRef(window.speechSynthesis);\r\n-//   const [hasGreeted, setHasGreeted] = useState(false);\r\n-//   const navigate = useNavigate();\r\n-\r\n-\r\n-//  // Initialize speech recognition\r\n-//  useEffect(() => {\r\n-//   recognition.current = new window.webkitSpeechRecognition();\r\n-//   recognition.current.continuous = true;\r\n-//   recognition.current.interimResults = false;\r\n-//   recognition.current.onresult = onResult;\r\n-//   recognition.current.onend = onRecognitionEnd;\r\n-//   recognition.current.starting = false;\r\n-\r\n-//   recognition.current.onerror = (event) => {\r\n-//     console.error(\"Recognition error:\", event.error);\r\n-//     if (isListening && !isSpeaking) {\r\n-//       restartRecognition();\r\n-//     }\r\n-//   };\r\n-\r\n-//   return () => {\r\n-//     if (recognition.current) {\r\n-//       recognition.current.abort();\r\n-//     }\r\n-//   };\r\n-// }, []);\r\n-\r\n-//   // useEffect(() => {\r\n-//   //   const checkRecognition = () => {\r\n-//   //     if (isListening && !isSpeaking && !recognition.current.starting) {\r\n-//   //       console.log(\"Restarting recognition because it's not active.\");\r\n-//   //       recognition.current.starting = true;\r\n-//   //       recognition.current.start();\r\n-//   //       console.log(\"Restarted recognition.\");\r\n-//   //     }\r\n-//   //   };\r\n-\r\n-//   //   const recognitionCheckInterval = setInterval(checkRecognition, 100); // Check every .5 second\r\n-\r\n-//   //   return () => {\r\n-//   //     clearInterval(recognitionCheckInterval);\r\n-//   //   };\r\n-//   // }, [isListening, isSpeaking]);\r\n-\r\n-\r\n-//   const historyStack = useRef([]);\r\n-\r\n-//   useEffect(() => {\r\n-//     return () => {\r\n-//       // Clean up the listener when the component unmounts\r\n-//       window.removeEventListener(\"popstate\", handlePopState);\r\n-//     };\r\n-//   }, []);\r\n-\r\n-//   const handlePopState = () => {\r\n-//     // This needs to handle both back and forward browser actions\r\n-//     // Use some logic to determine whether it's a back or forward action\r\n-//     // For simplicity, assume it's always back\r\n-//     historyStack.current.pop();\r\n-//     forwardStack.current.length = 0; // Clear forward stack on manual navigation\r\n-//   };\r\n-  \r\n-\r\n-//   // Add a new entry to the stack whenever navigate is called\r\n-//   const customNavigate = (to, options) => {\r\n-//     historyStack.current.push(to);\r\n-//     navigate(to, options);\r\n-//   };\r\n-\r\n-//   // Listen to popstate events to update the history stack\r\n-//   useEffect(() => {\r\n-//     window.addEventListener(\"popstate\", handlePopState);\r\n-//   }, []);\r\n-\r\n-//   const forwardStack = useRef([]);\r\n-\r\n-//   const goBack = () => {\r\n-//     if (window.history.state && window.history.state.idx > 0) {\r\n-//       window.history.back();\r\n-//       speak(\"Going back\");\r\n-//     } else {\r\n-//       speak(\"Can't go back any further.\");\r\n-//     }\r\n-//   };\r\n-\r\n-//   const goForward = () => {\r\n-//     if (window.history.state && window.history.state.idx < window.history.length - 1) {\r\n-//       window.history.forward();\r\n-//       speak(\"Going forward\");\r\n-//     } else {\r\n-//       speak(\"No forward history available.\");\r\n-//     }\r\n-//   };\r\n-\r\n-//   const playVideo = () => {\r\n-//     if (videoRef.current) {\r\n-//       videoRef.current.play();\r\n-//       speak(\"Playing video.\");\r\n-//     } else {\r\n-//       speak(\"No video to play.\");\r\n-//     }\r\n-//   };\r\n-\r\n-//   const pauseVideo = () => {\r\n-//     if (videoRef.current) {\r\n-//       videoRef.current.pause();\r\n-//       speak(\"Video paused.\");\r\n-//     } else {\r\n-//       speak(\"No video to pause.\");\r\n-//     }\r\n-//   };\r\n-\r\n-//   const scrollAmount = window.innerHeight * 0.82;\r\n-\r\n-//   const scrollUp = () => {\r\n-//     if (window.pageYOffset === 0) {\r\n-//       speak(\"Already at the top of the page.\");\r\n-//     } else {\r\n-//       window.scrollBy(0, -scrollAmount);\r\n-//       speak(\"Scrolled up.\");\r\n-//     }\r\n-//   };\r\n-\r\n-//   const scrollDown = () => {\r\n-//     const maxScrollTop =\r\n-//       document.documentElement.scrollHeight - window.innerHeight;\r\n-//     if (window.pageYOffset >= maxScrollTop) {\r\n-//       speak(\"Already at the bottom of the page.\");\r\n-//     } else {\r\n-//       window.scrollBy(0, scrollAmount);\r\n-//       speak(\"Scrolled down.\");\r\n-//     }\r\n-//   };\r\n-\r\n-//   const scrollToTop = () => {\r\n-//     if (window.pageYOffset === 0) {\r\n-//       speak(\"Already at the top of the page.\");\r\n-//     } else {\r\n-//       window.scrollTo(0, 0);\r\n-//       speak(\"Scrolled to the top of the page.\");\r\n-//     }\r\n-//   };\r\n-\r\n-//   const scrollToBottom = () => {\r\n-//     const maxScrollTop =\r\n-//       document.documentElement.scrollHeight - window.innerHeight;\r\n-//     if (window.pageYOffset >= maxScrollTop) {\r\n-//       speak(\"Already at the bottom of the page.\");\r\n-//     } else {\r\n-//       window.scrollTo(0, document.body.scrollHeight);\r\n-//       speak(\"Scrolled to the bottom of the page.\");\r\n-//     }\r\n-//   };\r\n-\r\n-//   const speak = (message) => {\r\n-//     const utterance = new SpeechSynthesisUtterance(message);\r\n-//     utterance.onend = () => {\r\n-//       setIsSpeaking(false);\r\n-//       // Restart recognition after speaking has ended\r\n-//       if (isListening) {\r\n-//         restartRecognition();\r\n-//       }\r\n-//     };\r\n-  \r\n-//     setIsSpeaking(true);\r\n-//     // Stop recognition when the bot starts speaking\r\n-//     if (recognition.current) {\r\n-//       recognition.current.abort();\r\n-//     }\r\n-//     speechSynthesis.current.speak(utterance);\r\n-//   };\r\n-  \r\n-\r\n-//   const restartRecognition = () => {\r\n-//     // Check if recognition is not already started and if the bot is set to listen\r\n-//     if (recognition.current && !recognition.current.starting && isListening && !isSpeaking) {\r\n-//       // Only start recognition if it's not already active\r\n-//       if (recognition.current.state !== 'active') {\r\n-//         recognition.current.abort(); // Ensure any ongoing recognition is stopped\r\n-//         recognition.current.starting = true;\r\n-//         recognition.current.start();\r\n-//       }\r\n-//     }\r\n-//   };\r\n-  \r\n-  \r\n-//     // Restart recognition when bot finishes speaking and isListening is true\r\n-//     useEffect(() => {\r\n-//       if (!isSpeaking && isListening) {\r\n-//         restartRecognition();\r\n-//       }\r\n-//     }, [isSpeaking, isListening]);\r\n-\r\n-//   const onResult = (event) => {\r\n-//     const resultIndex = event.resultIndex;\r\n-//     const transcript = event.results[resultIndex][0].transcript\r\n-//       .trim()\r\n-//       .toLowerCase();\r\n-\r\n-//     if (event.results[resultIndex].isFinal) {\r\n-//       console.log(`Recognized text: ${transcript}`);\r\n-//       if (transcript.includes(\"brain\")) {\r\n-//         console.log(\"Wake word heard, processing command...\");\r\n-//         handleCommandWithFuse(transcript.replace(\"brain\", \"\"));\r\n-//       }\r\n-//     }\r\n-//   };\r\n-\r\n-//   const onRecognitionEnd = () => {\r\n-//     recognition.current.starting = false;\r\n-//     if (isListening && !isSpeaking) {\r\n-//       restartRecognition();\r\n-//     }\r\n-//   };\r\n-\r\n-//   useEffect(() => {\r\n-//     if (isListening && !hasGreeted) {\r\n-//       speak(\"Hello, I'm Brane. How can I help you today?\");\r\n-//       setHasGreeted(true);\r\n-//     }\r\n-//   }, [isListening, hasGreeted]);\r\n-\r\n-\r\n-// // Updated startListening function\r\n-// const startListening = () => {\r\n-//   setIsListening(true);\r\n-//   if (recognition.current && !recognition.current.starting) {\r\n-//     recognition.current.start();\r\n-//   }\r\n-// };\r\n-\r\n-// // Updated stopListening function\r\n-// const stopListening = () => {\r\n-//   setIsListening(false);\r\n-//   setIsSpeaking(false); // Reset speaking state\r\n-//   setHasGreeted(false); // Reset greeting state if needed\r\n-//   if (recognition.current) {\r\n-//     recognition.current.abort(); // Stop any ongoing speech recognition\r\n-//   }\r\n-//   if (speechSynthesis.current.speaking) {\r\n-//     speechSynthesis.current.cancel(); // Stop any ongoing speech synthesis\r\n-//   }\r\n-// };\r\n-\r\n-\r\n-\r\n-//   const handleCommandWithFuse = (command) => {\r\n-//     const fuse = new Fuse(commands, { keys: [\"utterance\"], threshold: 0.4 });\r\n-//     const results = fuse.search(command);\r\n-//     const foundCommand = results.length ? results[0].item : null;\r\n-\r\n-//     if (foundCommand) {\r\n-//       console.log(\"Command found:\", foundCommand.utterance);\r\n-\r\n-//       if (foundCommand.action) {\r\n-//         foundCommand.action();\r\n-//       } else if (foundCommand.route) {\r\n-//         navigate(foundCommand.route);\r\n-//       }\r\n-\r\n-//       // Speak after performing the action or navigation\r\n-//       speak(foundCommand.response);\r\n-//     } else {\r\n-//       console.log(\"No command found.\");\r\n-//       speak(\"I'm not sure how to respond to that.\");\r\n-//     }\r\n-//   };\r\n-\r\n-//   const commands = [\r\n-//     {\r\n-//       utterance: \"Hello who are you ?\",\r\n-\r\n-//       response:\r\n-//         \"Hi! This is Brane! your Voice bot from Brane Education How can I Assist you Today ?\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"Hello\",\r\n-\r\n-//       response: \"Hi! How can I assist you today?\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"hello\",\r\n-\r\n-//       response: \"Hi! How can I assist you today?\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"Hi.\",\r\n-\r\n-//       response: \"Hello! How can I assist you today?\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"Hey there\",\r\n-\r\n-//       response: \"Hi! How can I assist you today?\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"Good morning Brane.\",\r\n-\r\n-//       response: \"Hey Hiii! Good morning  ! How can I help you?\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"Good afternoon Brane.\",\r\n-\r\n-//       response: \"Hey Hiii! Good after noon ! How can I help you?\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"Good evening Brane.\",\r\n-\r\n-//       response: \"Hey Hiii! Good evening ! How can I help you?\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"can you please take me to login page\",\r\n-\r\n-//       route: \"/login\",\r\n-\r\n-//       response: \"Here's the Login Page, Please Login\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"please take me to login page\",\r\n-\r\n-//       route: \"/login\",\r\n-\r\n-//       response: \"Here's the Login Page, Please Login\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"Go to login page\",\r\n-\r\n-//       route: \"/login\",\r\n-\r\n-//       response: \"Here's the Login Page, Please Login\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"open login page\",\r\n-\r\n-//       route: \"/login\",\r\n-\r\n-//       response: \"Here's the Login Page, Please Login\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"can you please take me to signup page\",\r\n-\r\n-//       route: \"/signup\",\r\n-\r\n-//       response: \"Here's the signup page. Please proceed With Registration.\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"take me to signup page\",\r\n-\r\n-//       route: \"/signup\",\r\n-\r\n-//       response: \"Here's the signup page. Please proceed With Registration.\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"Go to signup page\",\r\n-\r\n-//       route: \"/signup\",\r\n-\r\n-//       response: \"Here's the signup page. Please proceed With Registration.\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"open signup page\",\r\n-\r\n-//       route: \"/signup\",\r\n-\r\n-//       response: \"Here's the signup page. Please proceed With Registration.\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"Go to face id\",\r\n-\r\n-//       route: \"/login/faceid\",\r\n-\r\n-//       response: \"Here's Face ID Login. Please proceed.\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"Go to face id login\",\r\n-\r\n-//       route: \"/login/faceid\",\r\n-\r\n-//       response: \"Here's Face ID Login. Please proceed.\",\r\n-//     },\r\n-//     {\r\n-//       utterance: \"Go to face login\",\r\n-\r\n-//       route: \"/login/faceid\",\r\n-\r\n-//       response: \"Here's Face ID Login. Please proceed.\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"login with face id\",\r\n-\r\n-//       route: \"/login/faceid\",\r\n-\r\n-//       response: \"Here's Face ID Login. Please proceed.\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"login with face\",\r\n-\r\n-//       route: \"/login/faceid\",\r\n-\r\n-//       response: \"Here's Face ID Login. Please proceed.\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"i want to login with face\",\r\n-\r\n-//       route: \"/login/faceid\",\r\n-\r\n-//       response: \"Here's Face ID Login. Please proceed.\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"login with voice\",\r\n-\r\n-//       route: \"/login/voiceid\",\r\n-\r\n-//       response: \"Here's Voice Login. Please proceed.\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"i want to login with voice\",\r\n-\r\n-//       route: \"/login/voiceid\",\r\n-\r\n-//       response: \"Here's Voice Login. Please proceed.\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"go to voice login\",\r\n-\r\n-//       route: \"/login/voiceid\",\r\n-\r\n-//       response: \"Here's Voice Login. Please proceed.\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"login with voice\",\r\n-\r\n-//       route: \"/login/voiceid\",\r\n-\r\n-//       response: \"Here's Voice Login. Please proceed.\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"login with mobile\",\r\n-\r\n-//       route: \"/login/mobile\",\r\n-\r\n-//       response: \"Here's Mobile Login. Please proceed.\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"i want to login with mobile\",\r\n-\r\n-//       route: \"/login/mobile\",\r\n-\r\n-//       response: \"Here's Mobile Login. Please proceed.\",\r\n-//     },\r\n-//     {\r\n-//       utterance: \"go to mobile login\",\r\n-\r\n-//       route: \"/login/mobile\",\r\n-\r\n-//       response: \"Here's Mobile Login. Please proceed.\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"what are platform features\",\r\n-\r\n-//       response:\r\n-//         \"Dashboard, Dynamic time table, Learning Networks, Little Masters, Video Based Dictionary, General Search.\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"Features of platform\",\r\n-\r\n-//       response:\r\n-//         \"Dashboard, Dynamic time table, Learning Networks, Little Masters, Video Based Dictionary, General Search.\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"What does the platform offer\",\r\n-\r\n-//       response:\r\n-//         \"Dashboard, Dynamic time table, Learning Networks, Little Masters, Video Based Dictionary, General Search.\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"Say me the features of platform\",\r\n-\r\n-//       response:\r\n-//         \"Dashboard, Dynamic time table, Learning Networks, Little Masters, Video Based Dictionary, General Search.\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"Say me the services of platform\",\r\n-\r\n-//       response:\r\n-//         \"Dashboard, Dynamic time table, Learning Networks, Little Masters, Video Based Dictionary, General Search.\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"tell me the services offered by the platform\",\r\n-\r\n-//       response:\r\n-//         \"Dashboard, Dynamic time table, Learning Networks, Little Masters, Video Based Dictionary, General Search.\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"explain platform services\",\r\n-\r\n-//       response:\r\n-//         \"Dashboard, Dynamic time table, Learning Networks, Little Masters, Video Based Dictionary, General Search.\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"Give me the Parent voice of Julia Harris\",\r\n-\r\n-//       response:\r\n-//         \"Brane education has helped my son a lot in his studies. He improved a lot in his studies and is now able to score good marks in his exams\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"Play today's motivational video\",\r\n-\r\n-//       response: \"I am playing the video\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"Play today's video\",\r\n-\r\n-//       response: \"I am playing Motivational video\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"Leaders Voice\",\r\n-\r\n-//       response:\r\n-//         \"This Voice-interactive AI Platform is a game Changer. It revolutionizes education.\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"Curriculum Supported by Brane Education\",\r\n-\r\n-//       response:\r\n-//         \"we support multiple Boards let me say few Telangana State Board Andhra Pradesh Board Maharashtra Board Assam Board\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"Boards supported by the platform\",\r\n-\r\n-//       response:\r\n-//         \"we support multiple Boards let me say few Telangana State Board Andhra Pradesh Board Maharashtra Board Assam Board\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"Curriculum\",\r\n-\r\n-//       response:\r\n-//         \"we support multiple Boards let me say few Telangana State Board Andhra Pradesh Board Maharashtra Board Assam Board\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"Go to landing page\",\r\n-\r\n-//       response: \"Okay, I am taking you to the landing page.\",\r\n-\r\n-//       route: \"/childpage\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"take me to landing page\",\r\n-\r\n-//       response: \"Okay, I am taking you to the landing page.\",\r\n-\r\n-//       route: \"/childpage\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"move to landing page\",\r\n-\r\n-//       response: \"Okay, I am taking you to the landing page.\",\r\n-\r\n-//       route: \"/childpage\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"roll back to landing page\",\r\n-\r\n-//       response: \"Okay, I am taking you to the landing page.\",\r\n-\r\n-//       route: \"/childpage\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"move to landing page\",\r\n-\r\n-//       response: \"Okay, I am taking you to the landing page.\",\r\n-\r\n-//       route: \"/childpage\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"what is today's quote\",\r\n-\r\n-//       response:\r\n-//         \"Determination is the power that sees us through all our frustration and obstacles. It helps in building our willpower which is the very basis of success.\",\r\n-\r\n-//       route: \"/childpage\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"Today's Inspirational quote\",\r\n-\r\n-//       response:\r\n-//         \"Determination is the power that sees us through all our frustration and obstacles. It helps in building our willpower which is the very basis of success.\",\r\n-\r\n-//       route: \"/childpage\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"say me today's quote\",\r\n-\r\n-//       response:\r\n-//         \"Determination is the power that sees us through all our frustration and obstacles. It helps in building our willpower which is the very basis of success.\",\r\n-\r\n-//       route: \"/childpage\",\r\n-//     },\r\n-//     {\r\n-//       utterance: \"go back\",\r\n-//       response: \"\",\r\n-//       action: goBack, // Note the use of an action property\r\n-//     },\r\n-//     {\r\n-//       utterance: \"go forward\",\r\n-//       response: \"\",\r\n-//       action: goForward,\r\n-//     },\r\n-//     {\r\n-//       utterance: \"play video\",\r\n-//       // response: \"Playing video.\",\r\n-//       action: playVideo,\r\n-//     },\r\n-//     {\r\n-//       utterance: \"pause video\",\r\n-//       // response: \"Pausing video.\",\r\n-//       action: pauseVideo,\r\n-//     },\r\n-//     {\r\n-//       utterance: \"start video\",\r\n-//       // response: \"Playing video.\",\r\n-//       action: playVideo,\r\n-//     },\r\n-//     {\r\n-//       utterance: \"stop video\",\r\n-//       // response: \"Playing video.\",\r\n-//       action: pauseVideo,\r\n-//     },\r\n-//     {\r\n-//       utterance: \"scroll up\",\r\n-//       // response: \"Scrolling up.\",\r\n-//       action: scrollUp,\r\n-//     },\r\n-//     {\r\n-//       utterance: \"scroll down\",\r\n-//       // response: \"Scrolling down.\",\r\n-//       action: scrollDown,\r\n-//     },\r\n-//     {\r\n-//       utterance: \"go up\",\r\n-\r\n-//       // response: \"Scrolling up.\",\r\n-//       action: scrollUp,\r\n-//     },\r\n-//     {\r\n-//       utterance: \"go down\",\r\n-//       // response: \"Scrolling down.\",\r\n-//       action: scrollDown,\r\n-//     },\r\n-//     {\r\n-//       utterance: \"scroll to top\",\r\n-//       action: scrollToTop,\r\n-//     },\r\n-//     {\r\n-//       utterance: \"scroll to bottom\",\r\n-//       action: scrollToBottom,\r\n-//     },\r\n-//     {\r\n-//       utterance: \"brane stop\",\r\n-//       action: stopListening,\r\n-//     },\r\n-//     {\r\n-//       utterance: \"brane turn off\",\r\n-//       action: stopListening,\r\n-//     },\r\n-//     {\r\n-//       utterance: \"brane stop the bot\",\r\n-//       action: stopListening,\r\n-//     },\r\n-//   ];\r\n-\r\n-//   return (\r\n-//     <div className=\"speech-bot-container\">\r\n-//       <div\r\n-//         className={`button-container ${\r\n-//           isListening ? \"voicebotframeactive\" : \"voicebotframe\"\r\n-//         }`}\r\n-//       >\r\n-//         <button onClick={isListening ? stopListening : startListening}>\r\n-//           {isListening ? \"Stop\" : \"Start\"} Animation\r\n-//         </button>\r\n-//         {/* <button onClick={toggleBotActive}>\r\n-//         {isBotActive ? 'Deactivate Bot' : 'Activate Bot'}\r\n-//       </button> */}\r\n-//       </div>\r\n-//     </div>\r\n-//   );\r\n-// };\r\n-\r\n-// export default VoiceBot;\r\n-\r\n-\r\n-\r\n-\r\n-\r\n-\r\n-\r\n-\r\n-\r\n-\r\n-\r\n-\r\n-\r\n-\r\n-\r\n-\r\n-\r\n-\r\n-\r\n-\r\n-\r\n-\r\n-\r\n-\r\n-\r\n-\r\n-\r\n-\r\n-\r\n-\r\n-//Bot Video added but some start issues\r\n-\r\n-// import React, { useState, useEffect, useRef } from \"react\";\r\n-// import { useNavigate, useLocation } from \"react-router-dom\";\r\n-// import Fuse from \"fuse.js\";\r\n-// import \"./VoiceBot.css\";\r\n-\r\n-// const VoiceBot = ({ videoRef }) => {\r\n-//   const [isListening, setIsListening] = useState(false);\r\n-//   const [isSpeaking, setIsSpeaking] = useState(false);\r\n-//   const recognition = useRef(null);\r\n-//   const speechSynthesis = useRef(window.speechSynthesis);\r\n-//   const hasGreeted = useRef(false);\r\n-//   const restartRecognitionTimeout = useRef(null);\r\n-//   const navigate = useNavigate();\r\n-//   const location = useLocation();\r\n-//   const [isRecognitionActive, setIsRecognitionActive] = useState(false); // New state to track recognition status\r\n-\r\n-//   useEffect(() => {\r\n-//     recognition.current = new window.webkitSpeechRecognition();\r\n-//     recognition.current.continuous = true;\r\n-//     recognition.current.interimResults = false;\r\n-//     recognition.current.onresult = onResult;\r\n-//     recognition.current.onend = () => {\r\n-//       console.log(\"Recognition ended.\");\r\n-//       if (isListening) {\r\n-//         startListening();\r\n-//       }\r\n-//     };\r\n-//     recognition.current.onerror = (event) => {\r\n-//       console.error(\"Recognition error:\", event.error);\r\n-//     };\r\n-\r\n-//     return () => {\r\n-//       recognition.current.abort();\r\n-//     };\r\n-//   }, []);\r\n-\r\n-//   // Update useEffect for managing the recognition state based on isListening and isRecognitionActive\r\n-//   useEffect(() => {\r\n-//     if (isListening && !isRecognitionActive) {\r\n-//       startListening();\r\n-//     } else if (!isListening && isRecognitionActive) {\r\n-//       stopListening();\r\n-//     }\r\n-//   }, [isListening, isRecognitionActive]);\r\n-\r\n-//   const goBack = () => {\r\n-//     if (window.history.length > 1) {\r\n-//       navigate(-1);\r\n-//     } else {\r\n-//       speak(\"Can't go back any further.\");\r\n-//     }\r\n-//   };\r\n-\r\n-//   const goForward = () => {\r\n-//     // Unfortunately, there's no direct way to check if you can go forward in the history.\r\n-//     // You might need to manage this state manually based on user navigation.\r\n-//     navigate(1);\r\n-//   };\r\n-\r\n-//   const playVideo = () => {\r\n-//     if (videoRef.current && !videoRef.current.paused) {\r\n-//       speak(\"Video is already playing.\");\r\n-//     } else if (videoRef.current) {\r\n-//       videoRef.current.play();\r\n-//       speak(\"Playing video.\");\r\n-//     } else {\r\n-//       speak(\"No video to play.\");\r\n-//     }\r\n-//   };\r\n-\r\n-//   const pauseVideo = () => {\r\n-//     if (videoRef.current && videoRef.current.paused) {\r\n-//       speak(\"Video is already paused.\");\r\n-//     } else if (videoRef.current) {\r\n-//       videoRef.current.pause();\r\n-//       speak(\"Video paused.\");\r\n-//     } else {\r\n-//       speak(\"No video to pause.\");\r\n-//     }\r\n-//   };\r\n-\r\n-//   const scrollAmount = window.innerHeight * 0.82;\r\n-\r\n-//   const scrollUp = () => {\r\n-//     if (window.pageYOffset === 0) {\r\n-//       speak(\"Already at the top of the page.\");\r\n-//     } else {\r\n-//       window.scrollBy(0, -scrollAmount);\r\n-//       speak(\"Scrolled up.\");\r\n-//     }\r\n-//   };\r\n-\r\n-//   const scrollDown = () => {\r\n-//     const maxScrollTop =\r\n-//       document.documentElement.scrollHeight - window.innerHeight;\r\n-//     if (window.pageYOffset >= maxScrollTop) {\r\n-//       speak(\"Already at the bottom of the page.\");\r\n-//     } else {\r\n-//       window.scrollBy(0, scrollAmount);\r\n-//       speak(\"Scrolled down.\");\r\n-//     }\r\n-//   };\r\n-\r\n-//   const scrollToTop = () => {\r\n-//     if (window.pageYOffset === 0) {\r\n-//       speak(\"Already at the top of the page.\");\r\n-//     } else {\r\n-//       window.scrollTo(0, 0);\r\n-//       speak(\"Scrolled to the top of the page.\");\r\n-//     }\r\n-//   };\r\n-\r\n-//   const scrollToBottom = () => {\r\n-//     const maxScrollTop =\r\n-//       document.documentElement.scrollHeight - window.innerHeight;\r\n-//     if (window.pageYOffset >= maxScrollTop) {\r\n-//       speak(\"Already at the bottom of the page.\");\r\n-//     } else {\r\n-//       window.scrollTo(0, document.body.scrollHeight);\r\n-//       speak(\"Scrolled to the bottom of the page.\");\r\n-//     }\r\n-//   };\r\n-\r\n-//   // const speak = (message) => {\r\n-//   //   const utterance = new SpeechSynthesisUtterance(message);\r\n-//   //   utterance.onend = () => {\r\n-//   //     setIsSpeaking(false);\r\n-//   //     console.log(\"Speaking ended.\");\r\n-//   //     // Only restart recognition if we're still supposed to be listening\r\n-//   //     // if (isListening) {\r\n-//   //     //   if (restartRecognitionTimeout.current) {\r\n-//   //     //     clearTimeout(restartRecognitionTimeout.current);\r\n-//   //     //   }\r\n-//   //     //   restartRecognitionTimeout.current = setTimeout(() => {\r\n-//   //     //     console.log(\"Recognition restarted.\");\r\n-//   //     //     recognition.current.start();\r\n-//   //     //   }, 100); // Delay to prevent immediate restart\r\n-//   //     // }\r\n-//   //     if (isListening && !recognition.current.starting) { // Check the flag before restarting\r\n-//   //       recognition.current.starting = true; // Set the flag when starting recognition\r\n-//   //       recognition.current.start();\r\n-//   //     }\r\n-//   //   };\r\n-\r\n-//   //   setIsSpeaking(true);\r\n-//   //   console.log(\"Speaking started.\");\r\n-//   //   recognition.current.stop(); // Stop recognition when the bot starts speaking\r\n-//   //   speechSynthesis.current.speak(utterance);\r\n-//   // };\r\n-\r\n-//   const speak = (message) => {\r\n-//     console.log(\"speak function called with message:\", message);\r\n-//     const utterance = new SpeechSynthesisUtterance(message);\r\n-//     utterance.onend = () => {\r\n-//       setIsSpeaking(false);\r\n-//       console.log(\"Speaking ended.\");\r\n-//       // Directly handle the restart of recognition here if needed\r\n-//       if (isListening) {\r\n-//         startListening();\r\n-//       }\r\n-//     };\r\n-\r\n-//     setIsSpeaking(true);\r\n-//     console.log(\"Speaking started.\");\r\n-//     recognition.current.stop(); // Ensure to stop recognition before speaking\r\n-//     speechSynthesis.current.speak(utterance);\r\n-//   };\r\n-\r\n-//   const onResult = (event) => {\r\n-//     const resultIndex = event.resultIndex;\r\n-//     const transcript = event.results[resultIndex][0].transcript\r\n-//       .trim()\r\n-//       .toLowerCase();\r\n-\r\n-//     if (event.results[resultIndex].isFinal) {\r\n-//       console.log(`Recognized text: ${transcript}`);\r\n-//       if (transcript.includes(\"brain\")) {\r\n-//         console.log(\"Wake word heard, processing command...\");\r\n-//         handleCommandWithFuse(transcript.replace(\"brain\", \"\"));\r\n-//       }\r\n-//     }\r\n-//   };\r\n-\r\n-//   // const onRecognitionEnd = () => {\r\n-//   //   console.log(\"Recognition ended.\");\r\n-//   //   setIsRecognitionActive(false); // Update state when recognition ends\r\n-//   //   recognition.current.starting = false; // Reset the flag when recognition ends\r\n-//   //   // We now check if the recognition is already running before starting it again\r\n-//   //   if (isListening && !isSpeaking && !recognition.current?.starting) {\r\n-//   //     console.log(\"Restarting recognition.\");\r\n-//   //     recognition.current.start();\r\n-//   //   }\r\n-//   // };\r\n-\r\n-//   // useEffect(() => {\r\n-//   //   if (isListening && !hasGreeted.current) {\r\n-//   //     speak(\"Hello, I'm Brane. How can I assist you today?\");\r\n-//   //     hasGreeted.current = true;\r\n-//   //   } else if (isListening && !isSpeaking) {\r\n-//   //     recognition.current.start();\r\n-//   //   }\r\n-//   // }, [isListening, isSpeaking]);\r\n-\r\n-//   useEffect(() => {\r\n-//     if (isListening && !hasGreeted.current) {\r\n-//       speak(\"Hello, I'm Brane. How can I assist you today?\");\r\n-//       hasGreeted.current = true;\r\n-//     } else if (isListening && !isSpeaking && !recognition.current.starting) {\r\n-//       // Check the flag before starting\r\n-//       recognition.current.starting = true; // Set the flag when starting recognition\r\n-//       recognition.current.start();\r\n-//     }\r\n-//   }, [isListening, isSpeaking]);\r\n-\r\n-//   // const startListening = () => {\r\n-//   //   console.log(\"Attempting to start listening.\");\r\n-//   //   if (recognition.current && !recognition.current.starting) {\r\n-//   //     setIsListening(true);\r\n-//   //     recognition.current.starting = true; // Set the flag when starting recognition\r\n-//   //     recognition.current.start();\r\n-//   //     console.log(\"Listening started.\");\r\n-//   //   }\r\n-//   // };\r\n-\r\n-//   // const stopListening = () => {\r\n-//   //   console.log(\"Stopping listening.\");\r\n-\r\n-//   //   setIsListening(false);\r\n-//   //   recognition.current.stop();\r\n-//   //   if (speechSynthesis.current.speaking) {\r\n-//   //     speechSynthesis.current.cancel();\r\n-//   //   }\r\n-//   //   if (restartRecognitionTimeout.current) {\r\n-//   //     clearTimeout(restartRecognitionTimeout.current);\r\n-//   //   }\r\n-//   //   console.log(\"Listening stopped.\");\r\n-//   // };\r\n-//   // Handle start and stop listening logic\r\n-//   const startListening = () => {\r\n-//     console.log(\"Attempting to start listening.\");\r\n-//     if (!recognition.current.starting) {\r\n-//       setIsListening(true);\r\n-//       recognition.current.starting = true;\r\n-//       recognition.current.start();\r\n-//       console.log(\"Listening started.\");\r\n-//     } else {\r\n-//       console.log(\"Recognition already active.\");\r\n-//     }\r\n-//   };\r\n-\r\n-//   const stopListening = () => {\r\n-//     console.log(\"Stopping listening.\");\r\n-//     if (recognition.current.starting) {\r\n-//       setIsListening(false);\r\n-//       recognition.current.starting = false;\r\n-//       recognition.current.stop();\r\n-//       console.log(\"Listening stopped.\");\r\n-//     } else {\r\n-//       console.log(\"Recognition already inactive.\");\r\n-//     }\r\n-//   };\r\n-\r\n-//   // const handleCommandWithFuse = (command) => {\r\n-//   //   const fuse = new Fuse(commands, { keys: [\"utterance\"], threshold: 0.4 });\r\n-//   //   const results = fuse.search(command);\r\n-//   //   const foundCommand = results.length ? results[0].item : null;\r\n-\r\n-//   //   if (foundCommand) {\r\n-//   //     console.log(\"Command found:\", foundCommand.utterance);\r\n-//   //     speak(foundCommand.response);\r\n-//   //     if (foundCommand.route) {\r\n-//   //       navigate(foundCommand.route); // Navigate to the route specified in the command\r\n-//   //     }\r\n-//   //   } else {\r\n-//   //     console.log(\"No command found.\");\r\n-//   //     speak(\"I'm not sure how to respond to that.\");\r\n-//   //   }\r\n-//   // };\r\n-\r\n-//   const handleCommandWithFuse = (command) => {\r\n-//     const fuse = new Fuse(commands, { keys: [\"utterance\"], threshold: 0.4 });\r\n-//     const results = fuse.search(command);\r\n-//     const foundCommand = results.length ? results[0].item : null;\r\n-\r\n-//     if (foundCommand) {\r\n-//       console.log(\"Command found:\", foundCommand.utterance);\r\n-\r\n-//       if (foundCommand.route) {\r\n-//         if (location.pathname !== foundCommand.route) {\r\n-//           navigate(foundCommand.route);\r\n-//           speak(\r\n-//             `Navigating to ${\r\n-//               foundCommand.routeDescription || \"requested page\"\r\n-//             }.`\r\n-//           );\r\n-//         } else {\r\n-//           speak(\r\n-//             `You are already on the ${\r\n-//               foundCommand.routeDescription || \"requested page\"\r\n-//             }.`\r\n-//           );\r\n-//         }\r\n-//       } else if (foundCommand.action) {\r\n-//         foundCommand.action();\r\n-//       }\r\n-\r\n-//       if (foundCommand.response) {\r\n-//         speak(foundCommand.response);\r\n-//       }\r\n-//     } else {\r\n-//       console.log(\"No command found.\");\r\n-//       speak(\"I'm not sure how to respond to that.\");\r\n-//     }\r\n-//   };\r\n-\r\n-//   const commands = [\r\n-//     {\r\n-//       utterance: \"Hello who are you ?\",\r\n-\r\n-//       response:\r\n-//         \"Hi! This is Brane! your Voice bot from Brane Education How can I Assist you Today ?\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"Hello\",\r\n-\r\n-//       response: \"Hi! How can I assist you today?\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"hello\",\r\n-\r\n-//       response: \"Hi! How can I assist you today?\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"Hi.\",\r\n-\r\n-//       response: \"Hello! How can I assist you today?\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"Hey there\",\r\n-\r\n-//       response: \"Hi! How can I assist you today?\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"Good morning Brane.\",\r\n-\r\n-//       response: \"Hey Hiii! Good morning  ! How can I help you?\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"Good afternoon Brane.\",\r\n-\r\n-//       response: \"Hey Hiii! Good after noon ! How can I help you?\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"Good evening Brane.\",\r\n-\r\n-//       response: \"Hey Hiii! Good evening ! How can I help you?\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"can you please take me to login page\",\r\n-//       route: \"/login\",\r\n-//       routeDescription: \"login page\",\r\n-//       response: \"Navigating to the login page.\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"go to login page\",\r\n-//       route: \"/login\",\r\n-//       routeDescription: \"login page\",\r\n-//       response: \"Navigating to the login page.\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"please take me to login page\",\r\n-//       route: \"/login\",\r\n-//       routeDescription: \"login page\",\r\n-//       response: \"Navigating to the login page.\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"Go to login page\",\r\n-//       route: \"/login\",\r\n-//       routeDescription: \"login page\",\r\n-//       response: \"Navigating to the login page.\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"open login page\",\r\n-//       route: \"/login\",\r\n-//       routeDescription: \"login page\",\r\n-//       response: \"Navigating to the login page.\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"can you please take me to signup page\",\r\n-//       route: \"/signup\",\r\n-//       routeDescription: \"signup page\",\r\n-//       response: \"Navigating to the signup page.\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"take me to signup page\",\r\n-//       route: \"/signup\",\r\n-//       routeDescription: \"signup page\",\r\n-//       response: \"Navigating to the signup page.\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"Go to signup page\",\r\n-//       route: \"/signup\",\r\n-//       routeDescription: \"signup page\",\r\n-//       response: \"Navigating to the signup page.\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"open signup page\",\r\n-//       route: \"/signup\",\r\n-//       routeDescription: \"signup page\",\r\n-//       response: \"Navigating to the signup page.\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"what are platform features\",\r\n-\r\n-//       response:\r\n-//         \"Dashboard, Dynamic time table, Learning Networks, Little Masters, Video Based Dictionary, General Search.\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"Features of platform\",\r\n-\r\n-//       response:\r\n-//         \"Dashboard, Dynamic time table, Learning Networks, Little Masters, Video Based Dictionary, General Search.\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"What does the platform offer\",\r\n-\r\n-//       response:\r\n-//         \"Dashboard, Dynamic time table, Learning Networks, Little Masters, Video Based Dictionary, General Search.\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"Say me the features of platform\",\r\n-\r\n-//       response:\r\n-//         \"Dashboard, Dynamic time table, Learning Networks, Little Masters, Video Based Dictionary, General Search.\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"Say me the services of platform\",\r\n-\r\n-//       response:\r\n-//         \"Dashboard, Dynamic time table, Learning Networks, Little Masters, Video Based Dictionary, General Search.\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"tell me the services offered by the platform\",\r\n-\r\n-//       response:\r\n-//         \"Dashboard, Dynamic time table, Learning Networks, Little Masters, Video Based Dictionary, General Search.\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"explain platform services\",\r\n-\r\n-//       response:\r\n-//         \"Dashboard, Dynamic time table, Learning Networks, Little Masters, Video Based Dictionary, General Search.\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"Give me the Parent voice of Julia Harris\",\r\n-\r\n-//       response:\r\n-//         \"Brane education has helped my son a lot in his studies. He improved a lot in his studies and is now able to score good marks in his exams\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"Play today's motivational video\",\r\n-\r\n-//       response: \"I am playing the video\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"Play today's video\",\r\n-\r\n-//       response: \"I am playing Motivational video\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"Leaders Voice\",\r\n-\r\n-//       response:\r\n-//         \"This Voice-interactive AI Platform is a game Changer. It revolutionizes education.\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"Curriculum Supported by Brane Education\",\r\n-\r\n-//       response:\r\n-//         \"we support multiple Boards let me say few Telangana State Board Andhra Pradesh Board Maharashtra Board Assam Board\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"Boards supported by the platform\",\r\n-\r\n-//       response:\r\n-//         \"we support multiple Boards let me say few Telangana State Board Andhra Pradesh Board Maharashtra Board Assam Board\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"Curriculum\",\r\n-\r\n-//       response:\r\n-//         \"we support multiple Boards let me say few Telangana State Board Andhra Pradesh Board Maharashtra Board Assam Board\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"Go to landing page\",\r\n-\r\n-//       response: \"Okay, I am taking you to the landing page.\",\r\n-\r\n-//       route: \"/childpage\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"take me to landing page\",\r\n-\r\n-//       response: \"Okay, I am taking you to the landing page.\",\r\n-\r\n-//       route: \"/childpage\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"move to landing page\",\r\n-\r\n-//       response: \"Okay, I am taking you to the landing page.\",\r\n-\r\n-//       route: \"/childpage\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"roll back to landing page\",\r\n-\r\n-//       response: \"Okay, I am taking you to the landing page.\",\r\n-\r\n-//       route: \"/childpage\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"move to landing page\",\r\n-\r\n-//       response: \"Okay, I am taking you to the landing page.\",\r\n-\r\n-//       route: \"/childpage\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"what is today's quote\",\r\n-\r\n-//       response:\r\n-//         \"Determination is the power that sees us through all our frustration and obstacles. It helps in building our willpower which is the very basis of success.\",\r\n-\r\n-//       // route: \"/childpage\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"Today's Inspirational quote\",\r\n-\r\n-//       response:\r\n-//         \"Determination is the power that sees us through all our frustration and obstacles. It helps in building our willpower which is the very basis of success.\",\r\n-\r\n-//       // route: \"/childpage\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"say me today's quote\",\r\n-\r\n-//       response:\r\n-//         \"Determination is the power that sees us through all our frustration and obstacles. It helps in building our willpower which is the very basis of success.\",\r\n-\r\n-//       // route: \"/childpage\",\r\n-//     },\r\n-//     {\r\n-//       utterance: \"go back\",\r\n-//       response: \"Going back.\",\r\n-//       action: goBack, // Note the use of an action property\r\n-//     },\r\n-//     {\r\n-//       utterance: \"go forward\",\r\n-//       response: \"Going forward.\",\r\n-//       action: goForward,\r\n-//     },\r\n-//     {\r\n-//       utterance: \"play video\",\r\n-//       // response: \"Playing video.\",\r\n-//       action: playVideo,\r\n-//     },\r\n-//     {\r\n-//       utterance: \"pause video\",\r\n-//       // response: \"Pausing video.\",\r\n-//       action: pauseVideo,\r\n-//     },\r\n-//     {\r\n-//       utterance: \"start video\",\r\n-//       // response: \"Playing video.\",\r\n-//       action: playVideo,\r\n-//     },\r\n-//     {\r\n-//       utterance: \"stop video\",\r\n-//       // response: \"Playing video.\",\r\n-//       action: pauseVideo,\r\n-//     },\r\n-//     {\r\n-//       utterance: \"scroll up\",\r\n-//       // response: \"Scrolling up.\",\r\n-//       action: scrollUp,\r\n-//     },\r\n-//     {\r\n-//       utterance: \"scroll down\",\r\n-//       // response: \"Scrolling down.\",\r\n-//       action: scrollDown,\r\n-//     },\r\n-//     {\r\n-//       utterance: \"go up\",\r\n-\r\n-//       // response: \"Scrolling up.\",\r\n-//       action: scrollUp,\r\n-//     },\r\n-//     {\r\n-//       utterance: \"go down\",\r\n-//       // response: \"Scrolling down.\",\r\n-//       action: scrollDown,\r\n-//     },\r\n-//     {\r\n-//       utterance: \"scroll to top\",\r\n-//       action: scrollToTop,\r\n-//     },\r\n-//     {\r\n-//       utterance: \"scroll to bottom\",\r\n-//       action: scrollToBottom,\r\n-//     },\r\n-//   ];\r\n-//   return (\r\n-//     <div className=\"speech-bot-container\">\r\n-//       <div\r\n-//         className={`button-container ${\r\n-//           isListening ? \"voicebotframeactive\" : \"voicebotframe\"\r\n-//         }`}\r\n-//       >\r\n-//         <div onClick={isListening ? stopListening : startListening}>\r\n-//           <iframe\r\n-//             src={\r\n-//               isListening\r\n-//                 ? \"https://lottie.host/?file=a89aca3f-5407-4052-82c3-2048afca7a9f/NpCdWzLSKD.json\"\r\n-//                 : \"https://lottie.host/?file=d2b6cc0e-fe95-4847-85b5-35365fca7e00/vTudpCuPZq.json\"\r\n-//             }\r\n-//             width=\"120\" // Set your desired width\r\n-//             height=\"120\" // Set your desired height\r\n-//             title={isListening ? \"Stop Animation\" : \"Start Animation\"}\r\n-//             className={isListening ? \"voicebotframeactive\" : \"voicebotframe\"}\r\n-//           ></iframe>\r\n-//           {isListening ? (\r\n-//             <div className=\"overlay\" onClick={stopListening}></div>\r\n-//           ) : (\r\n-//             <div className=\"overlay\" onClick={startListening}></div>\r\n-//           )}\r\n-//         </div>\r\n-//       </div>\r\n-//     </div>\r\n-//   );\r\n-// };\r\n-\r\n-// export default VoiceBot;\r\n-\r\n-// All functionalities but messed up\r\n-\r\n-// import React, { useState, useEffect, useRef } from \"react\";\r\n-// import { useNavigate, useLocation } from \"react-router-dom\";\r\n-// import Fuse from \"fuse.js\";\r\n-// import \"./VoiceBot.css\";\r\n-\r\n-// const VoiceBot = ({ videoRef, takeTestRef, goBackRef }) => {\r\n-//   const [isListening, setIsListening] = useState(false);\r\n-//   const [isSpeaking, setIsSpeaking] = useState(false);\r\n-//   const recognition = useRef(null);\r\n-//   const speechSynthesis = useRef(window.speechSynthesis);\r\n-//   const hasGreeted = useRef(false);\r\n-//   const navigate = useNavigate();\r\n-//   const location = useLocation();\r\n-//   const isRecognitionActive = useRef(false);\r\n-\r\n-//   useEffect(() => {\r\n-//     recognition.current = new window.webkitSpeechRecognition();\r\n-//     recognition.current.continuous = true;\r\n-//     recognition.current.interimResults = false;\r\n-//     recognition.current.onresult = onResult;\r\n-//     recognition.current.onend = onRecognitionEnd;\r\n-\r\n-//     return () => {\r\n-//       if (recognition.current) {\r\n-//         recognition.current.abort();\r\n-//       }\r\n-//     };\r\n-//   }, [location.pathname]);\r\n-\r\n-//   const onResult = (event) => {\r\n-//     const resultIndex = event.resultIndex;\r\n-//     const transcript = event.results[resultIndex][0].transcript\r\n-//       .trim()\r\n-//       .toLowerCase();\r\n-\r\n-//     if (event.results[resultIndex].isFinal) {\r\n-//       console.log(`Recognized text: ${transcript}`);\r\n-//       if (transcript.includes(\"brain\")) {\r\n-//         console.log(\"Wake word heard, processing command...\");\r\n-//         handleCommandWithFuse(transcript.replace(\"brain\", \"\"));\r\n-//       }\r\n-//     }\r\n-//   };\r\n-\r\n-//   const startListening = () => {\r\n-//     if (!isRecognitionActive.current) {\r\n-//       setIsListening(true);\r\n-//       recognition.current.start();\r\n-//       isRecognitionActive.current = true;\r\n-//     }\r\n-//   };\r\n-\r\n-//   const stopListening = () => {\r\n-//     if (isRecognitionActive.current) {\r\n-//       setIsListening(false);\r\n-//       recognition.current.stop();\r\n-//       isRecognitionActive.current = false;\r\n-//     }\r\n-//   };\r\n-\r\n-//   const onRecognitionEnd = () => {\r\n-//     isRecognitionActive.current = false;\r\n-//     if (isListening) {\r\n-//       startListening();\r\n-//     }\r\n-//   };\r\n-\r\n-//   const speak = (message) => {\r\n-//     const utterance = new SpeechSynthesisUtterance(message);\r\n-//     utterance.onend = () => {\r\n-//       setIsSpeaking(false);\r\n-//       if (isListening && !isRecognitionActive.current) {\r\n-//         startListening();\r\n-//       }\r\n-//     };\r\n-\r\n-//     setIsSpeaking(true);\r\n-//     if (isRecognitionActive.current) {\r\n-//       stopListening(); // Adjusted to use stopListening\r\n-//     }\r\n-//     speechSynthesis.current.speak(utterance);\r\n-//   };\r\n-\r\n-//   useEffect(() => {\r\n-//     if (isListening && !hasGreeted.current) {\r\n-//       speak(\"Hello, I'm Brane. How can I assist you today?\");\r\n-//       hasGreeted.current = true;\r\n-//     }\r\n-//   }, [isListening]);\r\n-\r\n-//   const goBack = () => {\r\n-//     if (window.history.length > 1) {\r\n-//       navigate(-1);\r\n-//     } else {\r\n-//       speak(\"Can't go back any further.\");\r\n-//     }\r\n-//   };\r\n-\r\n-//   const goForward = () => {\r\n-//     // Unfortunately, there's no direct way to check if you can go forward in the history.\r\n-//     // You might need to manage this state manually based on user navigation.\r\n-//     navigate(1);\r\n-//   };\r\n-\r\n-//   const playVideo = () => {\r\n-//     if (videoRef.current && !videoRef.current.paused) {\r\n-//       speak(\"Video is already playing.\");\r\n-//     } else if (videoRef.current) {\r\n-//       videoRef.current.play();\r\n-//       speak(\"Playing video.\");\r\n-//     } else {\r\n-//       speak(\"No video to play.\");\r\n-//     }\r\n-//   };\r\n-\r\n-//   const pauseVideo = () => {\r\n-//     if (videoRef.current && videoRef.current.paused) {\r\n-//       speak(\"Video is already paused.\");\r\n-//     } else if (videoRef.current) {\r\n-//       videoRef.current.pause();\r\n-//       speak(\"Video paused.\");\r\n-//     } else {\r\n-//       speak(\"No video to pause.\");\r\n-//     }\r\n-//   };\r\n-\r\n-//   const scrollAmount = window.innerHeight * 0.82;\r\n-\r\n-//   const scrollUp = () => {\r\n-//     if (window.pageYOffset === 0) {\r\n-//       speak(\"Already at the top of the page.\");\r\n-//     } else {\r\n-//       window.scrollBy(0, -scrollAmount);\r\n-//       speak(\"Scrolled up.\");\r\n-//     }\r\n-//   };\r\n-\r\n-//   const scrollDown = () => {\r\n-//     const maxScrollTop =\r\n-//       document.documentElement.scrollHeight - window.innerHeight;\r\n-//     if (window.pageYOffset >= maxScrollTop) {\r\n-//       speak(\"Already at the bottom of the page.\");\r\n-//     } else {\r\n-//       window.scrollBy(0, scrollAmount);\r\n-//       speak(\"Scrolled down.\");\r\n-//     }\r\n-//   };\r\n-\r\n-//   const scrollToTop = () => {\r\n-//     if (window.pageYOffset === 0) {\r\n-//       speak(\"Already at the top of the page.\");\r\n-//     } else {\r\n-//       window.scrollTo(0, 0);\r\n-//       speak(\"Scrolled to the top of the page.\");\r\n-//     }\r\n-//   };\r\n-\r\n-//   const scrollToBottom = () => {\r\n-//     const maxScrollTop =\r\n-//       document.documentElement.scrollHeight - window.innerHeight;\r\n-//     if (window.pageYOffset >= maxScrollTop) {\r\n-//       speak(\"Already at the bottom of the page.\");\r\n-//     } else {\r\n-//       window.scrollTo(0, document.body.scrollHeight);\r\n-//       speak(\"Scrolled to the bottom of the page.\");\r\n-//     }\r\n-//   };\r\n-\r\n-//   // const speak = (message) => {\r\n-//   //   const utterance = new SpeechSynthesisUtterance(message);\r\n-//   //   utterance.onend = () => {\r\n-//   //     setIsSpeaking(false);\r\n-//   //     console.log(\"Speaking ended.\");\r\n-//   //     // Only restart recognition if we're still supposed to be listening\r\n-//   //     // if (isListening) {\r\n-//   //     //   if (restartRecognitionTimeout.current) {\r\n-//   //     //     clearTimeout(restartRecognitionTimeout.current);\r\n-//   //     //   }\r\n-//   //     //   restartRecognitionTimeout.current = setTimeout(() => {\r\n-//   //     //     console.log(\"Recognition restarted.\");\r\n-//   //     //     recognition.current.start();\r\n-//   //     //   }, 100); // Delay to prevent immediate restart\r\n-//   //     // }\r\n-//   //     if (isListening && !recognition.current.starting) { // Check the flag before restarting\r\n-//   //       recognition.current.starting = true; // Set the flag when starting recognition\r\n-//   //       recognition.current.start();\r\n-//   //     }\r\n-//   //   };\r\n-\r\n-//   //   setIsSpeaking(true);\r\n-//   //   console.log(\"Speaking started.\");\r\n-//   //   recognition.current.stop(); // Stop recognition when the bot starts speaking\r\n-//   //   speechSynthesis.current.speak(utterance);\r\n-//   // };\r\n-\r\n-//   // const onRecognitionEnd = () => {\r\n-//   //   console.log(\"Recognition ended.\");\r\n-//   //   setIsRecognitionActive(false); // Update state when recognition ends\r\n-//   //   recognition.current.starting = false; // Reset the flag when recognition ends\r\n-//   //   // We now check if the recognition is already running before starting it again\r\n-//   //   if (isListening && !isSpeaking && !recognition.current?.starting) {\r\n-//   //     console.log(\"Restarting recognition.\");\r\n-//   //     recognition.current.start();\r\n-//   //   }\r\n-//   // };\r\n-\r\n-//   // useEffect(() => {\r\n-//   //   if (isListening && !hasGreeted.current) {\r\n-//   //     speak(\"Hello, I'm Brane. How can I assist you today?\");\r\n-//   //     hasGreeted.current = true;\r\n-//   //   } else if (isListening && !isSpeaking) {\r\n-//   //     recognition.current.start();\r\n-//   //   }\r\n-//   // }, [isListening, isSpeaking]);\r\n-\r\n-//   // const startListening = () => {\r\n-//   //   console.log(\"Attempting to start listening.\");\r\n-//   //   if (recognition.current && !recognition.current.starting) {\r\n-//   //     setIsListening(true);\r\n-//   //     recognition.current.starting = true; // Set the flag when starting recognition\r\n-//   //     recognition.current.start();\r\n-//   //     console.log(\"Listening started.\");\r\n-//   //   }\r\n-//   // };\r\n-\r\n-//   // const stopListening = () => {\r\n-//   //   console.log(\"Stopping listening.\");\r\n-\r\n-//   //   setIsListening(false);\r\n-//   //   recognition.current.stop();\r\n-//   //   if (speechSynthesis.current.speaking) {\r\n-//   //     speechSynthesis.current.cancel();\r\n-//   //   }\r\n-//   //   if (restartRecognitionTimeout.current) {\r\n-//   //     clearTimeout(restartRecognitionTimeout.current);\r\n-//   //   }\r\n-//   //   console.log(\"Listening stopped.\");\r\n-//   // };\r\n-//   // Handle start and stop listening logic\r\n-\r\n-//   useEffect(() => {\r\n-//     if (isListening && !hasGreeted.current) {\r\n-//       speak(\"Hello, I'm Brane. How can I assist you today?\");\r\n-//       hasGreeted.current = true;\r\n-//     }\r\n-//   }, [isListening]);\r\n-\r\n-//   // const handleCommandWithFuse = (command) => {\r\n-//   //   const fuse = new Fuse(commands, { keys: [\"utterance\"], threshold: 0.4 });\r\n-//   //   const results = fuse.search(command);\r\n-//   //   const foundCommand = results.length ? results[0].item : null;\r\n-\r\n-//   //   if (foundCommand) {\r\n-//   //     console.log(\"Command found:\", foundCommand.utterance);\r\n-//   //     speak(foundCommand.response);\r\n-//   //     if (foundCommand.route) {\r\n-//   //       navigate(foundCommand.route); // Navigate to the route specified in the command\r\n-//   //     }\r\n-//   //   } else {\r\n-//   //     console.log(\"No command found.\");\r\n-//   //     speak(\"I'm not sure how to respond to that.\");\r\n-//   //   }\r\n-//   // };\r\n-\r\n-//   const handleCommandWithFuse = (command) => {\r\n-//     const fuse = new Fuse(commands, { keys: [\"utterance\"], threshold: 0.4 });\r\n-//     const results = fuse.search(command);\r\n-//     const foundCommand = results.length ? results[0].item : null;\r\n-\r\n-//     if (foundCommand) {\r\n-//       console.log(\"Command found:\", foundCommand.utterance);\r\n-\r\n-//       if (foundCommand.action) {\r\n-//         foundCommand.action();\r\n-//       } else if (foundCommand.route) {\r\n-//         navigate(foundCommand.route);\r\n-//       }\r\n-\r\n-//       if (foundCommand.response) {\r\n-//         speak(foundCommand.response);\r\n-//       }\r\n-//     } else {\r\n-//       console.log(\"No command found.\");\r\n-//       speak(\"I'm not sure how to respond to that.\");\r\n-//     }\r\n-//   };\r\n-\r\n-//   const commands = [\r\n-//     {\r\n-//       utterance: \"Hello who are you ?\",\r\n-\r\n-//       response:\r\n-//         \"Hi! This is Brane! your Voice bot from Brane Education How can I Assist you Today ?\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"Hello\",\r\n-\r\n-//       response: \"Hi! How can I assist you today?\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"hello\",\r\n-\r\n-//       response: \"Hi! How can I assist you today?\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"Hi.\",\r\n-\r\n-//       response: \"Hello! How can I assist you today?\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"Hey there\",\r\n-\r\n-//       response: \"Hi! How can I assist you today?\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"Good morning Brane.\",\r\n-\r\n-//       response: \"Hey Hiii! Good morning  ! How can I help you?\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"Good afternoon Brane.\",\r\n-\r\n-//       response: \"Hey Hiii! Good after noon ! How can I help you?\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"Good evening Brane.\",\r\n-\r\n-//       response: \"Hey Hiii! Good evening ! How can I help you?\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"can you please take me to login page\",\r\n-//       route: \"/login\",\r\n-//       routeDescription: \"login page\",\r\n-//       response: \"Navigating to the login page.\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"go to login page\",\r\n-//       route: \"/login\",\r\n-//       routeDescription: \"login page\",\r\n-//       response: \"Navigating to the login page.\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"please take me to login page\",\r\n-//       route: \"/login\",\r\n-//       routeDescription: \"login page\",\r\n-//       response: \"Navigating to the login page.\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"Go to login page\",\r\n-//       route: \"/login\",\r\n-//       routeDescription: \"login page\",\r\n-//       response: \"Navigating to the login page.\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"open login page\",\r\n-//       route: \"/login\",\r\n-//       routeDescription: \"login page\",\r\n-//       response: \"Navigating to the login page.\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"can you please take me to signup page\",\r\n-//       route: \"/signup\",\r\n-//       routeDescription: \"signup page\",\r\n-//       response: \"Navigating to the signup page.\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"take me to signup page\",\r\n-//       route: \"/signup\",\r\n-//       routeDescription: \"signup page\",\r\n-//       response: \"Navigating to the signup page.\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"Go to signup page\",\r\n-//       route: \"/signup\",\r\n-//       routeDescription: \"signup page\",\r\n-//       response: \"Navigating to the signup page.\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"open signup page\",\r\n-//       route: \"/signup\",\r\n-//       routeDescription: \"signup page\",\r\n-//       response: \"Navigating to the signup page.\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"what are platform features\",\r\n-\r\n-//       response:\r\n-//         \"Dashboard, Dynamic time table, Learning Networks, Little Masters, Video Based Dictionary, General Search.\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"Features of platform\",\r\n-\r\n-//       response:\r\n-//         \"Dashboard, Dynamic time table, Learning Networks, Little Masters, Video Based Dictionary, General Search.\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"What does the platform offer\",\r\n-\r\n-//       response:\r\n-//         \"Dashboard, Dynamic time table, Learning Networks, Little Masters, Video Based Dictionary, General Search.\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"Say me the features of platform\",\r\n-\r\n-//       response:\r\n-//         \"Dashboard, Dynamic time table, Learning Networks, Little Masters, Video Based Dictionary, General Search.\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"Say me the services of platform\",\r\n-\r\n-//       response:\r\n-//         \"Dashboard, Dynamic time table, Learning Networks, Little Masters, Video Based Dictionary, General Search.\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"tell me the services offered by the platform\",\r\n-\r\n-//       response:\r\n-//         \"Dashboard, Dynamic time table, Learning Networks, Little Masters, Video Based Dictionary, General Search.\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"explain platform services\",\r\n-\r\n-//       response:\r\n-//         \"Dashboard, Dynamic time table, Learning Networks, Little Masters, Video Based Dictionary, General Search.\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"Give me the Parent voice of Julia Harris\",\r\n-\r\n-//       response:\r\n-//         \"Brane education has helped my son a lot in his studies. He improved a lot in his studies and is now able to score good marks in his exams\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"Play today's motivational video\",\r\n-\r\n-//       response: \"I am playing the video\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"Play today's video\",\r\n-\r\n-//       response: \"I am playing Motivational video\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"Leaders Voice\",\r\n-\r\n-//       response:\r\n-//         \"This Voice-interactive AI Platform is a game Changer. It revolutionizes education.\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"Curriculum Supported by Brane Education\",\r\n-\r\n-//       response:\r\n-//         \"we support multiple Boards let me say few Telangana State Board Andhra Pradesh Board Maharashtra Board Assam Board\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"Boards supported by the platform\",\r\n-\r\n-//       response:\r\n-//         \"we support multiple Boards let me say few Telangana State Board Andhra Pradesh Board Maharashtra Board Assam Board\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"Curriculum\",\r\n-\r\n-//       response:\r\n-//         \"we support multiple Boards let me say few Telangana State Board Andhra Pradesh Board Maharashtra Board Assam Board\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"Go to landing page\",\r\n-\r\n-//       response: \"Okay, I am taking you to the landing page.\",\r\n-\r\n-//       route: \"/childpage\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"take me to landing page\",\r\n-\r\n-//       response: \"Okay, I am taking you to the landing page.\",\r\n-\r\n-//       route: \"/childpage\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"move to landing page\",\r\n-\r\n-//       response: \"Okay, I am taking you to the landing page.\",\r\n-\r\n-//       route: \"/childpage\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"roll back to landing page\",\r\n-\r\n-//       response: \"Okay, I am taking you to the landing page.\",\r\n-\r\n-//       route: \"/childpage\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"move to landing page\",\r\n-\r\n-//       response: \"Okay, I am taking you to the landing page.\",\r\n-\r\n-//       route: \"/childpage\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"what is today's quote\",\r\n-\r\n-//       response:\r\n-//         \"Determination is the power that sees us through all our frustration and obstacles. It helps in building our willpower which is the very basis of success.\",\r\n-\r\n-//       // route: \"/childpage\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"Today's Inspirational quote\",\r\n-\r\n-//       response:\r\n-//         \"Determination is the power that sees us through all our frustration and obstacles. It helps in building our willpower which is the very basis of success.\",\r\n-\r\n-//       // route: \"/childpage\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"say me today's quote\",\r\n-\r\n-//       response:\r\n-//         \"Determination is the power that sees us through all our frustration and obstacles. It helps in building our willpower which is the very basis of success.\",\r\n-\r\n-//       // route: \"/childpage\",\r\n-//     },\r\n-//     {\r\n-//       utterance: \"go back\",\r\n-//       response: \"Going back.\",\r\n-//       action: goBack, // Note the use of an action property\r\n-//     },\r\n-//     {\r\n-//       utterance: \"go forward\",\r\n-//       response: \"Going forward.\",\r\n-//       action: goForward,\r\n-//     },\r\n-//     {\r\n-//       utterance: \"play video\",\r\n-//       // response: \"Playing video.\",\r\n-//       action: playVideo,\r\n-//     },\r\n-//     {\r\n-//       utterance: \"pause video\",\r\n-//       // response: \"Pausing video.\",\r\n-//       action: pauseVideo,\r\n-//     },\r\n-//     {\r\n-//       utterance: \"start video\",\r\n-//       // response: \"Playing video.\",\r\n-//       action: playVideo,\r\n-//     },\r\n-//     {\r\n-//       utterance: \"stop video\",\r\n-//       // response: \"Playing video.\",\r\n-//       action: pauseVideo,\r\n-//     },\r\n-//     {\r\n-//       utterance: \"scroll up\",\r\n-//       // response: \"Scrolling up.\",\r\n-//       action: scrollUp,\r\n-//     },\r\n-//     {\r\n-//       utterance: \"scroll down\",\r\n-//       // response: \"Scrolling down.\",\r\n-//       action: scrollDown,\r\n-//     },\r\n-//     {\r\n-//       utterance: \"go up\",\r\n-\r\n-//       // response: \"Scrolling up.\",\r\n-//       action: scrollUp,\r\n-//     },\r\n-//     {\r\n-//       utterance: \"go down\",\r\n-//       // response: \"Scrolling down.\",\r\n-//       action: scrollDown,\r\n-//     },\r\n-//     {\r\n-//       utterance: \"scroll to top\",\r\n-//       action: scrollToTop,\r\n-//     },\r\n-//     {\r\n-//       utterance: \"scroll to bottom\",\r\n-//       action: scrollToBottom,\r\n-//     },\r\n-//     {\r\n-//       utterance: \"go back\",\r\n-//       action: goBackRef?.current?.click, // Use goBackRef directly\r\n-//       response: \"Going back.\",\r\n-//     },\r\n-//     {\r\n-//       utterance: \"take test\",\r\n-//       action: takeTestRef?.current?.click, // Use takeTestRef directly\r\n-//       response: \"Starting the test.\",\r\n-//     },\r\n-//   ];\r\n-//   return (\r\n-//     <div className=\"speech-bot-container\">\r\n-//       <div\r\n-//         className={`button-container ${\r\n-//           isListening ? \"voicebotframeactive\" : \"voicebotframe\"\r\n-//         }`}\r\n-//       >\r\n-//         <div onClick={isListening ? stopListening : startListening}>\r\n-//           <iframe\r\n-//             src={\r\n-//               isListening\r\n-//                 ? \"https://lottie.host/?file=a89aca3f-5407-4052-82c3-2048afca7a9f/NpCdWzLSKD.json\"\r\n-//                 : \"https://lottie.host/?file=d2b6cc0e-fe95-4847-85b5-35365fca7e00/vTudpCuPZq.json\"\r\n-//             }\r\n-//             width=\"120\" // Set your desired width\r\n-//             height=\"120\" // Set your desired height\r\n-//             title={isListening ? \"Stop Animation\" : \"Start Animation\"}\r\n-//             className={isListening ? \"voicebotframeactive\" : \"voicebotframe\"}\r\n-//           ></iframe>\r\n-//           {isListening ? (\r\n-//             <div className=\"overlay\" onClick={stopListening}></div>\r\n-//           ) : (\r\n-//             <div className=\"overlay\" onClick={startListening}></div>\r\n-//           )}\r\n-//         </div>\r\n-//       </div>\r\n-//     </div>\r\n-//   );\r\n-// };\r\n-\r\n-// export default VoiceBot;\r\n-import React, { useState, useEffect, useRef } from \"react\";\r\n-import { useNavigate, useLocation } from \"react-router-dom\";\r\n-import Fuse from \"fuse.js\";\r\n-import \"./VoiceBot.css\";\r\n-import chatbotimage from \"../../assets/chatbotgif.gif\"\r\n-\r\n-const VoiceBot = ({ videoRef}) => {\r\n-  const [isListening, setIsListening] = useState(false);\r\n-  const [isSpeaking, setIsSpeaking] = useState(false);\r\n-  const recognition = useRef(null);\r\n-  const speechSynthesis = useRef(window.speechSynthesis);\r\n-  const [hasGreeted, setHasGreeted] = useState(false);\r\n-  const navigate = useNavigate();\r\n-\r\n-\r\n- // Initialize speech recognition\r\n- useEffect(() => {\r\n-  recognition.current = new window.webkitSpeechRecognition();\r\n-  recognition.current.continuous = true;\r\n-  recognition.current.interimResults = false;\r\n-  recognition.current.onresult = onResult;\r\n-  recognition.current.onend = onRecognitionEnd;\r\n-  recognition.current.starting = false;\r\n-\r\n-  recognition.current.onerror = (event) => {\r\n-    console.error(\"Recognition error:\", event.error);\r\n-    if (isListening && !isSpeaking) {\r\n-      restartRecognition();\r\n-    }\r\n-  };\r\n-\r\n-  return () => {\r\n-    if (recognition.current) {\r\n-      recognition.current.abort();\r\n-    }\r\n-  };\r\n-}, []);\r\n-\r\n-  useEffect(() => {\r\n-    const checkRecognition = () => {\r\n-      if (isListening && !isSpeaking && !recognition.current.starting) {\r\n-        console.log(\"Restarting recognition because it's not active.\");\r\n-        recognition.current.starting = true;\r\n-        recognition.current.start();\r\n-        console.log(\"Restarted recognition.\");\r\n-      }\r\n-    };\r\n-\r\n-    const recognitionCheckInterval = setInterval(checkRecognition, 500); // Check every .5 second\r\n-\r\n-    return () => {\r\n-      clearInterval(recognitionCheckInterval);\r\n-    };\r\n-  }, [isListening, isSpeaking]);\r\n-\r\n-\r\n-  const historyStack = useRef([]);\r\n-\r\n-  useEffect(() => {\r\n-    return () => {\r\n-      // Clean up the listener when the component unmounts\r\n-      window.removeEventListener(\"popstate\", handlePopState);\r\n-    };\r\n-  }, []);\r\n-\r\n-  const handlePopState = () => {\r\n-    // This needs to handle both back and forward browser actions\r\n-    // Use some logic to determine whether it's a back or forward action\r\n-    // For simplicity, assume it's always back\r\n-    historyStack.current.pop();\r\n-    forwardStack.current.length = 0; // Clear forward stack on manual navigation\r\n-  };\r\n-  \r\n-\r\n-  // Add a new entry to the stack whenever navigate is called\r\n-  const customNavigate = (to, options) => {\r\n-    historyStack.current.push(to);\r\n-    navigate(to, options);\r\n-  };\r\n-\r\n-  // Listen to popstate events to update the history stack\r\n-  useEffect(() => {\r\n-    window.addEventListener(\"popstate\", handlePopState);\r\n-  }, []);\r\n-\r\n-  const forwardStack = useRef([]);\r\n-\r\n-  const goBack = () => {\r\n-    if (window.history.state && window.history.state.idx > 0) {\r\n-      window.history.back();\r\n-      speak(\"Going back\");\r\n-    } else {\r\n-      speak(\"Can't go back any further.\");\r\n-    }\r\n-  };\r\n-\r\n-  const goForward = () => {\r\n-    if (window.history.state && window.history.state.idx < window.history.length - 1) {\r\n-      window.history.forward();\r\n-      speak(\"Going forward\");\r\n-    } else {\r\n-      speak(\"No forward history available.\");\r\n-    }\r\n-  };\r\n-\r\n-  const playVideo = () => {\r\n-    if (videoRef.current) {\r\n-      videoRef.current.play();\r\n-      speak(\"Playing video.\");\r\n-    } else {\r\n-      speak(\"No video to play.\");\r\n-    }\r\n-  };\r\n-\r\n-  const pauseVideo = () => {\r\n-    if (videoRef.current) {\r\n-      videoRef.current.pause();\r\n-      speak(\"Video paused.\");\r\n-    } else {\r\n-      speak(\"No video to pause.\");\r\n-    }\r\n-  };\r\n-\r\n-  const scrollAmount = window.innerHeight * 0.82;\r\n-\r\n-  const scrollUp = () => {\r\n-    if (window.pageYOffset === 0) {\r\n-      speak(\"Already at the top of the page.\");\r\n-    } else {\r\n-      window.scrollBy(0, -scrollAmount);\r\n-      speak(\"Scrolled up.\");\r\n-    }\r\n-  };\r\n-\r\n-  const scrollDown = () => {\r\n-    const maxScrollTop =\r\n-      document.documentElement.scrollHeight - window.innerHeight;\r\n-    if (window.pageYOffset >= maxScrollTop) {\r\n-      speak(\"Already at the bottom of the page.\");\r\n-    } else {\r\n-      window.scrollBy(0, scrollAmount);\r\n-      speak(\"Scrolled down.\");\r\n-    }\r\n-  };\r\n-\r\n-  const scrollToTop = () => {\r\n-    if (window.pageYOffset === 0) {\r\n-      speak(\"Already at the top of the page.\");\r\n-    } else {\r\n-      window.scrollTo(0, 0);\r\n-      speak(\"Scrolled to the top of the page.\");\r\n-    }\r\n-  };\r\n-\r\n-  const scrollToBottom = () => {\r\n-    const maxScrollTop =\r\n-      document.documentElement.scrollHeight - window.innerHeight;\r\n-    if (window.pageYOffset >= maxScrollTop) {\r\n-      speak(\"Already at the bottom of the page.\");\r\n-    } else {\r\n-      window.scrollTo(0, document.body.scrollHeight);\r\n-      speak(\"Scrolled to the bottom of the page.\");\r\n-    }\r\n-  };\r\n-\r\n-  const speak = (message) => {\r\n-    const utterance = new SpeechSynthesisUtterance(message);\r\n-    utterance.onend = () => {\r\n-      setIsSpeaking(false);\r\n-      // Restart recognition after speaking has ended\r\n-      if (isListening) {\r\n-        restartRecognition();\r\n-      }\r\n-    };\r\n-  \r\n-    setIsSpeaking(true);\r\n-    // Stop recognition when the bot starts speaking\r\n-    if (recognition.current) {\r\n-      recognition.current.abort();\r\n-    }\r\n-    speechSynthesis.current.speak(utterance);\r\n-  };\r\n-  \r\n-\r\n-  const restartRecognition = () => {\r\n-    // Check if recognition is not already started and if the bot is set to listen\r\n-    if (recognition.current && !recognition.current.starting && isListening && !isSpeaking) {\r\n-      recognition.current.abort(); // Ensure any ongoing recognition is stopped\r\n-      recognition.current.starting = true;\r\n-      recognition.current.start();\r\n-    }\r\n-  };\r\n-  \r\n-    // Restart recognition when bot finishes speaking and isListening is true\r\n-    useEffect(() => {\r\n-      if (!isSpeaking && isListening) {\r\n-        restartRecognition();\r\n-      }\r\n-    }, [isSpeaking, isListening]);\r\n-\r\n-  const onResult = (event) => {\r\n-    const resultIndex = event.resultIndex;\r\n-    const transcript = event.results[resultIndex][0].transcript\r\n-      .trim()\r\n-      .toLowerCase();\r\n-\r\n-    if (event.results[resultIndex].isFinal) {\r\n-      console.log(`Recognized text: ${transcript}`);\r\n-      if (transcript.includes(\"brain\")) {\r\n-        console.log(\"Wake word heard, processing command...\");\r\n-        handleCommandWithFuse(transcript.replace(\"brain\", \"\"));\r\n-      }\r\n-    }\r\n-  };\r\n-\r\n-  const onRecognitionEnd = () => {\r\n-    recognition.current.starting = false;\r\n-    if (isListening && !isSpeaking) {\r\n-      restartRecognition();\r\n-    }\r\n-  };\r\n-\r\n-  useEffect(() => {\r\n-    if (isListening && !hasGreeted) {\r\n-      speak(\"Hello, I'm Brane. How can I help you today?\");\r\n-      setHasGreeted(true);\r\n-    }\r\n-  }, [isListening, hasGreeted]);\r\n-\r\n-\r\n-  // Updated startListening function\r\n-  const startListening = () => {\r\n-    setIsListening(true);\r\n-    if (!recognition.current.starting) {\r\n-      restartRecognition();\r\n-    }\r\n-  };\r\n-\r\n-  // Updated stopListening function\r\n-  const stopListening = () => {\r\n-    setIsListening(false);\r\n-    if (speechSynthesis.current.speaking) {\r\n-      speechSynthesis.current.cancel();\r\n-    }\r\n-    recognition.current.abort();\r\n-  };\r\n-\r\n-\r\n-  const handleCommandWithFuse = (command) => {\r\n-    const fuse = new Fuse(commands, { keys: [\"utterance\"], threshold: 0.4 });\r\n-    const results = fuse.search(command);\r\n-    const foundCommand = results.length ? results[0].item : null;\r\n-\r\n-    if (foundCommand) {\r\n-      console.log(\"Command found:\", foundCommand.utterance);\r\n-\r\n-      if (foundCommand.action) {\r\n-        foundCommand.action();\r\n-      } else if (foundCommand.route) {\r\n-        navigate(foundCommand.route);\r\n-      }\r\n-\r\n-      // Speak after performing the action or navigation\r\n-      speak(foundCommand.response);\r\n-    } else {\r\n-      console.log(\"No command found.\");\r\n-      speak(\"I'm not sure how to respond to that.\");\r\n-    }\r\n-  };\r\n-\r\n-  const commands = [\r\n-    {\r\n-      utterance: \"Hello who are you ?\",\r\n-\r\n-      response:\r\n-        \"Hi! This is Brane! your Voice bot from Brane Education How can I Assist you Today ?\",\r\n-    },\r\n-\r\n-    {\r\n-      utterance: \"Hello\",\r\n-\r\n-      response: \"Hi! How can I assist you today?\",\r\n-    },\r\n-\r\n-    {\r\n-      utterance: \"hello\",\r\n-\r\n-      response: \"Hi! How can I assist you today?\",\r\n-    },\r\n-\r\n-    {\r\n-      utterance: \"Hi.\",\r\n-\r\n-      response: \"Hello! How can I assist you today?\",\r\n-    },\r\n-\r\n-    {\r\n-      utterance: \"Hey there\",\r\n-\r\n-      response: \"Hi! How can I assist you today?\",\r\n-    },\r\n-\r\n-    {\r\n-      utterance: \"Good morning Brane.\",\r\n-\r\n-      response: \"Hey Hiii! Good morning  ! How can I help you?\",\r\n-    },\r\n-\r\n-    {\r\n-      utterance: \"Good afternoon Brane.\",\r\n-\r\n-      response: \"Hey Hiii! Good after noon ! How can I help you?\",\r\n-    },\r\n-\r\n-    {\r\n-      utterance: \"Good evening Brane.\",\r\n-\r\n-      response: \"Hey Hiii! Good evening ! How can I help you?\",\r\n-    },\r\n-\r\n-    {\r\n-      utterance: \"can you please take me to login page\",\r\n-\r\n-      route: \"/login\",\r\n-\r\n-      response: \"Here's the Login Page, Please Login\",\r\n-    },\r\n-\r\n-    {\r\n-      utterance: \"please take me to login page\",\r\n-\r\n-      route: \"/login\",\r\n-\r\n-      response: \"Here's the Login Page, Please Login\",\r\n-    },\r\n-\r\n-    {\r\n-      utterance: \"Go to login page\",\r\n-\r\n-      route: \"/login\",\r\n-\r\n-      response: \"Here's the Login Page, Please Login\",\r\n-    },\r\n-\r\n-    {\r\n-      utterance: \"open login page\",\r\n-\r\n-      route: \"/login\",\r\n-\r\n-      response: \"Here's the Login Page, Please Login\",\r\n-    },\r\n-\r\n-    {\r\n-      utterance: \"can you please take me to signup page\",\r\n-\r\n-      route: \"/signup\",\r\n-\r\n-      response: \"Here's the signup page. Please proceed With Registration.\",\r\n-    },\r\n-\r\n-    {\r\n-      utterance: \"take me to signup page\",\r\n-\r\n-      route: \"/signup\",\r\n-\r\n-      response: \"Here's the signup page. Please proceed With Registration.\",\r\n-    },\r\n-\r\n-    {\r\n-      utterance: \"Go to signup page\",\r\n-\r\n-      route: \"/signup\",\r\n-\r\n-      response: \"Here's the signup page. Please proceed With Registration.\",\r\n-    },\r\n-\r\n-    {\r\n-      utterance: \"open signup page\",\r\n-\r\n-      route: \"/signup\",\r\n-\r\n-      response: \"Here's the signup page. Please proceed With Registration.\",\r\n-    },\r\n-\r\n-    {\r\n-      utterance: \"Go to face id\",\r\n-\r\n-      route: \"/login/faceid\",\r\n-\r\n-      response: \"Here's Face ID Login. Please proceed.\",\r\n-    },\r\n-\r\n-    {\r\n-      utterance: \"Go to face id login\",\r\n-\r\n-      route: \"/login/faceid\",\r\n-\r\n-      response: \"Here's Face ID Login. Please proceed.\",\r\n-    },\r\n-    {\r\n-      utterance: \"Go to face login\",\r\n-\r\n-      route: \"/login/faceid\",\r\n-\r\n-      response: \"Here's Face ID Login. Please proceed.\",\r\n-    },\r\n-\r\n-    {\r\n-      utterance: \"login with face id\",\r\n-\r\n-      route: \"/login/faceid\",\r\n-\r\n-      response: \"Here's Face ID Login. Please proceed.\",\r\n-    },\r\n-\r\n-    {\r\n-      utterance: \"login with face\",\r\n-\r\n-      route: \"/login/faceid\",\r\n-\r\n-      response: \"Here's Face ID Login. Please proceed.\",\r\n-    },\r\n-\r\n-    {\r\n-      utterance: \"i want to login with face\",\r\n-\r\n-      route: \"/login/faceid\",\r\n-\r\n-      response: \"Here's Face ID Login. Please proceed.\",\r\n-    },\r\n-\r\n-    {\r\n-      utterance: \"login with voice\",\r\n-\r\n-      route: \"/login/voiceid\",\r\n-\r\n-      response: \"Here's Voice Login. Please proceed.\",\r\n-    },\r\n-\r\n-    {\r\n-      utterance: \"i want to login with voice\",\r\n-\r\n-      route: \"/login/voiceid\",\r\n-\r\n-      response: \"Here's Voice Login. Please proceed.\",\r\n-    },\r\n-\r\n-    {\r\n-      utterance: \"go to voice login\",\r\n-\r\n-      route: \"/login/voiceid\",\r\n-\r\n-      response: \"Here's Voice Login. Please proceed.\",\r\n-    },\r\n-\r\n-    {\r\n-      utterance: \"login with voice\",\r\n-\r\n-      route: \"/login/voiceid\",\r\n-\r\n-      response: \"Here's Voice Login. Please proceed.\",\r\n-    },\r\n-\r\n-    {\r\n-      utterance: \"login with mobile\",\r\n-\r\n-      route: \"/login/mobile\",\r\n-\r\n-      response: \"Here's Mobile Login. Please proceed.\",\r\n-    },\r\n-\r\n-    {\r\n-      utterance: \"i want to login with mobile\",\r\n-\r\n-      route: \"/login/mobile\",\r\n-\r\n-      response: \"Here's Mobile Login. Please proceed.\",\r\n-    },\r\n-    {\r\n-      utterance: \"go to mobile login\",\r\n-\r\n-      route: \"/login/mobile\",\r\n-\r\n-      response: \"Here's Mobile Login. Please proceed.\",\r\n-    },\r\n-    {\r\n-      utterance: \"go to about page\",\r\n-\r\n-      route: \"/aboutus\",\r\n-\r\n-      response: \"This is About us.\",\r\n-    },\r\n-    {\r\n-      utterance: \"go to about us page\",\r\n-\r\n-      route: \"/aboutus\",\r\n-\r\n-      response: \"This is About us.\",\r\n-    },\r\n-    {\r\n-      utterance: \"open about us page\",\r\n-\r\n-      route: \"/aboutus\",\r\n-\r\n-      response: \"This is About us.\",\r\n-    },\r\n-    {\r\n-      utterance: \"open about page\",\r\n-\r\n-      route: \"/aboutus\",\r\n-\r\n-      response: \"This is About us.\",\r\n-    },\r\n-    {\r\n-      utterance: \"take me to about page\",\r\n-\r\n-      route: \"/aboutus\",\r\n-\r\n-      response: \"This is About us.\",\r\n-    },\r\n-    {\r\n-      utterance: \"take me to about us page\",\r\n-\r\n-      route: \"/aboutus\",\r\n-\r\n-      response: \"This is About us.\",\r\n-    },\r\n-\r\n-    {\r\n-      utterance: \"go to contact page\",\r\n-\r\n       route: \"/contactus\",\r\n \r\n       response: \"You can contact us from here\",\r\n     },\r\n-    {\r\n-      utterance: \"go to about us page\",\r\n \r\n-      route: \"/aboutus\",\r\n \r\n-      response: \"This is About us.\",\r\n-    },\r\n     {\r\n-      utterance: \"open about us page\",\r\n-\r\n-      route: \"/aboutus\",\r\n-\r\n-      response: \"This is About us.\",\r\n-    },\r\n-    {\r\n-      utterance: \"open about page\",\r\n-\r\n-      route: \"/aboutus\",\r\n-\r\n-      response: \"This is About us.\",\r\n-    },\r\n-    {\r\n-      utterance: \"take me to about page\",\r\n-\r\n-      route: \"/aboutus\",\r\n-\r\n-      response: \"This is About us.\",\r\n-    },\r\n-    {\r\n-      utterance: \"take me to contact us page\",\r\n-\r\n-      route: \"/aboutus\",\r\n-\r\n-      response: \"This is About us.\",\r\n-    },\r\n-\r\n-\r\n-    {\r\n       utterance: \"what are platform features\",\r\n \r\n       response:\r\n         \"Dashboard, Dynamic time table, Learning Networks, Little Masters, Video Based Dictionary, General Search.\",\r\n"
                },
                {
                    "date": 1700643941442,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,3702 @@\n+import React, { useState, useEffect, useRef } from \"react\";\r\n+import { useNavigate, useLocation } from \"react-router-dom\";\r\n+import Fuse from \"fuse.js\";\r\n+import \"./VoiceBot.css\";\r\n+import chatbotimage from \"../../assets/chatbotgif.gif\"\r\n+\r\n+const VoiceBot = ({ videoRef}) => {\r\n+  const [isListening, setIsListening] = useState(false);\r\n+  const [isSpeaking, setIsSpeaking] = useState(false);\r\n+  const recognition = useRef(null);\r\n+  const speechSynthesis = useRef(window.speechSynthesis);\r\n+  const [hasGreeted, setHasGreeted] = useState(false);\r\n+  const navigate = useNavigate();\r\n+\r\n+\r\n+ // Initialize speech recognition\r\n+ useEffect(() => {\r\n+  recognition.current = new window.webkitSpeechRecognition();\r\n+  recognition.current.continuous = true;\r\n+  recognition.current.interimResults = false;\r\n+  recognition.current.onresult = onResult;\r\n+  recognition.current.onend = onRecognitionEnd;\r\n+  recognition.current.starting = false;\r\n+\r\n+  recognition.current.onerror = (event) => {\r\n+    console.error(\"Recognition error:\", event.error);\r\n+    if (isListening && !isSpeaking) {\r\n+      restartRecognition();\r\n+    }\r\n+  };\r\n+\r\n+  return () => {\r\n+    if (recognition.current) {\r\n+      recognition.current.abort();\r\n+    }\r\n+  };\r\n+}, []);\r\n+\r\n+  useEffect(() => {\r\n+    const checkRecognition = () => {\r\n+      if (isListening && !isSpeaking && !recognition.current.starting) {\r\n+        console.log(\"Restarting recognition because it's not active.\");\r\n+        recognition.current.starting = true;\r\n+        recognition.current.start();\r\n+        console.log(\"Restarted recognition.\");\r\n+      }\r\n+    };\r\n+\r\n+    const recognitionCheckInterval = setInterval(checkRecognition, 500); // Check every .5 second\r\n+\r\n+    return () => {\r\n+      clearInterval(recognitionCheckInterval);\r\n+    };\r\n+  }, [isListening, isSpeaking]);\r\n+\r\n+\r\n+  const historyStack = useRef([]);\r\n+\r\n+  useEffect(() => {\r\n+    return () => {\r\n+      // Clean up the listener when the component unmounts\r\n+      window.removeEventListener(\"popstate\", handlePopState);\r\n+    };\r\n+  }, []);\r\n+\r\n+  const handlePopState = () => {\r\n+    // This needs to handle both back and forward browser actions\r\n+    // Use some logic to determine whether it's a back or forward action\r\n+    // For simplicity, assume it's always back\r\n+    historyStack.current.pop();\r\n+    forwardStack.current.length = 0; // Clear forward stack on manual navigation\r\n+  };\r\n+  \r\n+\r\n+  // Add a new entry to the stack whenever navigate is called\r\n+  const customNavigate = (to, options) => {\r\n+    historyStack.current.push(to);\r\n+    navigate(to, options);\r\n+  };\r\n+\r\n+  // Listen to popstate events to update the history stack\r\n+  useEffect(() => {\r\n+    window.addEventListener(\"popstate\", handlePopState);\r\n+  }, []);\r\n+\r\n+  const forwardStack = useRef([]);\r\n+\r\n+  const goBack = () => {\r\n+    if (window.history.state && window.history.state.idx > 0) {\r\n+      window.history.back();\r\n+      speak(\"Going back\");\r\n+    } else {\r\n+      speak(\"Can't go back any further.\");\r\n+    }\r\n+  };\r\n+\r\n+  const goForward = () => {\r\n+    if (window.history.state && window.history.state.idx < window.history.length - 1) {\r\n+      window.history.forward();\r\n+      speak(\"Going forward\");\r\n+    } else {\r\n+      speak(\"No forward history available.\");\r\n+    }\r\n+  };\r\n+\r\n+  const playVideo = () => {\r\n+    if (videoRef.current) {\r\n+      videoRef.current.play();\r\n+      speak(\"Playing video.\");\r\n+    } else {\r\n+      speak(\"No video to play.\");\r\n+    }\r\n+  };\r\n+\r\n+  const pauseVideo = () => {\r\n+    if (videoRef.current) {\r\n+      videoRef.current.pause();\r\n+      speak(\"Video paused.\");\r\n+    } else {\r\n+      speak(\"No video to pause.\");\r\n+    }\r\n+  };\r\n+\r\n+  const scrollAmount = window.innerHeight * 0.82;\r\n+\r\n+  const scrollUp = () => {\r\n+    if (window.pageYOffset === 0) {\r\n+      speak(\"Already at the top of the page.\");\r\n+    } else {\r\n+      window.scrollBy(0, -scrollAmount);\r\n+      speak(\"Scrolled up.\");\r\n+    }\r\n+  };\r\n+\r\n+  const scrollDown = () => {\r\n+    const maxScrollTop =\r\n+      document.documentElement.scrollHeight - window.innerHeight;\r\n+    if (window.pageYOffset >= maxScrollTop) {\r\n+      speak(\"Already at the bottom of the page.\");\r\n+    } else {\r\n+      window.scrollBy(0, scrollAmount);\r\n+      speak(\"Scrolled down.\");\r\n+    }\r\n+  };\r\n+\r\n+  const scrollToTop = () => {\r\n+    if (window.pageYOffset === 0) {\r\n+      speak(\"Already at the top of the page.\");\r\n+    } else {\r\n+      window.scrollTo(0, 0);\r\n+      speak(\"Scrolled to the top of the page.\");\r\n+    }\r\n+  };\r\n+\r\n+  const scrollToBottom = () => {\r\n+    const maxScrollTop =\r\n+      document.documentElement.scrollHeight - window.innerHeight;\r\n+    if (window.pageYOffset >= maxScrollTop) {\r\n+      speak(\"Already at the bottom of the page.\");\r\n+    } else {\r\n+      window.scrollTo(0, document.body.scrollHeight);\r\n+      speak(\"Scrolled to the bottom of the page.\");\r\n+    }\r\n+  };\r\n+\r\n+  const speak = (message) => {\r\n+    const utterance = new SpeechSynthesisUtterance(message);\r\n+    utterance.onend = () => {\r\n+      setIsSpeaking(false);\r\n+      // Restart recognition after speaking has ended\r\n+      if (isListening) {\r\n+        restartRecognition();\r\n+      }\r\n+    };\r\n+  \r\n+    setIsSpeaking(true);\r\n+    // Stop recognition when the bot starts speaking\r\n+    if (recognition.current) {\r\n+      recognition.current.abort();\r\n+    }\r\n+    speechSynthesis.current.speak(utterance);\r\n+  };\r\n+  \r\n+\r\n+  const restartRecognition = () => {\r\n+    // Check if recognition is not already started and if the bot is set to listen\r\n+    if (recognition.current && !recognition.current.starting && isListening && !isSpeaking) {\r\n+      recognition.current.abort(); // Ensure any ongoing recognition is stopped\r\n+      recognition.current.starting = true;\r\n+      recognition.current.start();\r\n+    }\r\n+  };\r\n+  \r\n+    // Restart recognition when bot finishes speaking and isListening is true\r\n+    useEffect(() => {\r\n+      if (!isSpeaking && isListening) {\r\n+        restartRecognition();\r\n+      }\r\n+    }, [isSpeaking, isListening]);\r\n+\r\n+  const onResult = (event) => {\r\n+    const resultIndex = event.resultIndex;\r\n+    const transcript = event.results[resultIndex][0].transcript\r\n+      .trim()\r\n+      .toLowerCase();\r\n+\r\n+    if (event.results[resultIndex].isFinal) {\r\n+      console.log(`Recognized text: ${transcript}`);\r\n+      if (transcript.includes(\"brain\")) {\r\n+        console.log(\"Wake word heard, processing command...\");\r\n+        handleCommandWithFuse(transcript.replace(\"brain\", \"\"));\r\n+      }\r\n+    }\r\n+  };\r\n+\r\n+  const onRecognitionEnd = () => {\r\n+    recognition.current.starting = false;\r\n+    if (isListening && !isSpeaking) {\r\n+      restartRecognition();\r\n+    }\r\n+  };\r\n+\r\n+  useEffect(() => {\r\n+    if (isListening && !hasGreeted) {\r\n+      speak(\"Hello, I'm Brane. How can I help you today?\");\r\n+      setHasGreeted(true);\r\n+    }\r\n+  }, [isListening, hasGreeted]);\r\n+\r\n+\r\n+  // Updated startListening function\r\n+  const startListening = () => {\r\n+    setIsListening(true);\r\n+    if (!recognition.current.starting) {\r\n+      restartRecognition();\r\n+    }\r\n+  };\r\n+\r\n+  // Updated stopListening function\r\n+  const stopListening = () => {\r\n+    setIsListening(false);\r\n+    if (speechSynthesis.current.speaking) {\r\n+      speechSynthesis.current.cancel();\r\n+    }\r\n+    recognition.current.abort();\r\n+  };\r\n+\r\n+\r\n+  const handleCommandWithFuse = (command) => {\r\n+    const fuse = new Fuse(commands, { keys: [\"utterance\"], threshold: 0.4 });\r\n+    const results = fuse.search(command);\r\n+    const foundCommand = results.length ? results[0].item : null;\r\n+\r\n+    if (foundCommand) {\r\n+      console.log(\"Command found:\", foundCommand.utterance);\r\n+\r\n+      if (foundCommand.action) {\r\n+        foundCommand.action();\r\n+      } else if (foundCommand.route) {\r\n+        navigate(foundCommand.route);\r\n+      }\r\n+\r\n+      // Speak after performing the action or navigation\r\n+      speak(foundCommand.response);\r\n+    } else {\r\n+      console.log(\"No command found.\");\r\n+      speak(\"I'm not sure how to respond to that.\");\r\n+    }\r\n+  };\r\n+\r\n+  const commands = [\r\n+    {\r\n+      utterance: \"Hello who are you ?\",\r\n+\r\n+      response:\r\n+        \"Hi! This is Brane! your Voice bot from Brane Education How can I Assist you Today ?\",\r\n+    },\r\n+\r\n+    {\r\n+      utterance: \"Hello\",\r\n+\r\n+      response: \"Hi! How can I assist you today?\",\r\n+    },\r\n+\r\n+    {\r\n+      utterance: \"hello\",\r\n+\r\n+      response: \"Hi! How can I assist you today?\",\r\n+    },\r\n+\r\n+    {\r\n+      utterance: \"Hi.\",\r\n+\r\n+      response: \"Hello! How can I assist you today?\",\r\n+    },\r\n+\r\n+    {\r\n+      utterance: \"Hey there\",\r\n+\r\n+      response: \"Hi! How can I assist you today?\",\r\n+    },\r\n+\r\n+    {\r\n+      utterance: \"Good morning Brane.\",\r\n+\r\n+      response: \"Hey Hiii! Good morning  ! How can I help you?\",\r\n+    },\r\n+\r\n+    {\r\n+      utterance: \"Good afternoon Brane.\",\r\n+\r\n+      response: \"Hey Hiii! Good after noon ! How can I help you?\",\r\n+    },\r\n+\r\n+    {\r\n+      utterance: \"Good evening Brane.\",\r\n+\r\n+      response: \"Hey Hiii! Good evening ! How can I help you?\",\r\n+    },\r\n+\r\n+    {\r\n+      utterance: \"take me to homepage\",\r\n+\r\n+      route: \"/\",\r\n+\r\n+      response: \"You're in Homepage now\",\r\n+    },\r\n+    {\r\n+      utterance: \"open homepage\",\r\n+\r\n+      route: \"/\",\r\n+\r\n+      response: \"You're in Homepage now\",\r\n+    },\r\n+    {\r\n+      utterance: \"take me homepage\",\r\n+\r\n+      route: \"/\",\r\n+\r\n+      response: \"You're in Homepage now\",\r\n+    },\r\n+    {\r\n+      utterance: \"can you please take me to login page\",\r\n+\r\n+      route: \"/login\",\r\n+\r\n+      response: \"Here's the Login Page, Please Login\",\r\n+    },\r\n+\r\n+    {\r\n+      utterance: \"please take me to login page\",\r\n+\r\n+      route: \"/login\",\r\n+\r\n+      response: \"Here's the Login Page, Please Login\",\r\n+    },\r\n+\r\n+    {\r\n+      utterance: \"Go to login page\",\r\n+\r\n+      route: \"/login\",\r\n+\r\n+      response: \"Here's the Login Page, Please Login\",\r\n+    },\r\n+\r\n+    {\r\n+      utterance: \"open login page\",\r\n+\r\n+      route: \"/login\",\r\n+\r\n+      response: \"Here's the Login Page, Please Login\",\r\n+    },\r\n+\r\n+    {\r\n+      utterance: \"can you please take me to signup page\",\r\n+\r\n+      route: \"/signup\",\r\n+\r\n+      response: \"Here's the signup page. Please proceed With Registration.\",\r\n+    },\r\n+\r\n+    {\r\n+      utterance: \"take me to signup page\",\r\n+\r\n+      route: \"/signup\",\r\n+\r\n+      response: \"Here's the signup page. Please proceed With Registration.\",\r\n+    },\r\n+\r\n+    {\r\n+      utterance: \"Go to signup page\",\r\n+\r\n+      route: \"/signup\",\r\n+\r\n+      response: \"Here's the signup page. Please proceed With Registration.\",\r\n+    },\r\n+\r\n+    {\r\n+      utterance: \"open signup page\",\r\n+\r\n+      route: \"/signup\",\r\n+\r\n+      response: \"Here's the signup page. Please proceed With Registration.\",\r\n+    },\r\n+\r\n+    {\r\n+      utterance: \"Go to face id\",\r\n+\r\n+      route: \"/login/faceid\",\r\n+\r\n+      response: \"Here's Face ID Login. Please proceed.\",\r\n+    },\r\n+\r\n+    {\r\n+      utterance: \"Go to face id login\",\r\n+\r\n+      route: \"/login/faceid\",\r\n+\r\n+      response: \"Here's Face ID Login. Please proceed.\",\r\n+    },\r\n+    {\r\n+      utterance: \"Go to face login\",\r\n+\r\n+      route: \"/login/faceid\",\r\n+\r\n+      response: \"Here's Face ID Login. Please proceed.\",\r\n+    },\r\n+\r\n+    {\r\n+      utterance: \"login with face id\",\r\n+\r\n+      route: \"/login/faceid\",\r\n+\r\n+      response: \"Here's Face ID Login. Please proceed.\",\r\n+    },\r\n+\r\n+    {\r\n+      utterance: \"login with face\",\r\n+\r\n+      route: \"/login/faceid\",\r\n+\r\n+      response: \"Here's Face ID Login. Please proceed.\",\r\n+    },\r\n+\r\n+    {\r\n+      utterance: \"i want to login with face\",\r\n+\r\n+      route: \"/login/faceid\",\r\n+\r\n+      response: \"Here's Face ID Login. Please proceed.\",\r\n+    },\r\n+\r\n+    {\r\n+      utterance: \"login with voice\",\r\n+\r\n+      route: \"/login/voiceid\",\r\n+\r\n+      response: \"Here's Voice Login. Please proceed.\",\r\n+    },\r\n+\r\n+    {\r\n+      utterance: \"i want to login with voice\",\r\n+\r\n+      route: \"/login/voiceid\",\r\n+\r\n+      response: \"Here's Voice Login. Please proceed.\",\r\n+    },\r\n+\r\n+    {\r\n+      utterance: \"go to voice login\",\r\n+\r\n+      route: \"/login/voiceid\",\r\n+\r\n+      response: \"Here's Voice Login. Please proceed.\",\r\n+    },\r\n+\r\n+    {\r\n+      utterance: \"login with voice\",\r\n+\r\n+      route: \"/login/voiceid\",\r\n+\r\n+      response: \"Here's Voice Login. Please proceed.\",\r\n+    },\r\n+\r\n+    {\r\n+      utterance: \"login with mobile\",\r\n+\r\n+      route: \"/login/mobile\",\r\n+\r\n+      response: \"Here's Mobile Login. Please proceed.\",\r\n+    },\r\n+\r\n+    {\r\n+      utterance: \"i want to login with mobile\",\r\n+\r\n+      route: \"/login/mobile\",\r\n+\r\n+      response: \"Here's Mobile Login. Please proceed.\",\r\n+    },\r\n+    {\r\n+      utterance: \"go to mobile login\",\r\n+\r\n+      route: \"/login/mobile\",\r\n+\r\n+      response: \"Here's Mobile Login. Please proceed.\",\r\n+    },\r\n+    {\r\n+      utterance: \"go to about page\",\r\n+\r\n+      route: \"/aboutus\",\r\n+\r\n+      response: \"This is About us.\",\r\n+    },\r\n+    {\r\n+      utterance: \"go to about us page\",\r\n+\r\n+      route: \"/aboutus\",\r\n+\r\n+      response: \"This is About us.\",\r\n+    },\r\n+    {\r\n+      utterance: \"open about us page\",\r\n+\r\n+      route: \"/aboutus\",\r\n+\r\n+      response: \"This is About us.\",\r\n+    },\r\n+    {\r\n+      utterance: \"open about page\",\r\n+\r\n+      route: \"/aboutus\",\r\n+\r\n+      response: \"This is About us.\",\r\n+    },\r\n+    {\r\n+      utterance: \"take me to about page\",\r\n+\r\n+      route: \"/aboutus\",\r\n+\r\n+      response: \"This is About us.\",\r\n+    },\r\n+    {\r\n+      utterance: \"take me to about us page\",\r\n+\r\n+      route: \"/aboutus\",\r\n+\r\n+      response: \"This is About us.\",\r\n+    },\r\n+\r\n+    {\r\n+      utterance: \"go to contact page\",\r\n+\r\n+      route: \"/contactus\",\r\n+\r\n+      response: \"You can contact us from here\",\r\n+    },\r\n+    {\r\n+      utterance: \"go to contact us page\",\r\n+\r\n+      route: \"/contactus\",\r\n+\r\n+      response: \"You can contact us from here\",\r\n+    },\r\n+    {\r\n+      utterance: \"open contact us page\",\r\n+\r\n+      route: \"/contactus\",\r\n+\r\n+      response: \"You can contact us from here\",\r\n+    },\r\n+    {\r\n+      utterance: \"open contact page\",\r\n+\r\n+      route: \"/contactus\",\r\n+\r\n+      response: \"You can contact us from here\",\r\n+    },\r\n+    {\r\n+      utterance: \"take me to about page\",\r\n+\r\n+      route: \"/contactus\",\r\n+\r\n+      response: \"You can contact us from here\",\r\n+    },\r\n+    {\r\n+      utterance: \"take me to contact us page\",\r\n+\r\n+      route: \"/contactus\",\r\n+\r\n+      response: \"You can contact us from here\",\r\n+    },\r\n+\r\n+\r\n+    {\r\n+      utterance: \"what are platform features\",\r\n+\r\n+      response:\r\n+        \"Dashboard, Dynamic time table, Learning Networks, Little Masters, Video Based Dictionary, General Search.\",\r\n+    },\r\n+\r\n+    {\r\n+      utterance: \"Features of platform\",\r\n+\r\n+      response:\r\n+        \"Dashboard, Dynamic time table, Learning Networks, Little Masters, Video Based Dictionary, General Search.\",\r\n+    },\r\n+\r\n+    {\r\n+      utterance: \"What does the platform offer\",\r\n+\r\n+      response:\r\n+        \"Dashboard, Dynamic time table, Learning Networks, Little Masters, Video Based Dictionary, General Search.\",\r\n+    },\r\n+\r\n+    {\r\n+      utterance: \"Say me the features of platform\",\r\n+\r\n+      response:\r\n+        \"Dashboard, Dynamic time table, Learning Networks, Little Masters, Video Based Dictionary, General Search.\",\r\n+    },\r\n+\r\n+    {\r\n+      utterance: \"Say me the services of platform\",\r\n+\r\n+      response:\r\n+        \"Dashboard, Dynamic time table, Learning Networks, Little Masters, Video Based Dictionary, General Search.\",\r\n+    },\r\n+\r\n+    {\r\n+      utterance: \"tell me the services offered by the platform\",\r\n+\r\n+      response:\r\n+        \"Dashboard, Dynamic time table, Learning Networks, Little Masters, Video Based Dictionary, General Search.\",\r\n+    },\r\n+\r\n+    {\r\n+      utterance: \"explain platform services\",\r\n+\r\n+      response:\r\n+        \"Dashboard, Dynamic time table, Learning Networks, Little Masters, Video Based Dictionary, General Search.\",\r\n+    },\r\n+\r\n+    {\r\n+      utterance: \"Give me the Parent voice of Julia Harris\",\r\n+\r\n+      response:\r\n+        \"Brane education has helped my son a lot in his studies. He improved a lot in his studies and is now able to score good marks in his exams\",\r\n+    },\r\n+\r\n+    {\r\n+      utterance: \"Leaders Voice\",\r\n+\r\n+      response:\r\n+        \"This Voice-interactive AI Platform is a game Changer. It revolutionizes education.\",\r\n+    },\r\n+\r\n+    {\r\n+      utterance: \"Curriculum Supported by Brane Education\",\r\n+\r\n+      response:\r\n+        \"we support multiple Boards let me say few Telangana State Board Andhra Pradesh Board Maharashtra Board Assam Board\",\r\n+    },\r\n+\r\n+    {\r\n+      utterance: \"Boards supported by the platform\",\r\n+\r\n+      response:\r\n+        \"we support multiple Boards let me say few Telangana State Board Andhra Pradesh Board Maharashtra Board Assam Board\",\r\n+    },\r\n+\r\n+    {\r\n+      utterance: \"Curriculum\",\r\n+\r\n+      response:\r\n+        \"we support multiple Boards let me say few Telangana State Board Andhra Pradesh Board Maharashtra Board Assam Board\",\r\n+    },\r\n+\r\n+    // {\r\n+    //   utterance: \"Go to landing page\",\r\n+\r\n+    //   response: \"Okay, I am taking you to the landing page.\",\r\n+\r\n+    //   route: \"/childpage\",\r\n+    // },\r\n+\r\n+    // {\r\n+    //   utterance: \"take me to landing page\",\r\n+\r\n+    //   response: \"Okay, I am taking you to the landing page.\",\r\n+\r\n+    //   route: \"/childpage\",\r\n+    // },\r\n+\r\n+    // {\r\n+    //   utterance: \"move to landing page\",\r\n+\r\n+    //   response: \"Okay, I am taking you to the landing page.\",\r\n+\r\n+    //   route: \"/childpage\",\r\n+    // },\r\n+\r\n+    // {\r\n+    //   utterance: \"roll back to landing page\",\r\n+\r\n+    //   response: \"Okay, I am taking you to the landing page.\",\r\n+\r\n+    //   route: \"/childpage\",\r\n+    // },\r\n+\r\n+    // {\r\n+    //   utterance: \"move to landing page\",\r\n+\r\n+    //   response: \"Okay, I am taking you to the landing page.\",\r\n+\r\n+    //   route: \"/childpage\",\r\n+    // },\r\n+\r\n+    {\r\n+      utterance: \"what is today's quote\",\r\n+\r\n+      response:\r\n+        \"Determination is the power that sees us through all our frustration and obstacles. It helps in building our willpower which is the very basis of success.\",\r\n+\r\n+      route: \"/childpage\",\r\n+    },\r\n+\r\n+    {\r\n+      utterance: \"Today's Inspirational quote\",\r\n+\r\n+      response:\r\n+        \"Determination is the power that sees us through all our frustration and obstacles. It helps in building our willpower which is the very basis of success.\",\r\n+\r\n+      route: \"/childpage\",\r\n+    },\r\n+\r\n+    {\r\n+      utterance: \"say me today's quote\",\r\n+\r\n+      response:\r\n+        \"Determination is the power that sees us through all our frustration and obstacles. It helps in building our willpower which is the very basis of success.\",\r\n+\r\n+      route: \"/childpage\",\r\n+    },\r\n+    {\r\n+      utterance: \"go back\",\r\n+      response: \"\",\r\n+      action: goBack, // Note the use of an action property\r\n+    },\r\n+    {\r\n+      utterance: \"go forward\",\r\n+      response: \"\",\r\n+      action: goForward,\r\n+    },\r\n+    {\r\n+      utterance: \"play video\",\r\n+      // response: \"Playing video.\",\r\n+      action: playVideo,\r\n+    },\r\n+    {\r\n+      utterance: \"pause video\",\r\n+      // response: \"Pausing video.\",\r\n+      action: pauseVideo,\r\n+    },\r\n+    {\r\n+      utterance: \"start video\",\r\n+      // response: \"Playing video.\",\r\n+      action: playVideo,\r\n+    },\r\n+    {\r\n+      utterance: \"stop video\",\r\n+      // response: \"Playing video.\",\r\n+      action: pauseVideo,\r\n+    },\r\n+    {\r\n+      utterance: \"scroll up\",\r\n+      // response: \"Scrolling up.\",\r\n+      action: scrollUp,\r\n+    },\r\n+    {\r\n+      utterance: \"scroll down\",\r\n+      // response: \"Scrolling down.\",\r\n+      action: scrollDown,\r\n+    },\r\n+    {\r\n+      utterance: \"go up\",\r\n+\r\n+      // response: \"Scrolling up.\",\r\n+      action: scrollUp,\r\n+    },\r\n+    {\r\n+      utterance: \"go down\",\r\n+      // response: \"Scrolling down.\",\r\n+      action: scrollDown,\r\n+    },\r\n+    {\r\n+      utterance: \"scroll to top\",\r\n+      action: scrollToTop,\r\n+    },\r\n+    {\r\n+      utterance: \"scroll to bottom\",\r\n+      action: scrollToBottom,\r\n+    },\r\n+    {\r\n+      utterance: \"brane stop\",\r\n+      action: stopListening,\r\n+    },\r\n+    {\r\n+      utterance: \"brane turn off\",\r\n+      action: stopListening,\r\n+    },\r\n+    {\r\n+      utterance: \"brane stop the bot\",\r\n+      action: stopListening,\r\n+    },\r\n+  ];\r\n+\r\n+  return (\r\n+    <div className=\"speech-bot-container\">\r\n+      <div\r\n+        className={`button-container ${\r\n+          isListening ? \"voicebotframeactive\" : \"voicebotframe\"\r\n+        }`}\r\n+      >\r\n+        {/* <button onClick={isListening ? stopListening : startListening}>\r\n+          {isListening ? \"Stop\" : \"Start\"} Animation\r\n+        </button> */}\r\n+        <img \r\n+        className=\"botimage\"\r\n+          src={chatbotimage} alt=\"\" \r\n+          onClick={isListening ? stopListening : startListening}  \r\n+        />\r\n+\r\n+      </div>\r\n+    </div>\r\n+  );\r\n+};\r\n+\r\n+export default VoiceBot;\r\n+\r\n+\r\n+{/* // import React, { useState, useEffect, useRef } from \"react\";\r\n+// import { useNavigate, useLocation } from \"react-router-dom\";\r\n+// import Fuse from \"fuse.js\";\r\n+// import \"./VoiceBot.css\";\r\n+\r\n+// const VoiceBot = ({ videoRef }) => {\r\n+//   const [isListening, setIsListening] = useState(false);\r\n+//   const [isSpeaking, setIsSpeaking] = useState(false);\r\n+//   const recognition = useRef(null);\r\n+//   const speechSynthesis = useRef(window.speechSynthesis);\r\n+//   const [hasGreeted, setHasGreeted] = useState(false);\r\n+//   const navigate = useNavigate();\r\n+\r\n+//   useEffect(() => {\r\n+//     recognition.current = new window.webkitSpeechRecognition();\r\n+//     recognition.current.continuous = true;\r\n+//     recognition.current.interimResults = false;\r\n+//     recognition.current.onresult = onResult;\r\n+//     recognition.current.onend = onRecognitionEnd;\r\n+//     recognition.current.starting = false;\r\n+\r\n+//     // Simplified error handling, removed specific handling for 'no-speech'\r\n+//     recognition.current.onerror = (event) => {\r\n+//       console.error(\"Recognition error:\", event.error);\r\n+//       // Check if listening is true and the bot isn't speaking\r\n+//       if (isListening && !isSpeaking) {\r\n+//         // Restart recognition\r\n+//         restartRecognition();\r\n+//       }\r\n+//     };\r\n+\r\n+//     return () => {\r\n+//       if (recognition.current) {\r\n+//         recognition.current.abort();\r\n+//       }\r\n+//     };\r\n+//   }, []);\r\n+\r\n+//   useEffect(() => {\r\n+//     const checkRecognition = () => {\r\n+//       if (isListening && !isSpeaking && !recognition.current.starting) {\r\n+//         console.log(\"Restarting recognition because it's not active.\");\r\n+//         recognition.current.starting = true;\r\n+//         recognition.current.start();\r\n+//         console.log(\"Restarted recognition.\");\r\n+//       }\r\n+//     };\r\n+\r\n+//     const recognitionCheckInterval = setInterval(checkRecognition, 100); // Check every 1 second\r\n+\r\n+//     return () => {\r\n+//       clearInterval(recognitionCheckInterval);\r\n+//     };\r\n+//   }, [isListening, isSpeaking]);\r\n+\r\n+//   const restartRecognition = () => {\r\n+//     if (recognition.current.starting) {\r\n+//       console.log(\"Recognition is already starting or running.\");\r\n+//       return;\r\n+//     }\r\n+\r\n+//     recognition.current.abort(); // Stop any existing recognition process\r\n+//     recognition.current.starting = true;\r\n+//     recognition.current.start();\r\n+//     console.log(\"Recognition restarted.\");\r\n+//   };\r\n+\r\n+//   const historyStack = useRef([]);\r\n+\r\n+//   useEffect(() => {\r\n+//     return () => {\r\n+//       // Clean up the listener when the component unmounts\r\n+//       window.removeEventListener(\"popstate\", handlePopState);\r\n+//     };\r\n+//   }, []);\r\n+\r\n+//   const handlePopState = () => {\r\n+//     // This needs to handle both back and forward browser actions\r\n+//     // Use some logic to determine whether it's a back or forward action\r\n+//     // For simplicity, assume it's always back\r\n+//     historyStack.current.pop();\r\n+//     forwardStack.current.length = 0; // Clear forward stack on manual navigation\r\n+//   };\r\n+  \r\n+\r\n+//   // Add a new entry to the stack whenever navigate is called\r\n+//   const customNavigate = (to, options) => {\r\n+//     historyStack.current.push(to);\r\n+//     navigate(to, options);\r\n+//   };\r\n+\r\n+//   // Listen to popstate events to update the history stack\r\n+//   useEffect(() => {\r\n+//     window.addEventListener(\"popstate\", handlePopState);\r\n+//   }, []);\r\n+\r\n+//   const forwardStack = useRef([]);\r\n+\r\n+//   const goBack = () => {\r\n+//     if (window.history.state && window.history.state.idx > 0) {\r\n+//       window.history.back();\r\n+//       speak(\"Going back\");\r\n+//     } else {\r\n+//       speak(\"Can't go back any further.\");\r\n+//     }\r\n+//   };\r\n+\r\n+//   const goForward = () => {\r\n+//     if (window.history.state && window.history.state.idx < window.history.length - 1) {\r\n+//       window.history.forward();\r\n+//       speak(\"Going forward\");\r\n+//     } else {\r\n+//       speak(\"No forward history available.\");\r\n+//     }\r\n+//   };\r\n+\r\n+//   const playVideo = () => {\r\n+//     if (videoRef.current) {\r\n+//       videoRef.current.play();\r\n+//       speak(\"Playing video.\");\r\n+//     } else {\r\n+//       speak(\"No video to play.\");\r\n+//     }\r\n+//   };\r\n+\r\n+//   const pauseVideo = () => {\r\n+//     if (videoRef.current) {\r\n+//       videoRef.current.pause();\r\n+//       speak(\"Video paused.\");\r\n+//     } else {\r\n+//       speak(\"No video to pause.\");\r\n+//     }\r\n+//   };\r\n+\r\n+//   const scrollAmount = window.innerHeight * 0.82;\r\n+\r\n+//   const scrollUp = () => {\r\n+//     if (window.pageYOffset === 0) {\r\n+//       speak(\"Already at the top of the page.\");\r\n+//     } else {\r\n+//       window.scrollBy(0, -scrollAmount);\r\n+//       speak(\"Scrolled up.\");\r\n+//     }\r\n+//   };\r\n+\r\n+//   const scrollDown = () => {\r\n+//     const maxScrollTop =\r\n+//       document.documentElement.scrollHeight - window.innerHeight;\r\n+//     if (window.pageYOffset >= maxScrollTop) {\r\n+//       speak(\"Already at the bottom of the page.\");\r\n+//     } else {\r\n+//       window.scrollBy(0, scrollAmount);\r\n+//       speak(\"Scrolled down.\");\r\n+//     }\r\n+//   };\r\n+\r\n+//   const scrollToTop = () => {\r\n+//     if (window.pageYOffset === 0) {\r\n+//       speak(\"Already at the top of the page.\");\r\n+//     } else {\r\n+//       window.scrollTo(0, 0);\r\n+//       speak(\"Scrolled to the top of the page.\");\r\n+//     }\r\n+//   };\r\n+\r\n+//   const scrollToBottom = () => {\r\n+//     const maxScrollTop =\r\n+//       document.documentElement.scrollHeight - window.innerHeight;\r\n+//     if (window.pageYOffset >= maxScrollTop) {\r\n+//       speak(\"Already at the bottom of the page.\");\r\n+//     } else {\r\n+//       window.scrollTo(0, document.body.scrollHeight);\r\n+//       speak(\"Scrolled to the bottom of the page.\");\r\n+//     }\r\n+//   };\r\n+\r\n+//   const speak = (message) => {\r\n+//     console.log(\"speak function called with message:\", message);\r\n+//     const utterance = new SpeechSynthesisUtterance(message);\r\n+//     utterance.onend = () => {\r\n+//       setIsSpeaking(false);\r\n+//       console.log(\"Speaking ended.\");\r\n+//       if (isListening && !recognition.current.starting) {\r\n+//         console.log(\"Restarting recognition after speaking.\");\r\n+//         recognition.current.starting = true;\r\n+//         recognition.current.start();\r\n+//         console.log(\"Restarted recognition after speaking.\");\r\n+//       }\r\n+//     };\r\n+\r\n+//     setIsSpeaking(true);\r\n+//     console.log(\"Speaking started.\");\r\n+//     recognition.current.stop(); // Ensure to stop recognition before speaking\r\n+//     speechSynthesis.current.speak(utterance);\r\n+//   };\r\n+\r\n+//   const onResult = (event) => {\r\n+//     const resultIndex = event.resultIndex;\r\n+//     const transcript = event.results[resultIndex][0].transcript\r\n+//       .trim()\r\n+//       .toLowerCase();\r\n+\r\n+//     if (event.results[resultIndex].isFinal) {\r\n+//       console.log(`Recognized text: ${transcript}`);\r\n+//       if (transcript.includes(\"brain\")) {\r\n+//         console.log(\"Wake word heard, processing command...\");\r\n+//         handleCommandWithFuse(transcript.replace(\"brain\", \"\"));\r\n+//       }\r\n+//     }\r\n+//   };\r\n+\r\n+//   const onRecognitionEnd = () => {\r\n+//     recognition.current.starting = false;\r\n+//     if (isListening && !isSpeaking) {\r\n+//       restartRecognition();\r\n+//     }\r\n+//   };\r\n+\r\n+//   useEffect(() => {\r\n+//     if (isListening) {\r\n+//       if (!hasGreeted) {\r\n+//         speak(\"Hello, I'm Brane. How can I help you today?\");\r\n+//         setHasGreeted(true);\r\n+//       } else {\r\n+//         speak(\"Listening.\");\r\n+//       }\r\n+//     }\r\n+//   }, [isListening, hasGreeted]);\r\n+\r\n+\r\n+//   const startListening = () => {\r\n+//     if (!recognition.current.starting) {\r\n+//       setIsListening(true);\r\n+//       restartRecognition();\r\n+//     }\r\n+//   };\r\n+\r\n+//   const stopListening = () => {\r\n+//     setIsListening(false);\r\n+//     recognition.current.abort();\r\n+//     if (speechSynthesis.current.speaking) {\r\n+//       speechSynthesis.current.cancel();\r\n+//     }\r\n+//   };\r\n+\r\n+//   const handleCommandWithFuse = (command) => {\r\n+//     const fuse = new Fuse(commands, { keys: [\"utterance\"], threshold: 0.4 });\r\n+//     const results = fuse.search(command);\r\n+//     const foundCommand = results.length ? results[0].item : null;\r\n+\r\n+//     if (foundCommand) {\r\n+//       console.log(\"Command found:\", foundCommand.utterance);\r\n+\r\n+//       if (foundCommand.action) {\r\n+//         foundCommand.action();\r\n+//       } else if (foundCommand.route) {\r\n+//         navigate(foundCommand.route);\r\n+//       }\r\n+\r\n+//       // Speak after performing the action or navigation\r\n+//       speak(foundCommand.response);\r\n+//     } else {\r\n+//       console.log(\"No command found.\");\r\n+//       speak(\"I'm not sure how to respond to that.\");\r\n+//     }\r\n+//   };\r\n+\r\n+//   const commands = [\r\n+//     {\r\n+//       utterance: \"Hello who are you ?\",\r\n+\r\n+//       response:\r\n+//         \"Hi! This is Brane! your Voice bot from Brane Education How can I Assist you Today ?\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"Hello\",\r\n+\r\n+//       response: \"Hi! How can I assist you today?\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"hello\",\r\n+\r\n+//       response: \"Hi! How can I assist you today?\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"Hi.\",\r\n+\r\n+//       response: \"Hello! How can I assist you today?\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"Hey there\",\r\n+\r\n+//       response: \"Hi! How can I assist you today?\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"Good morning Brane.\",\r\n+\r\n+//       response: \"Hey Hiii! Good morning  ! How can I help you?\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"Good afternoon Brane.\",\r\n+\r\n+//       response: \"Hey Hiii! Good after noon ! How can I help you?\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"Good evening Brane.\",\r\n+\r\n+//       response: \"Hey Hiii! Good evening ! How can I help you?\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"can you please take me to login page\",\r\n+\r\n+//       route: \"/login\",\r\n+\r\n+//       response: \"Here's the Login Page, Please Login\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"please take me to login page\",\r\n+\r\n+//       route: \"/login\",\r\n+\r\n+//       response: \"Here's the Login Page, Please Login\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"Go to login page\",\r\n+\r\n+//       route: \"/login\",\r\n+\r\n+//       response: \"Here's the Login Page, Please Login\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"open login page\",\r\n+\r\n+//       route: \"/login\",\r\n+\r\n+//       response: \"Here's the Login Page, Please Login\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"can you please take me to signup page\",\r\n+\r\n+//       route: \"/signup\",\r\n+\r\n+//       response: \"Here's the signup page. Please proceed With Registration.\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"take me to signup page\",\r\n+\r\n+//       route: \"/signup\",\r\n+\r\n+//       response: \"Here's the signup page. Please proceed With Registration.\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"Go to signup page\",\r\n+\r\n+//       route: \"/signup\",\r\n+\r\n+//       response: \"Here's the signup page. Please proceed With Registration.\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"open signup page\",\r\n+\r\n+//       route: \"/signup\",\r\n+\r\n+//       response: \"Here's the signup page. Please proceed With Registration.\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"Go to face id\",\r\n+\r\n+//       route: \"/login/faceid\",\r\n+\r\n+//       response: \"Here's Face ID Login. Please proceed.\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"Go to face id login\",\r\n+\r\n+//       route: \"/login/faceid\",\r\n+\r\n+//       response: \"Here's Face ID Login. Please proceed.\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"login with face id\",\r\n+\r\n+//       route: \"/login/faceid\",\r\n+\r\n+//       response: \"Here's Face ID Login. Please proceed.\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"login with face\",\r\n+\r\n+//       route: \"/login/faceid\",\r\n+\r\n+//       response: \"Here's Face ID Login. Please proceed.\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"i want to login with face\",\r\n+\r\n+//       route: \"/login/faceid\",\r\n+\r\n+//       response: \"Here's Face ID Login. Please proceed.\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"login with voice\",\r\n+\r\n+//       route: \"/login/voiceid\",\r\n+\r\n+//       response: \"Here's Voice Login. Please proceed.\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"i want to login with voice\",\r\n+\r\n+//       route: \"/login/voiceid\",\r\n+\r\n+//       response: \"Here's Voice Login. Please proceed.\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"go to voice login\",\r\n+\r\n+//       route: \"/login/voiceid\",\r\n+\r\n+//       response: \"Here's Voice Login. Please proceed.\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"login with voice\",\r\n+\r\n+//       route: \"/login/voiceid\",\r\n+\r\n+//       response: \"Here's Voice Login. Please proceed.\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"login with mobile\",\r\n+\r\n+//       route: \"/login/mobile\",\r\n+\r\n+//       response: \"Here's Mobile Login. Please proceed.\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"i want to login with mobile\",\r\n+\r\n+//       route: \"/login/mobile\",\r\n+\r\n+//       response: \"Here's Mobile Login. Please proceed.\",\r\n+//     },\r\n+//     {\r\n+//       utterance: \"go to mobile login\",\r\n+\r\n+//       route: \"/login/mobile\",\r\n+\r\n+//       response: \"Here's Mobile Login. Please proceed.\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"what are platform features\",\r\n+\r\n+//       response:\r\n+//         \"Dashboard, Dynamic time table, Learning Networks, Little Masters, Video Based Dictionary, General Search.\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"Features of platform\",\r\n+\r\n+//       response:\r\n+//         \"Dashboard, Dynamic time table, Learning Networks, Little Masters, Video Based Dictionary, General Search.\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"What does the platform offer\",\r\n+\r\n+//       response:\r\n+//         \"Dashboard, Dynamic time table, Learning Networks, Little Masters, Video Based Dictionary, General Search.\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"Say me the features of platform\",\r\n+\r\n+//       response:\r\n+//         \"Dashboard, Dynamic time table, Learning Networks, Little Masters, Video Based Dictionary, General Search.\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"Say me the services of platform\",\r\n+\r\n+//       response:\r\n+//         \"Dashboard, Dynamic time table, Learning Networks, Little Masters, Video Based Dictionary, General Search.\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"tell me the services offered by the platform\",\r\n+\r\n+//       response:\r\n+//         \"Dashboard, Dynamic time table, Learning Networks, Little Masters, Video Based Dictionary, General Search.\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"explain platform services\",\r\n+\r\n+//       response:\r\n+//         \"Dashboard, Dynamic time table, Learning Networks, Little Masters, Video Based Dictionary, General Search.\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"Give me the Parent voice of Julia Harris\",\r\n+\r\n+//       response:\r\n+//         \"Brane education has helped my son a lot in his studies. He improved a lot in his studies and is now able to score good marks in his exams\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"Play today's motivational video\",\r\n+\r\n+//       response: \"I am playing the video\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"Play today's video\",\r\n+\r\n+//       response: \"I am playing Motivational video\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"Leaders Voice\",\r\n+\r\n+//       response:\r\n+//         \"This Voice-interactive AI Platform is a game Changer. It revolutionizes education.\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"Curriculum Supported by Brane Education\",\r\n+\r\n+//       response:\r\n+//         \"we support multiple Boards let me say few Telangana State Board Andhra Pradesh Board Maharashtra Board Assam Board\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"Boards supported by the platform\",\r\n+\r\n+//       response:\r\n+//         \"we support multiple Boards let me say few Telangana State Board Andhra Pradesh Board Maharashtra Board Assam Board\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"Curriculum\",\r\n+\r\n+//       response:\r\n+//         \"we support multiple Boards let me say few Telangana State Board Andhra Pradesh Board Maharashtra Board Assam Board\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"Go to landing page\",\r\n+\r\n+//       response: \"Okay, I am taking you to the landing page.\",\r\n+\r\n+//       route: \"/childpage\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"take me to landing page\",\r\n+\r\n+//       response: \"Okay, I am taking you to the landing page.\",\r\n+\r\n+//       route: \"/childpage\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"move to landing page\",\r\n+\r\n+//       response: \"Okay, I am taking you to the landing page.\",\r\n+\r\n+//       route: \"/childpage\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"roll back to landing page\",\r\n+\r\n+//       response: \"Okay, I am taking you to the landing page.\",\r\n+\r\n+//       route: \"/childpage\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"move to landing page\",\r\n+\r\n+//       response: \"Okay, I am taking you to the landing page.\",\r\n+\r\n+//       route: \"/childpage\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"what is today's quote\",\r\n+\r\n+//       response:\r\n+//         \"Determination is the power that sees us through all our frustration and obstacles. It helps in building our willpower which is the very basis of success.\",\r\n+\r\n+//       route: \"/childpage\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"Today's Inspirational quote\",\r\n+\r\n+//       response:\r\n+//         \"Determination is the power that sees us through all our frustration and obstacles. It helps in building our willpower which is the very basis of success.\",\r\n+\r\n+//       route: \"/childpage\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"say me today's quote\",\r\n+\r\n+//       response:\r\n+//         \"Determination is the power that sees us through all our frustration and obstacles. It helps in building our willpower which is the very basis of success.\",\r\n+\r\n+//       route: \"/childpage\",\r\n+//     },\r\n+//     {\r\n+//       utterance: \"go back\",\r\n+//       response: \"\",\r\n+//       action: goBack, // Note the use of an action property\r\n+//     },\r\n+//     {\r\n+//       utterance: \"go forward\",\r\n+//       response: \"\",\r\n+//       action: goForward,\r\n+//     },\r\n+//     {\r\n+//       utterance: \"play video\",\r\n+//       // response: \"Playing video.\",\r\n+//       action: playVideo,\r\n+//     },\r\n+//     {\r\n+//       utterance: \"pause video\",\r\n+//       // response: \"Pausing video.\",\r\n+//       action: pauseVideo,\r\n+//     },\r\n+//     {\r\n+//       utterance: \"start video\",\r\n+//       // response: \"Playing video.\",\r\n+//       action: playVideo,\r\n+//     },\r\n+//     {\r\n+//       utterance: \"stop video\",\r\n+//       // response: \"Playing video.\",\r\n+//       action: pauseVideo,\r\n+//     },\r\n+//     {\r\n+//       utterance: \"scroll up\",\r\n+//       // response: \"Scrolling up.\",\r\n+//       action: scrollUp,\r\n+//     },\r\n+//     {\r\n+//       utterance: \"scroll down\",\r\n+//       // response: \"Scrolling down.\",\r\n+//       action: scrollDown,\r\n+//     },\r\n+//     {\r\n+//       utterance: \"go up\",\r\n+\r\n+//       // response: \"Scrolling up.\",\r\n+//       action: scrollUp,\r\n+//     },\r\n+//     {\r\n+//       utterance: \"go down\",\r\n+//       // response: \"Scrolling down.\",\r\n+//       action: scrollDown,\r\n+//     },\r\n+//     {\r\n+//       utterance: \"scroll to top\",\r\n+//       action: scrollToTop,\r\n+//     },\r\n+//     {\r\n+//       utterance: \"scroll to bottom\",\r\n+//       action: scrollToBottom,\r\n+//     },\r\n+//     {\r\n+//       utterance: \"brane stop\",\r\n+//       action: stopListening,\r\n+//     },\r\n+//     {\r\n+//       utterance: \"brane turn off\",\r\n+//       action: stopListening,\r\n+//     },\r\n+//     {\r\n+//       utterance: \"brane stop the bot\",\r\n+//       action: stopListening,\r\n+//     },\r\n+//   ];\r\n+\r\n+//   return (\r\n+//     <div className=\"speech-bot-container\">\r\n+//       <div\r\n+//         className={`button-container ${\r\n+//           isListening ? \"voicebotframeactive\" : \"voicebotframe\"\r\n+//         }`}\r\n+//       >\r\n+//         <button onClick={isListening ? stopListening : startListening}>\r\n+//           {isListening ? \"Stop\" : \"Start\"} Animation\r\n+//         </button>\r\n+//         {/* <button onClick={toggleBotActive}>\r\n+//         {isBotActive ? 'Deactivate Bot' : 'Activate Bot'}\r\n+//       </button> \r\n+//       </div>\r\n+//     </div>\r\n+//   );\r\n+// };\r\n+\r\n+// export default VoiceBot; */}\r\n+\r\n+\r\n+\r\n+//iska v1\r\n+\r\n+// import React, { useState, useEffect, useRef } from \"react\";\r\n+// import { useNavigate, useLocation } from \"react-router-dom\";\r\n+// import Fuse from \"fuse.js\";\r\n+// import \"./VoiceBot.css\";\r\n+\r\n+// const VoiceBot = ({ videoRef}) => {\r\n+//   const [isListening, setIsListening] = useState(false);\r\n+//   const [isSpeaking, setIsSpeaking] = useState(false);\r\n+//   const recognition = useRef(null);\r\n+//   const speechSynthesis = useRef(window.speechSynthesis);\r\n+//   const [hasGreeted, setHasGreeted] = useState(false);\r\n+//   const navigate = useNavigate();\r\n+\r\n+\r\n+//  // Initialize speech recognition\r\n+//  useEffect(() => {\r\n+//   recognition.current = new window.webkitSpeechRecognition();\r\n+//   recognition.current.continuous = true;\r\n+//   recognition.current.interimResults = false;\r\n+//   recognition.current.onresult = onResult;\r\n+//   recognition.current.onend = onRecognitionEnd;\r\n+//   recognition.current.starting = false;\r\n+\r\n+//   recognition.current.onerror = (event) => {\r\n+//     console.error(\"Recognition error:\", event.error);\r\n+//     if (isListening && !isSpeaking) {\r\n+//       restartRecognition();\r\n+//     }\r\n+//   };\r\n+\r\n+//   return () => {\r\n+//     if (recognition.current) {\r\n+//       recognition.current.abort();\r\n+//     }\r\n+//   };\r\n+// }, []);\r\n+\r\n+//   // useEffect(() => {\r\n+//   //   const checkRecognition = () => {\r\n+//   //     if (isListening && !isSpeaking && !recognition.current.starting) {\r\n+//   //       console.log(\"Restarting recognition because it's not active.\");\r\n+//   //       recognition.current.starting = true;\r\n+//   //       recognition.current.start();\r\n+//   //       console.log(\"Restarted recognition.\");\r\n+//   //     }\r\n+//   //   };\r\n+\r\n+//   //   const recognitionCheckInterval = setInterval(checkRecognition, 100); // Check every .5 second\r\n+\r\n+//   //   return () => {\r\n+//   //     clearInterval(recognitionCheckInterval);\r\n+//   //   };\r\n+//   // }, [isListening, isSpeaking]);\r\n+\r\n+\r\n+//   const historyStack = useRef([]);\r\n+\r\n+//   useEffect(() => {\r\n+//     return () => {\r\n+//       // Clean up the listener when the component unmounts\r\n+//       window.removeEventListener(\"popstate\", handlePopState);\r\n+//     };\r\n+//   }, []);\r\n+\r\n+//   const handlePopState = () => {\r\n+//     // This needs to handle both back and forward browser actions\r\n+//     // Use some logic to determine whether it's a back or forward action\r\n+//     // For simplicity, assume it's always back\r\n+//     historyStack.current.pop();\r\n+//     forwardStack.current.length = 0; // Clear forward stack on manual navigation\r\n+//   };\r\n+  \r\n+\r\n+//   // Add a new entry to the stack whenever navigate is called\r\n+//   const customNavigate = (to, options) => {\r\n+//     historyStack.current.push(to);\r\n+//     navigate(to, options);\r\n+//   };\r\n+\r\n+//   // Listen to popstate events to update the history stack\r\n+//   useEffect(() => {\r\n+//     window.addEventListener(\"popstate\", handlePopState);\r\n+//   }, []);\r\n+\r\n+//   const forwardStack = useRef([]);\r\n+\r\n+//   const goBack = () => {\r\n+//     if (window.history.state && window.history.state.idx > 0) {\r\n+//       window.history.back();\r\n+//       speak(\"Going back\");\r\n+//     } else {\r\n+//       speak(\"Can't go back any further.\");\r\n+//     }\r\n+//   };\r\n+\r\n+//   const goForward = () => {\r\n+//     if (window.history.state && window.history.state.idx < window.history.length - 1) {\r\n+//       window.history.forward();\r\n+//       speak(\"Going forward\");\r\n+//     } else {\r\n+//       speak(\"No forward history available.\");\r\n+//     }\r\n+//   };\r\n+\r\n+//   const playVideo = () => {\r\n+//     if (videoRef.current) {\r\n+//       videoRef.current.play();\r\n+//       speak(\"Playing video.\");\r\n+//     } else {\r\n+//       speak(\"No video to play.\");\r\n+//     }\r\n+//   };\r\n+\r\n+//   const pauseVideo = () => {\r\n+//     if (videoRef.current) {\r\n+//       videoRef.current.pause();\r\n+//       speak(\"Video paused.\");\r\n+//     } else {\r\n+//       speak(\"No video to pause.\");\r\n+//     }\r\n+//   };\r\n+\r\n+//   const scrollAmount = window.innerHeight * 0.82;\r\n+\r\n+//   const scrollUp = () => {\r\n+//     if (window.pageYOffset === 0) {\r\n+//       speak(\"Already at the top of the page.\");\r\n+//     } else {\r\n+//       window.scrollBy(0, -scrollAmount);\r\n+//       speak(\"Scrolled up.\");\r\n+//     }\r\n+//   };\r\n+\r\n+//   const scrollDown = () => {\r\n+//     const maxScrollTop =\r\n+//       document.documentElement.scrollHeight - window.innerHeight;\r\n+//     if (window.pageYOffset >= maxScrollTop) {\r\n+//       speak(\"Already at the bottom of the page.\");\r\n+//     } else {\r\n+//       window.scrollBy(0, scrollAmount);\r\n+//       speak(\"Scrolled down.\");\r\n+//     }\r\n+//   };\r\n+\r\n+//   const scrollToTop = () => {\r\n+//     if (window.pageYOffset === 0) {\r\n+//       speak(\"Already at the top of the page.\");\r\n+//     } else {\r\n+//       window.scrollTo(0, 0);\r\n+//       speak(\"Scrolled to the top of the page.\");\r\n+//     }\r\n+//   };\r\n+\r\n+//   const scrollToBottom = () => {\r\n+//     const maxScrollTop =\r\n+//       document.documentElement.scrollHeight - window.innerHeight;\r\n+//     if (window.pageYOffset >= maxScrollTop) {\r\n+//       speak(\"Already at the bottom of the page.\");\r\n+//     } else {\r\n+//       window.scrollTo(0, document.body.scrollHeight);\r\n+//       speak(\"Scrolled to the bottom of the page.\");\r\n+//     }\r\n+//   };\r\n+\r\n+//   const speak = (message) => {\r\n+//     const utterance = new SpeechSynthesisUtterance(message);\r\n+//     utterance.onend = () => {\r\n+//       setIsSpeaking(false);\r\n+//       // Restart recognition after speaking has ended\r\n+//       if (isListening) {\r\n+//         restartRecognition();\r\n+//       }\r\n+//     };\r\n+  \r\n+//     setIsSpeaking(true);\r\n+//     // Stop recognition when the bot starts speaking\r\n+//     if (recognition.current) {\r\n+//       recognition.current.abort();\r\n+//     }\r\n+//     speechSynthesis.current.speak(utterance);\r\n+//   };\r\n+  \r\n+\r\n+//   const restartRecognition = () => {\r\n+//     // Check if recognition is not already started and if the bot is set to listen\r\n+//     if (recognition.current && !recognition.current.starting && isListening && !isSpeaking) {\r\n+//       // Only start recognition if it's not already active\r\n+//       if (recognition.current.state !== 'active') {\r\n+//         recognition.current.abort(); // Ensure any ongoing recognition is stopped\r\n+//         recognition.current.starting = true;\r\n+//         recognition.current.start();\r\n+//       }\r\n+//     }\r\n+//   };\r\n+  \r\n+  \r\n+//     // Restart recognition when bot finishes speaking and isListening is true\r\n+//     useEffect(() => {\r\n+//       if (!isSpeaking && isListening) {\r\n+//         restartRecognition();\r\n+//       }\r\n+//     }, [isSpeaking, isListening]);\r\n+\r\n+//   const onResult = (event) => {\r\n+//     const resultIndex = event.resultIndex;\r\n+//     const transcript = event.results[resultIndex][0].transcript\r\n+//       .trim()\r\n+//       .toLowerCase();\r\n+\r\n+//     if (event.results[resultIndex].isFinal) {\r\n+//       console.log(`Recognized text: ${transcript}`);\r\n+//       if (transcript.includes(\"brain\")) {\r\n+//         console.log(\"Wake word heard, processing command...\");\r\n+//         handleCommandWithFuse(transcript.replace(\"brain\", \"\"));\r\n+//       }\r\n+//     }\r\n+//   };\r\n+\r\n+//   const onRecognitionEnd = () => {\r\n+//     recognition.current.starting = false;\r\n+//     if (isListening && !isSpeaking) {\r\n+//       restartRecognition();\r\n+//     }\r\n+//   };\r\n+\r\n+//   useEffect(() => {\r\n+//     if (isListening && !hasGreeted) {\r\n+//       speak(\"Hello, I'm Brane. How can I help you today?\");\r\n+//       setHasGreeted(true);\r\n+//     }\r\n+//   }, [isListening, hasGreeted]);\r\n+\r\n+\r\n+// // Updated startListening function\r\n+// const startListening = () => {\r\n+//   setIsListening(true);\r\n+//   if (recognition.current && !recognition.current.starting) {\r\n+//     recognition.current.start();\r\n+//   }\r\n+// };\r\n+\r\n+// // Updated stopListening function\r\n+// const stopListening = () => {\r\n+//   setIsListening(false);\r\n+//   setIsSpeaking(false); // Reset speaking state\r\n+//   setHasGreeted(false); // Reset greeting state if needed\r\n+//   if (recognition.current) {\r\n+//     recognition.current.abort(); // Stop any ongoing speech recognition\r\n+//   }\r\n+//   if (speechSynthesis.current.speaking) {\r\n+//     speechSynthesis.current.cancel(); // Stop any ongoing speech synthesis\r\n+//   }\r\n+// };\r\n+\r\n+\r\n+\r\n+//   const handleCommandWithFuse = (command) => {\r\n+//     const fuse = new Fuse(commands, { keys: [\"utterance\"], threshold: 0.4 });\r\n+//     const results = fuse.search(command);\r\n+//     const foundCommand = results.length ? results[0].item : null;\r\n+\r\n+//     if (foundCommand) {\r\n+//       console.log(\"Command found:\", foundCommand.utterance);\r\n+\r\n+//       if (foundCommand.action) {\r\n+//         foundCommand.action();\r\n+//       } else if (foundCommand.route) {\r\n+//         navigate(foundCommand.route);\r\n+//       }\r\n+\r\n+//       // Speak after performing the action or navigation\r\n+//       speak(foundCommand.response);\r\n+//     } else {\r\n+//       console.log(\"No command found.\");\r\n+//       speak(\"I'm not sure how to respond to that.\");\r\n+//     }\r\n+//   };\r\n+\r\n+//   const commands = [\r\n+//     {\r\n+//       utterance: \"Hello who are you ?\",\r\n+\r\n+//       response:\r\n+//         \"Hi! This is Brane! your Voice bot from Brane Education How can I Assist you Today ?\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"Hello\",\r\n+\r\n+//       response: \"Hi! How can I assist you today?\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"hello\",\r\n+\r\n+//       response: \"Hi! How can I assist you today?\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"Hi.\",\r\n+\r\n+//       response: \"Hello! How can I assist you today?\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"Hey there\",\r\n+\r\n+//       response: \"Hi! How can I assist you today?\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"Good morning Brane.\",\r\n+\r\n+//       response: \"Hey Hiii! Good morning  ! How can I help you?\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"Good afternoon Brane.\",\r\n+\r\n+//       response: \"Hey Hiii! Good after noon ! How can I help you?\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"Good evening Brane.\",\r\n+\r\n+//       response: \"Hey Hiii! Good evening ! How can I help you?\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"can you please take me to login page\",\r\n+\r\n+//       route: \"/login\",\r\n+\r\n+//       response: \"Here's the Login Page, Please Login\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"please take me to login page\",\r\n+\r\n+//       route: \"/login\",\r\n+\r\n+//       response: \"Here's the Login Page, Please Login\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"Go to login page\",\r\n+\r\n+//       route: \"/login\",\r\n+\r\n+//       response: \"Here's the Login Page, Please Login\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"open login page\",\r\n+\r\n+//       route: \"/login\",\r\n+\r\n+//       response: \"Here's the Login Page, Please Login\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"can you please take me to signup page\",\r\n+\r\n+//       route: \"/signup\",\r\n+\r\n+//       response: \"Here's the signup page. Please proceed With Registration.\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"take me to signup page\",\r\n+\r\n+//       route: \"/signup\",\r\n+\r\n+//       response: \"Here's the signup page. Please proceed With Registration.\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"Go to signup page\",\r\n+\r\n+//       route: \"/signup\",\r\n+\r\n+//       response: \"Here's the signup page. Please proceed With Registration.\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"open signup page\",\r\n+\r\n+//       route: \"/signup\",\r\n+\r\n+//       response: \"Here's the signup page. Please proceed With Registration.\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"Go to face id\",\r\n+\r\n+//       route: \"/login/faceid\",\r\n+\r\n+//       response: \"Here's Face ID Login. Please proceed.\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"Go to face id login\",\r\n+\r\n+//       route: \"/login/faceid\",\r\n+\r\n+//       response: \"Here's Face ID Login. Please proceed.\",\r\n+//     },\r\n+//     {\r\n+//       utterance: \"Go to face login\",\r\n+\r\n+//       route: \"/login/faceid\",\r\n+\r\n+//       response: \"Here's Face ID Login. Please proceed.\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"login with face id\",\r\n+\r\n+//       route: \"/login/faceid\",\r\n+\r\n+//       response: \"Here's Face ID Login. Please proceed.\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"login with face\",\r\n+\r\n+//       route: \"/login/faceid\",\r\n+\r\n+//       response: \"Here's Face ID Login. Please proceed.\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"i want to login with face\",\r\n+\r\n+//       route: \"/login/faceid\",\r\n+\r\n+//       response: \"Here's Face ID Login. Please proceed.\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"login with voice\",\r\n+\r\n+//       route: \"/login/voiceid\",\r\n+\r\n+//       response: \"Here's Voice Login. Please proceed.\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"i want to login with voice\",\r\n+\r\n+//       route: \"/login/voiceid\",\r\n+\r\n+//       response: \"Here's Voice Login. Please proceed.\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"go to voice login\",\r\n+\r\n+//       route: \"/login/voiceid\",\r\n+\r\n+//       response: \"Here's Voice Login. Please proceed.\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"login with voice\",\r\n+\r\n+//       route: \"/login/voiceid\",\r\n+\r\n+//       response: \"Here's Voice Login. Please proceed.\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"login with mobile\",\r\n+\r\n+//       route: \"/login/mobile\",\r\n+\r\n+//       response: \"Here's Mobile Login. Please proceed.\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"i want to login with mobile\",\r\n+\r\n+//       route: \"/login/mobile\",\r\n+\r\n+//       response: \"Here's Mobile Login. Please proceed.\",\r\n+//     },\r\n+//     {\r\n+//       utterance: \"go to mobile login\",\r\n+\r\n+//       route: \"/login/mobile\",\r\n+\r\n+//       response: \"Here's Mobile Login. Please proceed.\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"what are platform features\",\r\n+\r\n+//       response:\r\n+//         \"Dashboard, Dynamic time table, Learning Networks, Little Masters, Video Based Dictionary, General Search.\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"Features of platform\",\r\n+\r\n+//       response:\r\n+//         \"Dashboard, Dynamic time table, Learning Networks, Little Masters, Video Based Dictionary, General Search.\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"What does the platform offer\",\r\n+\r\n+//       response:\r\n+//         \"Dashboard, Dynamic time table, Learning Networks, Little Masters, Video Based Dictionary, General Search.\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"Say me the features of platform\",\r\n+\r\n+//       response:\r\n+//         \"Dashboard, Dynamic time table, Learning Networks, Little Masters, Video Based Dictionary, General Search.\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"Say me the services of platform\",\r\n+\r\n+//       response:\r\n+//         \"Dashboard, Dynamic time table, Learning Networks, Little Masters, Video Based Dictionary, General Search.\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"tell me the services offered by the platform\",\r\n+\r\n+//       response:\r\n+//         \"Dashboard, Dynamic time table, Learning Networks, Little Masters, Video Based Dictionary, General Search.\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"explain platform services\",\r\n+\r\n+//       response:\r\n+//         \"Dashboard, Dynamic time table, Learning Networks, Little Masters, Video Based Dictionary, General Search.\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"Give me the Parent voice of Julia Harris\",\r\n+\r\n+//       response:\r\n+//         \"Brane education has helped my son a lot in his studies. He improved a lot in his studies and is now able to score good marks in his exams\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"Play today's motivational video\",\r\n+\r\n+//       response: \"I am playing the video\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"Play today's video\",\r\n+\r\n+//       response: \"I am playing Motivational video\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"Leaders Voice\",\r\n+\r\n+//       response:\r\n+//         \"This Voice-interactive AI Platform is a game Changer. It revolutionizes education.\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"Curriculum Supported by Brane Education\",\r\n+\r\n+//       response:\r\n+//         \"we support multiple Boards let me say few Telangana State Board Andhra Pradesh Board Maharashtra Board Assam Board\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"Boards supported by the platform\",\r\n+\r\n+//       response:\r\n+//         \"we support multiple Boards let me say few Telangana State Board Andhra Pradesh Board Maharashtra Board Assam Board\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"Curriculum\",\r\n+\r\n+//       response:\r\n+//         \"we support multiple Boards let me say few Telangana State Board Andhra Pradesh Board Maharashtra Board Assam Board\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"Go to landing page\",\r\n+\r\n+//       response: \"Okay, I am taking you to the landing page.\",\r\n+\r\n+//       route: \"/childpage\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"take me to landing page\",\r\n+\r\n+//       response: \"Okay, I am taking you to the landing page.\",\r\n+\r\n+//       route: \"/childpage\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"move to landing page\",\r\n+\r\n+//       response: \"Okay, I am taking you to the landing page.\",\r\n+\r\n+//       route: \"/childpage\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"roll back to landing page\",\r\n+\r\n+//       response: \"Okay, I am taking you to the landing page.\",\r\n+\r\n+//       route: \"/childpage\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"move to landing page\",\r\n+\r\n+//       response: \"Okay, I am taking you to the landing page.\",\r\n+\r\n+//       route: \"/childpage\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"what is today's quote\",\r\n+\r\n+//       response:\r\n+//         \"Determination is the power that sees us through all our frustration and obstacles. It helps in building our willpower which is the very basis of success.\",\r\n+\r\n+//       route: \"/childpage\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"Today's Inspirational quote\",\r\n+\r\n+//       response:\r\n+//         \"Determination is the power that sees us through all our frustration and obstacles. It helps in building our willpower which is the very basis of success.\",\r\n+\r\n+//       route: \"/childpage\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"say me today's quote\",\r\n+\r\n+//       response:\r\n+//         \"Determination is the power that sees us through all our frustration and obstacles. It helps in building our willpower which is the very basis of success.\",\r\n+\r\n+//       route: \"/childpage\",\r\n+//     },\r\n+//     {\r\n+//       utterance: \"go back\",\r\n+//       response: \"\",\r\n+//       action: goBack, // Note the use of an action property\r\n+//     },\r\n+//     {\r\n+//       utterance: \"go forward\",\r\n+//       response: \"\",\r\n+//       action: goForward,\r\n+//     },\r\n+//     {\r\n+//       utterance: \"play video\",\r\n+//       // response: \"Playing video.\",\r\n+//       action: playVideo,\r\n+//     },\r\n+//     {\r\n+//       utterance: \"pause video\",\r\n+//       // response: \"Pausing video.\",\r\n+//       action: pauseVideo,\r\n+//     },\r\n+//     {\r\n+//       utterance: \"start video\",\r\n+//       // response: \"Playing video.\",\r\n+//       action: playVideo,\r\n+//     },\r\n+//     {\r\n+//       utterance: \"stop video\",\r\n+//       // response: \"Playing video.\",\r\n+//       action: pauseVideo,\r\n+//     },\r\n+//     {\r\n+//       utterance: \"scroll up\",\r\n+//       // response: \"Scrolling up.\",\r\n+//       action: scrollUp,\r\n+//     },\r\n+//     {\r\n+//       utterance: \"scroll down\",\r\n+//       // response: \"Scrolling down.\",\r\n+//       action: scrollDown,\r\n+//     },\r\n+//     {\r\n+//       utterance: \"go up\",\r\n+\r\n+//       // response: \"Scrolling up.\",\r\n+//       action: scrollUp,\r\n+//     },\r\n+//     {\r\n+//       utterance: \"go down\",\r\n+//       // response: \"Scrolling down.\",\r\n+//       action: scrollDown,\r\n+//     },\r\n+//     {\r\n+//       utterance: \"scroll to top\",\r\n+//       action: scrollToTop,\r\n+//     },\r\n+//     {\r\n+//       utterance: \"scroll to bottom\",\r\n+//       action: scrollToBottom,\r\n+//     },\r\n+//     {\r\n+//       utterance: \"brane stop\",\r\n+//       action: stopListening,\r\n+//     },\r\n+//     {\r\n+//       utterance: \"brane turn off\",\r\n+//       action: stopListening,\r\n+//     },\r\n+//     {\r\n+//       utterance: \"brane stop the bot\",\r\n+//       action: stopListening,\r\n+//     },\r\n+//   ];\r\n+\r\n+//   return (\r\n+//     <div className=\"speech-bot-container\">\r\n+//       <div\r\n+//         className={`button-container ${\r\n+//           isListening ? \"voicebotframeactive\" : \"voicebotframe\"\r\n+//         }`}\r\n+//       >\r\n+//         <button onClick={isListening ? stopListening : startListening}>\r\n+//           {isListening ? \"Stop\" : \"Start\"} Animation\r\n+//         </button>\r\n+//         {/* <button onClick={toggleBotActive}>\r\n+//         {isBotActive ? 'Deactivate Bot' : 'Activate Bot'}\r\n+//       </button> */}\r\n+//       </div>\r\n+//     </div>\r\n+//   );\r\n+// };\r\n+\r\n+// export default VoiceBot;\r\n+\r\n+\r\n+\r\n+\r\n+\r\n+\r\n+\r\n+\r\n+\r\n+\r\n+\r\n+\r\n+\r\n+\r\n+\r\n+\r\n+\r\n+\r\n+\r\n+\r\n+\r\n+\r\n+\r\n+\r\n+\r\n+\r\n+\r\n+\r\n+\r\n+\r\n+//Bot Video added but some start issues\r\n+\r\n+// import React, { useState, useEffect, useRef } from \"react\";\r\n+// import { useNavigate, useLocation } from \"react-router-dom\";\r\n+// import Fuse from \"fuse.js\";\r\n+// import \"./VoiceBot.css\";\r\n+\r\n+// const VoiceBot = ({ videoRef }) => {\r\n+//   const [isListening, setIsListening] = useState(false);\r\n+//   const [isSpeaking, setIsSpeaking] = useState(false);\r\n+//   const recognition = useRef(null);\r\n+//   const speechSynthesis = useRef(window.speechSynthesis);\r\n+//   const hasGreeted = useRef(false);\r\n+//   const restartRecognitionTimeout = useRef(null);\r\n+//   const navigate = useNavigate();\r\n+//   const location = useLocation();\r\n+//   const [isRecognitionActive, setIsRecognitionActive] = useState(false); // New state to track recognition status\r\n+\r\n+//   useEffect(() => {\r\n+//     recognition.current = new window.webkitSpeechRecognition();\r\n+//     recognition.current.continuous = true;\r\n+//     recognition.current.interimResults = false;\r\n+//     recognition.current.onresult = onResult;\r\n+//     recognition.current.onend = () => {\r\n+//       console.log(\"Recognition ended.\");\r\n+//       if (isListening) {\r\n+//         startListening();\r\n+//       }\r\n+//     };\r\n+//     recognition.current.onerror = (event) => {\r\n+//       console.error(\"Recognition error:\", event.error);\r\n+//     };\r\n+\r\n+//     return () => {\r\n+//       recognition.current.abort();\r\n+//     };\r\n+//   }, []);\r\n+\r\n+//   // Update useEffect for managing the recognition state based on isListening and isRecognitionActive\r\n+//   useEffect(() => {\r\n+//     if (isListening && !isRecognitionActive) {\r\n+//       startListening();\r\n+//     } else if (!isListening && isRecognitionActive) {\r\n+//       stopListening();\r\n+//     }\r\n+//   }, [isListening, isRecognitionActive]);\r\n+\r\n+//   const goBack = () => {\r\n+//     if (window.history.length > 1) {\r\n+//       navigate(-1);\r\n+//     } else {\r\n+//       speak(\"Can't go back any further.\");\r\n+//     }\r\n+//   };\r\n+\r\n+//   const goForward = () => {\r\n+//     // Unfortunately, there's no direct way to check if you can go forward in the history.\r\n+//     // You might need to manage this state manually based on user navigation.\r\n+//     navigate(1);\r\n+//   };\r\n+\r\n+//   const playVideo = () => {\r\n+//     if (videoRef.current && !videoRef.current.paused) {\r\n+//       speak(\"Video is already playing.\");\r\n+//     } else if (videoRef.current) {\r\n+//       videoRef.current.play();\r\n+//       speak(\"Playing video.\");\r\n+//     } else {\r\n+//       speak(\"No video to play.\");\r\n+//     }\r\n+//   };\r\n+\r\n+//   const pauseVideo = () => {\r\n+//     if (videoRef.current && videoRef.current.paused) {\r\n+//       speak(\"Video is already paused.\");\r\n+//     } else if (videoRef.current) {\r\n+//       videoRef.current.pause();\r\n+//       speak(\"Video paused.\");\r\n+//     } else {\r\n+//       speak(\"No video to pause.\");\r\n+//     }\r\n+//   };\r\n+\r\n+//   const scrollAmount = window.innerHeight * 0.82;\r\n+\r\n+//   const scrollUp = () => {\r\n+//     if (window.pageYOffset === 0) {\r\n+//       speak(\"Already at the top of the page.\");\r\n+//     } else {\r\n+//       window.scrollBy(0, -scrollAmount);\r\n+//       speak(\"Scrolled up.\");\r\n+//     }\r\n+//   };\r\n+\r\n+//   const scrollDown = () => {\r\n+//     const maxScrollTop =\r\n+//       document.documentElement.scrollHeight - window.innerHeight;\r\n+//     if (window.pageYOffset >= maxScrollTop) {\r\n+//       speak(\"Already at the bottom of the page.\");\r\n+//     } else {\r\n+//       window.scrollBy(0, scrollAmount);\r\n+//       speak(\"Scrolled down.\");\r\n+//     }\r\n+//   };\r\n+\r\n+//   const scrollToTop = () => {\r\n+//     if (window.pageYOffset === 0) {\r\n+//       speak(\"Already at the top of the page.\");\r\n+//     } else {\r\n+//       window.scrollTo(0, 0);\r\n+//       speak(\"Scrolled to the top of the page.\");\r\n+//     }\r\n+//   };\r\n+\r\n+//   const scrollToBottom = () => {\r\n+//     const maxScrollTop =\r\n+//       document.documentElement.scrollHeight - window.innerHeight;\r\n+//     if (window.pageYOffset >= maxScrollTop) {\r\n+//       speak(\"Already at the bottom of the page.\");\r\n+//     } else {\r\n+//       window.scrollTo(0, document.body.scrollHeight);\r\n+//       speak(\"Scrolled to the bottom of the page.\");\r\n+//     }\r\n+//   };\r\n+\r\n+//   // const speak = (message) => {\r\n+//   //   const utterance = new SpeechSynthesisUtterance(message);\r\n+//   //   utterance.onend = () => {\r\n+//   //     setIsSpeaking(false);\r\n+//   //     console.log(\"Speaking ended.\");\r\n+//   //     // Only restart recognition if we're still supposed to be listening\r\n+//   //     // if (isListening) {\r\n+//   //     //   if (restartRecognitionTimeout.current) {\r\n+//   //     //     clearTimeout(restartRecognitionTimeout.current);\r\n+//   //     //   }\r\n+//   //     //   restartRecognitionTimeout.current = setTimeout(() => {\r\n+//   //     //     console.log(\"Recognition restarted.\");\r\n+//   //     //     recognition.current.start();\r\n+//   //     //   }, 100); // Delay to prevent immediate restart\r\n+//   //     // }\r\n+//   //     if (isListening && !recognition.current.starting) { // Check the flag before restarting\r\n+//   //       recognition.current.starting = true; // Set the flag when starting recognition\r\n+//   //       recognition.current.start();\r\n+//   //     }\r\n+//   //   };\r\n+\r\n+//   //   setIsSpeaking(true);\r\n+//   //   console.log(\"Speaking started.\");\r\n+//   //   recognition.current.stop(); // Stop recognition when the bot starts speaking\r\n+//   //   speechSynthesis.current.speak(utterance);\r\n+//   // };\r\n+\r\n+//   const speak = (message) => {\r\n+//     console.log(\"speak function called with message:\", message);\r\n+//     const utterance = new SpeechSynthesisUtterance(message);\r\n+//     utterance.onend = () => {\r\n+//       setIsSpeaking(false);\r\n+//       console.log(\"Speaking ended.\");\r\n+//       // Directly handle the restart of recognition here if needed\r\n+//       if (isListening) {\r\n+//         startListening();\r\n+//       }\r\n+//     };\r\n+\r\n+//     setIsSpeaking(true);\r\n+//     console.log(\"Speaking started.\");\r\n+//     recognition.current.stop(); // Ensure to stop recognition before speaking\r\n+//     speechSynthesis.current.speak(utterance);\r\n+//   };\r\n+\r\n+//   const onResult = (event) => {\r\n+//     const resultIndex = event.resultIndex;\r\n+//     const transcript = event.results[resultIndex][0].transcript\r\n+//       .trim()\r\n+//       .toLowerCase();\r\n+\r\n+//     if (event.results[resultIndex].isFinal) {\r\n+//       console.log(`Recognized text: ${transcript}`);\r\n+//       if (transcript.includes(\"brain\")) {\r\n+//         console.log(\"Wake word heard, processing command...\");\r\n+//         handleCommandWithFuse(transcript.replace(\"brain\", \"\"));\r\n+//       }\r\n+//     }\r\n+//   };\r\n+\r\n+//   // const onRecognitionEnd = () => {\r\n+//   //   console.log(\"Recognition ended.\");\r\n+//   //   setIsRecognitionActive(false); // Update state when recognition ends\r\n+//   //   recognition.current.starting = false; // Reset the flag when recognition ends\r\n+//   //   // We now check if the recognition is already running before starting it again\r\n+//   //   if (isListening && !isSpeaking && !recognition.current?.starting) {\r\n+//   //     console.log(\"Restarting recognition.\");\r\n+//   //     recognition.current.start();\r\n+//   //   }\r\n+//   // };\r\n+\r\n+//   // useEffect(() => {\r\n+//   //   if (isListening && !hasGreeted.current) {\r\n+//   //     speak(\"Hello, I'm Brane. How can I assist you today?\");\r\n+//   //     hasGreeted.current = true;\r\n+//   //   } else if (isListening && !isSpeaking) {\r\n+//   //     recognition.current.start();\r\n+//   //   }\r\n+//   // }, [isListening, isSpeaking]);\r\n+\r\n+//   useEffect(() => {\r\n+//     if (isListening && !hasGreeted.current) {\r\n+//       speak(\"Hello, I'm Brane. How can I assist you today?\");\r\n+//       hasGreeted.current = true;\r\n+//     } else if (isListening && !isSpeaking && !recognition.current.starting) {\r\n+//       // Check the flag before starting\r\n+//       recognition.current.starting = true; // Set the flag when starting recognition\r\n+//       recognition.current.start();\r\n+//     }\r\n+//   }, [isListening, isSpeaking]);\r\n+\r\n+//   // const startListening = () => {\r\n+//   //   console.log(\"Attempting to start listening.\");\r\n+//   //   if (recognition.current && !recognition.current.starting) {\r\n+//   //     setIsListening(true);\r\n+//   //     recognition.current.starting = true; // Set the flag when starting recognition\r\n+//   //     recognition.current.start();\r\n+//   //     console.log(\"Listening started.\");\r\n+//   //   }\r\n+//   // };\r\n+\r\n+//   // const stopListening = () => {\r\n+//   //   console.log(\"Stopping listening.\");\r\n+\r\n+//   //   setIsListening(false);\r\n+//   //   recognition.current.stop();\r\n+//   //   if (speechSynthesis.current.speaking) {\r\n+//   //     speechSynthesis.current.cancel();\r\n+//   //   }\r\n+//   //   if (restartRecognitionTimeout.current) {\r\n+//   //     clearTimeout(restartRecognitionTimeout.current);\r\n+//   //   }\r\n+//   //   console.log(\"Listening stopped.\");\r\n+//   // };\r\n+//   // Handle start and stop listening logic\r\n+//   const startListening = () => {\r\n+//     console.log(\"Attempting to start listening.\");\r\n+//     if (!recognition.current.starting) {\r\n+//       setIsListening(true);\r\n+//       recognition.current.starting = true;\r\n+//       recognition.current.start();\r\n+//       console.log(\"Listening started.\");\r\n+//     } else {\r\n+//       console.log(\"Recognition already active.\");\r\n+//     }\r\n+//   };\r\n+\r\n+//   const stopListening = () => {\r\n+//     console.log(\"Stopping listening.\");\r\n+//     if (recognition.current.starting) {\r\n+//       setIsListening(false);\r\n+//       recognition.current.starting = false;\r\n+//       recognition.current.stop();\r\n+//       console.log(\"Listening stopped.\");\r\n+//     } else {\r\n+//       console.log(\"Recognition already inactive.\");\r\n+//     }\r\n+//   };\r\n+\r\n+//   // const handleCommandWithFuse = (command) => {\r\n+//   //   const fuse = new Fuse(commands, { keys: [\"utterance\"], threshold: 0.4 });\r\n+//   //   const results = fuse.search(command);\r\n+//   //   const foundCommand = results.length ? results[0].item : null;\r\n+\r\n+//   //   if (foundCommand) {\r\n+//   //     console.log(\"Command found:\", foundCommand.utterance);\r\n+//   //     speak(foundCommand.response);\r\n+//   //     if (foundCommand.route) {\r\n+//   //       navigate(foundCommand.route); // Navigate to the route specified in the command\r\n+//   //     }\r\n+//   //   } else {\r\n+//   //     console.log(\"No command found.\");\r\n+//   //     speak(\"I'm not sure how to respond to that.\");\r\n+//   //   }\r\n+//   // };\r\n+\r\n+//   const handleCommandWithFuse = (command) => {\r\n+//     const fuse = new Fuse(commands, { keys: [\"utterance\"], threshold: 0.4 });\r\n+//     const results = fuse.search(command);\r\n+//     const foundCommand = results.length ? results[0].item : null;\r\n+\r\n+//     if (foundCommand) {\r\n+//       console.log(\"Command found:\", foundCommand.utterance);\r\n+\r\n+//       if (foundCommand.route) {\r\n+//         if (location.pathname !== foundCommand.route) {\r\n+//           navigate(foundCommand.route);\r\n+//           speak(\r\n+//             `Navigating to ${\r\n+//               foundCommand.routeDescription || \"requested page\"\r\n+//             }.`\r\n+//           );\r\n+//         } else {\r\n+//           speak(\r\n+//             `You are already on the ${\r\n+//               foundCommand.routeDescription || \"requested page\"\r\n+//             }.`\r\n+//           );\r\n+//         }\r\n+//       } else if (foundCommand.action) {\r\n+//         foundCommand.action();\r\n+//       }\r\n+\r\n+//       if (foundCommand.response) {\r\n+//         speak(foundCommand.response);\r\n+//       }\r\n+//     } else {\r\n+//       console.log(\"No command found.\");\r\n+//       speak(\"I'm not sure how to respond to that.\");\r\n+//     }\r\n+//   };\r\n+\r\n+//   const commands = [\r\n+//     {\r\n+//       utterance: \"Hello who are you ?\",\r\n+\r\n+//       response:\r\n+//         \"Hi! This is Brane! your Voice bot from Brane Education How can I Assist you Today ?\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"Hello\",\r\n+\r\n+//       response: \"Hi! How can I assist you today?\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"hello\",\r\n+\r\n+//       response: \"Hi! How can I assist you today?\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"Hi.\",\r\n+\r\n+//       response: \"Hello! How can I assist you today?\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"Hey there\",\r\n+\r\n+//       response: \"Hi! How can I assist you today?\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"Good morning Brane.\",\r\n+\r\n+//       response: \"Hey Hiii! Good morning  ! How can I help you?\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"Good afternoon Brane.\",\r\n+\r\n+//       response: \"Hey Hiii! Good after noon ! How can I help you?\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"Good evening Brane.\",\r\n+\r\n+//       response: \"Hey Hiii! Good evening ! How can I help you?\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"can you please take me to login page\",\r\n+//       route: \"/login\",\r\n+//       routeDescription: \"login page\",\r\n+//       response: \"Navigating to the login page.\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"go to login page\",\r\n+//       route: \"/login\",\r\n+//       routeDescription: \"login page\",\r\n+//       response: \"Navigating to the login page.\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"please take me to login page\",\r\n+//       route: \"/login\",\r\n+//       routeDescription: \"login page\",\r\n+//       response: \"Navigating to the login page.\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"Go to login page\",\r\n+//       route: \"/login\",\r\n+//       routeDescription: \"login page\",\r\n+//       response: \"Navigating to the login page.\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"open login page\",\r\n+//       route: \"/login\",\r\n+//       routeDescription: \"login page\",\r\n+//       response: \"Navigating to the login page.\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"can you please take me to signup page\",\r\n+//       route: \"/signup\",\r\n+//       routeDescription: \"signup page\",\r\n+//       response: \"Navigating to the signup page.\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"take me to signup page\",\r\n+//       route: \"/signup\",\r\n+//       routeDescription: \"signup page\",\r\n+//       response: \"Navigating to the signup page.\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"Go to signup page\",\r\n+//       route: \"/signup\",\r\n+//       routeDescription: \"signup page\",\r\n+//       response: \"Navigating to the signup page.\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"open signup page\",\r\n+//       route: \"/signup\",\r\n+//       routeDescription: \"signup page\",\r\n+//       response: \"Navigating to the signup page.\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"what are platform features\",\r\n+\r\n+//       response:\r\n+//         \"Dashboard, Dynamic time table, Learning Networks, Little Masters, Video Based Dictionary, General Search.\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"Features of platform\",\r\n+\r\n+//       response:\r\n+//         \"Dashboard, Dynamic time table, Learning Networks, Little Masters, Video Based Dictionary, General Search.\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"What does the platform offer\",\r\n+\r\n+//       response:\r\n+//         \"Dashboard, Dynamic time table, Learning Networks, Little Masters, Video Based Dictionary, General Search.\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"Say me the features of platform\",\r\n+\r\n+//       response:\r\n+//         \"Dashboard, Dynamic time table, Learning Networks, Little Masters, Video Based Dictionary, General Search.\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"Say me the services of platform\",\r\n+\r\n+//       response:\r\n+//         \"Dashboard, Dynamic time table, Learning Networks, Little Masters, Video Based Dictionary, General Search.\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"tell me the services offered by the platform\",\r\n+\r\n+//       response:\r\n+//         \"Dashboard, Dynamic time table, Learning Networks, Little Masters, Video Based Dictionary, General Search.\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"explain platform services\",\r\n+\r\n+//       response:\r\n+//         \"Dashboard, Dynamic time table, Learning Networks, Little Masters, Video Based Dictionary, General Search.\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"Give me the Parent voice of Julia Harris\",\r\n+\r\n+//       response:\r\n+//         \"Brane education has helped my son a lot in his studies. He improved a lot in his studies and is now able to score good marks in his exams\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"Play today's motivational video\",\r\n+\r\n+//       response: \"I am playing the video\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"Play today's video\",\r\n+\r\n+//       response: \"I am playing Motivational video\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"Leaders Voice\",\r\n+\r\n+//       response:\r\n+//         \"This Voice-interactive AI Platform is a game Changer. It revolutionizes education.\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"Curriculum Supported by Brane Education\",\r\n+\r\n+//       response:\r\n+//         \"we support multiple Boards let me say few Telangana State Board Andhra Pradesh Board Maharashtra Board Assam Board\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"Boards supported by the platform\",\r\n+\r\n+//       response:\r\n+//         \"we support multiple Boards let me say few Telangana State Board Andhra Pradesh Board Maharashtra Board Assam Board\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"Curriculum\",\r\n+\r\n+//       response:\r\n+//         \"we support multiple Boards let me say few Telangana State Board Andhra Pradesh Board Maharashtra Board Assam Board\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"Go to landing page\",\r\n+\r\n+//       response: \"Okay, I am taking you to the landing page.\",\r\n+\r\n+//       route: \"/childpage\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"take me to landing page\",\r\n+\r\n+//       response: \"Okay, I am taking you to the landing page.\",\r\n+\r\n+//       route: \"/childpage\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"move to landing page\",\r\n+\r\n+//       response: \"Okay, I am taking you to the landing page.\",\r\n+\r\n+//       route: \"/childpage\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"roll back to landing page\",\r\n+\r\n+//       response: \"Okay, I am taking you to the landing page.\",\r\n+\r\n+//       route: \"/childpage\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"move to landing page\",\r\n+\r\n+//       response: \"Okay, I am taking you to the landing page.\",\r\n+\r\n+//       route: \"/childpage\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"what is today's quote\",\r\n+\r\n+//       response:\r\n+//         \"Determination is the power that sees us through all our frustration and obstacles. It helps in building our willpower which is the very basis of success.\",\r\n+\r\n+//       // route: \"/childpage\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"Today's Inspirational quote\",\r\n+\r\n+//       response:\r\n+//         \"Determination is the power that sees us through all our frustration and obstacles. It helps in building our willpower which is the very basis of success.\",\r\n+\r\n+//       // route: \"/childpage\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"say me today's quote\",\r\n+\r\n+//       response:\r\n+//         \"Determination is the power that sees us through all our frustration and obstacles. It helps in building our willpower which is the very basis of success.\",\r\n+\r\n+//       // route: \"/childpage\",\r\n+//     },\r\n+//     {\r\n+//       utterance: \"go back\",\r\n+//       response: \"Going back.\",\r\n+//       action: goBack, // Note the use of an action property\r\n+//     },\r\n+//     {\r\n+//       utterance: \"go forward\",\r\n+//       response: \"Going forward.\",\r\n+//       action: goForward,\r\n+//     },\r\n+//     {\r\n+//       utterance: \"play video\",\r\n+//       // response: \"Playing video.\",\r\n+//       action: playVideo,\r\n+//     },\r\n+//     {\r\n+//       utterance: \"pause video\",\r\n+//       // response: \"Pausing video.\",\r\n+//       action: pauseVideo,\r\n+//     },\r\n+//     {\r\n+//       utterance: \"start video\",\r\n+//       // response: \"Playing video.\",\r\n+//       action: playVideo,\r\n+//     },\r\n+//     {\r\n+//       utterance: \"stop video\",\r\n+//       // response: \"Playing video.\",\r\n+//       action: pauseVideo,\r\n+//     },\r\n+//     {\r\n+//       utterance: \"scroll up\",\r\n+//       // response: \"Scrolling up.\",\r\n+//       action: scrollUp,\r\n+//     },\r\n+//     {\r\n+//       utterance: \"scroll down\",\r\n+//       // response: \"Scrolling down.\",\r\n+//       action: scrollDown,\r\n+//     },\r\n+//     {\r\n+//       utterance: \"go up\",\r\n+\r\n+//       // response: \"Scrolling up.\",\r\n+//       action: scrollUp,\r\n+//     },\r\n+//     {\r\n+//       utterance: \"go down\",\r\n+//       // response: \"Scrolling down.\",\r\n+//       action: scrollDown,\r\n+//     },\r\n+//     {\r\n+//       utterance: \"scroll to top\",\r\n+//       action: scrollToTop,\r\n+//     },\r\n+//     {\r\n+//       utterance: \"scroll to bottom\",\r\n+//       action: scrollToBottom,\r\n+//     },\r\n+//   ];\r\n+//   return (\r\n+//     <div className=\"speech-bot-container\">\r\n+//       <div\r\n+//         className={`button-container ${\r\n+//           isListening ? \"voicebotframeactive\" : \"voicebotframe\"\r\n+//         }`}\r\n+//       >\r\n+//         <div onClick={isListening ? stopListening : startListening}>\r\n+//           <iframe\r\n+//             src={\r\n+//               isListening\r\n+//                 ? \"https://lottie.host/?file=a89aca3f-5407-4052-82c3-2048afca7a9f/NpCdWzLSKD.json\"\r\n+//                 : \"https://lottie.host/?file=d2b6cc0e-fe95-4847-85b5-35365fca7e00/vTudpCuPZq.json\"\r\n+//             }\r\n+//             width=\"120\" // Set your desired width\r\n+//             height=\"120\" // Set your desired height\r\n+//             title={isListening ? \"Stop Animation\" : \"Start Animation\"}\r\n+//             className={isListening ? \"voicebotframeactive\" : \"voicebotframe\"}\r\n+//           ></iframe>\r\n+//           {isListening ? (\r\n+//             <div className=\"overlay\" onClick={stopListening}></div>\r\n+//           ) : (\r\n+//             <div className=\"overlay\" onClick={startListening}></div>\r\n+//           )}\r\n+//         </div>\r\n+//       </div>\r\n+//     </div>\r\n+//   );\r\n+// };\r\n+\r\n+// export default VoiceBot;\r\n+\r\n+// All functionalities but messed up\r\n+\r\n+// import React, { useState, useEffect, useRef } from \"react\";\r\n+// import { useNavigate, useLocation } from \"react-router-dom\";\r\n+// import Fuse from \"fuse.js\";\r\n+// import \"./VoiceBot.css\";\r\n+\r\n+// const VoiceBot = ({ videoRef, takeTestRef, goBackRef }) => {\r\n+//   const [isListening, setIsListening] = useState(false);\r\n+//   const [isSpeaking, setIsSpeaking] = useState(false);\r\n+//   const recognition = useRef(null);\r\n+//   const speechSynthesis = useRef(window.speechSynthesis);\r\n+//   const hasGreeted = useRef(false);\r\n+//   const navigate = useNavigate();\r\n+//   const location = useLocation();\r\n+//   const isRecognitionActive = useRef(false);\r\n+\r\n+//   useEffect(() => {\r\n+//     recognition.current = new window.webkitSpeechRecognition();\r\n+//     recognition.current.continuous = true;\r\n+//     recognition.current.interimResults = false;\r\n+//     recognition.current.onresult = onResult;\r\n+//     recognition.current.onend = onRecognitionEnd;\r\n+\r\n+//     return () => {\r\n+//       if (recognition.current) {\r\n+//         recognition.current.abort();\r\n+//       }\r\n+//     };\r\n+//   }, [location.pathname]);\r\n+\r\n+//   const onResult = (event) => {\r\n+//     const resultIndex = event.resultIndex;\r\n+//     const transcript = event.results[resultIndex][0].transcript\r\n+//       .trim()\r\n+//       .toLowerCase();\r\n+\r\n+//     if (event.results[resultIndex].isFinal) {\r\n+//       console.log(`Recognized text: ${transcript}`);\r\n+//       if (transcript.includes(\"brain\")) {\r\n+//         console.log(\"Wake word heard, processing command...\");\r\n+//         handleCommandWithFuse(transcript.replace(\"brain\", \"\"));\r\n+//       }\r\n+//     }\r\n+//   };\r\n+\r\n+//   const startListening = () => {\r\n+//     if (!isRecognitionActive.current) {\r\n+//       setIsListening(true);\r\n+//       recognition.current.start();\r\n+//       isRecognitionActive.current = true;\r\n+//     }\r\n+//   };\r\n+\r\n+//   const stopListening = () => {\r\n+//     if (isRecognitionActive.current) {\r\n+//       setIsListening(false);\r\n+//       recognition.current.stop();\r\n+//       isRecognitionActive.current = false;\r\n+//     }\r\n+//   };\r\n+\r\n+//   const onRecognitionEnd = () => {\r\n+//     isRecognitionActive.current = false;\r\n+//     if (isListening) {\r\n+//       startListening();\r\n+//     }\r\n+//   };\r\n+\r\n+//   const speak = (message) => {\r\n+//     const utterance = new SpeechSynthesisUtterance(message);\r\n+//     utterance.onend = () => {\r\n+//       setIsSpeaking(false);\r\n+//       if (isListening && !isRecognitionActive.current) {\r\n+//         startListening();\r\n+//       }\r\n+//     };\r\n+\r\n+//     setIsSpeaking(true);\r\n+//     if (isRecognitionActive.current) {\r\n+//       stopListening(); // Adjusted to use stopListening\r\n+//     }\r\n+//     speechSynthesis.current.speak(utterance);\r\n+//   };\r\n+\r\n+//   useEffect(() => {\r\n+//     if (isListening && !hasGreeted.current) {\r\n+//       speak(\"Hello, I'm Brane. How can I assist you today?\");\r\n+//       hasGreeted.current = true;\r\n+//     }\r\n+//   }, [isListening]);\r\n+\r\n+//   const goBack = () => {\r\n+//     if (window.history.length > 1) {\r\n+//       navigate(-1);\r\n+//     } else {\r\n+//       speak(\"Can't go back any further.\");\r\n+//     }\r\n+//   };\r\n+\r\n+//   const goForward = () => {\r\n+//     // Unfortunately, there's no direct way to check if you can go forward in the history.\r\n+//     // You might need to manage this state manually based on user navigation.\r\n+//     navigate(1);\r\n+//   };\r\n+\r\n+//   const playVideo = () => {\r\n+//     if (videoRef.current && !videoRef.current.paused) {\r\n+//       speak(\"Video is already playing.\");\r\n+//     } else if (videoRef.current) {\r\n+//       videoRef.current.play();\r\n+//       speak(\"Playing video.\");\r\n+//     } else {\r\n+//       speak(\"No video to play.\");\r\n+//     }\r\n+//   };\r\n+\r\n+//   const pauseVideo = () => {\r\n+//     if (videoRef.current && videoRef.current.paused) {\r\n+//       speak(\"Video is already paused.\");\r\n+//     } else if (videoRef.current) {\r\n+//       videoRef.current.pause();\r\n+//       speak(\"Video paused.\");\r\n+//     } else {\r\n+//       speak(\"No video to pause.\");\r\n+//     }\r\n+//   };\r\n+\r\n+//   const scrollAmount = window.innerHeight * 0.82;\r\n+\r\n+//   const scrollUp = () => {\r\n+//     if (window.pageYOffset === 0) {\r\n+//       speak(\"Already at the top of the page.\");\r\n+//     } else {\r\n+//       window.scrollBy(0, -scrollAmount);\r\n+//       speak(\"Scrolled up.\");\r\n+//     }\r\n+//   };\r\n+\r\n+//   const scrollDown = () => {\r\n+//     const maxScrollTop =\r\n+//       document.documentElement.scrollHeight - window.innerHeight;\r\n+//     if (window.pageYOffset >= maxScrollTop) {\r\n+//       speak(\"Already at the bottom of the page.\");\r\n+//     } else {\r\n+//       window.scrollBy(0, scrollAmount);\r\n+//       speak(\"Scrolled down.\");\r\n+//     }\r\n+//   };\r\n+\r\n+//   const scrollToTop = () => {\r\n+//     if (window.pageYOffset === 0) {\r\n+//       speak(\"Already at the top of the page.\");\r\n+//     } else {\r\n+//       window.scrollTo(0, 0);\r\n+//       speak(\"Scrolled to the top of the page.\");\r\n+//     }\r\n+//   };\r\n+\r\n+//   const scrollToBottom = () => {\r\n+//     const maxScrollTop =\r\n+//       document.documentElement.scrollHeight - window.innerHeight;\r\n+//     if (window.pageYOffset >= maxScrollTop) {\r\n+//       speak(\"Already at the bottom of the page.\");\r\n+//     } else {\r\n+//       window.scrollTo(0, document.body.scrollHeight);\r\n+//       speak(\"Scrolled to the bottom of the page.\");\r\n+//     }\r\n+//   };\r\n+\r\n+//   // const speak = (message) => {\r\n+//   //   const utterance = new SpeechSynthesisUtterance(message);\r\n+//   //   utterance.onend = () => {\r\n+//   //     setIsSpeaking(false);\r\n+//   //     console.log(\"Speaking ended.\");\r\n+//   //     // Only restart recognition if we're still supposed to be listening\r\n+//   //     // if (isListening) {\r\n+//   //     //   if (restartRecognitionTimeout.current) {\r\n+//   //     //     clearTimeout(restartRecognitionTimeout.current);\r\n+//   //     //   }\r\n+//   //     //   restartRecognitionTimeout.current = setTimeout(() => {\r\n+//   //     //     console.log(\"Recognition restarted.\");\r\n+//   //     //     recognition.current.start();\r\n+//   //     //   }, 100); // Delay to prevent immediate restart\r\n+//   //     // }\r\n+//   //     if (isListening && !recognition.current.starting) { // Check the flag before restarting\r\n+//   //       recognition.current.starting = true; // Set the flag when starting recognition\r\n+//   //       recognition.current.start();\r\n+//   //     }\r\n+//   //   };\r\n+\r\n+//   //   setIsSpeaking(true);\r\n+//   //   console.log(\"Speaking started.\");\r\n+//   //   recognition.current.stop(); // Stop recognition when the bot starts speaking\r\n+//   //   speechSynthesis.current.speak(utterance);\r\n+//   // };\r\n+\r\n+//   // const onRecognitionEnd = () => {\r\n+//   //   console.log(\"Recognition ended.\");\r\n+//   //   setIsRecognitionActive(false); // Update state when recognition ends\r\n+//   //   recognition.current.starting = false; // Reset the flag when recognition ends\r\n+//   //   // We now check if the recognition is already running before starting it again\r\n+//   //   if (isListening && !isSpeaking && !recognition.current?.starting) {\r\n+//   //     console.log(\"Restarting recognition.\");\r\n+//   //     recognition.current.start();\r\n+//   //   }\r\n+//   // };\r\n+\r\n+//   // useEffect(() => {\r\n+//   //   if (isListening && !hasGreeted.current) {\r\n+//   //     speak(\"Hello, I'm Brane. How can I assist you today?\");\r\n+//   //     hasGreeted.current = true;\r\n+//   //   } else if (isListening && !isSpeaking) {\r\n+//   //     recognition.current.start();\r\n+//   //   }\r\n+//   // }, [isListening, isSpeaking]);\r\n+\r\n+//   // const startListening = () => {\r\n+//   //   console.log(\"Attempting to start listening.\");\r\n+//   //   if (recognition.current && !recognition.current.starting) {\r\n+//   //     setIsListening(true);\r\n+//   //     recognition.current.starting = true; // Set the flag when starting recognition\r\n+//   //     recognition.current.start();\r\n+//   //     console.log(\"Listening started.\");\r\n+//   //   }\r\n+//   // };\r\n+\r\n+//   // const stopListening = () => {\r\n+//   //   console.log(\"Stopping listening.\");\r\n+\r\n+//   //   setIsListening(false);\r\n+//   //   recognition.current.stop();\r\n+//   //   if (speechSynthesis.current.speaking) {\r\n+//   //     speechSynthesis.current.cancel();\r\n+//   //   }\r\n+//   //   if (restartRecognitionTimeout.current) {\r\n+//   //     clearTimeout(restartRecognitionTimeout.current);\r\n+//   //   }\r\n+//   //   console.log(\"Listening stopped.\");\r\n+//   // };\r\n+//   // Handle start and stop listening logic\r\n+\r\n+//   useEffect(() => {\r\n+//     if (isListening && !hasGreeted.current) {\r\n+//       speak(\"Hello, I'm Brane. How can I assist you today?\");\r\n+//       hasGreeted.current = true;\r\n+//     }\r\n+//   }, [isListening]);\r\n+\r\n+//   // const handleCommandWithFuse = (command) => {\r\n+//   //   const fuse = new Fuse(commands, { keys: [\"utterance\"], threshold: 0.4 });\r\n+//   //   const results = fuse.search(command);\r\n+//   //   const foundCommand = results.length ? results[0].item : null;\r\n+\r\n+//   //   if (foundCommand) {\r\n+//   //     console.log(\"Command found:\", foundCommand.utterance);\r\n+//   //     speak(foundCommand.response);\r\n+//   //     if (foundCommand.route) {\r\n+//   //       navigate(foundCommand.route); // Navigate to the route specified in the command\r\n+//   //     }\r\n+//   //   } else {\r\n+//   //     console.log(\"No command found.\");\r\n+//   //     speak(\"I'm not sure how to respond to that.\");\r\n+//   //   }\r\n+//   // };\r\n+\r\n+//   const handleCommandWithFuse = (command) => {\r\n+//     const fuse = new Fuse(commands, { keys: [\"utterance\"], threshold: 0.4 });\r\n+//     const results = fuse.search(command);\r\n+//     const foundCommand = results.length ? results[0].item : null;\r\n+\r\n+//     if (foundCommand) {\r\n+//       console.log(\"Command found:\", foundCommand.utterance);\r\n+\r\n+//       if (foundCommand.action) {\r\n+//         foundCommand.action();\r\n+//       } else if (foundCommand.route) {\r\n+//         navigate(foundCommand.route);\r\n+//       }\r\n+\r\n+//       if (foundCommand.response) {\r\n+//         speak(foundCommand.response);\r\n+//       }\r\n+//     } else {\r\n+//       console.log(\"No command found.\");\r\n+//       speak(\"I'm not sure how to respond to that.\");\r\n+//     }\r\n+//   };\r\n+\r\n+//   const commands = [\r\n+//     {\r\n+//       utterance: \"Hello who are you ?\",\r\n+\r\n+//       response:\r\n+//         \"Hi! This is Brane! your Voice bot from Brane Education How can I Assist you Today ?\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"Hello\",\r\n+\r\n+//       response: \"Hi! How can I assist you today?\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"hello\",\r\n+\r\n+//       response: \"Hi! How can I assist you today?\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"Hi.\",\r\n+\r\n+//       response: \"Hello! How can I assist you today?\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"Hey there\",\r\n+\r\n+//       response: \"Hi! How can I assist you today?\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"Good morning Brane.\",\r\n+\r\n+//       response: \"Hey Hiii! Good morning  ! How can I help you?\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"Good afternoon Brane.\",\r\n+\r\n+//       response: \"Hey Hiii! Good after noon ! How can I help you?\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"Good evening Brane.\",\r\n+\r\n+//       response: \"Hey Hiii! Good evening ! How can I help you?\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"can you please take me to login page\",\r\n+//       route: \"/login\",\r\n+//       routeDescription: \"login page\",\r\n+//       response: \"Navigating to the login page.\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"go to login page\",\r\n+//       route: \"/login\",\r\n+//       routeDescription: \"login page\",\r\n+//       response: \"Navigating to the login page.\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"please take me to login page\",\r\n+//       route: \"/login\",\r\n+//       routeDescription: \"login page\",\r\n+//       response: \"Navigating to the login page.\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"Go to login page\",\r\n+//       route: \"/login\",\r\n+//       routeDescription: \"login page\",\r\n+//       response: \"Navigating to the login page.\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"open login page\",\r\n+//       route: \"/login\",\r\n+//       routeDescription: \"login page\",\r\n+//       response: \"Navigating to the login page.\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"can you please take me to signup page\",\r\n+//       route: \"/signup\",\r\n+//       routeDescription: \"signup page\",\r\n+//       response: \"Navigating to the signup page.\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"take me to signup page\",\r\n+//       route: \"/signup\",\r\n+//       routeDescription: \"signup page\",\r\n+//       response: \"Navigating to the signup page.\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"Go to signup page\",\r\n+//       route: \"/signup\",\r\n+//       routeDescription: \"signup page\",\r\n+//       response: \"Navigating to the signup page.\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"open signup page\",\r\n+//       route: \"/signup\",\r\n+//       routeDescription: \"signup page\",\r\n+//       response: \"Navigating to the signup page.\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"what are platform features\",\r\n+\r\n+//       response:\r\n+//         \"Dashboard, Dynamic time table, Learning Networks, Little Masters, Video Based Dictionary, General Search.\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"Features of platform\",\r\n+\r\n+//       response:\r\n+//         \"Dashboard, Dynamic time table, Learning Networks, Little Masters, Video Based Dictionary, General Search.\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"What does the platform offer\",\r\n+\r\n+//       response:\r\n+//         \"Dashboard, Dynamic time table, Learning Networks, Little Masters, Video Based Dictionary, General Search.\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"Say me the features of platform\",\r\n+\r\n+//       response:\r\n+//         \"Dashboard, Dynamic time table, Learning Networks, Little Masters, Video Based Dictionary, General Search.\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"Say me the services of platform\",\r\n+\r\n+//       response:\r\n+//         \"Dashboard, Dynamic time table, Learning Networks, Little Masters, Video Based Dictionary, General Search.\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"tell me the services offered by the platform\",\r\n+\r\n+//       response:\r\n+//         \"Dashboard, Dynamic time table, Learning Networks, Little Masters, Video Based Dictionary, General Search.\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"explain platform services\",\r\n+\r\n+//       response:\r\n+//         \"Dashboard, Dynamic time table, Learning Networks, Little Masters, Video Based Dictionary, General Search.\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"Give me the Parent voice of Julia Harris\",\r\n+\r\n+//       response:\r\n+//         \"Brane education has helped my son a lot in his studies. He improved a lot in his studies and is now able to score good marks in his exams\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"Play today's motivational video\",\r\n+\r\n+//       response: \"I am playing the video\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"Play today's video\",\r\n+\r\n+//       response: \"I am playing Motivational video\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"Leaders Voice\",\r\n+\r\n+//       response:\r\n+//         \"This Voice-interactive AI Platform is a game Changer. It revolutionizes education.\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"Curriculum Supported by Brane Education\",\r\n+\r\n+//       response:\r\n+//         \"we support multiple Boards let me say few Telangana State Board Andhra Pradesh Board Maharashtra Board Assam Board\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"Boards supported by the platform\",\r\n+\r\n+//       response:\r\n+//         \"we support multiple Boards let me say few Telangana State Board Andhra Pradesh Board Maharashtra Board Assam Board\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"Curriculum\",\r\n+\r\n+//       response:\r\n+//         \"we support multiple Boards let me say few Telangana State Board Andhra Pradesh Board Maharashtra Board Assam Board\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"Go to landing page\",\r\n+\r\n+//       response: \"Okay, I am taking you to the landing page.\",\r\n+\r\n+//       route: \"/childpage\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"take me to landing page\",\r\n+\r\n+//       response: \"Okay, I am taking you to the landing page.\",\r\n+\r\n+//       route: \"/childpage\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"move to landing page\",\r\n+\r\n+//       response: \"Okay, I am taking you to the landing page.\",\r\n+\r\n+//       route: \"/childpage\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"roll back to landing page\",\r\n+\r\n+//       response: \"Okay, I am taking you to the landing page.\",\r\n+\r\n+//       route: \"/childpage\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"move to landing page\",\r\n+\r\n+//       response: \"Okay, I am taking you to the landing page.\",\r\n+\r\n+//       route: \"/childpage\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"what is today's quote\",\r\n+\r\n+//       response:\r\n+//         \"Determination is the power that sees us through all our frustration and obstacles. It helps in building our willpower which is the very basis of success.\",\r\n+\r\n+//       // route: \"/childpage\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"Today's Inspirational quote\",\r\n+\r\n+//       response:\r\n+//         \"Determination is the power that sees us through all our frustration and obstacles. It helps in building our willpower which is the very basis of success.\",\r\n+\r\n+//       // route: \"/childpage\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"say me today's quote\",\r\n+\r\n+//       response:\r\n+//         \"Determination is the power that sees us through all our frustration and obstacles. It helps in building our willpower which is the very basis of success.\",\r\n+\r\n+//       // route: \"/childpage\",\r\n+//     },\r\n+//     {\r\n+//       utterance: \"go back\",\r\n+//       response: \"Going back.\",\r\n+//       action: goBack, // Note the use of an action property\r\n+//     },\r\n+//     {\r\n+//       utterance: \"go forward\",\r\n+//       response: \"Going forward.\",\r\n+//       action: goForward,\r\n+//     },\r\n+//     {\r\n+//       utterance: \"play video\",\r\n+//       // response: \"Playing video.\",\r\n+//       action: playVideo,\r\n+//     },\r\n+//     {\r\n+//       utterance: \"pause video\",\r\n+//       // response: \"Pausing video.\",\r\n+//       action: pauseVideo,\r\n+//     },\r\n+//     {\r\n+//       utterance: \"start video\",\r\n+//       // response: \"Playing video.\",\r\n+//       action: playVideo,\r\n+//     },\r\n+//     {\r\n+//       utterance: \"stop video\",\r\n+//       // response: \"Playing video.\",\r\n+//       action: pauseVideo,\r\n+//     },\r\n+//     {\r\n+//       utterance: \"scroll up\",\r\n+//       // response: \"Scrolling up.\",\r\n+//       action: scrollUp,\r\n+//     },\r\n+//     {\r\n+//       utterance: \"scroll down\",\r\n+//       // response: \"Scrolling down.\",\r\n+//       action: scrollDown,\r\n+//     },\r\n+//     {\r\n+//       utterance: \"go up\",\r\n+\r\n+//       // response: \"Scrolling up.\",\r\n+//       action: scrollUp,\r\n+//     },\r\n+//     {\r\n+//       utterance: \"go down\",\r\n+//       // response: \"Scrolling down.\",\r\n+//       action: scrollDown,\r\n+//     },\r\n+//     {\r\n+//       utterance: \"scroll to top\",\r\n+//       action: scrollToTop,\r\n+//     },\r\n+//     {\r\n+//       utterance: \"scroll to bottom\",\r\n+//       action: scrollToBottom,\r\n+//     },\r\n+//     {\r\n+//       utterance: \"go back\",\r\n+//       action: goBackRef?.current?.click, // Use goBackRef directly\r\n+//       response: \"Going back.\",\r\n+//     },\r\n+//     {\r\n+//       utterance: \"take test\",\r\n+//       action: takeTestRef?.current?.click, // Use takeTestRef directly\r\n+//       response: \"Starting the test.\",\r\n+//     },\r\n+//   ];\r\n+//   return (\r\n+//     <div className=\"speech-bot-container\">\r\n+//       <div\r\n+//         className={`button-container ${\r\n+//           isListening ? \"voicebotframeactive\" : \"voicebotframe\"\r\n+//         }`}\r\n+//       >\r\n+//         <div onClick={isListening ? stopListening : startListening}>\r\n+//           <iframe\r\n+//             src={\r\n+//               isListening\r\n+//                 ? \"https://lottie.host/?file=a89aca3f-5407-4052-82c3-2048afca7a9f/NpCdWzLSKD.json\"\r\n+//                 : \"https://lottie.host/?file=d2b6cc0e-fe95-4847-85b5-35365fca7e00/vTudpCuPZq.json\"\r\n+//             }\r\n+//             width=\"120\" // Set your desired width\r\n+//             height=\"120\" // Set your desired height\r\n+//             title={isListening ? \"Stop Animation\" : \"Start Animation\"}\r\n+//             className={isListening ? \"voicebotframeactive\" : \"voicebotframe\"}\r\n+//           ></iframe>\r\n+//           {isListening ? (\r\n+//             <div className=\"overlay\" onClick={stopListening}></div>\r\n+//           ) : (\r\n+//             <div className=\"overlay\" onClick={startListening}></div>\r\n+//           )}\r\n+//         </div>\r\n+//       </div>\r\n+//     </div>\r\n+//   );\r\n+// };\r\n+\r\n+// export default VoiceBot;\r\n"
                },
                {
                    "date": 1700643968324,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -332,9 +332,9 @@\n \r\n       response: \"You're in Homepage now\",\r\n     },\r\n     {\r\n-      utterance: \"take me homepage\",\r\n+      utterance: \"go to homepage\",\r\n \r\n       route: \"/\",\r\n \r\n       response: \"You're in Homepage now\",\r\n@@ -3699,3685 +3699,4 @@\n //   );\r\n // };\r\n \r\n // export default VoiceBot;\r\n-import React, { useState, useEffect, useRef } from \"react\";\r\n-import { useNavigate, useLocation } from \"react-router-dom\";\r\n-import Fuse from \"fuse.js\";\r\n-import \"./VoiceBot.css\";\r\n-import chatbotimage from \"../../assets/chatbotgif.gif\"\r\n-\r\n-const VoiceBot = ({ videoRef}) => {\r\n-  const [isListening, setIsListening] = useState(false);\r\n-  const [isSpeaking, setIsSpeaking] = useState(false);\r\n-  const recognition = useRef(null);\r\n-  const speechSynthesis = useRef(window.speechSynthesis);\r\n-  const [hasGreeted, setHasGreeted] = useState(false);\r\n-  const navigate = useNavigate();\r\n-\r\n-\r\n- // Initialize speech recognition\r\n- useEffect(() => {\r\n-  recognition.current = new window.webkitSpeechRecognition();\r\n-  recognition.current.continuous = true;\r\n-  recognition.current.interimResults = false;\r\n-  recognition.current.onresult = onResult;\r\n-  recognition.current.onend = onRecognitionEnd;\r\n-  recognition.current.starting = false;\r\n-\r\n-  recognition.current.onerror = (event) => {\r\n-    console.error(\"Recognition error:\", event.error);\r\n-    if (isListening && !isSpeaking) {\r\n-      restartRecognition();\r\n-    }\r\n-  };\r\n-\r\n-  return () => {\r\n-    if (recognition.current) {\r\n-      recognition.current.abort();\r\n-    }\r\n-  };\r\n-}, []);\r\n-\r\n-  useEffect(() => {\r\n-    const checkRecognition = () => {\r\n-      if (isListening && !isSpeaking && !recognition.current.starting) {\r\n-        console.log(\"Restarting recognition because it's not active.\");\r\n-        recognition.current.starting = true;\r\n-        recognition.current.start();\r\n-        console.log(\"Restarted recognition.\");\r\n-      }\r\n-    };\r\n-\r\n-    const recognitionCheckInterval = setInterval(checkRecognition, 500); // Check every .5 second\r\n-\r\n-    return () => {\r\n-      clearInterval(recognitionCheckInterval);\r\n-    };\r\n-  }, [isListening, isSpeaking]);\r\n-\r\n-\r\n-  const historyStack = useRef([]);\r\n-\r\n-  useEffect(() => {\r\n-    return () => {\r\n-      // Clean up the listener when the component unmounts\r\n-      window.removeEventListener(\"popstate\", handlePopState);\r\n-    };\r\n-  }, []);\r\n-\r\n-  const handlePopState = () => {\r\n-    // This needs to handle both back and forward browser actions\r\n-    // Use some logic to determine whether it's a back or forward action\r\n-    // For simplicity, assume it's always back\r\n-    historyStack.current.pop();\r\n-    forwardStack.current.length = 0; // Clear forward stack on manual navigation\r\n-  };\r\n-  \r\n-\r\n-  // Add a new entry to the stack whenever navigate is called\r\n-  const customNavigate = (to, options) => {\r\n-    historyStack.current.push(to);\r\n-    navigate(to, options);\r\n-  };\r\n-\r\n-  // Listen to popstate events to update the history stack\r\n-  useEffect(() => {\r\n-    window.addEventListener(\"popstate\", handlePopState);\r\n-  }, []);\r\n-\r\n-  const forwardStack = useRef([]);\r\n-\r\n-  const goBack = () => {\r\n-    if (window.history.state && window.history.state.idx > 0) {\r\n-      window.history.back();\r\n-      speak(\"Going back\");\r\n-    } else {\r\n-      speak(\"Can't go back any further.\");\r\n-    }\r\n-  };\r\n-\r\n-  const goForward = () => {\r\n-    if (window.history.state && window.history.state.idx < window.history.length - 1) {\r\n-      window.history.forward();\r\n-      speak(\"Going forward\");\r\n-    } else {\r\n-      speak(\"No forward history available.\");\r\n-    }\r\n-  };\r\n-\r\n-  const playVideo = () => {\r\n-    if (videoRef.current) {\r\n-      videoRef.current.play();\r\n-      speak(\"Playing video.\");\r\n-    } else {\r\n-      speak(\"No video to play.\");\r\n-    }\r\n-  };\r\n-\r\n-  const pauseVideo = () => {\r\n-    if (videoRef.current) {\r\n-      videoRef.current.pause();\r\n-      speak(\"Video paused.\");\r\n-    } else {\r\n-      speak(\"No video to pause.\");\r\n-    }\r\n-  };\r\n-\r\n-  const scrollAmount = window.innerHeight * 0.82;\r\n-\r\n-  const scrollUp = () => {\r\n-    if (window.pageYOffset === 0) {\r\n-      speak(\"Already at the top of the page.\");\r\n-    } else {\r\n-      window.scrollBy(0, -scrollAmount);\r\n-      speak(\"Scrolled up.\");\r\n-    }\r\n-  };\r\n-\r\n-  const scrollDown = () => {\r\n-    const maxScrollTop =\r\n-      document.documentElement.scrollHeight - window.innerHeight;\r\n-    if (window.pageYOffset >= maxScrollTop) {\r\n-      speak(\"Already at the bottom of the page.\");\r\n-    } else {\r\n-      window.scrollBy(0, scrollAmount);\r\n-      speak(\"Scrolled down.\");\r\n-    }\r\n-  };\r\n-\r\n-  const scrollToTop = () => {\r\n-    if (window.pageYOffset === 0) {\r\n-      speak(\"Already at the top of the page.\");\r\n-    } else {\r\n-      window.scrollTo(0, 0);\r\n-      speak(\"Scrolled to the top of the page.\");\r\n-    }\r\n-  };\r\n-\r\n-  const scrollToBottom = () => {\r\n-    const maxScrollTop =\r\n-      document.documentElement.scrollHeight - window.innerHeight;\r\n-    if (window.pageYOffset >= maxScrollTop) {\r\n-      speak(\"Already at the bottom of the page.\");\r\n-    } else {\r\n-      window.scrollTo(0, document.body.scrollHeight);\r\n-      speak(\"Scrolled to the bottom of the page.\");\r\n-    }\r\n-  };\r\n-\r\n-  const speak = (message) => {\r\n-    const utterance = new SpeechSynthesisUtterance(message);\r\n-    utterance.onend = () => {\r\n-      setIsSpeaking(false);\r\n-      // Restart recognition after speaking has ended\r\n-      if (isListening) {\r\n-        restartRecognition();\r\n-      }\r\n-    };\r\n-  \r\n-    setIsSpeaking(true);\r\n-    // Stop recognition when the bot starts speaking\r\n-    if (recognition.current) {\r\n-      recognition.current.abort();\r\n-    }\r\n-    speechSynthesis.current.speak(utterance);\r\n-  };\r\n-  \r\n-\r\n-  const restartRecognition = () => {\r\n-    // Check if recognition is not already started and if the bot is set to listen\r\n-    if (recognition.current && !recognition.current.starting && isListening && !isSpeaking) {\r\n-      recognition.current.abort(); // Ensure any ongoing recognition is stopped\r\n-      recognition.current.starting = true;\r\n-      recognition.current.start();\r\n-    }\r\n-  };\r\n-  \r\n-    // Restart recognition when bot finishes speaking and isListening is true\r\n-    useEffect(() => {\r\n-      if (!isSpeaking && isListening) {\r\n-        restartRecognition();\r\n-      }\r\n-    }, [isSpeaking, isListening]);\r\n-\r\n-  const onResult = (event) => {\r\n-    const resultIndex = event.resultIndex;\r\n-    const transcript = event.results[resultIndex][0].transcript\r\n-      .trim()\r\n-      .toLowerCase();\r\n-\r\n-    if (event.results[resultIndex].isFinal) {\r\n-      console.log(`Recognized text: ${transcript}`);\r\n-      if (transcript.includes(\"brain\")) {\r\n-        console.log(\"Wake word heard, processing command...\");\r\n-        handleCommandWithFuse(transcript.replace(\"brain\", \"\"));\r\n-      }\r\n-    }\r\n-  };\r\n-\r\n-  const onRecognitionEnd = () => {\r\n-    recognition.current.starting = false;\r\n-    if (isListening && !isSpeaking) {\r\n-      restartRecognition();\r\n-    }\r\n-  };\r\n-\r\n-  useEffect(() => {\r\n-    if (isListening && !hasGreeted) {\r\n-      speak(\"Hello, I'm Brane. How can I help you today?\");\r\n-      setHasGreeted(true);\r\n-    }\r\n-  }, [isListening, hasGreeted]);\r\n-\r\n-\r\n-  // Updated startListening function\r\n-  const startListening = () => {\r\n-    setIsListening(true);\r\n-    if (!recognition.current.starting) {\r\n-      restartRecognition();\r\n-    }\r\n-  };\r\n-\r\n-  // Updated stopListening function\r\n-  const stopListening = () => {\r\n-    setIsListening(false);\r\n-    if (speechSynthesis.current.speaking) {\r\n-      speechSynthesis.current.cancel();\r\n-    }\r\n-    recognition.current.abort();\r\n-  };\r\n-\r\n-\r\n-  const handleCommandWithFuse = (command) => {\r\n-    const fuse = new Fuse(commands, { keys: [\"utterance\"], threshold: 0.4 });\r\n-    const results = fuse.search(command);\r\n-    const foundCommand = results.length ? results[0].item : null;\r\n-\r\n-    if (foundCommand) {\r\n-      console.log(\"Command found:\", foundCommand.utterance);\r\n-\r\n-      if (foundCommand.action) {\r\n-        foundCommand.action();\r\n-      } else if (foundCommand.route) {\r\n-        navigate(foundCommand.route);\r\n-      }\r\n-\r\n-      // Speak after performing the action or navigation\r\n-      speak(foundCommand.response);\r\n-    } else {\r\n-      console.log(\"No command found.\");\r\n-      speak(\"I'm not sure how to respond to that.\");\r\n-    }\r\n-  };\r\n-\r\n-  const commands = [\r\n-    {\r\n-      utterance: \"Hello who are you ?\",\r\n-\r\n-      response:\r\n-        \"Hi! This is Brane! your Voice bot from Brane Education How can I Assist you Today ?\",\r\n-    },\r\n-\r\n-    {\r\n-      utterance: \"Hello\",\r\n-\r\n-      response: \"Hi! How can I assist you today?\",\r\n-    },\r\n-\r\n-    {\r\n-      utterance: \"hello\",\r\n-\r\n-      response: \"Hi! How can I assist you today?\",\r\n-    },\r\n-\r\n-    {\r\n-      utterance: \"Hi.\",\r\n-\r\n-      response: \"Hello! How can I assist you today?\",\r\n-    },\r\n-\r\n-    {\r\n-      utterance: \"Hey there\",\r\n-\r\n-      response: \"Hi! How can I assist you today?\",\r\n-    },\r\n-\r\n-    {\r\n-      utterance: \"Good morning Brane.\",\r\n-\r\n-      response: \"Hey Hiii! Good morning  ! How can I help you?\",\r\n-    },\r\n-\r\n-    {\r\n-      utterance: \"Good afternoon Brane.\",\r\n-\r\n-      response: \"Hey Hiii! Good after noon ! How can I help you?\",\r\n-    },\r\n-\r\n-    {\r\n-      utterance: \"Good evening Brane.\",\r\n-\r\n-      response: \"Hey Hiii! Good evening ! How can I help you?\",\r\n-    },\r\n-\r\n-    {\r\n-      utterance: \"can you please take me to login page\",\r\n-\r\n-      route: \"/login\",\r\n-\r\n-      response: \"Here's the Login Page, Please Login\",\r\n-    },\r\n-\r\n-    {\r\n-      utterance: \"please take me to login page\",\r\n-\r\n-      route: \"/login\",\r\n-\r\n-      response: \"Here's the Login Page, Please Login\",\r\n-    },\r\n-\r\n-    {\r\n-      utterance: \"Go to login page\",\r\n-\r\n-      route: \"/login\",\r\n-\r\n-      response: \"Here's the Login Page, Please Login\",\r\n-    },\r\n-\r\n-    {\r\n-      utterance: \"open login page\",\r\n-\r\n-      route: \"/login\",\r\n-\r\n-      response: \"Here's the Login Page, Please Login\",\r\n-    },\r\n-\r\n-    {\r\n-      utterance: \"can you please take me to signup page\",\r\n-\r\n-      route: \"/signup\",\r\n-\r\n-      response: \"Here's the signup page. Please proceed With Registration.\",\r\n-    },\r\n-\r\n-    {\r\n-      utterance: \"take me to signup page\",\r\n-\r\n-      route: \"/signup\",\r\n-\r\n-      response: \"Here's the signup page. Please proceed With Registration.\",\r\n-    },\r\n-\r\n-    {\r\n-      utterance: \"Go to signup page\",\r\n-\r\n-      route: \"/signup\",\r\n-\r\n-      response: \"Here's the signup page. Please proceed With Registration.\",\r\n-    },\r\n-\r\n-    {\r\n-      utterance: \"open signup page\",\r\n-\r\n-      route: \"/signup\",\r\n-\r\n-      response: \"Here's the signup page. Please proceed With Registration.\",\r\n-    },\r\n-\r\n-    {\r\n-      utterance: \"Go to face id\",\r\n-\r\n-      route: \"/login/faceid\",\r\n-\r\n-      response: \"Here's Face ID Login. Please proceed.\",\r\n-    },\r\n-\r\n-    {\r\n-      utterance: \"Go to face id login\",\r\n-\r\n-      route: \"/login/faceid\",\r\n-\r\n-      response: \"Here's Face ID Login. Please proceed.\",\r\n-    },\r\n-    {\r\n-      utterance: \"Go to face login\",\r\n-\r\n-      route: \"/login/faceid\",\r\n-\r\n-      response: \"Here's Face ID Login. Please proceed.\",\r\n-    },\r\n-\r\n-    {\r\n-      utterance: \"login with face id\",\r\n-\r\n-      route: \"/login/faceid\",\r\n-\r\n-      response: \"Here's Face ID Login. Please proceed.\",\r\n-    },\r\n-\r\n-    {\r\n-      utterance: \"login with face\",\r\n-\r\n-      route: \"/login/faceid\",\r\n-\r\n-      response: \"Here's Face ID Login. Please proceed.\",\r\n-    },\r\n-\r\n-    {\r\n-      utterance: \"i want to login with face\",\r\n-\r\n-      route: \"/login/faceid\",\r\n-\r\n-      response: \"Here's Face ID Login. Please proceed.\",\r\n-    },\r\n-\r\n-    {\r\n-      utterance: \"login with voice\",\r\n-\r\n-      route: \"/login/voiceid\",\r\n-\r\n-      response: \"Here's Voice Login. Please proceed.\",\r\n-    },\r\n-\r\n-    {\r\n-      utterance: \"i want to login with voice\",\r\n-\r\n-      route: \"/login/voiceid\",\r\n-\r\n-      response: \"Here's Voice Login. Please proceed.\",\r\n-    },\r\n-\r\n-    {\r\n-      utterance: \"go to voice login\",\r\n-\r\n-      route: \"/login/voiceid\",\r\n-\r\n-      response: \"Here's Voice Login. Please proceed.\",\r\n-    },\r\n-\r\n-    {\r\n-      utterance: \"login with voice\",\r\n-\r\n-      route: \"/login/voiceid\",\r\n-\r\n-      response: \"Here's Voice Login. Please proceed.\",\r\n-    },\r\n-\r\n-    {\r\n-      utterance: \"login with mobile\",\r\n-\r\n-      route: \"/login/mobile\",\r\n-\r\n-      response: \"Here's Mobile Login. Please proceed.\",\r\n-    },\r\n-\r\n-    {\r\n-      utterance: \"i want to login with mobile\",\r\n-\r\n-      route: \"/login/mobile\",\r\n-\r\n-      response: \"Here's Mobile Login. Please proceed.\",\r\n-    },\r\n-    {\r\n-      utterance: \"go to mobile login\",\r\n-\r\n-      route: \"/login/mobile\",\r\n-\r\n-      response: \"Here's Mobile Login. Please proceed.\",\r\n-    },\r\n-    {\r\n-      utterance: \"go to about page\",\r\n-\r\n-      route: \"/aboutus\",\r\n-\r\n-      response: \"This is About us.\",\r\n-    },\r\n-    {\r\n-      utterance: \"go to about us page\",\r\n-\r\n-      route: \"/aboutus\",\r\n-\r\n-      response: \"This is About us.\",\r\n-    },\r\n-    {\r\n-      utterance: \"open about us page\",\r\n-\r\n-      route: \"/aboutus\",\r\n-\r\n-      response: \"This is About us.\",\r\n-    },\r\n-    {\r\n-      utterance: \"open about page\",\r\n-\r\n-      route: \"/aboutus\",\r\n-\r\n-      response: \"This is About us.\",\r\n-    },\r\n-    {\r\n-      utterance: \"take me to about page\",\r\n-\r\n-      route: \"/aboutus\",\r\n-\r\n-      response: \"This is About us.\",\r\n-    },\r\n-    {\r\n-      utterance: \"take me to about us page\",\r\n-\r\n-      route: \"/aboutus\",\r\n-\r\n-      response: \"This is About us.\",\r\n-    },\r\n-\r\n-    {\r\n-      utterance: \"go to contact page\",\r\n-\r\n-      route: \"/contactus\",\r\n-\r\n-      response: \"You can contact us from here\",\r\n-    },\r\n-    {\r\n-      utterance: \"go to contact us page\",\r\n-\r\n-      route: \"/contactus\",\r\n-\r\n-      response: \"You can contact us from here\",\r\n-    },\r\n-    {\r\n-      utterance: \"open contact us page\",\r\n-\r\n-      route: \"/contactus\",\r\n-\r\n-      response: \"You can contact us from here\",\r\n-    },\r\n-    {\r\n-      utterance: \"open contact page\",\r\n-\r\n-      route: \"/contactus\",\r\n-\r\n-      response: \"You can contact us from here\",\r\n-    },\r\n-    {\r\n-      utterance: \"take me to about page\",\r\n-\r\n-      route: \"/aboutus\",\r\n-\r\n-      response: \"You can contact us from here\",\r\n-    },\r\n-    {\r\n-      utterance: \"take me to contact us page\",\r\n-\r\n-      route: \"/contactus\",\r\n-\r\n-      response: \"You can contact us from here\",\r\n-    },\r\n-\r\n-\r\n-    {\r\n-      utterance: \"what are platform features\",\r\n-\r\n-      response:\r\n-        \"Dashboard, Dynamic time table, Learning Networks, Little Masters, Video Based Dictionary, General Search.\",\r\n-    },\r\n-\r\n-    {\r\n-      utterance: \"Features of platform\",\r\n-\r\n-      response:\r\n-        \"Dashboard, Dynamic time table, Learning Networks, Little Masters, Video Based Dictionary, General Search.\",\r\n-    },\r\n-\r\n-    {\r\n-      utterance: \"What does the platform offer\",\r\n-\r\n-      response:\r\n-        \"Dashboard, Dynamic time table, Learning Networks, Little Masters, Video Based Dictionary, General Search.\",\r\n-    },\r\n-\r\n-    {\r\n-      utterance: \"Say me the features of platform\",\r\n-\r\n-      response:\r\n-        \"Dashboard, Dynamic time table, Learning Networks, Little Masters, Video Based Dictionary, General Search.\",\r\n-    },\r\n-\r\n-    {\r\n-      utterance: \"Say me the services of platform\",\r\n-\r\n-      response:\r\n-        \"Dashboard, Dynamic time table, Learning Networks, Little Masters, Video Based Dictionary, General Search.\",\r\n-    },\r\n-\r\n-    {\r\n-      utterance: \"tell me the services offered by the platform\",\r\n-\r\n-      response:\r\n-        \"Dashboard, Dynamic time table, Learning Networks, Little Masters, Video Based Dictionary, General Search.\",\r\n-    },\r\n-\r\n-    {\r\n-      utterance: \"explain platform services\",\r\n-\r\n-      response:\r\n-        \"Dashboard, Dynamic time table, Learning Networks, Little Masters, Video Based Dictionary, General Search.\",\r\n-    },\r\n-\r\n-    {\r\n-      utterance: \"Give me the Parent voice of Julia Harris\",\r\n-\r\n-      response:\r\n-        \"Brane education has helped my son a lot in his studies. He improved a lot in his studies and is now able to score good marks in his exams\",\r\n-    },\r\n-\r\n-    {\r\n-      utterance: \"Leaders Voice\",\r\n-\r\n-      response:\r\n-        \"This Voice-interactive AI Platform is a game Changer. It revolutionizes education.\",\r\n-    },\r\n-\r\n-    {\r\n-      utterance: \"Curriculum Supported by Brane Education\",\r\n-\r\n-      response:\r\n-        \"we support multiple Boards let me say few Telangana State Board Andhra Pradesh Board Maharashtra Board Assam Board\",\r\n-    },\r\n-\r\n-    {\r\n-      utterance: \"Boards supported by the platform\",\r\n-\r\n-      response:\r\n-        \"we support multiple Boards let me say few Telangana State Board Andhra Pradesh Board Maharashtra Board Assam Board\",\r\n-    },\r\n-\r\n-    {\r\n-      utterance: \"Curriculum\",\r\n-\r\n-      response:\r\n-        \"we support multiple Boards let me say few Telangana State Board Andhra Pradesh Board Maharashtra Board Assam Board\",\r\n-    },\r\n-\r\n-    // {\r\n-    //   utterance: \"Go to landing page\",\r\n-\r\n-    //   response: \"Okay, I am taking you to the landing page.\",\r\n-\r\n-    //   route: \"/childpage\",\r\n-    // },\r\n-\r\n-    // {\r\n-    //   utterance: \"take me to landing page\",\r\n-\r\n-    //   response: \"Okay, I am taking you to the landing page.\",\r\n-\r\n-    //   route: \"/childpage\",\r\n-    // },\r\n-\r\n-    // {\r\n-    //   utterance: \"move to landing page\",\r\n-\r\n-    //   response: \"Okay, I am taking you to the landing page.\",\r\n-\r\n-    //   route: \"/childpage\",\r\n-    // },\r\n-\r\n-    // {\r\n-    //   utterance: \"roll back to landing page\",\r\n-\r\n-    //   response: \"Okay, I am taking you to the landing page.\",\r\n-\r\n-    //   route: \"/childpage\",\r\n-    // },\r\n-\r\n-    // {\r\n-    //   utterance: \"move to landing page\",\r\n-\r\n-    //   response: \"Okay, I am taking you to the landing page.\",\r\n-\r\n-    //   route: \"/childpage\",\r\n-    // },\r\n-\r\n-    {\r\n-      utterance: \"what is today's quote\",\r\n-\r\n-      response:\r\n-        \"Determination is the power that sees us through all our frustration and obstacles. It helps in building our willpower which is the very basis of success.\",\r\n-\r\n-      route: \"/childpage\",\r\n-    },\r\n-\r\n-    {\r\n-      utterance: \"Today's Inspirational quote\",\r\n-\r\n-      response:\r\n-        \"Determination is the power that sees us through all our frustration and obstacles. It helps in building our willpower which is the very basis of success.\",\r\n-\r\n-      route: \"/childpage\",\r\n-    },\r\n-\r\n-    {\r\n-      utterance: \"say me today's quote\",\r\n-\r\n-      response:\r\n-        \"Determination is the power that sees us through all our frustration and obstacles. It helps in building our willpower which is the very basis of success.\",\r\n-\r\n-      route: \"/childpage\",\r\n-    },\r\n-    {\r\n-      utterance: \"go back\",\r\n-      response: \"\",\r\n-      action: goBack, // Note the use of an action property\r\n-    },\r\n-    {\r\n-      utterance: \"go forward\",\r\n-      response: \"\",\r\n-      action: goForward,\r\n-    },\r\n-    {\r\n-      utterance: \"play video\",\r\n-      // response: \"Playing video.\",\r\n-      action: playVideo,\r\n-    },\r\n-    {\r\n-      utterance: \"pause video\",\r\n-      // response: \"Pausing video.\",\r\n-      action: pauseVideo,\r\n-    },\r\n-    {\r\n-      utterance: \"start video\",\r\n-      // response: \"Playing video.\",\r\n-      action: playVideo,\r\n-    },\r\n-    {\r\n-      utterance: \"stop video\",\r\n-      // response: \"Playing video.\",\r\n-      action: pauseVideo,\r\n-    },\r\n-    {\r\n-      utterance: \"scroll up\",\r\n-      // response: \"Scrolling up.\",\r\n-      action: scrollUp,\r\n-    },\r\n-    {\r\n-      utterance: \"scroll down\",\r\n-      // response: \"Scrolling down.\",\r\n-      action: scrollDown,\r\n-    },\r\n-    {\r\n-      utterance: \"go up\",\r\n-\r\n-      // response: \"Scrolling up.\",\r\n-      action: scrollUp,\r\n-    },\r\n-    {\r\n-      utterance: \"go down\",\r\n-      // response: \"Scrolling down.\",\r\n-      action: scrollDown,\r\n-    },\r\n-    {\r\n-      utterance: \"scroll to top\",\r\n-      action: scrollToTop,\r\n-    },\r\n-    {\r\n-      utterance: \"scroll to bottom\",\r\n-      action: scrollToBottom,\r\n-    },\r\n-    {\r\n-      utterance: \"brane stop\",\r\n-      action: stopListening,\r\n-    },\r\n-    {\r\n-      utterance: \"brane turn off\",\r\n-      action: stopListening,\r\n-    },\r\n-    {\r\n-      utterance: \"brane stop the bot\",\r\n-      action: stopListening,\r\n-    },\r\n-  ];\r\n-\r\n-  return (\r\n-    <div className=\"speech-bot-container\">\r\n-      <div\r\n-        className={`button-container ${\r\n-          isListening ? \"voicebotframeactive\" : \"voicebotframe\"\r\n-        }`}\r\n-      >\r\n-        {/* <button onClick={isListening ? stopListening : startListening}>\r\n-          {isListening ? \"Stop\" : \"Start\"} Animation\r\n-        </button> */}\r\n-        <img \r\n-        className=\"botimage\"\r\n-          src={chatbotimage} alt=\"\" \r\n-          onClick={isListening ? stopListening : startListening}  \r\n-        />\r\n-\r\n-      </div>\r\n-    </div>\r\n-  );\r\n-};\r\n-\r\n-export default VoiceBot;\r\n-\r\n-\r\n-{/* // import React, { useState, useEffect, useRef } from \"react\";\r\n-// import { useNavigate, useLocation } from \"react-router-dom\";\r\n-// import Fuse from \"fuse.js\";\r\n-// import \"./VoiceBot.css\";\r\n-\r\n-// const VoiceBot = ({ videoRef }) => {\r\n-//   const [isListening, setIsListening] = useState(false);\r\n-//   const [isSpeaking, setIsSpeaking] = useState(false);\r\n-//   const recognition = useRef(null);\r\n-//   const speechSynthesis = useRef(window.speechSynthesis);\r\n-//   const [hasGreeted, setHasGreeted] = useState(false);\r\n-//   const navigate = useNavigate();\r\n-\r\n-//   useEffect(() => {\r\n-//     recognition.current = new window.webkitSpeechRecognition();\r\n-//     recognition.current.continuous = true;\r\n-//     recognition.current.interimResults = false;\r\n-//     recognition.current.onresult = onResult;\r\n-//     recognition.current.onend = onRecognitionEnd;\r\n-//     recognition.current.starting = false;\r\n-\r\n-//     // Simplified error handling, removed specific handling for 'no-speech'\r\n-//     recognition.current.onerror = (event) => {\r\n-//       console.error(\"Recognition error:\", event.error);\r\n-//       // Check if listening is true and the bot isn't speaking\r\n-//       if (isListening && !isSpeaking) {\r\n-//         // Restart recognition\r\n-//         restartRecognition();\r\n-//       }\r\n-//     };\r\n-\r\n-//     return () => {\r\n-//       if (recognition.current) {\r\n-//         recognition.current.abort();\r\n-//       }\r\n-//     };\r\n-//   }, []);\r\n-\r\n-//   useEffect(() => {\r\n-//     const checkRecognition = () => {\r\n-//       if (isListening && !isSpeaking && !recognition.current.starting) {\r\n-//         console.log(\"Restarting recognition because it's not active.\");\r\n-//         recognition.current.starting = true;\r\n-//         recognition.current.start();\r\n-//         console.log(\"Restarted recognition.\");\r\n-//       }\r\n-//     };\r\n-\r\n-//     const recognitionCheckInterval = setInterval(checkRecognition, 100); // Check every 1 second\r\n-\r\n-//     return () => {\r\n-//       clearInterval(recognitionCheckInterval);\r\n-//     };\r\n-//   }, [isListening, isSpeaking]);\r\n-\r\n-//   const restartRecognition = () => {\r\n-//     if (recognition.current.starting) {\r\n-//       console.log(\"Recognition is already starting or running.\");\r\n-//       return;\r\n-//     }\r\n-\r\n-//     recognition.current.abort(); // Stop any existing recognition process\r\n-//     recognition.current.starting = true;\r\n-//     recognition.current.start();\r\n-//     console.log(\"Recognition restarted.\");\r\n-//   };\r\n-\r\n-//   const historyStack = useRef([]);\r\n-\r\n-//   useEffect(() => {\r\n-//     return () => {\r\n-//       // Clean up the listener when the component unmounts\r\n-//       window.removeEventListener(\"popstate\", handlePopState);\r\n-//     };\r\n-//   }, []);\r\n-\r\n-//   const handlePopState = () => {\r\n-//     // This needs to handle both back and forward browser actions\r\n-//     // Use some logic to determine whether it's a back or forward action\r\n-//     // For simplicity, assume it's always back\r\n-//     historyStack.current.pop();\r\n-//     forwardStack.current.length = 0; // Clear forward stack on manual navigation\r\n-//   };\r\n-  \r\n-\r\n-//   // Add a new entry to the stack whenever navigate is called\r\n-//   const customNavigate = (to, options) => {\r\n-//     historyStack.current.push(to);\r\n-//     navigate(to, options);\r\n-//   };\r\n-\r\n-//   // Listen to popstate events to update the history stack\r\n-//   useEffect(() => {\r\n-//     window.addEventListener(\"popstate\", handlePopState);\r\n-//   }, []);\r\n-\r\n-//   const forwardStack = useRef([]);\r\n-\r\n-//   const goBack = () => {\r\n-//     if (window.history.state && window.history.state.idx > 0) {\r\n-//       window.history.back();\r\n-//       speak(\"Going back\");\r\n-//     } else {\r\n-//       speak(\"Can't go back any further.\");\r\n-//     }\r\n-//   };\r\n-\r\n-//   const goForward = () => {\r\n-//     if (window.history.state && window.history.state.idx < window.history.length - 1) {\r\n-//       window.history.forward();\r\n-//       speak(\"Going forward\");\r\n-//     } else {\r\n-//       speak(\"No forward history available.\");\r\n-//     }\r\n-//   };\r\n-\r\n-//   const playVideo = () => {\r\n-//     if (videoRef.current) {\r\n-//       videoRef.current.play();\r\n-//       speak(\"Playing video.\");\r\n-//     } else {\r\n-//       speak(\"No video to play.\");\r\n-//     }\r\n-//   };\r\n-\r\n-//   const pauseVideo = () => {\r\n-//     if (videoRef.current) {\r\n-//       videoRef.current.pause();\r\n-//       speak(\"Video paused.\");\r\n-//     } else {\r\n-//       speak(\"No video to pause.\");\r\n-//     }\r\n-//   };\r\n-\r\n-//   const scrollAmount = window.innerHeight * 0.82;\r\n-\r\n-//   const scrollUp = () => {\r\n-//     if (window.pageYOffset === 0) {\r\n-//       speak(\"Already at the top of the page.\");\r\n-//     } else {\r\n-//       window.scrollBy(0, -scrollAmount);\r\n-//       speak(\"Scrolled up.\");\r\n-//     }\r\n-//   };\r\n-\r\n-//   const scrollDown = () => {\r\n-//     const maxScrollTop =\r\n-//       document.documentElement.scrollHeight - window.innerHeight;\r\n-//     if (window.pageYOffset >= maxScrollTop) {\r\n-//       speak(\"Already at the bottom of the page.\");\r\n-//     } else {\r\n-//       window.scrollBy(0, scrollAmount);\r\n-//       speak(\"Scrolled down.\");\r\n-//     }\r\n-//   };\r\n-\r\n-//   const scrollToTop = () => {\r\n-//     if (window.pageYOffset === 0) {\r\n-//       speak(\"Already at the top of the page.\");\r\n-//     } else {\r\n-//       window.scrollTo(0, 0);\r\n-//       speak(\"Scrolled to the top of the page.\");\r\n-//     }\r\n-//   };\r\n-\r\n-//   const scrollToBottom = () => {\r\n-//     const maxScrollTop =\r\n-//       document.documentElement.scrollHeight - window.innerHeight;\r\n-//     if (window.pageYOffset >= maxScrollTop) {\r\n-//       speak(\"Already at the bottom of the page.\");\r\n-//     } else {\r\n-//       window.scrollTo(0, document.body.scrollHeight);\r\n-//       speak(\"Scrolled to the bottom of the page.\");\r\n-//     }\r\n-//   };\r\n-\r\n-//   const speak = (message) => {\r\n-//     console.log(\"speak function called with message:\", message);\r\n-//     const utterance = new SpeechSynthesisUtterance(message);\r\n-//     utterance.onend = () => {\r\n-//       setIsSpeaking(false);\r\n-//       console.log(\"Speaking ended.\");\r\n-//       if (isListening && !recognition.current.starting) {\r\n-//         console.log(\"Restarting recognition after speaking.\");\r\n-//         recognition.current.starting = true;\r\n-//         recognition.current.start();\r\n-//         console.log(\"Restarted recognition after speaking.\");\r\n-//       }\r\n-//     };\r\n-\r\n-//     setIsSpeaking(true);\r\n-//     console.log(\"Speaking started.\");\r\n-//     recognition.current.stop(); // Ensure to stop recognition before speaking\r\n-//     speechSynthesis.current.speak(utterance);\r\n-//   };\r\n-\r\n-//   const onResult = (event) => {\r\n-//     const resultIndex = event.resultIndex;\r\n-//     const transcript = event.results[resultIndex][0].transcript\r\n-//       .trim()\r\n-//       .toLowerCase();\r\n-\r\n-//     if (event.results[resultIndex].isFinal) {\r\n-//       console.log(`Recognized text: ${transcript}`);\r\n-//       if (transcript.includes(\"brain\")) {\r\n-//         console.log(\"Wake word heard, processing command...\");\r\n-//         handleCommandWithFuse(transcript.replace(\"brain\", \"\"));\r\n-//       }\r\n-//     }\r\n-//   };\r\n-\r\n-//   const onRecognitionEnd = () => {\r\n-//     recognition.current.starting = false;\r\n-//     if (isListening && !isSpeaking) {\r\n-//       restartRecognition();\r\n-//     }\r\n-//   };\r\n-\r\n-//   useEffect(() => {\r\n-//     if (isListening) {\r\n-//       if (!hasGreeted) {\r\n-//         speak(\"Hello, I'm Brane. How can I help you today?\");\r\n-//         setHasGreeted(true);\r\n-//       } else {\r\n-//         speak(\"Listening.\");\r\n-//       }\r\n-//     }\r\n-//   }, [isListening, hasGreeted]);\r\n-\r\n-\r\n-//   const startListening = () => {\r\n-//     if (!recognition.current.starting) {\r\n-//       setIsListening(true);\r\n-//       restartRecognition();\r\n-//     }\r\n-//   };\r\n-\r\n-//   const stopListening = () => {\r\n-//     setIsListening(false);\r\n-//     recognition.current.abort();\r\n-//     if (speechSynthesis.current.speaking) {\r\n-//       speechSynthesis.current.cancel();\r\n-//     }\r\n-//   };\r\n-\r\n-//   const handleCommandWithFuse = (command) => {\r\n-//     const fuse = new Fuse(commands, { keys: [\"utterance\"], threshold: 0.4 });\r\n-//     const results = fuse.search(command);\r\n-//     const foundCommand = results.length ? results[0].item : null;\r\n-\r\n-//     if (foundCommand) {\r\n-//       console.log(\"Command found:\", foundCommand.utterance);\r\n-\r\n-//       if (foundCommand.action) {\r\n-//         foundCommand.action();\r\n-//       } else if (foundCommand.route) {\r\n-//         navigate(foundCommand.route);\r\n-//       }\r\n-\r\n-//       // Speak after performing the action or navigation\r\n-//       speak(foundCommand.response);\r\n-//     } else {\r\n-//       console.log(\"No command found.\");\r\n-//       speak(\"I'm not sure how to respond to that.\");\r\n-//     }\r\n-//   };\r\n-\r\n-//   const commands = [\r\n-//     {\r\n-//       utterance: \"Hello who are you ?\",\r\n-\r\n-//       response:\r\n-//         \"Hi! This is Brane! your Voice bot from Brane Education How can I Assist you Today ?\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"Hello\",\r\n-\r\n-//       response: \"Hi! How can I assist you today?\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"hello\",\r\n-\r\n-//       response: \"Hi! How can I assist you today?\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"Hi.\",\r\n-\r\n-//       response: \"Hello! How can I assist you today?\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"Hey there\",\r\n-\r\n-//       response: \"Hi! How can I assist you today?\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"Good morning Brane.\",\r\n-\r\n-//       response: \"Hey Hiii! Good morning  ! How can I help you?\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"Good afternoon Brane.\",\r\n-\r\n-//       response: \"Hey Hiii! Good after noon ! How can I help you?\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"Good evening Brane.\",\r\n-\r\n-//       response: \"Hey Hiii! Good evening ! How can I help you?\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"can you please take me to login page\",\r\n-\r\n-//       route: \"/login\",\r\n-\r\n-//       response: \"Here's the Login Page, Please Login\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"please take me to login page\",\r\n-\r\n-//       route: \"/login\",\r\n-\r\n-//       response: \"Here's the Login Page, Please Login\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"Go to login page\",\r\n-\r\n-//       route: \"/login\",\r\n-\r\n-//       response: \"Here's the Login Page, Please Login\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"open login page\",\r\n-\r\n-//       route: \"/login\",\r\n-\r\n-//       response: \"Here's the Login Page, Please Login\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"can you please take me to signup page\",\r\n-\r\n-//       route: \"/signup\",\r\n-\r\n-//       response: \"Here's the signup page. Please proceed With Registration.\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"take me to signup page\",\r\n-\r\n-//       route: \"/signup\",\r\n-\r\n-//       response: \"Here's the signup page. Please proceed With Registration.\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"Go to signup page\",\r\n-\r\n-//       route: \"/signup\",\r\n-\r\n-//       response: \"Here's the signup page. Please proceed With Registration.\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"open signup page\",\r\n-\r\n-//       route: \"/signup\",\r\n-\r\n-//       response: \"Here's the signup page. Please proceed With Registration.\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"Go to face id\",\r\n-\r\n-//       route: \"/login/faceid\",\r\n-\r\n-//       response: \"Here's Face ID Login. Please proceed.\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"Go to face id login\",\r\n-\r\n-//       route: \"/login/faceid\",\r\n-\r\n-//       response: \"Here's Face ID Login. Please proceed.\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"login with face id\",\r\n-\r\n-//       route: \"/login/faceid\",\r\n-\r\n-//       response: \"Here's Face ID Login. Please proceed.\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"login with face\",\r\n-\r\n-//       route: \"/login/faceid\",\r\n-\r\n-//       response: \"Here's Face ID Login. Please proceed.\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"i want to login with face\",\r\n-\r\n-//       route: \"/login/faceid\",\r\n-\r\n-//       response: \"Here's Face ID Login. Please proceed.\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"login with voice\",\r\n-\r\n-//       route: \"/login/voiceid\",\r\n-\r\n-//       response: \"Here's Voice Login. Please proceed.\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"i want to login with voice\",\r\n-\r\n-//       route: \"/login/voiceid\",\r\n-\r\n-//       response: \"Here's Voice Login. Please proceed.\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"go to voice login\",\r\n-\r\n-//       route: \"/login/voiceid\",\r\n-\r\n-//       response: \"Here's Voice Login. Please proceed.\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"login with voice\",\r\n-\r\n-//       route: \"/login/voiceid\",\r\n-\r\n-//       response: \"Here's Voice Login. Please proceed.\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"login with mobile\",\r\n-\r\n-//       route: \"/login/mobile\",\r\n-\r\n-//       response: \"Here's Mobile Login. Please proceed.\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"i want to login with mobile\",\r\n-\r\n-//       route: \"/login/mobile\",\r\n-\r\n-//       response: \"Here's Mobile Login. Please proceed.\",\r\n-//     },\r\n-//     {\r\n-//       utterance: \"go to mobile login\",\r\n-\r\n-//       route: \"/login/mobile\",\r\n-\r\n-//       response: \"Here's Mobile Login. Please proceed.\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"what are platform features\",\r\n-\r\n-//       response:\r\n-//         \"Dashboard, Dynamic time table, Learning Networks, Little Masters, Video Based Dictionary, General Search.\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"Features of platform\",\r\n-\r\n-//       response:\r\n-//         \"Dashboard, Dynamic time table, Learning Networks, Little Masters, Video Based Dictionary, General Search.\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"What does the platform offer\",\r\n-\r\n-//       response:\r\n-//         \"Dashboard, Dynamic time table, Learning Networks, Little Masters, Video Based Dictionary, General Search.\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"Say me the features of platform\",\r\n-\r\n-//       response:\r\n-//         \"Dashboard, Dynamic time table, Learning Networks, Little Masters, Video Based Dictionary, General Search.\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"Say me the services of platform\",\r\n-\r\n-//       response:\r\n-//         \"Dashboard, Dynamic time table, Learning Networks, Little Masters, Video Based Dictionary, General Search.\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"tell me the services offered by the platform\",\r\n-\r\n-//       response:\r\n-//         \"Dashboard, Dynamic time table, Learning Networks, Little Masters, Video Based Dictionary, General Search.\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"explain platform services\",\r\n-\r\n-//       response:\r\n-//         \"Dashboard, Dynamic time table, Learning Networks, Little Masters, Video Based Dictionary, General Search.\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"Give me the Parent voice of Julia Harris\",\r\n-\r\n-//       response:\r\n-//         \"Brane education has helped my son a lot in his studies. He improved a lot in his studies and is now able to score good marks in his exams\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"Play today's motivational video\",\r\n-\r\n-//       response: \"I am playing the video\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"Play today's video\",\r\n-\r\n-//       response: \"I am playing Motivational video\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"Leaders Voice\",\r\n-\r\n-//       response:\r\n-//         \"This Voice-interactive AI Platform is a game Changer. It revolutionizes education.\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"Curriculum Supported by Brane Education\",\r\n-\r\n-//       response:\r\n-//         \"we support multiple Boards let me say few Telangana State Board Andhra Pradesh Board Maharashtra Board Assam Board\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"Boards supported by the platform\",\r\n-\r\n-//       response:\r\n-//         \"we support multiple Boards let me say few Telangana State Board Andhra Pradesh Board Maharashtra Board Assam Board\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"Curriculum\",\r\n-\r\n-//       response:\r\n-//         \"we support multiple Boards let me say few Telangana State Board Andhra Pradesh Board Maharashtra Board Assam Board\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"Go to landing page\",\r\n-\r\n-//       response: \"Okay, I am taking you to the landing page.\",\r\n-\r\n-//       route: \"/childpage\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"take me to landing page\",\r\n-\r\n-//       response: \"Okay, I am taking you to the landing page.\",\r\n-\r\n-//       route: \"/childpage\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"move to landing page\",\r\n-\r\n-//       response: \"Okay, I am taking you to the landing page.\",\r\n-\r\n-//       route: \"/childpage\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"roll back to landing page\",\r\n-\r\n-//       response: \"Okay, I am taking you to the landing page.\",\r\n-\r\n-//       route: \"/childpage\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"move to landing page\",\r\n-\r\n-//       response: \"Okay, I am taking you to the landing page.\",\r\n-\r\n-//       route: \"/childpage\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"what is today's quote\",\r\n-\r\n-//       response:\r\n-//         \"Determination is the power that sees us through all our frustration and obstacles. It helps in building our willpower which is the very basis of success.\",\r\n-\r\n-//       route: \"/childpage\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"Today's Inspirational quote\",\r\n-\r\n-//       response:\r\n-//         \"Determination is the power that sees us through all our frustration and obstacles. It helps in building our willpower which is the very basis of success.\",\r\n-\r\n-//       route: \"/childpage\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"say me today's quote\",\r\n-\r\n-//       response:\r\n-//         \"Determination is the power that sees us through all our frustration and obstacles. It helps in building our willpower which is the very basis of success.\",\r\n-\r\n-//       route: \"/childpage\",\r\n-//     },\r\n-//     {\r\n-//       utterance: \"go back\",\r\n-//       response: \"\",\r\n-//       action: goBack, // Note the use of an action property\r\n-//     },\r\n-//     {\r\n-//       utterance: \"go forward\",\r\n-//       response: \"\",\r\n-//       action: goForward,\r\n-//     },\r\n-//     {\r\n-//       utterance: \"play video\",\r\n-//       // response: \"Playing video.\",\r\n-//       action: playVideo,\r\n-//     },\r\n-//     {\r\n-//       utterance: \"pause video\",\r\n-//       // response: \"Pausing video.\",\r\n-//       action: pauseVideo,\r\n-//     },\r\n-//     {\r\n-//       utterance: \"start video\",\r\n-//       // response: \"Playing video.\",\r\n-//       action: playVideo,\r\n-//     },\r\n-//     {\r\n-//       utterance: \"stop video\",\r\n-//       // response: \"Playing video.\",\r\n-//       action: pauseVideo,\r\n-//     },\r\n-//     {\r\n-//       utterance: \"scroll up\",\r\n-//       // response: \"Scrolling up.\",\r\n-//       action: scrollUp,\r\n-//     },\r\n-//     {\r\n-//       utterance: \"scroll down\",\r\n-//       // response: \"Scrolling down.\",\r\n-//       action: scrollDown,\r\n-//     },\r\n-//     {\r\n-//       utterance: \"go up\",\r\n-\r\n-//       // response: \"Scrolling up.\",\r\n-//       action: scrollUp,\r\n-//     },\r\n-//     {\r\n-//       utterance: \"go down\",\r\n-//       // response: \"Scrolling down.\",\r\n-//       action: scrollDown,\r\n-//     },\r\n-//     {\r\n-//       utterance: \"scroll to top\",\r\n-//       action: scrollToTop,\r\n-//     },\r\n-//     {\r\n-//       utterance: \"scroll to bottom\",\r\n-//       action: scrollToBottom,\r\n-//     },\r\n-//     {\r\n-//       utterance: \"brane stop\",\r\n-//       action: stopListening,\r\n-//     },\r\n-//     {\r\n-//       utterance: \"brane turn off\",\r\n-//       action: stopListening,\r\n-//     },\r\n-//     {\r\n-//       utterance: \"brane stop the bot\",\r\n-//       action: stopListening,\r\n-//     },\r\n-//   ];\r\n-\r\n-//   return (\r\n-//     <div className=\"speech-bot-container\">\r\n-//       <div\r\n-//         className={`button-container ${\r\n-//           isListening ? \"voicebotframeactive\" : \"voicebotframe\"\r\n-//         }`}\r\n-//       >\r\n-//         <button onClick={isListening ? stopListening : startListening}>\r\n-//           {isListening ? \"Stop\" : \"Start\"} Animation\r\n-//         </button>\r\n-//         {/* <button onClick={toggleBotActive}>\r\n-//         {isBotActive ? 'Deactivate Bot' : 'Activate Bot'}\r\n-//       </button> \r\n-//       </div>\r\n-//     </div>\r\n-//   );\r\n-// };\r\n-\r\n-// export default VoiceBot; */}\r\n-\r\n-\r\n-\r\n-//iska v1\r\n-\r\n-// import React, { useState, useEffect, useRef } from \"react\";\r\n-// import { useNavigate, useLocation } from \"react-router-dom\";\r\n-// import Fuse from \"fuse.js\";\r\n-// import \"./VoiceBot.css\";\r\n-\r\n-// const VoiceBot = ({ videoRef}) => {\r\n-//   const [isListening, setIsListening] = useState(false);\r\n-//   const [isSpeaking, setIsSpeaking] = useState(false);\r\n-//   const recognition = useRef(null);\r\n-//   const speechSynthesis = useRef(window.speechSynthesis);\r\n-//   const [hasGreeted, setHasGreeted] = useState(false);\r\n-//   const navigate = useNavigate();\r\n-\r\n-\r\n-//  // Initialize speech recognition\r\n-//  useEffect(() => {\r\n-//   recognition.current = new window.webkitSpeechRecognition();\r\n-//   recognition.current.continuous = true;\r\n-//   recognition.current.interimResults = false;\r\n-//   recognition.current.onresult = onResult;\r\n-//   recognition.current.onend = onRecognitionEnd;\r\n-//   recognition.current.starting = false;\r\n-\r\n-//   recognition.current.onerror = (event) => {\r\n-//     console.error(\"Recognition error:\", event.error);\r\n-//     if (isListening && !isSpeaking) {\r\n-//       restartRecognition();\r\n-//     }\r\n-//   };\r\n-\r\n-//   return () => {\r\n-//     if (recognition.current) {\r\n-//       recognition.current.abort();\r\n-//     }\r\n-//   };\r\n-// }, []);\r\n-\r\n-//   // useEffect(() => {\r\n-//   //   const checkRecognition = () => {\r\n-//   //     if (isListening && !isSpeaking && !recognition.current.starting) {\r\n-//   //       console.log(\"Restarting recognition because it's not active.\");\r\n-//   //       recognition.current.starting = true;\r\n-//   //       recognition.current.start();\r\n-//   //       console.log(\"Restarted recognition.\");\r\n-//   //     }\r\n-//   //   };\r\n-\r\n-//   //   const recognitionCheckInterval = setInterval(checkRecognition, 100); // Check every .5 second\r\n-\r\n-//   //   return () => {\r\n-//   //     clearInterval(recognitionCheckInterval);\r\n-//   //   };\r\n-//   // }, [isListening, isSpeaking]);\r\n-\r\n-\r\n-//   const historyStack = useRef([]);\r\n-\r\n-//   useEffect(() => {\r\n-//     return () => {\r\n-//       // Clean up the listener when the component unmounts\r\n-//       window.removeEventListener(\"popstate\", handlePopState);\r\n-//     };\r\n-//   }, []);\r\n-\r\n-//   const handlePopState = () => {\r\n-//     // This needs to handle both back and forward browser actions\r\n-//     // Use some logic to determine whether it's a back or forward action\r\n-//     // For simplicity, assume it's always back\r\n-//     historyStack.current.pop();\r\n-//     forwardStack.current.length = 0; // Clear forward stack on manual navigation\r\n-//   };\r\n-  \r\n-\r\n-//   // Add a new entry to the stack whenever navigate is called\r\n-//   const customNavigate = (to, options) => {\r\n-//     historyStack.current.push(to);\r\n-//     navigate(to, options);\r\n-//   };\r\n-\r\n-//   // Listen to popstate events to update the history stack\r\n-//   useEffect(() => {\r\n-//     window.addEventListener(\"popstate\", handlePopState);\r\n-//   }, []);\r\n-\r\n-//   const forwardStack = useRef([]);\r\n-\r\n-//   const goBack = () => {\r\n-//     if (window.history.state && window.history.state.idx > 0) {\r\n-//       window.history.back();\r\n-//       speak(\"Going back\");\r\n-//     } else {\r\n-//       speak(\"Can't go back any further.\");\r\n-//     }\r\n-//   };\r\n-\r\n-//   const goForward = () => {\r\n-//     if (window.history.state && window.history.state.idx < window.history.length - 1) {\r\n-//       window.history.forward();\r\n-//       speak(\"Going forward\");\r\n-//     } else {\r\n-//       speak(\"No forward history available.\");\r\n-//     }\r\n-//   };\r\n-\r\n-//   const playVideo = () => {\r\n-//     if (videoRef.current) {\r\n-//       videoRef.current.play();\r\n-//       speak(\"Playing video.\");\r\n-//     } else {\r\n-//       speak(\"No video to play.\");\r\n-//     }\r\n-//   };\r\n-\r\n-//   const pauseVideo = () => {\r\n-//     if (videoRef.current) {\r\n-//       videoRef.current.pause();\r\n-//       speak(\"Video paused.\");\r\n-//     } else {\r\n-//       speak(\"No video to pause.\");\r\n-//     }\r\n-//   };\r\n-\r\n-//   const scrollAmount = window.innerHeight * 0.82;\r\n-\r\n-//   const scrollUp = () => {\r\n-//     if (window.pageYOffset === 0) {\r\n-//       speak(\"Already at the top of the page.\");\r\n-//     } else {\r\n-//       window.scrollBy(0, -scrollAmount);\r\n-//       speak(\"Scrolled up.\");\r\n-//     }\r\n-//   };\r\n-\r\n-//   const scrollDown = () => {\r\n-//     const maxScrollTop =\r\n-//       document.documentElement.scrollHeight - window.innerHeight;\r\n-//     if (window.pageYOffset >= maxScrollTop) {\r\n-//       speak(\"Already at the bottom of the page.\");\r\n-//     } else {\r\n-//       window.scrollBy(0, scrollAmount);\r\n-//       speak(\"Scrolled down.\");\r\n-//     }\r\n-//   };\r\n-\r\n-//   const scrollToTop = () => {\r\n-//     if (window.pageYOffset === 0) {\r\n-//       speak(\"Already at the top of the page.\");\r\n-//     } else {\r\n-//       window.scrollTo(0, 0);\r\n-//       speak(\"Scrolled to the top of the page.\");\r\n-//     }\r\n-//   };\r\n-\r\n-//   const scrollToBottom = () => {\r\n-//     const maxScrollTop =\r\n-//       document.documentElement.scrollHeight - window.innerHeight;\r\n-//     if (window.pageYOffset >= maxScrollTop) {\r\n-//       speak(\"Already at the bottom of the page.\");\r\n-//     } else {\r\n-//       window.scrollTo(0, document.body.scrollHeight);\r\n-//       speak(\"Scrolled to the bottom of the page.\");\r\n-//     }\r\n-//   };\r\n-\r\n-//   const speak = (message) => {\r\n-//     const utterance = new SpeechSynthesisUtterance(message);\r\n-//     utterance.onend = () => {\r\n-//       setIsSpeaking(false);\r\n-//       // Restart recognition after speaking has ended\r\n-//       if (isListening) {\r\n-//         restartRecognition();\r\n-//       }\r\n-//     };\r\n-  \r\n-//     setIsSpeaking(true);\r\n-//     // Stop recognition when the bot starts speaking\r\n-//     if (recognition.current) {\r\n-//       recognition.current.abort();\r\n-//     }\r\n-//     speechSynthesis.current.speak(utterance);\r\n-//   };\r\n-  \r\n-\r\n-//   const restartRecognition = () => {\r\n-//     // Check if recognition is not already started and if the bot is set to listen\r\n-//     if (recognition.current && !recognition.current.starting && isListening && !isSpeaking) {\r\n-//       // Only start recognition if it's not already active\r\n-//       if (recognition.current.state !== 'active') {\r\n-//         recognition.current.abort(); // Ensure any ongoing recognition is stopped\r\n-//         recognition.current.starting = true;\r\n-//         recognition.current.start();\r\n-//       }\r\n-//     }\r\n-//   };\r\n-  \r\n-  \r\n-//     // Restart recognition when bot finishes speaking and isListening is true\r\n-//     useEffect(() => {\r\n-//       if (!isSpeaking && isListening) {\r\n-//         restartRecognition();\r\n-//       }\r\n-//     }, [isSpeaking, isListening]);\r\n-\r\n-//   const onResult = (event) => {\r\n-//     const resultIndex = event.resultIndex;\r\n-//     const transcript = event.results[resultIndex][0].transcript\r\n-//       .trim()\r\n-//       .toLowerCase();\r\n-\r\n-//     if (event.results[resultIndex].isFinal) {\r\n-//       console.log(`Recognized text: ${transcript}`);\r\n-//       if (transcript.includes(\"brain\")) {\r\n-//         console.log(\"Wake word heard, processing command...\");\r\n-//         handleCommandWithFuse(transcript.replace(\"brain\", \"\"));\r\n-//       }\r\n-//     }\r\n-//   };\r\n-\r\n-//   const onRecognitionEnd = () => {\r\n-//     recognition.current.starting = false;\r\n-//     if (isListening && !isSpeaking) {\r\n-//       restartRecognition();\r\n-//     }\r\n-//   };\r\n-\r\n-//   useEffect(() => {\r\n-//     if (isListening && !hasGreeted) {\r\n-//       speak(\"Hello, I'm Brane. How can I help you today?\");\r\n-//       setHasGreeted(true);\r\n-//     }\r\n-//   }, [isListening, hasGreeted]);\r\n-\r\n-\r\n-// // Updated startListening function\r\n-// const startListening = () => {\r\n-//   setIsListening(true);\r\n-//   if (recognition.current && !recognition.current.starting) {\r\n-//     recognition.current.start();\r\n-//   }\r\n-// };\r\n-\r\n-// // Updated stopListening function\r\n-// const stopListening = () => {\r\n-//   setIsListening(false);\r\n-//   setIsSpeaking(false); // Reset speaking state\r\n-//   setHasGreeted(false); // Reset greeting state if needed\r\n-//   if (recognition.current) {\r\n-//     recognition.current.abort(); // Stop any ongoing speech recognition\r\n-//   }\r\n-//   if (speechSynthesis.current.speaking) {\r\n-//     speechSynthesis.current.cancel(); // Stop any ongoing speech synthesis\r\n-//   }\r\n-// };\r\n-\r\n-\r\n-\r\n-//   const handleCommandWithFuse = (command) => {\r\n-//     const fuse = new Fuse(commands, { keys: [\"utterance\"], threshold: 0.4 });\r\n-//     const results = fuse.search(command);\r\n-//     const foundCommand = results.length ? results[0].item : null;\r\n-\r\n-//     if (foundCommand) {\r\n-//       console.log(\"Command found:\", foundCommand.utterance);\r\n-\r\n-//       if (foundCommand.action) {\r\n-//         foundCommand.action();\r\n-//       } else if (foundCommand.route) {\r\n-//         navigate(foundCommand.route);\r\n-//       }\r\n-\r\n-//       // Speak after performing the action or navigation\r\n-//       speak(foundCommand.response);\r\n-//     } else {\r\n-//       console.log(\"No command found.\");\r\n-//       speak(\"I'm not sure how to respond to that.\");\r\n-//     }\r\n-//   };\r\n-\r\n-//   const commands = [\r\n-//     {\r\n-//       utterance: \"Hello who are you ?\",\r\n-\r\n-//       response:\r\n-//         \"Hi! This is Brane! your Voice bot from Brane Education How can I Assist you Today ?\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"Hello\",\r\n-\r\n-//       response: \"Hi! How can I assist you today?\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"hello\",\r\n-\r\n-//       response: \"Hi! How can I assist you today?\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"Hi.\",\r\n-\r\n-//       response: \"Hello! How can I assist you today?\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"Hey there\",\r\n-\r\n-//       response: \"Hi! How can I assist you today?\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"Good morning Brane.\",\r\n-\r\n-//       response: \"Hey Hiii! Good morning  ! How can I help you?\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"Good afternoon Brane.\",\r\n-\r\n-//       response: \"Hey Hiii! Good after noon ! How can I help you?\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"Good evening Brane.\",\r\n-\r\n-//       response: \"Hey Hiii! Good evening ! How can I help you?\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"can you please take me to login page\",\r\n-\r\n-//       route: \"/login\",\r\n-\r\n-//       response: \"Here's the Login Page, Please Login\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"please take me to login page\",\r\n-\r\n-//       route: \"/login\",\r\n-\r\n-//       response: \"Here's the Login Page, Please Login\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"Go to login page\",\r\n-\r\n-//       route: \"/login\",\r\n-\r\n-//       response: \"Here's the Login Page, Please Login\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"open login page\",\r\n-\r\n-//       route: \"/login\",\r\n-\r\n-//       response: \"Here's the Login Page, Please Login\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"can you please take me to signup page\",\r\n-\r\n-//       route: \"/signup\",\r\n-\r\n-//       response: \"Here's the signup page. Please proceed With Registration.\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"take me to signup page\",\r\n-\r\n-//       route: \"/signup\",\r\n-\r\n-//       response: \"Here's the signup page. Please proceed With Registration.\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"Go to signup page\",\r\n-\r\n-//       route: \"/signup\",\r\n-\r\n-//       response: \"Here's the signup page. Please proceed With Registration.\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"open signup page\",\r\n-\r\n-//       route: \"/signup\",\r\n-\r\n-//       response: \"Here's the signup page. Please proceed With Registration.\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"Go to face id\",\r\n-\r\n-//       route: \"/login/faceid\",\r\n-\r\n-//       response: \"Here's Face ID Login. Please proceed.\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"Go to face id login\",\r\n-\r\n-//       route: \"/login/faceid\",\r\n-\r\n-//       response: \"Here's Face ID Login. Please proceed.\",\r\n-//     },\r\n-//     {\r\n-//       utterance: \"Go to face login\",\r\n-\r\n-//       route: \"/login/faceid\",\r\n-\r\n-//       response: \"Here's Face ID Login. Please proceed.\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"login with face id\",\r\n-\r\n-//       route: \"/login/faceid\",\r\n-\r\n-//       response: \"Here's Face ID Login. Please proceed.\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"login with face\",\r\n-\r\n-//       route: \"/login/faceid\",\r\n-\r\n-//       response: \"Here's Face ID Login. Please proceed.\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"i want to login with face\",\r\n-\r\n-//       route: \"/login/faceid\",\r\n-\r\n-//       response: \"Here's Face ID Login. Please proceed.\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"login with voice\",\r\n-\r\n-//       route: \"/login/voiceid\",\r\n-\r\n-//       response: \"Here's Voice Login. Please proceed.\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"i want to login with voice\",\r\n-\r\n-//       route: \"/login/voiceid\",\r\n-\r\n-//       response: \"Here's Voice Login. Please proceed.\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"go to voice login\",\r\n-\r\n-//       route: \"/login/voiceid\",\r\n-\r\n-//       response: \"Here's Voice Login. Please proceed.\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"login with voice\",\r\n-\r\n-//       route: \"/login/voiceid\",\r\n-\r\n-//       response: \"Here's Voice Login. Please proceed.\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"login with mobile\",\r\n-\r\n-//       route: \"/login/mobile\",\r\n-\r\n-//       response: \"Here's Mobile Login. Please proceed.\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"i want to login with mobile\",\r\n-\r\n-//       route: \"/login/mobile\",\r\n-\r\n-//       response: \"Here's Mobile Login. Please proceed.\",\r\n-//     },\r\n-//     {\r\n-//       utterance: \"go to mobile login\",\r\n-\r\n-//       route: \"/login/mobile\",\r\n-\r\n-//       response: \"Here's Mobile Login. Please proceed.\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"what are platform features\",\r\n-\r\n-//       response:\r\n-//         \"Dashboard, Dynamic time table, Learning Networks, Little Masters, Video Based Dictionary, General Search.\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"Features of platform\",\r\n-\r\n-//       response:\r\n-//         \"Dashboard, Dynamic time table, Learning Networks, Little Masters, Video Based Dictionary, General Search.\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"What does the platform offer\",\r\n-\r\n-//       response:\r\n-//         \"Dashboard, Dynamic time table, Learning Networks, Little Masters, Video Based Dictionary, General Search.\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"Say me the features of platform\",\r\n-\r\n-//       response:\r\n-//         \"Dashboard, Dynamic time table, Learning Networks, Little Masters, Video Based Dictionary, General Search.\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"Say me the services of platform\",\r\n-\r\n-//       response:\r\n-//         \"Dashboard, Dynamic time table, Learning Networks, Little Masters, Video Based Dictionary, General Search.\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"tell me the services offered by the platform\",\r\n-\r\n-//       response:\r\n-//         \"Dashboard, Dynamic time table, Learning Networks, Little Masters, Video Based Dictionary, General Search.\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"explain platform services\",\r\n-\r\n-//       response:\r\n-//         \"Dashboard, Dynamic time table, Learning Networks, Little Masters, Video Based Dictionary, General Search.\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"Give me the Parent voice of Julia Harris\",\r\n-\r\n-//       response:\r\n-//         \"Brane education has helped my son a lot in his studies. He improved a lot in his studies and is now able to score good marks in his exams\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"Play today's motivational video\",\r\n-\r\n-//       response: \"I am playing the video\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"Play today's video\",\r\n-\r\n-//       response: \"I am playing Motivational video\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"Leaders Voice\",\r\n-\r\n-//       response:\r\n-//         \"This Voice-interactive AI Platform is a game Changer. It revolutionizes education.\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"Curriculum Supported by Brane Education\",\r\n-\r\n-//       response:\r\n-//         \"we support multiple Boards let me say few Telangana State Board Andhra Pradesh Board Maharashtra Board Assam Board\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"Boards supported by the platform\",\r\n-\r\n-//       response:\r\n-//         \"we support multiple Boards let me say few Telangana State Board Andhra Pradesh Board Maharashtra Board Assam Board\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"Curriculum\",\r\n-\r\n-//       response:\r\n-//         \"we support multiple Boards let me say few Telangana State Board Andhra Pradesh Board Maharashtra Board Assam Board\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"Go to landing page\",\r\n-\r\n-//       response: \"Okay, I am taking you to the landing page.\",\r\n-\r\n-//       route: \"/childpage\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"take me to landing page\",\r\n-\r\n-//       response: \"Okay, I am taking you to the landing page.\",\r\n-\r\n-//       route: \"/childpage\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"move to landing page\",\r\n-\r\n-//       response: \"Okay, I am taking you to the landing page.\",\r\n-\r\n-//       route: \"/childpage\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"roll back to landing page\",\r\n-\r\n-//       response: \"Okay, I am taking you to the landing page.\",\r\n-\r\n-//       route: \"/childpage\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"move to landing page\",\r\n-\r\n-//       response: \"Okay, I am taking you to the landing page.\",\r\n-\r\n-//       route: \"/childpage\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"what is today's quote\",\r\n-\r\n-//       response:\r\n-//         \"Determination is the power that sees us through all our frustration and obstacles. It helps in building our willpower which is the very basis of success.\",\r\n-\r\n-//       route: \"/childpage\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"Today's Inspirational quote\",\r\n-\r\n-//       response:\r\n-//         \"Determination is the power that sees us through all our frustration and obstacles. It helps in building our willpower which is the very basis of success.\",\r\n-\r\n-//       route: \"/childpage\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"say me today's quote\",\r\n-\r\n-//       response:\r\n-//         \"Determination is the power that sees us through all our frustration and obstacles. It helps in building our willpower which is the very basis of success.\",\r\n-\r\n-//       route: \"/childpage\",\r\n-//     },\r\n-//     {\r\n-//       utterance: \"go back\",\r\n-//       response: \"\",\r\n-//       action: goBack, // Note the use of an action property\r\n-//     },\r\n-//     {\r\n-//       utterance: \"go forward\",\r\n-//       response: \"\",\r\n-//       action: goForward,\r\n-//     },\r\n-//     {\r\n-//       utterance: \"play video\",\r\n-//       // response: \"Playing video.\",\r\n-//       action: playVideo,\r\n-//     },\r\n-//     {\r\n-//       utterance: \"pause video\",\r\n-//       // response: \"Pausing video.\",\r\n-//       action: pauseVideo,\r\n-//     },\r\n-//     {\r\n-//       utterance: \"start video\",\r\n-//       // response: \"Playing video.\",\r\n-//       action: playVideo,\r\n-//     },\r\n-//     {\r\n-//       utterance: \"stop video\",\r\n-//       // response: \"Playing video.\",\r\n-//       action: pauseVideo,\r\n-//     },\r\n-//     {\r\n-//       utterance: \"scroll up\",\r\n-//       // response: \"Scrolling up.\",\r\n-//       action: scrollUp,\r\n-//     },\r\n-//     {\r\n-//       utterance: \"scroll down\",\r\n-//       // response: \"Scrolling down.\",\r\n-//       action: scrollDown,\r\n-//     },\r\n-//     {\r\n-//       utterance: \"go up\",\r\n-\r\n-//       // response: \"Scrolling up.\",\r\n-//       action: scrollUp,\r\n-//     },\r\n-//     {\r\n-//       utterance: \"go down\",\r\n-//       // response: \"Scrolling down.\",\r\n-//       action: scrollDown,\r\n-//     },\r\n-//     {\r\n-//       utterance: \"scroll to top\",\r\n-//       action: scrollToTop,\r\n-//     },\r\n-//     {\r\n-//       utterance: \"scroll to bottom\",\r\n-//       action: scrollToBottom,\r\n-//     },\r\n-//     {\r\n-//       utterance: \"brane stop\",\r\n-//       action: stopListening,\r\n-//     },\r\n-//     {\r\n-//       utterance: \"brane turn off\",\r\n-//       action: stopListening,\r\n-//     },\r\n-//     {\r\n-//       utterance: \"brane stop the bot\",\r\n-//       action: stopListening,\r\n-//     },\r\n-//   ];\r\n-\r\n-//   return (\r\n-//     <div className=\"speech-bot-container\">\r\n-//       <div\r\n-//         className={`button-container ${\r\n-//           isListening ? \"voicebotframeactive\" : \"voicebotframe\"\r\n-//         }`}\r\n-//       >\r\n-//         <button onClick={isListening ? stopListening : startListening}>\r\n-//           {isListening ? \"Stop\" : \"Start\"} Animation\r\n-//         </button>\r\n-//         {/* <button onClick={toggleBotActive}>\r\n-//         {isBotActive ? 'Deactivate Bot' : 'Activate Bot'}\r\n-//       </button> */}\r\n-//       </div>\r\n-//     </div>\r\n-//   );\r\n-// };\r\n-\r\n-// export default VoiceBot;\r\n-\r\n-\r\n-\r\n-\r\n-\r\n-\r\n-\r\n-\r\n-\r\n-\r\n-\r\n-\r\n-\r\n-\r\n-\r\n-\r\n-\r\n-\r\n-\r\n-\r\n-\r\n-\r\n-\r\n-\r\n-\r\n-\r\n-\r\n-\r\n-\r\n-\r\n-//Bot Video added but some start issues\r\n-\r\n-// import React, { useState, useEffect, useRef } from \"react\";\r\n-// import { useNavigate, useLocation } from \"react-router-dom\";\r\n-// import Fuse from \"fuse.js\";\r\n-// import \"./VoiceBot.css\";\r\n-\r\n-// const VoiceBot = ({ videoRef }) => {\r\n-//   const [isListening, setIsListening] = useState(false);\r\n-//   const [isSpeaking, setIsSpeaking] = useState(false);\r\n-//   const recognition = useRef(null);\r\n-//   const speechSynthesis = useRef(window.speechSynthesis);\r\n-//   const hasGreeted = useRef(false);\r\n-//   const restartRecognitionTimeout = useRef(null);\r\n-//   const navigate = useNavigate();\r\n-//   const location = useLocation();\r\n-//   const [isRecognitionActive, setIsRecognitionActive] = useState(false); // New state to track recognition status\r\n-\r\n-//   useEffect(() => {\r\n-//     recognition.current = new window.webkitSpeechRecognition();\r\n-//     recognition.current.continuous = true;\r\n-//     recognition.current.interimResults = false;\r\n-//     recognition.current.onresult = onResult;\r\n-//     recognition.current.onend = () => {\r\n-//       console.log(\"Recognition ended.\");\r\n-//       if (isListening) {\r\n-//         startListening();\r\n-//       }\r\n-//     };\r\n-//     recognition.current.onerror = (event) => {\r\n-//       console.error(\"Recognition error:\", event.error);\r\n-//     };\r\n-\r\n-//     return () => {\r\n-//       recognition.current.abort();\r\n-//     };\r\n-//   }, []);\r\n-\r\n-//   // Update useEffect for managing the recognition state based on isListening and isRecognitionActive\r\n-//   useEffect(() => {\r\n-//     if (isListening && !isRecognitionActive) {\r\n-//       startListening();\r\n-//     } else if (!isListening && isRecognitionActive) {\r\n-//       stopListening();\r\n-//     }\r\n-//   }, [isListening, isRecognitionActive]);\r\n-\r\n-//   const goBack = () => {\r\n-//     if (window.history.length > 1) {\r\n-//       navigate(-1);\r\n-//     } else {\r\n-//       speak(\"Can't go back any further.\");\r\n-//     }\r\n-//   };\r\n-\r\n-//   const goForward = () => {\r\n-//     // Unfortunately, there's no direct way to check if you can go forward in the history.\r\n-//     // You might need to manage this state manually based on user navigation.\r\n-//     navigate(1);\r\n-//   };\r\n-\r\n-//   const playVideo = () => {\r\n-//     if (videoRef.current && !videoRef.current.paused) {\r\n-//       speak(\"Video is already playing.\");\r\n-//     } else if (videoRef.current) {\r\n-//       videoRef.current.play();\r\n-//       speak(\"Playing video.\");\r\n-//     } else {\r\n-//       speak(\"No video to play.\");\r\n-//     }\r\n-//   };\r\n-\r\n-//   const pauseVideo = () => {\r\n-//     if (videoRef.current && videoRef.current.paused) {\r\n-//       speak(\"Video is already paused.\");\r\n-//     } else if (videoRef.current) {\r\n-//       videoRef.current.pause();\r\n-//       speak(\"Video paused.\");\r\n-//     } else {\r\n-//       speak(\"No video to pause.\");\r\n-//     }\r\n-//   };\r\n-\r\n-//   const scrollAmount = window.innerHeight * 0.82;\r\n-\r\n-//   const scrollUp = () => {\r\n-//     if (window.pageYOffset === 0) {\r\n-//       speak(\"Already at the top of the page.\");\r\n-//     } else {\r\n-//       window.scrollBy(0, -scrollAmount);\r\n-//       speak(\"Scrolled up.\");\r\n-//     }\r\n-//   };\r\n-\r\n-//   const scrollDown = () => {\r\n-//     const maxScrollTop =\r\n-//       document.documentElement.scrollHeight - window.innerHeight;\r\n-//     if (window.pageYOffset >= maxScrollTop) {\r\n-//       speak(\"Already at the bottom of the page.\");\r\n-//     } else {\r\n-//       window.scrollBy(0, scrollAmount);\r\n-//       speak(\"Scrolled down.\");\r\n-//     }\r\n-//   };\r\n-\r\n-//   const scrollToTop = () => {\r\n-//     if (window.pageYOffset === 0) {\r\n-//       speak(\"Already at the top of the page.\");\r\n-//     } else {\r\n-//       window.scrollTo(0, 0);\r\n-//       speak(\"Scrolled to the top of the page.\");\r\n-//     }\r\n-//   };\r\n-\r\n-//   const scrollToBottom = () => {\r\n-//     const maxScrollTop =\r\n-//       document.documentElement.scrollHeight - window.innerHeight;\r\n-//     if (window.pageYOffset >= maxScrollTop) {\r\n-//       speak(\"Already at the bottom of the page.\");\r\n-//     } else {\r\n-//       window.scrollTo(0, document.body.scrollHeight);\r\n-//       speak(\"Scrolled to the bottom of the page.\");\r\n-//     }\r\n-//   };\r\n-\r\n-//   // const speak = (message) => {\r\n-//   //   const utterance = new SpeechSynthesisUtterance(message);\r\n-//   //   utterance.onend = () => {\r\n-//   //     setIsSpeaking(false);\r\n-//   //     console.log(\"Speaking ended.\");\r\n-//   //     // Only restart recognition if we're still supposed to be listening\r\n-//   //     // if (isListening) {\r\n-//   //     //   if (restartRecognitionTimeout.current) {\r\n-//   //     //     clearTimeout(restartRecognitionTimeout.current);\r\n-//   //     //   }\r\n-//   //     //   restartRecognitionTimeout.current = setTimeout(() => {\r\n-//   //     //     console.log(\"Recognition restarted.\");\r\n-//   //     //     recognition.current.start();\r\n-//   //     //   }, 100); // Delay to prevent immediate restart\r\n-//   //     // }\r\n-//   //     if (isListening && !recognition.current.starting) { // Check the flag before restarting\r\n-//   //       recognition.current.starting = true; // Set the flag when starting recognition\r\n-//   //       recognition.current.start();\r\n-//   //     }\r\n-//   //   };\r\n-\r\n-//   //   setIsSpeaking(true);\r\n-//   //   console.log(\"Speaking started.\");\r\n-//   //   recognition.current.stop(); // Stop recognition when the bot starts speaking\r\n-//   //   speechSynthesis.current.speak(utterance);\r\n-//   // };\r\n-\r\n-//   const speak = (message) => {\r\n-//     console.log(\"speak function called with message:\", message);\r\n-//     const utterance = new SpeechSynthesisUtterance(message);\r\n-//     utterance.onend = () => {\r\n-//       setIsSpeaking(false);\r\n-//       console.log(\"Speaking ended.\");\r\n-//       // Directly handle the restart of recognition here if needed\r\n-//       if (isListening) {\r\n-//         startListening();\r\n-//       }\r\n-//     };\r\n-\r\n-//     setIsSpeaking(true);\r\n-//     console.log(\"Speaking started.\");\r\n-//     recognition.current.stop(); // Ensure to stop recognition before speaking\r\n-//     speechSynthesis.current.speak(utterance);\r\n-//   };\r\n-\r\n-//   const onResult = (event) => {\r\n-//     const resultIndex = event.resultIndex;\r\n-//     const transcript = event.results[resultIndex][0].transcript\r\n-//       .trim()\r\n-//       .toLowerCase();\r\n-\r\n-//     if (event.results[resultIndex].isFinal) {\r\n-//       console.log(`Recognized text: ${transcript}`);\r\n-//       if (transcript.includes(\"brain\")) {\r\n-//         console.log(\"Wake word heard, processing command...\");\r\n-//         handleCommandWithFuse(transcript.replace(\"brain\", \"\"));\r\n-//       }\r\n-//     }\r\n-//   };\r\n-\r\n-//   // const onRecognitionEnd = () => {\r\n-//   //   console.log(\"Recognition ended.\");\r\n-//   //   setIsRecognitionActive(false); // Update state when recognition ends\r\n-//   //   recognition.current.starting = false; // Reset the flag when recognition ends\r\n-//   //   // We now check if the recognition is already running before starting it again\r\n-//   //   if (isListening && !isSpeaking && !recognition.current?.starting) {\r\n-//   //     console.log(\"Restarting recognition.\");\r\n-//   //     recognition.current.start();\r\n-//   //   }\r\n-//   // };\r\n-\r\n-//   // useEffect(() => {\r\n-//   //   if (isListening && !hasGreeted.current) {\r\n-//   //     speak(\"Hello, I'm Brane. How can I assist you today?\");\r\n-//   //     hasGreeted.current = true;\r\n-//   //   } else if (isListening && !isSpeaking) {\r\n-//   //     recognition.current.start();\r\n-//   //   }\r\n-//   // }, [isListening, isSpeaking]);\r\n-\r\n-//   useEffect(() => {\r\n-//     if (isListening && !hasGreeted.current) {\r\n-//       speak(\"Hello, I'm Brane. How can I assist you today?\");\r\n-//       hasGreeted.current = true;\r\n-//     } else if (isListening && !isSpeaking && !recognition.current.starting) {\r\n-//       // Check the flag before starting\r\n-//       recognition.current.starting = true; // Set the flag when starting recognition\r\n-//       recognition.current.start();\r\n-//     }\r\n-//   }, [isListening, isSpeaking]);\r\n-\r\n-//   // const startListening = () => {\r\n-//   //   console.log(\"Attempting to start listening.\");\r\n-//   //   if (recognition.current && !recognition.current.starting) {\r\n-//   //     setIsListening(true);\r\n-//   //     recognition.current.starting = true; // Set the flag when starting recognition\r\n-//   //     recognition.current.start();\r\n-//   //     console.log(\"Listening started.\");\r\n-//   //   }\r\n-//   // };\r\n-\r\n-//   // const stopListening = () => {\r\n-//   //   console.log(\"Stopping listening.\");\r\n-\r\n-//   //   setIsListening(false);\r\n-//   //   recognition.current.stop();\r\n-//   //   if (speechSynthesis.current.speaking) {\r\n-//   //     speechSynthesis.current.cancel();\r\n-//   //   }\r\n-//   //   if (restartRecognitionTimeout.current) {\r\n-//   //     clearTimeout(restartRecognitionTimeout.current);\r\n-//   //   }\r\n-//   //   console.log(\"Listening stopped.\");\r\n-//   // };\r\n-//   // Handle start and stop listening logic\r\n-//   const startListening = () => {\r\n-//     console.log(\"Attempting to start listening.\");\r\n-//     if (!recognition.current.starting) {\r\n-//       setIsListening(true);\r\n-//       recognition.current.starting = true;\r\n-//       recognition.current.start();\r\n-//       console.log(\"Listening started.\");\r\n-//     } else {\r\n-//       console.log(\"Recognition already active.\");\r\n-//     }\r\n-//   };\r\n-\r\n-//   const stopListening = () => {\r\n-//     console.log(\"Stopping listening.\");\r\n-//     if (recognition.current.starting) {\r\n-//       setIsListening(false);\r\n-//       recognition.current.starting = false;\r\n-//       recognition.current.stop();\r\n-//       console.log(\"Listening stopped.\");\r\n-//     } else {\r\n-//       console.log(\"Recognition already inactive.\");\r\n-//     }\r\n-//   };\r\n-\r\n-//   // const handleCommandWithFuse = (command) => {\r\n-//   //   const fuse = new Fuse(commands, { keys: [\"utterance\"], threshold: 0.4 });\r\n-//   //   const results = fuse.search(command);\r\n-//   //   const foundCommand = results.length ? results[0].item : null;\r\n-\r\n-//   //   if (foundCommand) {\r\n-//   //     console.log(\"Command found:\", foundCommand.utterance);\r\n-//   //     speak(foundCommand.response);\r\n-//   //     if (foundCommand.route) {\r\n-//   //       navigate(foundCommand.route); // Navigate to the route specified in the command\r\n-//   //     }\r\n-//   //   } else {\r\n-//   //     console.log(\"No command found.\");\r\n-//   //     speak(\"I'm not sure how to respond to that.\");\r\n-//   //   }\r\n-//   // };\r\n-\r\n-//   const handleCommandWithFuse = (command) => {\r\n-//     const fuse = new Fuse(commands, { keys: [\"utterance\"], threshold: 0.4 });\r\n-//     const results = fuse.search(command);\r\n-//     const foundCommand = results.length ? results[0].item : null;\r\n-\r\n-//     if (foundCommand) {\r\n-//       console.log(\"Command found:\", foundCommand.utterance);\r\n-\r\n-//       if (foundCommand.route) {\r\n-//         if (location.pathname !== foundCommand.route) {\r\n-//           navigate(foundCommand.route);\r\n-//           speak(\r\n-//             `Navigating to ${\r\n-//               foundCommand.routeDescription || \"requested page\"\r\n-//             }.`\r\n-//           );\r\n-//         } else {\r\n-//           speak(\r\n-//             `You are already on the ${\r\n-//               foundCommand.routeDescription || \"requested page\"\r\n-//             }.`\r\n-//           );\r\n-//         }\r\n-//       } else if (foundCommand.action) {\r\n-//         foundCommand.action();\r\n-//       }\r\n-\r\n-//       if (foundCommand.response) {\r\n-//         speak(foundCommand.response);\r\n-//       }\r\n-//     } else {\r\n-//       console.log(\"No command found.\");\r\n-//       speak(\"I'm not sure how to respond to that.\");\r\n-//     }\r\n-//   };\r\n-\r\n-//   const commands = [\r\n-//     {\r\n-//       utterance: \"Hello who are you ?\",\r\n-\r\n-//       response:\r\n-//         \"Hi! This is Brane! your Voice bot from Brane Education How can I Assist you Today ?\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"Hello\",\r\n-\r\n-//       response: \"Hi! How can I assist you today?\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"hello\",\r\n-\r\n-//       response: \"Hi! How can I assist you today?\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"Hi.\",\r\n-\r\n-//       response: \"Hello! How can I assist you today?\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"Hey there\",\r\n-\r\n-//       response: \"Hi! How can I assist you today?\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"Good morning Brane.\",\r\n-\r\n-//       response: \"Hey Hiii! Good morning  ! How can I help you?\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"Good afternoon Brane.\",\r\n-\r\n-//       response: \"Hey Hiii! Good after noon ! How can I help you?\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"Good evening Brane.\",\r\n-\r\n-//       response: \"Hey Hiii! Good evening ! How can I help you?\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"can you please take me to login page\",\r\n-//       route: \"/login\",\r\n-//       routeDescription: \"login page\",\r\n-//       response: \"Navigating to the login page.\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"go to login page\",\r\n-//       route: \"/login\",\r\n-//       routeDescription: \"login page\",\r\n-//       response: \"Navigating to the login page.\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"please take me to login page\",\r\n-//       route: \"/login\",\r\n-//       routeDescription: \"login page\",\r\n-//       response: \"Navigating to the login page.\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"Go to login page\",\r\n-//       route: \"/login\",\r\n-//       routeDescription: \"login page\",\r\n-//       response: \"Navigating to the login page.\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"open login page\",\r\n-//       route: \"/login\",\r\n-//       routeDescription: \"login page\",\r\n-//       response: \"Navigating to the login page.\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"can you please take me to signup page\",\r\n-//       route: \"/signup\",\r\n-//       routeDescription: \"signup page\",\r\n-//       response: \"Navigating to the signup page.\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"take me to signup page\",\r\n-//       route: \"/signup\",\r\n-//       routeDescription: \"signup page\",\r\n-//       response: \"Navigating to the signup page.\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"Go to signup page\",\r\n-//       route: \"/signup\",\r\n-//       routeDescription: \"signup page\",\r\n-//       response: \"Navigating to the signup page.\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"open signup page\",\r\n-//       route: \"/signup\",\r\n-//       routeDescription: \"signup page\",\r\n-//       response: \"Navigating to the signup page.\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"what are platform features\",\r\n-\r\n-//       response:\r\n-//         \"Dashboard, Dynamic time table, Learning Networks, Little Masters, Video Based Dictionary, General Search.\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"Features of platform\",\r\n-\r\n-//       response:\r\n-//         \"Dashboard, Dynamic time table, Learning Networks, Little Masters, Video Based Dictionary, General Search.\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"What does the platform offer\",\r\n-\r\n-//       response:\r\n-//         \"Dashboard, Dynamic time table, Learning Networks, Little Masters, Video Based Dictionary, General Search.\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"Say me the features of platform\",\r\n-\r\n-//       response:\r\n-//         \"Dashboard, Dynamic time table, Learning Networks, Little Masters, Video Based Dictionary, General Search.\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"Say me the services of platform\",\r\n-\r\n-//       response:\r\n-//         \"Dashboard, Dynamic time table, Learning Networks, Little Masters, Video Based Dictionary, General Search.\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"tell me the services offered by the platform\",\r\n-\r\n-//       response:\r\n-//         \"Dashboard, Dynamic time table, Learning Networks, Little Masters, Video Based Dictionary, General Search.\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"explain platform services\",\r\n-\r\n-//       response:\r\n-//         \"Dashboard, Dynamic time table, Learning Networks, Little Masters, Video Based Dictionary, General Search.\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"Give me the Parent voice of Julia Harris\",\r\n-\r\n-//       response:\r\n-//         \"Brane education has helped my son a lot in his studies. He improved a lot in his studies and is now able to score good marks in his exams\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"Play today's motivational video\",\r\n-\r\n-//       response: \"I am playing the video\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"Play today's video\",\r\n-\r\n-//       response: \"I am playing Motivational video\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"Leaders Voice\",\r\n-\r\n-//       response:\r\n-//         \"This Voice-interactive AI Platform is a game Changer. It revolutionizes education.\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"Curriculum Supported by Brane Education\",\r\n-\r\n-//       response:\r\n-//         \"we support multiple Boards let me say few Telangana State Board Andhra Pradesh Board Maharashtra Board Assam Board\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"Boards supported by the platform\",\r\n-\r\n-//       response:\r\n-//         \"we support multiple Boards let me say few Telangana State Board Andhra Pradesh Board Maharashtra Board Assam Board\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"Curriculum\",\r\n-\r\n-//       response:\r\n-//         \"we support multiple Boards let me say few Telangana State Board Andhra Pradesh Board Maharashtra Board Assam Board\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"Go to landing page\",\r\n-\r\n-//       response: \"Okay, I am taking you to the landing page.\",\r\n-\r\n-//       route: \"/childpage\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"take me to landing page\",\r\n-\r\n-//       response: \"Okay, I am taking you to the landing page.\",\r\n-\r\n-//       route: \"/childpage\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"move to landing page\",\r\n-\r\n-//       response: \"Okay, I am taking you to the landing page.\",\r\n-\r\n-//       route: \"/childpage\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"roll back to landing page\",\r\n-\r\n-//       response: \"Okay, I am taking you to the landing page.\",\r\n-\r\n-//       route: \"/childpage\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"move to landing page\",\r\n-\r\n-//       response: \"Okay, I am taking you to the landing page.\",\r\n-\r\n-//       route: \"/childpage\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"what is today's quote\",\r\n-\r\n-//       response:\r\n-//         \"Determination is the power that sees us through all our frustration and obstacles. It helps in building our willpower which is the very basis of success.\",\r\n-\r\n-//       // route: \"/childpage\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"Today's Inspirational quote\",\r\n-\r\n-//       response:\r\n-//         \"Determination is the power that sees us through all our frustration and obstacles. It helps in building our willpower which is the very basis of success.\",\r\n-\r\n-//       // route: \"/childpage\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"say me today's quote\",\r\n-\r\n-//       response:\r\n-//         \"Determination is the power that sees us through all our frustration and obstacles. It helps in building our willpower which is the very basis of success.\",\r\n-\r\n-//       // route: \"/childpage\",\r\n-//     },\r\n-//     {\r\n-//       utterance: \"go back\",\r\n-//       response: \"Going back.\",\r\n-//       action: goBack, // Note the use of an action property\r\n-//     },\r\n-//     {\r\n-//       utterance: \"go forward\",\r\n-//       response: \"Going forward.\",\r\n-//       action: goForward,\r\n-//     },\r\n-//     {\r\n-//       utterance: \"play video\",\r\n-//       // response: \"Playing video.\",\r\n-//       action: playVideo,\r\n-//     },\r\n-//     {\r\n-//       utterance: \"pause video\",\r\n-//       // response: \"Pausing video.\",\r\n-//       action: pauseVideo,\r\n-//     },\r\n-//     {\r\n-//       utterance: \"start video\",\r\n-//       // response: \"Playing video.\",\r\n-//       action: playVideo,\r\n-//     },\r\n-//     {\r\n-//       utterance: \"stop video\",\r\n-//       // response: \"Playing video.\",\r\n-//       action: pauseVideo,\r\n-//     },\r\n-//     {\r\n-//       utterance: \"scroll up\",\r\n-//       // response: \"Scrolling up.\",\r\n-//       action: scrollUp,\r\n-//     },\r\n-//     {\r\n-//       utterance: \"scroll down\",\r\n-//       // response: \"Scrolling down.\",\r\n-//       action: scrollDown,\r\n-//     },\r\n-//     {\r\n-//       utterance: \"go up\",\r\n-\r\n-//       // response: \"Scrolling up.\",\r\n-//       action: scrollUp,\r\n-//     },\r\n-//     {\r\n-//       utterance: \"go down\",\r\n-//       // response: \"Scrolling down.\",\r\n-//       action: scrollDown,\r\n-//     },\r\n-//     {\r\n-//       utterance: \"scroll to top\",\r\n-//       action: scrollToTop,\r\n-//     },\r\n-//     {\r\n-//       utterance: \"scroll to bottom\",\r\n-//       action: scrollToBottom,\r\n-//     },\r\n-//   ];\r\n-//   return (\r\n-//     <div className=\"speech-bot-container\">\r\n-//       <div\r\n-//         className={`button-container ${\r\n-//           isListening ? \"voicebotframeactive\" : \"voicebotframe\"\r\n-//         }`}\r\n-//       >\r\n-//         <div onClick={isListening ? stopListening : startListening}>\r\n-//           <iframe\r\n-//             src={\r\n-//               isListening\r\n-//                 ? \"https://lottie.host/?file=a89aca3f-5407-4052-82c3-2048afca7a9f/NpCdWzLSKD.json\"\r\n-//                 : \"https://lottie.host/?file=d2b6cc0e-fe95-4847-85b5-35365fca7e00/vTudpCuPZq.json\"\r\n-//             }\r\n-//             width=\"120\" // Set your desired width\r\n-//             height=\"120\" // Set your desired height\r\n-//             title={isListening ? \"Stop Animation\" : \"Start Animation\"}\r\n-//             className={isListening ? \"voicebotframeactive\" : \"voicebotframe\"}\r\n-//           ></iframe>\r\n-//           {isListening ? (\r\n-//             <div className=\"overlay\" onClick={stopListening}></div>\r\n-//           ) : (\r\n-//             <div className=\"overlay\" onClick={startListening}></div>\r\n-//           )}\r\n-//         </div>\r\n-//       </div>\r\n-//     </div>\r\n-//   );\r\n-// };\r\n-\r\n-// export default VoiceBot;\r\n-\r\n-// All functionalities but messed up\r\n-\r\n-// import React, { useState, useEffect, useRef } from \"react\";\r\n-// import { useNavigate, useLocation } from \"react-router-dom\";\r\n-// import Fuse from \"fuse.js\";\r\n-// import \"./VoiceBot.css\";\r\n-\r\n-// const VoiceBot = ({ videoRef, takeTestRef, goBackRef }) => {\r\n-//   const [isListening, setIsListening] = useState(false);\r\n-//   const [isSpeaking, setIsSpeaking] = useState(false);\r\n-//   const recognition = useRef(null);\r\n-//   const speechSynthesis = useRef(window.speechSynthesis);\r\n-//   const hasGreeted = useRef(false);\r\n-//   const navigate = useNavigate();\r\n-//   const location = useLocation();\r\n-//   const isRecognitionActive = useRef(false);\r\n-\r\n-//   useEffect(() => {\r\n-//     recognition.current = new window.webkitSpeechRecognition();\r\n-//     recognition.current.continuous = true;\r\n-//     recognition.current.interimResults = false;\r\n-//     recognition.current.onresult = onResult;\r\n-//     recognition.current.onend = onRecognitionEnd;\r\n-\r\n-//     return () => {\r\n-//       if (recognition.current) {\r\n-//         recognition.current.abort();\r\n-//       }\r\n-//     };\r\n-//   }, [location.pathname]);\r\n-\r\n-//   const onResult = (event) => {\r\n-//     const resultIndex = event.resultIndex;\r\n-//     const transcript = event.results[resultIndex][0].transcript\r\n-//       .trim()\r\n-//       .toLowerCase();\r\n-\r\n-//     if (event.results[resultIndex].isFinal) {\r\n-//       console.log(`Recognized text: ${transcript}`);\r\n-//       if (transcript.includes(\"brain\")) {\r\n-//         console.log(\"Wake word heard, processing command...\");\r\n-//         handleCommandWithFuse(transcript.replace(\"brain\", \"\"));\r\n-//       }\r\n-//     }\r\n-//   };\r\n-\r\n-//   const startListening = () => {\r\n-//     if (!isRecognitionActive.current) {\r\n-//       setIsListening(true);\r\n-//       recognition.current.start();\r\n-//       isRecognitionActive.current = true;\r\n-//     }\r\n-//   };\r\n-\r\n-//   const stopListening = () => {\r\n-//     if (isRecognitionActive.current) {\r\n-//       setIsListening(false);\r\n-//       recognition.current.stop();\r\n-//       isRecognitionActive.current = false;\r\n-//     }\r\n-//   };\r\n-\r\n-//   const onRecognitionEnd = () => {\r\n-//     isRecognitionActive.current = false;\r\n-//     if (isListening) {\r\n-//       startListening();\r\n-//     }\r\n-//   };\r\n-\r\n-//   const speak = (message) => {\r\n-//     const utterance = new SpeechSynthesisUtterance(message);\r\n-//     utterance.onend = () => {\r\n-//       setIsSpeaking(false);\r\n-//       if (isListening && !isRecognitionActive.current) {\r\n-//         startListening();\r\n-//       }\r\n-//     };\r\n-\r\n-//     setIsSpeaking(true);\r\n-//     if (isRecognitionActive.current) {\r\n-//       stopListening(); // Adjusted to use stopListening\r\n-//     }\r\n-//     speechSynthesis.current.speak(utterance);\r\n-//   };\r\n-\r\n-//   useEffect(() => {\r\n-//     if (isListening && !hasGreeted.current) {\r\n-//       speak(\"Hello, I'm Brane. How can I assist you today?\");\r\n-//       hasGreeted.current = true;\r\n-//     }\r\n-//   }, [isListening]);\r\n-\r\n-//   const goBack = () => {\r\n-//     if (window.history.length > 1) {\r\n-//       navigate(-1);\r\n-//     } else {\r\n-//       speak(\"Can't go back any further.\");\r\n-//     }\r\n-//   };\r\n-\r\n-//   const goForward = () => {\r\n-//     // Unfortunately, there's no direct way to check if you can go forward in the history.\r\n-//     // You might need to manage this state manually based on user navigation.\r\n-//     navigate(1);\r\n-//   };\r\n-\r\n-//   const playVideo = () => {\r\n-//     if (videoRef.current && !videoRef.current.paused) {\r\n-//       speak(\"Video is already playing.\");\r\n-//     } else if (videoRef.current) {\r\n-//       videoRef.current.play();\r\n-//       speak(\"Playing video.\");\r\n-//     } else {\r\n-//       speak(\"No video to play.\");\r\n-//     }\r\n-//   };\r\n-\r\n-//   const pauseVideo = () => {\r\n-//     if (videoRef.current && videoRef.current.paused) {\r\n-//       speak(\"Video is already paused.\");\r\n-//     } else if (videoRef.current) {\r\n-//       videoRef.current.pause();\r\n-//       speak(\"Video paused.\");\r\n-//     } else {\r\n-//       speak(\"No video to pause.\");\r\n-//     }\r\n-//   };\r\n-\r\n-//   const scrollAmount = window.innerHeight * 0.82;\r\n-\r\n-//   const scrollUp = () => {\r\n-//     if (window.pageYOffset === 0) {\r\n-//       speak(\"Already at the top of the page.\");\r\n-//     } else {\r\n-//       window.scrollBy(0, -scrollAmount);\r\n-//       speak(\"Scrolled up.\");\r\n-//     }\r\n-//   };\r\n-\r\n-//   const scrollDown = () => {\r\n-//     const maxScrollTop =\r\n-//       document.documentElement.scrollHeight - window.innerHeight;\r\n-//     if (window.pageYOffset >= maxScrollTop) {\r\n-//       speak(\"Already at the bottom of the page.\");\r\n-//     } else {\r\n-//       window.scrollBy(0, scrollAmount);\r\n-//       speak(\"Scrolled down.\");\r\n-//     }\r\n-//   };\r\n-\r\n-//   const scrollToTop = () => {\r\n-//     if (window.pageYOffset === 0) {\r\n-//       speak(\"Already at the top of the page.\");\r\n-//     } else {\r\n-//       window.scrollTo(0, 0);\r\n-//       speak(\"Scrolled to the top of the page.\");\r\n-//     }\r\n-//   };\r\n-\r\n-//   const scrollToBottom = () => {\r\n-//     const maxScrollTop =\r\n-//       document.documentElement.scrollHeight - window.innerHeight;\r\n-//     if (window.pageYOffset >= maxScrollTop) {\r\n-//       speak(\"Already at the bottom of the page.\");\r\n-//     } else {\r\n-//       window.scrollTo(0, document.body.scrollHeight);\r\n-//       speak(\"Scrolled to the bottom of the page.\");\r\n-//     }\r\n-//   };\r\n-\r\n-//   // const speak = (message) => {\r\n-//   //   const utterance = new SpeechSynthesisUtterance(message);\r\n-//   //   utterance.onend = () => {\r\n-//   //     setIsSpeaking(false);\r\n-//   //     console.log(\"Speaking ended.\");\r\n-//   //     // Only restart recognition if we're still supposed to be listening\r\n-//   //     // if (isListening) {\r\n-//   //     //   if (restartRecognitionTimeout.current) {\r\n-//   //     //     clearTimeout(restartRecognitionTimeout.current);\r\n-//   //     //   }\r\n-//   //     //   restartRecognitionTimeout.current = setTimeout(() => {\r\n-//   //     //     console.log(\"Recognition restarted.\");\r\n-//   //     //     recognition.current.start();\r\n-//   //     //   }, 100); // Delay to prevent immediate restart\r\n-//   //     // }\r\n-//   //     if (isListening && !recognition.current.starting) { // Check the flag before restarting\r\n-//   //       recognition.current.starting = true; // Set the flag when starting recognition\r\n-//   //       recognition.current.start();\r\n-//   //     }\r\n-//   //   };\r\n-\r\n-//   //   setIsSpeaking(true);\r\n-//   //   console.log(\"Speaking started.\");\r\n-//   //   recognition.current.stop(); // Stop recognition when the bot starts speaking\r\n-//   //   speechSynthesis.current.speak(utterance);\r\n-//   // };\r\n-\r\n-//   // const onRecognitionEnd = () => {\r\n-//   //   console.log(\"Recognition ended.\");\r\n-//   //   setIsRecognitionActive(false); // Update state when recognition ends\r\n-//   //   recognition.current.starting = false; // Reset the flag when recognition ends\r\n-//   //   // We now check if the recognition is already running before starting it again\r\n-//   //   if (isListening && !isSpeaking && !recognition.current?.starting) {\r\n-//   //     console.log(\"Restarting recognition.\");\r\n-//   //     recognition.current.start();\r\n-//   //   }\r\n-//   // };\r\n-\r\n-//   // useEffect(() => {\r\n-//   //   if (isListening && !hasGreeted.current) {\r\n-//   //     speak(\"Hello, I'm Brane. How can I assist you today?\");\r\n-//   //     hasGreeted.current = true;\r\n-//   //   } else if (isListening && !isSpeaking) {\r\n-//   //     recognition.current.start();\r\n-//   //   }\r\n-//   // }, [isListening, isSpeaking]);\r\n-\r\n-//   // const startListening = () => {\r\n-//   //   console.log(\"Attempting to start listening.\");\r\n-//   //   if (recognition.current && !recognition.current.starting) {\r\n-//   //     setIsListening(true);\r\n-//   //     recognition.current.starting = true; // Set the flag when starting recognition\r\n-//   //     recognition.current.start();\r\n-//   //     console.log(\"Listening started.\");\r\n-//   //   }\r\n-//   // };\r\n-\r\n-//   // const stopListening = () => {\r\n-//   //   console.log(\"Stopping listening.\");\r\n-\r\n-//   //   setIsListening(false);\r\n-//   //   recognition.current.stop();\r\n-//   //   if (speechSynthesis.current.speaking) {\r\n-//   //     speechSynthesis.current.cancel();\r\n-//   //   }\r\n-//   //   if (restartRecognitionTimeout.current) {\r\n-//   //     clearTimeout(restartRecognitionTimeout.current);\r\n-//   //   }\r\n-//   //   console.log(\"Listening stopped.\");\r\n-//   // };\r\n-//   // Handle start and stop listening logic\r\n-\r\n-//   useEffect(() => {\r\n-//     if (isListening && !hasGreeted.current) {\r\n-//       speak(\"Hello, I'm Brane. How can I assist you today?\");\r\n-//       hasGreeted.current = true;\r\n-//     }\r\n-//   }, [isListening]);\r\n-\r\n-//   // const handleCommandWithFuse = (command) => {\r\n-//   //   const fuse = new Fuse(commands, { keys: [\"utterance\"], threshold: 0.4 });\r\n-//   //   const results = fuse.search(command);\r\n-//   //   const foundCommand = results.length ? results[0].item : null;\r\n-\r\n-//   //   if (foundCommand) {\r\n-//   //     console.log(\"Command found:\", foundCommand.utterance);\r\n-//   //     speak(foundCommand.response);\r\n-//   //     if (foundCommand.route) {\r\n-//   //       navigate(foundCommand.route); // Navigate to the route specified in the command\r\n-//   //     }\r\n-//   //   } else {\r\n-//   //     console.log(\"No command found.\");\r\n-//   //     speak(\"I'm not sure how to respond to that.\");\r\n-//   //   }\r\n-//   // };\r\n-\r\n-//   const handleCommandWithFuse = (command) => {\r\n-//     const fuse = new Fuse(commands, { keys: [\"utterance\"], threshold: 0.4 });\r\n-//     const results = fuse.search(command);\r\n-//     const foundCommand = results.length ? results[0].item : null;\r\n-\r\n-//     if (foundCommand) {\r\n-//       console.log(\"Command found:\", foundCommand.utterance);\r\n-\r\n-//       if (foundCommand.action) {\r\n-//         foundCommand.action();\r\n-//       } else if (foundCommand.route) {\r\n-//         navigate(foundCommand.route);\r\n-//       }\r\n-\r\n-//       if (foundCommand.response) {\r\n-//         speak(foundCommand.response);\r\n-//       }\r\n-//     } else {\r\n-//       console.log(\"No command found.\");\r\n-//       speak(\"I'm not sure how to respond to that.\");\r\n-//     }\r\n-//   };\r\n-\r\n-//   const commands = [\r\n-//     {\r\n-//       utterance: \"Hello who are you ?\",\r\n-\r\n-//       response:\r\n-//         \"Hi! This is Brane! your Voice bot from Brane Education How can I Assist you Today ?\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"Hello\",\r\n-\r\n-//       response: \"Hi! How can I assist you today?\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"hello\",\r\n-\r\n-//       response: \"Hi! How can I assist you today?\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"Hi.\",\r\n-\r\n-//       response: \"Hello! How can I assist you today?\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"Hey there\",\r\n-\r\n-//       response: \"Hi! How can I assist you today?\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"Good morning Brane.\",\r\n-\r\n-//       response: \"Hey Hiii! Good morning  ! How can I help you?\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"Good afternoon Brane.\",\r\n-\r\n-//       response: \"Hey Hiii! Good after noon ! How can I help you?\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"Good evening Brane.\",\r\n-\r\n-//       response: \"Hey Hiii! Good evening ! How can I help you?\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"can you please take me to login page\",\r\n-//       route: \"/login\",\r\n-//       routeDescription: \"login page\",\r\n-//       response: \"Navigating to the login page.\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"go to login page\",\r\n-//       route: \"/login\",\r\n-//       routeDescription: \"login page\",\r\n-//       response: \"Navigating to the login page.\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"please take me to login page\",\r\n-//       route: \"/login\",\r\n-//       routeDescription: \"login page\",\r\n-//       response: \"Navigating to the login page.\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"Go to login page\",\r\n-//       route: \"/login\",\r\n-//       routeDescription: \"login page\",\r\n-//       response: \"Navigating to the login page.\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"open login page\",\r\n-//       route: \"/login\",\r\n-//       routeDescription: \"login page\",\r\n-//       response: \"Navigating to the login page.\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"can you please take me to signup page\",\r\n-//       route: \"/signup\",\r\n-//       routeDescription: \"signup page\",\r\n-//       response: \"Navigating to the signup page.\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"take me to signup page\",\r\n-//       route: \"/signup\",\r\n-//       routeDescription: \"signup page\",\r\n-//       response: \"Navigating to the signup page.\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"Go to signup page\",\r\n-//       route: \"/signup\",\r\n-//       routeDescription: \"signup page\",\r\n-//       response: \"Navigating to the signup page.\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"open signup page\",\r\n-//       route: \"/signup\",\r\n-//       routeDescription: \"signup page\",\r\n-//       response: \"Navigating to the signup page.\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"what are platform features\",\r\n-\r\n-//       response:\r\n-//         \"Dashboard, Dynamic time table, Learning Networks, Little Masters, Video Based Dictionary, General Search.\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"Features of platform\",\r\n-\r\n-//       response:\r\n-//         \"Dashboard, Dynamic time table, Learning Networks, Little Masters, Video Based Dictionary, General Search.\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"What does the platform offer\",\r\n-\r\n-//       response:\r\n-//         \"Dashboard, Dynamic time table, Learning Networks, Little Masters, Video Based Dictionary, General Search.\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"Say me the features of platform\",\r\n-\r\n-//       response:\r\n-//         \"Dashboard, Dynamic time table, Learning Networks, Little Masters, Video Based Dictionary, General Search.\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"Say me the services of platform\",\r\n-\r\n-//       response:\r\n-//         \"Dashboard, Dynamic time table, Learning Networks, Little Masters, Video Based Dictionary, General Search.\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"tell me the services offered by the platform\",\r\n-\r\n-//       response:\r\n-//         \"Dashboard, Dynamic time table, Learning Networks, Little Masters, Video Based Dictionary, General Search.\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"explain platform services\",\r\n-\r\n-//       response:\r\n-//         \"Dashboard, Dynamic time table, Learning Networks, Little Masters, Video Based Dictionary, General Search.\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"Give me the Parent voice of Julia Harris\",\r\n-\r\n-//       response:\r\n-//         \"Brane education has helped my son a lot in his studies. He improved a lot in his studies and is now able to score good marks in his exams\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"Play today's motivational video\",\r\n-\r\n-//       response: \"I am playing the video\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"Play today's video\",\r\n-\r\n-//       response: \"I am playing Motivational video\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"Leaders Voice\",\r\n-\r\n-//       response:\r\n-//         \"This Voice-interactive AI Platform is a game Changer. It revolutionizes education.\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"Curriculum Supported by Brane Education\",\r\n-\r\n-//       response:\r\n-//         \"we support multiple Boards let me say few Telangana State Board Andhra Pradesh Board Maharashtra Board Assam Board\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"Boards supported by the platform\",\r\n-\r\n-//       response:\r\n-//         \"we support multiple Boards let me say few Telangana State Board Andhra Pradesh Board Maharashtra Board Assam Board\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"Curriculum\",\r\n-\r\n-//       response:\r\n-//         \"we support multiple Boards let me say few Telangana State Board Andhra Pradesh Board Maharashtra Board Assam Board\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"Go to landing page\",\r\n-\r\n-//       response: \"Okay, I am taking you to the landing page.\",\r\n-\r\n-//       route: \"/childpage\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"take me to landing page\",\r\n-\r\n-//       response: \"Okay, I am taking you to the landing page.\",\r\n-\r\n-//       route: \"/childpage\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"move to landing page\",\r\n-\r\n-//       response: \"Okay, I am taking you to the landing page.\",\r\n-\r\n-//       route: \"/childpage\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"roll back to landing page\",\r\n-\r\n-//       response: \"Okay, I am taking you to the landing page.\",\r\n-\r\n-//       route: \"/childpage\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"move to landing page\",\r\n-\r\n-//       response: \"Okay, I am taking you to the landing page.\",\r\n-\r\n-//       route: \"/childpage\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"what is today's quote\",\r\n-\r\n-//       response:\r\n-//         \"Determination is the power that sees us through all our frustration and obstacles. It helps in building our willpower which is the very basis of success.\",\r\n-\r\n-//       // route: \"/childpage\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"Today's Inspirational quote\",\r\n-\r\n-//       response:\r\n-//         \"Determination is the power that sees us through all our frustration and obstacles. It helps in building our willpower which is the very basis of success.\",\r\n-\r\n-//       // route: \"/childpage\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"say me today's quote\",\r\n-\r\n-//       response:\r\n-//         \"Determination is the power that sees us through all our frustration and obstacles. It helps in building our willpower which is the very basis of success.\",\r\n-\r\n-//       // route: \"/childpage\",\r\n-//     },\r\n-//     {\r\n-//       utterance: \"go back\",\r\n-//       response: \"Going back.\",\r\n-//       action: goBack, // Note the use of an action property\r\n-//     },\r\n-//     {\r\n-//       utterance: \"go forward\",\r\n-//       response: \"Going forward.\",\r\n-//       action: goForward,\r\n-//     },\r\n-//     {\r\n-//       utterance: \"play video\",\r\n-//       // response: \"Playing video.\",\r\n-//       action: playVideo,\r\n-//     },\r\n-//     {\r\n-//       utterance: \"pause video\",\r\n-//       // response: \"Pausing video.\",\r\n-//       action: pauseVideo,\r\n-//     },\r\n-//     {\r\n-//       utterance: \"start video\",\r\n-//       // response: \"Playing video.\",\r\n-//       action: playVideo,\r\n-//     },\r\n-//     {\r\n-//       utterance: \"stop video\",\r\n-//       // response: \"Playing video.\",\r\n-//       action: pauseVideo,\r\n-//     },\r\n-//     {\r\n-//       utterance: \"scroll up\",\r\n-//       // response: \"Scrolling up.\",\r\n-//       action: scrollUp,\r\n-//     },\r\n-//     {\r\n-//       utterance: \"scroll down\",\r\n-//       // response: \"Scrolling down.\",\r\n-//       action: scrollDown,\r\n-//     },\r\n-//     {\r\n-//       utterance: \"go up\",\r\n-\r\n-//       // response: \"Scrolling up.\",\r\n-//       action: scrollUp,\r\n-//     },\r\n-//     {\r\n-//       utterance: \"go down\",\r\n-//       // response: \"Scrolling down.\",\r\n-//       action: scrollDown,\r\n-//     },\r\n-//     {\r\n-//       utterance: \"scroll to top\",\r\n-//       action: scrollToTop,\r\n-//     },\r\n-//     {\r\n-//       utterance: \"scroll to bottom\",\r\n-//       action: scrollToBottom,\r\n-//     },\r\n-//     {\r\n-//       utterance: \"go back\",\r\n-//       action: goBackRef?.current?.click, // Use goBackRef directly\r\n-//       response: \"Going back.\",\r\n-//     },\r\n-//     {\r\n-//       utterance: \"take test\",\r\n-//       action: takeTestRef?.current?.click, // Use takeTestRef directly\r\n-//       response: \"Starting the test.\",\r\n-//     },\r\n-//   ];\r\n-//   return (\r\n-//     <div className=\"speech-bot-container\">\r\n-//       <div\r\n-//         className={`button-container ${\r\n-//           isListening ? \"voicebotframeactive\" : \"voicebotframe\"\r\n-//         }`}\r\n-//       >\r\n-//         <div onClick={isListening ? stopListening : startListening}>\r\n-//           <iframe\r\n-//             src={\r\n-//               isListening\r\n-//                 ? \"https://lottie.host/?file=a89aca3f-5407-4052-82c3-2048afca7a9f/NpCdWzLSKD.json\"\r\n-//                 : \"https://lottie.host/?file=d2b6cc0e-fe95-4847-85b5-35365fca7e00/vTudpCuPZq.json\"\r\n-//             }\r\n-//             width=\"120\" // Set your desired width\r\n-//             height=\"120\" // Set your desired height\r\n-//             title={isListening ? \"Stop Animation\" : \"Start Animation\"}\r\n-//             className={isListening ? \"voicebotframeactive\" : \"voicebotframe\"}\r\n-//           ></iframe>\r\n-//           {isListening ? (\r\n-//             <div className=\"overlay\" onClick={stopListening}></div>\r\n-//           ) : (\r\n-//             <div className=\"overlay\" onClick={startListening}></div>\r\n-//           )}\r\n-//         </div>\r\n-//       </div>\r\n-//     </div>\r\n-//   );\r\n-// };\r\n-\r\n-// export default VoiceBot;\r\n"
                },
                {
                    "date": 1700643968516,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -339,8 +339,15 @@\n \r\n       response: \"You're in Homepage now\",\r\n     },\r\n     {\r\n+      utterance: \"go back to homepage\",\r\n+\r\n+      route: \"/\",\r\n+\r\n+      response: \"You're in Homepage now\",\r\n+    },\r\n+    {\r\n       utterance: \"can you please take me to login page\",\r\n \r\n       route: \"/login\",\r\n \r\n"
                },
                {
                    "date": 1700646824577,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -162,8 +162,11 @@\n       speak(\"Scrolled to the bottom of the page.\");\r\n     }\r\n   };\r\n \r\n+  const mute= () =>{\r\n+    setIsMuted(true);\r\n+  }\r\n   const speak = (message) => {\r\n     const utterance = new SpeechSynthesisUtterance(message);\r\n     utterance.onend = () => {\r\n       setIsSpeaking(false);\r\n"
                },
                {
                    "date": 1700646838164,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -165,8 +165,12 @@\n \r\n   const mute= () =>{\r\n     setIsMuted(true);\r\n   }\r\n+  const unmute= () =>{\r\n+    setIsMuted(false);\r\n+  }\r\n+\r\n   const speak = (message) => {\r\n     const utterance = new SpeechSynthesisUtterance(message);\r\n     utterance.onend = () => {\r\n       setIsSpeaking(false);\r\n"
                },
                {
                    "date": 1700646871225,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -825,8 +825,12 @@\n     {\r\n       utterance: \"brane stop the bot\",\r\n       action: stopListening,\r\n     },\r\n+    {\r\n+      utterance: \"mute the video\",\r\n+      action: mute,\r\n+    },\r\n   ];\r\n \r\n   return (\r\n     <div className=\"speech-bot-container\">\r\n"
                },
                {
                    "date": 1700646883890,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -829,8 +829,12 @@\n     {\r\n       utterance: \"mute the video\",\r\n       action: mute,\r\n     },\r\n+    {\r\n+      utterance: \"unmute the video\",\r\n+      action: unmute,\r\n+    },\r\n   ];\r\n \r\n   return (\r\n     <div className=\"speech-bot-container\">\r\n"
                },
                {
                    "date": 1700646904548,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -833,8 +833,12 @@\n     {\r\n       utterance: \"unmute the video\",\r\n       action: unmute,\r\n     },\r\n+    {\r\n+      utterance: \"stop the video sound\",\r\n+      action: mute,\r\n+    },\r\n   ];\r\n \r\n   return (\r\n     <div className=\"speech-bot-container\">\r\n"
                },
                {
                    "date": 1700646911667,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -837,8 +837,12 @@\n     {\r\n       utterance: \"stop the video sound\",\r\n       action: mute,\r\n     },\r\n+    {\r\n+      utterance: \"play the video sound\",\r\n+      action: mute,\r\n+    },\r\n   ];\r\n \r\n   return (\r\n     <div className=\"speech-bot-container\">\r\n"
                },
                {
                    "date": 1700646919944,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -839,9 +839,9 @@\n       action: mute,\r\n     },\r\n     {\r\n       utterance: \"play the video sound\",\r\n-      action: mute,\r\n+      action: unmute,\r\n     },\r\n   ];\r\n \r\n   return (\r\n"
                },
                {
                    "date": 1700646991914,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -3,9 +3,9 @@\n import Fuse from \"fuse.js\";\r\n import \"./VoiceBot.css\";\r\n import chatbotimage from \"../../assets/chatbotgif.gif\"\r\n \r\n-const VoiceBot = ({ videoRef}) => {\r\n+const VoiceBot = ({ videoRef, isMuted, setIsMuted }) => {\r\n   const [isListening, setIsListening] = useState(false);\r\n   const [isSpeaking, setIsSpeaking] = useState(false);\r\n   const recognition = useRef(null);\r\n   const speechSynthesis = useRef(window.speechSynthesis);\r\n"
                },
                {
                    "date": 1700647470242,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -169,8 +169,17 @@\n   const unmute= () =>{\r\n     setIsMuted(false);\r\n   }\r\n \r\n+  const pauseVideo = () => {\r\n+    if (videoRef.current) {\r\n+      videoRef.current.play();\r\n+      speak(\"Playing video.\");\r\n+    } else {\r\n+      speak(\"No video to play.\");\r\n+    }\r\n+  };\r\n+\r\n   const speak = (message) => {\r\n     const utterance = new SpeechSynthesisUtterance(message);\r\n     utterance.onend = () => {\r\n       setIsSpeaking(false);\r\n"
                },
                {
                    "date": 1700647498801,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -169,9 +169,9 @@\n   const unmute= () =>{\r\n     setIsMuted(false);\r\n   }\r\n \r\n-  const pauseVideo = () => {\r\n+  const muteVideo = () => {\r\n     if (videoRef.current) {\r\n       videoRef.current.play();\r\n       speak(\"Playing video.\");\r\n     } else {\r\n"
                },
                {
                    "date": 1700647656490,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -171,10 +171,9 @@\n   }\r\n \r\n   const muteVideo = () => {\r\n     if (videoRef.current) {\r\n-      videoRef.current.play();\r\n-      speak(\"Playing video.\");\r\n+      mute\r\n     } else {\r\n       speak(\"No video to play.\");\r\n     }\r\n   };\r\n"
                },
                {
                    "date": 1700647663684,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -173,9 +173,9 @@\n   const muteVideo = () => {\r\n     if (videoRef.current) {\r\n       mute\r\n     } else {\r\n-      speak(\"No video to play.\");\r\n+      speak(\"No video to mute.\");\r\n     }\r\n   };\r\n \r\n   const speak = (message) => {\r\n"
                },
                {
                    "date": 1700647680365,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -177,8 +177,16 @@\n       speak(\"No video to mute.\");\r\n     }\r\n   };\r\n \r\n+  const unmuteVideo = () => {\r\n+    if (videoRef.current) {\r\n+      unmute\r\n+    } else {\r\n+      speak(\"No video to unmute.\");\r\n+    }\r\n+  };\r\n+\r\n   const speak = (message) => {\r\n     const utterance = new SpeechSynthesisUtterance(message);\r\n     utterance.onend = () => {\r\n       setIsSpeaking(false);\r\n"
                },
                {
                    "date": 1700647714464,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -843,21 +843,21 @@\n       action: stopListening,\r\n     },\r\n     {\r\n       utterance: \"mute the video\",\r\n-      action: mute,\r\n+      action: muteVideo,\r\n     },\r\n     {\r\n       utterance: \"unmute the video\",\r\n-      action: unmute,\r\n+      action: unmuteVideo,\r\n     },\r\n     {\r\n       utterance: \"stop the video sound\",\r\n-      action: mute,\r\n+      action: muteVideo,\r\n     },\r\n     {\r\n       utterance: \"play the video sound\",\r\n-      action: unmute,\r\n+      action: unmuteVideo,\r\n     },\r\n   ];\r\n \r\n   return (\r\n"
                },
                {
                    "date": 1700647814897,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,3748 @@\n+import React, { useState, useEffect, useRef } from \"react\";\r\n+import { useNavigate, useLocation } from \"react-router-dom\";\r\n+import Fuse from \"fuse.js\";\r\n+import \"./VoiceBot.css\";\r\n+import chatbotimage from \"../../assets/chatbotgif.gif\"\r\n+\r\n+const VoiceBot = ({ videoRef, isMuted, setIsMuted }) => {\r\n+  const [isListening, setIsListening] = useState(false);\r\n+  const [isSpeaking, setIsSpeaking] = useState(false);\r\n+  const recognition = useRef(null);\r\n+  const speechSynthesis = useRef(window.speechSynthesis);\r\n+  const [hasGreeted, setHasGreeted] = useState(false);\r\n+  const navigate = useNavigate();\r\n+\r\n+\r\n+ // Initialize speech recognition\r\n+ useEffect(() => {\r\n+  recognition.current = new window.webkitSpeechRecognition();\r\n+  recognition.current.continuous = true;\r\n+  recognition.current.interimResults = false;\r\n+  recognition.current.onresult = onResult;\r\n+  recognition.current.onend = onRecognitionEnd;\r\n+  recognition.current.starting = false;\r\n+\r\n+  recognition.current.onerror = (event) => {\r\n+    console.error(\"Recognition error:\", event.error);\r\n+    if (isListening && !isSpeaking) {\r\n+      restartRecognition();\r\n+    }\r\n+  };\r\n+\r\n+  return () => {\r\n+    if (recognition.current) {\r\n+      recognition.current.abort();\r\n+    }\r\n+  };\r\n+}, []);\r\n+\r\n+  useEffect(() => {\r\n+    const checkRecognition = () => {\r\n+      if (isListening && !isSpeaking && !recognition.current.starting) {\r\n+        console.log(\"Restarting recognition because it's not active.\");\r\n+        recognition.current.starting = true;\r\n+        recognition.current.start();\r\n+        console.log(\"Restarted recognition.\");\r\n+      }\r\n+    };\r\n+\r\n+    const recognitionCheckInterval = setInterval(checkRecognition, 500); // Check every .5 second\r\n+\r\n+    return () => {\r\n+      clearInterval(recognitionCheckInterval);\r\n+    };\r\n+  }, [isListening, isSpeaking]);\r\n+\r\n+\r\n+  const historyStack = useRef([]);\r\n+\r\n+  useEffect(() => {\r\n+    return () => {\r\n+      // Clean up the listener when the component unmounts\r\n+      window.removeEventListener(\"popstate\", handlePopState);\r\n+    };\r\n+  }, []);\r\n+\r\n+  const handlePopState = () => {\r\n+    // This needs to handle both back and forward browser actions\r\n+    // Use some logic to determine whether it's a back or forward action\r\n+    // For simplicity, assume it's always back\r\n+    historyStack.current.pop();\r\n+    forwardStack.current.length = 0; // Clear forward stack on manual navigation\r\n+  };\r\n+  \r\n+\r\n+  // Add a new entry to the stack whenever navigate is called\r\n+  const customNavigate = (to, options) => {\r\n+    historyStack.current.push(to);\r\n+    navigate(to, options);\r\n+  };\r\n+\r\n+  // Listen to popstate events to update the history stack\r\n+  useEffect(() => {\r\n+    window.addEventListener(\"popstate\", handlePopState);\r\n+  }, []);\r\n+\r\n+  const forwardStack = useRef([]);\r\n+\r\n+  const goBack = () => {\r\n+    if (window.history.state && window.history.state.idx > 0) {\r\n+      window.history.back();\r\n+      speak(\"Going back\");\r\n+    } else {\r\n+      speak(\"Can't go back any further.\");\r\n+    }\r\n+  };\r\n+\r\n+  const goForward = () => {\r\n+    if (window.history.state && window.history.state.idx < window.history.length - 1) {\r\n+      window.history.forward();\r\n+      speak(\"Going forward\");\r\n+    } else {\r\n+      speak(\"No forward history available.\");\r\n+    }\r\n+  };\r\n+\r\n+  const playVideo = () => {\r\n+    if (videoRef.current) {\r\n+      videoRef.current.play();\r\n+      speak(\"Playing video.\");\r\n+    } else {\r\n+      speak(\"No video to play.\");\r\n+    }\r\n+  };\r\n+\r\n+  const pauseVideo = () => {\r\n+    if (videoRef.current) {\r\n+      videoRef.current.pause();\r\n+      speak(\"Video paused.\");\r\n+    } else {\r\n+      speak(\"No video to pause.\");\r\n+    }\r\n+  };\r\n+\r\n+  const scrollAmount = window.innerHeight * 0.82;\r\n+\r\n+  const scrollUp = () => {\r\n+    if (window.pageYOffset === 0) {\r\n+      speak(\"Already at the top of the page.\");\r\n+    } else {\r\n+      window.scrollBy(0, -scrollAmount);\r\n+      speak(\"Scrolled up.\");\r\n+    }\r\n+  };\r\n+\r\n+  const scrollDown = () => {\r\n+    const maxScrollTop =\r\n+      document.documentElement.scrollHeight - window.innerHeight;\r\n+    if (window.pageYOffset >= maxScrollTop) {\r\n+      speak(\"Already at the bottom of the page.\");\r\n+    } else {\r\n+      window.scrollBy(0, scrollAmount);\r\n+      speak(\"Scrolled down.\");\r\n+    }\r\n+  };\r\n+\r\n+  const scrollToTop = () => {\r\n+    if (window.pageYOffset === 0) {\r\n+      speak(\"Already at the top of the page.\");\r\n+    } else {\r\n+      window.scrollTo(0, 0);\r\n+      speak(\"Scrolled to the top of the page.\");\r\n+    }\r\n+  };\r\n+\r\n+  const scrollToBottom = () => {\r\n+    const maxScrollTop =\r\n+      document.documentElement.scrollHeight - window.innerHeight;\r\n+    if (window.pageYOffset >= maxScrollTop) {\r\n+      speak(\"Already at the bottom of the page.\");\r\n+    } else {\r\n+      window.scrollTo(0, document.body.scrollHeight);\r\n+      speak(\"Scrolled to the bottom of the page.\");\r\n+    }\r\n+  };\r\n+\r\n+  const mute= () =>{\r\n+    setIsMuted(true);\r\n+  }\r\n+  const unmute= () =>{\r\n+    setIsMuted(false);\r\n+  }\r\n+\r\n+  const muteVideo = () => {\r\n+    if (videoRef.current) {\r\n+      setIsMuted(true);\r\n+    } else {\r\n+      speak(\"No video to mute.\");\r\n+    }\r\n+  };\r\n+\r\n+  const unmuteVideo = () => {\r\n+    if (videoRef.current) {\r\n+      setIsMuted(false);\r\n+    } else {\r\n+      speak(\"No video to unmute.\");\r\n+    }\r\n+  };\r\n+\r\n+  const speak = (message) => {\r\n+    const utterance = new SpeechSynthesisUtterance(message);\r\n+    utterance.onend = () => {\r\n+      setIsSpeaking(false);\r\n+      // Restart recognition after speaking has ended\r\n+      if (isListening) {\r\n+        restartRecognition();\r\n+      }\r\n+    };\r\n+  \r\n+    setIsSpeaking(true);\r\n+    // Stop recognition when the bot starts speaking\r\n+    if (recognition.current) {\r\n+      recognition.current.abort();\r\n+    }\r\n+    speechSynthesis.current.speak(utterance);\r\n+  };\r\n+  \r\n+\r\n+  const restartRecognition = () => {\r\n+    // Check if recognition is not already started and if the bot is set to listen\r\n+    if (recognition.current && !recognition.current.starting && isListening && !isSpeaking) {\r\n+      recognition.current.abort(); // Ensure any ongoing recognition is stopped\r\n+      recognition.current.starting = true;\r\n+      recognition.current.start();\r\n+    }\r\n+  };\r\n+  \r\n+    // Restart recognition when bot finishes speaking and isListening is true\r\n+    useEffect(() => {\r\n+      if (!isSpeaking && isListening) {\r\n+        restartRecognition();\r\n+      }\r\n+    }, [isSpeaking, isListening]);\r\n+\r\n+  const onResult = (event) => {\r\n+    const resultIndex = event.resultIndex;\r\n+    const transcript = event.results[resultIndex][0].transcript\r\n+      .trim()\r\n+      .toLowerCase();\r\n+\r\n+    if (event.results[resultIndex].isFinal) {\r\n+      console.log(`Recognized text: ${transcript}`);\r\n+      if (transcript.includes(\"brain\")) {\r\n+        console.log(\"Wake word heard, processing command...\");\r\n+        handleCommandWithFuse(transcript.replace(\"brain\", \"\"));\r\n+      }\r\n+    }\r\n+  };\r\n+\r\n+  const onRecognitionEnd = () => {\r\n+    recognition.current.starting = false;\r\n+    if (isListening && !isSpeaking) {\r\n+      restartRecognition();\r\n+    }\r\n+  };\r\n+\r\n+  useEffect(() => {\r\n+    if (isListening && !hasGreeted) {\r\n+      speak(\"Hello, I'm Brane. How can I help you today?\");\r\n+      setHasGreeted(true);\r\n+    }\r\n+  }, [isListening, hasGreeted]);\r\n+\r\n+\r\n+  // Updated startListening function\r\n+  const startListening = () => {\r\n+    setIsListening(true);\r\n+    if (!recognition.current.starting) {\r\n+      restartRecognition();\r\n+    }\r\n+  };\r\n+\r\n+  // Updated stopListening function\r\n+  const stopListening = () => {\r\n+    setIsListening(false);\r\n+    if (speechSynthesis.current.speaking) {\r\n+      speechSynthesis.current.cancel();\r\n+    }\r\n+    recognition.current.abort();\r\n+  };\r\n+\r\n+\r\n+  const handleCommandWithFuse = (command) => {\r\n+    const fuse = new Fuse(commands, { keys: [\"utterance\"], threshold: 0.4 });\r\n+    const results = fuse.search(command);\r\n+    const foundCommand = results.length ? results[0].item : null;\r\n+\r\n+    if (foundCommand) {\r\n+      console.log(\"Command found:\", foundCommand.utterance);\r\n+\r\n+      if (foundCommand.action) {\r\n+        foundCommand.action();\r\n+      } else if (foundCommand.route) {\r\n+        navigate(foundCommand.route);\r\n+      }\r\n+\r\n+      // Speak after performing the action or navigation\r\n+      speak(foundCommand.response);\r\n+    } else {\r\n+      console.log(\"No command found.\");\r\n+      speak(\"I'm not sure how to respond to that.\");\r\n+    }\r\n+  };\r\n+\r\n+  const commands = [\r\n+    {\r\n+      utterance: \"Hello who are you ?\",\r\n+\r\n+      response:\r\n+        \"Hi! This is Brane! your Voice bot from Brane Education How can I Assist you Today ?\",\r\n+    },\r\n+\r\n+    {\r\n+      utterance: \"Hello\",\r\n+\r\n+      response: \"Hi! How can I assist you today?\",\r\n+    },\r\n+\r\n+    {\r\n+      utterance: \"hello\",\r\n+\r\n+      response: \"Hi! How can I assist you today?\",\r\n+    },\r\n+\r\n+    {\r\n+      utterance: \"Hi.\",\r\n+\r\n+      response: \"Hello! How can I assist you today?\",\r\n+    },\r\n+\r\n+    {\r\n+      utterance: \"Hey there\",\r\n+\r\n+      response: \"Hi! How can I assist you today?\",\r\n+    },\r\n+\r\n+    {\r\n+      utterance: \"Good morning Brane.\",\r\n+\r\n+      response: \"Hey Hiii! Good morning  ! How can I help you?\",\r\n+    },\r\n+\r\n+    {\r\n+      utterance: \"Good afternoon Brane.\",\r\n+\r\n+      response: \"Hey Hiii! Good after noon ! How can I help you?\",\r\n+    },\r\n+\r\n+    {\r\n+      utterance: \"Good evening Brane.\",\r\n+\r\n+      response: \"Hey Hiii! Good evening ! How can I help you?\",\r\n+    },\r\n+\r\n+    {\r\n+      utterance: \"take me to homepage\",\r\n+\r\n+      route: \"/\",\r\n+\r\n+      response: \"You're in Homepage now\",\r\n+    },\r\n+    {\r\n+      utterance: \"open homepage\",\r\n+\r\n+      route: \"/\",\r\n+\r\n+      response: \"You're in Homepage now\",\r\n+    },\r\n+    {\r\n+      utterance: \"go to homepage\",\r\n+\r\n+      route: \"/\",\r\n+\r\n+      response: \"You're in Homepage now\",\r\n+    },\r\n+    {\r\n+      utterance: \"go back to homepage\",\r\n+\r\n+      route: \"/\",\r\n+\r\n+      response: \"You're in Homepage now\",\r\n+    },\r\n+    {\r\n+      utterance: \"can you please take me to login page\",\r\n+\r\n+      route: \"/login\",\r\n+\r\n+      response: \"Here's the Login Page, Please Login\",\r\n+    },\r\n+\r\n+    {\r\n+      utterance: \"please take me to login page\",\r\n+\r\n+      route: \"/login\",\r\n+\r\n+      response: \"Here's the Login Page, Please Login\",\r\n+    },\r\n+\r\n+    {\r\n+      utterance: \"Go to login page\",\r\n+\r\n+      route: \"/login\",\r\n+\r\n+      response: \"Here's the Login Page, Please Login\",\r\n+    },\r\n+\r\n+    {\r\n+      utterance: \"open login page\",\r\n+\r\n+      route: \"/login\",\r\n+\r\n+      response: \"Here's the Login Page, Please Login\",\r\n+    },\r\n+\r\n+    {\r\n+      utterance: \"can you please take me to signup page\",\r\n+\r\n+      route: \"/signup\",\r\n+\r\n+      response: \"Here's the signup page. Please proceed With Registration.\",\r\n+    },\r\n+\r\n+    {\r\n+      utterance: \"take me to signup page\",\r\n+\r\n+      route: \"/signup\",\r\n+\r\n+      response: \"Here's the signup page. Please proceed With Registration.\",\r\n+    },\r\n+\r\n+    {\r\n+      utterance: \"Go to signup page\",\r\n+\r\n+      route: \"/signup\",\r\n+\r\n+      response: \"Here's the signup page. Please proceed With Registration.\",\r\n+    },\r\n+\r\n+    {\r\n+      utterance: \"open signup page\",\r\n+\r\n+      route: \"/signup\",\r\n+\r\n+      response: \"Here's the signup page. Please proceed With Registration.\",\r\n+    },\r\n+\r\n+    {\r\n+      utterance: \"Go to face id\",\r\n+\r\n+      route: \"/login/faceid\",\r\n+\r\n+      response: \"Here's Face ID Login. Please proceed.\",\r\n+    },\r\n+\r\n+    {\r\n+      utterance: \"Go to face id login\",\r\n+\r\n+      route: \"/login/faceid\",\r\n+\r\n+      response: \"Here's Face ID Login. Please proceed.\",\r\n+    },\r\n+    {\r\n+      utterance: \"Go to face login\",\r\n+\r\n+      route: \"/login/faceid\",\r\n+\r\n+      response: \"Here's Face ID Login. Please proceed.\",\r\n+    },\r\n+\r\n+    {\r\n+      utterance: \"login with face id\",\r\n+\r\n+      route: \"/login/faceid\",\r\n+\r\n+      response: \"Here's Face ID Login. Please proceed.\",\r\n+    },\r\n+\r\n+    {\r\n+      utterance: \"login with face\",\r\n+\r\n+      route: \"/login/faceid\",\r\n+\r\n+      response: \"Here's Face ID Login. Please proceed.\",\r\n+    },\r\n+\r\n+    {\r\n+      utterance: \"i want to login with face\",\r\n+\r\n+      route: \"/login/faceid\",\r\n+\r\n+      response: \"Here's Face ID Login. Please proceed.\",\r\n+    },\r\n+\r\n+    {\r\n+      utterance: \"login with voice\",\r\n+\r\n+      route: \"/login/voiceid\",\r\n+\r\n+      response: \"Here's Voice Login. Please proceed.\",\r\n+    },\r\n+\r\n+    {\r\n+      utterance: \"i want to login with voice\",\r\n+\r\n+      route: \"/login/voiceid\",\r\n+\r\n+      response: \"Here's Voice Login. Please proceed.\",\r\n+    },\r\n+\r\n+    {\r\n+      utterance: \"go to voice login\",\r\n+\r\n+      route: \"/login/voiceid\",\r\n+\r\n+      response: \"Here's Voice Login. Please proceed.\",\r\n+    },\r\n+\r\n+    {\r\n+      utterance: \"login with voice\",\r\n+\r\n+      route: \"/login/voiceid\",\r\n+\r\n+      response: \"Here's Voice Login. Please proceed.\",\r\n+    },\r\n+\r\n+    {\r\n+      utterance: \"login with mobile\",\r\n+\r\n+      route: \"/login/mobile\",\r\n+\r\n+      response: \"Here's Mobile Login. Please proceed.\",\r\n+    },\r\n+\r\n+    {\r\n+      utterance: \"i want to login with mobile\",\r\n+\r\n+      route: \"/login/mobile\",\r\n+\r\n+      response: \"Here's Mobile Login. Please proceed.\",\r\n+    },\r\n+    {\r\n+      utterance: \"go to mobile login\",\r\n+\r\n+      route: \"/login/mobile\",\r\n+\r\n+      response: \"Here's Mobile Login. Please proceed.\",\r\n+    },\r\n+    {\r\n+      utterance: \"go to about page\",\r\n+\r\n+      route: \"/aboutus\",\r\n+\r\n+      response: \"This is About us.\",\r\n+    },\r\n+    {\r\n+      utterance: \"go to about us page\",\r\n+\r\n+      route: \"/aboutus\",\r\n+\r\n+      response: \"This is About us.\",\r\n+    },\r\n+    {\r\n+      utterance: \"open about us page\",\r\n+\r\n+      route: \"/aboutus\",\r\n+\r\n+      response: \"This is About us.\",\r\n+    },\r\n+    {\r\n+      utterance: \"open about page\",\r\n+\r\n+      route: \"/aboutus\",\r\n+\r\n+      response: \"This is About us.\",\r\n+    },\r\n+    {\r\n+      utterance: \"take me to about page\",\r\n+\r\n+      route: \"/aboutus\",\r\n+\r\n+      response: \"This is About us.\",\r\n+    },\r\n+    {\r\n+      utterance: \"take me to about us page\",\r\n+\r\n+      route: \"/aboutus\",\r\n+\r\n+      response: \"This is About us.\",\r\n+    },\r\n+\r\n+    {\r\n+      utterance: \"go to contact page\",\r\n+\r\n+      route: \"/contactus\",\r\n+\r\n+      response: \"You can contact us from here\",\r\n+    },\r\n+    {\r\n+      utterance: \"go to contact us page\",\r\n+\r\n+      route: \"/contactus\",\r\n+\r\n+      response: \"You can contact us from here\",\r\n+    },\r\n+    {\r\n+      utterance: \"open contact us page\",\r\n+\r\n+      route: \"/contactus\",\r\n+\r\n+      response: \"You can contact us from here\",\r\n+    },\r\n+    {\r\n+      utterance: \"open contact page\",\r\n+\r\n+      route: \"/contactus\",\r\n+\r\n+      response: \"You can contact us from here\",\r\n+    },\r\n+    {\r\n+      utterance: \"take me to about page\",\r\n+\r\n+      route: \"/contactus\",\r\n+\r\n+      response: \"You can contact us from here\",\r\n+    },\r\n+    {\r\n+      utterance: \"take me to contact us page\",\r\n+\r\n+      route: \"/contactus\",\r\n+\r\n+      response: \"You can contact us from here\",\r\n+    },\r\n+\r\n+\r\n+    {\r\n+      utterance: \"what are platform features\",\r\n+\r\n+      response:\r\n+        \"Dashboard, Dynamic time table, Learning Networks, Little Masters, Video Based Dictionary, General Search.\",\r\n+    },\r\n+\r\n+    {\r\n+      utterance: \"Features of platform\",\r\n+\r\n+      response:\r\n+        \"Dashboard, Dynamic time table, Learning Networks, Little Masters, Video Based Dictionary, General Search.\",\r\n+    },\r\n+\r\n+    {\r\n+      utterance: \"What does the platform offer\",\r\n+\r\n+      response:\r\n+        \"Dashboard, Dynamic time table, Learning Networks, Little Masters, Video Based Dictionary, General Search.\",\r\n+    },\r\n+\r\n+    {\r\n+      utterance: \"Say me the features of platform\",\r\n+\r\n+      response:\r\n+        \"Dashboard, Dynamic time table, Learning Networks, Little Masters, Video Based Dictionary, General Search.\",\r\n+    },\r\n+\r\n+    {\r\n+      utterance: \"Say me the services of platform\",\r\n+\r\n+      response:\r\n+        \"Dashboard, Dynamic time table, Learning Networks, Little Masters, Video Based Dictionary, General Search.\",\r\n+    },\r\n+\r\n+    {\r\n+      utterance: \"tell me the services offered by the platform\",\r\n+\r\n+      response:\r\n+        \"Dashboard, Dynamic time table, Learning Networks, Little Masters, Video Based Dictionary, General Search.\",\r\n+    },\r\n+\r\n+    {\r\n+      utterance: \"explain platform services\",\r\n+\r\n+      response:\r\n+        \"Dashboard, Dynamic time table, Learning Networks, Little Masters, Video Based Dictionary, General Search.\",\r\n+    },\r\n+\r\n+    {\r\n+      utterance: \"Give me the Parent voice of Julia Harris\",\r\n+\r\n+      response:\r\n+        \"Brane education has helped my son a lot in his studies. He improved a lot in his studies and is now able to score good marks in his exams\",\r\n+    },\r\n+\r\n+    {\r\n+      utterance: \"Leaders Voice\",\r\n+\r\n+      response:\r\n+        \"This Voice-interactive AI Platform is a game Changer. It revolutionizes education.\",\r\n+    },\r\n+\r\n+    {\r\n+      utterance: \"Curriculum Supported by Brane Education\",\r\n+\r\n+      response:\r\n+        \"we support multiple Boards let me say few Telangana State Board Andhra Pradesh Board Maharashtra Board Assam Board\",\r\n+    },\r\n+\r\n+    {\r\n+      utterance: \"Boards supported by the platform\",\r\n+\r\n+      response:\r\n+        \"we support multiple Boards let me say few Telangana State Board Andhra Pradesh Board Maharashtra Board Assam Board\",\r\n+    },\r\n+\r\n+    {\r\n+      utterance: \"Curriculum\",\r\n+\r\n+      response:\r\n+        \"we support multiple Boards let me say few Telangana State Board Andhra Pradesh Board Maharashtra Board Assam Board\",\r\n+    },\r\n+\r\n+    // {\r\n+    //   utterance: \"Go to landing page\",\r\n+\r\n+    //   response: \"Okay, I am taking you to the landing page.\",\r\n+\r\n+    //   route: \"/childpage\",\r\n+    // },\r\n+\r\n+    // {\r\n+    //   utterance: \"take me to landing page\",\r\n+\r\n+    //   response: \"Okay, I am taking you to the landing page.\",\r\n+\r\n+    //   route: \"/childpage\",\r\n+    // },\r\n+\r\n+    // {\r\n+    //   utterance: \"move to landing page\",\r\n+\r\n+    //   response: \"Okay, I am taking you to the landing page.\",\r\n+\r\n+    //   route: \"/childpage\",\r\n+    // },\r\n+\r\n+    // {\r\n+    //   utterance: \"roll back to landing page\",\r\n+\r\n+    //   response: \"Okay, I am taking you to the landing page.\",\r\n+\r\n+    //   route: \"/childpage\",\r\n+    // },\r\n+\r\n+    // {\r\n+    //   utterance: \"move to landing page\",\r\n+\r\n+    //   response: \"Okay, I am taking you to the landing page.\",\r\n+\r\n+    //   route: \"/childpage\",\r\n+    // },\r\n+\r\n+    {\r\n+      utterance: \"what is today's quote\",\r\n+\r\n+      response:\r\n+        \"Determination is the power that sees us through all our frustration and obstacles. It helps in building our willpower which is the very basis of success.\",\r\n+\r\n+      route: \"/childpage\",\r\n+    },\r\n+\r\n+    {\r\n+      utterance: \"Today's Inspirational quote\",\r\n+\r\n+      response:\r\n+        \"Determination is the power that sees us through all our frustration and obstacles. It helps in building our willpower which is the very basis of success.\",\r\n+\r\n+      route: \"/childpage\",\r\n+    },\r\n+\r\n+    {\r\n+      utterance: \"say me today's quote\",\r\n+\r\n+      response:\r\n+        \"Determination is the power that sees us through all our frustration and obstacles. It helps in building our willpower which is the very basis of success.\",\r\n+\r\n+      route: \"/childpage\",\r\n+    },\r\n+    {\r\n+      utterance: \"go back\",\r\n+      response: \"\",\r\n+      action: goBack, // Note the use of an action property\r\n+    },\r\n+    {\r\n+      utterance: \"go forward\",\r\n+      response: \"\",\r\n+      action: goForward,\r\n+    },\r\n+    {\r\n+      utterance: \"play video\",\r\n+      // response: \"Playing video.\",\r\n+      action: playVideo,\r\n+    },\r\n+    {\r\n+      utterance: \"pause video\",\r\n+      // response: \"Pausing video.\",\r\n+      action: pauseVideo,\r\n+    },\r\n+    {\r\n+      utterance: \"start video\",\r\n+      // response: \"Playing video.\",\r\n+      action: playVideo,\r\n+    },\r\n+    {\r\n+      utterance: \"stop video\",\r\n+      // response: \"Playing video.\",\r\n+      action: pauseVideo,\r\n+    },\r\n+    {\r\n+      utterance: \"scroll up\",\r\n+      // response: \"Scrolling up.\",\r\n+      action: scrollUp,\r\n+    },\r\n+    {\r\n+      utterance: \"scroll down\",\r\n+      // response: \"Scrolling down.\",\r\n+      action: scrollDown,\r\n+    },\r\n+    {\r\n+      utterance: \"go up\",\r\n+\r\n+      // response: \"Scrolling up.\",\r\n+      action: scrollUp,\r\n+    },\r\n+    {\r\n+      utterance: \"go down\",\r\n+      // response: \"Scrolling down.\",\r\n+      action: scrollDown,\r\n+    },\r\n+    {\r\n+      utterance: \"scroll to top\",\r\n+      action: scrollToTop,\r\n+    },\r\n+    {\r\n+      utterance: \"scroll to bottom\",\r\n+      action: scrollToBottom,\r\n+    },\r\n+    {\r\n+      utterance: \"brane stop\",\r\n+      action: stopListening,\r\n+    },\r\n+    {\r\n+      utterance: \"brane turn off\",\r\n+      action: stopListening,\r\n+    },\r\n+    {\r\n+      utterance: \"brane stop the bot\",\r\n+      action: stopListening,\r\n+    },\r\n+    {\r\n+      utterance: \"mute the video\",\r\n+      action: muteVideo,\r\n+    },\r\n+    {\r\n+      utterance: \"unmute the video\",\r\n+      action: unmuteVideo,\r\n+    },\r\n+    {\r\n+      utterance: \"stop the video sound\",\r\n+      action: muteVideo,\r\n+    },\r\n+    {\r\n+      utterance: \"play the video sound\",\r\n+      action: unmuteVideo,\r\n+    },\r\n+  ];\r\n+\r\n+  return (\r\n+    <div className=\"speech-bot-container\">\r\n+      <div\r\n+        className={`button-container ${\r\n+          isListening ? \"voicebotframeactive\" : \"voicebotframe\"\r\n+        }`}\r\n+      >\r\n+        {/* <button onClick={isListening ? stopListening : startListening}>\r\n+          {isListening ? \"Stop\" : \"Start\"} Animation\r\n+        </button> */}\r\n+        <img \r\n+        className=\"botimage\"\r\n+          src={chatbotimage} alt=\"\" \r\n+          onClick={isListening ? stopListening : startListening}  \r\n+        />\r\n+\r\n+      </div>\r\n+    </div>\r\n+  );\r\n+};\r\n+\r\n+export default VoiceBot;\r\n+\r\n+\r\n+{/* // import React, { useState, useEffect, useRef } from \"react\";\r\n+// import { useNavigate, useLocation } from \"react-router-dom\";\r\n+// import Fuse from \"fuse.js\";\r\n+// import \"./VoiceBot.css\";\r\n+\r\n+// const VoiceBot = ({ videoRef }) => {\r\n+//   const [isListening, setIsListening] = useState(false);\r\n+//   const [isSpeaking, setIsSpeaking] = useState(false);\r\n+//   const recognition = useRef(null);\r\n+//   const speechSynthesis = useRef(window.speechSynthesis);\r\n+//   const [hasGreeted, setHasGreeted] = useState(false);\r\n+//   const navigate = useNavigate();\r\n+\r\n+//   useEffect(() => {\r\n+//     recognition.current = new window.webkitSpeechRecognition();\r\n+//     recognition.current.continuous = true;\r\n+//     recognition.current.interimResults = false;\r\n+//     recognition.current.onresult = onResult;\r\n+//     recognition.current.onend = onRecognitionEnd;\r\n+//     recognition.current.starting = false;\r\n+\r\n+//     // Simplified error handling, removed specific handling for 'no-speech'\r\n+//     recognition.current.onerror = (event) => {\r\n+//       console.error(\"Recognition error:\", event.error);\r\n+//       // Check if listening is true and the bot isn't speaking\r\n+//       if (isListening && !isSpeaking) {\r\n+//         // Restart recognition\r\n+//         restartRecognition();\r\n+//       }\r\n+//     };\r\n+\r\n+//     return () => {\r\n+//       if (recognition.current) {\r\n+//         recognition.current.abort();\r\n+//       }\r\n+//     };\r\n+//   }, []);\r\n+\r\n+//   useEffect(() => {\r\n+//     const checkRecognition = () => {\r\n+//       if (isListening && !isSpeaking && !recognition.current.starting) {\r\n+//         console.log(\"Restarting recognition because it's not active.\");\r\n+//         recognition.current.starting = true;\r\n+//         recognition.current.start();\r\n+//         console.log(\"Restarted recognition.\");\r\n+//       }\r\n+//     };\r\n+\r\n+//     const recognitionCheckInterval = setInterval(checkRecognition, 100); // Check every 1 second\r\n+\r\n+//     return () => {\r\n+//       clearInterval(recognitionCheckInterval);\r\n+//     };\r\n+//   }, [isListening, isSpeaking]);\r\n+\r\n+//   const restartRecognition = () => {\r\n+//     if (recognition.current.starting) {\r\n+//       console.log(\"Recognition is already starting or running.\");\r\n+//       return;\r\n+//     }\r\n+\r\n+//     recognition.current.abort(); // Stop any existing recognition process\r\n+//     recognition.current.starting = true;\r\n+//     recognition.current.start();\r\n+//     console.log(\"Recognition restarted.\");\r\n+//   };\r\n+\r\n+//   const historyStack = useRef([]);\r\n+\r\n+//   useEffect(() => {\r\n+//     return () => {\r\n+//       // Clean up the listener when the component unmounts\r\n+//       window.removeEventListener(\"popstate\", handlePopState);\r\n+//     };\r\n+//   }, []);\r\n+\r\n+//   const handlePopState = () => {\r\n+//     // This needs to handle both back and forward browser actions\r\n+//     // Use some logic to determine whether it's a back or forward action\r\n+//     // For simplicity, assume it's always back\r\n+//     historyStack.current.pop();\r\n+//     forwardStack.current.length = 0; // Clear forward stack on manual navigation\r\n+//   };\r\n+  \r\n+\r\n+//   // Add a new entry to the stack whenever navigate is called\r\n+//   const customNavigate = (to, options) => {\r\n+//     historyStack.current.push(to);\r\n+//     navigate(to, options);\r\n+//   };\r\n+\r\n+//   // Listen to popstate events to update the history stack\r\n+//   useEffect(() => {\r\n+//     window.addEventListener(\"popstate\", handlePopState);\r\n+//   }, []);\r\n+\r\n+//   const forwardStack = useRef([]);\r\n+\r\n+//   const goBack = () => {\r\n+//     if (window.history.state && window.history.state.idx > 0) {\r\n+//       window.history.back();\r\n+//       speak(\"Going back\");\r\n+//     } else {\r\n+//       speak(\"Can't go back any further.\");\r\n+//     }\r\n+//   };\r\n+\r\n+//   const goForward = () => {\r\n+//     if (window.history.state && window.history.state.idx < window.history.length - 1) {\r\n+//       window.history.forward();\r\n+//       speak(\"Going forward\");\r\n+//     } else {\r\n+//       speak(\"No forward history available.\");\r\n+//     }\r\n+//   };\r\n+\r\n+//   const playVideo = () => {\r\n+//     if (videoRef.current) {\r\n+//       videoRef.current.play();\r\n+//       speak(\"Playing video.\");\r\n+//     } else {\r\n+//       speak(\"No video to play.\");\r\n+//     }\r\n+//   };\r\n+\r\n+//   const pauseVideo = () => {\r\n+//     if (videoRef.current) {\r\n+//       videoRef.current.pause();\r\n+//       speak(\"Video paused.\");\r\n+//     } else {\r\n+//       speak(\"No video to pause.\");\r\n+//     }\r\n+//   };\r\n+\r\n+//   const scrollAmount = window.innerHeight * 0.82;\r\n+\r\n+//   const scrollUp = () => {\r\n+//     if (window.pageYOffset === 0) {\r\n+//       speak(\"Already at the top of the page.\");\r\n+//     } else {\r\n+//       window.scrollBy(0, -scrollAmount);\r\n+//       speak(\"Scrolled up.\");\r\n+//     }\r\n+//   };\r\n+\r\n+//   const scrollDown = () => {\r\n+//     const maxScrollTop =\r\n+//       document.documentElement.scrollHeight - window.innerHeight;\r\n+//     if (window.pageYOffset >= maxScrollTop) {\r\n+//       speak(\"Already at the bottom of the page.\");\r\n+//     } else {\r\n+//       window.scrollBy(0, scrollAmount);\r\n+//       speak(\"Scrolled down.\");\r\n+//     }\r\n+//   };\r\n+\r\n+//   const scrollToTop = () => {\r\n+//     if (window.pageYOffset === 0) {\r\n+//       speak(\"Already at the top of the page.\");\r\n+//     } else {\r\n+//       window.scrollTo(0, 0);\r\n+//       speak(\"Scrolled to the top of the page.\");\r\n+//     }\r\n+//   };\r\n+\r\n+//   const scrollToBottom = () => {\r\n+//     const maxScrollTop =\r\n+//       document.documentElement.scrollHeight - window.innerHeight;\r\n+//     if (window.pageYOffset >= maxScrollTop) {\r\n+//       speak(\"Already at the bottom of the page.\");\r\n+//     } else {\r\n+//       window.scrollTo(0, document.body.scrollHeight);\r\n+//       speak(\"Scrolled to the bottom of the page.\");\r\n+//     }\r\n+//   };\r\n+\r\n+//   const speak = (message) => {\r\n+//     console.log(\"speak function called with message:\", message);\r\n+//     const utterance = new SpeechSynthesisUtterance(message);\r\n+//     utterance.onend = () => {\r\n+//       setIsSpeaking(false);\r\n+//       console.log(\"Speaking ended.\");\r\n+//       if (isListening && !recognition.current.starting) {\r\n+//         console.log(\"Restarting recognition after speaking.\");\r\n+//         recognition.current.starting = true;\r\n+//         recognition.current.start();\r\n+//         console.log(\"Restarted recognition after speaking.\");\r\n+//       }\r\n+//     };\r\n+\r\n+//     setIsSpeaking(true);\r\n+//     console.log(\"Speaking started.\");\r\n+//     recognition.current.stop(); // Ensure to stop recognition before speaking\r\n+//     speechSynthesis.current.speak(utterance);\r\n+//   };\r\n+\r\n+//   const onResult = (event) => {\r\n+//     const resultIndex = event.resultIndex;\r\n+//     const transcript = event.results[resultIndex][0].transcript\r\n+//       .trim()\r\n+//       .toLowerCase();\r\n+\r\n+//     if (event.results[resultIndex].isFinal) {\r\n+//       console.log(`Recognized text: ${transcript}`);\r\n+//       if (transcript.includes(\"brain\")) {\r\n+//         console.log(\"Wake word heard, processing command...\");\r\n+//         handleCommandWithFuse(transcript.replace(\"brain\", \"\"));\r\n+//       }\r\n+//     }\r\n+//   };\r\n+\r\n+//   const onRecognitionEnd = () => {\r\n+//     recognition.current.starting = false;\r\n+//     if (isListening && !isSpeaking) {\r\n+//       restartRecognition();\r\n+//     }\r\n+//   };\r\n+\r\n+//   useEffect(() => {\r\n+//     if (isListening) {\r\n+//       if (!hasGreeted) {\r\n+//         speak(\"Hello, I'm Brane. How can I help you today?\");\r\n+//         setHasGreeted(true);\r\n+//       } else {\r\n+//         speak(\"Listening.\");\r\n+//       }\r\n+//     }\r\n+//   }, [isListening, hasGreeted]);\r\n+\r\n+\r\n+//   const startListening = () => {\r\n+//     if (!recognition.current.starting) {\r\n+//       setIsListening(true);\r\n+//       restartRecognition();\r\n+//     }\r\n+//   };\r\n+\r\n+//   const stopListening = () => {\r\n+//     setIsListening(false);\r\n+//     recognition.current.abort();\r\n+//     if (speechSynthesis.current.speaking) {\r\n+//       speechSynthesis.current.cancel();\r\n+//     }\r\n+//   };\r\n+\r\n+//   const handleCommandWithFuse = (command) => {\r\n+//     const fuse = new Fuse(commands, { keys: [\"utterance\"], threshold: 0.4 });\r\n+//     const results = fuse.search(command);\r\n+//     const foundCommand = results.length ? results[0].item : null;\r\n+\r\n+//     if (foundCommand) {\r\n+//       console.log(\"Command found:\", foundCommand.utterance);\r\n+\r\n+//       if (foundCommand.action) {\r\n+//         foundCommand.action();\r\n+//       } else if (foundCommand.route) {\r\n+//         navigate(foundCommand.route);\r\n+//       }\r\n+\r\n+//       // Speak after performing the action or navigation\r\n+//       speak(foundCommand.response);\r\n+//     } else {\r\n+//       console.log(\"No command found.\");\r\n+//       speak(\"I'm not sure how to respond to that.\");\r\n+//     }\r\n+//   };\r\n+\r\n+//   const commands = [\r\n+//     {\r\n+//       utterance: \"Hello who are you ?\",\r\n+\r\n+//       response:\r\n+//         \"Hi! This is Brane! your Voice bot from Brane Education How can I Assist you Today ?\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"Hello\",\r\n+\r\n+//       response: \"Hi! How can I assist you today?\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"hello\",\r\n+\r\n+//       response: \"Hi! How can I assist you today?\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"Hi.\",\r\n+\r\n+//       response: \"Hello! How can I assist you today?\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"Hey there\",\r\n+\r\n+//       response: \"Hi! How can I assist you today?\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"Good morning Brane.\",\r\n+\r\n+//       response: \"Hey Hiii! Good morning  ! How can I help you?\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"Good afternoon Brane.\",\r\n+\r\n+//       response: \"Hey Hiii! Good after noon ! How can I help you?\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"Good evening Brane.\",\r\n+\r\n+//       response: \"Hey Hiii! Good evening ! How can I help you?\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"can you please take me to login page\",\r\n+\r\n+//       route: \"/login\",\r\n+\r\n+//       response: \"Here's the Login Page, Please Login\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"please take me to login page\",\r\n+\r\n+//       route: \"/login\",\r\n+\r\n+//       response: \"Here's the Login Page, Please Login\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"Go to login page\",\r\n+\r\n+//       route: \"/login\",\r\n+\r\n+//       response: \"Here's the Login Page, Please Login\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"open login page\",\r\n+\r\n+//       route: \"/login\",\r\n+\r\n+//       response: \"Here's the Login Page, Please Login\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"can you please take me to signup page\",\r\n+\r\n+//       route: \"/signup\",\r\n+\r\n+//       response: \"Here's the signup page. Please proceed With Registration.\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"take me to signup page\",\r\n+\r\n+//       route: \"/signup\",\r\n+\r\n+//       response: \"Here's the signup page. Please proceed With Registration.\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"Go to signup page\",\r\n+\r\n+//       route: \"/signup\",\r\n+\r\n+//       response: \"Here's the signup page. Please proceed With Registration.\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"open signup page\",\r\n+\r\n+//       route: \"/signup\",\r\n+\r\n+//       response: \"Here's the signup page. Please proceed With Registration.\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"Go to face id\",\r\n+\r\n+//       route: \"/login/faceid\",\r\n+\r\n+//       response: \"Here's Face ID Login. Please proceed.\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"Go to face id login\",\r\n+\r\n+//       route: \"/login/faceid\",\r\n+\r\n+//       response: \"Here's Face ID Login. Please proceed.\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"login with face id\",\r\n+\r\n+//       route: \"/login/faceid\",\r\n+\r\n+//       response: \"Here's Face ID Login. Please proceed.\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"login with face\",\r\n+\r\n+//       route: \"/login/faceid\",\r\n+\r\n+//       response: \"Here's Face ID Login. Please proceed.\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"i want to login with face\",\r\n+\r\n+//       route: \"/login/faceid\",\r\n+\r\n+//       response: \"Here's Face ID Login. Please proceed.\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"login with voice\",\r\n+\r\n+//       route: \"/login/voiceid\",\r\n+\r\n+//       response: \"Here's Voice Login. Please proceed.\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"i want to login with voice\",\r\n+\r\n+//       route: \"/login/voiceid\",\r\n+\r\n+//       response: \"Here's Voice Login. Please proceed.\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"go to voice login\",\r\n+\r\n+//       route: \"/login/voiceid\",\r\n+\r\n+//       response: \"Here's Voice Login. Please proceed.\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"login with voice\",\r\n+\r\n+//       route: \"/login/voiceid\",\r\n+\r\n+//       response: \"Here's Voice Login. Please proceed.\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"login with mobile\",\r\n+\r\n+//       route: \"/login/mobile\",\r\n+\r\n+//       response: \"Here's Mobile Login. Please proceed.\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"i want to login with mobile\",\r\n+\r\n+//       route: \"/login/mobile\",\r\n+\r\n+//       response: \"Here's Mobile Login. Please proceed.\",\r\n+//     },\r\n+//     {\r\n+//       utterance: \"go to mobile login\",\r\n+\r\n+//       route: \"/login/mobile\",\r\n+\r\n+//       response: \"Here's Mobile Login. Please proceed.\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"what are platform features\",\r\n+\r\n+//       response:\r\n+//         \"Dashboard, Dynamic time table, Learning Networks, Little Masters, Video Based Dictionary, General Search.\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"Features of platform\",\r\n+\r\n+//       response:\r\n+//         \"Dashboard, Dynamic time table, Learning Networks, Little Masters, Video Based Dictionary, General Search.\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"What does the platform offer\",\r\n+\r\n+//       response:\r\n+//         \"Dashboard, Dynamic time table, Learning Networks, Little Masters, Video Based Dictionary, General Search.\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"Say me the features of platform\",\r\n+\r\n+//       response:\r\n+//         \"Dashboard, Dynamic time table, Learning Networks, Little Masters, Video Based Dictionary, General Search.\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"Say me the services of platform\",\r\n+\r\n+//       response:\r\n+//         \"Dashboard, Dynamic time table, Learning Networks, Little Masters, Video Based Dictionary, General Search.\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"tell me the services offered by the platform\",\r\n+\r\n+//       response:\r\n+//         \"Dashboard, Dynamic time table, Learning Networks, Little Masters, Video Based Dictionary, General Search.\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"explain platform services\",\r\n+\r\n+//       response:\r\n+//         \"Dashboard, Dynamic time table, Learning Networks, Little Masters, Video Based Dictionary, General Search.\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"Give me the Parent voice of Julia Harris\",\r\n+\r\n+//       response:\r\n+//         \"Brane education has helped my son a lot in his studies. He improved a lot in his studies and is now able to score good marks in his exams\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"Play today's motivational video\",\r\n+\r\n+//       response: \"I am playing the video\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"Play today's video\",\r\n+\r\n+//       response: \"I am playing Motivational video\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"Leaders Voice\",\r\n+\r\n+//       response:\r\n+//         \"This Voice-interactive AI Platform is a game Changer. It revolutionizes education.\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"Curriculum Supported by Brane Education\",\r\n+\r\n+//       response:\r\n+//         \"we support multiple Boards let me say few Telangana State Board Andhra Pradesh Board Maharashtra Board Assam Board\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"Boards supported by the platform\",\r\n+\r\n+//       response:\r\n+//         \"we support multiple Boards let me say few Telangana State Board Andhra Pradesh Board Maharashtra Board Assam Board\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"Curriculum\",\r\n+\r\n+//       response:\r\n+//         \"we support multiple Boards let me say few Telangana State Board Andhra Pradesh Board Maharashtra Board Assam Board\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"Go to landing page\",\r\n+\r\n+//       response: \"Okay, I am taking you to the landing page.\",\r\n+\r\n+//       route: \"/childpage\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"take me to landing page\",\r\n+\r\n+//       response: \"Okay, I am taking you to the landing page.\",\r\n+\r\n+//       route: \"/childpage\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"move to landing page\",\r\n+\r\n+//       response: \"Okay, I am taking you to the landing page.\",\r\n+\r\n+//       route: \"/childpage\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"roll back to landing page\",\r\n+\r\n+//       response: \"Okay, I am taking you to the landing page.\",\r\n+\r\n+//       route: \"/childpage\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"move to landing page\",\r\n+\r\n+//       response: \"Okay, I am taking you to the landing page.\",\r\n+\r\n+//       route: \"/childpage\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"what is today's quote\",\r\n+\r\n+//       response:\r\n+//         \"Determination is the power that sees us through all our frustration and obstacles. It helps in building our willpower which is the very basis of success.\",\r\n+\r\n+//       route: \"/childpage\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"Today's Inspirational quote\",\r\n+\r\n+//       response:\r\n+//         \"Determination is the power that sees us through all our frustration and obstacles. It helps in building our willpower which is the very basis of success.\",\r\n+\r\n+//       route: \"/childpage\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"say me today's quote\",\r\n+\r\n+//       response:\r\n+//         \"Determination is the power that sees us through all our frustration and obstacles. It helps in building our willpower which is the very basis of success.\",\r\n+\r\n+//       route: \"/childpage\",\r\n+//     },\r\n+//     {\r\n+//       utterance: \"go back\",\r\n+//       response: \"\",\r\n+//       action: goBack, // Note the use of an action property\r\n+//     },\r\n+//     {\r\n+//       utterance: \"go forward\",\r\n+//       response: \"\",\r\n+//       action: goForward,\r\n+//     },\r\n+//     {\r\n+//       utterance: \"play video\",\r\n+//       // response: \"Playing video.\",\r\n+//       action: playVideo,\r\n+//     },\r\n+//     {\r\n+//       utterance: \"pause video\",\r\n+//       // response: \"Pausing video.\",\r\n+//       action: pauseVideo,\r\n+//     },\r\n+//     {\r\n+//       utterance: \"start video\",\r\n+//       // response: \"Playing video.\",\r\n+//       action: playVideo,\r\n+//     },\r\n+//     {\r\n+//       utterance: \"stop video\",\r\n+//       // response: \"Playing video.\",\r\n+//       action: pauseVideo,\r\n+//     },\r\n+//     {\r\n+//       utterance: \"scroll up\",\r\n+//       // response: \"Scrolling up.\",\r\n+//       action: scrollUp,\r\n+//     },\r\n+//     {\r\n+//       utterance: \"scroll down\",\r\n+//       // response: \"Scrolling down.\",\r\n+//       action: scrollDown,\r\n+//     },\r\n+//     {\r\n+//       utterance: \"go up\",\r\n+\r\n+//       // response: \"Scrolling up.\",\r\n+//       action: scrollUp,\r\n+//     },\r\n+//     {\r\n+//       utterance: \"go down\",\r\n+//       // response: \"Scrolling down.\",\r\n+//       action: scrollDown,\r\n+//     },\r\n+//     {\r\n+//       utterance: \"scroll to top\",\r\n+//       action: scrollToTop,\r\n+//     },\r\n+//     {\r\n+//       utterance: \"scroll to bottom\",\r\n+//       action: scrollToBottom,\r\n+//     },\r\n+//     {\r\n+//       utterance: \"brane stop\",\r\n+//       action: stopListening,\r\n+//     },\r\n+//     {\r\n+//       utterance: \"brane turn off\",\r\n+//       action: stopListening,\r\n+//     },\r\n+//     {\r\n+//       utterance: \"brane stop the bot\",\r\n+//       action: stopListening,\r\n+//     },\r\n+//   ];\r\n+\r\n+//   return (\r\n+//     <div className=\"speech-bot-container\">\r\n+//       <div\r\n+//         className={`button-container ${\r\n+//           isListening ? \"voicebotframeactive\" : \"voicebotframe\"\r\n+//         }`}\r\n+//       >\r\n+//         <button onClick={isListening ? stopListening : startListening}>\r\n+//           {isListening ? \"Stop\" : \"Start\"} Animation\r\n+//         </button>\r\n+//         {/* <button onClick={toggleBotActive}>\r\n+//         {isBotActive ? 'Deactivate Bot' : 'Activate Bot'}\r\n+//       </button> \r\n+//       </div>\r\n+//     </div>\r\n+//   );\r\n+// };\r\n+\r\n+// export default VoiceBot; */}\r\n+\r\n+\r\n+\r\n+//iska v1\r\n+\r\n+// import React, { useState, useEffect, useRef } from \"react\";\r\n+// import { useNavigate, useLocation } from \"react-router-dom\";\r\n+// import Fuse from \"fuse.js\";\r\n+// import \"./VoiceBot.css\";\r\n+\r\n+// const VoiceBot = ({ videoRef}) => {\r\n+//   const [isListening, setIsListening] = useState(false);\r\n+//   const [isSpeaking, setIsSpeaking] = useState(false);\r\n+//   const recognition = useRef(null);\r\n+//   const speechSynthesis = useRef(window.speechSynthesis);\r\n+//   const [hasGreeted, setHasGreeted] = useState(false);\r\n+//   const navigate = useNavigate();\r\n+\r\n+\r\n+//  // Initialize speech recognition\r\n+//  useEffect(() => {\r\n+//   recognition.current = new window.webkitSpeechRecognition();\r\n+//   recognition.current.continuous = true;\r\n+//   recognition.current.interimResults = false;\r\n+//   recognition.current.onresult = onResult;\r\n+//   recognition.current.onend = onRecognitionEnd;\r\n+//   recognition.current.starting = false;\r\n+\r\n+//   recognition.current.onerror = (event) => {\r\n+//     console.error(\"Recognition error:\", event.error);\r\n+//     if (isListening && !isSpeaking) {\r\n+//       restartRecognition();\r\n+//     }\r\n+//   };\r\n+\r\n+//   return () => {\r\n+//     if (recognition.current) {\r\n+//       recognition.current.abort();\r\n+//     }\r\n+//   };\r\n+// }, []);\r\n+\r\n+//   // useEffect(() => {\r\n+//   //   const checkRecognition = () => {\r\n+//   //     if (isListening && !isSpeaking && !recognition.current.starting) {\r\n+//   //       console.log(\"Restarting recognition because it's not active.\");\r\n+//   //       recognition.current.starting = true;\r\n+//   //       recognition.current.start();\r\n+//   //       console.log(\"Restarted recognition.\");\r\n+//   //     }\r\n+//   //   };\r\n+\r\n+//   //   const recognitionCheckInterval = setInterval(checkRecognition, 100); // Check every .5 second\r\n+\r\n+//   //   return () => {\r\n+//   //     clearInterval(recognitionCheckInterval);\r\n+//   //   };\r\n+//   // }, [isListening, isSpeaking]);\r\n+\r\n+\r\n+//   const historyStack = useRef([]);\r\n+\r\n+//   useEffect(() => {\r\n+//     return () => {\r\n+//       // Clean up the listener when the component unmounts\r\n+//       window.removeEventListener(\"popstate\", handlePopState);\r\n+//     };\r\n+//   }, []);\r\n+\r\n+//   const handlePopState = () => {\r\n+//     // This needs to handle both back and forward browser actions\r\n+//     // Use some logic to determine whether it's a back or forward action\r\n+//     // For simplicity, assume it's always back\r\n+//     historyStack.current.pop();\r\n+//     forwardStack.current.length = 0; // Clear forward stack on manual navigation\r\n+//   };\r\n+  \r\n+\r\n+//   // Add a new entry to the stack whenever navigate is called\r\n+//   const customNavigate = (to, options) => {\r\n+//     historyStack.current.push(to);\r\n+//     navigate(to, options);\r\n+//   };\r\n+\r\n+//   // Listen to popstate events to update the history stack\r\n+//   useEffect(() => {\r\n+//     window.addEventListener(\"popstate\", handlePopState);\r\n+//   }, []);\r\n+\r\n+//   const forwardStack = useRef([]);\r\n+\r\n+//   const goBack = () => {\r\n+//     if (window.history.state && window.history.state.idx > 0) {\r\n+//       window.history.back();\r\n+//       speak(\"Going back\");\r\n+//     } else {\r\n+//       speak(\"Can't go back any further.\");\r\n+//     }\r\n+//   };\r\n+\r\n+//   const goForward = () => {\r\n+//     if (window.history.state && window.history.state.idx < window.history.length - 1) {\r\n+//       window.history.forward();\r\n+//       speak(\"Going forward\");\r\n+//     } else {\r\n+//       speak(\"No forward history available.\");\r\n+//     }\r\n+//   };\r\n+\r\n+//   const playVideo = () => {\r\n+//     if (videoRef.current) {\r\n+//       videoRef.current.play();\r\n+//       speak(\"Playing video.\");\r\n+//     } else {\r\n+//       speak(\"No video to play.\");\r\n+//     }\r\n+//   };\r\n+\r\n+//   const pauseVideo = () => {\r\n+//     if (videoRef.current) {\r\n+//       videoRef.current.pause();\r\n+//       speak(\"Video paused.\");\r\n+//     } else {\r\n+//       speak(\"No video to pause.\");\r\n+//     }\r\n+//   };\r\n+\r\n+//   const scrollAmount = window.innerHeight * 0.82;\r\n+\r\n+//   const scrollUp = () => {\r\n+//     if (window.pageYOffset === 0) {\r\n+//       speak(\"Already at the top of the page.\");\r\n+//     } else {\r\n+//       window.scrollBy(0, -scrollAmount);\r\n+//       speak(\"Scrolled up.\");\r\n+//     }\r\n+//   };\r\n+\r\n+//   const scrollDown = () => {\r\n+//     const maxScrollTop =\r\n+//       document.documentElement.scrollHeight - window.innerHeight;\r\n+//     if (window.pageYOffset >= maxScrollTop) {\r\n+//       speak(\"Already at the bottom of the page.\");\r\n+//     } else {\r\n+//       window.scrollBy(0, scrollAmount);\r\n+//       speak(\"Scrolled down.\");\r\n+//     }\r\n+//   };\r\n+\r\n+//   const scrollToTop = () => {\r\n+//     if (window.pageYOffset === 0) {\r\n+//       speak(\"Already at the top of the page.\");\r\n+//     } else {\r\n+//       window.scrollTo(0, 0);\r\n+//       speak(\"Scrolled to the top of the page.\");\r\n+//     }\r\n+//   };\r\n+\r\n+//   const scrollToBottom = () => {\r\n+//     const maxScrollTop =\r\n+//       document.documentElement.scrollHeight - window.innerHeight;\r\n+//     if (window.pageYOffset >= maxScrollTop) {\r\n+//       speak(\"Already at the bottom of the page.\");\r\n+//     } else {\r\n+//       window.scrollTo(0, document.body.scrollHeight);\r\n+//       speak(\"Scrolled to the bottom of the page.\");\r\n+//     }\r\n+//   };\r\n+\r\n+//   const speak = (message) => {\r\n+//     const utterance = new SpeechSynthesisUtterance(message);\r\n+//     utterance.onend = () => {\r\n+//       setIsSpeaking(false);\r\n+//       // Restart recognition after speaking has ended\r\n+//       if (isListening) {\r\n+//         restartRecognition();\r\n+//       }\r\n+//     };\r\n+  \r\n+//     setIsSpeaking(true);\r\n+//     // Stop recognition when the bot starts speaking\r\n+//     if (recognition.current) {\r\n+//       recognition.current.abort();\r\n+//     }\r\n+//     speechSynthesis.current.speak(utterance);\r\n+//   };\r\n+  \r\n+\r\n+//   const restartRecognition = () => {\r\n+//     // Check if recognition is not already started and if the bot is set to listen\r\n+//     if (recognition.current && !recognition.current.starting && isListening && !isSpeaking) {\r\n+//       // Only start recognition if it's not already active\r\n+//       if (recognition.current.state !== 'active') {\r\n+//         recognition.current.abort(); // Ensure any ongoing recognition is stopped\r\n+//         recognition.current.starting = true;\r\n+//         recognition.current.start();\r\n+//       }\r\n+//     }\r\n+//   };\r\n+  \r\n+  \r\n+//     // Restart recognition when bot finishes speaking and isListening is true\r\n+//     useEffect(() => {\r\n+//       if (!isSpeaking && isListening) {\r\n+//         restartRecognition();\r\n+//       }\r\n+//     }, [isSpeaking, isListening]);\r\n+\r\n+//   const onResult = (event) => {\r\n+//     const resultIndex = event.resultIndex;\r\n+//     const transcript = event.results[resultIndex][0].transcript\r\n+//       .trim()\r\n+//       .toLowerCase();\r\n+\r\n+//     if (event.results[resultIndex].isFinal) {\r\n+//       console.log(`Recognized text: ${transcript}`);\r\n+//       if (transcript.includes(\"brain\")) {\r\n+//         console.log(\"Wake word heard, processing command...\");\r\n+//         handleCommandWithFuse(transcript.replace(\"brain\", \"\"));\r\n+//       }\r\n+//     }\r\n+//   };\r\n+\r\n+//   const onRecognitionEnd = () => {\r\n+//     recognition.current.starting = false;\r\n+//     if (isListening && !isSpeaking) {\r\n+//       restartRecognition();\r\n+//     }\r\n+//   };\r\n+\r\n+//   useEffect(() => {\r\n+//     if (isListening && !hasGreeted) {\r\n+//       speak(\"Hello, I'm Brane. How can I help you today?\");\r\n+//       setHasGreeted(true);\r\n+//     }\r\n+//   }, [isListening, hasGreeted]);\r\n+\r\n+\r\n+// // Updated startListening function\r\n+// const startListening = () => {\r\n+//   setIsListening(true);\r\n+//   if (recognition.current && !recognition.current.starting) {\r\n+//     recognition.current.start();\r\n+//   }\r\n+// };\r\n+\r\n+// // Updated stopListening function\r\n+// const stopListening = () => {\r\n+//   setIsListening(false);\r\n+//   setIsSpeaking(false); // Reset speaking state\r\n+//   setHasGreeted(false); // Reset greeting state if needed\r\n+//   if (recognition.current) {\r\n+//     recognition.current.abort(); // Stop any ongoing speech recognition\r\n+//   }\r\n+//   if (speechSynthesis.current.speaking) {\r\n+//     speechSynthesis.current.cancel(); // Stop any ongoing speech synthesis\r\n+//   }\r\n+// };\r\n+\r\n+\r\n+\r\n+//   const handleCommandWithFuse = (command) => {\r\n+//     const fuse = new Fuse(commands, { keys: [\"utterance\"], threshold: 0.4 });\r\n+//     const results = fuse.search(command);\r\n+//     const foundCommand = results.length ? results[0].item : null;\r\n+\r\n+//     if (foundCommand) {\r\n+//       console.log(\"Command found:\", foundCommand.utterance);\r\n+\r\n+//       if (foundCommand.action) {\r\n+//         foundCommand.action();\r\n+//       } else if (foundCommand.route) {\r\n+//         navigate(foundCommand.route);\r\n+//       }\r\n+\r\n+//       // Speak after performing the action or navigation\r\n+//       speak(foundCommand.response);\r\n+//     } else {\r\n+//       console.log(\"No command found.\");\r\n+//       speak(\"I'm not sure how to respond to that.\");\r\n+//     }\r\n+//   };\r\n+\r\n+//   const commands = [\r\n+//     {\r\n+//       utterance: \"Hello who are you ?\",\r\n+\r\n+//       response:\r\n+//         \"Hi! This is Brane! your Voice bot from Brane Education How can I Assist you Today ?\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"Hello\",\r\n+\r\n+//       response: \"Hi! How can I assist you today?\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"hello\",\r\n+\r\n+//       response: \"Hi! How can I assist you today?\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"Hi.\",\r\n+\r\n+//       response: \"Hello! How can I assist you today?\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"Hey there\",\r\n+\r\n+//       response: \"Hi! How can I assist you today?\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"Good morning Brane.\",\r\n+\r\n+//       response: \"Hey Hiii! Good morning  ! How can I help you?\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"Good afternoon Brane.\",\r\n+\r\n+//       response: \"Hey Hiii! Good after noon ! How can I help you?\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"Good evening Brane.\",\r\n+\r\n+//       response: \"Hey Hiii! Good evening ! How can I help you?\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"can you please take me to login page\",\r\n+\r\n+//       route: \"/login\",\r\n+\r\n+//       response: \"Here's the Login Page, Please Login\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"please take me to login page\",\r\n+\r\n+//       route: \"/login\",\r\n+\r\n+//       response: \"Here's the Login Page, Please Login\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"Go to login page\",\r\n+\r\n+//       route: \"/login\",\r\n+\r\n+//       response: \"Here's the Login Page, Please Login\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"open login page\",\r\n+\r\n+//       route: \"/login\",\r\n+\r\n+//       response: \"Here's the Login Page, Please Login\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"can you please take me to signup page\",\r\n+\r\n+//       route: \"/signup\",\r\n+\r\n+//       response: \"Here's the signup page. Please proceed With Registration.\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"take me to signup page\",\r\n+\r\n+//       route: \"/signup\",\r\n+\r\n+//       response: \"Here's the signup page. Please proceed With Registration.\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"Go to signup page\",\r\n+\r\n+//       route: \"/signup\",\r\n+\r\n+//       response: \"Here's the signup page. Please proceed With Registration.\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"open signup page\",\r\n+\r\n+//       route: \"/signup\",\r\n+\r\n+//       response: \"Here's the signup page. Please proceed With Registration.\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"Go to face id\",\r\n+\r\n+//       route: \"/login/faceid\",\r\n+\r\n+//       response: \"Here's Face ID Login. Please proceed.\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"Go to face id login\",\r\n+\r\n+//       route: \"/login/faceid\",\r\n+\r\n+//       response: \"Here's Face ID Login. Please proceed.\",\r\n+//     },\r\n+//     {\r\n+//       utterance: \"Go to face login\",\r\n+\r\n+//       route: \"/login/faceid\",\r\n+\r\n+//       response: \"Here's Face ID Login. Please proceed.\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"login with face id\",\r\n+\r\n+//       route: \"/login/faceid\",\r\n+\r\n+//       response: \"Here's Face ID Login. Please proceed.\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"login with face\",\r\n+\r\n+//       route: \"/login/faceid\",\r\n+\r\n+//       response: \"Here's Face ID Login. Please proceed.\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"i want to login with face\",\r\n+\r\n+//       route: \"/login/faceid\",\r\n+\r\n+//       response: \"Here's Face ID Login. Please proceed.\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"login with voice\",\r\n+\r\n+//       route: \"/login/voiceid\",\r\n+\r\n+//       response: \"Here's Voice Login. Please proceed.\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"i want to login with voice\",\r\n+\r\n+//       route: \"/login/voiceid\",\r\n+\r\n+//       response: \"Here's Voice Login. Please proceed.\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"go to voice login\",\r\n+\r\n+//       route: \"/login/voiceid\",\r\n+\r\n+//       response: \"Here's Voice Login. Please proceed.\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"login with voice\",\r\n+\r\n+//       route: \"/login/voiceid\",\r\n+\r\n+//       response: \"Here's Voice Login. Please proceed.\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"login with mobile\",\r\n+\r\n+//       route: \"/login/mobile\",\r\n+\r\n+//       response: \"Here's Mobile Login. Please proceed.\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"i want to login with mobile\",\r\n+\r\n+//       route: \"/login/mobile\",\r\n+\r\n+//       response: \"Here's Mobile Login. Please proceed.\",\r\n+//     },\r\n+//     {\r\n+//       utterance: \"go to mobile login\",\r\n+\r\n+//       route: \"/login/mobile\",\r\n+\r\n+//       response: \"Here's Mobile Login. Please proceed.\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"what are platform features\",\r\n+\r\n+//       response:\r\n+//         \"Dashboard, Dynamic time table, Learning Networks, Little Masters, Video Based Dictionary, General Search.\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"Features of platform\",\r\n+\r\n+//       response:\r\n+//         \"Dashboard, Dynamic time table, Learning Networks, Little Masters, Video Based Dictionary, General Search.\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"What does the platform offer\",\r\n+\r\n+//       response:\r\n+//         \"Dashboard, Dynamic time table, Learning Networks, Little Masters, Video Based Dictionary, General Search.\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"Say me the features of platform\",\r\n+\r\n+//       response:\r\n+//         \"Dashboard, Dynamic time table, Learning Networks, Little Masters, Video Based Dictionary, General Search.\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"Say me the services of platform\",\r\n+\r\n+//       response:\r\n+//         \"Dashboard, Dynamic time table, Learning Networks, Little Masters, Video Based Dictionary, General Search.\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"tell me the services offered by the platform\",\r\n+\r\n+//       response:\r\n+//         \"Dashboard, Dynamic time table, Learning Networks, Little Masters, Video Based Dictionary, General Search.\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"explain platform services\",\r\n+\r\n+//       response:\r\n+//         \"Dashboard, Dynamic time table, Learning Networks, Little Masters, Video Based Dictionary, General Search.\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"Give me the Parent voice of Julia Harris\",\r\n+\r\n+//       response:\r\n+//         \"Brane education has helped my son a lot in his studies. He improved a lot in his studies and is now able to score good marks in his exams\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"Play today's motivational video\",\r\n+\r\n+//       response: \"I am playing the video\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"Play today's video\",\r\n+\r\n+//       response: \"I am playing Motivational video\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"Leaders Voice\",\r\n+\r\n+//       response:\r\n+//         \"This Voice-interactive AI Platform is a game Changer. It revolutionizes education.\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"Curriculum Supported by Brane Education\",\r\n+\r\n+//       response:\r\n+//         \"we support multiple Boards let me say few Telangana State Board Andhra Pradesh Board Maharashtra Board Assam Board\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"Boards supported by the platform\",\r\n+\r\n+//       response:\r\n+//         \"we support multiple Boards let me say few Telangana State Board Andhra Pradesh Board Maharashtra Board Assam Board\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"Curriculum\",\r\n+\r\n+//       response:\r\n+//         \"we support multiple Boards let me say few Telangana State Board Andhra Pradesh Board Maharashtra Board Assam Board\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"Go to landing page\",\r\n+\r\n+//       response: \"Okay, I am taking you to the landing page.\",\r\n+\r\n+//       route: \"/childpage\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"take me to landing page\",\r\n+\r\n+//       response: \"Okay, I am taking you to the landing page.\",\r\n+\r\n+//       route: \"/childpage\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"move to landing page\",\r\n+\r\n+//       response: \"Okay, I am taking you to the landing page.\",\r\n+\r\n+//       route: \"/childpage\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"roll back to landing page\",\r\n+\r\n+//       response: \"Okay, I am taking you to the landing page.\",\r\n+\r\n+//       route: \"/childpage\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"move to landing page\",\r\n+\r\n+//       response: \"Okay, I am taking you to the landing page.\",\r\n+\r\n+//       route: \"/childpage\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"what is today's quote\",\r\n+\r\n+//       response:\r\n+//         \"Determination is the power that sees us through all our frustration and obstacles. It helps in building our willpower which is the very basis of success.\",\r\n+\r\n+//       route: \"/childpage\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"Today's Inspirational quote\",\r\n+\r\n+//       response:\r\n+//         \"Determination is the power that sees us through all our frustration and obstacles. It helps in building our willpower which is the very basis of success.\",\r\n+\r\n+//       route: \"/childpage\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"say me today's quote\",\r\n+\r\n+//       response:\r\n+//         \"Determination is the power that sees us through all our frustration and obstacles. It helps in building our willpower which is the very basis of success.\",\r\n+\r\n+//       route: \"/childpage\",\r\n+//     },\r\n+//     {\r\n+//       utterance: \"go back\",\r\n+//       response: \"\",\r\n+//       action: goBack, // Note the use of an action property\r\n+//     },\r\n+//     {\r\n+//       utterance: \"go forward\",\r\n+//       response: \"\",\r\n+//       action: goForward,\r\n+//     },\r\n+//     {\r\n+//       utterance: \"play video\",\r\n+//       // response: \"Playing video.\",\r\n+//       action: playVideo,\r\n+//     },\r\n+//     {\r\n+//       utterance: \"pause video\",\r\n+//       // response: \"Pausing video.\",\r\n+//       action: pauseVideo,\r\n+//     },\r\n+//     {\r\n+//       utterance: \"start video\",\r\n+//       // response: \"Playing video.\",\r\n+//       action: playVideo,\r\n+//     },\r\n+//     {\r\n+//       utterance: \"stop video\",\r\n+//       // response: \"Playing video.\",\r\n+//       action: pauseVideo,\r\n+//     },\r\n+//     {\r\n+//       utterance: \"scroll up\",\r\n+//       // response: \"Scrolling up.\",\r\n+//       action: scrollUp,\r\n+//     },\r\n+//     {\r\n+//       utterance: \"scroll down\",\r\n+//       // response: \"Scrolling down.\",\r\n+//       action: scrollDown,\r\n+//     },\r\n+//     {\r\n+//       utterance: \"go up\",\r\n+\r\n+//       // response: \"Scrolling up.\",\r\n+//       action: scrollUp,\r\n+//     },\r\n+//     {\r\n+//       utterance: \"go down\",\r\n+//       // response: \"Scrolling down.\",\r\n+//       action: scrollDown,\r\n+//     },\r\n+//     {\r\n+//       utterance: \"scroll to top\",\r\n+//       action: scrollToTop,\r\n+//     },\r\n+//     {\r\n+//       utterance: \"scroll to bottom\",\r\n+//       action: scrollToBottom,\r\n+//     },\r\n+//     {\r\n+//       utterance: \"brane stop\",\r\n+//       action: stopListening,\r\n+//     },\r\n+//     {\r\n+//       utterance: \"brane turn off\",\r\n+//       action: stopListening,\r\n+//     },\r\n+//     {\r\n+//       utterance: \"brane stop the bot\",\r\n+//       action: stopListening,\r\n+//     },\r\n+//   ];\r\n+\r\n+//   return (\r\n+//     <div className=\"speech-bot-container\">\r\n+//       <div\r\n+//         className={`button-container ${\r\n+//           isListening ? \"voicebotframeactive\" : \"voicebotframe\"\r\n+//         }`}\r\n+//       >\r\n+//         <button onClick={isListening ? stopListening : startListening}>\r\n+//           {isListening ? \"Stop\" : \"Start\"} Animation\r\n+//         </button>\r\n+//         {/* <button onClick={toggleBotActive}>\r\n+//         {isBotActive ? 'Deactivate Bot' : 'Activate Bot'}\r\n+//       </button> */}\r\n+//       </div>\r\n+//     </div>\r\n+//   );\r\n+// };\r\n+\r\n+// export default VoiceBot;\r\n+\r\n+\r\n+\r\n+\r\n+\r\n+\r\n+\r\n+\r\n+\r\n+\r\n+\r\n+\r\n+\r\n+\r\n+\r\n+\r\n+\r\n+\r\n+\r\n+\r\n+\r\n+\r\n+\r\n+\r\n+\r\n+\r\n+\r\n+\r\n+\r\n+\r\n+//Bot Video added but some start issues\r\n+\r\n+// import React, { useState, useEffect, useRef } from \"react\";\r\n+// import { useNavigate, useLocation } from \"react-router-dom\";\r\n+// import Fuse from \"fuse.js\";\r\n+// import \"./VoiceBot.css\";\r\n+\r\n+// const VoiceBot = ({ videoRef }) => {\r\n+//   const [isListening, setIsListening] = useState(false);\r\n+//   const [isSpeaking, setIsSpeaking] = useState(false);\r\n+//   const recognition = useRef(null);\r\n+//   const speechSynthesis = useRef(window.speechSynthesis);\r\n+//   const hasGreeted = useRef(false);\r\n+//   const restartRecognitionTimeout = useRef(null);\r\n+//   const navigate = useNavigate();\r\n+//   const location = useLocation();\r\n+//   const [isRecognitionActive, setIsRecognitionActive] = useState(false); // New state to track recognition status\r\n+\r\n+//   useEffect(() => {\r\n+//     recognition.current = new window.webkitSpeechRecognition();\r\n+//     recognition.current.continuous = true;\r\n+//     recognition.current.interimResults = false;\r\n+//     recognition.current.onresult = onResult;\r\n+//     recognition.current.onend = () => {\r\n+//       console.log(\"Recognition ended.\");\r\n+//       if (isListening) {\r\n+//         startListening();\r\n+//       }\r\n+//     };\r\n+//     recognition.current.onerror = (event) => {\r\n+//       console.error(\"Recognition error:\", event.error);\r\n+//     };\r\n+\r\n+//     return () => {\r\n+//       recognition.current.abort();\r\n+//     };\r\n+//   }, []);\r\n+\r\n+//   // Update useEffect for managing the recognition state based on isListening and isRecognitionActive\r\n+//   useEffect(() => {\r\n+//     if (isListening && !isRecognitionActive) {\r\n+//       startListening();\r\n+//     } else if (!isListening && isRecognitionActive) {\r\n+//       stopListening();\r\n+//     }\r\n+//   }, [isListening, isRecognitionActive]);\r\n+\r\n+//   const goBack = () => {\r\n+//     if (window.history.length > 1) {\r\n+//       navigate(-1);\r\n+//     } else {\r\n+//       speak(\"Can't go back any further.\");\r\n+//     }\r\n+//   };\r\n+\r\n+//   const goForward = () => {\r\n+//     // Unfortunately, there's no direct way to check if you can go forward in the history.\r\n+//     // You might need to manage this state manually based on user navigation.\r\n+//     navigate(1);\r\n+//   };\r\n+\r\n+//   const playVideo = () => {\r\n+//     if (videoRef.current && !videoRef.current.paused) {\r\n+//       speak(\"Video is already playing.\");\r\n+//     } else if (videoRef.current) {\r\n+//       videoRef.current.play();\r\n+//       speak(\"Playing video.\");\r\n+//     } else {\r\n+//       speak(\"No video to play.\");\r\n+//     }\r\n+//   };\r\n+\r\n+//   const pauseVideo = () => {\r\n+//     if (videoRef.current && videoRef.current.paused) {\r\n+//       speak(\"Video is already paused.\");\r\n+//     } else if (videoRef.current) {\r\n+//       videoRef.current.pause();\r\n+//       speak(\"Video paused.\");\r\n+//     } else {\r\n+//       speak(\"No video to pause.\");\r\n+//     }\r\n+//   };\r\n+\r\n+//   const scrollAmount = window.innerHeight * 0.82;\r\n+\r\n+//   const scrollUp = () => {\r\n+//     if (window.pageYOffset === 0) {\r\n+//       speak(\"Already at the top of the page.\");\r\n+//     } else {\r\n+//       window.scrollBy(0, -scrollAmount);\r\n+//       speak(\"Scrolled up.\");\r\n+//     }\r\n+//   };\r\n+\r\n+//   const scrollDown = () => {\r\n+//     const maxScrollTop =\r\n+//       document.documentElement.scrollHeight - window.innerHeight;\r\n+//     if (window.pageYOffset >= maxScrollTop) {\r\n+//       speak(\"Already at the bottom of the page.\");\r\n+//     } else {\r\n+//       window.scrollBy(0, scrollAmount);\r\n+//       speak(\"Scrolled down.\");\r\n+//     }\r\n+//   };\r\n+\r\n+//   const scrollToTop = () => {\r\n+//     if (window.pageYOffset === 0) {\r\n+//       speak(\"Already at the top of the page.\");\r\n+//     } else {\r\n+//       window.scrollTo(0, 0);\r\n+//       speak(\"Scrolled to the top of the page.\");\r\n+//     }\r\n+//   };\r\n+\r\n+//   const scrollToBottom = () => {\r\n+//     const maxScrollTop =\r\n+//       document.documentElement.scrollHeight - window.innerHeight;\r\n+//     if (window.pageYOffset >= maxScrollTop) {\r\n+//       speak(\"Already at the bottom of the page.\");\r\n+//     } else {\r\n+//       window.scrollTo(0, document.body.scrollHeight);\r\n+//       speak(\"Scrolled to the bottom of the page.\");\r\n+//     }\r\n+//   };\r\n+\r\n+//   // const speak = (message) => {\r\n+//   //   const utterance = new SpeechSynthesisUtterance(message);\r\n+//   //   utterance.onend = () => {\r\n+//   //     setIsSpeaking(false);\r\n+//   //     console.log(\"Speaking ended.\");\r\n+//   //     // Only restart recognition if we're still supposed to be listening\r\n+//   //     // if (isListening) {\r\n+//   //     //   if (restartRecognitionTimeout.current) {\r\n+//   //     //     clearTimeout(restartRecognitionTimeout.current);\r\n+//   //     //   }\r\n+//   //     //   restartRecognitionTimeout.current = setTimeout(() => {\r\n+//   //     //     console.log(\"Recognition restarted.\");\r\n+//   //     //     recognition.current.start();\r\n+//   //     //   }, 100); // Delay to prevent immediate restart\r\n+//   //     // }\r\n+//   //     if (isListening && !recognition.current.starting) { // Check the flag before restarting\r\n+//   //       recognition.current.starting = true; // Set the flag when starting recognition\r\n+//   //       recognition.current.start();\r\n+//   //     }\r\n+//   //   };\r\n+\r\n+//   //   setIsSpeaking(true);\r\n+//   //   console.log(\"Speaking started.\");\r\n+//   //   recognition.current.stop(); // Stop recognition when the bot starts speaking\r\n+//   //   speechSynthesis.current.speak(utterance);\r\n+//   // };\r\n+\r\n+//   const speak = (message) => {\r\n+//     console.log(\"speak function called with message:\", message);\r\n+//     const utterance = new SpeechSynthesisUtterance(message);\r\n+//     utterance.onend = () => {\r\n+//       setIsSpeaking(false);\r\n+//       console.log(\"Speaking ended.\");\r\n+//       // Directly handle the restart of recognition here if needed\r\n+//       if (isListening) {\r\n+//         startListening();\r\n+//       }\r\n+//     };\r\n+\r\n+//     setIsSpeaking(true);\r\n+//     console.log(\"Speaking started.\");\r\n+//     recognition.current.stop(); // Ensure to stop recognition before speaking\r\n+//     speechSynthesis.current.speak(utterance);\r\n+//   };\r\n+\r\n+//   const onResult = (event) => {\r\n+//     const resultIndex = event.resultIndex;\r\n+//     const transcript = event.results[resultIndex][0].transcript\r\n+//       .trim()\r\n+//       .toLowerCase();\r\n+\r\n+//     if (event.results[resultIndex].isFinal) {\r\n+//       console.log(`Recognized text: ${transcript}`);\r\n+//       if (transcript.includes(\"brain\")) {\r\n+//         console.log(\"Wake word heard, processing command...\");\r\n+//         handleCommandWithFuse(transcript.replace(\"brain\", \"\"));\r\n+//       }\r\n+//     }\r\n+//   };\r\n+\r\n+//   // const onRecognitionEnd = () => {\r\n+//   //   console.log(\"Recognition ended.\");\r\n+//   //   setIsRecognitionActive(false); // Update state when recognition ends\r\n+//   //   recognition.current.starting = false; // Reset the flag when recognition ends\r\n+//   //   // We now check if the recognition is already running before starting it again\r\n+//   //   if (isListening && !isSpeaking && !recognition.current?.starting) {\r\n+//   //     console.log(\"Restarting recognition.\");\r\n+//   //     recognition.current.start();\r\n+//   //   }\r\n+//   // };\r\n+\r\n+//   // useEffect(() => {\r\n+//   //   if (isListening && !hasGreeted.current) {\r\n+//   //     speak(\"Hello, I'm Brane. How can I assist you today?\");\r\n+//   //     hasGreeted.current = true;\r\n+//   //   } else if (isListening && !isSpeaking) {\r\n+//   //     recognition.current.start();\r\n+//   //   }\r\n+//   // }, [isListening, isSpeaking]);\r\n+\r\n+//   useEffect(() => {\r\n+//     if (isListening && !hasGreeted.current) {\r\n+//       speak(\"Hello, I'm Brane. How can I assist you today?\");\r\n+//       hasGreeted.current = true;\r\n+//     } else if (isListening && !isSpeaking && !recognition.current.starting) {\r\n+//       // Check the flag before starting\r\n+//       recognition.current.starting = true; // Set the flag when starting recognition\r\n+//       recognition.current.start();\r\n+//     }\r\n+//   }, [isListening, isSpeaking]);\r\n+\r\n+//   // const startListening = () => {\r\n+//   //   console.log(\"Attempting to start listening.\");\r\n+//   //   if (recognition.current && !recognition.current.starting) {\r\n+//   //     setIsListening(true);\r\n+//   //     recognition.current.starting = true; // Set the flag when starting recognition\r\n+//   //     recognition.current.start();\r\n+//   //     console.log(\"Listening started.\");\r\n+//   //   }\r\n+//   // };\r\n+\r\n+//   // const stopListening = () => {\r\n+//   //   console.log(\"Stopping listening.\");\r\n+\r\n+//   //   setIsListening(false);\r\n+//   //   recognition.current.stop();\r\n+//   //   if (speechSynthesis.current.speaking) {\r\n+//   //     speechSynthesis.current.cancel();\r\n+//   //   }\r\n+//   //   if (restartRecognitionTimeout.current) {\r\n+//   //     clearTimeout(restartRecognitionTimeout.current);\r\n+//   //   }\r\n+//   //   console.log(\"Listening stopped.\");\r\n+//   // };\r\n+//   // Handle start and stop listening logic\r\n+//   const startListening = () => {\r\n+//     console.log(\"Attempting to start listening.\");\r\n+//     if (!recognition.current.starting) {\r\n+//       setIsListening(true);\r\n+//       recognition.current.starting = true;\r\n+//       recognition.current.start();\r\n+//       console.log(\"Listening started.\");\r\n+//     } else {\r\n+//       console.log(\"Recognition already active.\");\r\n+//     }\r\n+//   };\r\n+\r\n+//   const stopListening = () => {\r\n+//     console.log(\"Stopping listening.\");\r\n+//     if (recognition.current.starting) {\r\n+//       setIsListening(false);\r\n+//       recognition.current.starting = false;\r\n+//       recognition.current.stop();\r\n+//       console.log(\"Listening stopped.\");\r\n+//     } else {\r\n+//       console.log(\"Recognition already inactive.\");\r\n+//     }\r\n+//   };\r\n+\r\n+//   // const handleCommandWithFuse = (command) => {\r\n+//   //   const fuse = new Fuse(commands, { keys: [\"utterance\"], threshold: 0.4 });\r\n+//   //   const results = fuse.search(command);\r\n+//   //   const foundCommand = results.length ? results[0].item : null;\r\n+\r\n+//   //   if (foundCommand) {\r\n+//   //     console.log(\"Command found:\", foundCommand.utterance);\r\n+//   //     speak(foundCommand.response);\r\n+//   //     if (foundCommand.route) {\r\n+//   //       navigate(foundCommand.route); // Navigate to the route specified in the command\r\n+//   //     }\r\n+//   //   } else {\r\n+//   //     console.log(\"No command found.\");\r\n+//   //     speak(\"I'm not sure how to respond to that.\");\r\n+//   //   }\r\n+//   // };\r\n+\r\n+//   const handleCommandWithFuse = (command) => {\r\n+//     const fuse = new Fuse(commands, { keys: [\"utterance\"], threshold: 0.4 });\r\n+//     const results = fuse.search(command);\r\n+//     const foundCommand = results.length ? results[0].item : null;\r\n+\r\n+//     if (foundCommand) {\r\n+//       console.log(\"Command found:\", foundCommand.utterance);\r\n+\r\n+//       if (foundCommand.route) {\r\n+//         if (location.pathname !== foundCommand.route) {\r\n+//           navigate(foundCommand.route);\r\n+//           speak(\r\n+//             `Navigating to ${\r\n+//               foundCommand.routeDescription || \"requested page\"\r\n+//             }.`\r\n+//           );\r\n+//         } else {\r\n+//           speak(\r\n+//             `You are already on the ${\r\n+//               foundCommand.routeDescription || \"requested page\"\r\n+//             }.`\r\n+//           );\r\n+//         }\r\n+//       } else if (foundCommand.action) {\r\n+//         foundCommand.action();\r\n+//       }\r\n+\r\n+//       if (foundCommand.response) {\r\n+//         speak(foundCommand.response);\r\n+//       }\r\n+//     } else {\r\n+//       console.log(\"No command found.\");\r\n+//       speak(\"I'm not sure how to respond to that.\");\r\n+//     }\r\n+//   };\r\n+\r\n+//   const commands = [\r\n+//     {\r\n+//       utterance: \"Hello who are you ?\",\r\n+\r\n+//       response:\r\n+//         \"Hi! This is Brane! your Voice bot from Brane Education How can I Assist you Today ?\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"Hello\",\r\n+\r\n+//       response: \"Hi! How can I assist you today?\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"hello\",\r\n+\r\n+//       response: \"Hi! How can I assist you today?\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"Hi.\",\r\n+\r\n+//       response: \"Hello! How can I assist you today?\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"Hey there\",\r\n+\r\n+//       response: \"Hi! How can I assist you today?\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"Good morning Brane.\",\r\n+\r\n+//       response: \"Hey Hiii! Good morning  ! How can I help you?\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"Good afternoon Brane.\",\r\n+\r\n+//       response: \"Hey Hiii! Good after noon ! How can I help you?\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"Good evening Brane.\",\r\n+\r\n+//       response: \"Hey Hiii! Good evening ! How can I help you?\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"can you please take me to login page\",\r\n+//       route: \"/login\",\r\n+//       routeDescription: \"login page\",\r\n+//       response: \"Navigating to the login page.\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"go to login page\",\r\n+//       route: \"/login\",\r\n+//       routeDescription: \"login page\",\r\n+//       response: \"Navigating to the login page.\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"please take me to login page\",\r\n+//       route: \"/login\",\r\n+//       routeDescription: \"login page\",\r\n+//       response: \"Navigating to the login page.\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"Go to login page\",\r\n+//       route: \"/login\",\r\n+//       routeDescription: \"login page\",\r\n+//       response: \"Navigating to the login page.\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"open login page\",\r\n+//       route: \"/login\",\r\n+//       routeDescription: \"login page\",\r\n+//       response: \"Navigating to the login page.\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"can you please take me to signup page\",\r\n+//       route: \"/signup\",\r\n+//       routeDescription: \"signup page\",\r\n+//       response: \"Navigating to the signup page.\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"take me to signup page\",\r\n+//       route: \"/signup\",\r\n+//       routeDescription: \"signup page\",\r\n+//       response: \"Navigating to the signup page.\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"Go to signup page\",\r\n+//       route: \"/signup\",\r\n+//       routeDescription: \"signup page\",\r\n+//       response: \"Navigating to the signup page.\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"open signup page\",\r\n+//       route: \"/signup\",\r\n+//       routeDescription: \"signup page\",\r\n+//       response: \"Navigating to the signup page.\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"what are platform features\",\r\n+\r\n+//       response:\r\n+//         \"Dashboard, Dynamic time table, Learning Networks, Little Masters, Video Based Dictionary, General Search.\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"Features of platform\",\r\n+\r\n+//       response:\r\n+//         \"Dashboard, Dynamic time table, Learning Networks, Little Masters, Video Based Dictionary, General Search.\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"What does the platform offer\",\r\n+\r\n+//       response:\r\n+//         \"Dashboard, Dynamic time table, Learning Networks, Little Masters, Video Based Dictionary, General Search.\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"Say me the features of platform\",\r\n+\r\n+//       response:\r\n+//         \"Dashboard, Dynamic time table, Learning Networks, Little Masters, Video Based Dictionary, General Search.\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"Say me the services of platform\",\r\n+\r\n+//       response:\r\n+//         \"Dashboard, Dynamic time table, Learning Networks, Little Masters, Video Based Dictionary, General Search.\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"tell me the services offered by the platform\",\r\n+\r\n+//       response:\r\n+//         \"Dashboard, Dynamic time table, Learning Networks, Little Masters, Video Based Dictionary, General Search.\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"explain platform services\",\r\n+\r\n+//       response:\r\n+//         \"Dashboard, Dynamic time table, Learning Networks, Little Masters, Video Based Dictionary, General Search.\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"Give me the Parent voice of Julia Harris\",\r\n+\r\n+//       response:\r\n+//         \"Brane education has helped my son a lot in his studies. He improved a lot in his studies and is now able to score good marks in his exams\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"Play today's motivational video\",\r\n+\r\n+//       response: \"I am playing the video\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"Play today's video\",\r\n+\r\n+//       response: \"I am playing Motivational video\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"Leaders Voice\",\r\n+\r\n+//       response:\r\n+//         \"This Voice-interactive AI Platform is a game Changer. It revolutionizes education.\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"Curriculum Supported by Brane Education\",\r\n+\r\n+//       response:\r\n+//         \"we support multiple Boards let me say few Telangana State Board Andhra Pradesh Board Maharashtra Board Assam Board\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"Boards supported by the platform\",\r\n+\r\n+//       response:\r\n+//         \"we support multiple Boards let me say few Telangana State Board Andhra Pradesh Board Maharashtra Board Assam Board\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"Curriculum\",\r\n+\r\n+//       response:\r\n+//         \"we support multiple Boards let me say few Telangana State Board Andhra Pradesh Board Maharashtra Board Assam Board\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"Go to landing page\",\r\n+\r\n+//       response: \"Okay, I am taking you to the landing page.\",\r\n+\r\n+//       route: \"/childpage\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"take me to landing page\",\r\n+\r\n+//       response: \"Okay, I am taking you to the landing page.\",\r\n+\r\n+//       route: \"/childpage\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"move to landing page\",\r\n+\r\n+//       response: \"Okay, I am taking you to the landing page.\",\r\n+\r\n+//       route: \"/childpage\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"roll back to landing page\",\r\n+\r\n+//       response: \"Okay, I am taking you to the landing page.\",\r\n+\r\n+//       route: \"/childpage\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"move to landing page\",\r\n+\r\n+//       response: \"Okay, I am taking you to the landing page.\",\r\n+\r\n+//       route: \"/childpage\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"what is today's quote\",\r\n+\r\n+//       response:\r\n+//         \"Determination is the power that sees us through all our frustration and obstacles. It helps in building our willpower which is the very basis of success.\",\r\n+\r\n+//       // route: \"/childpage\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"Today's Inspirational quote\",\r\n+\r\n+//       response:\r\n+//         \"Determination is the power that sees us through all our frustration and obstacles. It helps in building our willpower which is the very basis of success.\",\r\n+\r\n+//       // route: \"/childpage\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"say me today's quote\",\r\n+\r\n+//       response:\r\n+//         \"Determination is the power that sees us through all our frustration and obstacles. It helps in building our willpower which is the very basis of success.\",\r\n+\r\n+//       // route: \"/childpage\",\r\n+//     },\r\n+//     {\r\n+//       utterance: \"go back\",\r\n+//       response: \"Going back.\",\r\n+//       action: goBack, // Note the use of an action property\r\n+//     },\r\n+//     {\r\n+//       utterance: \"go forward\",\r\n+//       response: \"Going forward.\",\r\n+//       action: goForward,\r\n+//     },\r\n+//     {\r\n+//       utterance: \"play video\",\r\n+//       // response: \"Playing video.\",\r\n+//       action: playVideo,\r\n+//     },\r\n+//     {\r\n+//       utterance: \"pause video\",\r\n+//       // response: \"Pausing video.\",\r\n+//       action: pauseVideo,\r\n+//     },\r\n+//     {\r\n+//       utterance: \"start video\",\r\n+//       // response: \"Playing video.\",\r\n+//       action: playVideo,\r\n+//     },\r\n+//     {\r\n+//       utterance: \"stop video\",\r\n+//       // response: \"Playing video.\",\r\n+//       action: pauseVideo,\r\n+//     },\r\n+//     {\r\n+//       utterance: \"scroll up\",\r\n+//       // response: \"Scrolling up.\",\r\n+//       action: scrollUp,\r\n+//     },\r\n+//     {\r\n+//       utterance: \"scroll down\",\r\n+//       // response: \"Scrolling down.\",\r\n+//       action: scrollDown,\r\n+//     },\r\n+//     {\r\n+//       utterance: \"go up\",\r\n+\r\n+//       // response: \"Scrolling up.\",\r\n+//       action: scrollUp,\r\n+//     },\r\n+//     {\r\n+//       utterance: \"go down\",\r\n+//       // response: \"Scrolling down.\",\r\n+//       action: scrollDown,\r\n+//     },\r\n+//     {\r\n+//       utterance: \"scroll to top\",\r\n+//       action: scrollToTop,\r\n+//     },\r\n+//     {\r\n+//       utterance: \"scroll to bottom\",\r\n+//       action: scrollToBottom,\r\n+//     },\r\n+//   ];\r\n+//   return (\r\n+//     <div className=\"speech-bot-container\">\r\n+//       <div\r\n+//         className={`button-container ${\r\n+//           isListening ? \"voicebotframeactive\" : \"voicebotframe\"\r\n+//         }`}\r\n+//       >\r\n+//         <div onClick={isListening ? stopListening : startListening}>\r\n+//           <iframe\r\n+//             src={\r\n+//               isListening\r\n+//                 ? \"https://lottie.host/?file=a89aca3f-5407-4052-82c3-2048afca7a9f/NpCdWzLSKD.json\"\r\n+//                 : \"https://lottie.host/?file=d2b6cc0e-fe95-4847-85b5-35365fca7e00/vTudpCuPZq.json\"\r\n+//             }\r\n+//             width=\"120\" // Set your desired width\r\n+//             height=\"120\" // Set your desired height\r\n+//             title={isListening ? \"Stop Animation\" : \"Start Animation\"}\r\n+//             className={isListening ? \"voicebotframeactive\" : \"voicebotframe\"}\r\n+//           ></iframe>\r\n+//           {isListening ? (\r\n+//             <div className=\"overlay\" onClick={stopListening}></div>\r\n+//           ) : (\r\n+//             <div className=\"overlay\" onClick={startListening}></div>\r\n+//           )}\r\n+//         </div>\r\n+//       </div>\r\n+//     </div>\r\n+//   );\r\n+// };\r\n+\r\n+// export default VoiceBot;\r\n+\r\n+// All functionalities but messed up\r\n+\r\n+// import React, { useState, useEffect, useRef } from \"react\";\r\n+// import { useNavigate, useLocation } from \"react-router-dom\";\r\n+// import Fuse from \"fuse.js\";\r\n+// import \"./VoiceBot.css\";\r\n+\r\n+// const VoiceBot = ({ videoRef, takeTestRef, goBackRef }) => {\r\n+//   const [isListening, setIsListening] = useState(false);\r\n+//   const [isSpeaking, setIsSpeaking] = useState(false);\r\n+//   const recognition = useRef(null);\r\n+//   const speechSynthesis = useRef(window.speechSynthesis);\r\n+//   const hasGreeted = useRef(false);\r\n+//   const navigate = useNavigate();\r\n+//   const location = useLocation();\r\n+//   const isRecognitionActive = useRef(false);\r\n+\r\n+//   useEffect(() => {\r\n+//     recognition.current = new window.webkitSpeechRecognition();\r\n+//     recognition.current.continuous = true;\r\n+//     recognition.current.interimResults = false;\r\n+//     recognition.current.onresult = onResult;\r\n+//     recognition.current.onend = onRecognitionEnd;\r\n+\r\n+//     return () => {\r\n+//       if (recognition.current) {\r\n+//         recognition.current.abort();\r\n+//       }\r\n+//     };\r\n+//   }, [location.pathname]);\r\n+\r\n+//   const onResult = (event) => {\r\n+//     const resultIndex = event.resultIndex;\r\n+//     const transcript = event.results[resultIndex][0].transcript\r\n+//       .trim()\r\n+//       .toLowerCase();\r\n+\r\n+//     if (event.results[resultIndex].isFinal) {\r\n+//       console.log(`Recognized text: ${transcript}`);\r\n+//       if (transcript.includes(\"brain\")) {\r\n+//         console.log(\"Wake word heard, processing command...\");\r\n+//         handleCommandWithFuse(transcript.replace(\"brain\", \"\"));\r\n+//       }\r\n+//     }\r\n+//   };\r\n+\r\n+//   const startListening = () => {\r\n+//     if (!isRecognitionActive.current) {\r\n+//       setIsListening(true);\r\n+//       recognition.current.start();\r\n+//       isRecognitionActive.current = true;\r\n+//     }\r\n+//   };\r\n+\r\n+//   const stopListening = () => {\r\n+//     if (isRecognitionActive.current) {\r\n+//       setIsListening(false);\r\n+//       recognition.current.stop();\r\n+//       isRecognitionActive.current = false;\r\n+//     }\r\n+//   };\r\n+\r\n+//   const onRecognitionEnd = () => {\r\n+//     isRecognitionActive.current = false;\r\n+//     if (isListening) {\r\n+//       startListening();\r\n+//     }\r\n+//   };\r\n+\r\n+//   const speak = (message) => {\r\n+//     const utterance = new SpeechSynthesisUtterance(message);\r\n+//     utterance.onend = () => {\r\n+//       setIsSpeaking(false);\r\n+//       if (isListening && !isRecognitionActive.current) {\r\n+//         startListening();\r\n+//       }\r\n+//     };\r\n+\r\n+//     setIsSpeaking(true);\r\n+//     if (isRecognitionActive.current) {\r\n+//       stopListening(); // Adjusted to use stopListening\r\n+//     }\r\n+//     speechSynthesis.current.speak(utterance);\r\n+//   };\r\n+\r\n+//   useEffect(() => {\r\n+//     if (isListening && !hasGreeted.current) {\r\n+//       speak(\"Hello, I'm Brane. How can I assist you today?\");\r\n+//       hasGreeted.current = true;\r\n+//     }\r\n+//   }, [isListening]);\r\n+\r\n+//   const goBack = () => {\r\n+//     if (window.history.length > 1) {\r\n+//       navigate(-1);\r\n+//     } else {\r\n+//       speak(\"Can't go back any further.\");\r\n+//     }\r\n+//   };\r\n+\r\n+//   const goForward = () => {\r\n+//     // Unfortunately, there's no direct way to check if you can go forward in the history.\r\n+//     // You might need to manage this state manually based on user navigation.\r\n+//     navigate(1);\r\n+//   };\r\n+\r\n+//   const playVideo = () => {\r\n+//     if (videoRef.current && !videoRef.current.paused) {\r\n+//       speak(\"Video is already playing.\");\r\n+//     } else if (videoRef.current) {\r\n+//       videoRef.current.play();\r\n+//       speak(\"Playing video.\");\r\n+//     } else {\r\n+//       speak(\"No video to play.\");\r\n+//     }\r\n+//   };\r\n+\r\n+//   const pauseVideo = () => {\r\n+//     if (videoRef.current && videoRef.current.paused) {\r\n+//       speak(\"Video is already paused.\");\r\n+//     } else if (videoRef.current) {\r\n+//       videoRef.current.pause();\r\n+//       speak(\"Video paused.\");\r\n+//     } else {\r\n+//       speak(\"No video to pause.\");\r\n+//     }\r\n+//   };\r\n+\r\n+//   const scrollAmount = window.innerHeight * 0.82;\r\n+\r\n+//   const scrollUp = () => {\r\n+//     if (window.pageYOffset === 0) {\r\n+//       speak(\"Already at the top of the page.\");\r\n+//     } else {\r\n+//       window.scrollBy(0, -scrollAmount);\r\n+//       speak(\"Scrolled up.\");\r\n+//     }\r\n+//   };\r\n+\r\n+//   const scrollDown = () => {\r\n+//     const maxScrollTop =\r\n+//       document.documentElement.scrollHeight - window.innerHeight;\r\n+//     if (window.pageYOffset >= maxScrollTop) {\r\n+//       speak(\"Already at the bottom of the page.\");\r\n+//     } else {\r\n+//       window.scrollBy(0, scrollAmount);\r\n+//       speak(\"Scrolled down.\");\r\n+//     }\r\n+//   };\r\n+\r\n+//   const scrollToTop = () => {\r\n+//     if (window.pageYOffset === 0) {\r\n+//       speak(\"Already at the top of the page.\");\r\n+//     } else {\r\n+//       window.scrollTo(0, 0);\r\n+//       speak(\"Scrolled to the top of the page.\");\r\n+//     }\r\n+//   };\r\n+\r\n+//   const scrollToBottom = () => {\r\n+//     const maxScrollTop =\r\n+//       document.documentElement.scrollHeight - window.innerHeight;\r\n+//     if (window.pageYOffset >= maxScrollTop) {\r\n+//       speak(\"Already at the bottom of the page.\");\r\n+//     } else {\r\n+//       window.scrollTo(0, document.body.scrollHeight);\r\n+//       speak(\"Scrolled to the bottom of the page.\");\r\n+//     }\r\n+//   };\r\n+\r\n+//   // const speak = (message) => {\r\n+//   //   const utterance = new SpeechSynthesisUtterance(message);\r\n+//   //   utterance.onend = () => {\r\n+//   //     setIsSpeaking(false);\r\n+//   //     console.log(\"Speaking ended.\");\r\n+//   //     // Only restart recognition if we're still supposed to be listening\r\n+//   //     // if (isListening) {\r\n+//   //     //   if (restartRecognitionTimeout.current) {\r\n+//   //     //     clearTimeout(restartRecognitionTimeout.current);\r\n+//   //     //   }\r\n+//   //     //   restartRecognitionTimeout.current = setTimeout(() => {\r\n+//   //     //     console.log(\"Recognition restarted.\");\r\n+//   //     //     recognition.current.start();\r\n+//   //     //   }, 100); // Delay to prevent immediate restart\r\n+//   //     // }\r\n+//   //     if (isListening && !recognition.current.starting) { // Check the flag before restarting\r\n+//   //       recognition.current.starting = true; // Set the flag when starting recognition\r\n+//   //       recognition.current.start();\r\n+//   //     }\r\n+//   //   };\r\n+\r\n+//   //   setIsSpeaking(true);\r\n+//   //   console.log(\"Speaking started.\");\r\n+//   //   recognition.current.stop(); // Stop recognition when the bot starts speaking\r\n+//   //   speechSynthesis.current.speak(utterance);\r\n+//   // };\r\n+\r\n+//   // const onRecognitionEnd = () => {\r\n+//   //   console.log(\"Recognition ended.\");\r\n+//   //   setIsRecognitionActive(false); // Update state when recognition ends\r\n+//   //   recognition.current.starting = false; // Reset the flag when recognition ends\r\n+//   //   // We now check if the recognition is already running before starting it again\r\n+//   //   if (isListening && !isSpeaking && !recognition.current?.starting) {\r\n+//   //     console.log(\"Restarting recognition.\");\r\n+//   //     recognition.current.start();\r\n+//   //   }\r\n+//   // };\r\n+\r\n+//   // useEffect(() => {\r\n+//   //   if (isListening && !hasGreeted.current) {\r\n+//   //     speak(\"Hello, I'm Brane. How can I assist you today?\");\r\n+//   //     hasGreeted.current = true;\r\n+//   //   } else if (isListening && !isSpeaking) {\r\n+//   //     recognition.current.start();\r\n+//   //   }\r\n+//   // }, [isListening, isSpeaking]);\r\n+\r\n+//   // const startListening = () => {\r\n+//   //   console.log(\"Attempting to start listening.\");\r\n+//   //   if (recognition.current && !recognition.current.starting) {\r\n+//   //     setIsListening(true);\r\n+//   //     recognition.current.starting = true; // Set the flag when starting recognition\r\n+//   //     recognition.current.start();\r\n+//   //     console.log(\"Listening started.\");\r\n+//   //   }\r\n+//   // };\r\n+\r\n+//   // const stopListening = () => {\r\n+//   //   console.log(\"Stopping listening.\");\r\n+\r\n+//   //   setIsListening(false);\r\n+//   //   recognition.current.stop();\r\n+//   //   if (speechSynthesis.current.speaking) {\r\n+//   //     speechSynthesis.current.cancel();\r\n+//   //   }\r\n+//   //   if (restartRecognitionTimeout.current) {\r\n+//   //     clearTimeout(restartRecognitionTimeout.current);\r\n+//   //   }\r\n+//   //   console.log(\"Listening stopped.\");\r\n+//   // };\r\n+//   // Handle start and stop listening logic\r\n+\r\n+//   useEffect(() => {\r\n+//     if (isListening && !hasGreeted.current) {\r\n+//       speak(\"Hello, I'm Brane. How can I assist you today?\");\r\n+//       hasGreeted.current = true;\r\n+//     }\r\n+//   }, [isListening]);\r\n+\r\n+//   // const handleCommandWithFuse = (command) => {\r\n+//   //   const fuse = new Fuse(commands, { keys: [\"utterance\"], threshold: 0.4 });\r\n+//   //   const results = fuse.search(command);\r\n+//   //   const foundCommand = results.length ? results[0].item : null;\r\n+\r\n+//   //   if (foundCommand) {\r\n+//   //     console.log(\"Command found:\", foundCommand.utterance);\r\n+//   //     speak(foundCommand.response);\r\n+//   //     if (foundCommand.route) {\r\n+//   //       navigate(foundCommand.route); // Navigate to the route specified in the command\r\n+//   //     }\r\n+//   //   } else {\r\n+//   //     console.log(\"No command found.\");\r\n+//   //     speak(\"I'm not sure how to respond to that.\");\r\n+//   //   }\r\n+//   // };\r\n+\r\n+//   const handleCommandWithFuse = (command) => {\r\n+//     const fuse = new Fuse(commands, { keys: [\"utterance\"], threshold: 0.4 });\r\n+//     const results = fuse.search(command);\r\n+//     const foundCommand = results.length ? results[0].item : null;\r\n+\r\n+//     if (foundCommand) {\r\n+//       console.log(\"Command found:\", foundCommand.utterance);\r\n+\r\n+//       if (foundCommand.action) {\r\n+//         foundCommand.action();\r\n+//       } else if (foundCommand.route) {\r\n+//         navigate(foundCommand.route);\r\n+//       }\r\n+\r\n+//       if (foundCommand.response) {\r\n+//         speak(foundCommand.response);\r\n+//       }\r\n+//     } else {\r\n+//       console.log(\"No command found.\");\r\n+//       speak(\"I'm not sure how to respond to that.\");\r\n+//     }\r\n+//   };\r\n+\r\n+//   const commands = [\r\n+//     {\r\n+//       utterance: \"Hello who are you ?\",\r\n+\r\n+//       response:\r\n+//         \"Hi! This is Brane! your Voice bot from Brane Education How can I Assist you Today ?\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"Hello\",\r\n+\r\n+//       response: \"Hi! How can I assist you today?\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"hello\",\r\n+\r\n+//       response: \"Hi! How can I assist you today?\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"Hi.\",\r\n+\r\n+//       response: \"Hello! How can I assist you today?\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"Hey there\",\r\n+\r\n+//       response: \"Hi! How can I assist you today?\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"Good morning Brane.\",\r\n+\r\n+//       response: \"Hey Hiii! Good morning  ! How can I help you?\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"Good afternoon Brane.\",\r\n+\r\n+//       response: \"Hey Hiii! Good after noon ! How can I help you?\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"Good evening Brane.\",\r\n+\r\n+//       response: \"Hey Hiii! Good evening ! How can I help you?\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"can you please take me to login page\",\r\n+//       route: \"/login\",\r\n+//       routeDescription: \"login page\",\r\n+//       response: \"Navigating to the login page.\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"go to login page\",\r\n+//       route: \"/login\",\r\n+//       routeDescription: \"login page\",\r\n+//       response: \"Navigating to the login page.\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"please take me to login page\",\r\n+//       route: \"/login\",\r\n+//       routeDescription: \"login page\",\r\n+//       response: \"Navigating to the login page.\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"Go to login page\",\r\n+//       route: \"/login\",\r\n+//       routeDescription: \"login page\",\r\n+//       response: \"Navigating to the login page.\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"open login page\",\r\n+//       route: \"/login\",\r\n+//       routeDescription: \"login page\",\r\n+//       response: \"Navigating to the login page.\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"can you please take me to signup page\",\r\n+//       route: \"/signup\",\r\n+//       routeDescription: \"signup page\",\r\n+//       response: \"Navigating to the signup page.\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"take me to signup page\",\r\n+//       route: \"/signup\",\r\n+//       routeDescription: \"signup page\",\r\n+//       response: \"Navigating to the signup page.\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"Go to signup page\",\r\n+//       route: \"/signup\",\r\n+//       routeDescription: \"signup page\",\r\n+//       response: \"Navigating to the signup page.\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"open signup page\",\r\n+//       route: \"/signup\",\r\n+//       routeDescription: \"signup page\",\r\n+//       response: \"Navigating to the signup page.\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"what are platform features\",\r\n+\r\n+//       response:\r\n+//         \"Dashboard, Dynamic time table, Learning Networks, Little Masters, Video Based Dictionary, General Search.\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"Features of platform\",\r\n+\r\n+//       response:\r\n+//         \"Dashboard, Dynamic time table, Learning Networks, Little Masters, Video Based Dictionary, General Search.\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"What does the platform offer\",\r\n+\r\n+//       response:\r\n+//         \"Dashboard, Dynamic time table, Learning Networks, Little Masters, Video Based Dictionary, General Search.\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"Say me the features of platform\",\r\n+\r\n+//       response:\r\n+//         \"Dashboard, Dynamic time table, Learning Networks, Little Masters, Video Based Dictionary, General Search.\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"Say me the services of platform\",\r\n+\r\n+//       response:\r\n+//         \"Dashboard, Dynamic time table, Learning Networks, Little Masters, Video Based Dictionary, General Search.\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"tell me the services offered by the platform\",\r\n+\r\n+//       response:\r\n+//         \"Dashboard, Dynamic time table, Learning Networks, Little Masters, Video Based Dictionary, General Search.\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"explain platform services\",\r\n+\r\n+//       response:\r\n+//         \"Dashboard, Dynamic time table, Learning Networks, Little Masters, Video Based Dictionary, General Search.\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"Give me the Parent voice of Julia Harris\",\r\n+\r\n+//       response:\r\n+//         \"Brane education has helped my son a lot in his studies. He improved a lot in his studies and is now able to score good marks in his exams\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"Play today's motivational video\",\r\n+\r\n+//       response: \"I am playing the video\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"Play today's video\",\r\n+\r\n+//       response: \"I am playing Motivational video\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"Leaders Voice\",\r\n+\r\n+//       response:\r\n+//         \"This Voice-interactive AI Platform is a game Changer. It revolutionizes education.\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"Curriculum Supported by Brane Education\",\r\n+\r\n+//       response:\r\n+//         \"we support multiple Boards let me say few Telangana State Board Andhra Pradesh Board Maharashtra Board Assam Board\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"Boards supported by the platform\",\r\n+\r\n+//       response:\r\n+//         \"we support multiple Boards let me say few Telangana State Board Andhra Pradesh Board Maharashtra Board Assam Board\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"Curriculum\",\r\n+\r\n+//       response:\r\n+//         \"we support multiple Boards let me say few Telangana State Board Andhra Pradesh Board Maharashtra Board Assam Board\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"Go to landing page\",\r\n+\r\n+//       response: \"Okay, I am taking you to the landing page.\",\r\n+\r\n+//       route: \"/childpage\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"take me to landing page\",\r\n+\r\n+//       response: \"Okay, I am taking you to the landing page.\",\r\n+\r\n+//       route: \"/childpage\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"move to landing page\",\r\n+\r\n+//       response: \"Okay, I am taking you to the landing page.\",\r\n+\r\n+//       route: \"/childpage\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"roll back to landing page\",\r\n+\r\n+//       response: \"Okay, I am taking you to the landing page.\",\r\n+\r\n+//       route: \"/childpage\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"move to landing page\",\r\n+\r\n+//       response: \"Okay, I am taking you to the landing page.\",\r\n+\r\n+//       route: \"/childpage\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"what is today's quote\",\r\n+\r\n+//       response:\r\n+//         \"Determination is the power that sees us through all our frustration and obstacles. It helps in building our willpower which is the very basis of success.\",\r\n+\r\n+//       // route: \"/childpage\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"Today's Inspirational quote\",\r\n+\r\n+//       response:\r\n+//         \"Determination is the power that sees us through all our frustration and obstacles. It helps in building our willpower which is the very basis of success.\",\r\n+\r\n+//       // route: \"/childpage\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"say me today's quote\",\r\n+\r\n+//       response:\r\n+//         \"Determination is the power that sees us through all our frustration and obstacles. It helps in building our willpower which is the very basis of success.\",\r\n+\r\n+//       // route: \"/childpage\",\r\n+//     },\r\n+//     {\r\n+//       utterance: \"go back\",\r\n+//       response: \"Going back.\",\r\n+//       action: goBack, // Note the use of an action property\r\n+//     },\r\n+//     {\r\n+//       utterance: \"go forward\",\r\n+//       response: \"Going forward.\",\r\n+//       action: goForward,\r\n+//     },\r\n+//     {\r\n+//       utterance: \"play video\",\r\n+//       // response: \"Playing video.\",\r\n+//       action: playVideo,\r\n+//     },\r\n+//     {\r\n+//       utterance: \"pause video\",\r\n+//       // response: \"Pausing video.\",\r\n+//       action: pauseVideo,\r\n+//     },\r\n+//     {\r\n+//       utterance: \"start video\",\r\n+//       // response: \"Playing video.\",\r\n+//       action: playVideo,\r\n+//     },\r\n+//     {\r\n+//       utterance: \"stop video\",\r\n+//       // response: \"Playing video.\",\r\n+//       action: pauseVideo,\r\n+//     },\r\n+//     {\r\n+//       utterance: \"scroll up\",\r\n+//       // response: \"Scrolling up.\",\r\n+//       action: scrollUp,\r\n+//     },\r\n+//     {\r\n+//       utterance: \"scroll down\",\r\n+//       // response: \"Scrolling down.\",\r\n+//       action: scrollDown,\r\n+//     },\r\n+//     {\r\n+//       utterance: \"go up\",\r\n+\r\n+//       // response: \"Scrolling up.\",\r\n+//       action: scrollUp,\r\n+//     },\r\n+//     {\r\n+//       utterance: \"go down\",\r\n+//       // response: \"Scrolling down.\",\r\n+//       action: scrollDown,\r\n+//     },\r\n+//     {\r\n+//       utterance: \"scroll to top\",\r\n+//       action: scrollToTop,\r\n+//     },\r\n+//     {\r\n+//       utterance: \"scroll to bottom\",\r\n+//       action: scrollToBottom,\r\n+//     },\r\n+//     {\r\n+//       utterance: \"go back\",\r\n+//       action: goBackRef?.current?.click, // Use goBackRef directly\r\n+//       response: \"Going back.\",\r\n+//     },\r\n+//     {\r\n+//       utterance: \"take test\",\r\n+//       action: takeTestRef?.current?.click, // Use takeTestRef directly\r\n+//       response: \"Starting the test.\",\r\n+//     },\r\n+//   ];\r\n+//   return (\r\n+//     <div className=\"speech-bot-container\">\r\n+//       <div\r\n+//         className={`button-container ${\r\n+//           isListening ? \"voicebotframeactive\" : \"voicebotframe\"\r\n+//         }`}\r\n+//       >\r\n+//         <div onClick={isListening ? stopListening : startListening}>\r\n+//           <iframe\r\n+//             src={\r\n+//               isListening\r\n+//                 ? \"https://lottie.host/?file=a89aca3f-5407-4052-82c3-2048afca7a9f/NpCdWzLSKD.json\"\r\n+//                 : \"https://lottie.host/?file=d2b6cc0e-fe95-4847-85b5-35365fca7e00/vTudpCuPZq.json\"\r\n+//             }\r\n+//             width=\"120\" // Set your desired width\r\n+//             height=\"120\" // Set your desired height\r\n+//             title={isListening ? \"Stop Animation\" : \"Start Animation\"}\r\n+//             className={isListening ? \"voicebotframeactive\" : \"voicebotframe\"}\r\n+//           ></iframe>\r\n+//           {isListening ? (\r\n+//             <div className=\"overlay\" onClick={stopListening}></div>\r\n+//           ) : (\r\n+//             <div className=\"overlay\" onClick={startListening}></div>\r\n+//           )}\r\n+//         </div>\r\n+//       </div>\r\n+//     </div>\r\n+//   );\r\n+// };\r\n+\r\n+// export default VoiceBot;\r\n"
                },
                {
                    "date": 1700647871860,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -162,16 +162,9 @@\n       speak(\"Scrolled to the bottom of the page.\");\r\n     }\r\n   };\r\n \r\n-  const mute= () =>{\r\n-    setIsMuted(true);\r\n-  }\r\n-  const unmute= () =>{\r\n-    setIsMuted(false);\r\n-  }\r\n-\r\n-  const muteVideo = () => {\r\n+   const muteVideo = () => {\r\n     if (videoRef.current) {\r\n       setIsMuted(true);\r\n     } else {\r\n       speak(\"No video to mute.\");\r\n@@ -3745,3752 +3738,4 @@\n //   );\r\n // };\r\n \r\n // export default VoiceBot;\r\n-import React, { useState, useEffect, useRef } from \"react\";\r\n-import { useNavigate, useLocation } from \"react-router-dom\";\r\n-import Fuse from \"fuse.js\";\r\n-import \"./VoiceBot.css\";\r\n-import chatbotimage from \"../../assets/chatbotgif.gif\"\r\n-\r\n-const VoiceBot = ({ videoRef, isMuted, setIsMuted }) => {\r\n-  const [isListening, setIsListening] = useState(false);\r\n-  const [isSpeaking, setIsSpeaking] = useState(false);\r\n-  const recognition = useRef(null);\r\n-  const speechSynthesis = useRef(window.speechSynthesis);\r\n-  const [hasGreeted, setHasGreeted] = useState(false);\r\n-  const navigate = useNavigate();\r\n-\r\n-\r\n- // Initialize speech recognition\r\n- useEffect(() => {\r\n-  recognition.current = new window.webkitSpeechRecognition();\r\n-  recognition.current.continuous = true;\r\n-  recognition.current.interimResults = false;\r\n-  recognition.current.onresult = onResult;\r\n-  recognition.current.onend = onRecognitionEnd;\r\n-  recognition.current.starting = false;\r\n-\r\n-  recognition.current.onerror = (event) => {\r\n-    console.error(\"Recognition error:\", event.error);\r\n-    if (isListening && !isSpeaking) {\r\n-      restartRecognition();\r\n-    }\r\n-  };\r\n-\r\n-  return () => {\r\n-    if (recognition.current) {\r\n-      recognition.current.abort();\r\n-    }\r\n-  };\r\n-}, []);\r\n-\r\n-  useEffect(() => {\r\n-    const checkRecognition = () => {\r\n-      if (isListening && !isSpeaking && !recognition.current.starting) {\r\n-        console.log(\"Restarting recognition because it's not active.\");\r\n-        recognition.current.starting = true;\r\n-        recognition.current.start();\r\n-        console.log(\"Restarted recognition.\");\r\n-      }\r\n-    };\r\n-\r\n-    const recognitionCheckInterval = setInterval(checkRecognition, 500); // Check every .5 second\r\n-\r\n-    return () => {\r\n-      clearInterval(recognitionCheckInterval);\r\n-    };\r\n-  }, [isListening, isSpeaking]);\r\n-\r\n-\r\n-  const historyStack = useRef([]);\r\n-\r\n-  useEffect(() => {\r\n-    return () => {\r\n-      // Clean up the listener when the component unmounts\r\n-      window.removeEventListener(\"popstate\", handlePopState);\r\n-    };\r\n-  }, []);\r\n-\r\n-  const handlePopState = () => {\r\n-    // This needs to handle both back and forward browser actions\r\n-    // Use some logic to determine whether it's a back or forward action\r\n-    // For simplicity, assume it's always back\r\n-    historyStack.current.pop();\r\n-    forwardStack.current.length = 0; // Clear forward stack on manual navigation\r\n-  };\r\n-  \r\n-\r\n-  // Add a new entry to the stack whenever navigate is called\r\n-  const customNavigate = (to, options) => {\r\n-    historyStack.current.push(to);\r\n-    navigate(to, options);\r\n-  };\r\n-\r\n-  // Listen to popstate events to update the history stack\r\n-  useEffect(() => {\r\n-    window.addEventListener(\"popstate\", handlePopState);\r\n-  }, []);\r\n-\r\n-  const forwardStack = useRef([]);\r\n-\r\n-  const goBack = () => {\r\n-    if (window.history.state && window.history.state.idx > 0) {\r\n-      window.history.back();\r\n-      speak(\"Going back\");\r\n-    } else {\r\n-      speak(\"Can't go back any further.\");\r\n-    }\r\n-  };\r\n-\r\n-  const goForward = () => {\r\n-    if (window.history.state && window.history.state.idx < window.history.length - 1) {\r\n-      window.history.forward();\r\n-      speak(\"Going forward\");\r\n-    } else {\r\n-      speak(\"No forward history available.\");\r\n-    }\r\n-  };\r\n-\r\n-  const playVideo = () => {\r\n-    if (videoRef.current) {\r\n-      videoRef.current.play();\r\n-      speak(\"Playing video.\");\r\n-    } else {\r\n-      speak(\"No video to play.\");\r\n-    }\r\n-  };\r\n-\r\n-  const pauseVideo = () => {\r\n-    if (videoRef.current) {\r\n-      videoRef.current.pause();\r\n-      speak(\"Video paused.\");\r\n-    } else {\r\n-      speak(\"No video to pause.\");\r\n-    }\r\n-  };\r\n-\r\n-  const scrollAmount = window.innerHeight * 0.82;\r\n-\r\n-  const scrollUp = () => {\r\n-    if (window.pageYOffset === 0) {\r\n-      speak(\"Already at the top of the page.\");\r\n-    } else {\r\n-      window.scrollBy(0, -scrollAmount);\r\n-      speak(\"Scrolled up.\");\r\n-    }\r\n-  };\r\n-\r\n-  const scrollDown = () => {\r\n-    const maxScrollTop =\r\n-      document.documentElement.scrollHeight - window.innerHeight;\r\n-    if (window.pageYOffset >= maxScrollTop) {\r\n-      speak(\"Already at the bottom of the page.\");\r\n-    } else {\r\n-      window.scrollBy(0, scrollAmount);\r\n-      speak(\"Scrolled down.\");\r\n-    }\r\n-  };\r\n-\r\n-  const scrollToTop = () => {\r\n-    if (window.pageYOffset === 0) {\r\n-      speak(\"Already at the top of the page.\");\r\n-    } else {\r\n-      window.scrollTo(0, 0);\r\n-      speak(\"Scrolled to the top of the page.\");\r\n-    }\r\n-  };\r\n-\r\n-  const scrollToBottom = () => {\r\n-    const maxScrollTop =\r\n-      document.documentElement.scrollHeight - window.innerHeight;\r\n-    if (window.pageYOffset >= maxScrollTop) {\r\n-      speak(\"Already at the bottom of the page.\");\r\n-    } else {\r\n-      window.scrollTo(0, document.body.scrollHeight);\r\n-      speak(\"Scrolled to the bottom of the page.\");\r\n-    }\r\n-  };\r\n-\r\n-  const mute= () =>{\r\n-    setIsMuted(true);\r\n-  }\r\n-  const unmute= () =>{\r\n-    setIsMuted(false);\r\n-  }\r\n-\r\n-  const muteVideo = () => {\r\n-    if (videoRef.current) {\r\n-      mute\r\n-    } else {\r\n-      speak(\"No video to mute.\");\r\n-    }\r\n-  };\r\n-\r\n-  const unmuteVideo = () => {\r\n-    if (videoRef.current) {\r\n-      unmute\r\n-    } else {\r\n-      speak(\"No video to unmute.\");\r\n-    }\r\n-  };\r\n-\r\n-  const speak = (message) => {\r\n-    const utterance = new SpeechSynthesisUtterance(message);\r\n-    utterance.onend = () => {\r\n-      setIsSpeaking(false);\r\n-      // Restart recognition after speaking has ended\r\n-      if (isListening) {\r\n-        restartRecognition();\r\n-      }\r\n-    };\r\n-  \r\n-    setIsSpeaking(true);\r\n-    // Stop recognition when the bot starts speaking\r\n-    if (recognition.current) {\r\n-      recognition.current.abort();\r\n-    }\r\n-    speechSynthesis.current.speak(utterance);\r\n-  };\r\n-  \r\n-\r\n-  const restartRecognition = () => {\r\n-    // Check if recognition is not already started and if the bot is set to listen\r\n-    if (recognition.current && !recognition.current.starting && isListening && !isSpeaking) {\r\n-      recognition.current.abort(); // Ensure any ongoing recognition is stopped\r\n-      recognition.current.starting = true;\r\n-      recognition.current.start();\r\n-    }\r\n-  };\r\n-  \r\n-    // Restart recognition when bot finishes speaking and isListening is true\r\n-    useEffect(() => {\r\n-      if (!isSpeaking && isListening) {\r\n-        restartRecognition();\r\n-      }\r\n-    }, [isSpeaking, isListening]);\r\n-\r\n-  const onResult = (event) => {\r\n-    const resultIndex = event.resultIndex;\r\n-    const transcript = event.results[resultIndex][0].transcript\r\n-      .trim()\r\n-      .toLowerCase();\r\n-\r\n-    if (event.results[resultIndex].isFinal) {\r\n-      console.log(`Recognized text: ${transcript}`);\r\n-      if (transcript.includes(\"brain\")) {\r\n-        console.log(\"Wake word heard, processing command...\");\r\n-        handleCommandWithFuse(transcript.replace(\"brain\", \"\"));\r\n-      }\r\n-    }\r\n-  };\r\n-\r\n-  const onRecognitionEnd = () => {\r\n-    recognition.current.starting = false;\r\n-    if (isListening && !isSpeaking) {\r\n-      restartRecognition();\r\n-    }\r\n-  };\r\n-\r\n-  useEffect(() => {\r\n-    if (isListening && !hasGreeted) {\r\n-      speak(\"Hello, I'm Brane. How can I help you today?\");\r\n-      setHasGreeted(true);\r\n-    }\r\n-  }, [isListening, hasGreeted]);\r\n-\r\n-\r\n-  // Updated startListening function\r\n-  const startListening = () => {\r\n-    setIsListening(true);\r\n-    if (!recognition.current.starting) {\r\n-      restartRecognition();\r\n-    }\r\n-  };\r\n-\r\n-  // Updated stopListening function\r\n-  const stopListening = () => {\r\n-    setIsListening(false);\r\n-    if (speechSynthesis.current.speaking) {\r\n-      speechSynthesis.current.cancel();\r\n-    }\r\n-    recognition.current.abort();\r\n-  };\r\n-\r\n-\r\n-  const handleCommandWithFuse = (command) => {\r\n-    const fuse = new Fuse(commands, { keys: [\"utterance\"], threshold: 0.4 });\r\n-    const results = fuse.search(command);\r\n-    const foundCommand = results.length ? results[0].item : null;\r\n-\r\n-    if (foundCommand) {\r\n-      console.log(\"Command found:\", foundCommand.utterance);\r\n-\r\n-      if (foundCommand.action) {\r\n-        foundCommand.action();\r\n-      } else if (foundCommand.route) {\r\n-        navigate(foundCommand.route);\r\n-      }\r\n-\r\n-      // Speak after performing the action or navigation\r\n-      speak(foundCommand.response);\r\n-    } else {\r\n-      console.log(\"No command found.\");\r\n-      speak(\"I'm not sure how to respond to that.\");\r\n-    }\r\n-  };\r\n-\r\n-  const commands = [\r\n-    {\r\n-      utterance: \"Hello who are you ?\",\r\n-\r\n-      response:\r\n-        \"Hi! This is Brane! your Voice bot from Brane Education How can I Assist you Today ?\",\r\n-    },\r\n-\r\n-    {\r\n-      utterance: \"Hello\",\r\n-\r\n-      response: \"Hi! How can I assist you today?\",\r\n-    },\r\n-\r\n-    {\r\n-      utterance: \"hello\",\r\n-\r\n-      response: \"Hi! How can I assist you today?\",\r\n-    },\r\n-\r\n-    {\r\n-      utterance: \"Hi.\",\r\n-\r\n-      response: \"Hello! How can I assist you today?\",\r\n-    },\r\n-\r\n-    {\r\n-      utterance: \"Hey there\",\r\n-\r\n-      response: \"Hi! How can I assist you today?\",\r\n-    },\r\n-\r\n-    {\r\n-      utterance: \"Good morning Brane.\",\r\n-\r\n-      response: \"Hey Hiii! Good morning  ! How can I help you?\",\r\n-    },\r\n-\r\n-    {\r\n-      utterance: \"Good afternoon Brane.\",\r\n-\r\n-      response: \"Hey Hiii! Good after noon ! How can I help you?\",\r\n-    },\r\n-\r\n-    {\r\n-      utterance: \"Good evening Brane.\",\r\n-\r\n-      response: \"Hey Hiii! Good evening ! How can I help you?\",\r\n-    },\r\n-\r\n-    {\r\n-      utterance: \"take me to homepage\",\r\n-\r\n-      route: \"/\",\r\n-\r\n-      response: \"You're in Homepage now\",\r\n-    },\r\n-    {\r\n-      utterance: \"open homepage\",\r\n-\r\n-      route: \"/\",\r\n-\r\n-      response: \"You're in Homepage now\",\r\n-    },\r\n-    {\r\n-      utterance: \"go to homepage\",\r\n-\r\n-      route: \"/\",\r\n-\r\n-      response: \"You're in Homepage now\",\r\n-    },\r\n-    {\r\n-      utterance: \"go back to homepage\",\r\n-\r\n-      route: \"/\",\r\n-\r\n-      response: \"You're in Homepage now\",\r\n-    },\r\n-    {\r\n-      utterance: \"can you please take me to login page\",\r\n-\r\n-      route: \"/login\",\r\n-\r\n-      response: \"Here's the Login Page, Please Login\",\r\n-    },\r\n-\r\n-    {\r\n-      utterance: \"please take me to login page\",\r\n-\r\n-      route: \"/login\",\r\n-\r\n-      response: \"Here's the Login Page, Please Login\",\r\n-    },\r\n-\r\n-    {\r\n-      utterance: \"Go to login page\",\r\n-\r\n-      route: \"/login\",\r\n-\r\n-      response: \"Here's the Login Page, Please Login\",\r\n-    },\r\n-\r\n-    {\r\n-      utterance: \"open login page\",\r\n-\r\n-      route: \"/login\",\r\n-\r\n-      response: \"Here's the Login Page, Please Login\",\r\n-    },\r\n-\r\n-    {\r\n-      utterance: \"can you please take me to signup page\",\r\n-\r\n-      route: \"/signup\",\r\n-\r\n-      response: \"Here's the signup page. Please proceed With Registration.\",\r\n-    },\r\n-\r\n-    {\r\n-      utterance: \"take me to signup page\",\r\n-\r\n-      route: \"/signup\",\r\n-\r\n-      response: \"Here's the signup page. Please proceed With Registration.\",\r\n-    },\r\n-\r\n-    {\r\n-      utterance: \"Go to signup page\",\r\n-\r\n-      route: \"/signup\",\r\n-\r\n-      response: \"Here's the signup page. Please proceed With Registration.\",\r\n-    },\r\n-\r\n-    {\r\n-      utterance: \"open signup page\",\r\n-\r\n-      route: \"/signup\",\r\n-\r\n-      response: \"Here's the signup page. Please proceed With Registration.\",\r\n-    },\r\n-\r\n-    {\r\n-      utterance: \"Go to face id\",\r\n-\r\n-      route: \"/login/faceid\",\r\n-\r\n-      response: \"Here's Face ID Login. Please proceed.\",\r\n-    },\r\n-\r\n-    {\r\n-      utterance: \"Go to face id login\",\r\n-\r\n-      route: \"/login/faceid\",\r\n-\r\n-      response: \"Here's Face ID Login. Please proceed.\",\r\n-    },\r\n-    {\r\n-      utterance: \"Go to face login\",\r\n-\r\n-      route: \"/login/faceid\",\r\n-\r\n-      response: \"Here's Face ID Login. Please proceed.\",\r\n-    },\r\n-\r\n-    {\r\n-      utterance: \"login with face id\",\r\n-\r\n-      route: \"/login/faceid\",\r\n-\r\n-      response: \"Here's Face ID Login. Please proceed.\",\r\n-    },\r\n-\r\n-    {\r\n-      utterance: \"login with face\",\r\n-\r\n-      route: \"/login/faceid\",\r\n-\r\n-      response: \"Here's Face ID Login. Please proceed.\",\r\n-    },\r\n-\r\n-    {\r\n-      utterance: \"i want to login with face\",\r\n-\r\n-      route: \"/login/faceid\",\r\n-\r\n-      response: \"Here's Face ID Login. Please proceed.\",\r\n-    },\r\n-\r\n-    {\r\n-      utterance: \"login with voice\",\r\n-\r\n-      route: \"/login/voiceid\",\r\n-\r\n-      response: \"Here's Voice Login. Please proceed.\",\r\n-    },\r\n-\r\n-    {\r\n-      utterance: \"i want to login with voice\",\r\n-\r\n-      route: \"/login/voiceid\",\r\n-\r\n-      response: \"Here's Voice Login. Please proceed.\",\r\n-    },\r\n-\r\n-    {\r\n-      utterance: \"go to voice login\",\r\n-\r\n-      route: \"/login/voiceid\",\r\n-\r\n-      response: \"Here's Voice Login. Please proceed.\",\r\n-    },\r\n-\r\n-    {\r\n-      utterance: \"login with voice\",\r\n-\r\n-      route: \"/login/voiceid\",\r\n-\r\n-      response: \"Here's Voice Login. Please proceed.\",\r\n-    },\r\n-\r\n-    {\r\n-      utterance: \"login with mobile\",\r\n-\r\n-      route: \"/login/mobile\",\r\n-\r\n-      response: \"Here's Mobile Login. Please proceed.\",\r\n-    },\r\n-\r\n-    {\r\n-      utterance: \"i want to login with mobile\",\r\n-\r\n-      route: \"/login/mobile\",\r\n-\r\n-      response: \"Here's Mobile Login. Please proceed.\",\r\n-    },\r\n-    {\r\n-      utterance: \"go to mobile login\",\r\n-\r\n-      route: \"/login/mobile\",\r\n-\r\n-      response: \"Here's Mobile Login. Please proceed.\",\r\n-    },\r\n-    {\r\n-      utterance: \"go to about page\",\r\n-\r\n-      route: \"/aboutus\",\r\n-\r\n-      response: \"This is About us.\",\r\n-    },\r\n-    {\r\n-      utterance: \"go to about us page\",\r\n-\r\n-      route: \"/aboutus\",\r\n-\r\n-      response: \"This is About us.\",\r\n-    },\r\n-    {\r\n-      utterance: \"open about us page\",\r\n-\r\n-      route: \"/aboutus\",\r\n-\r\n-      response: \"This is About us.\",\r\n-    },\r\n-    {\r\n-      utterance: \"open about page\",\r\n-\r\n-      route: \"/aboutus\",\r\n-\r\n-      response: \"This is About us.\",\r\n-    },\r\n-    {\r\n-      utterance: \"take me to about page\",\r\n-\r\n-      route: \"/aboutus\",\r\n-\r\n-      response: \"This is About us.\",\r\n-    },\r\n-    {\r\n-      utterance: \"take me to about us page\",\r\n-\r\n-      route: \"/aboutus\",\r\n-\r\n-      response: \"This is About us.\",\r\n-    },\r\n-\r\n-    {\r\n-      utterance: \"go to contact page\",\r\n-\r\n-      route: \"/contactus\",\r\n-\r\n-      response: \"You can contact us from here\",\r\n-    },\r\n-    {\r\n-      utterance: \"go to contact us page\",\r\n-\r\n-      route: \"/contactus\",\r\n-\r\n-      response: \"You can contact us from here\",\r\n-    },\r\n-    {\r\n-      utterance: \"open contact us page\",\r\n-\r\n-      route: \"/contactus\",\r\n-\r\n-      response: \"You can contact us from here\",\r\n-    },\r\n-    {\r\n-      utterance: \"open contact page\",\r\n-\r\n-      route: \"/contactus\",\r\n-\r\n-      response: \"You can contact us from here\",\r\n-    },\r\n-    {\r\n-      utterance: \"take me to about page\",\r\n-\r\n-      route: \"/contactus\",\r\n-\r\n-      response: \"You can contact us from here\",\r\n-    },\r\n-    {\r\n-      utterance: \"take me to contact us page\",\r\n-\r\n-      route: \"/contactus\",\r\n-\r\n-      response: \"You can contact us from here\",\r\n-    },\r\n-\r\n-\r\n-    {\r\n-      utterance: \"what are platform features\",\r\n-\r\n-      response:\r\n-        \"Dashboard, Dynamic time table, Learning Networks, Little Masters, Video Based Dictionary, General Search.\",\r\n-    },\r\n-\r\n-    {\r\n-      utterance: \"Features of platform\",\r\n-\r\n-      response:\r\n-        \"Dashboard, Dynamic time table, Learning Networks, Little Masters, Video Based Dictionary, General Search.\",\r\n-    },\r\n-\r\n-    {\r\n-      utterance: \"What does the platform offer\",\r\n-\r\n-      response:\r\n-        \"Dashboard, Dynamic time table, Learning Networks, Little Masters, Video Based Dictionary, General Search.\",\r\n-    },\r\n-\r\n-    {\r\n-      utterance: \"Say me the features of platform\",\r\n-\r\n-      response:\r\n-        \"Dashboard, Dynamic time table, Learning Networks, Little Masters, Video Based Dictionary, General Search.\",\r\n-    },\r\n-\r\n-    {\r\n-      utterance: \"Say me the services of platform\",\r\n-\r\n-      response:\r\n-        \"Dashboard, Dynamic time table, Learning Networks, Little Masters, Video Based Dictionary, General Search.\",\r\n-    },\r\n-\r\n-    {\r\n-      utterance: \"tell me the services offered by the platform\",\r\n-\r\n-      response:\r\n-        \"Dashboard, Dynamic time table, Learning Networks, Little Masters, Video Based Dictionary, General Search.\",\r\n-    },\r\n-\r\n-    {\r\n-      utterance: \"explain platform services\",\r\n-\r\n-      response:\r\n-        \"Dashboard, Dynamic time table, Learning Networks, Little Masters, Video Based Dictionary, General Search.\",\r\n-    },\r\n-\r\n-    {\r\n-      utterance: \"Give me the Parent voice of Julia Harris\",\r\n-\r\n-      response:\r\n-        \"Brane education has helped my son a lot in his studies. He improved a lot in his studies and is now able to score good marks in his exams\",\r\n-    },\r\n-\r\n-    {\r\n-      utterance: \"Leaders Voice\",\r\n-\r\n-      response:\r\n-        \"This Voice-interactive AI Platform is a game Changer. It revolutionizes education.\",\r\n-    },\r\n-\r\n-    {\r\n-      utterance: \"Curriculum Supported by Brane Education\",\r\n-\r\n-      response:\r\n-        \"we support multiple Boards let me say few Telangana State Board Andhra Pradesh Board Maharashtra Board Assam Board\",\r\n-    },\r\n-\r\n-    {\r\n-      utterance: \"Boards supported by the platform\",\r\n-\r\n-      response:\r\n-        \"we support multiple Boards let me say few Telangana State Board Andhra Pradesh Board Maharashtra Board Assam Board\",\r\n-    },\r\n-\r\n-    {\r\n-      utterance: \"Curriculum\",\r\n-\r\n-      response:\r\n-        \"we support multiple Boards let me say few Telangana State Board Andhra Pradesh Board Maharashtra Board Assam Board\",\r\n-    },\r\n-\r\n-    // {\r\n-    //   utterance: \"Go to landing page\",\r\n-\r\n-    //   response: \"Okay, I am taking you to the landing page.\",\r\n-\r\n-    //   route: \"/childpage\",\r\n-    // },\r\n-\r\n-    // {\r\n-    //   utterance: \"take me to landing page\",\r\n-\r\n-    //   response: \"Okay, I am taking you to the landing page.\",\r\n-\r\n-    //   route: \"/childpage\",\r\n-    // },\r\n-\r\n-    // {\r\n-    //   utterance: \"move to landing page\",\r\n-\r\n-    //   response: \"Okay, I am taking you to the landing page.\",\r\n-\r\n-    //   route: \"/childpage\",\r\n-    // },\r\n-\r\n-    // {\r\n-    //   utterance: \"roll back to landing page\",\r\n-\r\n-    //   response: \"Okay, I am taking you to the landing page.\",\r\n-\r\n-    //   route: \"/childpage\",\r\n-    // },\r\n-\r\n-    // {\r\n-    //   utterance: \"move to landing page\",\r\n-\r\n-    //   response: \"Okay, I am taking you to the landing page.\",\r\n-\r\n-    //   route: \"/childpage\",\r\n-    // },\r\n-\r\n-    {\r\n-      utterance: \"what is today's quote\",\r\n-\r\n-      response:\r\n-        \"Determination is the power that sees us through all our frustration and obstacles. It helps in building our willpower which is the very basis of success.\",\r\n-\r\n-      route: \"/childpage\",\r\n-    },\r\n-\r\n-    {\r\n-      utterance: \"Today's Inspirational quote\",\r\n-\r\n-      response:\r\n-        \"Determination is the power that sees us through all our frustration and obstacles. It helps in building our willpower which is the very basis of success.\",\r\n-\r\n-      route: \"/childpage\",\r\n-    },\r\n-\r\n-    {\r\n-      utterance: \"say me today's quote\",\r\n-\r\n-      response:\r\n-        \"Determination is the power that sees us through all our frustration and obstacles. It helps in building our willpower which is the very basis of success.\",\r\n-\r\n-      route: \"/childpage\",\r\n-    },\r\n-    {\r\n-      utterance: \"go back\",\r\n-      response: \"\",\r\n-      action: goBack, // Note the use of an action property\r\n-    },\r\n-    {\r\n-      utterance: \"go forward\",\r\n-      response: \"\",\r\n-      action: goForward,\r\n-    },\r\n-    {\r\n-      utterance: \"play video\",\r\n-      // response: \"Playing video.\",\r\n-      action: playVideo,\r\n-    },\r\n-    {\r\n-      utterance: \"pause video\",\r\n-      // response: \"Pausing video.\",\r\n-      action: pauseVideo,\r\n-    },\r\n-    {\r\n-      utterance: \"start video\",\r\n-      // response: \"Playing video.\",\r\n-      action: playVideo,\r\n-    },\r\n-    {\r\n-      utterance: \"stop video\",\r\n-      // response: \"Playing video.\",\r\n-      action: pauseVideo,\r\n-    },\r\n-    {\r\n-      utterance: \"scroll up\",\r\n-      // response: \"Scrolling up.\",\r\n-      action: scrollUp,\r\n-    },\r\n-    {\r\n-      utterance: \"scroll down\",\r\n-      // response: \"Scrolling down.\",\r\n-      action: scrollDown,\r\n-    },\r\n-    {\r\n-      utterance: \"go up\",\r\n-\r\n-      // response: \"Scrolling up.\",\r\n-      action: scrollUp,\r\n-    },\r\n-    {\r\n-      utterance: \"go down\",\r\n-      // response: \"Scrolling down.\",\r\n-      action: scrollDown,\r\n-    },\r\n-    {\r\n-      utterance: \"scroll to top\",\r\n-      action: scrollToTop,\r\n-    },\r\n-    {\r\n-      utterance: \"scroll to bottom\",\r\n-      action: scrollToBottom,\r\n-    },\r\n-    {\r\n-      utterance: \"brane stop\",\r\n-      action: stopListening,\r\n-    },\r\n-    {\r\n-      utterance: \"brane turn off\",\r\n-      action: stopListening,\r\n-    },\r\n-    {\r\n-      utterance: \"brane stop the bot\",\r\n-      action: stopListening,\r\n-    },\r\n-    {\r\n-      utterance: \"mute the video\",\r\n-      action: muteVideo,\r\n-    },\r\n-    {\r\n-      utterance: \"unmute the video\",\r\n-      action: unmuteVideo,\r\n-    },\r\n-    {\r\n-      utterance: \"stop the video sound\",\r\n-      action: muteVideo,\r\n-    },\r\n-    {\r\n-      utterance: \"play the video sound\",\r\n-      action: unmuteVideo,\r\n-    },\r\n-  ];\r\n-\r\n-  return (\r\n-    <div className=\"speech-bot-container\">\r\n-      <div\r\n-        className={`button-container ${\r\n-          isListening ? \"voicebotframeactive\" : \"voicebotframe\"\r\n-        }`}\r\n-      >\r\n-        {/* <button onClick={isListening ? stopListening : startListening}>\r\n-          {isListening ? \"Stop\" : \"Start\"} Animation\r\n-        </button> */}\r\n-        <img \r\n-        className=\"botimage\"\r\n-          src={chatbotimage} alt=\"\" \r\n-          onClick={isListening ? stopListening : startListening}  \r\n-        />\r\n-\r\n-      </div>\r\n-    </div>\r\n-  );\r\n-};\r\n-\r\n-export default VoiceBot;\r\n-\r\n-\r\n-{/* // import React, { useState, useEffect, useRef } from \"react\";\r\n-// import { useNavigate, useLocation } from \"react-router-dom\";\r\n-// import Fuse from \"fuse.js\";\r\n-// import \"./VoiceBot.css\";\r\n-\r\n-// const VoiceBot = ({ videoRef }) => {\r\n-//   const [isListening, setIsListening] = useState(false);\r\n-//   const [isSpeaking, setIsSpeaking] = useState(false);\r\n-//   const recognition = useRef(null);\r\n-//   const speechSynthesis = useRef(window.speechSynthesis);\r\n-//   const [hasGreeted, setHasGreeted] = useState(false);\r\n-//   const navigate = useNavigate();\r\n-\r\n-//   useEffect(() => {\r\n-//     recognition.current = new window.webkitSpeechRecognition();\r\n-//     recognition.current.continuous = true;\r\n-//     recognition.current.interimResults = false;\r\n-//     recognition.current.onresult = onResult;\r\n-//     recognition.current.onend = onRecognitionEnd;\r\n-//     recognition.current.starting = false;\r\n-\r\n-//     // Simplified error handling, removed specific handling for 'no-speech'\r\n-//     recognition.current.onerror = (event) => {\r\n-//       console.error(\"Recognition error:\", event.error);\r\n-//       // Check if listening is true and the bot isn't speaking\r\n-//       if (isListening && !isSpeaking) {\r\n-//         // Restart recognition\r\n-//         restartRecognition();\r\n-//       }\r\n-//     };\r\n-\r\n-//     return () => {\r\n-//       if (recognition.current) {\r\n-//         recognition.current.abort();\r\n-//       }\r\n-//     };\r\n-//   }, []);\r\n-\r\n-//   useEffect(() => {\r\n-//     const checkRecognition = () => {\r\n-//       if (isListening && !isSpeaking && !recognition.current.starting) {\r\n-//         console.log(\"Restarting recognition because it's not active.\");\r\n-//         recognition.current.starting = true;\r\n-//         recognition.current.start();\r\n-//         console.log(\"Restarted recognition.\");\r\n-//       }\r\n-//     };\r\n-\r\n-//     const recognitionCheckInterval = setInterval(checkRecognition, 100); // Check every 1 second\r\n-\r\n-//     return () => {\r\n-//       clearInterval(recognitionCheckInterval);\r\n-//     };\r\n-//   }, [isListening, isSpeaking]);\r\n-\r\n-//   const restartRecognition = () => {\r\n-//     if (recognition.current.starting) {\r\n-//       console.log(\"Recognition is already starting or running.\");\r\n-//       return;\r\n-//     }\r\n-\r\n-//     recognition.current.abort(); // Stop any existing recognition process\r\n-//     recognition.current.starting = true;\r\n-//     recognition.current.start();\r\n-//     console.log(\"Recognition restarted.\");\r\n-//   };\r\n-\r\n-//   const historyStack = useRef([]);\r\n-\r\n-//   useEffect(() => {\r\n-//     return () => {\r\n-//       // Clean up the listener when the component unmounts\r\n-//       window.removeEventListener(\"popstate\", handlePopState);\r\n-//     };\r\n-//   }, []);\r\n-\r\n-//   const handlePopState = () => {\r\n-//     // This needs to handle both back and forward browser actions\r\n-//     // Use some logic to determine whether it's a back or forward action\r\n-//     // For simplicity, assume it's always back\r\n-//     historyStack.current.pop();\r\n-//     forwardStack.current.length = 0; // Clear forward stack on manual navigation\r\n-//   };\r\n-  \r\n-\r\n-//   // Add a new entry to the stack whenever navigate is called\r\n-//   const customNavigate = (to, options) => {\r\n-//     historyStack.current.push(to);\r\n-//     navigate(to, options);\r\n-//   };\r\n-\r\n-//   // Listen to popstate events to update the history stack\r\n-//   useEffect(() => {\r\n-//     window.addEventListener(\"popstate\", handlePopState);\r\n-//   }, []);\r\n-\r\n-//   const forwardStack = useRef([]);\r\n-\r\n-//   const goBack = () => {\r\n-//     if (window.history.state && window.history.state.idx > 0) {\r\n-//       window.history.back();\r\n-//       speak(\"Going back\");\r\n-//     } else {\r\n-//       speak(\"Can't go back any further.\");\r\n-//     }\r\n-//   };\r\n-\r\n-//   const goForward = () => {\r\n-//     if (window.history.state && window.history.state.idx < window.history.length - 1) {\r\n-//       window.history.forward();\r\n-//       speak(\"Going forward\");\r\n-//     } else {\r\n-//       speak(\"No forward history available.\");\r\n-//     }\r\n-//   };\r\n-\r\n-//   const playVideo = () => {\r\n-//     if (videoRef.current) {\r\n-//       videoRef.current.play();\r\n-//       speak(\"Playing video.\");\r\n-//     } else {\r\n-//       speak(\"No video to play.\");\r\n-//     }\r\n-//   };\r\n-\r\n-//   const pauseVideo = () => {\r\n-//     if (videoRef.current) {\r\n-//       videoRef.current.pause();\r\n-//       speak(\"Video paused.\");\r\n-//     } else {\r\n-//       speak(\"No video to pause.\");\r\n-//     }\r\n-//   };\r\n-\r\n-//   const scrollAmount = window.innerHeight * 0.82;\r\n-\r\n-//   const scrollUp = () => {\r\n-//     if (window.pageYOffset === 0) {\r\n-//       speak(\"Already at the top of the page.\");\r\n-//     } else {\r\n-//       window.scrollBy(0, -scrollAmount);\r\n-//       speak(\"Scrolled up.\");\r\n-//     }\r\n-//   };\r\n-\r\n-//   const scrollDown = () => {\r\n-//     const maxScrollTop =\r\n-//       document.documentElement.scrollHeight - window.innerHeight;\r\n-//     if (window.pageYOffset >= maxScrollTop) {\r\n-//       speak(\"Already at the bottom of the page.\");\r\n-//     } else {\r\n-//       window.scrollBy(0, scrollAmount);\r\n-//       speak(\"Scrolled down.\");\r\n-//     }\r\n-//   };\r\n-\r\n-//   const scrollToTop = () => {\r\n-//     if (window.pageYOffset === 0) {\r\n-//       speak(\"Already at the top of the page.\");\r\n-//     } else {\r\n-//       window.scrollTo(0, 0);\r\n-//       speak(\"Scrolled to the top of the page.\");\r\n-//     }\r\n-//   };\r\n-\r\n-//   const scrollToBottom = () => {\r\n-//     const maxScrollTop =\r\n-//       document.documentElement.scrollHeight - window.innerHeight;\r\n-//     if (window.pageYOffset >= maxScrollTop) {\r\n-//       speak(\"Already at the bottom of the page.\");\r\n-//     } else {\r\n-//       window.scrollTo(0, document.body.scrollHeight);\r\n-//       speak(\"Scrolled to the bottom of the page.\");\r\n-//     }\r\n-//   };\r\n-\r\n-//   const speak = (message) => {\r\n-//     console.log(\"speak function called with message:\", message);\r\n-//     const utterance = new SpeechSynthesisUtterance(message);\r\n-//     utterance.onend = () => {\r\n-//       setIsSpeaking(false);\r\n-//       console.log(\"Speaking ended.\");\r\n-//       if (isListening && !recognition.current.starting) {\r\n-//         console.log(\"Restarting recognition after speaking.\");\r\n-//         recognition.current.starting = true;\r\n-//         recognition.current.start();\r\n-//         console.log(\"Restarted recognition after speaking.\");\r\n-//       }\r\n-//     };\r\n-\r\n-//     setIsSpeaking(true);\r\n-//     console.log(\"Speaking started.\");\r\n-//     recognition.current.stop(); // Ensure to stop recognition before speaking\r\n-//     speechSynthesis.current.speak(utterance);\r\n-//   };\r\n-\r\n-//   const onResult = (event) => {\r\n-//     const resultIndex = event.resultIndex;\r\n-//     const transcript = event.results[resultIndex][0].transcript\r\n-//       .trim()\r\n-//       .toLowerCase();\r\n-\r\n-//     if (event.results[resultIndex].isFinal) {\r\n-//       console.log(`Recognized text: ${transcript}`);\r\n-//       if (transcript.includes(\"brain\")) {\r\n-//         console.log(\"Wake word heard, processing command...\");\r\n-//         handleCommandWithFuse(transcript.replace(\"brain\", \"\"));\r\n-//       }\r\n-//     }\r\n-//   };\r\n-\r\n-//   const onRecognitionEnd = () => {\r\n-//     recognition.current.starting = false;\r\n-//     if (isListening && !isSpeaking) {\r\n-//       restartRecognition();\r\n-//     }\r\n-//   };\r\n-\r\n-//   useEffect(() => {\r\n-//     if (isListening) {\r\n-//       if (!hasGreeted) {\r\n-//         speak(\"Hello, I'm Brane. How can I help you today?\");\r\n-//         setHasGreeted(true);\r\n-//       } else {\r\n-//         speak(\"Listening.\");\r\n-//       }\r\n-//     }\r\n-//   }, [isListening, hasGreeted]);\r\n-\r\n-\r\n-//   const startListening = () => {\r\n-//     if (!recognition.current.starting) {\r\n-//       setIsListening(true);\r\n-//       restartRecognition();\r\n-//     }\r\n-//   };\r\n-\r\n-//   const stopListening = () => {\r\n-//     setIsListening(false);\r\n-//     recognition.current.abort();\r\n-//     if (speechSynthesis.current.speaking) {\r\n-//       speechSynthesis.current.cancel();\r\n-//     }\r\n-//   };\r\n-\r\n-//   const handleCommandWithFuse = (command) => {\r\n-//     const fuse = new Fuse(commands, { keys: [\"utterance\"], threshold: 0.4 });\r\n-//     const results = fuse.search(command);\r\n-//     const foundCommand = results.length ? results[0].item : null;\r\n-\r\n-//     if (foundCommand) {\r\n-//       console.log(\"Command found:\", foundCommand.utterance);\r\n-\r\n-//       if (foundCommand.action) {\r\n-//         foundCommand.action();\r\n-//       } else if (foundCommand.route) {\r\n-//         navigate(foundCommand.route);\r\n-//       }\r\n-\r\n-//       // Speak after performing the action or navigation\r\n-//       speak(foundCommand.response);\r\n-//     } else {\r\n-//       console.log(\"No command found.\");\r\n-//       speak(\"I'm not sure how to respond to that.\");\r\n-//     }\r\n-//   };\r\n-\r\n-//   const commands = [\r\n-//     {\r\n-//       utterance: \"Hello who are you ?\",\r\n-\r\n-//       response:\r\n-//         \"Hi! This is Brane! your Voice bot from Brane Education How can I Assist you Today ?\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"Hello\",\r\n-\r\n-//       response: \"Hi! How can I assist you today?\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"hello\",\r\n-\r\n-//       response: \"Hi! How can I assist you today?\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"Hi.\",\r\n-\r\n-//       response: \"Hello! How can I assist you today?\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"Hey there\",\r\n-\r\n-//       response: \"Hi! How can I assist you today?\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"Good morning Brane.\",\r\n-\r\n-//       response: \"Hey Hiii! Good morning  ! How can I help you?\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"Good afternoon Brane.\",\r\n-\r\n-//       response: \"Hey Hiii! Good after noon ! How can I help you?\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"Good evening Brane.\",\r\n-\r\n-//       response: \"Hey Hiii! Good evening ! How can I help you?\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"can you please take me to login page\",\r\n-\r\n-//       route: \"/login\",\r\n-\r\n-//       response: \"Here's the Login Page, Please Login\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"please take me to login page\",\r\n-\r\n-//       route: \"/login\",\r\n-\r\n-//       response: \"Here's the Login Page, Please Login\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"Go to login page\",\r\n-\r\n-//       route: \"/login\",\r\n-\r\n-//       response: \"Here's the Login Page, Please Login\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"open login page\",\r\n-\r\n-//       route: \"/login\",\r\n-\r\n-//       response: \"Here's the Login Page, Please Login\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"can you please take me to signup page\",\r\n-\r\n-//       route: \"/signup\",\r\n-\r\n-//       response: \"Here's the signup page. Please proceed With Registration.\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"take me to signup page\",\r\n-\r\n-//       route: \"/signup\",\r\n-\r\n-//       response: \"Here's the signup page. Please proceed With Registration.\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"Go to signup page\",\r\n-\r\n-//       route: \"/signup\",\r\n-\r\n-//       response: \"Here's the signup page. Please proceed With Registration.\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"open signup page\",\r\n-\r\n-//       route: \"/signup\",\r\n-\r\n-//       response: \"Here's the signup page. Please proceed With Registration.\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"Go to face id\",\r\n-\r\n-//       route: \"/login/faceid\",\r\n-\r\n-//       response: \"Here's Face ID Login. Please proceed.\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"Go to face id login\",\r\n-\r\n-//       route: \"/login/faceid\",\r\n-\r\n-//       response: \"Here's Face ID Login. Please proceed.\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"login with face id\",\r\n-\r\n-//       route: \"/login/faceid\",\r\n-\r\n-//       response: \"Here's Face ID Login. Please proceed.\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"login with face\",\r\n-\r\n-//       route: \"/login/faceid\",\r\n-\r\n-//       response: \"Here's Face ID Login. Please proceed.\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"i want to login with face\",\r\n-\r\n-//       route: \"/login/faceid\",\r\n-\r\n-//       response: \"Here's Face ID Login. Please proceed.\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"login with voice\",\r\n-\r\n-//       route: \"/login/voiceid\",\r\n-\r\n-//       response: \"Here's Voice Login. Please proceed.\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"i want to login with voice\",\r\n-\r\n-//       route: \"/login/voiceid\",\r\n-\r\n-//       response: \"Here's Voice Login. Please proceed.\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"go to voice login\",\r\n-\r\n-//       route: \"/login/voiceid\",\r\n-\r\n-//       response: \"Here's Voice Login. Please proceed.\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"login with voice\",\r\n-\r\n-//       route: \"/login/voiceid\",\r\n-\r\n-//       response: \"Here's Voice Login. Please proceed.\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"login with mobile\",\r\n-\r\n-//       route: \"/login/mobile\",\r\n-\r\n-//       response: \"Here's Mobile Login. Please proceed.\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"i want to login with mobile\",\r\n-\r\n-//       route: \"/login/mobile\",\r\n-\r\n-//       response: \"Here's Mobile Login. Please proceed.\",\r\n-//     },\r\n-//     {\r\n-//       utterance: \"go to mobile login\",\r\n-\r\n-//       route: \"/login/mobile\",\r\n-\r\n-//       response: \"Here's Mobile Login. Please proceed.\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"what are platform features\",\r\n-\r\n-//       response:\r\n-//         \"Dashboard, Dynamic time table, Learning Networks, Little Masters, Video Based Dictionary, General Search.\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"Features of platform\",\r\n-\r\n-//       response:\r\n-//         \"Dashboard, Dynamic time table, Learning Networks, Little Masters, Video Based Dictionary, General Search.\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"What does the platform offer\",\r\n-\r\n-//       response:\r\n-//         \"Dashboard, Dynamic time table, Learning Networks, Little Masters, Video Based Dictionary, General Search.\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"Say me the features of platform\",\r\n-\r\n-//       response:\r\n-//         \"Dashboard, Dynamic time table, Learning Networks, Little Masters, Video Based Dictionary, General Search.\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"Say me the services of platform\",\r\n-\r\n-//       response:\r\n-//         \"Dashboard, Dynamic time table, Learning Networks, Little Masters, Video Based Dictionary, General Search.\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"tell me the services offered by the platform\",\r\n-\r\n-//       response:\r\n-//         \"Dashboard, Dynamic time table, Learning Networks, Little Masters, Video Based Dictionary, General Search.\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"explain platform services\",\r\n-\r\n-//       response:\r\n-//         \"Dashboard, Dynamic time table, Learning Networks, Little Masters, Video Based Dictionary, General Search.\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"Give me the Parent voice of Julia Harris\",\r\n-\r\n-//       response:\r\n-//         \"Brane education has helped my son a lot in his studies. He improved a lot in his studies and is now able to score good marks in his exams\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"Play today's motivational video\",\r\n-\r\n-//       response: \"I am playing the video\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"Play today's video\",\r\n-\r\n-//       response: \"I am playing Motivational video\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"Leaders Voice\",\r\n-\r\n-//       response:\r\n-//         \"This Voice-interactive AI Platform is a game Changer. It revolutionizes education.\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"Curriculum Supported by Brane Education\",\r\n-\r\n-//       response:\r\n-//         \"we support multiple Boards let me say few Telangana State Board Andhra Pradesh Board Maharashtra Board Assam Board\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"Boards supported by the platform\",\r\n-\r\n-//       response:\r\n-//         \"we support multiple Boards let me say few Telangana State Board Andhra Pradesh Board Maharashtra Board Assam Board\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"Curriculum\",\r\n-\r\n-//       response:\r\n-//         \"we support multiple Boards let me say few Telangana State Board Andhra Pradesh Board Maharashtra Board Assam Board\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"Go to landing page\",\r\n-\r\n-//       response: \"Okay, I am taking you to the landing page.\",\r\n-\r\n-//       route: \"/childpage\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"take me to landing page\",\r\n-\r\n-//       response: \"Okay, I am taking you to the landing page.\",\r\n-\r\n-//       route: \"/childpage\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"move to landing page\",\r\n-\r\n-//       response: \"Okay, I am taking you to the landing page.\",\r\n-\r\n-//       route: \"/childpage\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"roll back to landing page\",\r\n-\r\n-//       response: \"Okay, I am taking you to the landing page.\",\r\n-\r\n-//       route: \"/childpage\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"move to landing page\",\r\n-\r\n-//       response: \"Okay, I am taking you to the landing page.\",\r\n-\r\n-//       route: \"/childpage\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"what is today's quote\",\r\n-\r\n-//       response:\r\n-//         \"Determination is the power that sees us through all our frustration and obstacles. It helps in building our willpower which is the very basis of success.\",\r\n-\r\n-//       route: \"/childpage\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"Today's Inspirational quote\",\r\n-\r\n-//       response:\r\n-//         \"Determination is the power that sees us through all our frustration and obstacles. It helps in building our willpower which is the very basis of success.\",\r\n-\r\n-//       route: \"/childpage\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"say me today's quote\",\r\n-\r\n-//       response:\r\n-//         \"Determination is the power that sees us through all our frustration and obstacles. It helps in building our willpower which is the very basis of success.\",\r\n-\r\n-//       route: \"/childpage\",\r\n-//     },\r\n-//     {\r\n-//       utterance: \"go back\",\r\n-//       response: \"\",\r\n-//       action: goBack, // Note the use of an action property\r\n-//     },\r\n-//     {\r\n-//       utterance: \"go forward\",\r\n-//       response: \"\",\r\n-//       action: goForward,\r\n-//     },\r\n-//     {\r\n-//       utterance: \"play video\",\r\n-//       // response: \"Playing video.\",\r\n-//       action: playVideo,\r\n-//     },\r\n-//     {\r\n-//       utterance: \"pause video\",\r\n-//       // response: \"Pausing video.\",\r\n-//       action: pauseVideo,\r\n-//     },\r\n-//     {\r\n-//       utterance: \"start video\",\r\n-//       // response: \"Playing video.\",\r\n-//       action: playVideo,\r\n-//     },\r\n-//     {\r\n-//       utterance: \"stop video\",\r\n-//       // response: \"Playing video.\",\r\n-//       action: pauseVideo,\r\n-//     },\r\n-//     {\r\n-//       utterance: \"scroll up\",\r\n-//       // response: \"Scrolling up.\",\r\n-//       action: scrollUp,\r\n-//     },\r\n-//     {\r\n-//       utterance: \"scroll down\",\r\n-//       // response: \"Scrolling down.\",\r\n-//       action: scrollDown,\r\n-//     },\r\n-//     {\r\n-//       utterance: \"go up\",\r\n-\r\n-//       // response: \"Scrolling up.\",\r\n-//       action: scrollUp,\r\n-//     },\r\n-//     {\r\n-//       utterance: \"go down\",\r\n-//       // response: \"Scrolling down.\",\r\n-//       action: scrollDown,\r\n-//     },\r\n-//     {\r\n-//       utterance: \"scroll to top\",\r\n-//       action: scrollToTop,\r\n-//     },\r\n-//     {\r\n-//       utterance: \"scroll to bottom\",\r\n-//       action: scrollToBottom,\r\n-//     },\r\n-//     {\r\n-//       utterance: \"brane stop\",\r\n-//       action: stopListening,\r\n-//     },\r\n-//     {\r\n-//       utterance: \"brane turn off\",\r\n-//       action: stopListening,\r\n-//     },\r\n-//     {\r\n-//       utterance: \"brane stop the bot\",\r\n-//       action: stopListening,\r\n-//     },\r\n-//   ];\r\n-\r\n-//   return (\r\n-//     <div className=\"speech-bot-container\">\r\n-//       <div\r\n-//         className={`button-container ${\r\n-//           isListening ? \"voicebotframeactive\" : \"voicebotframe\"\r\n-//         }`}\r\n-//       >\r\n-//         <button onClick={isListening ? stopListening : startListening}>\r\n-//           {isListening ? \"Stop\" : \"Start\"} Animation\r\n-//         </button>\r\n-//         {/* <button onClick={toggleBotActive}>\r\n-//         {isBotActive ? 'Deactivate Bot' : 'Activate Bot'}\r\n-//       </button> \r\n-//       </div>\r\n-//     </div>\r\n-//   );\r\n-// };\r\n-\r\n-// export default VoiceBot; */}\r\n-\r\n-\r\n-\r\n-//iska v1\r\n-\r\n-// import React, { useState, useEffect, useRef } from \"react\";\r\n-// import { useNavigate, useLocation } from \"react-router-dom\";\r\n-// import Fuse from \"fuse.js\";\r\n-// import \"./VoiceBot.css\";\r\n-\r\n-// const VoiceBot = ({ videoRef}) => {\r\n-//   const [isListening, setIsListening] = useState(false);\r\n-//   const [isSpeaking, setIsSpeaking] = useState(false);\r\n-//   const recognition = useRef(null);\r\n-//   const speechSynthesis = useRef(window.speechSynthesis);\r\n-//   const [hasGreeted, setHasGreeted] = useState(false);\r\n-//   const navigate = useNavigate();\r\n-\r\n-\r\n-//  // Initialize speech recognition\r\n-//  useEffect(() => {\r\n-//   recognition.current = new window.webkitSpeechRecognition();\r\n-//   recognition.current.continuous = true;\r\n-//   recognition.current.interimResults = false;\r\n-//   recognition.current.onresult = onResult;\r\n-//   recognition.current.onend = onRecognitionEnd;\r\n-//   recognition.current.starting = false;\r\n-\r\n-//   recognition.current.onerror = (event) => {\r\n-//     console.error(\"Recognition error:\", event.error);\r\n-//     if (isListening && !isSpeaking) {\r\n-//       restartRecognition();\r\n-//     }\r\n-//   };\r\n-\r\n-//   return () => {\r\n-//     if (recognition.current) {\r\n-//       recognition.current.abort();\r\n-//     }\r\n-//   };\r\n-// }, []);\r\n-\r\n-//   // useEffect(() => {\r\n-//   //   const checkRecognition = () => {\r\n-//   //     if (isListening && !isSpeaking && !recognition.current.starting) {\r\n-//   //       console.log(\"Restarting recognition because it's not active.\");\r\n-//   //       recognition.current.starting = true;\r\n-//   //       recognition.current.start();\r\n-//   //       console.log(\"Restarted recognition.\");\r\n-//   //     }\r\n-//   //   };\r\n-\r\n-//   //   const recognitionCheckInterval = setInterval(checkRecognition, 100); // Check every .5 second\r\n-\r\n-//   //   return () => {\r\n-//   //     clearInterval(recognitionCheckInterval);\r\n-//   //   };\r\n-//   // }, [isListening, isSpeaking]);\r\n-\r\n-\r\n-//   const historyStack = useRef([]);\r\n-\r\n-//   useEffect(() => {\r\n-//     return () => {\r\n-//       // Clean up the listener when the component unmounts\r\n-//       window.removeEventListener(\"popstate\", handlePopState);\r\n-//     };\r\n-//   }, []);\r\n-\r\n-//   const handlePopState = () => {\r\n-//     // This needs to handle both back and forward browser actions\r\n-//     // Use some logic to determine whether it's a back or forward action\r\n-//     // For simplicity, assume it's always back\r\n-//     historyStack.current.pop();\r\n-//     forwardStack.current.length = 0; // Clear forward stack on manual navigation\r\n-//   };\r\n-  \r\n-\r\n-//   // Add a new entry to the stack whenever navigate is called\r\n-//   const customNavigate = (to, options) => {\r\n-//     historyStack.current.push(to);\r\n-//     navigate(to, options);\r\n-//   };\r\n-\r\n-//   // Listen to popstate events to update the history stack\r\n-//   useEffect(() => {\r\n-//     window.addEventListener(\"popstate\", handlePopState);\r\n-//   }, []);\r\n-\r\n-//   const forwardStack = useRef([]);\r\n-\r\n-//   const goBack = () => {\r\n-//     if (window.history.state && window.history.state.idx > 0) {\r\n-//       window.history.back();\r\n-//       speak(\"Going back\");\r\n-//     } else {\r\n-//       speak(\"Can't go back any further.\");\r\n-//     }\r\n-//   };\r\n-\r\n-//   const goForward = () => {\r\n-//     if (window.history.state && window.history.state.idx < window.history.length - 1) {\r\n-//       window.history.forward();\r\n-//       speak(\"Going forward\");\r\n-//     } else {\r\n-//       speak(\"No forward history available.\");\r\n-//     }\r\n-//   };\r\n-\r\n-//   const playVideo = () => {\r\n-//     if (videoRef.current) {\r\n-//       videoRef.current.play();\r\n-//       speak(\"Playing video.\");\r\n-//     } else {\r\n-//       speak(\"No video to play.\");\r\n-//     }\r\n-//   };\r\n-\r\n-//   const pauseVideo = () => {\r\n-//     if (videoRef.current) {\r\n-//       videoRef.current.pause();\r\n-//       speak(\"Video paused.\");\r\n-//     } else {\r\n-//       speak(\"No video to pause.\");\r\n-//     }\r\n-//   };\r\n-\r\n-//   const scrollAmount = window.innerHeight * 0.82;\r\n-\r\n-//   const scrollUp = () => {\r\n-//     if (window.pageYOffset === 0) {\r\n-//       speak(\"Already at the top of the page.\");\r\n-//     } else {\r\n-//       window.scrollBy(0, -scrollAmount);\r\n-//       speak(\"Scrolled up.\");\r\n-//     }\r\n-//   };\r\n-\r\n-//   const scrollDown = () => {\r\n-//     const maxScrollTop =\r\n-//       document.documentElement.scrollHeight - window.innerHeight;\r\n-//     if (window.pageYOffset >= maxScrollTop) {\r\n-//       speak(\"Already at the bottom of the page.\");\r\n-//     } else {\r\n-//       window.scrollBy(0, scrollAmount);\r\n-//       speak(\"Scrolled down.\");\r\n-//     }\r\n-//   };\r\n-\r\n-//   const scrollToTop = () => {\r\n-//     if (window.pageYOffset === 0) {\r\n-//       speak(\"Already at the top of the page.\");\r\n-//     } else {\r\n-//       window.scrollTo(0, 0);\r\n-//       speak(\"Scrolled to the top of the page.\");\r\n-//     }\r\n-//   };\r\n-\r\n-//   const scrollToBottom = () => {\r\n-//     const maxScrollTop =\r\n-//       document.documentElement.scrollHeight - window.innerHeight;\r\n-//     if (window.pageYOffset >= maxScrollTop) {\r\n-//       speak(\"Already at the bottom of the page.\");\r\n-//     } else {\r\n-//       window.scrollTo(0, document.body.scrollHeight);\r\n-//       speak(\"Scrolled to the bottom of the page.\");\r\n-//     }\r\n-//   };\r\n-\r\n-//   const speak = (message) => {\r\n-//     const utterance = new SpeechSynthesisUtterance(message);\r\n-//     utterance.onend = () => {\r\n-//       setIsSpeaking(false);\r\n-//       // Restart recognition after speaking has ended\r\n-//       if (isListening) {\r\n-//         restartRecognition();\r\n-//       }\r\n-//     };\r\n-  \r\n-//     setIsSpeaking(true);\r\n-//     // Stop recognition when the bot starts speaking\r\n-//     if (recognition.current) {\r\n-//       recognition.current.abort();\r\n-//     }\r\n-//     speechSynthesis.current.speak(utterance);\r\n-//   };\r\n-  \r\n-\r\n-//   const restartRecognition = () => {\r\n-//     // Check if recognition is not already started and if the bot is set to listen\r\n-//     if (recognition.current && !recognition.current.starting && isListening && !isSpeaking) {\r\n-//       // Only start recognition if it's not already active\r\n-//       if (recognition.current.state !== 'active') {\r\n-//         recognition.current.abort(); // Ensure any ongoing recognition is stopped\r\n-//         recognition.current.starting = true;\r\n-//         recognition.current.start();\r\n-//       }\r\n-//     }\r\n-//   };\r\n-  \r\n-  \r\n-//     // Restart recognition when bot finishes speaking and isListening is true\r\n-//     useEffect(() => {\r\n-//       if (!isSpeaking && isListening) {\r\n-//         restartRecognition();\r\n-//       }\r\n-//     }, [isSpeaking, isListening]);\r\n-\r\n-//   const onResult = (event) => {\r\n-//     const resultIndex = event.resultIndex;\r\n-//     const transcript = event.results[resultIndex][0].transcript\r\n-//       .trim()\r\n-//       .toLowerCase();\r\n-\r\n-//     if (event.results[resultIndex].isFinal) {\r\n-//       console.log(`Recognized text: ${transcript}`);\r\n-//       if (transcript.includes(\"brain\")) {\r\n-//         console.log(\"Wake word heard, processing command...\");\r\n-//         handleCommandWithFuse(transcript.replace(\"brain\", \"\"));\r\n-//       }\r\n-//     }\r\n-//   };\r\n-\r\n-//   const onRecognitionEnd = () => {\r\n-//     recognition.current.starting = false;\r\n-//     if (isListening && !isSpeaking) {\r\n-//       restartRecognition();\r\n-//     }\r\n-//   };\r\n-\r\n-//   useEffect(() => {\r\n-//     if (isListening && !hasGreeted) {\r\n-//       speak(\"Hello, I'm Brane. How can I help you today?\");\r\n-//       setHasGreeted(true);\r\n-//     }\r\n-//   }, [isListening, hasGreeted]);\r\n-\r\n-\r\n-// // Updated startListening function\r\n-// const startListening = () => {\r\n-//   setIsListening(true);\r\n-//   if (recognition.current && !recognition.current.starting) {\r\n-//     recognition.current.start();\r\n-//   }\r\n-// };\r\n-\r\n-// // Updated stopListening function\r\n-// const stopListening = () => {\r\n-//   setIsListening(false);\r\n-//   setIsSpeaking(false); // Reset speaking state\r\n-//   setHasGreeted(false); // Reset greeting state if needed\r\n-//   if (recognition.current) {\r\n-//     recognition.current.abort(); // Stop any ongoing speech recognition\r\n-//   }\r\n-//   if (speechSynthesis.current.speaking) {\r\n-//     speechSynthesis.current.cancel(); // Stop any ongoing speech synthesis\r\n-//   }\r\n-// };\r\n-\r\n-\r\n-\r\n-//   const handleCommandWithFuse = (command) => {\r\n-//     const fuse = new Fuse(commands, { keys: [\"utterance\"], threshold: 0.4 });\r\n-//     const results = fuse.search(command);\r\n-//     const foundCommand = results.length ? results[0].item : null;\r\n-\r\n-//     if (foundCommand) {\r\n-//       console.log(\"Command found:\", foundCommand.utterance);\r\n-\r\n-//       if (foundCommand.action) {\r\n-//         foundCommand.action();\r\n-//       } else if (foundCommand.route) {\r\n-//         navigate(foundCommand.route);\r\n-//       }\r\n-\r\n-//       // Speak after performing the action or navigation\r\n-//       speak(foundCommand.response);\r\n-//     } else {\r\n-//       console.log(\"No command found.\");\r\n-//       speak(\"I'm not sure how to respond to that.\");\r\n-//     }\r\n-//   };\r\n-\r\n-//   const commands = [\r\n-//     {\r\n-//       utterance: \"Hello who are you ?\",\r\n-\r\n-//       response:\r\n-//         \"Hi! This is Brane! your Voice bot from Brane Education How can I Assist you Today ?\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"Hello\",\r\n-\r\n-//       response: \"Hi! How can I assist you today?\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"hello\",\r\n-\r\n-//       response: \"Hi! How can I assist you today?\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"Hi.\",\r\n-\r\n-//       response: \"Hello! How can I assist you today?\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"Hey there\",\r\n-\r\n-//       response: \"Hi! How can I assist you today?\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"Good morning Brane.\",\r\n-\r\n-//       response: \"Hey Hiii! Good morning  ! How can I help you?\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"Good afternoon Brane.\",\r\n-\r\n-//       response: \"Hey Hiii! Good after noon ! How can I help you?\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"Good evening Brane.\",\r\n-\r\n-//       response: \"Hey Hiii! Good evening ! How can I help you?\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"can you please take me to login page\",\r\n-\r\n-//       route: \"/login\",\r\n-\r\n-//       response: \"Here's the Login Page, Please Login\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"please take me to login page\",\r\n-\r\n-//       route: \"/login\",\r\n-\r\n-//       response: \"Here's the Login Page, Please Login\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"Go to login page\",\r\n-\r\n-//       route: \"/login\",\r\n-\r\n-//       response: \"Here's the Login Page, Please Login\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"open login page\",\r\n-\r\n-//       route: \"/login\",\r\n-\r\n-//       response: \"Here's the Login Page, Please Login\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"can you please take me to signup page\",\r\n-\r\n-//       route: \"/signup\",\r\n-\r\n-//       response: \"Here's the signup page. Please proceed With Registration.\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"take me to signup page\",\r\n-\r\n-//       route: \"/signup\",\r\n-\r\n-//       response: \"Here's the signup page. Please proceed With Registration.\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"Go to signup page\",\r\n-\r\n-//       route: \"/signup\",\r\n-\r\n-//       response: \"Here's the signup page. Please proceed With Registration.\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"open signup page\",\r\n-\r\n-//       route: \"/signup\",\r\n-\r\n-//       response: \"Here's the signup page. Please proceed With Registration.\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"Go to face id\",\r\n-\r\n-//       route: \"/login/faceid\",\r\n-\r\n-//       response: \"Here's Face ID Login. Please proceed.\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"Go to face id login\",\r\n-\r\n-//       route: \"/login/faceid\",\r\n-\r\n-//       response: \"Here's Face ID Login. Please proceed.\",\r\n-//     },\r\n-//     {\r\n-//       utterance: \"Go to face login\",\r\n-\r\n-//       route: \"/login/faceid\",\r\n-\r\n-//       response: \"Here's Face ID Login. Please proceed.\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"login with face id\",\r\n-\r\n-//       route: \"/login/faceid\",\r\n-\r\n-//       response: \"Here's Face ID Login. Please proceed.\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"login with face\",\r\n-\r\n-//       route: \"/login/faceid\",\r\n-\r\n-//       response: \"Here's Face ID Login. Please proceed.\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"i want to login with face\",\r\n-\r\n-//       route: \"/login/faceid\",\r\n-\r\n-//       response: \"Here's Face ID Login. Please proceed.\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"login with voice\",\r\n-\r\n-//       route: \"/login/voiceid\",\r\n-\r\n-//       response: \"Here's Voice Login. Please proceed.\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"i want to login with voice\",\r\n-\r\n-//       route: \"/login/voiceid\",\r\n-\r\n-//       response: \"Here's Voice Login. Please proceed.\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"go to voice login\",\r\n-\r\n-//       route: \"/login/voiceid\",\r\n-\r\n-//       response: \"Here's Voice Login. Please proceed.\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"login with voice\",\r\n-\r\n-//       route: \"/login/voiceid\",\r\n-\r\n-//       response: \"Here's Voice Login. Please proceed.\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"login with mobile\",\r\n-\r\n-//       route: \"/login/mobile\",\r\n-\r\n-//       response: \"Here's Mobile Login. Please proceed.\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"i want to login with mobile\",\r\n-\r\n-//       route: \"/login/mobile\",\r\n-\r\n-//       response: \"Here's Mobile Login. Please proceed.\",\r\n-//     },\r\n-//     {\r\n-//       utterance: \"go to mobile login\",\r\n-\r\n-//       route: \"/login/mobile\",\r\n-\r\n-//       response: \"Here's Mobile Login. Please proceed.\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"what are platform features\",\r\n-\r\n-//       response:\r\n-//         \"Dashboard, Dynamic time table, Learning Networks, Little Masters, Video Based Dictionary, General Search.\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"Features of platform\",\r\n-\r\n-//       response:\r\n-//         \"Dashboard, Dynamic time table, Learning Networks, Little Masters, Video Based Dictionary, General Search.\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"What does the platform offer\",\r\n-\r\n-//       response:\r\n-//         \"Dashboard, Dynamic time table, Learning Networks, Little Masters, Video Based Dictionary, General Search.\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"Say me the features of platform\",\r\n-\r\n-//       response:\r\n-//         \"Dashboard, Dynamic time table, Learning Networks, Little Masters, Video Based Dictionary, General Search.\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"Say me the services of platform\",\r\n-\r\n-//       response:\r\n-//         \"Dashboard, Dynamic time table, Learning Networks, Little Masters, Video Based Dictionary, General Search.\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"tell me the services offered by the platform\",\r\n-\r\n-//       response:\r\n-//         \"Dashboard, Dynamic time table, Learning Networks, Little Masters, Video Based Dictionary, General Search.\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"explain platform services\",\r\n-\r\n-//       response:\r\n-//         \"Dashboard, Dynamic time table, Learning Networks, Little Masters, Video Based Dictionary, General Search.\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"Give me the Parent voice of Julia Harris\",\r\n-\r\n-//       response:\r\n-//         \"Brane education has helped my son a lot in his studies. He improved a lot in his studies and is now able to score good marks in his exams\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"Play today's motivational video\",\r\n-\r\n-//       response: \"I am playing the video\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"Play today's video\",\r\n-\r\n-//       response: \"I am playing Motivational video\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"Leaders Voice\",\r\n-\r\n-//       response:\r\n-//         \"This Voice-interactive AI Platform is a game Changer. It revolutionizes education.\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"Curriculum Supported by Brane Education\",\r\n-\r\n-//       response:\r\n-//         \"we support multiple Boards let me say few Telangana State Board Andhra Pradesh Board Maharashtra Board Assam Board\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"Boards supported by the platform\",\r\n-\r\n-//       response:\r\n-//         \"we support multiple Boards let me say few Telangana State Board Andhra Pradesh Board Maharashtra Board Assam Board\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"Curriculum\",\r\n-\r\n-//       response:\r\n-//         \"we support multiple Boards let me say few Telangana State Board Andhra Pradesh Board Maharashtra Board Assam Board\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"Go to landing page\",\r\n-\r\n-//       response: \"Okay, I am taking you to the landing page.\",\r\n-\r\n-//       route: \"/childpage\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"take me to landing page\",\r\n-\r\n-//       response: \"Okay, I am taking you to the landing page.\",\r\n-\r\n-//       route: \"/childpage\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"move to landing page\",\r\n-\r\n-//       response: \"Okay, I am taking you to the landing page.\",\r\n-\r\n-//       route: \"/childpage\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"roll back to landing page\",\r\n-\r\n-//       response: \"Okay, I am taking you to the landing page.\",\r\n-\r\n-//       route: \"/childpage\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"move to landing page\",\r\n-\r\n-//       response: \"Okay, I am taking you to the landing page.\",\r\n-\r\n-//       route: \"/childpage\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"what is today's quote\",\r\n-\r\n-//       response:\r\n-//         \"Determination is the power that sees us through all our frustration and obstacles. It helps in building our willpower which is the very basis of success.\",\r\n-\r\n-//       route: \"/childpage\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"Today's Inspirational quote\",\r\n-\r\n-//       response:\r\n-//         \"Determination is the power that sees us through all our frustration and obstacles. It helps in building our willpower which is the very basis of success.\",\r\n-\r\n-//       route: \"/childpage\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"say me today's quote\",\r\n-\r\n-//       response:\r\n-//         \"Determination is the power that sees us through all our frustration and obstacles. It helps in building our willpower which is the very basis of success.\",\r\n-\r\n-//       route: \"/childpage\",\r\n-//     },\r\n-//     {\r\n-//       utterance: \"go back\",\r\n-//       response: \"\",\r\n-//       action: goBack, // Note the use of an action property\r\n-//     },\r\n-//     {\r\n-//       utterance: \"go forward\",\r\n-//       response: \"\",\r\n-//       action: goForward,\r\n-//     },\r\n-//     {\r\n-//       utterance: \"play video\",\r\n-//       // response: \"Playing video.\",\r\n-//       action: playVideo,\r\n-//     },\r\n-//     {\r\n-//       utterance: \"pause video\",\r\n-//       // response: \"Pausing video.\",\r\n-//       action: pauseVideo,\r\n-//     },\r\n-//     {\r\n-//       utterance: \"start video\",\r\n-//       // response: \"Playing video.\",\r\n-//       action: playVideo,\r\n-//     },\r\n-//     {\r\n-//       utterance: \"stop video\",\r\n-//       // response: \"Playing video.\",\r\n-//       action: pauseVideo,\r\n-//     },\r\n-//     {\r\n-//       utterance: \"scroll up\",\r\n-//       // response: \"Scrolling up.\",\r\n-//       action: scrollUp,\r\n-//     },\r\n-//     {\r\n-//       utterance: \"scroll down\",\r\n-//       // response: \"Scrolling down.\",\r\n-//       action: scrollDown,\r\n-//     },\r\n-//     {\r\n-//       utterance: \"go up\",\r\n-\r\n-//       // response: \"Scrolling up.\",\r\n-//       action: scrollUp,\r\n-//     },\r\n-//     {\r\n-//       utterance: \"go down\",\r\n-//       // response: \"Scrolling down.\",\r\n-//       action: scrollDown,\r\n-//     },\r\n-//     {\r\n-//       utterance: \"scroll to top\",\r\n-//       action: scrollToTop,\r\n-//     },\r\n-//     {\r\n-//       utterance: \"scroll to bottom\",\r\n-//       action: scrollToBottom,\r\n-//     },\r\n-//     {\r\n-//       utterance: \"brane stop\",\r\n-//       action: stopListening,\r\n-//     },\r\n-//     {\r\n-//       utterance: \"brane turn off\",\r\n-//       action: stopListening,\r\n-//     },\r\n-//     {\r\n-//       utterance: \"brane stop the bot\",\r\n-//       action: stopListening,\r\n-//     },\r\n-//   ];\r\n-\r\n-//   return (\r\n-//     <div className=\"speech-bot-container\">\r\n-//       <div\r\n-//         className={`button-container ${\r\n-//           isListening ? \"voicebotframeactive\" : \"voicebotframe\"\r\n-//         }`}\r\n-//       >\r\n-//         <button onClick={isListening ? stopListening : startListening}>\r\n-//           {isListening ? \"Stop\" : \"Start\"} Animation\r\n-//         </button>\r\n-//         {/* <button onClick={toggleBotActive}>\r\n-//         {isBotActive ? 'Deactivate Bot' : 'Activate Bot'}\r\n-//       </button> */}\r\n-//       </div>\r\n-//     </div>\r\n-//   );\r\n-// };\r\n-\r\n-// export default VoiceBot;\r\n-\r\n-\r\n-\r\n-\r\n-\r\n-\r\n-\r\n-\r\n-\r\n-\r\n-\r\n-\r\n-\r\n-\r\n-\r\n-\r\n-\r\n-\r\n-\r\n-\r\n-\r\n-\r\n-\r\n-\r\n-\r\n-\r\n-\r\n-\r\n-\r\n-\r\n-//Bot Video added but some start issues\r\n-\r\n-// import React, { useState, useEffect, useRef } from \"react\";\r\n-// import { useNavigate, useLocation } from \"react-router-dom\";\r\n-// import Fuse from \"fuse.js\";\r\n-// import \"./VoiceBot.css\";\r\n-\r\n-// const VoiceBot = ({ videoRef }) => {\r\n-//   const [isListening, setIsListening] = useState(false);\r\n-//   const [isSpeaking, setIsSpeaking] = useState(false);\r\n-//   const recognition = useRef(null);\r\n-//   const speechSynthesis = useRef(window.speechSynthesis);\r\n-//   const hasGreeted = useRef(false);\r\n-//   const restartRecognitionTimeout = useRef(null);\r\n-//   const navigate = useNavigate();\r\n-//   const location = useLocation();\r\n-//   const [isRecognitionActive, setIsRecognitionActive] = useState(false); // New state to track recognition status\r\n-\r\n-//   useEffect(() => {\r\n-//     recognition.current = new window.webkitSpeechRecognition();\r\n-//     recognition.current.continuous = true;\r\n-//     recognition.current.interimResults = false;\r\n-//     recognition.current.onresult = onResult;\r\n-//     recognition.current.onend = () => {\r\n-//       console.log(\"Recognition ended.\");\r\n-//       if (isListening) {\r\n-//         startListening();\r\n-//       }\r\n-//     };\r\n-//     recognition.current.onerror = (event) => {\r\n-//       console.error(\"Recognition error:\", event.error);\r\n-//     };\r\n-\r\n-//     return () => {\r\n-//       recognition.current.abort();\r\n-//     };\r\n-//   }, []);\r\n-\r\n-//   // Update useEffect for managing the recognition state based on isListening and isRecognitionActive\r\n-//   useEffect(() => {\r\n-//     if (isListening && !isRecognitionActive) {\r\n-//       startListening();\r\n-//     } else if (!isListening && isRecognitionActive) {\r\n-//       stopListening();\r\n-//     }\r\n-//   }, [isListening, isRecognitionActive]);\r\n-\r\n-//   const goBack = () => {\r\n-//     if (window.history.length > 1) {\r\n-//       navigate(-1);\r\n-//     } else {\r\n-//       speak(\"Can't go back any further.\");\r\n-//     }\r\n-//   };\r\n-\r\n-//   const goForward = () => {\r\n-//     // Unfortunately, there's no direct way to check if you can go forward in the history.\r\n-//     // You might need to manage this state manually based on user navigation.\r\n-//     navigate(1);\r\n-//   };\r\n-\r\n-//   const playVideo = () => {\r\n-//     if (videoRef.current && !videoRef.current.paused) {\r\n-//       speak(\"Video is already playing.\");\r\n-//     } else if (videoRef.current) {\r\n-//       videoRef.current.play();\r\n-//       speak(\"Playing video.\");\r\n-//     } else {\r\n-//       speak(\"No video to play.\");\r\n-//     }\r\n-//   };\r\n-\r\n-//   const pauseVideo = () => {\r\n-//     if (videoRef.current && videoRef.current.paused) {\r\n-//       speak(\"Video is already paused.\");\r\n-//     } else if (videoRef.current) {\r\n-//       videoRef.current.pause();\r\n-//       speak(\"Video paused.\");\r\n-//     } else {\r\n-//       speak(\"No video to pause.\");\r\n-//     }\r\n-//   };\r\n-\r\n-//   const scrollAmount = window.innerHeight * 0.82;\r\n-\r\n-//   const scrollUp = () => {\r\n-//     if (window.pageYOffset === 0) {\r\n-//       speak(\"Already at the top of the page.\");\r\n-//     } else {\r\n-//       window.scrollBy(0, -scrollAmount);\r\n-//       speak(\"Scrolled up.\");\r\n-//     }\r\n-//   };\r\n-\r\n-//   const scrollDown = () => {\r\n-//     const maxScrollTop =\r\n-//       document.documentElement.scrollHeight - window.innerHeight;\r\n-//     if (window.pageYOffset >= maxScrollTop) {\r\n-//       speak(\"Already at the bottom of the page.\");\r\n-//     } else {\r\n-//       window.scrollBy(0, scrollAmount);\r\n-//       speak(\"Scrolled down.\");\r\n-//     }\r\n-//   };\r\n-\r\n-//   const scrollToTop = () => {\r\n-//     if (window.pageYOffset === 0) {\r\n-//       speak(\"Already at the top of the page.\");\r\n-//     } else {\r\n-//       window.scrollTo(0, 0);\r\n-//       speak(\"Scrolled to the top of the page.\");\r\n-//     }\r\n-//   };\r\n-\r\n-//   const scrollToBottom = () => {\r\n-//     const maxScrollTop =\r\n-//       document.documentElement.scrollHeight - window.innerHeight;\r\n-//     if (window.pageYOffset >= maxScrollTop) {\r\n-//       speak(\"Already at the bottom of the page.\");\r\n-//     } else {\r\n-//       window.scrollTo(0, document.body.scrollHeight);\r\n-//       speak(\"Scrolled to the bottom of the page.\");\r\n-//     }\r\n-//   };\r\n-\r\n-//   // const speak = (message) => {\r\n-//   //   const utterance = new SpeechSynthesisUtterance(message);\r\n-//   //   utterance.onend = () => {\r\n-//   //     setIsSpeaking(false);\r\n-//   //     console.log(\"Speaking ended.\");\r\n-//   //     // Only restart recognition if we're still supposed to be listening\r\n-//   //     // if (isListening) {\r\n-//   //     //   if (restartRecognitionTimeout.current) {\r\n-//   //     //     clearTimeout(restartRecognitionTimeout.current);\r\n-//   //     //   }\r\n-//   //     //   restartRecognitionTimeout.current = setTimeout(() => {\r\n-//   //     //     console.log(\"Recognition restarted.\");\r\n-//   //     //     recognition.current.start();\r\n-//   //     //   }, 100); // Delay to prevent immediate restart\r\n-//   //     // }\r\n-//   //     if (isListening && !recognition.current.starting) { // Check the flag before restarting\r\n-//   //       recognition.current.starting = true; // Set the flag when starting recognition\r\n-//   //       recognition.current.start();\r\n-//   //     }\r\n-//   //   };\r\n-\r\n-//   //   setIsSpeaking(true);\r\n-//   //   console.log(\"Speaking started.\");\r\n-//   //   recognition.current.stop(); // Stop recognition when the bot starts speaking\r\n-//   //   speechSynthesis.current.speak(utterance);\r\n-//   // };\r\n-\r\n-//   const speak = (message) => {\r\n-//     console.log(\"speak function called with message:\", message);\r\n-//     const utterance = new SpeechSynthesisUtterance(message);\r\n-//     utterance.onend = () => {\r\n-//       setIsSpeaking(false);\r\n-//       console.log(\"Speaking ended.\");\r\n-//       // Directly handle the restart of recognition here if needed\r\n-//       if (isListening) {\r\n-//         startListening();\r\n-//       }\r\n-//     };\r\n-\r\n-//     setIsSpeaking(true);\r\n-//     console.log(\"Speaking started.\");\r\n-//     recognition.current.stop(); // Ensure to stop recognition before speaking\r\n-//     speechSynthesis.current.speak(utterance);\r\n-//   };\r\n-\r\n-//   const onResult = (event) => {\r\n-//     const resultIndex = event.resultIndex;\r\n-//     const transcript = event.results[resultIndex][0].transcript\r\n-//       .trim()\r\n-//       .toLowerCase();\r\n-\r\n-//     if (event.results[resultIndex].isFinal) {\r\n-//       console.log(`Recognized text: ${transcript}`);\r\n-//       if (transcript.includes(\"brain\")) {\r\n-//         console.log(\"Wake word heard, processing command...\");\r\n-//         handleCommandWithFuse(transcript.replace(\"brain\", \"\"));\r\n-//       }\r\n-//     }\r\n-//   };\r\n-\r\n-//   // const onRecognitionEnd = () => {\r\n-//   //   console.log(\"Recognition ended.\");\r\n-//   //   setIsRecognitionActive(false); // Update state when recognition ends\r\n-//   //   recognition.current.starting = false; // Reset the flag when recognition ends\r\n-//   //   // We now check if the recognition is already running before starting it again\r\n-//   //   if (isListening && !isSpeaking && !recognition.current?.starting) {\r\n-//   //     console.log(\"Restarting recognition.\");\r\n-//   //     recognition.current.start();\r\n-//   //   }\r\n-//   // };\r\n-\r\n-//   // useEffect(() => {\r\n-//   //   if (isListening && !hasGreeted.current) {\r\n-//   //     speak(\"Hello, I'm Brane. How can I assist you today?\");\r\n-//   //     hasGreeted.current = true;\r\n-//   //   } else if (isListening && !isSpeaking) {\r\n-//   //     recognition.current.start();\r\n-//   //   }\r\n-//   // }, [isListening, isSpeaking]);\r\n-\r\n-//   useEffect(() => {\r\n-//     if (isListening && !hasGreeted.current) {\r\n-//       speak(\"Hello, I'm Brane. How can I assist you today?\");\r\n-//       hasGreeted.current = true;\r\n-//     } else if (isListening && !isSpeaking && !recognition.current.starting) {\r\n-//       // Check the flag before starting\r\n-//       recognition.current.starting = true; // Set the flag when starting recognition\r\n-//       recognition.current.start();\r\n-//     }\r\n-//   }, [isListening, isSpeaking]);\r\n-\r\n-//   // const startListening = () => {\r\n-//   //   console.log(\"Attempting to start listening.\");\r\n-//   //   if (recognition.current && !recognition.current.starting) {\r\n-//   //     setIsListening(true);\r\n-//   //     recognition.current.starting = true; // Set the flag when starting recognition\r\n-//   //     recognition.current.start();\r\n-//   //     console.log(\"Listening started.\");\r\n-//   //   }\r\n-//   // };\r\n-\r\n-//   // const stopListening = () => {\r\n-//   //   console.log(\"Stopping listening.\");\r\n-\r\n-//   //   setIsListening(false);\r\n-//   //   recognition.current.stop();\r\n-//   //   if (speechSynthesis.current.speaking) {\r\n-//   //     speechSynthesis.current.cancel();\r\n-//   //   }\r\n-//   //   if (restartRecognitionTimeout.current) {\r\n-//   //     clearTimeout(restartRecognitionTimeout.current);\r\n-//   //   }\r\n-//   //   console.log(\"Listening stopped.\");\r\n-//   // };\r\n-//   // Handle start and stop listening logic\r\n-//   const startListening = () => {\r\n-//     console.log(\"Attempting to start listening.\");\r\n-//     if (!recognition.current.starting) {\r\n-//       setIsListening(true);\r\n-//       recognition.current.starting = true;\r\n-//       recognition.current.start();\r\n-//       console.log(\"Listening started.\");\r\n-//     } else {\r\n-//       console.log(\"Recognition already active.\");\r\n-//     }\r\n-//   };\r\n-\r\n-//   const stopListening = () => {\r\n-//     console.log(\"Stopping listening.\");\r\n-//     if (recognition.current.starting) {\r\n-//       setIsListening(false);\r\n-//       recognition.current.starting = false;\r\n-//       recognition.current.stop();\r\n-//       console.log(\"Listening stopped.\");\r\n-//     } else {\r\n-//       console.log(\"Recognition already inactive.\");\r\n-//     }\r\n-//   };\r\n-\r\n-//   // const handleCommandWithFuse = (command) => {\r\n-//   //   const fuse = new Fuse(commands, { keys: [\"utterance\"], threshold: 0.4 });\r\n-//   //   const results = fuse.search(command);\r\n-//   //   const foundCommand = results.length ? results[0].item : null;\r\n-\r\n-//   //   if (foundCommand) {\r\n-//   //     console.log(\"Command found:\", foundCommand.utterance);\r\n-//   //     speak(foundCommand.response);\r\n-//   //     if (foundCommand.route) {\r\n-//   //       navigate(foundCommand.route); // Navigate to the route specified in the command\r\n-//   //     }\r\n-//   //   } else {\r\n-//   //     console.log(\"No command found.\");\r\n-//   //     speak(\"I'm not sure how to respond to that.\");\r\n-//   //   }\r\n-//   // };\r\n-\r\n-//   const handleCommandWithFuse = (command) => {\r\n-//     const fuse = new Fuse(commands, { keys: [\"utterance\"], threshold: 0.4 });\r\n-//     const results = fuse.search(command);\r\n-//     const foundCommand = results.length ? results[0].item : null;\r\n-\r\n-//     if (foundCommand) {\r\n-//       console.log(\"Command found:\", foundCommand.utterance);\r\n-\r\n-//       if (foundCommand.route) {\r\n-//         if (location.pathname !== foundCommand.route) {\r\n-//           navigate(foundCommand.route);\r\n-//           speak(\r\n-//             `Navigating to ${\r\n-//               foundCommand.routeDescription || \"requested page\"\r\n-//             }.`\r\n-//           );\r\n-//         } else {\r\n-//           speak(\r\n-//             `You are already on the ${\r\n-//               foundCommand.routeDescription || \"requested page\"\r\n-//             }.`\r\n-//           );\r\n-//         }\r\n-//       } else if (foundCommand.action) {\r\n-//         foundCommand.action();\r\n-//       }\r\n-\r\n-//       if (foundCommand.response) {\r\n-//         speak(foundCommand.response);\r\n-//       }\r\n-//     } else {\r\n-//       console.log(\"No command found.\");\r\n-//       speak(\"I'm not sure how to respond to that.\");\r\n-//     }\r\n-//   };\r\n-\r\n-//   const commands = [\r\n-//     {\r\n-//       utterance: \"Hello who are you ?\",\r\n-\r\n-//       response:\r\n-//         \"Hi! This is Brane! your Voice bot from Brane Education How can I Assist you Today ?\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"Hello\",\r\n-\r\n-//       response: \"Hi! How can I assist you today?\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"hello\",\r\n-\r\n-//       response: \"Hi! How can I assist you today?\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"Hi.\",\r\n-\r\n-//       response: \"Hello! How can I assist you today?\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"Hey there\",\r\n-\r\n-//       response: \"Hi! How can I assist you today?\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"Good morning Brane.\",\r\n-\r\n-//       response: \"Hey Hiii! Good morning  ! How can I help you?\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"Good afternoon Brane.\",\r\n-\r\n-//       response: \"Hey Hiii! Good after noon ! How can I help you?\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"Good evening Brane.\",\r\n-\r\n-//       response: \"Hey Hiii! Good evening ! How can I help you?\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"can you please take me to login page\",\r\n-//       route: \"/login\",\r\n-//       routeDescription: \"login page\",\r\n-//       response: \"Navigating to the login page.\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"go to login page\",\r\n-//       route: \"/login\",\r\n-//       routeDescription: \"login page\",\r\n-//       response: \"Navigating to the login page.\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"please take me to login page\",\r\n-//       route: \"/login\",\r\n-//       routeDescription: \"login page\",\r\n-//       response: \"Navigating to the login page.\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"Go to login page\",\r\n-//       route: \"/login\",\r\n-//       routeDescription: \"login page\",\r\n-//       response: \"Navigating to the login page.\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"open login page\",\r\n-//       route: \"/login\",\r\n-//       routeDescription: \"login page\",\r\n-//       response: \"Navigating to the login page.\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"can you please take me to signup page\",\r\n-//       route: \"/signup\",\r\n-//       routeDescription: \"signup page\",\r\n-//       response: \"Navigating to the signup page.\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"take me to signup page\",\r\n-//       route: \"/signup\",\r\n-//       routeDescription: \"signup page\",\r\n-//       response: \"Navigating to the signup page.\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"Go to signup page\",\r\n-//       route: \"/signup\",\r\n-//       routeDescription: \"signup page\",\r\n-//       response: \"Navigating to the signup page.\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"open signup page\",\r\n-//       route: \"/signup\",\r\n-//       routeDescription: \"signup page\",\r\n-//       response: \"Navigating to the signup page.\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"what are platform features\",\r\n-\r\n-//       response:\r\n-//         \"Dashboard, Dynamic time table, Learning Networks, Little Masters, Video Based Dictionary, General Search.\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"Features of platform\",\r\n-\r\n-//       response:\r\n-//         \"Dashboard, Dynamic time table, Learning Networks, Little Masters, Video Based Dictionary, General Search.\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"What does the platform offer\",\r\n-\r\n-//       response:\r\n-//         \"Dashboard, Dynamic time table, Learning Networks, Little Masters, Video Based Dictionary, General Search.\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"Say me the features of platform\",\r\n-\r\n-//       response:\r\n-//         \"Dashboard, Dynamic time table, Learning Networks, Little Masters, Video Based Dictionary, General Search.\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"Say me the services of platform\",\r\n-\r\n-//       response:\r\n-//         \"Dashboard, Dynamic time table, Learning Networks, Little Masters, Video Based Dictionary, General Search.\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"tell me the services offered by the platform\",\r\n-\r\n-//       response:\r\n-//         \"Dashboard, Dynamic time table, Learning Networks, Little Masters, Video Based Dictionary, General Search.\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"explain platform services\",\r\n-\r\n-//       response:\r\n-//         \"Dashboard, Dynamic time table, Learning Networks, Little Masters, Video Based Dictionary, General Search.\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"Give me the Parent voice of Julia Harris\",\r\n-\r\n-//       response:\r\n-//         \"Brane education has helped my son a lot in his studies. He improved a lot in his studies and is now able to score good marks in his exams\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"Play today's motivational video\",\r\n-\r\n-//       response: \"I am playing the video\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"Play today's video\",\r\n-\r\n-//       response: \"I am playing Motivational video\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"Leaders Voice\",\r\n-\r\n-//       response:\r\n-//         \"This Voice-interactive AI Platform is a game Changer. It revolutionizes education.\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"Curriculum Supported by Brane Education\",\r\n-\r\n-//       response:\r\n-//         \"we support multiple Boards let me say few Telangana State Board Andhra Pradesh Board Maharashtra Board Assam Board\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"Boards supported by the platform\",\r\n-\r\n-//       response:\r\n-//         \"we support multiple Boards let me say few Telangana State Board Andhra Pradesh Board Maharashtra Board Assam Board\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"Curriculum\",\r\n-\r\n-//       response:\r\n-//         \"we support multiple Boards let me say few Telangana State Board Andhra Pradesh Board Maharashtra Board Assam Board\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"Go to landing page\",\r\n-\r\n-//       response: \"Okay, I am taking you to the landing page.\",\r\n-\r\n-//       route: \"/childpage\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"take me to landing page\",\r\n-\r\n-//       response: \"Okay, I am taking you to the landing page.\",\r\n-\r\n-//       route: \"/childpage\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"move to landing page\",\r\n-\r\n-//       response: \"Okay, I am taking you to the landing page.\",\r\n-\r\n-//       route: \"/childpage\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"roll back to landing page\",\r\n-\r\n-//       response: \"Okay, I am taking you to the landing page.\",\r\n-\r\n-//       route: \"/childpage\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"move to landing page\",\r\n-\r\n-//       response: \"Okay, I am taking you to the landing page.\",\r\n-\r\n-//       route: \"/childpage\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"what is today's quote\",\r\n-\r\n-//       response:\r\n-//         \"Determination is the power that sees us through all our frustration and obstacles. It helps in building our willpower which is the very basis of success.\",\r\n-\r\n-//       // route: \"/childpage\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"Today's Inspirational quote\",\r\n-\r\n-//       response:\r\n-//         \"Determination is the power that sees us through all our frustration and obstacles. It helps in building our willpower which is the very basis of success.\",\r\n-\r\n-//       // route: \"/childpage\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"say me today's quote\",\r\n-\r\n-//       response:\r\n-//         \"Determination is the power that sees us through all our frustration and obstacles. It helps in building our willpower which is the very basis of success.\",\r\n-\r\n-//       // route: \"/childpage\",\r\n-//     },\r\n-//     {\r\n-//       utterance: \"go back\",\r\n-//       response: \"Going back.\",\r\n-//       action: goBack, // Note the use of an action property\r\n-//     },\r\n-//     {\r\n-//       utterance: \"go forward\",\r\n-//       response: \"Going forward.\",\r\n-//       action: goForward,\r\n-//     },\r\n-//     {\r\n-//       utterance: \"play video\",\r\n-//       // response: \"Playing video.\",\r\n-//       action: playVideo,\r\n-//     },\r\n-//     {\r\n-//       utterance: \"pause video\",\r\n-//       // response: \"Pausing video.\",\r\n-//       action: pauseVideo,\r\n-//     },\r\n-//     {\r\n-//       utterance: \"start video\",\r\n-//       // response: \"Playing video.\",\r\n-//       action: playVideo,\r\n-//     },\r\n-//     {\r\n-//       utterance: \"stop video\",\r\n-//       // response: \"Playing video.\",\r\n-//       action: pauseVideo,\r\n-//     },\r\n-//     {\r\n-//       utterance: \"scroll up\",\r\n-//       // response: \"Scrolling up.\",\r\n-//       action: scrollUp,\r\n-//     },\r\n-//     {\r\n-//       utterance: \"scroll down\",\r\n-//       // response: \"Scrolling down.\",\r\n-//       action: scrollDown,\r\n-//     },\r\n-//     {\r\n-//       utterance: \"go up\",\r\n-\r\n-//       // response: \"Scrolling up.\",\r\n-//       action: scrollUp,\r\n-//     },\r\n-//     {\r\n-//       utterance: \"go down\",\r\n-//       // response: \"Scrolling down.\",\r\n-//       action: scrollDown,\r\n-//     },\r\n-//     {\r\n-//       utterance: \"scroll to top\",\r\n-//       action: scrollToTop,\r\n-//     },\r\n-//     {\r\n-//       utterance: \"scroll to bottom\",\r\n-//       action: scrollToBottom,\r\n-//     },\r\n-//   ];\r\n-//   return (\r\n-//     <div className=\"speech-bot-container\">\r\n-//       <div\r\n-//         className={`button-container ${\r\n-//           isListening ? \"voicebotframeactive\" : \"voicebotframe\"\r\n-//         }`}\r\n-//       >\r\n-//         <div onClick={isListening ? stopListening : startListening}>\r\n-//           <iframe\r\n-//             src={\r\n-//               isListening\r\n-//                 ? \"https://lottie.host/?file=a89aca3f-5407-4052-82c3-2048afca7a9f/NpCdWzLSKD.json\"\r\n-//                 : \"https://lottie.host/?file=d2b6cc0e-fe95-4847-85b5-35365fca7e00/vTudpCuPZq.json\"\r\n-//             }\r\n-//             width=\"120\" // Set your desired width\r\n-//             height=\"120\" // Set your desired height\r\n-//             title={isListening ? \"Stop Animation\" : \"Start Animation\"}\r\n-//             className={isListening ? \"voicebotframeactive\" : \"voicebotframe\"}\r\n-//           ></iframe>\r\n-//           {isListening ? (\r\n-//             <div className=\"overlay\" onClick={stopListening}></div>\r\n-//           ) : (\r\n-//             <div className=\"overlay\" onClick={startListening}></div>\r\n-//           )}\r\n-//         </div>\r\n-//       </div>\r\n-//     </div>\r\n-//   );\r\n-// };\r\n-\r\n-// export default VoiceBot;\r\n-\r\n-// All functionalities but messed up\r\n-\r\n-// import React, { useState, useEffect, useRef } from \"react\";\r\n-// import { useNavigate, useLocation } from \"react-router-dom\";\r\n-// import Fuse from \"fuse.js\";\r\n-// import \"./VoiceBot.css\";\r\n-\r\n-// const VoiceBot = ({ videoRef, takeTestRef, goBackRef }) => {\r\n-//   const [isListening, setIsListening] = useState(false);\r\n-//   const [isSpeaking, setIsSpeaking] = useState(false);\r\n-//   const recognition = useRef(null);\r\n-//   const speechSynthesis = useRef(window.speechSynthesis);\r\n-//   const hasGreeted = useRef(false);\r\n-//   const navigate = useNavigate();\r\n-//   const location = useLocation();\r\n-//   const isRecognitionActive = useRef(false);\r\n-\r\n-//   useEffect(() => {\r\n-//     recognition.current = new window.webkitSpeechRecognition();\r\n-//     recognition.current.continuous = true;\r\n-//     recognition.current.interimResults = false;\r\n-//     recognition.current.onresult = onResult;\r\n-//     recognition.current.onend = onRecognitionEnd;\r\n-\r\n-//     return () => {\r\n-//       if (recognition.current) {\r\n-//         recognition.current.abort();\r\n-//       }\r\n-//     };\r\n-//   }, [location.pathname]);\r\n-\r\n-//   const onResult = (event) => {\r\n-//     const resultIndex = event.resultIndex;\r\n-//     const transcript = event.results[resultIndex][0].transcript\r\n-//       .trim()\r\n-//       .toLowerCase();\r\n-\r\n-//     if (event.results[resultIndex].isFinal) {\r\n-//       console.log(`Recognized text: ${transcript}`);\r\n-//       if (transcript.includes(\"brain\")) {\r\n-//         console.log(\"Wake word heard, processing command...\");\r\n-//         handleCommandWithFuse(transcript.replace(\"brain\", \"\"));\r\n-//       }\r\n-//     }\r\n-//   };\r\n-\r\n-//   const startListening = () => {\r\n-//     if (!isRecognitionActive.current) {\r\n-//       setIsListening(true);\r\n-//       recognition.current.start();\r\n-//       isRecognitionActive.current = true;\r\n-//     }\r\n-//   };\r\n-\r\n-//   const stopListening = () => {\r\n-//     if (isRecognitionActive.current) {\r\n-//       setIsListening(false);\r\n-//       recognition.current.stop();\r\n-//       isRecognitionActive.current = false;\r\n-//     }\r\n-//   };\r\n-\r\n-//   const onRecognitionEnd = () => {\r\n-//     isRecognitionActive.current = false;\r\n-//     if (isListening) {\r\n-//       startListening();\r\n-//     }\r\n-//   };\r\n-\r\n-//   const speak = (message) => {\r\n-//     const utterance = new SpeechSynthesisUtterance(message);\r\n-//     utterance.onend = () => {\r\n-//       setIsSpeaking(false);\r\n-//       if (isListening && !isRecognitionActive.current) {\r\n-//         startListening();\r\n-//       }\r\n-//     };\r\n-\r\n-//     setIsSpeaking(true);\r\n-//     if (isRecognitionActive.current) {\r\n-//       stopListening(); // Adjusted to use stopListening\r\n-//     }\r\n-//     speechSynthesis.current.speak(utterance);\r\n-//   };\r\n-\r\n-//   useEffect(() => {\r\n-//     if (isListening && !hasGreeted.current) {\r\n-//       speak(\"Hello, I'm Brane. How can I assist you today?\");\r\n-//       hasGreeted.current = true;\r\n-//     }\r\n-//   }, [isListening]);\r\n-\r\n-//   const goBack = () => {\r\n-//     if (window.history.length > 1) {\r\n-//       navigate(-1);\r\n-//     } else {\r\n-//       speak(\"Can't go back any further.\");\r\n-//     }\r\n-//   };\r\n-\r\n-//   const goForward = () => {\r\n-//     // Unfortunately, there's no direct way to check if you can go forward in the history.\r\n-//     // You might need to manage this state manually based on user navigation.\r\n-//     navigate(1);\r\n-//   };\r\n-\r\n-//   const playVideo = () => {\r\n-//     if (videoRef.current && !videoRef.current.paused) {\r\n-//       speak(\"Video is already playing.\");\r\n-//     } else if (videoRef.current) {\r\n-//       videoRef.current.play();\r\n-//       speak(\"Playing video.\");\r\n-//     } else {\r\n-//       speak(\"No video to play.\");\r\n-//     }\r\n-//   };\r\n-\r\n-//   const pauseVideo = () => {\r\n-//     if (videoRef.current && videoRef.current.paused) {\r\n-//       speak(\"Video is already paused.\");\r\n-//     } else if (videoRef.current) {\r\n-//       videoRef.current.pause();\r\n-//       speak(\"Video paused.\");\r\n-//     } else {\r\n-//       speak(\"No video to pause.\");\r\n-//     }\r\n-//   };\r\n-\r\n-//   const scrollAmount = window.innerHeight * 0.82;\r\n-\r\n-//   const scrollUp = () => {\r\n-//     if (window.pageYOffset === 0) {\r\n-//       speak(\"Already at the top of the page.\");\r\n-//     } else {\r\n-//       window.scrollBy(0, -scrollAmount);\r\n-//       speak(\"Scrolled up.\");\r\n-//     }\r\n-//   };\r\n-\r\n-//   const scrollDown = () => {\r\n-//     const maxScrollTop =\r\n-//       document.documentElement.scrollHeight - window.innerHeight;\r\n-//     if (window.pageYOffset >= maxScrollTop) {\r\n-//       speak(\"Already at the bottom of the page.\");\r\n-//     } else {\r\n-//       window.scrollBy(0, scrollAmount);\r\n-//       speak(\"Scrolled down.\");\r\n-//     }\r\n-//   };\r\n-\r\n-//   const scrollToTop = () => {\r\n-//     if (window.pageYOffset === 0) {\r\n-//       speak(\"Already at the top of the page.\");\r\n-//     } else {\r\n-//       window.scrollTo(0, 0);\r\n-//       speak(\"Scrolled to the top of the page.\");\r\n-//     }\r\n-//   };\r\n-\r\n-//   const scrollToBottom = () => {\r\n-//     const maxScrollTop =\r\n-//       document.documentElement.scrollHeight - window.innerHeight;\r\n-//     if (window.pageYOffset >= maxScrollTop) {\r\n-//       speak(\"Already at the bottom of the page.\");\r\n-//     } else {\r\n-//       window.scrollTo(0, document.body.scrollHeight);\r\n-//       speak(\"Scrolled to the bottom of the page.\");\r\n-//     }\r\n-//   };\r\n-\r\n-//   // const speak = (message) => {\r\n-//   //   const utterance = new SpeechSynthesisUtterance(message);\r\n-//   //   utterance.onend = () => {\r\n-//   //     setIsSpeaking(false);\r\n-//   //     console.log(\"Speaking ended.\");\r\n-//   //     // Only restart recognition if we're still supposed to be listening\r\n-//   //     // if (isListening) {\r\n-//   //     //   if (restartRecognitionTimeout.current) {\r\n-//   //     //     clearTimeout(restartRecognitionTimeout.current);\r\n-//   //     //   }\r\n-//   //     //   restartRecognitionTimeout.current = setTimeout(() => {\r\n-//   //     //     console.log(\"Recognition restarted.\");\r\n-//   //     //     recognition.current.start();\r\n-//   //     //   }, 100); // Delay to prevent immediate restart\r\n-//   //     // }\r\n-//   //     if (isListening && !recognition.current.starting) { // Check the flag before restarting\r\n-//   //       recognition.current.starting = true; // Set the flag when starting recognition\r\n-//   //       recognition.current.start();\r\n-//   //     }\r\n-//   //   };\r\n-\r\n-//   //   setIsSpeaking(true);\r\n-//   //   console.log(\"Speaking started.\");\r\n-//   //   recognition.current.stop(); // Stop recognition when the bot starts speaking\r\n-//   //   speechSynthesis.current.speak(utterance);\r\n-//   // };\r\n-\r\n-//   // const onRecognitionEnd = () => {\r\n-//   //   console.log(\"Recognition ended.\");\r\n-//   //   setIsRecognitionActive(false); // Update state when recognition ends\r\n-//   //   recognition.current.starting = false; // Reset the flag when recognition ends\r\n-//   //   // We now check if the recognition is already running before starting it again\r\n-//   //   if (isListening && !isSpeaking && !recognition.current?.starting) {\r\n-//   //     console.log(\"Restarting recognition.\");\r\n-//   //     recognition.current.start();\r\n-//   //   }\r\n-//   // };\r\n-\r\n-//   // useEffect(() => {\r\n-//   //   if (isListening && !hasGreeted.current) {\r\n-//   //     speak(\"Hello, I'm Brane. How can I assist you today?\");\r\n-//   //     hasGreeted.current = true;\r\n-//   //   } else if (isListening && !isSpeaking) {\r\n-//   //     recognition.current.start();\r\n-//   //   }\r\n-//   // }, [isListening, isSpeaking]);\r\n-\r\n-//   // const startListening = () => {\r\n-//   //   console.log(\"Attempting to start listening.\");\r\n-//   //   if (recognition.current && !recognition.current.starting) {\r\n-//   //     setIsListening(true);\r\n-//   //     recognition.current.starting = true; // Set the flag when starting recognition\r\n-//   //     recognition.current.start();\r\n-//   //     console.log(\"Listening started.\");\r\n-//   //   }\r\n-//   // };\r\n-\r\n-//   // const stopListening = () => {\r\n-//   //   console.log(\"Stopping listening.\");\r\n-\r\n-//   //   setIsListening(false);\r\n-//   //   recognition.current.stop();\r\n-//   //   if (speechSynthesis.current.speaking) {\r\n-//   //     speechSynthesis.current.cancel();\r\n-//   //   }\r\n-//   //   if (restartRecognitionTimeout.current) {\r\n-//   //     clearTimeout(restartRecognitionTimeout.current);\r\n-//   //   }\r\n-//   //   console.log(\"Listening stopped.\");\r\n-//   // };\r\n-//   // Handle start and stop listening logic\r\n-\r\n-//   useEffect(() => {\r\n-//     if (isListening && !hasGreeted.current) {\r\n-//       speak(\"Hello, I'm Brane. How can I assist you today?\");\r\n-//       hasGreeted.current = true;\r\n-//     }\r\n-//   }, [isListening]);\r\n-\r\n-//   // const handleCommandWithFuse = (command) => {\r\n-//   //   const fuse = new Fuse(commands, { keys: [\"utterance\"], threshold: 0.4 });\r\n-//   //   const results = fuse.search(command);\r\n-//   //   const foundCommand = results.length ? results[0].item : null;\r\n-\r\n-//   //   if (foundCommand) {\r\n-//   //     console.log(\"Command found:\", foundCommand.utterance);\r\n-//   //     speak(foundCommand.response);\r\n-//   //     if (foundCommand.route) {\r\n-//   //       navigate(foundCommand.route); // Navigate to the route specified in the command\r\n-//   //     }\r\n-//   //   } else {\r\n-//   //     console.log(\"No command found.\");\r\n-//   //     speak(\"I'm not sure how to respond to that.\");\r\n-//   //   }\r\n-//   // };\r\n-\r\n-//   const handleCommandWithFuse = (command) => {\r\n-//     const fuse = new Fuse(commands, { keys: [\"utterance\"], threshold: 0.4 });\r\n-//     const results = fuse.search(command);\r\n-//     const foundCommand = results.length ? results[0].item : null;\r\n-\r\n-//     if (foundCommand) {\r\n-//       console.log(\"Command found:\", foundCommand.utterance);\r\n-\r\n-//       if (foundCommand.action) {\r\n-//         foundCommand.action();\r\n-//       } else if (foundCommand.route) {\r\n-//         navigate(foundCommand.route);\r\n-//       }\r\n-\r\n-//       if (foundCommand.response) {\r\n-//         speak(foundCommand.response);\r\n-//       }\r\n-//     } else {\r\n-//       console.log(\"No command found.\");\r\n-//       speak(\"I'm not sure how to respond to that.\");\r\n-//     }\r\n-//   };\r\n-\r\n-//   const commands = [\r\n-//     {\r\n-//       utterance: \"Hello who are you ?\",\r\n-\r\n-//       response:\r\n-//         \"Hi! This is Brane! your Voice bot from Brane Education How can I Assist you Today ?\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"Hello\",\r\n-\r\n-//       response: \"Hi! How can I assist you today?\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"hello\",\r\n-\r\n-//       response: \"Hi! How can I assist you today?\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"Hi.\",\r\n-\r\n-//       response: \"Hello! How can I assist you today?\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"Hey there\",\r\n-\r\n-//       response: \"Hi! How can I assist you today?\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"Good morning Brane.\",\r\n-\r\n-//       response: \"Hey Hiii! Good morning  ! How can I help you?\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"Good afternoon Brane.\",\r\n-\r\n-//       response: \"Hey Hiii! Good after noon ! How can I help you?\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"Good evening Brane.\",\r\n-\r\n-//       response: \"Hey Hiii! Good evening ! How can I help you?\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"can you please take me to login page\",\r\n-//       route: \"/login\",\r\n-//       routeDescription: \"login page\",\r\n-//       response: \"Navigating to the login page.\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"go to login page\",\r\n-//       route: \"/login\",\r\n-//       routeDescription: \"login page\",\r\n-//       response: \"Navigating to the login page.\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"please take me to login page\",\r\n-//       route: \"/login\",\r\n-//       routeDescription: \"login page\",\r\n-//       response: \"Navigating to the login page.\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"Go to login page\",\r\n-//       route: \"/login\",\r\n-//       routeDescription: \"login page\",\r\n-//       response: \"Navigating to the login page.\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"open login page\",\r\n-//       route: \"/login\",\r\n-//       routeDescription: \"login page\",\r\n-//       response: \"Navigating to the login page.\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"can you please take me to signup page\",\r\n-//       route: \"/signup\",\r\n-//       routeDescription: \"signup page\",\r\n-//       response: \"Navigating to the signup page.\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"take me to signup page\",\r\n-//       route: \"/signup\",\r\n-//       routeDescription: \"signup page\",\r\n-//       response: \"Navigating to the signup page.\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"Go to signup page\",\r\n-//       route: \"/signup\",\r\n-//       routeDescription: \"signup page\",\r\n-//       response: \"Navigating to the signup page.\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"open signup page\",\r\n-//       route: \"/signup\",\r\n-//       routeDescription: \"signup page\",\r\n-//       response: \"Navigating to the signup page.\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"what are platform features\",\r\n-\r\n-//       response:\r\n-//         \"Dashboard, Dynamic time table, Learning Networks, Little Masters, Video Based Dictionary, General Search.\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"Features of platform\",\r\n-\r\n-//       response:\r\n-//         \"Dashboard, Dynamic time table, Learning Networks, Little Masters, Video Based Dictionary, General Search.\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"What does the platform offer\",\r\n-\r\n-//       response:\r\n-//         \"Dashboard, Dynamic time table, Learning Networks, Little Masters, Video Based Dictionary, General Search.\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"Say me the features of platform\",\r\n-\r\n-//       response:\r\n-//         \"Dashboard, Dynamic time table, Learning Networks, Little Masters, Video Based Dictionary, General Search.\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"Say me the services of platform\",\r\n-\r\n-//       response:\r\n-//         \"Dashboard, Dynamic time table, Learning Networks, Little Masters, Video Based Dictionary, General Search.\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"tell me the services offered by the platform\",\r\n-\r\n-//       response:\r\n-//         \"Dashboard, Dynamic time table, Learning Networks, Little Masters, Video Based Dictionary, General Search.\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"explain platform services\",\r\n-\r\n-//       response:\r\n-//         \"Dashboard, Dynamic time table, Learning Networks, Little Masters, Video Based Dictionary, General Search.\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"Give me the Parent voice of Julia Harris\",\r\n-\r\n-//       response:\r\n-//         \"Brane education has helped my son a lot in his studies. He improved a lot in his studies and is now able to score good marks in his exams\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"Play today's motivational video\",\r\n-\r\n-//       response: \"I am playing the video\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"Play today's video\",\r\n-\r\n-//       response: \"I am playing Motivational video\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"Leaders Voice\",\r\n-\r\n-//       response:\r\n-//         \"This Voice-interactive AI Platform is a game Changer. It revolutionizes education.\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"Curriculum Supported by Brane Education\",\r\n-\r\n-//       response:\r\n-//         \"we support multiple Boards let me say few Telangana State Board Andhra Pradesh Board Maharashtra Board Assam Board\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"Boards supported by the platform\",\r\n-\r\n-//       response:\r\n-//         \"we support multiple Boards let me say few Telangana State Board Andhra Pradesh Board Maharashtra Board Assam Board\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"Curriculum\",\r\n-\r\n-//       response:\r\n-//         \"we support multiple Boards let me say few Telangana State Board Andhra Pradesh Board Maharashtra Board Assam Board\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"Go to landing page\",\r\n-\r\n-//       response: \"Okay, I am taking you to the landing page.\",\r\n-\r\n-//       route: \"/childpage\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"take me to landing page\",\r\n-\r\n-//       response: \"Okay, I am taking you to the landing page.\",\r\n-\r\n-//       route: \"/childpage\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"move to landing page\",\r\n-\r\n-//       response: \"Okay, I am taking you to the landing page.\",\r\n-\r\n-//       route: \"/childpage\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"roll back to landing page\",\r\n-\r\n-//       response: \"Okay, I am taking you to the landing page.\",\r\n-\r\n-//       route: \"/childpage\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"move to landing page\",\r\n-\r\n-//       response: \"Okay, I am taking you to the landing page.\",\r\n-\r\n-//       route: \"/childpage\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"what is today's quote\",\r\n-\r\n-//       response:\r\n-//         \"Determination is the power that sees us through all our frustration and obstacles. It helps in building our willpower which is the very basis of success.\",\r\n-\r\n-//       // route: \"/childpage\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"Today's Inspirational quote\",\r\n-\r\n-//       response:\r\n-//         \"Determination is the power that sees us through all our frustration and obstacles. It helps in building our willpower which is the very basis of success.\",\r\n-\r\n-//       // route: \"/childpage\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"say me today's quote\",\r\n-\r\n-//       response:\r\n-//         \"Determination is the power that sees us through all our frustration and obstacles. It helps in building our willpower which is the very basis of success.\",\r\n-\r\n-//       // route: \"/childpage\",\r\n-//     },\r\n-//     {\r\n-//       utterance: \"go back\",\r\n-//       response: \"Going back.\",\r\n-//       action: goBack, // Note the use of an action property\r\n-//     },\r\n-//     {\r\n-//       utterance: \"go forward\",\r\n-//       response: \"Going forward.\",\r\n-//       action: goForward,\r\n-//     },\r\n-//     {\r\n-//       utterance: \"play video\",\r\n-//       // response: \"Playing video.\",\r\n-//       action: playVideo,\r\n-//     },\r\n-//     {\r\n-//       utterance: \"pause video\",\r\n-//       // response: \"Pausing video.\",\r\n-//       action: pauseVideo,\r\n-//     },\r\n-//     {\r\n-//       utterance: \"start video\",\r\n-//       // response: \"Playing video.\",\r\n-//       action: playVideo,\r\n-//     },\r\n-//     {\r\n-//       utterance: \"stop video\",\r\n-//       // response: \"Playing video.\",\r\n-//       action: pauseVideo,\r\n-//     },\r\n-//     {\r\n-//       utterance: \"scroll up\",\r\n-//       // response: \"Scrolling up.\",\r\n-//       action: scrollUp,\r\n-//     },\r\n-//     {\r\n-//       utterance: \"scroll down\",\r\n-//       // response: \"Scrolling down.\",\r\n-//       action: scrollDown,\r\n-//     },\r\n-//     {\r\n-//       utterance: \"go up\",\r\n-\r\n-//       // response: \"Scrolling up.\",\r\n-//       action: scrollUp,\r\n-//     },\r\n-//     {\r\n-//       utterance: \"go down\",\r\n-//       // response: \"Scrolling down.\",\r\n-//       action: scrollDown,\r\n-//     },\r\n-//     {\r\n-//       utterance: \"scroll to top\",\r\n-//       action: scrollToTop,\r\n-//     },\r\n-//     {\r\n-//       utterance: \"scroll to bottom\",\r\n-//       action: scrollToBottom,\r\n-//     },\r\n-//     {\r\n-//       utterance: \"go back\",\r\n-//       action: goBackRef?.current?.click, // Use goBackRef directly\r\n-//       response: \"Going back.\",\r\n-//     },\r\n-//     {\r\n-//       utterance: \"take test\",\r\n-//       action: takeTestRef?.current?.click, // Use takeTestRef directly\r\n-//       response: \"Starting the test.\",\r\n-//     },\r\n-//   ];\r\n-//   return (\r\n-//     <div className=\"speech-bot-container\">\r\n-//       <div\r\n-//         className={`button-container ${\r\n-//           isListening ? \"voicebotframeactive\" : \"voicebotframe\"\r\n-//         }`}\r\n-//       >\r\n-//         <div onClick={isListening ? stopListening : startListening}>\r\n-//           <iframe\r\n-//             src={\r\n-//               isListening\r\n-//                 ? \"https://lottie.host/?file=a89aca3f-5407-4052-82c3-2048afca7a9f/NpCdWzLSKD.json\"\r\n-//                 : \"https://lottie.host/?file=d2b6cc0e-fe95-4847-85b5-35365fca7e00/vTudpCuPZq.json\"\r\n-//             }\r\n-//             width=\"120\" // Set your desired width\r\n-//             height=\"120\" // Set your desired height\r\n-//             title={isListening ? \"Stop Animation\" : \"Start Animation\"}\r\n-//             className={isListening ? \"voicebotframeactive\" : \"voicebotframe\"}\r\n-//           ></iframe>\r\n-//           {isListening ? (\r\n-//             <div className=\"overlay\" onClick={stopListening}></div>\r\n-//           ) : (\r\n-//             <div className=\"overlay\" onClick={startListening}></div>\r\n-//           )}\r\n-//         </div>\r\n-//       </div>\r\n-//     </div>\r\n-//   );\r\n-// };\r\n-\r\n-// export default VoiceBot;\r\n"
                },
                {
                    "date": 1700650189037,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,3664 @@\n+import React, { useState, useEffect, useRef } from \"react\";\r\n+import { useNavigate, useLocation } from \"react-router-dom\";\r\n+import Fuse from \"fuse.js\";\r\n+import \"./VoiceBot.css\";\r\n+import chatbotimage from \"../../assets/chatbotgif.gif\";\r\n+\r\n+const VoiceBot = ({ videoRef, isMuted, setIsMuted }) => {\r\n+  const [isListening, setIsListening] = useState(false);\r\n+  const [isSpeaking, setIsSpeaking] = useState(false);\r\n+  const recognition = useRef(null);\r\n+  const speechSynthesis = useRef(window.speechSynthesis);\r\n+  const [hasGreeted, setHasGreeted] = useState(false);\r\n+  const navigate = useNavigate();\r\n+\r\n+  // Initialize speech recognition\r\n+  useEffect(() => {\r\n+    recognition.current = new window.webkitSpeechRecognition();\r\n+    recognition.current.continuous = true;\r\n+    recognition.current.interimResults = false;\r\n+    recognition.current.onresult = onResult;\r\n+    recognition.current.onend = onRecognitionEnd;\r\n+    recognition.current.starting = false;\r\n+\r\n+    recognition.current.onerror = (event) => {\r\n+      console.error(\"Recognition error:\", event.error);\r\n+      if (isListening && !isSpeaking) {\r\n+        restartRecognition();\r\n+      }\r\n+    };\r\n+\r\n+    return () => {\r\n+      if (recognition.current) {\r\n+        recognition.current.abort();\r\n+      }\r\n+    };\r\n+  }, []);\r\n+\r\n+  useEffect(() => {\r\n+    const checkRecognition = () => {\r\n+      if (isListening && !isSpeaking && !recognition.current.starting) {\r\n+        console.log(\"Restarting recognition because it's not active.\");\r\n+        recognition.current.starting = true;\r\n+        recognition.current.start();\r\n+        console.log(\"Restarted recognition.\");\r\n+      }\r\n+    };\r\n+\r\n+    const recognitionCheckInterval = setInterval(checkRecognition, 500); // Check every .5 second\r\n+\r\n+    return () => {\r\n+      clearInterval(recognitionCheckInterval);\r\n+    };\r\n+  }, [isListening, isSpeaking]);\r\n+\r\n+  const historyStack = useRef([]);\r\n+\r\n+  useEffect(() => {\r\n+    return () => {\r\n+      // Clean up the listener when the component unmounts\r\n+      window.removeEventListener(\"popstate\", handlePopState);\r\n+    };\r\n+  }, []);\r\n+\r\n+  const handlePopState = () => {\r\n+    // This needs to handle both back and forward browser actions\r\n+    // Use some logic to determine whether it's a back or forward action\r\n+    // For simplicity, assume it's always back\r\n+    historyStack.current.pop();\r\n+    forwardStack.current.length = 0; // Clear forward stack on manual navigation\r\n+  };\r\n+\r\n+  // Add a new entry to the stack whenever navigate is called\r\n+  const customNavigate = (to, options) => {\r\n+    historyStack.current.push(to);\r\n+    navigate(to, options);\r\n+  };\r\n+\r\n+  // Listen to popstate events to update the history stack\r\n+  useEffect(() => {\r\n+    window.addEventListener(\"popstate\", handlePopState);\r\n+  }, []);\r\n+\r\n+  const forwardStack = useRef([]);\r\n+\r\n+  const goBack = () => {\r\n+    if (window.history.state && window.history.state.idx > 0) {\r\n+      window.history.back();\r\n+      speak(\"Going back\");\r\n+    } else {\r\n+      speak(\"Can't go back any further.\");\r\n+    }\r\n+  };\r\n+\r\n+  const goForward = () => {\r\n+    if (\r\n+      window.history.state &&\r\n+      window.history.state.idx < window.history.length - 1\r\n+    ) {\r\n+      window.history.forward();\r\n+      speak(\"Going forward\");\r\n+    } else {\r\n+      speak(\"No forward history available.\");\r\n+    }\r\n+  };\r\n+\r\n+  const playVideo = () => {\r\n+    if (videoRef.current) {\r\n+      videoRef.current.play();\r\n+      speak(\"Playing video.\");\r\n+    } else {\r\n+      speak(\"No video to play.\");\r\n+    }\r\n+  };\r\n+\r\n+  const pauseVideo = () => {\r\n+    if (videoRef.current) {\r\n+      videoRef.current.pause();\r\n+      speak(\"Video paused.\");\r\n+    } else {\r\n+      speak(\"No video to pause.\");\r\n+    }\r\n+  };\r\n+\r\n+  const scrollAmount = window.innerHeight * 0.82;\r\n+\r\n+  const scrollUp = () => {\r\n+    if (window.pageYOffset === 0) {\r\n+      speak(\"Already at the top of the page.\");\r\n+    } else {\r\n+      window.scrollBy(0, -scrollAmount);\r\n+      speak(\"Scrolled up.\");\r\n+    }\r\n+  };\r\n+\r\n+  const scrollDown = () => {\r\n+    const maxScrollTop =\r\n+      document.documentElement.scrollHeight - window.innerHeight;\r\n+    if (window.pageYOffset >= maxScrollTop) {\r\n+      speak(\"Already at the bottom of the page.\");\r\n+    } else {\r\n+      window.scrollBy(0, scrollAmount);\r\n+      speak(\"Scrolled down.\");\r\n+    }\r\n+  };\r\n+\r\n+  const scrollToTop = () => {\r\n+    if (window.pageYOffset === 0) {\r\n+      speak(\"Already at the top of the page.\");\r\n+    } else {\r\n+      window.scrollTo(0, 0);\r\n+      speak(\"Scrolled to the top of the page.\");\r\n+    }\r\n+  };\r\n+\r\n+  const scrollToBottom = () => {\r\n+    const maxScrollTop =\r\n+      document.documentElement.scrollHeight - window.innerHeight;\r\n+    if (window.pageYOffset >= maxScrollTop) {\r\n+      speak(\"Already at the bottom of the page.\");\r\n+    } else {\r\n+      window.scrollTo(0, document.body.scrollHeight);\r\n+      speak(\"Scrolled to the bottom of the page.\");\r\n+    }\r\n+  };\r\n+\r\n+  const muteVideo = () => {\r\n+    if (videoRef.current) {\r\n+      setIsMuted(true);\r\n+    } else {\r\n+      speak(\"No video to mute.\");\r\n+    }\r\n+  };\r\n+\r\n+  const unmuteVideo = () => {\r\n+    if (videoRef.current) {\r\n+      setIsMuted(false);\r\n+    } else {\r\n+      speak(\"No video to unmute.\");\r\n+    }\r\n+  };\r\n+\r\n+  const speak = (message) => {\r\n+    const utterance = new SpeechSynthesisUtterance(message);\r\n+    utterance.onend = () => {\r\n+      setIsSpeaking(false);\r\n+      // Restart recognition after speaking has ended\r\n+      if (isListening) {\r\n+        restartRecognition();\r\n+      }\r\n+    };\r\n+\r\n+    setIsSpeaking(true);\r\n+    // Stop recognition when the bot starts speaking\r\n+    if (recognition.current) {\r\n+      recognition.current.abort();\r\n+    }\r\n+    speechSynthesis.current.speak(utterance);\r\n+  };\r\n+\r\n+  const restartRecognition = () => {\r\n+    // Check if recognition is not already started and if the bot is set to listen\r\n+    if (\r\n+      recognition.current &&\r\n+      !recognition.current.starting &&\r\n+      isListening &&\r\n+      !isSpeaking\r\n+    ) {\r\n+      recognition.current.abort(); // Ensure any ongoing recognition is stopped\r\n+      recognition.current.starting = true;\r\n+      recognition.current.start();\r\n+    }\r\n+  };\r\n+\r\n+  // Restart recognition when bot finishes speaking and isListening is true\r\n+  useEffect(() => {\r\n+    if (!isSpeaking && isListening) {\r\n+      restartRecognition();\r\n+    }\r\n+  }, [isSpeaking, isListening]);\r\n+\r\n+  const onResult = (event) => {\r\n+    const resultIndex = event.resultIndex;\r\n+    const transcript = event.results[resultIndex][0].transcript\r\n+      .trim()\r\n+      .toLowerCase();\r\n+\r\n+    if (event.results[resultIndex].isFinal) {\r\n+      console.log(`Recognized text: ${transcript}`);\r\n+      if (transcript.includes(\"brain\")) {\r\n+        console.log(\"Wake word heard, processing command...\");\r\n+        handleCommandWithFuse(transcript.replace(\"brain\", \"\"));\r\n+      }\r\n+    }\r\n+  };\r\n+\r\n+  const onRecognitionEnd = () => {\r\n+    recognition.current.starting = false;\r\n+    if (isListening && !isSpeaking) {\r\n+      restartRecognition();\r\n+    }\r\n+  };\r\n+\r\n+  useEffect(() => {\r\n+    if (isListening && !hasGreeted) {\r\n+      speak(\"Hello, I'm Brane. How can I help you today?\");\r\n+      setHasGreeted(true);\r\n+    }\r\n+  }, [isListening, hasGreeted]);\r\n+\r\n+  // Updated startListening function\r\n+  const startListening = () => {\r\n+    setIsListening(true);\r\n+    if (!recognition.current.starting) {\r\n+      restartRecognition();\r\n+    }\r\n+  };\r\n+\r\n+  // Updated stopListening function\r\n+  const stopListening = () => {\r\n+    setIsListening(false);\r\n+    if (speechSynthesis.current.speaking) {\r\n+      speechSynthesis.current.cancel();\r\n+    }\r\n+    recognition.current.abort();\r\n+  };\r\n+\r\n+  const handleCommandWithFuse = (command) => {\r\n+    const fuse = new Fuse(commands, { keys: [\"utterance\"], threshold: 0.4 });\r\n+    const results = fuse.search(command);\r\n+    const foundCommand = results.length ? results[0].item : null;\r\n+\r\n+    if (foundCommand) {\r\n+      console.log(\"Command found:\", foundCommand.utterance);\r\n+\r\n+      if (foundCommand.action) {\r\n+        foundCommand.action();\r\n+      } else if (foundCommand.route) {\r\n+        navigate(foundCommand.route);\r\n+      }\r\n+\r\n+      // Speak after performing the action or navigation\r\n+      speak(foundCommand.response);\r\n+    } else {\r\n+      console.log(\"No command found.\");\r\n+      speak(\"I'm not sure how to respond to that.\");\r\n+    }\r\n+  };\r\n+\r\n+  const commands = [\r\n+    {\r\n+      utterance: \"Hello who are you ?\",\r\n+\r\n+      response:\r\n+        \"Hi! This is Brane! your Voice bot from Brane Education How can I Assist you Today ?\",\r\n+    },\r\n+\r\n+    {\r\n+      utterance: \"Hello\",\r\n+\r\n+      response: \"Hi! How can I assist you today?\",\r\n+    },\r\n+\r\n+    {\r\n+      utterance: \"hello\",\r\n+\r\n+      response: \"Hi! How can I assist you today?\",\r\n+    },\r\n+\r\n+    {\r\n+      utterance: \"Hi.\",\r\n+\r\n+      response: \"Hello! How can I assist you today?\",\r\n+    },\r\n+\r\n+    {\r\n+      utterance: \"Hey there\",\r\n+\r\n+      response: \"Hi! How can I assist you today?\",\r\n+    },\r\n+\r\n+    {\r\n+      utterance: \"Good morning Brane.\",\r\n+\r\n+      response: \"Hey Hiii! Good morning  ! How can I help you?\",\r\n+    },\r\n+\r\n+    {\r\n+      utterance: \"Good afternoon Brane.\",\r\n+\r\n+      response: \"Hey Hiii! Good after noon ! How can I help you?\",\r\n+    },\r\n+\r\n+    {\r\n+      utterance: \"Good evening Brane.\",\r\n+\r\n+      response: \"Hey Hiii! Good evening ! How can I help you?\",\r\n+    },\r\n+\r\n+    {\r\n+      utterance: \"take me to homepage\",\r\n+\r\n+      route: \"/\",\r\n+\r\n+      response: \"You're in Homepage now\",\r\n+    },\r\n+    {\r\n+      utterance: \"open homepage\",\r\n+\r\n+      route: \"/\",\r\n+\r\n+      response: \"You're in Homepage now\",\r\n+    },\r\n+    {\r\n+      utterance: \"go to homepage\",\r\n+\r\n+      route: \"/\",\r\n+\r\n+      response: \"You're in Homepage now\",\r\n+    },\r\n+    {\r\n+      utterance: \"go back to homepage\",\r\n+\r\n+      route: \"/\",\r\n+\r\n+      response: \"You're in Homepage now\",\r\n+    },\r\n+    {\r\n+      utterance: \"can you please take me to login page\",\r\n+\r\n+      route: \"/login\",\r\n+\r\n+      response: \"Here's the Login Page, Please Login\",\r\n+    },\r\n+\r\n+    {\r\n+      utterance: \"please take me to login page\",\r\n+\r\n+      route: \"/login\",\r\n+\r\n+      response: \"Here's the Login Page, Please Login\",\r\n+    },\r\n+\r\n+    {\r\n+      utterance: \"Go to login page\",\r\n+\r\n+      route: \"/login\",\r\n+\r\n+      response: \"Here's the Login Page, Please Login\",\r\n+    },\r\n+\r\n+    {\r\n+      utterance: \"open login page\",\r\n+\r\n+      route: \"/login\",\r\n+\r\n+      response: \"Here's the Login Page, Please Login\",\r\n+    },\r\n+\r\n+    {\r\n+      utterance: \"can you please take me to signup page\",\r\n+\r\n+      route: \"/signup\",\r\n+\r\n+      response: \"Here's the signup page. Please proceed With Registration.\",\r\n+    },\r\n+\r\n+    {\r\n+      utterance: \"take me to signup page\",\r\n+\r\n+      route: \"/signup\",\r\n+\r\n+      response: \"Here's the signup page. Please proceed With Registration.\",\r\n+    },\r\n+\r\n+    {\r\n+      utterance: \"Go to signup page\",\r\n+\r\n+      route: \"/signup\",\r\n+\r\n+      response: \"Here's the signup page. Please proceed With Registration.\",\r\n+    },\r\n+\r\n+    {\r\n+      utterance: \"open signup page\",\r\n+\r\n+      route: \"/signup\",\r\n+\r\n+      response: \"Here's the signup page. Please proceed With Registration.\",\r\n+    },\r\n+\r\n+    {\r\n+      utterance: \"Go to face id\",\r\n+\r\n+      route: \"/login/faceid\",\r\n+\r\n+      response: \"Here's Face ID Login. Please proceed.\",\r\n+    },\r\n+\r\n+    {\r\n+      utterance: \"Go to face id login\",\r\n+\r\n+      route: \"/login/faceid\",\r\n+\r\n+      response: \"Here's Face ID Login. Please proceed.\",\r\n+    },\r\n+    {\r\n+      utterance: \"Go to face login\",\r\n+\r\n+      route: \"/login/faceid\",\r\n+\r\n+      response: \"Here's Face ID Login. Please proceed.\",\r\n+    },\r\n+\r\n+    {\r\n+      utterance: \"login with face id\",\r\n+\r\n+      route: \"/login/faceid\",\r\n+\r\n+      response: \"Here's Face ID Login. Please proceed.\",\r\n+    },\r\n+\r\n+    {\r\n+      utterance: \"login with face\",\r\n+\r\n+      route: \"/login/faceid\",\r\n+\r\n+      response: \"Here's Face ID Login. Please proceed.\",\r\n+    },\r\n+\r\n+    {\r\n+      utterance: \"i want to login with face\",\r\n+\r\n+      route: \"/login/faceid\",\r\n+\r\n+      response: \"Here's Face ID Login. Please proceed.\",\r\n+    },\r\n+\r\n+    {\r\n+      utterance: \"login with voice\",\r\n+\r\n+      route: \"/login/voiceid\",\r\n+\r\n+      response: \"Here's Voice Login. Please proceed.\",\r\n+    },\r\n+\r\n+    {\r\n+      utterance: \"i want to login with voice\",\r\n+\r\n+      route: \"/login/voiceid\",\r\n+\r\n+      response: \"Here's Voice Login. Please proceed.\",\r\n+    },\r\n+\r\n+    {\r\n+      utterance: \"go to voice login\",\r\n+\r\n+      route: \"/login/voiceid\",\r\n+\r\n+      response: \"Here's Voice Login. Please proceed.\",\r\n+    },\r\n+\r\n+    {\r\n+      utterance: \"login with voice\",\r\n+\r\n+      route: \"/login/voiceid\",\r\n+\r\n+      response: \"Here's Voice Login. Please proceed.\",\r\n+    },\r\n+\r\n+    {\r\n+      utterance: \"login with mobile\",\r\n+\r\n+      route: \"/login/mobile\",\r\n+\r\n+      response: \"Here's Mobile Login. Please proceed.\",\r\n+    },\r\n+\r\n+    {\r\n+      utterance: \"i want to login with mobile\",\r\n+\r\n+      route: \"/login/mobile\",\r\n+\r\n+      response: \"Here's Mobile Login. Please proceed.\",\r\n+    },\r\n+    {\r\n+      utterance: \"go to mobile login\",\r\n+\r\n+      route: \"/login/mobile\",\r\n+\r\n+      response: \"Here's Mobile Login. Please proceed.\",\r\n+    },\r\n+    {\r\n+      utterance: \"go to about page\",\r\n+\r\n+      route: \"/aboutus\",\r\n+\r\n+      response: \"This is About us.\",\r\n+    },\r\n+    {\r\n+      utterance: \"go to about us page\",\r\n+\r\n+      route: \"/aboutus\",\r\n+\r\n+      response: \"This is About us.\",\r\n+    },\r\n+    {\r\n+      utterance: \"open about us page\",\r\n+\r\n+      route: \"/aboutus\",\r\n+\r\n+      response: \"This is About us.\",\r\n+    },\r\n+    {\r\n+      utterance: \"open about page\",\r\n+\r\n+      route: \"/aboutus\",\r\n+\r\n+      response: \"This is About us.\",\r\n+    },\r\n+    {\r\n+      utterance: \"take me to about page\",\r\n+\r\n+      route: \"/aboutus\",\r\n+\r\n+      response: \"This is About us.\",\r\n+    },\r\n+    {\r\n+      utterance: \"take me to about us page\",\r\n+\r\n+      route: \"/aboutus\",\r\n+\r\n+      response: \"This is About us.\",\r\n+    },\r\n+\r\n+    {\r\n+      utterance: \"go to contact page\",\r\n+\r\n+      route: \"/contactus\",\r\n+\r\n+      response: \"You can contact us from here\",\r\n+    },\r\n+    {\r\n+      utterance: \"go to contact us page\",\r\n+\r\n+      route: \"/contactus\",\r\n+\r\n+      response: \"You can contact us from here\",\r\n+    },\r\n+    {\r\n+      utterance: \"open contact us page\",\r\n+\r\n+      route: \"/contactus\",\r\n+\r\n+      response: \"You can contact us from here\",\r\n+    },\r\n+    {\r\n+      utterance: \"open contact page\",\r\n+\r\n+      route: \"/contactus\",\r\n+\r\n+      response: \"You can contact us from here\",\r\n+    },\r\n+    {\r\n+      utterance: \"take me to about page\",\r\n+\r\n+      route: \"/contactus\",\r\n+\r\n+      response: \"You can contact us from here\",\r\n+    },\r\n+    {\r\n+      utterance: \"take me to contact us page\",\r\n+\r\n+      route: \"/contactus\",\r\n+\r\n+      response: \"You can contact us from here\",\r\n+    },\r\n+\r\n+    {\r\n+      utterance: \"what are platform features\",\r\n+\r\n+      response:\r\n+        \"Dashboard, Dynamic time table, Learning Networks, Little Masters, Video Based Dictionary, General Search.\",\r\n+    },\r\n+\r\n+    {\r\n+      utterance: \"Features of platform\",\r\n+\r\n+      response:\r\n+        \"Dashboard, Dynamic time table, Learning Networks, Little Masters, Video Based Dictionary, General Search.\",\r\n+    },\r\n+\r\n+    {\r\n+      utterance: \"What does the platform offer\",\r\n+\r\n+      response:\r\n+        \"Dashboard, Dynamic time table, Learning Networks, Little Masters, Video Based Dictionary, General Search.\",\r\n+    },\r\n+\r\n+    {\r\n+      utterance: \"Say me the features of platform\",\r\n+\r\n+      response:\r\n+        \"Dashboard, Dynamic time table, Learning Networks, Little Masters, Video Based Dictionary, General Search.\",\r\n+    },\r\n+\r\n+    {\r\n+      utterance: \"Say me the services of platform\",\r\n+\r\n+      response:\r\n+        \"Dashboard, Dynamic time table, Learning Networks, Little Masters, Video Based Dictionary, General Search.\",\r\n+    },\r\n+\r\n+    {\r\n+      utterance: \"tell me the services offered by the platform\",\r\n+\r\n+      response:\r\n+        \"Dashboard, Dynamic time table, Learning Networks, Little Masters, Video Based Dictionary, General Search.\",\r\n+    },\r\n+\r\n+    {\r\n+      utterance: \"explain platform services\",\r\n+\r\n+      response:\r\n+        \"Dashboard, Dynamic time table, Learning Networks, Little Masters, Video Based Dictionary, General Search.\",\r\n+    },\r\n+\r\n+    {\r\n+      utterance: \"Give me the Parent voice of Julia Harris\",\r\n+\r\n+      response:\r\n+        \"Brane education has helped my son a lot in his studies. He improved a lot in his studies and is now able to score good marks in his exams\",\r\n+    },\r\n+\r\n+    {\r\n+      utterance: \"Leaders Voice\",\r\n+\r\n+      response:\r\n+        \"This Voice-interactive AI Platform is a game Changer. It revolutionizes education.\",\r\n+    },\r\n+\r\n+    {\r\n+      utterance: \"Curriculum Supported by Brane Education\",\r\n+\r\n+      response:\r\n+        \"we support multiple Boards let me say few Telangana State Board Andhra Pradesh Board Maharashtra Board Assam Board\",\r\n+    },\r\n+\r\n+    {\r\n+      utterance: \"Boards supported by the platform\",\r\n+\r\n+      response:\r\n+        \"we support multiple Boards let me say few Telangana State Board Andhra Pradesh Board Maharashtra Board Assam Board\",\r\n+    },\r\n+\r\n+    {\r\n+      utterance: \"Curriculum\",\r\n+\r\n+      response:\r\n+        \"we support multiple Boards let me say few Telangana State Board Andhra Pradesh Board Maharashtra Board Assam Board\",\r\n+    },\r\n+\r\n+    {\r\n+      utterance: \"what is today's quote\",\r\n+\r\n+      response:\r\n+        \"Determination is the power that sees us through all our frustration and obstacles. It helps in building our willpower which is the very basis of success.\",\r\n+\r\n+      route: \"/childpage\",\r\n+    },\r\n+\r\n+    {\r\n+      utterance: \"Today's Inspirational quote\",\r\n+\r\n+      response:\r\n+        \"Determination is the power that sees us through all our frustration and obstacles. It helps in building our willpower which is the very basis of success.\",\r\n+\r\n+      route: \"/childpage\",\r\n+    },\r\n+\r\n+    {\r\n+      utterance: \"say me today's quote\",\r\n+\r\n+      response:\r\n+        \"Determination is the power that sees us through all our frustration and obstacles. It helps in building our willpower which is the very basis of success.\",\r\n+\r\n+      route: \"/childpage\",\r\n+    },\r\n+    {\r\n+      utterance: \"go back\",\r\n+      response: \"\",\r\n+      action: goBack, // Note the use of an action property\r\n+    },\r\n+    {\r\n+      utterance: \"go forward\",\r\n+      response: \"\",\r\n+      action: goForward,\r\n+    },\r\n+    // {\r\n+    //   utterance: \"play video\",\r\n+    //   // response: \"Playing video.\",\r\n+    //   action: playVideo,\r\n+    // },\r\n+    // {\r\n+    //   utterance: \"pause video\",\r\n+    //   // response: \"Pausing video.\",\r\n+    //   action: pauseVideo,\r\n+    // },\r\n+    // {\r\n+    //   utterance: \"start video\",\r\n+    //   // response: \"Playing video.\",\r\n+    //   action: playVideo,\r\n+    // },\r\n+    // {\r\n+    //   utterance: \"stop video\",\r\n+    //   // response: \"Playing video.\",\r\n+    //   action: pauseVideo,\r\n+    // },\r\n+    {\r\n+      utterance: \"scroll up\",\r\n+      // response: \"Scrolling up.\",\r\n+      action: scrollUp,\r\n+    },\r\n+    {\r\n+      utterance: \"scroll down\",\r\n+      // response: \"Scrolling down.\",\r\n+      action: scrollDown,\r\n+    },\r\n+    {\r\n+      utterance: \"go up\",\r\n+\r\n+      // response: \"Scrolling up.\",\r\n+      action: scrollUp,\r\n+    },\r\n+    {\r\n+      utterance: \"go down\",\r\n+      // response: \"Scrolling down.\",\r\n+      action: scrollDown,\r\n+    },\r\n+    {\r\n+      utterance: \"scroll to top\",\r\n+      action: scrollToTop,\r\n+    },\r\n+    {\r\n+      utterance: \"scroll to bottom\",\r\n+      action: scrollToBottom,\r\n+    },\r\n+    {\r\n+      utterance: \"brane stop\",\r\n+      action: stopListening,\r\n+    },\r\n+    {\r\n+      utterance: \"brane turn off\",\r\n+      action: stopListening,\r\n+    },\r\n+    {\r\n+      utterance: \"brane stop the bot\",\r\n+      action: stopListening,\r\n+    },\r\n+    {\r\n+      utterance: \"mute the video\",\r\n+      action: muteVideo,\r\n+    },\r\n+    {\r\n+      utterance: \"unmute the video\",\r\n+      action: unmuteVideo,\r\n+    },\r\n+    {\r\n+      utterance: \"stop the video sound\",\r\n+      action: muteVideo,\r\n+    },\r\n+    {\r\n+      utterance: \"play the video sound\",\r\n+      action: unmuteVideo,\r\n+    },\r\n+  ];\r\n+\r\n+  return (\r\n+    <div className=\"speech-bot-container\">\r\n+      <div\r\n+        className={`button-container ${\r\n+          isListening ? \"voicebotframeactive\" : \"voicebotframe\"\r\n+        }`}\r\n+      >\r\n+        {/* <button onClick={isListening ? stopListening : startListening}>\r\n+          {isListening ? \"Stop\" : \"Start\"} Animation\r\n+        </button> */}\r\n+        <img\r\n+          className=\"botimage\"\r\n+          src={chatbotimage}\r\n+          alt=\"\"\r\n+          onClick={isListening ? stopListening : startListening}\r\n+        />\r\n+      </div>\r\n+    </div>\r\n+  );\r\n+};\r\n+\r\n+export default VoiceBot;\r\n+\r\n+{\r\n+  /* // import React, { useState, useEffect, useRef } from \"react\";\r\n+// import { useNavigate, useLocation } from \"react-router-dom\";\r\n+// import Fuse from \"fuse.js\";\r\n+// import \"./VoiceBot.css\";\r\n+\r\n+// const VoiceBot = ({ videoRef }) => {\r\n+//   const [isListening, setIsListening] = useState(false);\r\n+//   const [isSpeaking, setIsSpeaking] = useState(false);\r\n+//   const recognition = useRef(null);\r\n+//   const speechSynthesis = useRef(window.speechSynthesis);\r\n+//   const [hasGreeted, setHasGreeted] = useState(false);\r\n+//   const navigate = useNavigate();\r\n+\r\n+//   useEffect(() => {\r\n+//     recognition.current = new window.webkitSpeechRecognition();\r\n+//     recognition.current.continuous = true;\r\n+//     recognition.current.interimResults = false;\r\n+//     recognition.current.onresult = onResult;\r\n+//     recognition.current.onend = onRecognitionEnd;\r\n+//     recognition.current.starting = false;\r\n+\r\n+//     // Simplified error handling, removed specific handling for 'no-speech'\r\n+//     recognition.current.onerror = (event) => {\r\n+//       console.error(\"Recognition error:\", event.error);\r\n+//       // Check if listening is true and the bot isn't speaking\r\n+//       if (isListening && !isSpeaking) {\r\n+//         // Restart recognition\r\n+//         restartRecognition();\r\n+//       }\r\n+//     };\r\n+\r\n+//     return () => {\r\n+//       if (recognition.current) {\r\n+//         recognition.current.abort();\r\n+//       }\r\n+//     };\r\n+//   }, []);\r\n+\r\n+//   useEffect(() => {\r\n+//     const checkRecognition = () => {\r\n+//       if (isListening && !isSpeaking && !recognition.current.starting) {\r\n+//         console.log(\"Restarting recognition because it's not active.\");\r\n+//         recognition.current.starting = true;\r\n+//         recognition.current.start();\r\n+//         console.log(\"Restarted recognition.\");\r\n+//       }\r\n+//     };\r\n+\r\n+//     const recognitionCheckInterval = setInterval(checkRecognition, 100); // Check every 1 second\r\n+\r\n+//     return () => {\r\n+//       clearInterval(recognitionCheckInterval);\r\n+//     };\r\n+//   }, [isListening, isSpeaking]);\r\n+\r\n+//   const restartRecognition = () => {\r\n+//     if (recognition.current.starting) {\r\n+//       console.log(\"Recognition is already starting or running.\");\r\n+//       return;\r\n+//     }\r\n+\r\n+//     recognition.current.abort(); // Stop any existing recognition process\r\n+//     recognition.current.starting = true;\r\n+//     recognition.current.start();\r\n+//     console.log(\"Recognition restarted.\");\r\n+//   };\r\n+\r\n+//   const historyStack = useRef([]);\r\n+\r\n+//   useEffect(() => {\r\n+//     return () => {\r\n+//       // Clean up the listener when the component unmounts\r\n+//       window.removeEventListener(\"popstate\", handlePopState);\r\n+//     };\r\n+//   }, []);\r\n+\r\n+//   const handlePopState = () => {\r\n+//     // This needs to handle both back and forward browser actions\r\n+//     // Use some logic to determine whether it's a back or forward action\r\n+//     // For simplicity, assume it's always back\r\n+//     historyStack.current.pop();\r\n+//     forwardStack.current.length = 0; // Clear forward stack on manual navigation\r\n+//   };\r\n+  \r\n+\r\n+//   // Add a new entry to the stack whenever navigate is called\r\n+//   const customNavigate = (to, options) => {\r\n+//     historyStack.current.push(to);\r\n+//     navigate(to, options);\r\n+//   };\r\n+\r\n+//   // Listen to popstate events to update the history stack\r\n+//   useEffect(() => {\r\n+//     window.addEventListener(\"popstate\", handlePopState);\r\n+//   }, []);\r\n+\r\n+//   const forwardStack = useRef([]);\r\n+\r\n+//   const goBack = () => {\r\n+//     if (window.history.state && window.history.state.idx > 0) {\r\n+//       window.history.back();\r\n+//       speak(\"Going back\");\r\n+//     } else {\r\n+//       speak(\"Can't go back any further.\");\r\n+//     }\r\n+//   };\r\n+\r\n+//   const goForward = () => {\r\n+//     if (window.history.state && window.history.state.idx < window.history.length - 1) {\r\n+//       window.history.forward();\r\n+//       speak(\"Going forward\");\r\n+//     } else {\r\n+//       speak(\"No forward history available.\");\r\n+//     }\r\n+//   };\r\n+\r\n+//   const playVideo = () => {\r\n+//     if (videoRef.current) {\r\n+//       videoRef.current.play();\r\n+//       speak(\"Playing video.\");\r\n+//     } else {\r\n+//       speak(\"No video to play.\");\r\n+//     }\r\n+//   };\r\n+\r\n+//   const pauseVideo = () => {\r\n+//     if (videoRef.current) {\r\n+//       videoRef.current.pause();\r\n+//       speak(\"Video paused.\");\r\n+//     } else {\r\n+//       speak(\"No video to pause.\");\r\n+//     }\r\n+//   };\r\n+\r\n+//   const scrollAmount = window.innerHeight * 0.82;\r\n+\r\n+//   const scrollUp = () => {\r\n+//     if (window.pageYOffset === 0) {\r\n+//       speak(\"Already at the top of the page.\");\r\n+//     } else {\r\n+//       window.scrollBy(0, -scrollAmount);\r\n+//       speak(\"Scrolled up.\");\r\n+//     }\r\n+//   };\r\n+\r\n+//   const scrollDown = () => {\r\n+//     const maxScrollTop =\r\n+//       document.documentElement.scrollHeight - window.innerHeight;\r\n+//     if (window.pageYOffset >= maxScrollTop) {\r\n+//       speak(\"Already at the bottom of the page.\");\r\n+//     } else {\r\n+//       window.scrollBy(0, scrollAmount);\r\n+//       speak(\"Scrolled down.\");\r\n+//     }\r\n+//   };\r\n+\r\n+//   const scrollToTop = () => {\r\n+//     if (window.pageYOffset === 0) {\r\n+//       speak(\"Already at the top of the page.\");\r\n+//     } else {\r\n+//       window.scrollTo(0, 0);\r\n+//       speak(\"Scrolled to the top of the page.\");\r\n+//     }\r\n+//   };\r\n+\r\n+//   const scrollToBottom = () => {\r\n+//     const maxScrollTop =\r\n+//       document.documentElement.scrollHeight - window.innerHeight;\r\n+//     if (window.pageYOffset >= maxScrollTop) {\r\n+//       speak(\"Already at the bottom of the page.\");\r\n+//     } else {\r\n+//       window.scrollTo(0, document.body.scrollHeight);\r\n+//       speak(\"Scrolled to the bottom of the page.\");\r\n+//     }\r\n+//   };\r\n+\r\n+//   const speak = (message) => {\r\n+//     console.log(\"speak function called with message:\", message);\r\n+//     const utterance = new SpeechSynthesisUtterance(message);\r\n+//     utterance.onend = () => {\r\n+//       setIsSpeaking(false);\r\n+//       console.log(\"Speaking ended.\");\r\n+//       if (isListening && !recognition.current.starting) {\r\n+//         console.log(\"Restarting recognition after speaking.\");\r\n+//         recognition.current.starting = true;\r\n+//         recognition.current.start();\r\n+//         console.log(\"Restarted recognition after speaking.\");\r\n+//       }\r\n+//     };\r\n+\r\n+//     setIsSpeaking(true);\r\n+//     console.log(\"Speaking started.\");\r\n+//     recognition.current.stop(); // Ensure to stop recognition before speaking\r\n+//     speechSynthesis.current.speak(utterance);\r\n+//   };\r\n+\r\n+//   const onResult = (event) => {\r\n+//     const resultIndex = event.resultIndex;\r\n+//     const transcript = event.results[resultIndex][0].transcript\r\n+//       .trim()\r\n+//       .toLowerCase();\r\n+\r\n+//     if (event.results[resultIndex].isFinal) {\r\n+//       console.log(`Recognized text: ${transcript}`);\r\n+//       if (transcript.includes(\"brain\")) {\r\n+//         console.log(\"Wake word heard, processing command...\");\r\n+//         handleCommandWithFuse(transcript.replace(\"brain\", \"\"));\r\n+//       }\r\n+//     }\r\n+//   };\r\n+\r\n+//   const onRecognitionEnd = () => {\r\n+//     recognition.current.starting = false;\r\n+//     if (isListening && !isSpeaking) {\r\n+//       restartRecognition();\r\n+//     }\r\n+//   };\r\n+\r\n+//   useEffect(() => {\r\n+//     if (isListening) {\r\n+//       if (!hasGreeted) {\r\n+//         speak(\"Hello, I'm Brane. How can I help you today?\");\r\n+//         setHasGreeted(true);\r\n+//       } else {\r\n+//         speak(\"Listening.\");\r\n+//       }\r\n+//     }\r\n+//   }, [isListening, hasGreeted]);\r\n+\r\n+\r\n+//   const startListening = () => {\r\n+//     if (!recognition.current.starting) {\r\n+//       setIsListening(true);\r\n+//       restartRecognition();\r\n+//     }\r\n+//   };\r\n+\r\n+//   const stopListening = () => {\r\n+//     setIsListening(false);\r\n+//     recognition.current.abort();\r\n+//     if (speechSynthesis.current.speaking) {\r\n+//       speechSynthesis.current.cancel();\r\n+//     }\r\n+//   };\r\n+\r\n+//   const handleCommandWithFuse = (command) => {\r\n+//     const fuse = new Fuse(commands, { keys: [\"utterance\"], threshold: 0.4 });\r\n+//     const results = fuse.search(command);\r\n+//     const foundCommand = results.length ? results[0].item : null;\r\n+\r\n+//     if (foundCommand) {\r\n+//       console.log(\"Command found:\", foundCommand.utterance);\r\n+\r\n+//       if (foundCommand.action) {\r\n+//         foundCommand.action();\r\n+//       } else if (foundCommand.route) {\r\n+//         navigate(foundCommand.route);\r\n+//       }\r\n+\r\n+//       // Speak after performing the action or navigation\r\n+//       speak(foundCommand.response);\r\n+//     } else {\r\n+//       console.log(\"No command found.\");\r\n+//       speak(\"I'm not sure how to respond to that.\");\r\n+//     }\r\n+//   };\r\n+\r\n+//   const commands = [\r\n+//     {\r\n+//       utterance: \"Hello who are you ?\",\r\n+\r\n+//       response:\r\n+//         \"Hi! This is Brane! your Voice bot from Brane Education How can I Assist you Today ?\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"Hello\",\r\n+\r\n+//       response: \"Hi! How can I assist you today?\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"hello\",\r\n+\r\n+//       response: \"Hi! How can I assist you today?\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"Hi.\",\r\n+\r\n+//       response: \"Hello! How can I assist you today?\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"Hey there\",\r\n+\r\n+//       response: \"Hi! How can I assist you today?\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"Good morning Brane.\",\r\n+\r\n+//       response: \"Hey Hiii! Good morning  ! How can I help you?\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"Good afternoon Brane.\",\r\n+\r\n+//       response: \"Hey Hiii! Good after noon ! How can I help you?\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"Good evening Brane.\",\r\n+\r\n+//       response: \"Hey Hiii! Good evening ! How can I help you?\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"can you please take me to login page\",\r\n+\r\n+//       route: \"/login\",\r\n+\r\n+//       response: \"Here's the Login Page, Please Login\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"please take me to login page\",\r\n+\r\n+//       route: \"/login\",\r\n+\r\n+//       response: \"Here's the Login Page, Please Login\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"Go to login page\",\r\n+\r\n+//       route: \"/login\",\r\n+\r\n+//       response: \"Here's the Login Page, Please Login\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"open login page\",\r\n+\r\n+//       route: \"/login\",\r\n+\r\n+//       response: \"Here's the Login Page, Please Login\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"can you please take me to signup page\",\r\n+\r\n+//       route: \"/signup\",\r\n+\r\n+//       response: \"Here's the signup page. Please proceed With Registration.\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"take me to signup page\",\r\n+\r\n+//       route: \"/signup\",\r\n+\r\n+//       response: \"Here's the signup page. Please proceed With Registration.\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"Go to signup page\",\r\n+\r\n+//       route: \"/signup\",\r\n+\r\n+//       response: \"Here's the signup page. Please proceed With Registration.\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"open signup page\",\r\n+\r\n+//       route: \"/signup\",\r\n+\r\n+//       response: \"Here's the signup page. Please proceed With Registration.\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"Go to face id\",\r\n+\r\n+//       route: \"/login/faceid\",\r\n+\r\n+//       response: \"Here's Face ID Login. Please proceed.\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"Go to face id login\",\r\n+\r\n+//       route: \"/login/faceid\",\r\n+\r\n+//       response: \"Here's Face ID Login. Please proceed.\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"login with face id\",\r\n+\r\n+//       route: \"/login/faceid\",\r\n+\r\n+//       response: \"Here's Face ID Login. Please proceed.\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"login with face\",\r\n+\r\n+//       route: \"/login/faceid\",\r\n+\r\n+//       response: \"Here's Face ID Login. Please proceed.\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"i want to login with face\",\r\n+\r\n+//       route: \"/login/faceid\",\r\n+\r\n+//       response: \"Here's Face ID Login. Please proceed.\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"login with voice\",\r\n+\r\n+//       route: \"/login/voiceid\",\r\n+\r\n+//       response: \"Here's Voice Login. Please proceed.\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"i want to login with voice\",\r\n+\r\n+//       route: \"/login/voiceid\",\r\n+\r\n+//       response: \"Here's Voice Login. Please proceed.\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"go to voice login\",\r\n+\r\n+//       route: \"/login/voiceid\",\r\n+\r\n+//       response: \"Here's Voice Login. Please proceed.\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"login with voice\",\r\n+\r\n+//       route: \"/login/voiceid\",\r\n+\r\n+//       response: \"Here's Voice Login. Please proceed.\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"login with mobile\",\r\n+\r\n+//       route: \"/login/mobile\",\r\n+\r\n+//       response: \"Here's Mobile Login. Please proceed.\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"i want to login with mobile\",\r\n+\r\n+//       route: \"/login/mobile\",\r\n+\r\n+//       response: \"Here's Mobile Login. Please proceed.\",\r\n+//     },\r\n+//     {\r\n+//       utterance: \"go to mobile login\",\r\n+\r\n+//       route: \"/login/mobile\",\r\n+\r\n+//       response: \"Here's Mobile Login. Please proceed.\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"what are platform features\",\r\n+\r\n+//       response:\r\n+//         \"Dashboard, Dynamic time table, Learning Networks, Little Masters, Video Based Dictionary, General Search.\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"Features of platform\",\r\n+\r\n+//       response:\r\n+//         \"Dashboard, Dynamic time table, Learning Networks, Little Masters, Video Based Dictionary, General Search.\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"What does the platform offer\",\r\n+\r\n+//       response:\r\n+//         \"Dashboard, Dynamic time table, Learning Networks, Little Masters, Video Based Dictionary, General Search.\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"Say me the features of platform\",\r\n+\r\n+//       response:\r\n+//         \"Dashboard, Dynamic time table, Learning Networks, Little Masters, Video Based Dictionary, General Search.\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"Say me the services of platform\",\r\n+\r\n+//       response:\r\n+//         \"Dashboard, Dynamic time table, Learning Networks, Little Masters, Video Based Dictionary, General Search.\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"tell me the services offered by the platform\",\r\n+\r\n+//       response:\r\n+//         \"Dashboard, Dynamic time table, Learning Networks, Little Masters, Video Based Dictionary, General Search.\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"explain platform services\",\r\n+\r\n+//       response:\r\n+//         \"Dashboard, Dynamic time table, Learning Networks, Little Masters, Video Based Dictionary, General Search.\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"Give me the Parent voice of Julia Harris\",\r\n+\r\n+//       response:\r\n+//         \"Brane education has helped my son a lot in his studies. He improved a lot in his studies and is now able to score good marks in his exams\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"Play today's motivational video\",\r\n+\r\n+//       response: \"I am playing the video\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"Play today's video\",\r\n+\r\n+//       response: \"I am playing Motivational video\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"Leaders Voice\",\r\n+\r\n+//       response:\r\n+//         \"This Voice-interactive AI Platform is a game Changer. It revolutionizes education.\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"Curriculum Supported by Brane Education\",\r\n+\r\n+//       response:\r\n+//         \"we support multiple Boards let me say few Telangana State Board Andhra Pradesh Board Maharashtra Board Assam Board\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"Boards supported by the platform\",\r\n+\r\n+//       response:\r\n+//         \"we support multiple Boards let me say few Telangana State Board Andhra Pradesh Board Maharashtra Board Assam Board\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"Curriculum\",\r\n+\r\n+//       response:\r\n+//         \"we support multiple Boards let me say few Telangana State Board Andhra Pradesh Board Maharashtra Board Assam Board\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"Go to landing page\",\r\n+\r\n+//       response: \"Okay, I am taking you to the landing page.\",\r\n+\r\n+//       route: \"/childpage\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"take me to landing page\",\r\n+\r\n+//       response: \"Okay, I am taking you to the landing page.\",\r\n+\r\n+//       route: \"/childpage\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"move to landing page\",\r\n+\r\n+//       response: \"Okay, I am taking you to the landing page.\",\r\n+\r\n+//       route: \"/childpage\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"roll back to landing page\",\r\n+\r\n+//       response: \"Okay, I am taking you to the landing page.\",\r\n+\r\n+//       route: \"/childpage\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"move to landing page\",\r\n+\r\n+//       response: \"Okay, I am taking you to the landing page.\",\r\n+\r\n+//       route: \"/childpage\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"what is today's quote\",\r\n+\r\n+//       response:\r\n+//         \"Determination is the power that sees us through all our frustration and obstacles. It helps in building our willpower which is the very basis of success.\",\r\n+\r\n+//       route: \"/childpage\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"Today's Inspirational quote\",\r\n+\r\n+//       response:\r\n+//         \"Determination is the power that sees us through all our frustration and obstacles. It helps in building our willpower which is the very basis of success.\",\r\n+\r\n+//       route: \"/childpage\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"say me today's quote\",\r\n+\r\n+//       response:\r\n+//         \"Determination is the power that sees us through all our frustration and obstacles. It helps in building our willpower which is the very basis of success.\",\r\n+\r\n+//       route: \"/childpage\",\r\n+//     },\r\n+//     {\r\n+//       utterance: \"go back\",\r\n+//       response: \"\",\r\n+//       action: goBack, // Note the use of an action property\r\n+//     },\r\n+//     {\r\n+//       utterance: \"go forward\",\r\n+//       response: \"\",\r\n+//       action: goForward,\r\n+//     },\r\n+//     {\r\n+//       utterance: \"play video\",\r\n+//       // response: \"Playing video.\",\r\n+//       action: playVideo,\r\n+//     },\r\n+//     {\r\n+//       utterance: \"pause video\",\r\n+//       // response: \"Pausing video.\",\r\n+//       action: pauseVideo,\r\n+//     },\r\n+//     {\r\n+//       utterance: \"start video\",\r\n+//       // response: \"Playing video.\",\r\n+//       action: playVideo,\r\n+//     },\r\n+//     {\r\n+//       utterance: \"stop video\",\r\n+//       // response: \"Playing video.\",\r\n+//       action: pauseVideo,\r\n+//     },\r\n+//     {\r\n+//       utterance: \"scroll up\",\r\n+//       // response: \"Scrolling up.\",\r\n+//       action: scrollUp,\r\n+//     },\r\n+//     {\r\n+//       utterance: \"scroll down\",\r\n+//       // response: \"Scrolling down.\",\r\n+//       action: scrollDown,\r\n+//     },\r\n+//     {\r\n+//       utterance: \"go up\",\r\n+\r\n+//       // response: \"Scrolling up.\",\r\n+//       action: scrollUp,\r\n+//     },\r\n+//     {\r\n+//       utterance: \"go down\",\r\n+//       // response: \"Scrolling down.\",\r\n+//       action: scrollDown,\r\n+//     },\r\n+//     {\r\n+//       utterance: \"scroll to top\",\r\n+//       action: scrollToTop,\r\n+//     },\r\n+//     {\r\n+//       utterance: \"scroll to bottom\",\r\n+//       action: scrollToBottom,\r\n+//     },\r\n+//     {\r\n+//       utterance: \"brane stop\",\r\n+//       action: stopListening,\r\n+//     },\r\n+//     {\r\n+//       utterance: \"brane turn off\",\r\n+//       action: stopListening,\r\n+//     },\r\n+//     {\r\n+//       utterance: \"brane stop the bot\",\r\n+//       action: stopListening,\r\n+//     },\r\n+//   ];\r\n+\r\n+//   return (\r\n+//     <div className=\"speech-bot-container\">\r\n+//       <div\r\n+//         className={`button-container ${\r\n+//           isListening ? \"voicebotframeactive\" : \"voicebotframe\"\r\n+//         }`}\r\n+//       >\r\n+//         <button onClick={isListening ? stopListening : startListening}>\r\n+//           {isListening ? \"Stop\" : \"Start\"} Animation\r\n+//         </button>\r\n+//         {/* <button onClick={toggleBotActive}>\r\n+//         {isBotActive ? 'Deactivate Bot' : 'Activate Bot'}\r\n+//       </button> \r\n+//       </div>\r\n+//     </div>\r\n+//   );\r\n+// };\r\n+\r\n+// export default VoiceBot; */\r\n+}\r\n+\r\n+//iska v1\r\n+\r\n+// import React, { useState, useEffect, useRef } from \"react\";\r\n+// import { useNavigate, useLocation } from \"react-router-dom\";\r\n+// import Fuse from \"fuse.js\";\r\n+// import \"./VoiceBot.css\";\r\n+\r\n+// const VoiceBot = ({ videoRef}) => {\r\n+//   const [isListening, setIsListening] = useState(false);\r\n+//   const [isSpeaking, setIsSpeaking] = useState(false);\r\n+//   const recognition = useRef(null);\r\n+//   const speechSynthesis = useRef(window.speechSynthesis);\r\n+//   const [hasGreeted, setHasGreeted] = useState(false);\r\n+//   const navigate = useNavigate();\r\n+\r\n+//  // Initialize speech recognition\r\n+//  useEffect(() => {\r\n+//   recognition.current = new window.webkitSpeechRecognition();\r\n+//   recognition.current.continuous = true;\r\n+//   recognition.current.interimResults = false;\r\n+//   recognition.current.onresult = onResult;\r\n+//   recognition.current.onend = onRecognitionEnd;\r\n+//   recognition.current.starting = false;\r\n+\r\n+//   recognition.current.onerror = (event) => {\r\n+//     console.error(\"Recognition error:\", event.error);\r\n+//     if (isListening && !isSpeaking) {\r\n+//       restartRecognition();\r\n+//     }\r\n+//   };\r\n+\r\n+//   return () => {\r\n+//     if (recognition.current) {\r\n+//       recognition.current.abort();\r\n+//     }\r\n+//   };\r\n+// }, []);\r\n+\r\n+//   // useEffect(() => {\r\n+//   //   const checkRecognition = () => {\r\n+//   //     if (isListening && !isSpeaking && !recognition.current.starting) {\r\n+//   //       console.log(\"Restarting recognition because it's not active.\");\r\n+//   //       recognition.current.starting = true;\r\n+//   //       recognition.current.start();\r\n+//   //       console.log(\"Restarted recognition.\");\r\n+//   //     }\r\n+//   //   };\r\n+\r\n+//   //   const recognitionCheckInterval = setInterval(checkRecognition, 100); // Check every .5 second\r\n+\r\n+//   //   return () => {\r\n+//   //     clearInterval(recognitionCheckInterval);\r\n+//   //   };\r\n+//   // }, [isListening, isSpeaking]);\r\n+\r\n+//   const historyStack = useRef([]);\r\n+\r\n+//   useEffect(() => {\r\n+//     return () => {\r\n+//       // Clean up the listener when the component unmounts\r\n+//       window.removeEventListener(\"popstate\", handlePopState);\r\n+//     };\r\n+//   }, []);\r\n+\r\n+//   const handlePopState = () => {\r\n+//     // This needs to handle both back and forward browser actions\r\n+//     // Use some logic to determine whether it's a back or forward action\r\n+//     // For simplicity, assume it's always back\r\n+//     historyStack.current.pop();\r\n+//     forwardStack.current.length = 0; // Clear forward stack on manual navigation\r\n+//   };\r\n+\r\n+//   // Add a new entry to the stack whenever navigate is called\r\n+//   const customNavigate = (to, options) => {\r\n+//     historyStack.current.push(to);\r\n+//     navigate(to, options);\r\n+//   };\r\n+\r\n+//   // Listen to popstate events to update the history stack\r\n+//   useEffect(() => {\r\n+//     window.addEventListener(\"popstate\", handlePopState);\r\n+//   }, []);\r\n+\r\n+//   const forwardStack = useRef([]);\r\n+\r\n+//   const goBack = () => {\r\n+//     if (window.history.state && window.history.state.idx > 0) {\r\n+//       window.history.back();\r\n+//       speak(\"Going back\");\r\n+//     } else {\r\n+//       speak(\"Can't go back any further.\");\r\n+//     }\r\n+//   };\r\n+\r\n+//   const goForward = () => {\r\n+//     if (window.history.state && window.history.state.idx < window.history.length - 1) {\r\n+//       window.history.forward();\r\n+//       speak(\"Going forward\");\r\n+//     } else {\r\n+//       speak(\"No forward history available.\");\r\n+//     }\r\n+//   };\r\n+\r\n+//   const playVideo = () => {\r\n+//     if (videoRef.current) {\r\n+//       videoRef.current.play();\r\n+//       speak(\"Playing video.\");\r\n+//     } else {\r\n+//       speak(\"No video to play.\");\r\n+//     }\r\n+//   };\r\n+\r\n+//   const pauseVideo = () => {\r\n+//     if (videoRef.current) {\r\n+//       videoRef.current.pause();\r\n+//       speak(\"Video paused.\");\r\n+//     } else {\r\n+//       speak(\"No video to pause.\");\r\n+//     }\r\n+//   };\r\n+\r\n+//   const scrollAmount = window.innerHeight * 0.82;\r\n+\r\n+//   const scrollUp = () => {\r\n+//     if (window.pageYOffset === 0) {\r\n+//       speak(\"Already at the top of the page.\");\r\n+//     } else {\r\n+//       window.scrollBy(0, -scrollAmount);\r\n+//       speak(\"Scrolled up.\");\r\n+//     }\r\n+//   };\r\n+\r\n+//   const scrollDown = () => {\r\n+//     const maxScrollTop =\r\n+//       document.documentElement.scrollHeight - window.innerHeight;\r\n+//     if (window.pageYOffset >= maxScrollTop) {\r\n+//       speak(\"Already at the bottom of the page.\");\r\n+//     } else {\r\n+//       window.scrollBy(0, scrollAmount);\r\n+//       speak(\"Scrolled down.\");\r\n+//     }\r\n+//   };\r\n+\r\n+//   const scrollToTop = () => {\r\n+//     if (window.pageYOffset === 0) {\r\n+//       speak(\"Already at the top of the page.\");\r\n+//     } else {\r\n+//       window.scrollTo(0, 0);\r\n+//       speak(\"Scrolled to the top of the page.\");\r\n+//     }\r\n+//   };\r\n+\r\n+//   const scrollToBottom = () => {\r\n+//     const maxScrollTop =\r\n+//       document.documentElement.scrollHeight - window.innerHeight;\r\n+//     if (window.pageYOffset >= maxScrollTop) {\r\n+//       speak(\"Already at the bottom of the page.\");\r\n+//     } else {\r\n+//       window.scrollTo(0, document.body.scrollHeight);\r\n+//       speak(\"Scrolled to the bottom of the page.\");\r\n+//     }\r\n+//   };\r\n+\r\n+//   const speak = (message) => {\r\n+//     const utterance = new SpeechSynthesisUtterance(message);\r\n+//     utterance.onend = () => {\r\n+//       setIsSpeaking(false);\r\n+//       // Restart recognition after speaking has ended\r\n+//       if (isListening) {\r\n+//         restartRecognition();\r\n+//       }\r\n+//     };\r\n+\r\n+//     setIsSpeaking(true);\r\n+//     // Stop recognition when the bot starts speaking\r\n+//     if (recognition.current) {\r\n+//       recognition.current.abort();\r\n+//     }\r\n+//     speechSynthesis.current.speak(utterance);\r\n+//   };\r\n+\r\n+//   const restartRecognition = () => {\r\n+//     // Check if recognition is not already started and if the bot is set to listen\r\n+//     if (recognition.current && !recognition.current.starting && isListening && !isSpeaking) {\r\n+//       // Only start recognition if it's not already active\r\n+//       if (recognition.current.state !== 'active') {\r\n+//         recognition.current.abort(); // Ensure any ongoing recognition is stopped\r\n+//         recognition.current.starting = true;\r\n+//         recognition.current.start();\r\n+//       }\r\n+//     }\r\n+//   };\r\n+\r\n+//     // Restart recognition when bot finishes speaking and isListening is true\r\n+//     useEffect(() => {\r\n+//       if (!isSpeaking && isListening) {\r\n+//         restartRecognition();\r\n+//       }\r\n+//     }, [isSpeaking, isListening]);\r\n+\r\n+//   const onResult = (event) => {\r\n+//     const resultIndex = event.resultIndex;\r\n+//     const transcript = event.results[resultIndex][0].transcript\r\n+//       .trim()\r\n+//       .toLowerCase();\r\n+\r\n+//     if (event.results[resultIndex].isFinal) {\r\n+//       console.log(`Recognized text: ${transcript}`);\r\n+//       if (transcript.includes(\"brain\")) {\r\n+//         console.log(\"Wake word heard, processing command...\");\r\n+//         handleCommandWithFuse(transcript.replace(\"brain\", \"\"));\r\n+//       }\r\n+//     }\r\n+//   };\r\n+\r\n+//   const onRecognitionEnd = () => {\r\n+//     recognition.current.starting = false;\r\n+//     if (isListening && !isSpeaking) {\r\n+//       restartRecognition();\r\n+//     }\r\n+//   };\r\n+\r\n+//   useEffect(() => {\r\n+//     if (isListening && !hasGreeted) {\r\n+//       speak(\"Hello, I'm Brane. How can I help you today?\");\r\n+//       setHasGreeted(true);\r\n+//     }\r\n+//   }, [isListening, hasGreeted]);\r\n+\r\n+// // Updated startListening function\r\n+// const startListening = () => {\r\n+//   setIsListening(true);\r\n+//   if (recognition.current && !recognition.current.starting) {\r\n+//     recognition.current.start();\r\n+//   }\r\n+// };\r\n+\r\n+// // Updated stopListening function\r\n+// const stopListening = () => {\r\n+//   setIsListening(false);\r\n+//   setIsSpeaking(false); // Reset speaking state\r\n+//   setHasGreeted(false); // Reset greeting state if needed\r\n+//   if (recognition.current) {\r\n+//     recognition.current.abort(); // Stop any ongoing speech recognition\r\n+//   }\r\n+//   if (speechSynthesis.current.speaking) {\r\n+//     speechSynthesis.current.cancel(); // Stop any ongoing speech synthesis\r\n+//   }\r\n+// };\r\n+\r\n+//   const handleCommandWithFuse = (command) => {\r\n+//     const fuse = new Fuse(commands, { keys: [\"utterance\"], threshold: 0.4 });\r\n+//     const results = fuse.search(command);\r\n+//     const foundCommand = results.length ? results[0].item : null;\r\n+\r\n+//     if (foundCommand) {\r\n+//       console.log(\"Command found:\", foundCommand.utterance);\r\n+\r\n+//       if (foundCommand.action) {\r\n+//         foundCommand.action();\r\n+//       } else if (foundCommand.route) {\r\n+//         navigate(foundCommand.route);\r\n+//       }\r\n+\r\n+//       // Speak after performing the action or navigation\r\n+//       speak(foundCommand.response);\r\n+//     } else {\r\n+//       console.log(\"No command found.\");\r\n+//       speak(\"I'm not sure how to respond to that.\");\r\n+//     }\r\n+//   };\r\n+\r\n+//   const commands = [\r\n+//     {\r\n+//       utterance: \"Hello who are you ?\",\r\n+\r\n+//       response:\r\n+//         \"Hi! This is Brane! your Voice bot from Brane Education How can I Assist you Today ?\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"Hello\",\r\n+\r\n+//       response: \"Hi! How can I assist you today?\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"hello\",\r\n+\r\n+//       response: \"Hi! How can I assist you today?\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"Hi.\",\r\n+\r\n+//       response: \"Hello! How can I assist you today?\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"Hey there\",\r\n+\r\n+//       response: \"Hi! How can I assist you today?\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"Good morning Brane.\",\r\n+\r\n+//       response: \"Hey Hiii! Good morning  ! How can I help you?\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"Good afternoon Brane.\",\r\n+\r\n+//       response: \"Hey Hiii! Good after noon ! How can I help you?\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"Good evening Brane.\",\r\n+\r\n+//       response: \"Hey Hiii! Good evening ! How can I help you?\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"can you please take me to login page\",\r\n+\r\n+//       route: \"/login\",\r\n+\r\n+//       response: \"Here's the Login Page, Please Login\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"please take me to login page\",\r\n+\r\n+//       route: \"/login\",\r\n+\r\n+//       response: \"Here's the Login Page, Please Login\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"Go to login page\",\r\n+\r\n+//       route: \"/login\",\r\n+\r\n+//       response: \"Here's the Login Page, Please Login\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"open login page\",\r\n+\r\n+//       route: \"/login\",\r\n+\r\n+//       response: \"Here's the Login Page, Please Login\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"can you please take me to signup page\",\r\n+\r\n+//       route: \"/signup\",\r\n+\r\n+//       response: \"Here's the signup page. Please proceed With Registration.\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"take me to signup page\",\r\n+\r\n+//       route: \"/signup\",\r\n+\r\n+//       response: \"Here's the signup page. Please proceed With Registration.\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"Go to signup page\",\r\n+\r\n+//       route: \"/signup\",\r\n+\r\n+//       response: \"Here's the signup page. Please proceed With Registration.\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"open signup page\",\r\n+\r\n+//       route: \"/signup\",\r\n+\r\n+//       response: \"Here's the signup page. Please proceed With Registration.\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"Go to face id\",\r\n+\r\n+//       route: \"/login/faceid\",\r\n+\r\n+//       response: \"Here's Face ID Login. Please proceed.\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"Go to face id login\",\r\n+\r\n+//       route: \"/login/faceid\",\r\n+\r\n+//       response: \"Here's Face ID Login. Please proceed.\",\r\n+//     },\r\n+//     {\r\n+//       utterance: \"Go to face login\",\r\n+\r\n+//       route: \"/login/faceid\",\r\n+\r\n+//       response: \"Here's Face ID Login. Please proceed.\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"login with face id\",\r\n+\r\n+//       route: \"/login/faceid\",\r\n+\r\n+//       response: \"Here's Face ID Login. Please proceed.\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"login with face\",\r\n+\r\n+//       route: \"/login/faceid\",\r\n+\r\n+//       response: \"Here's Face ID Login. Please proceed.\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"i want to login with face\",\r\n+\r\n+//       route: \"/login/faceid\",\r\n+\r\n+//       response: \"Here's Face ID Login. Please proceed.\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"login with voice\",\r\n+\r\n+//       route: \"/login/voiceid\",\r\n+\r\n+//       response: \"Here's Voice Login. Please proceed.\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"i want to login with voice\",\r\n+\r\n+//       route: \"/login/voiceid\",\r\n+\r\n+//       response: \"Here's Voice Login. Please proceed.\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"go to voice login\",\r\n+\r\n+//       route: \"/login/voiceid\",\r\n+\r\n+//       response: \"Here's Voice Login. Please proceed.\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"login with voice\",\r\n+\r\n+//       route: \"/login/voiceid\",\r\n+\r\n+//       response: \"Here's Voice Login. Please proceed.\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"login with mobile\",\r\n+\r\n+//       route: \"/login/mobile\",\r\n+\r\n+//       response: \"Here's Mobile Login. Please proceed.\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"i want to login with mobile\",\r\n+\r\n+//       route: \"/login/mobile\",\r\n+\r\n+//       response: \"Here's Mobile Login. Please proceed.\",\r\n+//     },\r\n+//     {\r\n+//       utterance: \"go to mobile login\",\r\n+\r\n+//       route: \"/login/mobile\",\r\n+\r\n+//       response: \"Here's Mobile Login. Please proceed.\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"what are platform features\",\r\n+\r\n+//       response:\r\n+//         \"Dashboard, Dynamic time table, Learning Networks, Little Masters, Video Based Dictionary, General Search.\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"Features of platform\",\r\n+\r\n+//       response:\r\n+//         \"Dashboard, Dynamic time table, Learning Networks, Little Masters, Video Based Dictionary, General Search.\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"What does the platform offer\",\r\n+\r\n+//       response:\r\n+//         \"Dashboard, Dynamic time table, Learning Networks, Little Masters, Video Based Dictionary, General Search.\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"Say me the features of platform\",\r\n+\r\n+//       response:\r\n+//         \"Dashboard, Dynamic time table, Learning Networks, Little Masters, Video Based Dictionary, General Search.\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"Say me the services of platform\",\r\n+\r\n+//       response:\r\n+//         \"Dashboard, Dynamic time table, Learning Networks, Little Masters, Video Based Dictionary, General Search.\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"tell me the services offered by the platform\",\r\n+\r\n+//       response:\r\n+//         \"Dashboard, Dynamic time table, Learning Networks, Little Masters, Video Based Dictionary, General Search.\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"explain platform services\",\r\n+\r\n+//       response:\r\n+//         \"Dashboard, Dynamic time table, Learning Networks, Little Masters, Video Based Dictionary, General Search.\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"Give me the Parent voice of Julia Harris\",\r\n+\r\n+//       response:\r\n+//         \"Brane education has helped my son a lot in his studies. He improved a lot in his studies and is now able to score good marks in his exams\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"Play today's motivational video\",\r\n+\r\n+//       response: \"I am playing the video\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"Play today's video\",\r\n+\r\n+//       response: \"I am playing Motivational video\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"Leaders Voice\",\r\n+\r\n+//       response:\r\n+//         \"This Voice-interactive AI Platform is a game Changer. It revolutionizes education.\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"Curriculum Supported by Brane Education\",\r\n+\r\n+//       response:\r\n+//         \"we support multiple Boards let me say few Telangana State Board Andhra Pradesh Board Maharashtra Board Assam Board\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"Boards supported by the platform\",\r\n+\r\n+//       response:\r\n+//         \"we support multiple Boards let me say few Telangana State Board Andhra Pradesh Board Maharashtra Board Assam Board\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"Curriculum\",\r\n+\r\n+//       response:\r\n+//         \"we support multiple Boards let me say few Telangana State Board Andhra Pradesh Board Maharashtra Board Assam Board\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"Go to landing page\",\r\n+\r\n+//       response: \"Okay, I am taking you to the landing page.\",\r\n+\r\n+//       route: \"/childpage\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"take me to landing page\",\r\n+\r\n+//       response: \"Okay, I am taking you to the landing page.\",\r\n+\r\n+//       route: \"/childpage\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"move to landing page\",\r\n+\r\n+//       response: \"Okay, I am taking you to the landing page.\",\r\n+\r\n+//       route: \"/childpage\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"roll back to landing page\",\r\n+\r\n+//       response: \"Okay, I am taking you to the landing page.\",\r\n+\r\n+//       route: \"/childpage\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"move to landing page\",\r\n+\r\n+//       response: \"Okay, I am taking you to the landing page.\",\r\n+\r\n+//       route: \"/childpage\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"what is today's quote\",\r\n+\r\n+//       response:\r\n+//         \"Determination is the power that sees us through all our frustration and obstacles. It helps in building our willpower which is the very basis of success.\",\r\n+\r\n+//       route: \"/childpage\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"Today's Inspirational quote\",\r\n+\r\n+//       response:\r\n+//         \"Determination is the power that sees us through all our frustration and obstacles. It helps in building our willpower which is the very basis of success.\",\r\n+\r\n+//       route: \"/childpage\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"say me today's quote\",\r\n+\r\n+//       response:\r\n+//         \"Determination is the power that sees us through all our frustration and obstacles. It helps in building our willpower which is the very basis of success.\",\r\n+\r\n+//       route: \"/childpage\",\r\n+//     },\r\n+//     {\r\n+//       utterance: \"go back\",\r\n+//       response: \"\",\r\n+//       action: goBack, // Note the use of an action property\r\n+//     },\r\n+//     {\r\n+//       utterance: \"go forward\",\r\n+//       response: \"\",\r\n+//       action: goForward,\r\n+//     },\r\n+//     {\r\n+//       utterance: \"play video\",\r\n+//       // response: \"Playing video.\",\r\n+//       action: playVideo,\r\n+//     },\r\n+//     {\r\n+//       utterance: \"pause video\",\r\n+//       // response: \"Pausing video.\",\r\n+//       action: pauseVideo,\r\n+//     },\r\n+//     {\r\n+//       utterance: \"start video\",\r\n+//       // response: \"Playing video.\",\r\n+//       action: playVideo,\r\n+//     },\r\n+//     {\r\n+//       utterance: \"stop video\",\r\n+//       // response: \"Playing video.\",\r\n+//       action: pauseVideo,\r\n+//     },\r\n+//     {\r\n+//       utterance: \"scroll up\",\r\n+//       // response: \"Scrolling up.\",\r\n+//       action: scrollUp,\r\n+//     },\r\n+//     {\r\n+//       utterance: \"scroll down\",\r\n+//       // response: \"Scrolling down.\",\r\n+//       action: scrollDown,\r\n+//     },\r\n+//     {\r\n+//       utterance: \"go up\",\r\n+\r\n+//       // response: \"Scrolling up.\",\r\n+//       action: scrollUp,\r\n+//     },\r\n+//     {\r\n+//       utterance: \"go down\",\r\n+//       // response: \"Scrolling down.\",\r\n+//       action: scrollDown,\r\n+//     },\r\n+//     {\r\n+//       utterance: \"scroll to top\",\r\n+//       action: scrollToTop,\r\n+//     },\r\n+//     {\r\n+//       utterance: \"scroll to bottom\",\r\n+//       action: scrollToBottom,\r\n+//     },\r\n+//     {\r\n+//       utterance: \"brane stop\",\r\n+//       action: stopListening,\r\n+//     },\r\n+//     {\r\n+//       utterance: \"brane turn off\",\r\n+//       action: stopListening,\r\n+//     },\r\n+//     {\r\n+//       utterance: \"brane stop the bot\",\r\n+//       action: stopListening,\r\n+//     },\r\n+//   ];\r\n+\r\n+//   return (\r\n+//     <div className=\"speech-bot-container\">\r\n+//       <div\r\n+//         className={`button-container ${\r\n+//           isListening ? \"voicebotframeactive\" : \"voicebotframe\"\r\n+//         }`}\r\n+//       >\r\n+//         <button onClick={isListening ? stopListening : startListening}>\r\n+//           {isListening ? \"Stop\" : \"Start\"} Animation\r\n+//         </button>\r\n+//         {/* <button onClick={toggleBotActive}>\r\n+//         {isBotActive ? 'Deactivate Bot' : 'Activate Bot'}\r\n+//       </button> */}\r\n+//       </div>\r\n+//     </div>\r\n+//   );\r\n+// };\r\n+\r\n+// export default VoiceBot;\r\n+\r\n+//Bot Video added but some start issues\r\n+\r\n+// import React, { useState, useEffect, useRef } from \"react\";\r\n+// import { useNavigate, useLocation } from \"react-router-dom\";\r\n+// import Fuse from \"fuse.js\";\r\n+// import \"./VoiceBot.css\";\r\n+\r\n+// const VoiceBot = ({ videoRef }) => {\r\n+//   const [isListening, setIsListening] = useState(false);\r\n+//   const [isSpeaking, setIsSpeaking] = useState(false);\r\n+//   const recognition = useRef(null);\r\n+//   const speechSynthesis = useRef(window.speechSynthesis);\r\n+//   const hasGreeted = useRef(false);\r\n+//   const restartRecognitionTimeout = useRef(null);\r\n+//   const navigate = useNavigate();\r\n+//   const location = useLocation();\r\n+//   const [isRecognitionActive, setIsRecognitionActive] = useState(false); // New state to track recognition status\r\n+\r\n+//   useEffect(() => {\r\n+//     recognition.current = new window.webkitSpeechRecognition();\r\n+//     recognition.current.continuous = true;\r\n+//     recognition.current.interimResults = false;\r\n+//     recognition.current.onresult = onResult;\r\n+//     recognition.current.onend = () => {\r\n+//       console.log(\"Recognition ended.\");\r\n+//       if (isListening) {\r\n+//         startListening();\r\n+//       }\r\n+//     };\r\n+//     recognition.current.onerror = (event) => {\r\n+//       console.error(\"Recognition error:\", event.error);\r\n+//     };\r\n+\r\n+//     return () => {\r\n+//       recognition.current.abort();\r\n+//     };\r\n+//   }, []);\r\n+\r\n+//   // Update useEffect for managing the recognition state based on isListening and isRecognitionActive\r\n+//   useEffect(() => {\r\n+//     if (isListening && !isRecognitionActive) {\r\n+//       startListening();\r\n+//     } else if (!isListening && isRecognitionActive) {\r\n+//       stopListening();\r\n+//     }\r\n+//   }, [isListening, isRecognitionActive]);\r\n+\r\n+//   const goBack = () => {\r\n+//     if (window.history.length > 1) {\r\n+//       navigate(-1);\r\n+//     } else {\r\n+//       speak(\"Can't go back any further.\");\r\n+//     }\r\n+//   };\r\n+\r\n+//   const goForward = () => {\r\n+//     // Unfortunately, there's no direct way to check if you can go forward in the history.\r\n+//     // You might need to manage this state manually based on user navigation.\r\n+//     navigate(1);\r\n+//   };\r\n+\r\n+//   const playVideo = () => {\r\n+//     if (videoRef.current && !videoRef.current.paused) {\r\n+//       speak(\"Video is already playing.\");\r\n+//     } else if (videoRef.current) {\r\n+//       videoRef.current.play();\r\n+//       speak(\"Playing video.\");\r\n+//     } else {\r\n+//       speak(\"No video to play.\");\r\n+//     }\r\n+//   };\r\n+\r\n+//   const pauseVideo = () => {\r\n+//     if (videoRef.current && videoRef.current.paused) {\r\n+//       speak(\"Video is already paused.\");\r\n+//     } else if (videoRef.current) {\r\n+//       videoRef.current.pause();\r\n+//       speak(\"Video paused.\");\r\n+//     } else {\r\n+//       speak(\"No video to pause.\");\r\n+//     }\r\n+//   };\r\n+\r\n+//   const scrollAmount = window.innerHeight * 0.82;\r\n+\r\n+//   const scrollUp = () => {\r\n+//     if (window.pageYOffset === 0) {\r\n+//       speak(\"Already at the top of the page.\");\r\n+//     } else {\r\n+//       window.scrollBy(0, -scrollAmount);\r\n+//       speak(\"Scrolled up.\");\r\n+//     }\r\n+//   };\r\n+\r\n+//   const scrollDown = () => {\r\n+//     const maxScrollTop =\r\n+//       document.documentElement.scrollHeight - window.innerHeight;\r\n+//     if (window.pageYOffset >= maxScrollTop) {\r\n+//       speak(\"Already at the bottom of the page.\");\r\n+//     } else {\r\n+//       window.scrollBy(0, scrollAmount);\r\n+//       speak(\"Scrolled down.\");\r\n+//     }\r\n+//   };\r\n+\r\n+//   const scrollToTop = () => {\r\n+//     if (window.pageYOffset === 0) {\r\n+//       speak(\"Already at the top of the page.\");\r\n+//     } else {\r\n+//       window.scrollTo(0, 0);\r\n+//       speak(\"Scrolled to the top of the page.\");\r\n+//     }\r\n+//   };\r\n+\r\n+//   const scrollToBottom = () => {\r\n+//     const maxScrollTop =\r\n+//       document.documentElement.scrollHeight - window.innerHeight;\r\n+//     if (window.pageYOffset >= maxScrollTop) {\r\n+//       speak(\"Already at the bottom of the page.\");\r\n+//     } else {\r\n+//       window.scrollTo(0, document.body.scrollHeight);\r\n+//       speak(\"Scrolled to the bottom of the page.\");\r\n+//     }\r\n+//   };\r\n+\r\n+//   // const speak = (message) => {\r\n+//   //   const utterance = new SpeechSynthesisUtterance(message);\r\n+//   //   utterance.onend = () => {\r\n+//   //     setIsSpeaking(false);\r\n+//   //     console.log(\"Speaking ended.\");\r\n+//   //     // Only restart recognition if we're still supposed to be listening\r\n+//   //     // if (isListening) {\r\n+//   //     //   if (restartRecognitionTimeout.current) {\r\n+//   //     //     clearTimeout(restartRecognitionTimeout.current);\r\n+//   //     //   }\r\n+//   //     //   restartRecognitionTimeout.current = setTimeout(() => {\r\n+//   //     //     console.log(\"Recognition restarted.\");\r\n+//   //     //     recognition.current.start();\r\n+//   //     //   }, 100); // Delay to prevent immediate restart\r\n+//   //     // }\r\n+//   //     if (isListening && !recognition.current.starting) { // Check the flag before restarting\r\n+//   //       recognition.current.starting = true; // Set the flag when starting recognition\r\n+//   //       recognition.current.start();\r\n+//   //     }\r\n+//   //   };\r\n+\r\n+//   //   setIsSpeaking(true);\r\n+//   //   console.log(\"Speaking started.\");\r\n+//   //   recognition.current.stop(); // Stop recognition when the bot starts speaking\r\n+//   //   speechSynthesis.current.speak(utterance);\r\n+//   // };\r\n+\r\n+//   const speak = (message) => {\r\n+//     console.log(\"speak function called with message:\", message);\r\n+//     const utterance = new SpeechSynthesisUtterance(message);\r\n+//     utterance.onend = () => {\r\n+//       setIsSpeaking(false);\r\n+//       console.log(\"Speaking ended.\");\r\n+//       // Directly handle the restart of recognition here if needed\r\n+//       if (isListening) {\r\n+//         startListening();\r\n+//       }\r\n+//     };\r\n+\r\n+//     setIsSpeaking(true);\r\n+//     console.log(\"Speaking started.\");\r\n+//     recognition.current.stop(); // Ensure to stop recognition before speaking\r\n+//     speechSynthesis.current.speak(utterance);\r\n+//   };\r\n+\r\n+//   const onResult = (event) => {\r\n+//     const resultIndex = event.resultIndex;\r\n+//     const transcript = event.results[resultIndex][0].transcript\r\n+//       .trim()\r\n+//       .toLowerCase();\r\n+\r\n+//     if (event.results[resultIndex].isFinal) {\r\n+//       console.log(`Recognized text: ${transcript}`);\r\n+//       if (transcript.includes(\"brain\")) {\r\n+//         console.log(\"Wake word heard, processing command...\");\r\n+//         handleCommandWithFuse(transcript.replace(\"brain\", \"\"));\r\n+//       }\r\n+//     }\r\n+//   };\r\n+\r\n+//   // const onRecognitionEnd = () => {\r\n+//   //   console.log(\"Recognition ended.\");\r\n+//   //   setIsRecognitionActive(false); // Update state when recognition ends\r\n+//   //   recognition.current.starting = false; // Reset the flag when recognition ends\r\n+//   //   // We now check if the recognition is already running before starting it again\r\n+//   //   if (isListening && !isSpeaking && !recognition.current?.starting) {\r\n+//   //     console.log(\"Restarting recognition.\");\r\n+//   //     recognition.current.start();\r\n+//   //   }\r\n+//   // };\r\n+\r\n+//   // useEffect(() => {\r\n+//   //   if (isListening && !hasGreeted.current) {\r\n+//   //     speak(\"Hello, I'm Brane. How can I assist you today?\");\r\n+//   //     hasGreeted.current = true;\r\n+//   //   } else if (isListening && !isSpeaking) {\r\n+//   //     recognition.current.start();\r\n+//   //   }\r\n+//   // }, [isListening, isSpeaking]);\r\n+\r\n+//   useEffect(() => {\r\n+//     if (isListening && !hasGreeted.current) {\r\n+//       speak(\"Hello, I'm Brane. How can I assist you today?\");\r\n+//       hasGreeted.current = true;\r\n+//     } else if (isListening && !isSpeaking && !recognition.current.starting) {\r\n+//       // Check the flag before starting\r\n+//       recognition.current.starting = true; // Set the flag when starting recognition\r\n+//       recognition.current.start();\r\n+//     }\r\n+//   }, [isListening, isSpeaking]);\r\n+\r\n+//   // const startListening = () => {\r\n+//   //   console.log(\"Attempting to start listening.\");\r\n+//   //   if (recognition.current && !recognition.current.starting) {\r\n+//   //     setIsListening(true);\r\n+//   //     recognition.current.starting = true; // Set the flag when starting recognition\r\n+//   //     recognition.current.start();\r\n+//   //     console.log(\"Listening started.\");\r\n+//   //   }\r\n+//   // };\r\n+\r\n+//   // const stopListening = () => {\r\n+//   //   console.log(\"Stopping listening.\");\r\n+\r\n+//   //   setIsListening(false);\r\n+//   //   recognition.current.stop();\r\n+//   //   if (speechSynthesis.current.speaking) {\r\n+//   //     speechSynthesis.current.cancel();\r\n+//   //   }\r\n+//   //   if (restartRecognitionTimeout.current) {\r\n+//   //     clearTimeout(restartRecognitionTimeout.current);\r\n+//   //   }\r\n+//   //   console.log(\"Listening stopped.\");\r\n+//   // };\r\n+//   // Handle start and stop listening logic\r\n+//   const startListening = () => {\r\n+//     console.log(\"Attempting to start listening.\");\r\n+//     if (!recognition.current.starting) {\r\n+//       setIsListening(true);\r\n+//       recognition.current.starting = true;\r\n+//       recognition.current.start();\r\n+//       console.log(\"Listening started.\");\r\n+//     } else {\r\n+//       console.log(\"Recognition already active.\");\r\n+//     }\r\n+//   };\r\n+\r\n+//   const stopListening = () => {\r\n+//     console.log(\"Stopping listening.\");\r\n+//     if (recognition.current.starting) {\r\n+//       setIsListening(false);\r\n+//       recognition.current.starting = false;\r\n+//       recognition.current.stop();\r\n+//       console.log(\"Listening stopped.\");\r\n+//     } else {\r\n+//       console.log(\"Recognition already inactive.\");\r\n+//     }\r\n+//   };\r\n+\r\n+//   // const handleCommandWithFuse = (command) => {\r\n+//   //   const fuse = new Fuse(commands, { keys: [\"utterance\"], threshold: 0.4 });\r\n+//   //   const results = fuse.search(command);\r\n+//   //   const foundCommand = results.length ? results[0].item : null;\r\n+\r\n+//   //   if (foundCommand) {\r\n+//   //     console.log(\"Command found:\", foundCommand.utterance);\r\n+//   //     speak(foundCommand.response);\r\n+//   //     if (foundCommand.route) {\r\n+//   //       navigate(foundCommand.route); // Navigate to the route specified in the command\r\n+//   //     }\r\n+//   //   } else {\r\n+//   //     console.log(\"No command found.\");\r\n+//   //     speak(\"I'm not sure how to respond to that.\");\r\n+//   //   }\r\n+//   // };\r\n+\r\n+//   const handleCommandWithFuse = (command) => {\r\n+//     const fuse = new Fuse(commands, { keys: [\"utterance\"], threshold: 0.4 });\r\n+//     const results = fuse.search(command);\r\n+//     const foundCommand = results.length ? results[0].item : null;\r\n+\r\n+//     if (foundCommand) {\r\n+//       console.log(\"Command found:\", foundCommand.utterance);\r\n+\r\n+//       if (foundCommand.route) {\r\n+//         if (location.pathname !== foundCommand.route) {\r\n+//           navigate(foundCommand.route);\r\n+//           speak(\r\n+//             `Navigating to ${\r\n+//               foundCommand.routeDescription || \"requested page\"\r\n+//             }.`\r\n+//           );\r\n+//         } else {\r\n+//           speak(\r\n+//             `You are already on the ${\r\n+//               foundCommand.routeDescription || \"requested page\"\r\n+//             }.`\r\n+//           );\r\n+//         }\r\n+//       } else if (foundCommand.action) {\r\n+//         foundCommand.action();\r\n+//       }\r\n+\r\n+//       if (foundCommand.response) {\r\n+//         speak(foundCommand.response);\r\n+//       }\r\n+//     } else {\r\n+//       console.log(\"No command found.\");\r\n+//       speak(\"I'm not sure how to respond to that.\");\r\n+//     }\r\n+//   };\r\n+\r\n+//   const commands = [\r\n+//     {\r\n+//       utterance: \"Hello who are you ?\",\r\n+\r\n+//       response:\r\n+//         \"Hi! This is Brane! your Voice bot from Brane Education How can I Assist you Today ?\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"Hello\",\r\n+\r\n+//       response: \"Hi! How can I assist you today?\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"hello\",\r\n+\r\n+//       response: \"Hi! How can I assist you today?\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"Hi.\",\r\n+\r\n+//       response: \"Hello! How can I assist you today?\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"Hey there\",\r\n+\r\n+//       response: \"Hi! How can I assist you today?\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"Good morning Brane.\",\r\n+\r\n+//       response: \"Hey Hiii! Good morning  ! How can I help you?\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"Good afternoon Brane.\",\r\n+\r\n+//       response: \"Hey Hiii! Good after noon ! How can I help you?\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"Good evening Brane.\",\r\n+\r\n+//       response: \"Hey Hiii! Good evening ! How can I help you?\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"can you please take me to login page\",\r\n+//       route: \"/login\",\r\n+//       routeDescription: \"login page\",\r\n+//       response: \"Navigating to the login page.\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"go to login page\",\r\n+//       route: \"/login\",\r\n+//       routeDescription: \"login page\",\r\n+//       response: \"Navigating to the login page.\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"please take me to login page\",\r\n+//       route: \"/login\",\r\n+//       routeDescription: \"login page\",\r\n+//       response: \"Navigating to the login page.\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"Go to login page\",\r\n+//       route: \"/login\",\r\n+//       routeDescription: \"login page\",\r\n+//       response: \"Navigating to the login page.\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"open login page\",\r\n+//       route: \"/login\",\r\n+//       routeDescription: \"login page\",\r\n+//       response: \"Navigating to the login page.\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"can you please take me to signup page\",\r\n+//       route: \"/signup\",\r\n+//       routeDescription: \"signup page\",\r\n+//       response: \"Navigating to the signup page.\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"take me to signup page\",\r\n+//       route: \"/signup\",\r\n+//       routeDescription: \"signup page\",\r\n+//       response: \"Navigating to the signup page.\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"Go to signup page\",\r\n+//       route: \"/signup\",\r\n+//       routeDescription: \"signup page\",\r\n+//       response: \"Navigating to the signup page.\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"open signup page\",\r\n+//       route: \"/signup\",\r\n+//       routeDescription: \"signup page\",\r\n+//       response: \"Navigating to the signup page.\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"what are platform features\",\r\n+\r\n+//       response:\r\n+//         \"Dashboard, Dynamic time table, Learning Networks, Little Masters, Video Based Dictionary, General Search.\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"Features of platform\",\r\n+\r\n+//       response:\r\n+//         \"Dashboard, Dynamic time table, Learning Networks, Little Masters, Video Based Dictionary, General Search.\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"What does the platform offer\",\r\n+\r\n+//       response:\r\n+//         \"Dashboard, Dynamic time table, Learning Networks, Little Masters, Video Based Dictionary, General Search.\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"Say me the features of platform\",\r\n+\r\n+//       response:\r\n+//         \"Dashboard, Dynamic time table, Learning Networks, Little Masters, Video Based Dictionary, General Search.\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"Say me the services of platform\",\r\n+\r\n+//       response:\r\n+//         \"Dashboard, Dynamic time table, Learning Networks, Little Masters, Video Based Dictionary, General Search.\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"tell me the services offered by the platform\",\r\n+\r\n+//       response:\r\n+//         \"Dashboard, Dynamic time table, Learning Networks, Little Masters, Video Based Dictionary, General Search.\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"explain platform services\",\r\n+\r\n+//       response:\r\n+//         \"Dashboard, Dynamic time table, Learning Networks, Little Masters, Video Based Dictionary, General Search.\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"Give me the Parent voice of Julia Harris\",\r\n+\r\n+//       response:\r\n+//         \"Brane education has helped my son a lot in his studies. He improved a lot in his studies and is now able to score good marks in his exams\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"Play today's motivational video\",\r\n+\r\n+//       response: \"I am playing the video\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"Play today's video\",\r\n+\r\n+//       response: \"I am playing Motivational video\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"Leaders Voice\",\r\n+\r\n+//       response:\r\n+//         \"This Voice-interactive AI Platform is a game Changer. It revolutionizes education.\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"Curriculum Supported by Brane Education\",\r\n+\r\n+//       response:\r\n+//         \"we support multiple Boards let me say few Telangana State Board Andhra Pradesh Board Maharashtra Board Assam Board\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"Boards supported by the platform\",\r\n+\r\n+//       response:\r\n+//         \"we support multiple Boards let me say few Telangana State Board Andhra Pradesh Board Maharashtra Board Assam Board\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"Curriculum\",\r\n+\r\n+//       response:\r\n+//         \"we support multiple Boards let me say few Telangana State Board Andhra Pradesh Board Maharashtra Board Assam Board\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"Go to landing page\",\r\n+\r\n+//       response: \"Okay, I am taking you to the landing page.\",\r\n+\r\n+//       route: \"/childpage\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"take me to landing page\",\r\n+\r\n+//       response: \"Okay, I am taking you to the landing page.\",\r\n+\r\n+//       route: \"/childpage\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"move to landing page\",\r\n+\r\n+//       response: \"Okay, I am taking you to the landing page.\",\r\n+\r\n+//       route: \"/childpage\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"roll back to landing page\",\r\n+\r\n+//       response: \"Okay, I am taking you to the landing page.\",\r\n+\r\n+//       route: \"/childpage\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"move to landing page\",\r\n+\r\n+//       response: \"Okay, I am taking you to the landing page.\",\r\n+\r\n+//       route: \"/childpage\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"what is today's quote\",\r\n+\r\n+//       response:\r\n+//         \"Determination is the power that sees us through all our frustration and obstacles. It helps in building our willpower which is the very basis of success.\",\r\n+\r\n+//       // route: \"/childpage\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"Today's Inspirational quote\",\r\n+\r\n+//       response:\r\n+//         \"Determination is the power that sees us through all our frustration and obstacles. It helps in building our willpower which is the very basis of success.\",\r\n+\r\n+//       // route: \"/childpage\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"say me today's quote\",\r\n+\r\n+//       response:\r\n+//         \"Determination is the power that sees us through all our frustration and obstacles. It helps in building our willpower which is the very basis of success.\",\r\n+\r\n+//       // route: \"/childpage\",\r\n+//     },\r\n+//     {\r\n+//       utterance: \"go back\",\r\n+//       response: \"Going back.\",\r\n+//       action: goBack, // Note the use of an action property\r\n+//     },\r\n+//     {\r\n+//       utterance: \"go forward\",\r\n+//       response: \"Going forward.\",\r\n+//       action: goForward,\r\n+//     },\r\n+//     {\r\n+//       utterance: \"play video\",\r\n+//       // response: \"Playing video.\",\r\n+//       action: playVideo,\r\n+//     },\r\n+//     {\r\n+//       utterance: \"pause video\",\r\n+//       // response: \"Pausing video.\",\r\n+//       action: pauseVideo,\r\n+//     },\r\n+//     {\r\n+//       utterance: \"start video\",\r\n+//       // response: \"Playing video.\",\r\n+//       action: playVideo,\r\n+//     },\r\n+//     {\r\n+//       utterance: \"stop video\",\r\n+//       // response: \"Playing video.\",\r\n+//       action: pauseVideo,\r\n+//     },\r\n+//     {\r\n+//       utterance: \"scroll up\",\r\n+//       // response: \"Scrolling up.\",\r\n+//       action: scrollUp,\r\n+//     },\r\n+//     {\r\n+//       utterance: \"scroll down\",\r\n+//       // response: \"Scrolling down.\",\r\n+//       action: scrollDown,\r\n+//     },\r\n+//     {\r\n+//       utterance: \"go up\",\r\n+\r\n+//       // response: \"Scrolling up.\",\r\n+//       action: scrollUp,\r\n+//     },\r\n+//     {\r\n+//       utterance: \"go down\",\r\n+//       // response: \"Scrolling down.\",\r\n+//       action: scrollDown,\r\n+//     },\r\n+//     {\r\n+//       utterance: \"scroll to top\",\r\n+//       action: scrollToTop,\r\n+//     },\r\n+//     {\r\n+//       utterance: \"scroll to bottom\",\r\n+//       action: scrollToBottom,\r\n+//     },\r\n+//   ];\r\n+//   return (\r\n+//     <div className=\"speech-bot-container\">\r\n+//       <div\r\n+//         className={`button-container ${\r\n+//           isListening ? \"voicebotframeactive\" : \"voicebotframe\"\r\n+//         }`}\r\n+//       >\r\n+//         <div onClick={isListening ? stopListening : startListening}>\r\n+//           <iframe\r\n+//             src={\r\n+//               isListening\r\n+//                 ? \"https://lottie.host/?file=a89aca3f-5407-4052-82c3-2048afca7a9f/NpCdWzLSKD.json\"\r\n+//                 : \"https://lottie.host/?file=d2b6cc0e-fe95-4847-85b5-35365fca7e00/vTudpCuPZq.json\"\r\n+//             }\r\n+//             width=\"120\" // Set your desired width\r\n+//             height=\"120\" // Set your desired height\r\n+//             title={isListening ? \"Stop Animation\" : \"Start Animation\"}\r\n+//             className={isListening ? \"voicebotframeactive\" : \"voicebotframe\"}\r\n+//           ></iframe>\r\n+//           {isListening ? (\r\n+//             <div className=\"overlay\" onClick={stopListening}></div>\r\n+//           ) : (\r\n+//             <div className=\"overlay\" onClick={startListening}></div>\r\n+//           )}\r\n+//         </div>\r\n+//       </div>\r\n+//     </div>\r\n+//   );\r\n+// };\r\n+\r\n+// export default VoiceBot;\r\n+\r\n+// All functionalities but messed up\r\n+\r\n+// import React, { useState, useEffect, useRef } from \"react\";\r\n+// import { useNavigate, useLocation } from \"react-router-dom\";\r\n+// import Fuse from \"fuse.js\";\r\n+// import \"./VoiceBot.css\";\r\n+\r\n+// const VoiceBot = ({ videoRef, takeTestRef, goBackRef }) => {\r\n+//   const [isListening, setIsListening] = useState(false);\r\n+//   const [isSpeaking, setIsSpeaking] = useState(false);\r\n+//   const recognition = useRef(null);\r\n+//   const speechSynthesis = useRef(window.speechSynthesis);\r\n+//   const hasGreeted = useRef(false);\r\n+//   const navigate = useNavigate();\r\n+//   const location = useLocation();\r\n+//   const isRecognitionActive = useRef(false);\r\n+\r\n+//   useEffect(() => {\r\n+//     recognition.current = new window.webkitSpeechRecognition();\r\n+//     recognition.current.continuous = true;\r\n+//     recognition.current.interimResults = false;\r\n+//     recognition.current.onresult = onResult;\r\n+//     recognition.current.onend = onRecognitionEnd;\r\n+\r\n+//     return () => {\r\n+//       if (recognition.current) {\r\n+//         recognition.current.abort();\r\n+//       }\r\n+//     };\r\n+//   }, [location.pathname]);\r\n+\r\n+//   const onResult = (event) => {\r\n+//     const resultIndex = event.resultIndex;\r\n+//     const transcript = event.results[resultIndex][0].transcript\r\n+//       .trim()\r\n+//       .toLowerCase();\r\n+\r\n+//     if (event.results[resultIndex].isFinal) {\r\n+//       console.log(`Recognized text: ${transcript}`);\r\n+//       if (transcript.includes(\"brain\")) {\r\n+//         console.log(\"Wake word heard, processing command...\");\r\n+//         handleCommandWithFuse(transcript.replace(\"brain\", \"\"));\r\n+//       }\r\n+//     }\r\n+//   };\r\n+\r\n+//   const startListening = () => {\r\n+//     if (!isRecognitionActive.current) {\r\n+//       setIsListening(true);\r\n+//       recognition.current.start();\r\n+//       isRecognitionActive.current = true;\r\n+//     }\r\n+//   };\r\n+\r\n+//   const stopListening = () => {\r\n+//     if (isRecognitionActive.current) {\r\n+//       setIsListening(false);\r\n+//       recognition.current.stop();\r\n+//       isRecognitionActive.current = false;\r\n+//     }\r\n+//   };\r\n+\r\n+//   const onRecognitionEnd = () => {\r\n+//     isRecognitionActive.current = false;\r\n+//     if (isListening) {\r\n+//       startListening();\r\n+//     }\r\n+//   };\r\n+\r\n+//   const speak = (message) => {\r\n+//     const utterance = new SpeechSynthesisUtterance(message);\r\n+//     utterance.onend = () => {\r\n+//       setIsSpeaking(false);\r\n+//       if (isListening && !isRecognitionActive.current) {\r\n+//         startListening();\r\n+//       }\r\n+//     };\r\n+\r\n+//     setIsSpeaking(true);\r\n+//     if (isRecognitionActive.current) {\r\n+//       stopListening(); // Adjusted to use stopListening\r\n+//     }\r\n+//     speechSynthesis.current.speak(utterance);\r\n+//   };\r\n+\r\n+//   useEffect(() => {\r\n+//     if (isListening && !hasGreeted.current) {\r\n+//       speak(\"Hello, I'm Brane. How can I assist you today?\");\r\n+//       hasGreeted.current = true;\r\n+//     }\r\n+//   }, [isListening]);\r\n+\r\n+//   const goBack = () => {\r\n+//     if (window.history.length > 1) {\r\n+//       navigate(-1);\r\n+//     } else {\r\n+//       speak(\"Can't go back any further.\");\r\n+//     }\r\n+//   };\r\n+\r\n+//   const goForward = () => {\r\n+//     // Unfortunately, there's no direct way to check if you can go forward in the history.\r\n+//     // You might need to manage this state manually based on user navigation.\r\n+//     navigate(1);\r\n+//   };\r\n+\r\n+//   const playVideo = () => {\r\n+//     if (videoRef.current && !videoRef.current.paused) {\r\n+//       speak(\"Video is already playing.\");\r\n+//     } else if (videoRef.current) {\r\n+//       videoRef.current.play();\r\n+//       speak(\"Playing video.\");\r\n+//     } else {\r\n+//       speak(\"No video to play.\");\r\n+//     }\r\n+//   };\r\n+\r\n+//   const pauseVideo = () => {\r\n+//     if (videoRef.current && videoRef.current.paused) {\r\n+//       speak(\"Video is already paused.\");\r\n+//     } else if (videoRef.current) {\r\n+//       videoRef.current.pause();\r\n+//       speak(\"Video paused.\");\r\n+//     } else {\r\n+//       speak(\"No video to pause.\");\r\n+//     }\r\n+//   };\r\n+\r\n+//   const scrollAmount = window.innerHeight * 0.82;\r\n+\r\n+//   const scrollUp = () => {\r\n+//     if (window.pageYOffset === 0) {\r\n+//       speak(\"Already at the top of the page.\");\r\n+//     } else {\r\n+//       window.scrollBy(0, -scrollAmount);\r\n+//       speak(\"Scrolled up.\");\r\n+//     }\r\n+//   };\r\n+\r\n+//   const scrollDown = () => {\r\n+//     const maxScrollTop =\r\n+//       document.documentElement.scrollHeight - window.innerHeight;\r\n+//     if (window.pageYOffset >= maxScrollTop) {\r\n+//       speak(\"Already at the bottom of the page.\");\r\n+//     } else {\r\n+//       window.scrollBy(0, scrollAmount);\r\n+//       speak(\"Scrolled down.\");\r\n+//     }\r\n+//   };\r\n+\r\n+//   const scrollToTop = () => {\r\n+//     if (window.pageYOffset === 0) {\r\n+//       speak(\"Already at the top of the page.\");\r\n+//     } else {\r\n+//       window.scrollTo(0, 0);\r\n+//       speak(\"Scrolled to the top of the page.\");\r\n+//     }\r\n+//   };\r\n+\r\n+//   const scrollToBottom = () => {\r\n+//     const maxScrollTop =\r\n+//       document.documentElement.scrollHeight - window.innerHeight;\r\n+//     if (window.pageYOffset >= maxScrollTop) {\r\n+//       speak(\"Already at the bottom of the page.\");\r\n+//     } else {\r\n+//       window.scrollTo(0, document.body.scrollHeight);\r\n+//       speak(\"Scrolled to the bottom of the page.\");\r\n+//     }\r\n+//   };\r\n+\r\n+//   // const speak = (message) => {\r\n+//   //   const utterance = new SpeechSynthesisUtterance(message);\r\n+//   //   utterance.onend = () => {\r\n+//   //     setIsSpeaking(false);\r\n+//   //     console.log(\"Speaking ended.\");\r\n+//   //     // Only restart recognition if we're still supposed to be listening\r\n+//   //     // if (isListening) {\r\n+//   //     //   if (restartRecognitionTimeout.current) {\r\n+//   //     //     clearTimeout(restartRecognitionTimeout.current);\r\n+//   //     //   }\r\n+//   //     //   restartRecognitionTimeout.current = setTimeout(() => {\r\n+//   //     //     console.log(\"Recognition restarted.\");\r\n+//   //     //     recognition.current.start();\r\n+//   //     //   }, 100); // Delay to prevent immediate restart\r\n+//   //     // }\r\n+//   //     if (isListening && !recognition.current.starting) { // Check the flag before restarting\r\n+//   //       recognition.current.starting = true; // Set the flag when starting recognition\r\n+//   //       recognition.current.start();\r\n+//   //     }\r\n+//   //   };\r\n+\r\n+//   //   setIsSpeaking(true);\r\n+//   //   console.log(\"Speaking started.\");\r\n+//   //   recognition.current.stop(); // Stop recognition when the bot starts speaking\r\n+//   //   speechSynthesis.current.speak(utterance);\r\n+//   // };\r\n+\r\n+//   // const onRecognitionEnd = () => {\r\n+//   //   console.log(\"Recognition ended.\");\r\n+//   //   setIsRecognitionActive(false); // Update state when recognition ends\r\n+//   //   recognition.current.starting = false; // Reset the flag when recognition ends\r\n+//   //   // We now check if the recognition is already running before starting it again\r\n+//   //   if (isListening && !isSpeaking && !recognition.current?.starting) {\r\n+//   //     console.log(\"Restarting recognition.\");\r\n+//   //     recognition.current.start();\r\n+//   //   }\r\n+//   // };\r\n+\r\n+//   // useEffect(() => {\r\n+//   //   if (isListening && !hasGreeted.current) {\r\n+//   //     speak(\"Hello, I'm Brane. How can I assist you today?\");\r\n+//   //     hasGreeted.current = true;\r\n+//   //   } else if (isListening && !isSpeaking) {\r\n+//   //     recognition.current.start();\r\n+//   //   }\r\n+//   // }, [isListening, isSpeaking]);\r\n+\r\n+//   // const startListening = () => {\r\n+//   //   console.log(\"Attempting to start listening.\");\r\n+//   //   if (recognition.current && !recognition.current.starting) {\r\n+//   //     setIsListening(true);\r\n+//   //     recognition.current.starting = true; // Set the flag when starting recognition\r\n+//   //     recognition.current.start();\r\n+//   //     console.log(\"Listening started.\");\r\n+//   //   }\r\n+//   // };\r\n+\r\n+//   // const stopListening = () => {\r\n+//   //   console.log(\"Stopping listening.\");\r\n+\r\n+//   //   setIsListening(false);\r\n+//   //   recognition.current.stop();\r\n+//   //   if (speechSynthesis.current.speaking) {\r\n+//   //     speechSynthesis.current.cancel();\r\n+//   //   }\r\n+//   //   if (restartRecognitionTimeout.current) {\r\n+//   //     clearTimeout(restartRecognitionTimeout.current);\r\n+//   //   }\r\n+//   //   console.log(\"Listening stopped.\");\r\n+//   // };\r\n+//   // Handle start and stop listening logic\r\n+\r\n+//   useEffect(() => {\r\n+//     if (isListening && !hasGreeted.current) {\r\n+//       speak(\"Hello, I'm Brane. How can I assist you today?\");\r\n+//       hasGreeted.current = true;\r\n+//     }\r\n+//   }, [isListening]);\r\n+\r\n+//   // const handleCommandWithFuse = (command) => {\r\n+//   //   const fuse = new Fuse(commands, { keys: [\"utterance\"], threshold: 0.4 });\r\n+//   //   const results = fuse.search(command);\r\n+//   //   const foundCommand = results.length ? results[0].item : null;\r\n+\r\n+//   //   if (foundCommand) {\r\n+//   //     console.log(\"Command found:\", foundCommand.utterance);\r\n+//   //     speak(foundCommand.response);\r\n+//   //     if (foundCommand.route) {\r\n+//   //       navigate(foundCommand.route); // Navigate to the route specified in the command\r\n+//   //     }\r\n+//   //   } else {\r\n+//   //     console.log(\"No command found.\");\r\n+//   //     speak(\"I'm not sure how to respond to that.\");\r\n+//   //   }\r\n+//   // };\r\n+\r\n+//   const handleCommandWithFuse = (command) => {\r\n+//     const fuse = new Fuse(commands, { keys: [\"utterance\"], threshold: 0.4 });\r\n+//     const results = fuse.search(command);\r\n+//     const foundCommand = results.length ? results[0].item : null;\r\n+\r\n+//     if (foundCommand) {\r\n+//       console.log(\"Command found:\", foundCommand.utterance);\r\n+\r\n+//       if (foundCommand.action) {\r\n+//         foundCommand.action();\r\n+//       } else if (foundCommand.route) {\r\n+//         navigate(foundCommand.route);\r\n+//       }\r\n+\r\n+//       if (foundCommand.response) {\r\n+//         speak(foundCommand.response);\r\n+//       }\r\n+//     } else {\r\n+//       console.log(\"No command found.\");\r\n+//       speak(\"I'm not sure how to respond to that.\");\r\n+//     }\r\n+//   };\r\n+\r\n+//   const commands = [\r\n+//     {\r\n+//       utterance: \"Hello who are you ?\",\r\n+\r\n+//       response:\r\n+//         \"Hi! This is Brane! your Voice bot from Brane Education How can I Assist you Today ?\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"Hello\",\r\n+\r\n+//       response: \"Hi! How can I assist you today?\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"hello\",\r\n+\r\n+//       response: \"Hi! How can I assist you today?\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"Hi.\",\r\n+\r\n+//       response: \"Hello! How can I assist you today?\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"Hey there\",\r\n+\r\n+//       response: \"Hi! How can I assist you today?\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"Good morning Brane.\",\r\n+\r\n+//       response: \"Hey Hiii! Good morning  ! How can I help you?\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"Good afternoon Brane.\",\r\n+\r\n+//       response: \"Hey Hiii! Good after noon ! How can I help you?\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"Good evening Brane.\",\r\n+\r\n+//       response: \"Hey Hiii! Good evening ! How can I help you?\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"can you please take me to login page\",\r\n+//       route: \"/login\",\r\n+//       routeDescription: \"login page\",\r\n+//       response: \"Navigating to the login page.\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"go to login page\",\r\n+//       route: \"/login\",\r\n+//       routeDescription: \"login page\",\r\n+//       response: \"Navigating to the login page.\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"please take me to login page\",\r\n+//       route: \"/login\",\r\n+//       routeDescription: \"login page\",\r\n+//       response: \"Navigating to the login page.\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"Go to login page\",\r\n+//       route: \"/login\",\r\n+//       routeDescription: \"login page\",\r\n+//       response: \"Navigating to the login page.\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"open login page\",\r\n+//       route: \"/login\",\r\n+//       routeDescription: \"login page\",\r\n+//       response: \"Navigating to the login page.\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"can you please take me to signup page\",\r\n+//       route: \"/signup\",\r\n+//       routeDescription: \"signup page\",\r\n+//       response: \"Navigating to the signup page.\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"take me to signup page\",\r\n+//       route: \"/signup\",\r\n+//       routeDescription: \"signup page\",\r\n+//       response: \"Navigating to the signup page.\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"Go to signup page\",\r\n+//       route: \"/signup\",\r\n+//       routeDescription: \"signup page\",\r\n+//       response: \"Navigating to the signup page.\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"open signup page\",\r\n+//       route: \"/signup\",\r\n+//       routeDescription: \"signup page\",\r\n+//       response: \"Navigating to the signup page.\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"what are platform features\",\r\n+\r\n+//       response:\r\n+//         \"Dashboard, Dynamic time table, Learning Networks, Little Masters, Video Based Dictionary, General Search.\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"Features of platform\",\r\n+\r\n+//       response:\r\n+//         \"Dashboard, Dynamic time table, Learning Networks, Little Masters, Video Based Dictionary, General Search.\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"What does the platform offer\",\r\n+\r\n+//       response:\r\n+//         \"Dashboard, Dynamic time table, Learning Networks, Little Masters, Video Based Dictionary, General Search.\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"Say me the features of platform\",\r\n+\r\n+//       response:\r\n+//         \"Dashboard, Dynamic time table, Learning Networks, Little Masters, Video Based Dictionary, General Search.\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"Say me the services of platform\",\r\n+\r\n+//       response:\r\n+//         \"Dashboard, Dynamic time table, Learning Networks, Little Masters, Video Based Dictionary, General Search.\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"tell me the services offered by the platform\",\r\n+\r\n+//       response:\r\n+//         \"Dashboard, Dynamic time table, Learning Networks, Little Masters, Video Based Dictionary, General Search.\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"explain platform services\",\r\n+\r\n+//       response:\r\n+//         \"Dashboard, Dynamic time table, Learning Networks, Little Masters, Video Based Dictionary, General Search.\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"Give me the Parent voice of Julia Harris\",\r\n+\r\n+//       response:\r\n+//         \"Brane education has helped my son a lot in his studies. He improved a lot in his studies and is now able to score good marks in his exams\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"Play today's motivational video\",\r\n+\r\n+//       response: \"I am playing the video\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"Play today's video\",\r\n+\r\n+//       response: \"I am playing Motivational video\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"Leaders Voice\",\r\n+\r\n+//       response:\r\n+//         \"This Voice-interactive AI Platform is a game Changer. It revolutionizes education.\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"Curriculum Supported by Brane Education\",\r\n+\r\n+//       response:\r\n+//         \"we support multiple Boards let me say few Telangana State Board Andhra Pradesh Board Maharashtra Board Assam Board\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"Boards supported by the platform\",\r\n+\r\n+//       response:\r\n+//         \"we support multiple Boards let me say few Telangana State Board Andhra Pradesh Board Maharashtra Board Assam Board\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"Curriculum\",\r\n+\r\n+//       response:\r\n+//         \"we support multiple Boards let me say few Telangana State Board Andhra Pradesh Board Maharashtra Board Assam Board\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"Go to landing page\",\r\n+\r\n+//       response: \"Okay, I am taking you to the landing page.\",\r\n+\r\n+//       route: \"/childpage\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"take me to landing page\",\r\n+\r\n+//       response: \"Okay, I am taking you to the landing page.\",\r\n+\r\n+//       route: \"/childpage\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"move to landing page\",\r\n+\r\n+//       response: \"Okay, I am taking you to the landing page.\",\r\n+\r\n+//       route: \"/childpage\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"roll back to landing page\",\r\n+\r\n+//       response: \"Okay, I am taking you to the landing page.\",\r\n+\r\n+//       route: \"/childpage\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"move to landing page\",\r\n+\r\n+//       response: \"Okay, I am taking you to the landing page.\",\r\n+\r\n+//       route: \"/childpage\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"what is today's quote\",\r\n+\r\n+//       response:\r\n+//         \"Determination is the power that sees us through all our frustration and obstacles. It helps in building our willpower which is the very basis of success.\",\r\n+\r\n+//       // route: \"/childpage\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"Today's Inspirational quote\",\r\n+\r\n+//       response:\r\n+//         \"Determination is the power that sees us through all our frustration and obstacles. It helps in building our willpower which is the very basis of success.\",\r\n+\r\n+//       // route: \"/childpage\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"say me today's quote\",\r\n+\r\n+//       response:\r\n+//         \"Determination is the power that sees us through all our frustration and obstacles. It helps in building our willpower which is the very basis of success.\",\r\n+\r\n+//       // route: \"/childpage\",\r\n+//     },\r\n+//     {\r\n+//       utterance: \"go back\",\r\n+//       response: \"Going back.\",\r\n+//       action: goBack, // Note the use of an action property\r\n+//     },\r\n+//     {\r\n+//       utterance: \"go forward\",\r\n+//       response: \"Going forward.\",\r\n+//       action: goForward,\r\n+//     },\r\n+//     {\r\n+//       utterance: \"play video\",\r\n+//       // response: \"Playing video.\",\r\n+//       action: playVideo,\r\n+//     },\r\n+//     {\r\n+//       utterance: \"pause video\",\r\n+//       // response: \"Pausing video.\",\r\n+//       action: pauseVideo,\r\n+//     },\r\n+//     {\r\n+//       utterance: \"start video\",\r\n+//       // response: \"Playing video.\",\r\n+//       action: playVideo,\r\n+//     },\r\n+//     {\r\n+//       utterance: \"stop video\",\r\n+//       // response: \"Playing video.\",\r\n+//       action: pauseVideo,\r\n+//     },\r\n+//     {\r\n+//       utterance: \"scroll up\",\r\n+//       // response: \"Scrolling up.\",\r\n+//       action: scrollUp,\r\n+//     },\r\n+//     {\r\n+//       utterance: \"scroll down\",\r\n+//       // response: \"Scrolling down.\",\r\n+//       action: scrollDown,\r\n+//     },\r\n+//     {\r\n+//       utterance: \"go up\",\r\n+\r\n+//       // response: \"Scrolling up.\",\r\n+//       action: scrollUp,\r\n+//     },\r\n+//     {\r\n+//       utterance: \"go down\",\r\n+//       // response: \"Scrolling down.\",\r\n+//       action: scrollDown,\r\n+//     },\r\n+//     {\r\n+//       utterance: \"scroll to top\",\r\n+//       action: scrollToTop,\r\n+//     },\r\n+//     {\r\n+//       utterance: \"scroll to bottom\",\r\n+//       action: scrollToBottom,\r\n+//     },\r\n+//     {\r\n+//       utterance: \"go back\",\r\n+//       action: goBackRef?.current?.click, // Use goBackRef directly\r\n+//       response: \"Going back.\",\r\n+//     },\r\n+//     {\r\n+//       utterance: \"take test\",\r\n+//       action: takeTestRef?.current?.click, // Use takeTestRef directly\r\n+//       response: \"Starting the test.\",\r\n+//     },\r\n+//   ];\r\n+//   return (\r\n+//     <div className=\"speech-bot-container\">\r\n+//       <div\r\n+//         className={`button-container ${\r\n+//           isListening ? \"voicebotframeactive\" : \"voicebotframe\"\r\n+//         }`}\r\n+//       >\r\n+//         <div onClick={isListening ? stopListening : startListening}>\r\n+//           <iframe\r\n+//             src={\r\n+//               isListening\r\n+//                 ? \"https://lottie.host/?file=a89aca3f-5407-4052-82c3-2048afca7a9f/NpCdWzLSKD.json\"\r\n+//                 : \"https://lottie.host/?file=d2b6cc0e-fe95-4847-85b5-35365fca7e00/vTudpCuPZq.json\"\r\n+//             }\r\n+//             width=\"120\" // Set your desired width\r\n+//             height=\"120\" // Set your desired height\r\n+//             title={isListening ? \"Stop Animation\" : \"Start Animation\"}\r\n+//             className={isListening ? \"voicebotframeactive\" : \"voicebotframe\"}\r\n+//           ></iframe>\r\n+//           {isListening ? (\r\n+//             <div className=\"overlay\" onClick={stopListening}></div>\r\n+//           ) : (\r\n+//             <div className=\"overlay\" onClick={startListening}></div>\r\n+//           )}\r\n+//         </div>\r\n+//       </div>\r\n+//     </div>\r\n+//   );\r\n+// };\r\n+\r\n+// export default VoiceBot;\r\n"
                },
                {
                    "date": 1700650203711,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -795,24 +795,24 @@\n     {\r\n       utterance: \"brane stop the bot\",\r\n       action: stopListening,\r\n     },\r\n-    {\r\n-      utterance: \"mute the video\",\r\n-      action: muteVideo,\r\n-    },\r\n-    {\r\n-      utterance: \"unmute the video\",\r\n-      action: unmuteVideo,\r\n-    },\r\n-    {\r\n-      utterance: \"stop the video sound\",\r\n-      action: muteVideo,\r\n-    },\r\n-    {\r\n-      utterance: \"play the video sound\",\r\n-      action: unmuteVideo,\r\n-    },\r\n+    // {\r\n+    //   utterance: \"mute the video\",\r\n+    //   action: muteVideo,\r\n+    // },\r\n+    // {\r\n+    //   utterance: \"unmute the video\",\r\n+    //   action: unmuteVideo,\r\n+    // },\r\n+    // {\r\n+    //   utterance: \"stop the video sound\",\r\n+    //   action: muteVideo,\r\n+    // },\r\n+    // {\r\n+    //   utterance: \"play the video sound\",\r\n+    //   action: unmuteVideo,\r\n+    // },\r\n   ];\r\n \r\n   return (\r\n     <div className=\"speech-bot-container\">\r\n@@ -3661,3745 +3661,4 @@\n //   );\r\n // };\r\n \r\n // export default VoiceBot;\r\n-import React, { useState, useEffect, useRef } from \"react\";\r\n-import { useNavigate, useLocation } from \"react-router-dom\";\r\n-import Fuse from \"fuse.js\";\r\n-import \"./VoiceBot.css\";\r\n-import chatbotimage from \"../../assets/chatbotgif.gif\"\r\n-\r\n-const VoiceBot = ({ videoRef, isMuted, setIsMuted }) => {\r\n-  const [isListening, setIsListening] = useState(false);\r\n-  const [isSpeaking, setIsSpeaking] = useState(false);\r\n-  const recognition = useRef(null);\r\n-  const speechSynthesis = useRef(window.speechSynthesis);\r\n-  const [hasGreeted, setHasGreeted] = useState(false);\r\n-  const navigate = useNavigate();\r\n-\r\n-\r\n- // Initialize speech recognition\r\n- useEffect(() => {\r\n-  recognition.current = new window.webkitSpeechRecognition();\r\n-  recognition.current.continuous = true;\r\n-  recognition.current.interimResults = false;\r\n-  recognition.current.onresult = onResult;\r\n-  recognition.current.onend = onRecognitionEnd;\r\n-  recognition.current.starting = false;\r\n-\r\n-  recognition.current.onerror = (event) => {\r\n-    console.error(\"Recognition error:\", event.error);\r\n-    if (isListening && !isSpeaking) {\r\n-      restartRecognition();\r\n-    }\r\n-  };\r\n-\r\n-  return () => {\r\n-    if (recognition.current) {\r\n-      recognition.current.abort();\r\n-    }\r\n-  };\r\n-}, []);\r\n-\r\n-  useEffect(() => {\r\n-    const checkRecognition = () => {\r\n-      if (isListening && !isSpeaking && !recognition.current.starting) {\r\n-        console.log(\"Restarting recognition because it's not active.\");\r\n-        recognition.current.starting = true;\r\n-        recognition.current.start();\r\n-        console.log(\"Restarted recognition.\");\r\n-      }\r\n-    };\r\n-\r\n-    const recognitionCheckInterval = setInterval(checkRecognition, 500); // Check every .5 second\r\n-\r\n-    return () => {\r\n-      clearInterval(recognitionCheckInterval);\r\n-    };\r\n-  }, [isListening, isSpeaking]);\r\n-\r\n-\r\n-  const historyStack = useRef([]);\r\n-\r\n-  useEffect(() => {\r\n-    return () => {\r\n-      // Clean up the listener when the component unmounts\r\n-      window.removeEventListener(\"popstate\", handlePopState);\r\n-    };\r\n-  }, []);\r\n-\r\n-  const handlePopState = () => {\r\n-    // This needs to handle both back and forward browser actions\r\n-    // Use some logic to determine whether it's a back or forward action\r\n-    // For simplicity, assume it's always back\r\n-    historyStack.current.pop();\r\n-    forwardStack.current.length = 0; // Clear forward stack on manual navigation\r\n-  };\r\n-  \r\n-\r\n-  // Add a new entry to the stack whenever navigate is called\r\n-  const customNavigate = (to, options) => {\r\n-    historyStack.current.push(to);\r\n-    navigate(to, options);\r\n-  };\r\n-\r\n-  // Listen to popstate events to update the history stack\r\n-  useEffect(() => {\r\n-    window.addEventListener(\"popstate\", handlePopState);\r\n-  }, []);\r\n-\r\n-  const forwardStack = useRef([]);\r\n-\r\n-  const goBack = () => {\r\n-    if (window.history.state && window.history.state.idx > 0) {\r\n-      window.history.back();\r\n-      speak(\"Going back\");\r\n-    } else {\r\n-      speak(\"Can't go back any further.\");\r\n-    }\r\n-  };\r\n-\r\n-  const goForward = () => {\r\n-    if (window.history.state && window.history.state.idx < window.history.length - 1) {\r\n-      window.history.forward();\r\n-      speak(\"Going forward\");\r\n-    } else {\r\n-      speak(\"No forward history available.\");\r\n-    }\r\n-  };\r\n-\r\n-  const playVideo = () => {\r\n-    if (videoRef.current) {\r\n-      videoRef.current.play();\r\n-      speak(\"Playing video.\");\r\n-    } else {\r\n-      speak(\"No video to play.\");\r\n-    }\r\n-  };\r\n-\r\n-  const pauseVideo = () => {\r\n-    if (videoRef.current) {\r\n-      videoRef.current.pause();\r\n-      speak(\"Video paused.\");\r\n-    } else {\r\n-      speak(\"No video to pause.\");\r\n-    }\r\n-  };\r\n-\r\n-  const scrollAmount = window.innerHeight * 0.82;\r\n-\r\n-  const scrollUp = () => {\r\n-    if (window.pageYOffset === 0) {\r\n-      speak(\"Already at the top of the page.\");\r\n-    } else {\r\n-      window.scrollBy(0, -scrollAmount);\r\n-      speak(\"Scrolled up.\");\r\n-    }\r\n-  };\r\n-\r\n-  const scrollDown = () => {\r\n-    const maxScrollTop =\r\n-      document.documentElement.scrollHeight - window.innerHeight;\r\n-    if (window.pageYOffset >= maxScrollTop) {\r\n-      speak(\"Already at the bottom of the page.\");\r\n-    } else {\r\n-      window.scrollBy(0, scrollAmount);\r\n-      speak(\"Scrolled down.\");\r\n-    }\r\n-  };\r\n-\r\n-  const scrollToTop = () => {\r\n-    if (window.pageYOffset === 0) {\r\n-      speak(\"Already at the top of the page.\");\r\n-    } else {\r\n-      window.scrollTo(0, 0);\r\n-      speak(\"Scrolled to the top of the page.\");\r\n-    }\r\n-  };\r\n-\r\n-  const scrollToBottom = () => {\r\n-    const maxScrollTop =\r\n-      document.documentElement.scrollHeight - window.innerHeight;\r\n-    if (window.pageYOffset >= maxScrollTop) {\r\n-      speak(\"Already at the bottom of the page.\");\r\n-    } else {\r\n-      window.scrollTo(0, document.body.scrollHeight);\r\n-      speak(\"Scrolled to the bottom of the page.\");\r\n-    }\r\n-  };\r\n-\r\n-   const muteVideo = () => {\r\n-    if (videoRef.current) {\r\n-      setIsMuted(true);\r\n-    } else {\r\n-      speak(\"No video to mute.\");\r\n-    }\r\n-  };\r\n-\r\n-  const unmuteVideo = () => {\r\n-    if (videoRef.current) {\r\n-      setIsMuted(false);\r\n-    } else {\r\n-      speak(\"No video to unmute.\");\r\n-    }\r\n-  };\r\n-\r\n-  const speak = (message) => {\r\n-    const utterance = new SpeechSynthesisUtterance(message);\r\n-    utterance.onend = () => {\r\n-      setIsSpeaking(false);\r\n-      // Restart recognition after speaking has ended\r\n-      if (isListening) {\r\n-        restartRecognition();\r\n-      }\r\n-    };\r\n-  \r\n-    setIsSpeaking(true);\r\n-    // Stop recognition when the bot starts speaking\r\n-    if (recognition.current) {\r\n-      recognition.current.abort();\r\n-    }\r\n-    speechSynthesis.current.speak(utterance);\r\n-  };\r\n-  \r\n-\r\n-  const restartRecognition = () => {\r\n-    // Check if recognition is not already started and if the bot is set to listen\r\n-    if (recognition.current && !recognition.current.starting && isListening && !isSpeaking) {\r\n-      recognition.current.abort(); // Ensure any ongoing recognition is stopped\r\n-      recognition.current.starting = true;\r\n-      recognition.current.start();\r\n-    }\r\n-  };\r\n-  \r\n-    // Restart recognition when bot finishes speaking and isListening is true\r\n-    useEffect(() => {\r\n-      if (!isSpeaking && isListening) {\r\n-        restartRecognition();\r\n-      }\r\n-    }, [isSpeaking, isListening]);\r\n-\r\n-  const onResult = (event) => {\r\n-    const resultIndex = event.resultIndex;\r\n-    const transcript = event.results[resultIndex][0].transcript\r\n-      .trim()\r\n-      .toLowerCase();\r\n-\r\n-    if (event.results[resultIndex].isFinal) {\r\n-      console.log(`Recognized text: ${transcript}`);\r\n-      if (transcript.includes(\"brain\")) {\r\n-        console.log(\"Wake word heard, processing command...\");\r\n-        handleCommandWithFuse(transcript.replace(\"brain\", \"\"));\r\n-      }\r\n-    }\r\n-  };\r\n-\r\n-  const onRecognitionEnd = () => {\r\n-    recognition.current.starting = false;\r\n-    if (isListening && !isSpeaking) {\r\n-      restartRecognition();\r\n-    }\r\n-  };\r\n-\r\n-  useEffect(() => {\r\n-    if (isListening && !hasGreeted) {\r\n-      speak(\"Hello, I'm Brane. How can I help you today?\");\r\n-      setHasGreeted(true);\r\n-    }\r\n-  }, [isListening, hasGreeted]);\r\n-\r\n-\r\n-  // Updated startListening function\r\n-  const startListening = () => {\r\n-    setIsListening(true);\r\n-    if (!recognition.current.starting) {\r\n-      restartRecognition();\r\n-    }\r\n-  };\r\n-\r\n-  // Updated stopListening function\r\n-  const stopListening = () => {\r\n-    setIsListening(false);\r\n-    if (speechSynthesis.current.speaking) {\r\n-      speechSynthesis.current.cancel();\r\n-    }\r\n-    recognition.current.abort();\r\n-  };\r\n-\r\n-\r\n-  const handleCommandWithFuse = (command) => {\r\n-    const fuse = new Fuse(commands, { keys: [\"utterance\"], threshold: 0.4 });\r\n-    const results = fuse.search(command);\r\n-    const foundCommand = results.length ? results[0].item : null;\r\n-\r\n-    if (foundCommand) {\r\n-      console.log(\"Command found:\", foundCommand.utterance);\r\n-\r\n-      if (foundCommand.action) {\r\n-        foundCommand.action();\r\n-      } else if (foundCommand.route) {\r\n-        navigate(foundCommand.route);\r\n-      }\r\n-\r\n-      // Speak after performing the action or navigation\r\n-      speak(foundCommand.response);\r\n-    } else {\r\n-      console.log(\"No command found.\");\r\n-      speak(\"I'm not sure how to respond to that.\");\r\n-    }\r\n-  };\r\n-\r\n-  const commands = [\r\n-    {\r\n-      utterance: \"Hello who are you ?\",\r\n-\r\n-      response:\r\n-        \"Hi! This is Brane! your Voice bot from Brane Education How can I Assist you Today ?\",\r\n-    },\r\n-\r\n-    {\r\n-      utterance: \"Hello\",\r\n-\r\n-      response: \"Hi! How can I assist you today?\",\r\n-    },\r\n-\r\n-    {\r\n-      utterance: \"hello\",\r\n-\r\n-      response: \"Hi! How can I assist you today?\",\r\n-    },\r\n-\r\n-    {\r\n-      utterance: \"Hi.\",\r\n-\r\n-      response: \"Hello! How can I assist you today?\",\r\n-    },\r\n-\r\n-    {\r\n-      utterance: \"Hey there\",\r\n-\r\n-      response: \"Hi! How can I assist you today?\",\r\n-    },\r\n-\r\n-    {\r\n-      utterance: \"Good morning Brane.\",\r\n-\r\n-      response: \"Hey Hiii! Good morning  ! How can I help you?\",\r\n-    },\r\n-\r\n-    {\r\n-      utterance: \"Good afternoon Brane.\",\r\n-\r\n-      response: \"Hey Hiii! Good after noon ! How can I help you?\",\r\n-    },\r\n-\r\n-    {\r\n-      utterance: \"Good evening Brane.\",\r\n-\r\n-      response: \"Hey Hiii! Good evening ! How can I help you?\",\r\n-    },\r\n-\r\n-    {\r\n-      utterance: \"take me to homepage\",\r\n-\r\n-      route: \"/\",\r\n-\r\n-      response: \"You're in Homepage now\",\r\n-    },\r\n-    {\r\n-      utterance: \"open homepage\",\r\n-\r\n-      route: \"/\",\r\n-\r\n-      response: \"You're in Homepage now\",\r\n-    },\r\n-    {\r\n-      utterance: \"go to homepage\",\r\n-\r\n-      route: \"/\",\r\n-\r\n-      response: \"You're in Homepage now\",\r\n-    },\r\n-    {\r\n-      utterance: \"go back to homepage\",\r\n-\r\n-      route: \"/\",\r\n-\r\n-      response: \"You're in Homepage now\",\r\n-    },\r\n-    {\r\n-      utterance: \"can you please take me to login page\",\r\n-\r\n-      route: \"/login\",\r\n-\r\n-      response: \"Here's the Login Page, Please Login\",\r\n-    },\r\n-\r\n-    {\r\n-      utterance: \"please take me to login page\",\r\n-\r\n-      route: \"/login\",\r\n-\r\n-      response: \"Here's the Login Page, Please Login\",\r\n-    },\r\n-\r\n-    {\r\n-      utterance: \"Go to login page\",\r\n-\r\n-      route: \"/login\",\r\n-\r\n-      response: \"Here's the Login Page, Please Login\",\r\n-    },\r\n-\r\n-    {\r\n-      utterance: \"open login page\",\r\n-\r\n-      route: \"/login\",\r\n-\r\n-      response: \"Here's the Login Page, Please Login\",\r\n-    },\r\n-\r\n-    {\r\n-      utterance: \"can you please take me to signup page\",\r\n-\r\n-      route: \"/signup\",\r\n-\r\n-      response: \"Here's the signup page. Please proceed With Registration.\",\r\n-    },\r\n-\r\n-    {\r\n-      utterance: \"take me to signup page\",\r\n-\r\n-      route: \"/signup\",\r\n-\r\n-      response: \"Here's the signup page. Please proceed With Registration.\",\r\n-    },\r\n-\r\n-    {\r\n-      utterance: \"Go to signup page\",\r\n-\r\n-      route: \"/signup\",\r\n-\r\n-      response: \"Here's the signup page. Please proceed With Registration.\",\r\n-    },\r\n-\r\n-    {\r\n-      utterance: \"open signup page\",\r\n-\r\n-      route: \"/signup\",\r\n-\r\n-      response: \"Here's the signup page. Please proceed With Registration.\",\r\n-    },\r\n-\r\n-    {\r\n-      utterance: \"Go to face id\",\r\n-\r\n-      route: \"/login/faceid\",\r\n-\r\n-      response: \"Here's Face ID Login. Please proceed.\",\r\n-    },\r\n-\r\n-    {\r\n-      utterance: \"Go to face id login\",\r\n-\r\n-      route: \"/login/faceid\",\r\n-\r\n-      response: \"Here's Face ID Login. Please proceed.\",\r\n-    },\r\n-    {\r\n-      utterance: \"Go to face login\",\r\n-\r\n-      route: \"/login/faceid\",\r\n-\r\n-      response: \"Here's Face ID Login. Please proceed.\",\r\n-    },\r\n-\r\n-    {\r\n-      utterance: \"login with face id\",\r\n-\r\n-      route: \"/login/faceid\",\r\n-\r\n-      response: \"Here's Face ID Login. Please proceed.\",\r\n-    },\r\n-\r\n-    {\r\n-      utterance: \"login with face\",\r\n-\r\n-      route: \"/login/faceid\",\r\n-\r\n-      response: \"Here's Face ID Login. Please proceed.\",\r\n-    },\r\n-\r\n-    {\r\n-      utterance: \"i want to login with face\",\r\n-\r\n-      route: \"/login/faceid\",\r\n-\r\n-      response: \"Here's Face ID Login. Please proceed.\",\r\n-    },\r\n-\r\n-    {\r\n-      utterance: \"login with voice\",\r\n-\r\n-      route: \"/login/voiceid\",\r\n-\r\n-      response: \"Here's Voice Login. Please proceed.\",\r\n-    },\r\n-\r\n-    {\r\n-      utterance: \"i want to login with voice\",\r\n-\r\n-      route: \"/login/voiceid\",\r\n-\r\n-      response: \"Here's Voice Login. Please proceed.\",\r\n-    },\r\n-\r\n-    {\r\n-      utterance: \"go to voice login\",\r\n-\r\n-      route: \"/login/voiceid\",\r\n-\r\n-      response: \"Here's Voice Login. Please proceed.\",\r\n-    },\r\n-\r\n-    {\r\n-      utterance: \"login with voice\",\r\n-\r\n-      route: \"/login/voiceid\",\r\n-\r\n-      response: \"Here's Voice Login. Please proceed.\",\r\n-    },\r\n-\r\n-    {\r\n-      utterance: \"login with mobile\",\r\n-\r\n-      route: \"/login/mobile\",\r\n-\r\n-      response: \"Here's Mobile Login. Please proceed.\",\r\n-    },\r\n-\r\n-    {\r\n-      utterance: \"i want to login with mobile\",\r\n-\r\n-      route: \"/login/mobile\",\r\n-\r\n-      response: \"Here's Mobile Login. Please proceed.\",\r\n-    },\r\n-    {\r\n-      utterance: \"go to mobile login\",\r\n-\r\n-      route: \"/login/mobile\",\r\n-\r\n-      response: \"Here's Mobile Login. Please proceed.\",\r\n-    },\r\n-    {\r\n-      utterance: \"go to about page\",\r\n-\r\n-      route: \"/aboutus\",\r\n-\r\n-      response: \"This is About us.\",\r\n-    },\r\n-    {\r\n-      utterance: \"go to about us page\",\r\n-\r\n-      route: \"/aboutus\",\r\n-\r\n-      response: \"This is About us.\",\r\n-    },\r\n-    {\r\n-      utterance: \"open about us page\",\r\n-\r\n-      route: \"/aboutus\",\r\n-\r\n-      response: \"This is About us.\",\r\n-    },\r\n-    {\r\n-      utterance: \"open about page\",\r\n-\r\n-      route: \"/aboutus\",\r\n-\r\n-      response: \"This is About us.\",\r\n-    },\r\n-    {\r\n-      utterance: \"take me to about page\",\r\n-\r\n-      route: \"/aboutus\",\r\n-\r\n-      response: \"This is About us.\",\r\n-    },\r\n-    {\r\n-      utterance: \"take me to about us page\",\r\n-\r\n-      route: \"/aboutus\",\r\n-\r\n-      response: \"This is About us.\",\r\n-    },\r\n-\r\n-    {\r\n-      utterance: \"go to contact page\",\r\n-\r\n-      route: \"/contactus\",\r\n-\r\n-      response: \"You can contact us from here\",\r\n-    },\r\n-    {\r\n-      utterance: \"go to contact us page\",\r\n-\r\n-      route: \"/contactus\",\r\n-\r\n-      response: \"You can contact us from here\",\r\n-    },\r\n-    {\r\n-      utterance: \"open contact us page\",\r\n-\r\n-      route: \"/contactus\",\r\n-\r\n-      response: \"You can contact us from here\",\r\n-    },\r\n-    {\r\n-      utterance: \"open contact page\",\r\n-\r\n-      route: \"/contactus\",\r\n-\r\n-      response: \"You can contact us from here\",\r\n-    },\r\n-    {\r\n-      utterance: \"take me to about page\",\r\n-\r\n-      route: \"/contactus\",\r\n-\r\n-      response: \"You can contact us from here\",\r\n-    },\r\n-    {\r\n-      utterance: \"take me to contact us page\",\r\n-\r\n-      route: \"/contactus\",\r\n-\r\n-      response: \"You can contact us from here\",\r\n-    },\r\n-\r\n-\r\n-    {\r\n-      utterance: \"what are platform features\",\r\n-\r\n-      response:\r\n-        \"Dashboard, Dynamic time table, Learning Networks, Little Masters, Video Based Dictionary, General Search.\",\r\n-    },\r\n-\r\n-    {\r\n-      utterance: \"Features of platform\",\r\n-\r\n-      response:\r\n-        \"Dashboard, Dynamic time table, Learning Networks, Little Masters, Video Based Dictionary, General Search.\",\r\n-    },\r\n-\r\n-    {\r\n-      utterance: \"What does the platform offer\",\r\n-\r\n-      response:\r\n-        \"Dashboard, Dynamic time table, Learning Networks, Little Masters, Video Based Dictionary, General Search.\",\r\n-    },\r\n-\r\n-    {\r\n-      utterance: \"Say me the features of platform\",\r\n-\r\n-      response:\r\n-        \"Dashboard, Dynamic time table, Learning Networks, Little Masters, Video Based Dictionary, General Search.\",\r\n-    },\r\n-\r\n-    {\r\n-      utterance: \"Say me the services of platform\",\r\n-\r\n-      response:\r\n-        \"Dashboard, Dynamic time table, Learning Networks, Little Masters, Video Based Dictionary, General Search.\",\r\n-    },\r\n-\r\n-    {\r\n-      utterance: \"tell me the services offered by the platform\",\r\n-\r\n-      response:\r\n-        \"Dashboard, Dynamic time table, Learning Networks, Little Masters, Video Based Dictionary, General Search.\",\r\n-    },\r\n-\r\n-    {\r\n-      utterance: \"explain platform services\",\r\n-\r\n-      response:\r\n-        \"Dashboard, Dynamic time table, Learning Networks, Little Masters, Video Based Dictionary, General Search.\",\r\n-    },\r\n-\r\n-    {\r\n-      utterance: \"Give me the Parent voice of Julia Harris\",\r\n-\r\n-      response:\r\n-        \"Brane education has helped my son a lot in his studies. He improved a lot in his studies and is now able to score good marks in his exams\",\r\n-    },\r\n-\r\n-    {\r\n-      utterance: \"Leaders Voice\",\r\n-\r\n-      response:\r\n-        \"This Voice-interactive AI Platform is a game Changer. It revolutionizes education.\",\r\n-    },\r\n-\r\n-    {\r\n-      utterance: \"Curriculum Supported by Brane Education\",\r\n-\r\n-      response:\r\n-        \"we support multiple Boards let me say few Telangana State Board Andhra Pradesh Board Maharashtra Board Assam Board\",\r\n-    },\r\n-\r\n-    {\r\n-      utterance: \"Boards supported by the platform\",\r\n-\r\n-      response:\r\n-        \"we support multiple Boards let me say few Telangana State Board Andhra Pradesh Board Maharashtra Board Assam Board\",\r\n-    },\r\n-\r\n-    {\r\n-      utterance: \"Curriculum\",\r\n-\r\n-      response:\r\n-        \"we support multiple Boards let me say few Telangana State Board Andhra Pradesh Board Maharashtra Board Assam Board\",\r\n-    },\r\n-\r\n-    // {\r\n-    //   utterance: \"Go to landing page\",\r\n-\r\n-    //   response: \"Okay, I am taking you to the landing page.\",\r\n-\r\n-    //   route: \"/childpage\",\r\n-    // },\r\n-\r\n-    // {\r\n-    //   utterance: \"take me to landing page\",\r\n-\r\n-    //   response: \"Okay, I am taking you to the landing page.\",\r\n-\r\n-    //   route: \"/childpage\",\r\n-    // },\r\n-\r\n-    // {\r\n-    //   utterance: \"move to landing page\",\r\n-\r\n-    //   response: \"Okay, I am taking you to the landing page.\",\r\n-\r\n-    //   route: \"/childpage\",\r\n-    // },\r\n-\r\n-    // {\r\n-    //   utterance: \"roll back to landing page\",\r\n-\r\n-    //   response: \"Okay, I am taking you to the landing page.\",\r\n-\r\n-    //   route: \"/childpage\",\r\n-    // },\r\n-\r\n-    // {\r\n-    //   utterance: \"move to landing page\",\r\n-\r\n-    //   response: \"Okay, I am taking you to the landing page.\",\r\n-\r\n-    //   route: \"/childpage\",\r\n-    // },\r\n-\r\n-    {\r\n-      utterance: \"what is today's quote\",\r\n-\r\n-      response:\r\n-        \"Determination is the power that sees us through all our frustration and obstacles. It helps in building our willpower which is the very basis of success.\",\r\n-\r\n-      route: \"/childpage\",\r\n-    },\r\n-\r\n-    {\r\n-      utterance: \"Today's Inspirational quote\",\r\n-\r\n-      response:\r\n-        \"Determination is the power that sees us through all our frustration and obstacles. It helps in building our willpower which is the very basis of success.\",\r\n-\r\n-      route: \"/childpage\",\r\n-    },\r\n-\r\n-    {\r\n-      utterance: \"say me today's quote\",\r\n-\r\n-      response:\r\n-        \"Determination is the power that sees us through all our frustration and obstacles. It helps in building our willpower which is the very basis of success.\",\r\n-\r\n-      route: \"/childpage\",\r\n-    },\r\n-    {\r\n-      utterance: \"go back\",\r\n-      response: \"\",\r\n-      action: goBack, // Note the use of an action property\r\n-    },\r\n-    {\r\n-      utterance: \"go forward\",\r\n-      response: \"\",\r\n-      action: goForward,\r\n-    },\r\n-    {\r\n-      utterance: \"play video\",\r\n-      // response: \"Playing video.\",\r\n-      action: playVideo,\r\n-    },\r\n-    {\r\n-      utterance: \"pause video\",\r\n-      // response: \"Pausing video.\",\r\n-      action: pauseVideo,\r\n-    },\r\n-    {\r\n-      utterance: \"start video\",\r\n-      // response: \"Playing video.\",\r\n-      action: playVideo,\r\n-    },\r\n-    {\r\n-      utterance: \"stop video\",\r\n-      // response: \"Playing video.\",\r\n-      action: pauseVideo,\r\n-    },\r\n-    {\r\n-      utterance: \"scroll up\",\r\n-      // response: \"Scrolling up.\",\r\n-      action: scrollUp,\r\n-    },\r\n-    {\r\n-      utterance: \"scroll down\",\r\n-      // response: \"Scrolling down.\",\r\n-      action: scrollDown,\r\n-    },\r\n-    {\r\n-      utterance: \"go up\",\r\n-\r\n-      // response: \"Scrolling up.\",\r\n-      action: scrollUp,\r\n-    },\r\n-    {\r\n-      utterance: \"go down\",\r\n-      // response: \"Scrolling down.\",\r\n-      action: scrollDown,\r\n-    },\r\n-    {\r\n-      utterance: \"scroll to top\",\r\n-      action: scrollToTop,\r\n-    },\r\n-    {\r\n-      utterance: \"scroll to bottom\",\r\n-      action: scrollToBottom,\r\n-    },\r\n-    {\r\n-      utterance: \"brane stop\",\r\n-      action: stopListening,\r\n-    },\r\n-    {\r\n-      utterance: \"brane turn off\",\r\n-      action: stopListening,\r\n-    },\r\n-    {\r\n-      utterance: \"brane stop the bot\",\r\n-      action: stopListening,\r\n-    },\r\n-    {\r\n-      utterance: \"mute the video\",\r\n-      action: muteVideo,\r\n-    },\r\n-    {\r\n-      utterance: \"unmute the video\",\r\n-      action: unmuteVideo,\r\n-    },\r\n-    {\r\n-      utterance: \"stop the video sound\",\r\n-      action: muteVideo,\r\n-    },\r\n-    {\r\n-      utterance: \"play the video sound\",\r\n-      action: unmuteVideo,\r\n-    },\r\n-  ];\r\n-\r\n-  return (\r\n-    <div className=\"speech-bot-container\">\r\n-      <div\r\n-        className={`button-container ${\r\n-          isListening ? \"voicebotframeactive\" : \"voicebotframe\"\r\n-        }`}\r\n-      >\r\n-        {/* <button onClick={isListening ? stopListening : startListening}>\r\n-          {isListening ? \"Stop\" : \"Start\"} Animation\r\n-        </button> */}\r\n-        <img \r\n-        className=\"botimage\"\r\n-          src={chatbotimage} alt=\"\" \r\n-          onClick={isListening ? stopListening : startListening}  \r\n-        />\r\n-\r\n-      </div>\r\n-    </div>\r\n-  );\r\n-};\r\n-\r\n-export default VoiceBot;\r\n-\r\n-\r\n-{/* // import React, { useState, useEffect, useRef } from \"react\";\r\n-// import { useNavigate, useLocation } from \"react-router-dom\";\r\n-// import Fuse from \"fuse.js\";\r\n-// import \"./VoiceBot.css\";\r\n-\r\n-// const VoiceBot = ({ videoRef }) => {\r\n-//   const [isListening, setIsListening] = useState(false);\r\n-//   const [isSpeaking, setIsSpeaking] = useState(false);\r\n-//   const recognition = useRef(null);\r\n-//   const speechSynthesis = useRef(window.speechSynthesis);\r\n-//   const [hasGreeted, setHasGreeted] = useState(false);\r\n-//   const navigate = useNavigate();\r\n-\r\n-//   useEffect(() => {\r\n-//     recognition.current = new window.webkitSpeechRecognition();\r\n-//     recognition.current.continuous = true;\r\n-//     recognition.current.interimResults = false;\r\n-//     recognition.current.onresult = onResult;\r\n-//     recognition.current.onend = onRecognitionEnd;\r\n-//     recognition.current.starting = false;\r\n-\r\n-//     // Simplified error handling, removed specific handling for 'no-speech'\r\n-//     recognition.current.onerror = (event) => {\r\n-//       console.error(\"Recognition error:\", event.error);\r\n-//       // Check if listening is true and the bot isn't speaking\r\n-//       if (isListening && !isSpeaking) {\r\n-//         // Restart recognition\r\n-//         restartRecognition();\r\n-//       }\r\n-//     };\r\n-\r\n-//     return () => {\r\n-//       if (recognition.current) {\r\n-//         recognition.current.abort();\r\n-//       }\r\n-//     };\r\n-//   }, []);\r\n-\r\n-//   useEffect(() => {\r\n-//     const checkRecognition = () => {\r\n-//       if (isListening && !isSpeaking && !recognition.current.starting) {\r\n-//         console.log(\"Restarting recognition because it's not active.\");\r\n-//         recognition.current.starting = true;\r\n-//         recognition.current.start();\r\n-//         console.log(\"Restarted recognition.\");\r\n-//       }\r\n-//     };\r\n-\r\n-//     const recognitionCheckInterval = setInterval(checkRecognition, 100); // Check every 1 second\r\n-\r\n-//     return () => {\r\n-//       clearInterval(recognitionCheckInterval);\r\n-//     };\r\n-//   }, [isListening, isSpeaking]);\r\n-\r\n-//   const restartRecognition = () => {\r\n-//     if (recognition.current.starting) {\r\n-//       console.log(\"Recognition is already starting or running.\");\r\n-//       return;\r\n-//     }\r\n-\r\n-//     recognition.current.abort(); // Stop any existing recognition process\r\n-//     recognition.current.starting = true;\r\n-//     recognition.current.start();\r\n-//     console.log(\"Recognition restarted.\");\r\n-//   };\r\n-\r\n-//   const historyStack = useRef([]);\r\n-\r\n-//   useEffect(() => {\r\n-//     return () => {\r\n-//       // Clean up the listener when the component unmounts\r\n-//       window.removeEventListener(\"popstate\", handlePopState);\r\n-//     };\r\n-//   }, []);\r\n-\r\n-//   const handlePopState = () => {\r\n-//     // This needs to handle both back and forward browser actions\r\n-//     // Use some logic to determine whether it's a back or forward action\r\n-//     // For simplicity, assume it's always back\r\n-//     historyStack.current.pop();\r\n-//     forwardStack.current.length = 0; // Clear forward stack on manual navigation\r\n-//   };\r\n-  \r\n-\r\n-//   // Add a new entry to the stack whenever navigate is called\r\n-//   const customNavigate = (to, options) => {\r\n-//     historyStack.current.push(to);\r\n-//     navigate(to, options);\r\n-//   };\r\n-\r\n-//   // Listen to popstate events to update the history stack\r\n-//   useEffect(() => {\r\n-//     window.addEventListener(\"popstate\", handlePopState);\r\n-//   }, []);\r\n-\r\n-//   const forwardStack = useRef([]);\r\n-\r\n-//   const goBack = () => {\r\n-//     if (window.history.state && window.history.state.idx > 0) {\r\n-//       window.history.back();\r\n-//       speak(\"Going back\");\r\n-//     } else {\r\n-//       speak(\"Can't go back any further.\");\r\n-//     }\r\n-//   };\r\n-\r\n-//   const goForward = () => {\r\n-//     if (window.history.state && window.history.state.idx < window.history.length - 1) {\r\n-//       window.history.forward();\r\n-//       speak(\"Going forward\");\r\n-//     } else {\r\n-//       speak(\"No forward history available.\");\r\n-//     }\r\n-//   };\r\n-\r\n-//   const playVideo = () => {\r\n-//     if (videoRef.current) {\r\n-//       videoRef.current.play();\r\n-//       speak(\"Playing video.\");\r\n-//     } else {\r\n-//       speak(\"No video to play.\");\r\n-//     }\r\n-//   };\r\n-\r\n-//   const pauseVideo = () => {\r\n-//     if (videoRef.current) {\r\n-//       videoRef.current.pause();\r\n-//       speak(\"Video paused.\");\r\n-//     } else {\r\n-//       speak(\"No video to pause.\");\r\n-//     }\r\n-//   };\r\n-\r\n-//   const scrollAmount = window.innerHeight * 0.82;\r\n-\r\n-//   const scrollUp = () => {\r\n-//     if (window.pageYOffset === 0) {\r\n-//       speak(\"Already at the top of the page.\");\r\n-//     } else {\r\n-//       window.scrollBy(0, -scrollAmount);\r\n-//       speak(\"Scrolled up.\");\r\n-//     }\r\n-//   };\r\n-\r\n-//   const scrollDown = () => {\r\n-//     const maxScrollTop =\r\n-//       document.documentElement.scrollHeight - window.innerHeight;\r\n-//     if (window.pageYOffset >= maxScrollTop) {\r\n-//       speak(\"Already at the bottom of the page.\");\r\n-//     } else {\r\n-//       window.scrollBy(0, scrollAmount);\r\n-//       speak(\"Scrolled down.\");\r\n-//     }\r\n-//   };\r\n-\r\n-//   const scrollToTop = () => {\r\n-//     if (window.pageYOffset === 0) {\r\n-//       speak(\"Already at the top of the page.\");\r\n-//     } else {\r\n-//       window.scrollTo(0, 0);\r\n-//       speak(\"Scrolled to the top of the page.\");\r\n-//     }\r\n-//   };\r\n-\r\n-//   const scrollToBottom = () => {\r\n-//     const maxScrollTop =\r\n-//       document.documentElement.scrollHeight - window.innerHeight;\r\n-//     if (window.pageYOffset >= maxScrollTop) {\r\n-//       speak(\"Already at the bottom of the page.\");\r\n-//     } else {\r\n-//       window.scrollTo(0, document.body.scrollHeight);\r\n-//       speak(\"Scrolled to the bottom of the page.\");\r\n-//     }\r\n-//   };\r\n-\r\n-//   const speak = (message) => {\r\n-//     console.log(\"speak function called with message:\", message);\r\n-//     const utterance = new SpeechSynthesisUtterance(message);\r\n-//     utterance.onend = () => {\r\n-//       setIsSpeaking(false);\r\n-//       console.log(\"Speaking ended.\");\r\n-//       if (isListening && !recognition.current.starting) {\r\n-//         console.log(\"Restarting recognition after speaking.\");\r\n-//         recognition.current.starting = true;\r\n-//         recognition.current.start();\r\n-//         console.log(\"Restarted recognition after speaking.\");\r\n-//       }\r\n-//     };\r\n-\r\n-//     setIsSpeaking(true);\r\n-//     console.log(\"Speaking started.\");\r\n-//     recognition.current.stop(); // Ensure to stop recognition before speaking\r\n-//     speechSynthesis.current.speak(utterance);\r\n-//   };\r\n-\r\n-//   const onResult = (event) => {\r\n-//     const resultIndex = event.resultIndex;\r\n-//     const transcript = event.results[resultIndex][0].transcript\r\n-//       .trim()\r\n-//       .toLowerCase();\r\n-\r\n-//     if (event.results[resultIndex].isFinal) {\r\n-//       console.log(`Recognized text: ${transcript}`);\r\n-//       if (transcript.includes(\"brain\")) {\r\n-//         console.log(\"Wake word heard, processing command...\");\r\n-//         handleCommandWithFuse(transcript.replace(\"brain\", \"\"));\r\n-//       }\r\n-//     }\r\n-//   };\r\n-\r\n-//   const onRecognitionEnd = () => {\r\n-//     recognition.current.starting = false;\r\n-//     if (isListening && !isSpeaking) {\r\n-//       restartRecognition();\r\n-//     }\r\n-//   };\r\n-\r\n-//   useEffect(() => {\r\n-//     if (isListening) {\r\n-//       if (!hasGreeted) {\r\n-//         speak(\"Hello, I'm Brane. How can I help you today?\");\r\n-//         setHasGreeted(true);\r\n-//       } else {\r\n-//         speak(\"Listening.\");\r\n-//       }\r\n-//     }\r\n-//   }, [isListening, hasGreeted]);\r\n-\r\n-\r\n-//   const startListening = () => {\r\n-//     if (!recognition.current.starting) {\r\n-//       setIsListening(true);\r\n-//       restartRecognition();\r\n-//     }\r\n-//   };\r\n-\r\n-//   const stopListening = () => {\r\n-//     setIsListening(false);\r\n-//     recognition.current.abort();\r\n-//     if (speechSynthesis.current.speaking) {\r\n-//       speechSynthesis.current.cancel();\r\n-//     }\r\n-//   };\r\n-\r\n-//   const handleCommandWithFuse = (command) => {\r\n-//     const fuse = new Fuse(commands, { keys: [\"utterance\"], threshold: 0.4 });\r\n-//     const results = fuse.search(command);\r\n-//     const foundCommand = results.length ? results[0].item : null;\r\n-\r\n-//     if (foundCommand) {\r\n-//       console.log(\"Command found:\", foundCommand.utterance);\r\n-\r\n-//       if (foundCommand.action) {\r\n-//         foundCommand.action();\r\n-//       } else if (foundCommand.route) {\r\n-//         navigate(foundCommand.route);\r\n-//       }\r\n-\r\n-//       // Speak after performing the action or navigation\r\n-//       speak(foundCommand.response);\r\n-//     } else {\r\n-//       console.log(\"No command found.\");\r\n-//       speak(\"I'm not sure how to respond to that.\");\r\n-//     }\r\n-//   };\r\n-\r\n-//   const commands = [\r\n-//     {\r\n-//       utterance: \"Hello who are you ?\",\r\n-\r\n-//       response:\r\n-//         \"Hi! This is Brane! your Voice bot from Brane Education How can I Assist you Today ?\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"Hello\",\r\n-\r\n-//       response: \"Hi! How can I assist you today?\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"hello\",\r\n-\r\n-//       response: \"Hi! How can I assist you today?\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"Hi.\",\r\n-\r\n-//       response: \"Hello! How can I assist you today?\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"Hey there\",\r\n-\r\n-//       response: \"Hi! How can I assist you today?\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"Good morning Brane.\",\r\n-\r\n-//       response: \"Hey Hiii! Good morning  ! How can I help you?\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"Good afternoon Brane.\",\r\n-\r\n-//       response: \"Hey Hiii! Good after noon ! How can I help you?\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"Good evening Brane.\",\r\n-\r\n-//       response: \"Hey Hiii! Good evening ! How can I help you?\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"can you please take me to login page\",\r\n-\r\n-//       route: \"/login\",\r\n-\r\n-//       response: \"Here's the Login Page, Please Login\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"please take me to login page\",\r\n-\r\n-//       route: \"/login\",\r\n-\r\n-//       response: \"Here's the Login Page, Please Login\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"Go to login page\",\r\n-\r\n-//       route: \"/login\",\r\n-\r\n-//       response: \"Here's the Login Page, Please Login\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"open login page\",\r\n-\r\n-//       route: \"/login\",\r\n-\r\n-//       response: \"Here's the Login Page, Please Login\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"can you please take me to signup page\",\r\n-\r\n-//       route: \"/signup\",\r\n-\r\n-//       response: \"Here's the signup page. Please proceed With Registration.\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"take me to signup page\",\r\n-\r\n-//       route: \"/signup\",\r\n-\r\n-//       response: \"Here's the signup page. Please proceed With Registration.\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"Go to signup page\",\r\n-\r\n-//       route: \"/signup\",\r\n-\r\n-//       response: \"Here's the signup page. Please proceed With Registration.\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"open signup page\",\r\n-\r\n-//       route: \"/signup\",\r\n-\r\n-//       response: \"Here's the signup page. Please proceed With Registration.\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"Go to face id\",\r\n-\r\n-//       route: \"/login/faceid\",\r\n-\r\n-//       response: \"Here's Face ID Login. Please proceed.\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"Go to face id login\",\r\n-\r\n-//       route: \"/login/faceid\",\r\n-\r\n-//       response: \"Here's Face ID Login. Please proceed.\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"login with face id\",\r\n-\r\n-//       route: \"/login/faceid\",\r\n-\r\n-//       response: \"Here's Face ID Login. Please proceed.\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"login with face\",\r\n-\r\n-//       route: \"/login/faceid\",\r\n-\r\n-//       response: \"Here's Face ID Login. Please proceed.\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"i want to login with face\",\r\n-\r\n-//       route: \"/login/faceid\",\r\n-\r\n-//       response: \"Here's Face ID Login. Please proceed.\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"login with voice\",\r\n-\r\n-//       route: \"/login/voiceid\",\r\n-\r\n-//       response: \"Here's Voice Login. Please proceed.\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"i want to login with voice\",\r\n-\r\n-//       route: \"/login/voiceid\",\r\n-\r\n-//       response: \"Here's Voice Login. Please proceed.\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"go to voice login\",\r\n-\r\n-//       route: \"/login/voiceid\",\r\n-\r\n-//       response: \"Here's Voice Login. Please proceed.\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"login with voice\",\r\n-\r\n-//       route: \"/login/voiceid\",\r\n-\r\n-//       response: \"Here's Voice Login. Please proceed.\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"login with mobile\",\r\n-\r\n-//       route: \"/login/mobile\",\r\n-\r\n-//       response: \"Here's Mobile Login. Please proceed.\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"i want to login with mobile\",\r\n-\r\n-//       route: \"/login/mobile\",\r\n-\r\n-//       response: \"Here's Mobile Login. Please proceed.\",\r\n-//     },\r\n-//     {\r\n-//       utterance: \"go to mobile login\",\r\n-\r\n-//       route: \"/login/mobile\",\r\n-\r\n-//       response: \"Here's Mobile Login. Please proceed.\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"what are platform features\",\r\n-\r\n-//       response:\r\n-//         \"Dashboard, Dynamic time table, Learning Networks, Little Masters, Video Based Dictionary, General Search.\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"Features of platform\",\r\n-\r\n-//       response:\r\n-//         \"Dashboard, Dynamic time table, Learning Networks, Little Masters, Video Based Dictionary, General Search.\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"What does the platform offer\",\r\n-\r\n-//       response:\r\n-//         \"Dashboard, Dynamic time table, Learning Networks, Little Masters, Video Based Dictionary, General Search.\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"Say me the features of platform\",\r\n-\r\n-//       response:\r\n-//         \"Dashboard, Dynamic time table, Learning Networks, Little Masters, Video Based Dictionary, General Search.\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"Say me the services of platform\",\r\n-\r\n-//       response:\r\n-//         \"Dashboard, Dynamic time table, Learning Networks, Little Masters, Video Based Dictionary, General Search.\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"tell me the services offered by the platform\",\r\n-\r\n-//       response:\r\n-//         \"Dashboard, Dynamic time table, Learning Networks, Little Masters, Video Based Dictionary, General Search.\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"explain platform services\",\r\n-\r\n-//       response:\r\n-//         \"Dashboard, Dynamic time table, Learning Networks, Little Masters, Video Based Dictionary, General Search.\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"Give me the Parent voice of Julia Harris\",\r\n-\r\n-//       response:\r\n-//         \"Brane education has helped my son a lot in his studies. He improved a lot in his studies and is now able to score good marks in his exams\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"Play today's motivational video\",\r\n-\r\n-//       response: \"I am playing the video\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"Play today's video\",\r\n-\r\n-//       response: \"I am playing Motivational video\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"Leaders Voice\",\r\n-\r\n-//       response:\r\n-//         \"This Voice-interactive AI Platform is a game Changer. It revolutionizes education.\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"Curriculum Supported by Brane Education\",\r\n-\r\n-//       response:\r\n-//         \"we support multiple Boards let me say few Telangana State Board Andhra Pradesh Board Maharashtra Board Assam Board\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"Boards supported by the platform\",\r\n-\r\n-//       response:\r\n-//         \"we support multiple Boards let me say few Telangana State Board Andhra Pradesh Board Maharashtra Board Assam Board\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"Curriculum\",\r\n-\r\n-//       response:\r\n-//         \"we support multiple Boards let me say few Telangana State Board Andhra Pradesh Board Maharashtra Board Assam Board\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"Go to landing page\",\r\n-\r\n-//       response: \"Okay, I am taking you to the landing page.\",\r\n-\r\n-//       route: \"/childpage\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"take me to landing page\",\r\n-\r\n-//       response: \"Okay, I am taking you to the landing page.\",\r\n-\r\n-//       route: \"/childpage\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"move to landing page\",\r\n-\r\n-//       response: \"Okay, I am taking you to the landing page.\",\r\n-\r\n-//       route: \"/childpage\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"roll back to landing page\",\r\n-\r\n-//       response: \"Okay, I am taking you to the landing page.\",\r\n-\r\n-//       route: \"/childpage\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"move to landing page\",\r\n-\r\n-//       response: \"Okay, I am taking you to the landing page.\",\r\n-\r\n-//       route: \"/childpage\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"what is today's quote\",\r\n-\r\n-//       response:\r\n-//         \"Determination is the power that sees us through all our frustration and obstacles. It helps in building our willpower which is the very basis of success.\",\r\n-\r\n-//       route: \"/childpage\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"Today's Inspirational quote\",\r\n-\r\n-//       response:\r\n-//         \"Determination is the power that sees us through all our frustration and obstacles. It helps in building our willpower which is the very basis of success.\",\r\n-\r\n-//       route: \"/childpage\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"say me today's quote\",\r\n-\r\n-//       response:\r\n-//         \"Determination is the power that sees us through all our frustration and obstacles. It helps in building our willpower which is the very basis of success.\",\r\n-\r\n-//       route: \"/childpage\",\r\n-//     },\r\n-//     {\r\n-//       utterance: \"go back\",\r\n-//       response: \"\",\r\n-//       action: goBack, // Note the use of an action property\r\n-//     },\r\n-//     {\r\n-//       utterance: \"go forward\",\r\n-//       response: \"\",\r\n-//       action: goForward,\r\n-//     },\r\n-//     {\r\n-//       utterance: \"play video\",\r\n-//       // response: \"Playing video.\",\r\n-//       action: playVideo,\r\n-//     },\r\n-//     {\r\n-//       utterance: \"pause video\",\r\n-//       // response: \"Pausing video.\",\r\n-//       action: pauseVideo,\r\n-//     },\r\n-//     {\r\n-//       utterance: \"start video\",\r\n-//       // response: \"Playing video.\",\r\n-//       action: playVideo,\r\n-//     },\r\n-//     {\r\n-//       utterance: \"stop video\",\r\n-//       // response: \"Playing video.\",\r\n-//       action: pauseVideo,\r\n-//     },\r\n-//     {\r\n-//       utterance: \"scroll up\",\r\n-//       // response: \"Scrolling up.\",\r\n-//       action: scrollUp,\r\n-//     },\r\n-//     {\r\n-//       utterance: \"scroll down\",\r\n-//       // response: \"Scrolling down.\",\r\n-//       action: scrollDown,\r\n-//     },\r\n-//     {\r\n-//       utterance: \"go up\",\r\n-\r\n-//       // response: \"Scrolling up.\",\r\n-//       action: scrollUp,\r\n-//     },\r\n-//     {\r\n-//       utterance: \"go down\",\r\n-//       // response: \"Scrolling down.\",\r\n-//       action: scrollDown,\r\n-//     },\r\n-//     {\r\n-//       utterance: \"scroll to top\",\r\n-//       action: scrollToTop,\r\n-//     },\r\n-//     {\r\n-//       utterance: \"scroll to bottom\",\r\n-//       action: scrollToBottom,\r\n-//     },\r\n-//     {\r\n-//       utterance: \"brane stop\",\r\n-//       action: stopListening,\r\n-//     },\r\n-//     {\r\n-//       utterance: \"brane turn off\",\r\n-//       action: stopListening,\r\n-//     },\r\n-//     {\r\n-//       utterance: \"brane stop the bot\",\r\n-//       action: stopListening,\r\n-//     },\r\n-//   ];\r\n-\r\n-//   return (\r\n-//     <div className=\"speech-bot-container\">\r\n-//       <div\r\n-//         className={`button-container ${\r\n-//           isListening ? \"voicebotframeactive\" : \"voicebotframe\"\r\n-//         }`}\r\n-//       >\r\n-//         <button onClick={isListening ? stopListening : startListening}>\r\n-//           {isListening ? \"Stop\" : \"Start\"} Animation\r\n-//         </button>\r\n-//         {/* <button onClick={toggleBotActive}>\r\n-//         {isBotActive ? 'Deactivate Bot' : 'Activate Bot'}\r\n-//       </button> \r\n-//       </div>\r\n-//     </div>\r\n-//   );\r\n-// };\r\n-\r\n-// export default VoiceBot; */}\r\n-\r\n-\r\n-\r\n-//iska v1\r\n-\r\n-// import React, { useState, useEffect, useRef } from \"react\";\r\n-// import { useNavigate, useLocation } from \"react-router-dom\";\r\n-// import Fuse from \"fuse.js\";\r\n-// import \"./VoiceBot.css\";\r\n-\r\n-// const VoiceBot = ({ videoRef}) => {\r\n-//   const [isListening, setIsListening] = useState(false);\r\n-//   const [isSpeaking, setIsSpeaking] = useState(false);\r\n-//   const recognition = useRef(null);\r\n-//   const speechSynthesis = useRef(window.speechSynthesis);\r\n-//   const [hasGreeted, setHasGreeted] = useState(false);\r\n-//   const navigate = useNavigate();\r\n-\r\n-\r\n-//  // Initialize speech recognition\r\n-//  useEffect(() => {\r\n-//   recognition.current = new window.webkitSpeechRecognition();\r\n-//   recognition.current.continuous = true;\r\n-//   recognition.current.interimResults = false;\r\n-//   recognition.current.onresult = onResult;\r\n-//   recognition.current.onend = onRecognitionEnd;\r\n-//   recognition.current.starting = false;\r\n-\r\n-//   recognition.current.onerror = (event) => {\r\n-//     console.error(\"Recognition error:\", event.error);\r\n-//     if (isListening && !isSpeaking) {\r\n-//       restartRecognition();\r\n-//     }\r\n-//   };\r\n-\r\n-//   return () => {\r\n-//     if (recognition.current) {\r\n-//       recognition.current.abort();\r\n-//     }\r\n-//   };\r\n-// }, []);\r\n-\r\n-//   // useEffect(() => {\r\n-//   //   const checkRecognition = () => {\r\n-//   //     if (isListening && !isSpeaking && !recognition.current.starting) {\r\n-//   //       console.log(\"Restarting recognition because it's not active.\");\r\n-//   //       recognition.current.starting = true;\r\n-//   //       recognition.current.start();\r\n-//   //       console.log(\"Restarted recognition.\");\r\n-//   //     }\r\n-//   //   };\r\n-\r\n-//   //   const recognitionCheckInterval = setInterval(checkRecognition, 100); // Check every .5 second\r\n-\r\n-//   //   return () => {\r\n-//   //     clearInterval(recognitionCheckInterval);\r\n-//   //   };\r\n-//   // }, [isListening, isSpeaking]);\r\n-\r\n-\r\n-//   const historyStack = useRef([]);\r\n-\r\n-//   useEffect(() => {\r\n-//     return () => {\r\n-//       // Clean up the listener when the component unmounts\r\n-//       window.removeEventListener(\"popstate\", handlePopState);\r\n-//     };\r\n-//   }, []);\r\n-\r\n-//   const handlePopState = () => {\r\n-//     // This needs to handle both back and forward browser actions\r\n-//     // Use some logic to determine whether it's a back or forward action\r\n-//     // For simplicity, assume it's always back\r\n-//     historyStack.current.pop();\r\n-//     forwardStack.current.length = 0; // Clear forward stack on manual navigation\r\n-//   };\r\n-  \r\n-\r\n-//   // Add a new entry to the stack whenever navigate is called\r\n-//   const customNavigate = (to, options) => {\r\n-//     historyStack.current.push(to);\r\n-//     navigate(to, options);\r\n-//   };\r\n-\r\n-//   // Listen to popstate events to update the history stack\r\n-//   useEffect(() => {\r\n-//     window.addEventListener(\"popstate\", handlePopState);\r\n-//   }, []);\r\n-\r\n-//   const forwardStack = useRef([]);\r\n-\r\n-//   const goBack = () => {\r\n-//     if (window.history.state && window.history.state.idx > 0) {\r\n-//       window.history.back();\r\n-//       speak(\"Going back\");\r\n-//     } else {\r\n-//       speak(\"Can't go back any further.\");\r\n-//     }\r\n-//   };\r\n-\r\n-//   const goForward = () => {\r\n-//     if (window.history.state && window.history.state.idx < window.history.length - 1) {\r\n-//       window.history.forward();\r\n-//       speak(\"Going forward\");\r\n-//     } else {\r\n-//       speak(\"No forward history available.\");\r\n-//     }\r\n-//   };\r\n-\r\n-//   const playVideo = () => {\r\n-//     if (videoRef.current) {\r\n-//       videoRef.current.play();\r\n-//       speak(\"Playing video.\");\r\n-//     } else {\r\n-//       speak(\"No video to play.\");\r\n-//     }\r\n-//   };\r\n-\r\n-//   const pauseVideo = () => {\r\n-//     if (videoRef.current) {\r\n-//       videoRef.current.pause();\r\n-//       speak(\"Video paused.\");\r\n-//     } else {\r\n-//       speak(\"No video to pause.\");\r\n-//     }\r\n-//   };\r\n-\r\n-//   const scrollAmount = window.innerHeight * 0.82;\r\n-\r\n-//   const scrollUp = () => {\r\n-//     if (window.pageYOffset === 0) {\r\n-//       speak(\"Already at the top of the page.\");\r\n-//     } else {\r\n-//       window.scrollBy(0, -scrollAmount);\r\n-//       speak(\"Scrolled up.\");\r\n-//     }\r\n-//   };\r\n-\r\n-//   const scrollDown = () => {\r\n-//     const maxScrollTop =\r\n-//       document.documentElement.scrollHeight - window.innerHeight;\r\n-//     if (window.pageYOffset >= maxScrollTop) {\r\n-//       speak(\"Already at the bottom of the page.\");\r\n-//     } else {\r\n-//       window.scrollBy(0, scrollAmount);\r\n-//       speak(\"Scrolled down.\");\r\n-//     }\r\n-//   };\r\n-\r\n-//   const scrollToTop = () => {\r\n-//     if (window.pageYOffset === 0) {\r\n-//       speak(\"Already at the top of the page.\");\r\n-//     } else {\r\n-//       window.scrollTo(0, 0);\r\n-//       speak(\"Scrolled to the top of the page.\");\r\n-//     }\r\n-//   };\r\n-\r\n-//   const scrollToBottom = () => {\r\n-//     const maxScrollTop =\r\n-//       document.documentElement.scrollHeight - window.innerHeight;\r\n-//     if (window.pageYOffset >= maxScrollTop) {\r\n-//       speak(\"Already at the bottom of the page.\");\r\n-//     } else {\r\n-//       window.scrollTo(0, document.body.scrollHeight);\r\n-//       speak(\"Scrolled to the bottom of the page.\");\r\n-//     }\r\n-//   };\r\n-\r\n-//   const speak = (message) => {\r\n-//     const utterance = new SpeechSynthesisUtterance(message);\r\n-//     utterance.onend = () => {\r\n-//       setIsSpeaking(false);\r\n-//       // Restart recognition after speaking has ended\r\n-//       if (isListening) {\r\n-//         restartRecognition();\r\n-//       }\r\n-//     };\r\n-  \r\n-//     setIsSpeaking(true);\r\n-//     // Stop recognition when the bot starts speaking\r\n-//     if (recognition.current) {\r\n-//       recognition.current.abort();\r\n-//     }\r\n-//     speechSynthesis.current.speak(utterance);\r\n-//   };\r\n-  \r\n-\r\n-//   const restartRecognition = () => {\r\n-//     // Check if recognition is not already started and if the bot is set to listen\r\n-//     if (recognition.current && !recognition.current.starting && isListening && !isSpeaking) {\r\n-//       // Only start recognition if it's not already active\r\n-//       if (recognition.current.state !== 'active') {\r\n-//         recognition.current.abort(); // Ensure any ongoing recognition is stopped\r\n-//         recognition.current.starting = true;\r\n-//         recognition.current.start();\r\n-//       }\r\n-//     }\r\n-//   };\r\n-  \r\n-  \r\n-//     // Restart recognition when bot finishes speaking and isListening is true\r\n-//     useEffect(() => {\r\n-//       if (!isSpeaking && isListening) {\r\n-//         restartRecognition();\r\n-//       }\r\n-//     }, [isSpeaking, isListening]);\r\n-\r\n-//   const onResult = (event) => {\r\n-//     const resultIndex = event.resultIndex;\r\n-//     const transcript = event.results[resultIndex][0].transcript\r\n-//       .trim()\r\n-//       .toLowerCase();\r\n-\r\n-//     if (event.results[resultIndex].isFinal) {\r\n-//       console.log(`Recognized text: ${transcript}`);\r\n-//       if (transcript.includes(\"brain\")) {\r\n-//         console.log(\"Wake word heard, processing command...\");\r\n-//         handleCommandWithFuse(transcript.replace(\"brain\", \"\"));\r\n-//       }\r\n-//     }\r\n-//   };\r\n-\r\n-//   const onRecognitionEnd = () => {\r\n-//     recognition.current.starting = false;\r\n-//     if (isListening && !isSpeaking) {\r\n-//       restartRecognition();\r\n-//     }\r\n-//   };\r\n-\r\n-//   useEffect(() => {\r\n-//     if (isListening && !hasGreeted) {\r\n-//       speak(\"Hello, I'm Brane. How can I help you today?\");\r\n-//       setHasGreeted(true);\r\n-//     }\r\n-//   }, [isListening, hasGreeted]);\r\n-\r\n-\r\n-// // Updated startListening function\r\n-// const startListening = () => {\r\n-//   setIsListening(true);\r\n-//   if (recognition.current && !recognition.current.starting) {\r\n-//     recognition.current.start();\r\n-//   }\r\n-// };\r\n-\r\n-// // Updated stopListening function\r\n-// const stopListening = () => {\r\n-//   setIsListening(false);\r\n-//   setIsSpeaking(false); // Reset speaking state\r\n-//   setHasGreeted(false); // Reset greeting state if needed\r\n-//   if (recognition.current) {\r\n-//     recognition.current.abort(); // Stop any ongoing speech recognition\r\n-//   }\r\n-//   if (speechSynthesis.current.speaking) {\r\n-//     speechSynthesis.current.cancel(); // Stop any ongoing speech synthesis\r\n-//   }\r\n-// };\r\n-\r\n-\r\n-\r\n-//   const handleCommandWithFuse = (command) => {\r\n-//     const fuse = new Fuse(commands, { keys: [\"utterance\"], threshold: 0.4 });\r\n-//     const results = fuse.search(command);\r\n-//     const foundCommand = results.length ? results[0].item : null;\r\n-\r\n-//     if (foundCommand) {\r\n-//       console.log(\"Command found:\", foundCommand.utterance);\r\n-\r\n-//       if (foundCommand.action) {\r\n-//         foundCommand.action();\r\n-//       } else if (foundCommand.route) {\r\n-//         navigate(foundCommand.route);\r\n-//       }\r\n-\r\n-//       // Speak after performing the action or navigation\r\n-//       speak(foundCommand.response);\r\n-//     } else {\r\n-//       console.log(\"No command found.\");\r\n-//       speak(\"I'm not sure how to respond to that.\");\r\n-//     }\r\n-//   };\r\n-\r\n-//   const commands = [\r\n-//     {\r\n-//       utterance: \"Hello who are you ?\",\r\n-\r\n-//       response:\r\n-//         \"Hi! This is Brane! your Voice bot from Brane Education How can I Assist you Today ?\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"Hello\",\r\n-\r\n-//       response: \"Hi! How can I assist you today?\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"hello\",\r\n-\r\n-//       response: \"Hi! How can I assist you today?\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"Hi.\",\r\n-\r\n-//       response: \"Hello! How can I assist you today?\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"Hey there\",\r\n-\r\n-//       response: \"Hi! How can I assist you today?\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"Good morning Brane.\",\r\n-\r\n-//       response: \"Hey Hiii! Good morning  ! How can I help you?\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"Good afternoon Brane.\",\r\n-\r\n-//       response: \"Hey Hiii! Good after noon ! How can I help you?\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"Good evening Brane.\",\r\n-\r\n-//       response: \"Hey Hiii! Good evening ! How can I help you?\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"can you please take me to login page\",\r\n-\r\n-//       route: \"/login\",\r\n-\r\n-//       response: \"Here's the Login Page, Please Login\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"please take me to login page\",\r\n-\r\n-//       route: \"/login\",\r\n-\r\n-//       response: \"Here's the Login Page, Please Login\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"Go to login page\",\r\n-\r\n-//       route: \"/login\",\r\n-\r\n-//       response: \"Here's the Login Page, Please Login\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"open login page\",\r\n-\r\n-//       route: \"/login\",\r\n-\r\n-//       response: \"Here's the Login Page, Please Login\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"can you please take me to signup page\",\r\n-\r\n-//       route: \"/signup\",\r\n-\r\n-//       response: \"Here's the signup page. Please proceed With Registration.\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"take me to signup page\",\r\n-\r\n-//       route: \"/signup\",\r\n-\r\n-//       response: \"Here's the signup page. Please proceed With Registration.\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"Go to signup page\",\r\n-\r\n-//       route: \"/signup\",\r\n-\r\n-//       response: \"Here's the signup page. Please proceed With Registration.\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"open signup page\",\r\n-\r\n-//       route: \"/signup\",\r\n-\r\n-//       response: \"Here's the signup page. Please proceed With Registration.\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"Go to face id\",\r\n-\r\n-//       route: \"/login/faceid\",\r\n-\r\n-//       response: \"Here's Face ID Login. Please proceed.\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"Go to face id login\",\r\n-\r\n-//       route: \"/login/faceid\",\r\n-\r\n-//       response: \"Here's Face ID Login. Please proceed.\",\r\n-//     },\r\n-//     {\r\n-//       utterance: \"Go to face login\",\r\n-\r\n-//       route: \"/login/faceid\",\r\n-\r\n-//       response: \"Here's Face ID Login. Please proceed.\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"login with face id\",\r\n-\r\n-//       route: \"/login/faceid\",\r\n-\r\n-//       response: \"Here's Face ID Login. Please proceed.\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"login with face\",\r\n-\r\n-//       route: \"/login/faceid\",\r\n-\r\n-//       response: \"Here's Face ID Login. Please proceed.\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"i want to login with face\",\r\n-\r\n-//       route: \"/login/faceid\",\r\n-\r\n-//       response: \"Here's Face ID Login. Please proceed.\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"login with voice\",\r\n-\r\n-//       route: \"/login/voiceid\",\r\n-\r\n-//       response: \"Here's Voice Login. Please proceed.\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"i want to login with voice\",\r\n-\r\n-//       route: \"/login/voiceid\",\r\n-\r\n-//       response: \"Here's Voice Login. Please proceed.\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"go to voice login\",\r\n-\r\n-//       route: \"/login/voiceid\",\r\n-\r\n-//       response: \"Here's Voice Login. Please proceed.\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"login with voice\",\r\n-\r\n-//       route: \"/login/voiceid\",\r\n-\r\n-//       response: \"Here's Voice Login. Please proceed.\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"login with mobile\",\r\n-\r\n-//       route: \"/login/mobile\",\r\n-\r\n-//       response: \"Here's Mobile Login. Please proceed.\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"i want to login with mobile\",\r\n-\r\n-//       route: \"/login/mobile\",\r\n-\r\n-//       response: \"Here's Mobile Login. Please proceed.\",\r\n-//     },\r\n-//     {\r\n-//       utterance: \"go to mobile login\",\r\n-\r\n-//       route: \"/login/mobile\",\r\n-\r\n-//       response: \"Here's Mobile Login. Please proceed.\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"what are platform features\",\r\n-\r\n-//       response:\r\n-//         \"Dashboard, Dynamic time table, Learning Networks, Little Masters, Video Based Dictionary, General Search.\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"Features of platform\",\r\n-\r\n-//       response:\r\n-//         \"Dashboard, Dynamic time table, Learning Networks, Little Masters, Video Based Dictionary, General Search.\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"What does the platform offer\",\r\n-\r\n-//       response:\r\n-//         \"Dashboard, Dynamic time table, Learning Networks, Little Masters, Video Based Dictionary, General Search.\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"Say me the features of platform\",\r\n-\r\n-//       response:\r\n-//         \"Dashboard, Dynamic time table, Learning Networks, Little Masters, Video Based Dictionary, General Search.\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"Say me the services of platform\",\r\n-\r\n-//       response:\r\n-//         \"Dashboard, Dynamic time table, Learning Networks, Little Masters, Video Based Dictionary, General Search.\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"tell me the services offered by the platform\",\r\n-\r\n-//       response:\r\n-//         \"Dashboard, Dynamic time table, Learning Networks, Little Masters, Video Based Dictionary, General Search.\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"explain platform services\",\r\n-\r\n-//       response:\r\n-//         \"Dashboard, Dynamic time table, Learning Networks, Little Masters, Video Based Dictionary, General Search.\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"Give me the Parent voice of Julia Harris\",\r\n-\r\n-//       response:\r\n-//         \"Brane education has helped my son a lot in his studies. He improved a lot in his studies and is now able to score good marks in his exams\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"Play today's motivational video\",\r\n-\r\n-//       response: \"I am playing the video\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"Play today's video\",\r\n-\r\n-//       response: \"I am playing Motivational video\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"Leaders Voice\",\r\n-\r\n-//       response:\r\n-//         \"This Voice-interactive AI Platform is a game Changer. It revolutionizes education.\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"Curriculum Supported by Brane Education\",\r\n-\r\n-//       response:\r\n-//         \"we support multiple Boards let me say few Telangana State Board Andhra Pradesh Board Maharashtra Board Assam Board\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"Boards supported by the platform\",\r\n-\r\n-//       response:\r\n-//         \"we support multiple Boards let me say few Telangana State Board Andhra Pradesh Board Maharashtra Board Assam Board\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"Curriculum\",\r\n-\r\n-//       response:\r\n-//         \"we support multiple Boards let me say few Telangana State Board Andhra Pradesh Board Maharashtra Board Assam Board\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"Go to landing page\",\r\n-\r\n-//       response: \"Okay, I am taking you to the landing page.\",\r\n-\r\n-//       route: \"/childpage\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"take me to landing page\",\r\n-\r\n-//       response: \"Okay, I am taking you to the landing page.\",\r\n-\r\n-//       route: \"/childpage\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"move to landing page\",\r\n-\r\n-//       response: \"Okay, I am taking you to the landing page.\",\r\n-\r\n-//       route: \"/childpage\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"roll back to landing page\",\r\n-\r\n-//       response: \"Okay, I am taking you to the landing page.\",\r\n-\r\n-//       route: \"/childpage\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"move to landing page\",\r\n-\r\n-//       response: \"Okay, I am taking you to the landing page.\",\r\n-\r\n-//       route: \"/childpage\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"what is today's quote\",\r\n-\r\n-//       response:\r\n-//         \"Determination is the power that sees us through all our frustration and obstacles. It helps in building our willpower which is the very basis of success.\",\r\n-\r\n-//       route: \"/childpage\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"Today's Inspirational quote\",\r\n-\r\n-//       response:\r\n-//         \"Determination is the power that sees us through all our frustration and obstacles. It helps in building our willpower which is the very basis of success.\",\r\n-\r\n-//       route: \"/childpage\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"say me today's quote\",\r\n-\r\n-//       response:\r\n-//         \"Determination is the power that sees us through all our frustration and obstacles. It helps in building our willpower which is the very basis of success.\",\r\n-\r\n-//       route: \"/childpage\",\r\n-//     },\r\n-//     {\r\n-//       utterance: \"go back\",\r\n-//       response: \"\",\r\n-//       action: goBack, // Note the use of an action property\r\n-//     },\r\n-//     {\r\n-//       utterance: \"go forward\",\r\n-//       response: \"\",\r\n-//       action: goForward,\r\n-//     },\r\n-//     {\r\n-//       utterance: \"play video\",\r\n-//       // response: \"Playing video.\",\r\n-//       action: playVideo,\r\n-//     },\r\n-//     {\r\n-//       utterance: \"pause video\",\r\n-//       // response: \"Pausing video.\",\r\n-//       action: pauseVideo,\r\n-//     },\r\n-//     {\r\n-//       utterance: \"start video\",\r\n-//       // response: \"Playing video.\",\r\n-//       action: playVideo,\r\n-//     },\r\n-//     {\r\n-//       utterance: \"stop video\",\r\n-//       // response: \"Playing video.\",\r\n-//       action: pauseVideo,\r\n-//     },\r\n-//     {\r\n-//       utterance: \"scroll up\",\r\n-//       // response: \"Scrolling up.\",\r\n-//       action: scrollUp,\r\n-//     },\r\n-//     {\r\n-//       utterance: \"scroll down\",\r\n-//       // response: \"Scrolling down.\",\r\n-//       action: scrollDown,\r\n-//     },\r\n-//     {\r\n-//       utterance: \"go up\",\r\n-\r\n-//       // response: \"Scrolling up.\",\r\n-//       action: scrollUp,\r\n-//     },\r\n-//     {\r\n-//       utterance: \"go down\",\r\n-//       // response: \"Scrolling down.\",\r\n-//       action: scrollDown,\r\n-//     },\r\n-//     {\r\n-//       utterance: \"scroll to top\",\r\n-//       action: scrollToTop,\r\n-//     },\r\n-//     {\r\n-//       utterance: \"scroll to bottom\",\r\n-//       action: scrollToBottom,\r\n-//     },\r\n-//     {\r\n-//       utterance: \"brane stop\",\r\n-//       action: stopListening,\r\n-//     },\r\n-//     {\r\n-//       utterance: \"brane turn off\",\r\n-//       action: stopListening,\r\n-//     },\r\n-//     {\r\n-//       utterance: \"brane stop the bot\",\r\n-//       action: stopListening,\r\n-//     },\r\n-//   ];\r\n-\r\n-//   return (\r\n-//     <div className=\"speech-bot-container\">\r\n-//       <div\r\n-//         className={`button-container ${\r\n-//           isListening ? \"voicebotframeactive\" : \"voicebotframe\"\r\n-//         }`}\r\n-//       >\r\n-//         <button onClick={isListening ? stopListening : startListening}>\r\n-//           {isListening ? \"Stop\" : \"Start\"} Animation\r\n-//         </button>\r\n-//         {/* <button onClick={toggleBotActive}>\r\n-//         {isBotActive ? 'Deactivate Bot' : 'Activate Bot'}\r\n-//       </button> */}\r\n-//       </div>\r\n-//     </div>\r\n-//   );\r\n-// };\r\n-\r\n-// export default VoiceBot;\r\n-\r\n-\r\n-\r\n-\r\n-\r\n-\r\n-\r\n-\r\n-\r\n-\r\n-\r\n-\r\n-\r\n-\r\n-\r\n-\r\n-\r\n-\r\n-\r\n-\r\n-\r\n-\r\n-\r\n-\r\n-\r\n-\r\n-\r\n-\r\n-\r\n-\r\n-//Bot Video added but some start issues\r\n-\r\n-// import React, { useState, useEffect, useRef } from \"react\";\r\n-// import { useNavigate, useLocation } from \"react-router-dom\";\r\n-// import Fuse from \"fuse.js\";\r\n-// import \"./VoiceBot.css\";\r\n-\r\n-// const VoiceBot = ({ videoRef }) => {\r\n-//   const [isListening, setIsListening] = useState(false);\r\n-//   const [isSpeaking, setIsSpeaking] = useState(false);\r\n-//   const recognition = useRef(null);\r\n-//   const speechSynthesis = useRef(window.speechSynthesis);\r\n-//   const hasGreeted = useRef(false);\r\n-//   const restartRecognitionTimeout = useRef(null);\r\n-//   const navigate = useNavigate();\r\n-//   const location = useLocation();\r\n-//   const [isRecognitionActive, setIsRecognitionActive] = useState(false); // New state to track recognition status\r\n-\r\n-//   useEffect(() => {\r\n-//     recognition.current = new window.webkitSpeechRecognition();\r\n-//     recognition.current.continuous = true;\r\n-//     recognition.current.interimResults = false;\r\n-//     recognition.current.onresult = onResult;\r\n-//     recognition.current.onend = () => {\r\n-//       console.log(\"Recognition ended.\");\r\n-//       if (isListening) {\r\n-//         startListening();\r\n-//       }\r\n-//     };\r\n-//     recognition.current.onerror = (event) => {\r\n-//       console.error(\"Recognition error:\", event.error);\r\n-//     };\r\n-\r\n-//     return () => {\r\n-//       recognition.current.abort();\r\n-//     };\r\n-//   }, []);\r\n-\r\n-//   // Update useEffect for managing the recognition state based on isListening and isRecognitionActive\r\n-//   useEffect(() => {\r\n-//     if (isListening && !isRecognitionActive) {\r\n-//       startListening();\r\n-//     } else if (!isListening && isRecognitionActive) {\r\n-//       stopListening();\r\n-//     }\r\n-//   }, [isListening, isRecognitionActive]);\r\n-\r\n-//   const goBack = () => {\r\n-//     if (window.history.length > 1) {\r\n-//       navigate(-1);\r\n-//     } else {\r\n-//       speak(\"Can't go back any further.\");\r\n-//     }\r\n-//   };\r\n-\r\n-//   const goForward = () => {\r\n-//     // Unfortunately, there's no direct way to check if you can go forward in the history.\r\n-//     // You might need to manage this state manually based on user navigation.\r\n-//     navigate(1);\r\n-//   };\r\n-\r\n-//   const playVideo = () => {\r\n-//     if (videoRef.current && !videoRef.current.paused) {\r\n-//       speak(\"Video is already playing.\");\r\n-//     } else if (videoRef.current) {\r\n-//       videoRef.current.play();\r\n-//       speak(\"Playing video.\");\r\n-//     } else {\r\n-//       speak(\"No video to play.\");\r\n-//     }\r\n-//   };\r\n-\r\n-//   const pauseVideo = () => {\r\n-//     if (videoRef.current && videoRef.current.paused) {\r\n-//       speak(\"Video is already paused.\");\r\n-//     } else if (videoRef.current) {\r\n-//       videoRef.current.pause();\r\n-//       speak(\"Video paused.\");\r\n-//     } else {\r\n-//       speak(\"No video to pause.\");\r\n-//     }\r\n-//   };\r\n-\r\n-//   const scrollAmount = window.innerHeight * 0.82;\r\n-\r\n-//   const scrollUp = () => {\r\n-//     if (window.pageYOffset === 0) {\r\n-//       speak(\"Already at the top of the page.\");\r\n-//     } else {\r\n-//       window.scrollBy(0, -scrollAmount);\r\n-//       speak(\"Scrolled up.\");\r\n-//     }\r\n-//   };\r\n-\r\n-//   const scrollDown = () => {\r\n-//     const maxScrollTop =\r\n-//       document.documentElement.scrollHeight - window.innerHeight;\r\n-//     if (window.pageYOffset >= maxScrollTop) {\r\n-//       speak(\"Already at the bottom of the page.\");\r\n-//     } else {\r\n-//       window.scrollBy(0, scrollAmount);\r\n-//       speak(\"Scrolled down.\");\r\n-//     }\r\n-//   };\r\n-\r\n-//   const scrollToTop = () => {\r\n-//     if (window.pageYOffset === 0) {\r\n-//       speak(\"Already at the top of the page.\");\r\n-//     } else {\r\n-//       window.scrollTo(0, 0);\r\n-//       speak(\"Scrolled to the top of the page.\");\r\n-//     }\r\n-//   };\r\n-\r\n-//   const scrollToBottom = () => {\r\n-//     const maxScrollTop =\r\n-//       document.documentElement.scrollHeight - window.innerHeight;\r\n-//     if (window.pageYOffset >= maxScrollTop) {\r\n-//       speak(\"Already at the bottom of the page.\");\r\n-//     } else {\r\n-//       window.scrollTo(0, document.body.scrollHeight);\r\n-//       speak(\"Scrolled to the bottom of the page.\");\r\n-//     }\r\n-//   };\r\n-\r\n-//   // const speak = (message) => {\r\n-//   //   const utterance = new SpeechSynthesisUtterance(message);\r\n-//   //   utterance.onend = () => {\r\n-//   //     setIsSpeaking(false);\r\n-//   //     console.log(\"Speaking ended.\");\r\n-//   //     // Only restart recognition if we're still supposed to be listening\r\n-//   //     // if (isListening) {\r\n-//   //     //   if (restartRecognitionTimeout.current) {\r\n-//   //     //     clearTimeout(restartRecognitionTimeout.current);\r\n-//   //     //   }\r\n-//   //     //   restartRecognitionTimeout.current = setTimeout(() => {\r\n-//   //     //     console.log(\"Recognition restarted.\");\r\n-//   //     //     recognition.current.start();\r\n-//   //     //   }, 100); // Delay to prevent immediate restart\r\n-//   //     // }\r\n-//   //     if (isListening && !recognition.current.starting) { // Check the flag before restarting\r\n-//   //       recognition.current.starting = true; // Set the flag when starting recognition\r\n-//   //       recognition.current.start();\r\n-//   //     }\r\n-//   //   };\r\n-\r\n-//   //   setIsSpeaking(true);\r\n-//   //   console.log(\"Speaking started.\");\r\n-//   //   recognition.current.stop(); // Stop recognition when the bot starts speaking\r\n-//   //   speechSynthesis.current.speak(utterance);\r\n-//   // };\r\n-\r\n-//   const speak = (message) => {\r\n-//     console.log(\"speak function called with message:\", message);\r\n-//     const utterance = new SpeechSynthesisUtterance(message);\r\n-//     utterance.onend = () => {\r\n-//       setIsSpeaking(false);\r\n-//       console.log(\"Speaking ended.\");\r\n-//       // Directly handle the restart of recognition here if needed\r\n-//       if (isListening) {\r\n-//         startListening();\r\n-//       }\r\n-//     };\r\n-\r\n-//     setIsSpeaking(true);\r\n-//     console.log(\"Speaking started.\");\r\n-//     recognition.current.stop(); // Ensure to stop recognition before speaking\r\n-//     speechSynthesis.current.speak(utterance);\r\n-//   };\r\n-\r\n-//   const onResult = (event) => {\r\n-//     const resultIndex = event.resultIndex;\r\n-//     const transcript = event.results[resultIndex][0].transcript\r\n-//       .trim()\r\n-//       .toLowerCase();\r\n-\r\n-//     if (event.results[resultIndex].isFinal) {\r\n-//       console.log(`Recognized text: ${transcript}`);\r\n-//       if (transcript.includes(\"brain\")) {\r\n-//         console.log(\"Wake word heard, processing command...\");\r\n-//         handleCommandWithFuse(transcript.replace(\"brain\", \"\"));\r\n-//       }\r\n-//     }\r\n-//   };\r\n-\r\n-//   // const onRecognitionEnd = () => {\r\n-//   //   console.log(\"Recognition ended.\");\r\n-//   //   setIsRecognitionActive(false); // Update state when recognition ends\r\n-//   //   recognition.current.starting = false; // Reset the flag when recognition ends\r\n-//   //   // We now check if the recognition is already running before starting it again\r\n-//   //   if (isListening && !isSpeaking && !recognition.current?.starting) {\r\n-//   //     console.log(\"Restarting recognition.\");\r\n-//   //     recognition.current.start();\r\n-//   //   }\r\n-//   // };\r\n-\r\n-//   // useEffect(() => {\r\n-//   //   if (isListening && !hasGreeted.current) {\r\n-//   //     speak(\"Hello, I'm Brane. How can I assist you today?\");\r\n-//   //     hasGreeted.current = true;\r\n-//   //   } else if (isListening && !isSpeaking) {\r\n-//   //     recognition.current.start();\r\n-//   //   }\r\n-//   // }, [isListening, isSpeaking]);\r\n-\r\n-//   useEffect(() => {\r\n-//     if (isListening && !hasGreeted.current) {\r\n-//       speak(\"Hello, I'm Brane. How can I assist you today?\");\r\n-//       hasGreeted.current = true;\r\n-//     } else if (isListening && !isSpeaking && !recognition.current.starting) {\r\n-//       // Check the flag before starting\r\n-//       recognition.current.starting = true; // Set the flag when starting recognition\r\n-//       recognition.current.start();\r\n-//     }\r\n-//   }, [isListening, isSpeaking]);\r\n-\r\n-//   // const startListening = () => {\r\n-//   //   console.log(\"Attempting to start listening.\");\r\n-//   //   if (recognition.current && !recognition.current.starting) {\r\n-//   //     setIsListening(true);\r\n-//   //     recognition.current.starting = true; // Set the flag when starting recognition\r\n-//   //     recognition.current.start();\r\n-//   //     console.log(\"Listening started.\");\r\n-//   //   }\r\n-//   // };\r\n-\r\n-//   // const stopListening = () => {\r\n-//   //   console.log(\"Stopping listening.\");\r\n-\r\n-//   //   setIsListening(false);\r\n-//   //   recognition.current.stop();\r\n-//   //   if (speechSynthesis.current.speaking) {\r\n-//   //     speechSynthesis.current.cancel();\r\n-//   //   }\r\n-//   //   if (restartRecognitionTimeout.current) {\r\n-//   //     clearTimeout(restartRecognitionTimeout.current);\r\n-//   //   }\r\n-//   //   console.log(\"Listening stopped.\");\r\n-//   // };\r\n-//   // Handle start and stop listening logic\r\n-//   const startListening = () => {\r\n-//     console.log(\"Attempting to start listening.\");\r\n-//     if (!recognition.current.starting) {\r\n-//       setIsListening(true);\r\n-//       recognition.current.starting = true;\r\n-//       recognition.current.start();\r\n-//       console.log(\"Listening started.\");\r\n-//     } else {\r\n-//       console.log(\"Recognition already active.\");\r\n-//     }\r\n-//   };\r\n-\r\n-//   const stopListening = () => {\r\n-//     console.log(\"Stopping listening.\");\r\n-//     if (recognition.current.starting) {\r\n-//       setIsListening(false);\r\n-//       recognition.current.starting = false;\r\n-//       recognition.current.stop();\r\n-//       console.log(\"Listening stopped.\");\r\n-//     } else {\r\n-//       console.log(\"Recognition already inactive.\");\r\n-//     }\r\n-//   };\r\n-\r\n-//   // const handleCommandWithFuse = (command) => {\r\n-//   //   const fuse = new Fuse(commands, { keys: [\"utterance\"], threshold: 0.4 });\r\n-//   //   const results = fuse.search(command);\r\n-//   //   const foundCommand = results.length ? results[0].item : null;\r\n-\r\n-//   //   if (foundCommand) {\r\n-//   //     console.log(\"Command found:\", foundCommand.utterance);\r\n-//   //     speak(foundCommand.response);\r\n-//   //     if (foundCommand.route) {\r\n-//   //       navigate(foundCommand.route); // Navigate to the route specified in the command\r\n-//   //     }\r\n-//   //   } else {\r\n-//   //     console.log(\"No command found.\");\r\n-//   //     speak(\"I'm not sure how to respond to that.\");\r\n-//   //   }\r\n-//   // };\r\n-\r\n-//   const handleCommandWithFuse = (command) => {\r\n-//     const fuse = new Fuse(commands, { keys: [\"utterance\"], threshold: 0.4 });\r\n-//     const results = fuse.search(command);\r\n-//     const foundCommand = results.length ? results[0].item : null;\r\n-\r\n-//     if (foundCommand) {\r\n-//       console.log(\"Command found:\", foundCommand.utterance);\r\n-\r\n-//       if (foundCommand.route) {\r\n-//         if (location.pathname !== foundCommand.route) {\r\n-//           navigate(foundCommand.route);\r\n-//           speak(\r\n-//             `Navigating to ${\r\n-//               foundCommand.routeDescription || \"requested page\"\r\n-//             }.`\r\n-//           );\r\n-//         } else {\r\n-//           speak(\r\n-//             `You are already on the ${\r\n-//               foundCommand.routeDescription || \"requested page\"\r\n-//             }.`\r\n-//           );\r\n-//         }\r\n-//       } else if (foundCommand.action) {\r\n-//         foundCommand.action();\r\n-//       }\r\n-\r\n-//       if (foundCommand.response) {\r\n-//         speak(foundCommand.response);\r\n-//       }\r\n-//     } else {\r\n-//       console.log(\"No command found.\");\r\n-//       speak(\"I'm not sure how to respond to that.\");\r\n-//     }\r\n-//   };\r\n-\r\n-//   const commands = [\r\n-//     {\r\n-//       utterance: \"Hello who are you ?\",\r\n-\r\n-//       response:\r\n-//         \"Hi! This is Brane! your Voice bot from Brane Education How can I Assist you Today ?\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"Hello\",\r\n-\r\n-//       response: \"Hi! How can I assist you today?\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"hello\",\r\n-\r\n-//       response: \"Hi! How can I assist you today?\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"Hi.\",\r\n-\r\n-//       response: \"Hello! How can I assist you today?\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"Hey there\",\r\n-\r\n-//       response: \"Hi! How can I assist you today?\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"Good morning Brane.\",\r\n-\r\n-//       response: \"Hey Hiii! Good morning  ! How can I help you?\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"Good afternoon Brane.\",\r\n-\r\n-//       response: \"Hey Hiii! Good after noon ! How can I help you?\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"Good evening Brane.\",\r\n-\r\n-//       response: \"Hey Hiii! Good evening ! How can I help you?\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"can you please take me to login page\",\r\n-//       route: \"/login\",\r\n-//       routeDescription: \"login page\",\r\n-//       response: \"Navigating to the login page.\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"go to login page\",\r\n-//       route: \"/login\",\r\n-//       routeDescription: \"login page\",\r\n-//       response: \"Navigating to the login page.\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"please take me to login page\",\r\n-//       route: \"/login\",\r\n-//       routeDescription: \"login page\",\r\n-//       response: \"Navigating to the login page.\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"Go to login page\",\r\n-//       route: \"/login\",\r\n-//       routeDescription: \"login page\",\r\n-//       response: \"Navigating to the login page.\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"open login page\",\r\n-//       route: \"/login\",\r\n-//       routeDescription: \"login page\",\r\n-//       response: \"Navigating to the login page.\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"can you please take me to signup page\",\r\n-//       route: \"/signup\",\r\n-//       routeDescription: \"signup page\",\r\n-//       response: \"Navigating to the signup page.\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"take me to signup page\",\r\n-//       route: \"/signup\",\r\n-//       routeDescription: \"signup page\",\r\n-//       response: \"Navigating to the signup page.\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"Go to signup page\",\r\n-//       route: \"/signup\",\r\n-//       routeDescription: \"signup page\",\r\n-//       response: \"Navigating to the signup page.\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"open signup page\",\r\n-//       route: \"/signup\",\r\n-//       routeDescription: \"signup page\",\r\n-//       response: \"Navigating to the signup page.\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"what are platform features\",\r\n-\r\n-//       response:\r\n-//         \"Dashboard, Dynamic time table, Learning Networks, Little Masters, Video Based Dictionary, General Search.\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"Features of platform\",\r\n-\r\n-//       response:\r\n-//         \"Dashboard, Dynamic time table, Learning Networks, Little Masters, Video Based Dictionary, General Search.\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"What does the platform offer\",\r\n-\r\n-//       response:\r\n-//         \"Dashboard, Dynamic time table, Learning Networks, Little Masters, Video Based Dictionary, General Search.\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"Say me the features of platform\",\r\n-\r\n-//       response:\r\n-//         \"Dashboard, Dynamic time table, Learning Networks, Little Masters, Video Based Dictionary, General Search.\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"Say me the services of platform\",\r\n-\r\n-//       response:\r\n-//         \"Dashboard, Dynamic time table, Learning Networks, Little Masters, Video Based Dictionary, General Search.\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"tell me the services offered by the platform\",\r\n-\r\n-//       response:\r\n-//         \"Dashboard, Dynamic time table, Learning Networks, Little Masters, Video Based Dictionary, General Search.\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"explain platform services\",\r\n-\r\n-//       response:\r\n-//         \"Dashboard, Dynamic time table, Learning Networks, Little Masters, Video Based Dictionary, General Search.\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"Give me the Parent voice of Julia Harris\",\r\n-\r\n-//       response:\r\n-//         \"Brane education has helped my son a lot in his studies. He improved a lot in his studies and is now able to score good marks in his exams\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"Play today's motivational video\",\r\n-\r\n-//       response: \"I am playing the video\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"Play today's video\",\r\n-\r\n-//       response: \"I am playing Motivational video\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"Leaders Voice\",\r\n-\r\n-//       response:\r\n-//         \"This Voice-interactive AI Platform is a game Changer. It revolutionizes education.\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"Curriculum Supported by Brane Education\",\r\n-\r\n-//       response:\r\n-//         \"we support multiple Boards let me say few Telangana State Board Andhra Pradesh Board Maharashtra Board Assam Board\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"Boards supported by the platform\",\r\n-\r\n-//       response:\r\n-//         \"we support multiple Boards let me say few Telangana State Board Andhra Pradesh Board Maharashtra Board Assam Board\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"Curriculum\",\r\n-\r\n-//       response:\r\n-//         \"we support multiple Boards let me say few Telangana State Board Andhra Pradesh Board Maharashtra Board Assam Board\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"Go to landing page\",\r\n-\r\n-//       response: \"Okay, I am taking you to the landing page.\",\r\n-\r\n-//       route: \"/childpage\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"take me to landing page\",\r\n-\r\n-//       response: \"Okay, I am taking you to the landing page.\",\r\n-\r\n-//       route: \"/childpage\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"move to landing page\",\r\n-\r\n-//       response: \"Okay, I am taking you to the landing page.\",\r\n-\r\n-//       route: \"/childpage\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"roll back to landing page\",\r\n-\r\n-//       response: \"Okay, I am taking you to the landing page.\",\r\n-\r\n-//       route: \"/childpage\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"move to landing page\",\r\n-\r\n-//       response: \"Okay, I am taking you to the landing page.\",\r\n-\r\n-//       route: \"/childpage\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"what is today's quote\",\r\n-\r\n-//       response:\r\n-//         \"Determination is the power that sees us through all our frustration and obstacles. It helps in building our willpower which is the very basis of success.\",\r\n-\r\n-//       // route: \"/childpage\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"Today's Inspirational quote\",\r\n-\r\n-//       response:\r\n-//         \"Determination is the power that sees us through all our frustration and obstacles. It helps in building our willpower which is the very basis of success.\",\r\n-\r\n-//       // route: \"/childpage\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"say me today's quote\",\r\n-\r\n-//       response:\r\n-//         \"Determination is the power that sees us through all our frustration and obstacles. It helps in building our willpower which is the very basis of success.\",\r\n-\r\n-//       // route: \"/childpage\",\r\n-//     },\r\n-//     {\r\n-//       utterance: \"go back\",\r\n-//       response: \"Going back.\",\r\n-//       action: goBack, // Note the use of an action property\r\n-//     },\r\n-//     {\r\n-//       utterance: \"go forward\",\r\n-//       response: \"Going forward.\",\r\n-//       action: goForward,\r\n-//     },\r\n-//     {\r\n-//       utterance: \"play video\",\r\n-//       // response: \"Playing video.\",\r\n-//       action: playVideo,\r\n-//     },\r\n-//     {\r\n-//       utterance: \"pause video\",\r\n-//       // response: \"Pausing video.\",\r\n-//       action: pauseVideo,\r\n-//     },\r\n-//     {\r\n-//       utterance: \"start video\",\r\n-//       // response: \"Playing video.\",\r\n-//       action: playVideo,\r\n-//     },\r\n-//     {\r\n-//       utterance: \"stop video\",\r\n-//       // response: \"Playing video.\",\r\n-//       action: pauseVideo,\r\n-//     },\r\n-//     {\r\n-//       utterance: \"scroll up\",\r\n-//       // response: \"Scrolling up.\",\r\n-//       action: scrollUp,\r\n-//     },\r\n-//     {\r\n-//       utterance: \"scroll down\",\r\n-//       // response: \"Scrolling down.\",\r\n-//       action: scrollDown,\r\n-//     },\r\n-//     {\r\n-//       utterance: \"go up\",\r\n-\r\n-//       // response: \"Scrolling up.\",\r\n-//       action: scrollUp,\r\n-//     },\r\n-//     {\r\n-//       utterance: \"go down\",\r\n-//       // response: \"Scrolling down.\",\r\n-//       action: scrollDown,\r\n-//     },\r\n-//     {\r\n-//       utterance: \"scroll to top\",\r\n-//       action: scrollToTop,\r\n-//     },\r\n-//     {\r\n-//       utterance: \"scroll to bottom\",\r\n-//       action: scrollToBottom,\r\n-//     },\r\n-//   ];\r\n-//   return (\r\n-//     <div className=\"speech-bot-container\">\r\n-//       <div\r\n-//         className={`button-container ${\r\n-//           isListening ? \"voicebotframeactive\" : \"voicebotframe\"\r\n-//         }`}\r\n-//       >\r\n-//         <div onClick={isListening ? stopListening : startListening}>\r\n-//           <iframe\r\n-//             src={\r\n-//               isListening\r\n-//                 ? \"https://lottie.host/?file=a89aca3f-5407-4052-82c3-2048afca7a9f/NpCdWzLSKD.json\"\r\n-//                 : \"https://lottie.host/?file=d2b6cc0e-fe95-4847-85b5-35365fca7e00/vTudpCuPZq.json\"\r\n-//             }\r\n-//             width=\"120\" // Set your desired width\r\n-//             height=\"120\" // Set your desired height\r\n-//             title={isListening ? \"Stop Animation\" : \"Start Animation\"}\r\n-//             className={isListening ? \"voicebotframeactive\" : \"voicebotframe\"}\r\n-//           ></iframe>\r\n-//           {isListening ? (\r\n-//             <div className=\"overlay\" onClick={stopListening}></div>\r\n-//           ) : (\r\n-//             <div className=\"overlay\" onClick={startListening}></div>\r\n-//           )}\r\n-//         </div>\r\n-//       </div>\r\n-//     </div>\r\n-//   );\r\n-// };\r\n-\r\n-// export default VoiceBot;\r\n-\r\n-// All functionalities but messed up\r\n-\r\n-// import React, { useState, useEffect, useRef } from \"react\";\r\n-// import { useNavigate, useLocation } from \"react-router-dom\";\r\n-// import Fuse from \"fuse.js\";\r\n-// import \"./VoiceBot.css\";\r\n-\r\n-// const VoiceBot = ({ videoRef, takeTestRef, goBackRef }) => {\r\n-//   const [isListening, setIsListening] = useState(false);\r\n-//   const [isSpeaking, setIsSpeaking] = useState(false);\r\n-//   const recognition = useRef(null);\r\n-//   const speechSynthesis = useRef(window.speechSynthesis);\r\n-//   const hasGreeted = useRef(false);\r\n-//   const navigate = useNavigate();\r\n-//   const location = useLocation();\r\n-//   const isRecognitionActive = useRef(false);\r\n-\r\n-//   useEffect(() => {\r\n-//     recognition.current = new window.webkitSpeechRecognition();\r\n-//     recognition.current.continuous = true;\r\n-//     recognition.current.interimResults = false;\r\n-//     recognition.current.onresult = onResult;\r\n-//     recognition.current.onend = onRecognitionEnd;\r\n-\r\n-//     return () => {\r\n-//       if (recognition.current) {\r\n-//         recognition.current.abort();\r\n-//       }\r\n-//     };\r\n-//   }, [location.pathname]);\r\n-\r\n-//   const onResult = (event) => {\r\n-//     const resultIndex = event.resultIndex;\r\n-//     const transcript = event.results[resultIndex][0].transcript\r\n-//       .trim()\r\n-//       .toLowerCase();\r\n-\r\n-//     if (event.results[resultIndex].isFinal) {\r\n-//       console.log(`Recognized text: ${transcript}`);\r\n-//       if (transcript.includes(\"brain\")) {\r\n-//         console.log(\"Wake word heard, processing command...\");\r\n-//         handleCommandWithFuse(transcript.replace(\"brain\", \"\"));\r\n-//       }\r\n-//     }\r\n-//   };\r\n-\r\n-//   const startListening = () => {\r\n-//     if (!isRecognitionActive.current) {\r\n-//       setIsListening(true);\r\n-//       recognition.current.start();\r\n-//       isRecognitionActive.current = true;\r\n-//     }\r\n-//   };\r\n-\r\n-//   const stopListening = () => {\r\n-//     if (isRecognitionActive.current) {\r\n-//       setIsListening(false);\r\n-//       recognition.current.stop();\r\n-//       isRecognitionActive.current = false;\r\n-//     }\r\n-//   };\r\n-\r\n-//   const onRecognitionEnd = () => {\r\n-//     isRecognitionActive.current = false;\r\n-//     if (isListening) {\r\n-//       startListening();\r\n-//     }\r\n-//   };\r\n-\r\n-//   const speak = (message) => {\r\n-//     const utterance = new SpeechSynthesisUtterance(message);\r\n-//     utterance.onend = () => {\r\n-//       setIsSpeaking(false);\r\n-//       if (isListening && !isRecognitionActive.current) {\r\n-//         startListening();\r\n-//       }\r\n-//     };\r\n-\r\n-//     setIsSpeaking(true);\r\n-//     if (isRecognitionActive.current) {\r\n-//       stopListening(); // Adjusted to use stopListening\r\n-//     }\r\n-//     speechSynthesis.current.speak(utterance);\r\n-//   };\r\n-\r\n-//   useEffect(() => {\r\n-//     if (isListening && !hasGreeted.current) {\r\n-//       speak(\"Hello, I'm Brane. How can I assist you today?\");\r\n-//       hasGreeted.current = true;\r\n-//     }\r\n-//   }, [isListening]);\r\n-\r\n-//   const goBack = () => {\r\n-//     if (window.history.length > 1) {\r\n-//       navigate(-1);\r\n-//     } else {\r\n-//       speak(\"Can't go back any further.\");\r\n-//     }\r\n-//   };\r\n-\r\n-//   const goForward = () => {\r\n-//     // Unfortunately, there's no direct way to check if you can go forward in the history.\r\n-//     // You might need to manage this state manually based on user navigation.\r\n-//     navigate(1);\r\n-//   };\r\n-\r\n-//   const playVideo = () => {\r\n-//     if (videoRef.current && !videoRef.current.paused) {\r\n-//       speak(\"Video is already playing.\");\r\n-//     } else if (videoRef.current) {\r\n-//       videoRef.current.play();\r\n-//       speak(\"Playing video.\");\r\n-//     } else {\r\n-//       speak(\"No video to play.\");\r\n-//     }\r\n-//   };\r\n-\r\n-//   const pauseVideo = () => {\r\n-//     if (videoRef.current && videoRef.current.paused) {\r\n-//       speak(\"Video is already paused.\");\r\n-//     } else if (videoRef.current) {\r\n-//       videoRef.current.pause();\r\n-//       speak(\"Video paused.\");\r\n-//     } else {\r\n-//       speak(\"No video to pause.\");\r\n-//     }\r\n-//   };\r\n-\r\n-//   const scrollAmount = window.innerHeight * 0.82;\r\n-\r\n-//   const scrollUp = () => {\r\n-//     if (window.pageYOffset === 0) {\r\n-//       speak(\"Already at the top of the page.\");\r\n-//     } else {\r\n-//       window.scrollBy(0, -scrollAmount);\r\n-//       speak(\"Scrolled up.\");\r\n-//     }\r\n-//   };\r\n-\r\n-//   const scrollDown = () => {\r\n-//     const maxScrollTop =\r\n-//       document.documentElement.scrollHeight - window.innerHeight;\r\n-//     if (window.pageYOffset >= maxScrollTop) {\r\n-//       speak(\"Already at the bottom of the page.\");\r\n-//     } else {\r\n-//       window.scrollBy(0, scrollAmount);\r\n-//       speak(\"Scrolled down.\");\r\n-//     }\r\n-//   };\r\n-\r\n-//   const scrollToTop = () => {\r\n-//     if (window.pageYOffset === 0) {\r\n-//       speak(\"Already at the top of the page.\");\r\n-//     } else {\r\n-//       window.scrollTo(0, 0);\r\n-//       speak(\"Scrolled to the top of the page.\");\r\n-//     }\r\n-//   };\r\n-\r\n-//   const scrollToBottom = () => {\r\n-//     const maxScrollTop =\r\n-//       document.documentElement.scrollHeight - window.innerHeight;\r\n-//     if (window.pageYOffset >= maxScrollTop) {\r\n-//       speak(\"Already at the bottom of the page.\");\r\n-//     } else {\r\n-//       window.scrollTo(0, document.body.scrollHeight);\r\n-//       speak(\"Scrolled to the bottom of the page.\");\r\n-//     }\r\n-//   };\r\n-\r\n-//   // const speak = (message) => {\r\n-//   //   const utterance = new SpeechSynthesisUtterance(message);\r\n-//   //   utterance.onend = () => {\r\n-//   //     setIsSpeaking(false);\r\n-//   //     console.log(\"Speaking ended.\");\r\n-//   //     // Only restart recognition if we're still supposed to be listening\r\n-//   //     // if (isListening) {\r\n-//   //     //   if (restartRecognitionTimeout.current) {\r\n-//   //     //     clearTimeout(restartRecognitionTimeout.current);\r\n-//   //     //   }\r\n-//   //     //   restartRecognitionTimeout.current = setTimeout(() => {\r\n-//   //     //     console.log(\"Recognition restarted.\");\r\n-//   //     //     recognition.current.start();\r\n-//   //     //   }, 100); // Delay to prevent immediate restart\r\n-//   //     // }\r\n-//   //     if (isListening && !recognition.current.starting) { // Check the flag before restarting\r\n-//   //       recognition.current.starting = true; // Set the flag when starting recognition\r\n-//   //       recognition.current.start();\r\n-//   //     }\r\n-//   //   };\r\n-\r\n-//   //   setIsSpeaking(true);\r\n-//   //   console.log(\"Speaking started.\");\r\n-//   //   recognition.current.stop(); // Stop recognition when the bot starts speaking\r\n-//   //   speechSynthesis.current.speak(utterance);\r\n-//   // };\r\n-\r\n-//   // const onRecognitionEnd = () => {\r\n-//   //   console.log(\"Recognition ended.\");\r\n-//   //   setIsRecognitionActive(false); // Update state when recognition ends\r\n-//   //   recognition.current.starting = false; // Reset the flag when recognition ends\r\n-//   //   // We now check if the recognition is already running before starting it again\r\n-//   //   if (isListening && !isSpeaking && !recognition.current?.starting) {\r\n-//   //     console.log(\"Restarting recognition.\");\r\n-//   //     recognition.current.start();\r\n-//   //   }\r\n-//   // };\r\n-\r\n-//   // useEffect(() => {\r\n-//   //   if (isListening && !hasGreeted.current) {\r\n-//   //     speak(\"Hello, I'm Brane. How can I assist you today?\");\r\n-//   //     hasGreeted.current = true;\r\n-//   //   } else if (isListening && !isSpeaking) {\r\n-//   //     recognition.current.start();\r\n-//   //   }\r\n-//   // }, [isListening, isSpeaking]);\r\n-\r\n-//   // const startListening = () => {\r\n-//   //   console.log(\"Attempting to start listening.\");\r\n-//   //   if (recognition.current && !recognition.current.starting) {\r\n-//   //     setIsListening(true);\r\n-//   //     recognition.current.starting = true; // Set the flag when starting recognition\r\n-//   //     recognition.current.start();\r\n-//   //     console.log(\"Listening started.\");\r\n-//   //   }\r\n-//   // };\r\n-\r\n-//   // const stopListening = () => {\r\n-//   //   console.log(\"Stopping listening.\");\r\n-\r\n-//   //   setIsListening(false);\r\n-//   //   recognition.current.stop();\r\n-//   //   if (speechSynthesis.current.speaking) {\r\n-//   //     speechSynthesis.current.cancel();\r\n-//   //   }\r\n-//   //   if (restartRecognitionTimeout.current) {\r\n-//   //     clearTimeout(restartRecognitionTimeout.current);\r\n-//   //   }\r\n-//   //   console.log(\"Listening stopped.\");\r\n-//   // };\r\n-//   // Handle start and stop listening logic\r\n-\r\n-//   useEffect(() => {\r\n-//     if (isListening && !hasGreeted.current) {\r\n-//       speak(\"Hello, I'm Brane. How can I assist you today?\");\r\n-//       hasGreeted.current = true;\r\n-//     }\r\n-//   }, [isListening]);\r\n-\r\n-//   // const handleCommandWithFuse = (command) => {\r\n-//   //   const fuse = new Fuse(commands, { keys: [\"utterance\"], threshold: 0.4 });\r\n-//   //   const results = fuse.search(command);\r\n-//   //   const foundCommand = results.length ? results[0].item : null;\r\n-\r\n-//   //   if (foundCommand) {\r\n-//   //     console.log(\"Command found:\", foundCommand.utterance);\r\n-//   //     speak(foundCommand.response);\r\n-//   //     if (foundCommand.route) {\r\n-//   //       navigate(foundCommand.route); // Navigate to the route specified in the command\r\n-//   //     }\r\n-//   //   } else {\r\n-//   //     console.log(\"No command found.\");\r\n-//   //     speak(\"I'm not sure how to respond to that.\");\r\n-//   //   }\r\n-//   // };\r\n-\r\n-//   const handleCommandWithFuse = (command) => {\r\n-//     const fuse = new Fuse(commands, { keys: [\"utterance\"], threshold: 0.4 });\r\n-//     const results = fuse.search(command);\r\n-//     const foundCommand = results.length ? results[0].item : null;\r\n-\r\n-//     if (foundCommand) {\r\n-//       console.log(\"Command found:\", foundCommand.utterance);\r\n-\r\n-//       if (foundCommand.action) {\r\n-//         foundCommand.action();\r\n-//       } else if (foundCommand.route) {\r\n-//         navigate(foundCommand.route);\r\n-//       }\r\n-\r\n-//       if (foundCommand.response) {\r\n-//         speak(foundCommand.response);\r\n-//       }\r\n-//     } else {\r\n-//       console.log(\"No command found.\");\r\n-//       speak(\"I'm not sure how to respond to that.\");\r\n-//     }\r\n-//   };\r\n-\r\n-//   const commands = [\r\n-//     {\r\n-//       utterance: \"Hello who are you ?\",\r\n-\r\n-//       response:\r\n-//         \"Hi! This is Brane! your Voice bot from Brane Education How can I Assist you Today ?\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"Hello\",\r\n-\r\n-//       response: \"Hi! How can I assist you today?\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"hello\",\r\n-\r\n-//       response: \"Hi! How can I assist you today?\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"Hi.\",\r\n-\r\n-//       response: \"Hello! How can I assist you today?\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"Hey there\",\r\n-\r\n-//       response: \"Hi! How can I assist you today?\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"Good morning Brane.\",\r\n-\r\n-//       response: \"Hey Hiii! Good morning  ! How can I help you?\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"Good afternoon Brane.\",\r\n-\r\n-//       response: \"Hey Hiii! Good after noon ! How can I help you?\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"Good evening Brane.\",\r\n-\r\n-//       response: \"Hey Hiii! Good evening ! How can I help you?\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"can you please take me to login page\",\r\n-//       route: \"/login\",\r\n-//       routeDescription: \"login page\",\r\n-//       response: \"Navigating to the login page.\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"go to login page\",\r\n-//       route: \"/login\",\r\n-//       routeDescription: \"login page\",\r\n-//       response: \"Navigating to the login page.\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"please take me to login page\",\r\n-//       route: \"/login\",\r\n-//       routeDescription: \"login page\",\r\n-//       response: \"Navigating to the login page.\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"Go to login page\",\r\n-//       route: \"/login\",\r\n-//       routeDescription: \"login page\",\r\n-//       response: \"Navigating to the login page.\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"open login page\",\r\n-//       route: \"/login\",\r\n-//       routeDescription: \"login page\",\r\n-//       response: \"Navigating to the login page.\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"can you please take me to signup page\",\r\n-//       route: \"/signup\",\r\n-//       routeDescription: \"signup page\",\r\n-//       response: \"Navigating to the signup page.\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"take me to signup page\",\r\n-//       route: \"/signup\",\r\n-//       routeDescription: \"signup page\",\r\n-//       response: \"Navigating to the signup page.\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"Go to signup page\",\r\n-//       route: \"/signup\",\r\n-//       routeDescription: \"signup page\",\r\n-//       response: \"Navigating to the signup page.\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"open signup page\",\r\n-//       route: \"/signup\",\r\n-//       routeDescription: \"signup page\",\r\n-//       response: \"Navigating to the signup page.\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"what are platform features\",\r\n-\r\n-//       response:\r\n-//         \"Dashboard, Dynamic time table, Learning Networks, Little Masters, Video Based Dictionary, General Search.\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"Features of platform\",\r\n-\r\n-//       response:\r\n-//         \"Dashboard, Dynamic time table, Learning Networks, Little Masters, Video Based Dictionary, General Search.\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"What does the platform offer\",\r\n-\r\n-//       response:\r\n-//         \"Dashboard, Dynamic time table, Learning Networks, Little Masters, Video Based Dictionary, General Search.\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"Say me the features of platform\",\r\n-\r\n-//       response:\r\n-//         \"Dashboard, Dynamic time table, Learning Networks, Little Masters, Video Based Dictionary, General Search.\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"Say me the services of platform\",\r\n-\r\n-//       response:\r\n-//         \"Dashboard, Dynamic time table, Learning Networks, Little Masters, Video Based Dictionary, General Search.\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"tell me the services offered by the platform\",\r\n-\r\n-//       response:\r\n-//         \"Dashboard, Dynamic time table, Learning Networks, Little Masters, Video Based Dictionary, General Search.\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"explain platform services\",\r\n-\r\n-//       response:\r\n-//         \"Dashboard, Dynamic time table, Learning Networks, Little Masters, Video Based Dictionary, General Search.\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"Give me the Parent voice of Julia Harris\",\r\n-\r\n-//       response:\r\n-//         \"Brane education has helped my son a lot in his studies. He improved a lot in his studies and is now able to score good marks in his exams\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"Play today's motivational video\",\r\n-\r\n-//       response: \"I am playing the video\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"Play today's video\",\r\n-\r\n-//       response: \"I am playing Motivational video\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"Leaders Voice\",\r\n-\r\n-//       response:\r\n-//         \"This Voice-interactive AI Platform is a game Changer. It revolutionizes education.\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"Curriculum Supported by Brane Education\",\r\n-\r\n-//       response:\r\n-//         \"we support multiple Boards let me say few Telangana State Board Andhra Pradesh Board Maharashtra Board Assam Board\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"Boards supported by the platform\",\r\n-\r\n-//       response:\r\n-//         \"we support multiple Boards let me say few Telangana State Board Andhra Pradesh Board Maharashtra Board Assam Board\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"Curriculum\",\r\n-\r\n-//       response:\r\n-//         \"we support multiple Boards let me say few Telangana State Board Andhra Pradesh Board Maharashtra Board Assam Board\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"Go to landing page\",\r\n-\r\n-//       response: \"Okay, I am taking you to the landing page.\",\r\n-\r\n-//       route: \"/childpage\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"take me to landing page\",\r\n-\r\n-//       response: \"Okay, I am taking you to the landing page.\",\r\n-\r\n-//       route: \"/childpage\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"move to landing page\",\r\n-\r\n-//       response: \"Okay, I am taking you to the landing page.\",\r\n-\r\n-//       route: \"/childpage\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"roll back to landing page\",\r\n-\r\n-//       response: \"Okay, I am taking you to the landing page.\",\r\n-\r\n-//       route: \"/childpage\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"move to landing page\",\r\n-\r\n-//       response: \"Okay, I am taking you to the landing page.\",\r\n-\r\n-//       route: \"/childpage\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"what is today's quote\",\r\n-\r\n-//       response:\r\n-//         \"Determination is the power that sees us through all our frustration and obstacles. It helps in building our willpower which is the very basis of success.\",\r\n-\r\n-//       // route: \"/childpage\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"Today's Inspirational quote\",\r\n-\r\n-//       response:\r\n-//         \"Determination is the power that sees us through all our frustration and obstacles. It helps in building our willpower which is the very basis of success.\",\r\n-\r\n-//       // route: \"/childpage\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"say me today's quote\",\r\n-\r\n-//       response:\r\n-//         \"Determination is the power that sees us through all our frustration and obstacles. It helps in building our willpower which is the very basis of success.\",\r\n-\r\n-//       // route: \"/childpage\",\r\n-//     },\r\n-//     {\r\n-//       utterance: \"go back\",\r\n-//       response: \"Going back.\",\r\n-//       action: goBack, // Note the use of an action property\r\n-//     },\r\n-//     {\r\n-//       utterance: \"go forward\",\r\n-//       response: \"Going forward.\",\r\n-//       action: goForward,\r\n-//     },\r\n-//     {\r\n-//       utterance: \"play video\",\r\n-//       // response: \"Playing video.\",\r\n-//       action: playVideo,\r\n-//     },\r\n-//     {\r\n-//       utterance: \"pause video\",\r\n-//       // response: \"Pausing video.\",\r\n-//       action: pauseVideo,\r\n-//     },\r\n-//     {\r\n-//       utterance: \"start video\",\r\n-//       // response: \"Playing video.\",\r\n-//       action: playVideo,\r\n-//     },\r\n-//     {\r\n-//       utterance: \"stop video\",\r\n-//       // response: \"Playing video.\",\r\n-//       action: pauseVideo,\r\n-//     },\r\n-//     {\r\n-//       utterance: \"scroll up\",\r\n-//       // response: \"Scrolling up.\",\r\n-//       action: scrollUp,\r\n-//     },\r\n-//     {\r\n-//       utterance: \"scroll down\",\r\n-//       // response: \"Scrolling down.\",\r\n-//       action: scrollDown,\r\n-//     },\r\n-//     {\r\n-//       utterance: \"go up\",\r\n-\r\n-//       // response: \"Scrolling up.\",\r\n-//       action: scrollUp,\r\n-//     },\r\n-//     {\r\n-//       utterance: \"go down\",\r\n-//       // response: \"Scrolling down.\",\r\n-//       action: scrollDown,\r\n-//     },\r\n-//     {\r\n-//       utterance: \"scroll to top\",\r\n-//       action: scrollToTop,\r\n-//     },\r\n-//     {\r\n-//       utterance: \"scroll to bottom\",\r\n-//       action: scrollToBottom,\r\n-//     },\r\n-//     {\r\n-//       utterance: \"go back\",\r\n-//       action: goBackRef?.current?.click, // Use goBackRef directly\r\n-//       response: \"Going back.\",\r\n-//     },\r\n-//     {\r\n-//       utterance: \"take test\",\r\n-//       action: takeTestRef?.current?.click, // Use takeTestRef directly\r\n-//       response: \"Starting the test.\",\r\n-//     },\r\n-//   ];\r\n-//   return (\r\n-//     <div className=\"speech-bot-container\">\r\n-//       <div\r\n-//         className={`button-container ${\r\n-//           isListening ? \"voicebotframeactive\" : \"voicebotframe\"\r\n-//         }`}\r\n-//       >\r\n-//         <div onClick={isListening ? stopListening : startListening}>\r\n-//           <iframe\r\n-//             src={\r\n-//               isListening\r\n-//                 ? \"https://lottie.host/?file=a89aca3f-5407-4052-82c3-2048afca7a9f/NpCdWzLSKD.json\"\r\n-//                 : \"https://lottie.host/?file=d2b6cc0e-fe95-4847-85b5-35365fca7e00/vTudpCuPZq.json\"\r\n-//             }\r\n-//             width=\"120\" // Set your desired width\r\n-//             height=\"120\" // Set your desired height\r\n-//             title={isListening ? \"Stop Animation\" : \"Start Animation\"}\r\n-//             className={isListening ? \"voicebotframeactive\" : \"voicebotframe\"}\r\n-//           ></iframe>\r\n-//           {isListening ? (\r\n-//             <div className=\"overlay\" onClick={stopListening}></div>\r\n-//           ) : (\r\n-//             <div className=\"overlay\" onClick={startListening}></div>\r\n-//           )}\r\n-//         </div>\r\n-//       </div>\r\n-//     </div>\r\n-//   );\r\n-// };\r\n-\r\n-// export default VoiceBot;\r\n"
                },
                {
                    "date": 1700650203877,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -811,8 +811,12 @@\n     // {\r\n     //   utterance: \"play the video sound\",\r\n     //   action: unmuteVideo,\r\n     // },\r\n+    {\r\n+      utterance: \"play video one\",\r\n+      action: () => controlVideo('video1', 'play'),\r\n+    },\r\n   ];\r\n \r\n   return (\r\n     <div className=\"speech-bot-container\">\r\n"
                },
                {
                    "date": 1700650226672,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -812,9 +812,9 @@\n     //   utterance: \"play the video sound\",\r\n     //   action: unmuteVideo,\r\n     // },\r\n     {\r\n-      utterance: \"play video one\",\r\n+      utterance: \"play transform education using ai video\",\r\n       action: () => controlVideo('video1', 'play'),\r\n     },\r\n   ];\r\n \r\n"
                },
                {
                    "date": 1700650257663,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -177,8 +177,25 @@\n     } else {\r\n       speak(\"No video to unmute.\");\r\n     }\r\n   };\r\n+  const controlVideo = (videoId, action) => {\r\n+    const videoRef = videoRefs.current.get(videoId);\r\n+    if (videoRef) {\r\n+      switch (action) {\r\n+        case 'play':\r\n+          videoRef.current.play();\r\n+          break;\r\n+        case 'pause':\r\n+          videoRef.current.pause();\r\n+          break;\r\n+        // Add other cases like 'mute', 'unmute' as needed\r\n+      }\r\n+      speak(`${action.charAt(0).toUpperCase() + action.slice(1)}ing video ${videoId}.`);\r\n+    } else {\r\n+      speak(`Video ${videoId} not found.`);\r\n+    }\r\n+  };\r\n \r\n   const speak = (message) => {\r\n     const utterance = new SpeechSynthesisUtterance(message);\r\n     utterance.onend = () => {\r\n"
                },
                {
                    "date": 1700650409740,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -177,19 +177,35 @@\n     } else {\r\n       speak(\"No video to unmute.\");\r\n     }\r\n   };\r\n+\r\n   const controlVideo = (videoId, action) => {\r\n     const videoRef = videoRefs.current.get(videoId);\r\n-    if (videoRef) {\r\n+    if (videoRef && videoRef.current) {\r\n       switch (action) {\r\n         case 'play':\r\n           videoRef.current.play();\r\n           break;\r\n         case 'pause':\r\n           videoRef.current.pause();\r\n           break;\r\n-        // Add other cases like 'mute', 'unmute' as needed\r\n+        case 'mute':\r\n+          videoRef.current.muted = true;\r\n+          break;\r\n+        case 'unmute':\r\n+          videoRef.current.muted = false;\r\n+          break;\r\n+        case 'fullscreen':\r\n+          if (videoRef.current.requestFullscreen) {\r\n+            videoRef.current.requestFullscreen();\r\n+          } else if (videoRef.current.webkitRequestFullscreen) { /* Safari */\r\n+            videoRef.current.webkitRequestFullscreen();\r\n+          } else if (videoRef.current.msRequestFullscreen) { /* IE11 */\r\n+            videoRef.current.msRequestFullscreen();\r\n+          }\r\n+          break;\r\n+        // Add other cases as needed\r\n       }\r\n       speak(`${action.charAt(0).toUpperCase() + action.slice(1)}ing video ${videoId}.`);\r\n     } else {\r\n       speak(`Video ${videoId} not found.`);\r\n"
                },
                {
                    "date": 1700650489820,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -848,8 +848,25 @@\n     {\r\n       utterance: \"play transform education using ai video\",\r\n       action: () => controlVideo('video1', 'play'),\r\n     },\r\n+    {\r\n+      utterance: \"pause transform education using ai video\",\r\n+      action: () => controlVideo('video1', 'pause'),\r\n+    },\r\n+\r\n+    {\r\n+      utterance: \"mute video one\",\r\n+      action: () => controlVideo('video1', 'mute'),\r\n+    },\r\n+    {\r\n+      utterance: \"unmute video one\",\r\n+      action: () => controlVideo('video1', 'unmute'),\r\n+    },\r\n+    {\r\n+      utterance: \"fullscreen video one\",\r\n+      action: () => controlVideo('video1', 'fullscreen'),\r\n+    },\r\n   ];\r\n \r\n   return (\r\n     <div className=\"speech-bot-container\">\r\n"
                },
                {
                    "date": 1700650501131,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -849,8 +849,12 @@\n       utterance: \"play transform education using ai video\",\r\n       action: () => controlVideo('video1', 'play'),\r\n     },\r\n     {\r\n+      utterance: \"start transform education using ai video\",\r\n+      action: () => controlVideo('video1', 'play'),\r\n+    },\r\n+    {\r\n       utterance: \"pause transform education using ai video\",\r\n       action: () => controlVideo('video1', 'pause'),\r\n     },\r\n \r\n"
                },
                {
                    "date": 1700650539780,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -856,19 +856,23 @@\n     {\r\n       utterance: \"pause transform education using ai video\",\r\n       action: () => controlVideo('video1', 'pause'),\r\n     },\r\n+    {\r\n+      utterance: \"stop transform education using ai video\",\r\n+      action: () => controlVideo('video1', 'pause'),\r\n+    },\r\n \r\n     {\r\n-      utterance: \"mute video one\",\r\n+      utterance: \"mute transform education using ai video\",\r\n       action: () => controlVideo('video1', 'mute'),\r\n     },\r\n     {\r\n-      utterance: \"unmute video one\",\r\n+      utterance: \"unmute transform education using ai video\",\r\n       action: () => controlVideo('video1', 'unmute'),\r\n     },\r\n     {\r\n-      utterance: \"fullscreen video one\",\r\n+      utterance: \"fullscreen transform education using ai video\",\r\n       action: () => controlVideo('video1', 'fullscreen'),\r\n     },\r\n   ];\r\n \r\n"
                },
                {
                    "date": 1700650681069,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -873,8 +873,20 @@\n     {\r\n       utterance: \"fullscreen transform education using ai video\",\r\n       action: () => controlVideo('video1', 'fullscreen'),\r\n     },\r\n+    {\r\n+      utterance: \"exit fullscreen transform education using ai video\",\r\n+      action: () => controlVideo('video1', 'exitFullscreen'),\r\n+    },\r\n+    {\r\n+      utterance: \"increase volume transform education using ai video\",\r\n+      action: () => controlVideo('video1', 'increaseVolume'),\r\n+    },\r\n+    {\r\n+      utterance: \"decrease volume transform education using ai video\",\r\n+      action: () => controlVideo('video1', 'decreaseVolume'),\r\n+    },\r\n   ];\r\n \r\n   return (\r\n     <div className=\"speech-bot-container\">\r\n"
                },
                {
                    "date": 1700650700122,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,3757 @@\n+import React, { useState, useEffect, useRef } from \"react\";\r\n+import { useNavigate, useLocation } from \"react-router-dom\";\r\n+import Fuse from \"fuse.js\";\r\n+import \"./VoiceBot.css\";\r\n+import chatbotimage from \"../../assets/chatbotgif.gif\";\r\n+\r\n+const VoiceBot = ({ videoRef, isMuted, setIsMuted }) => {\r\n+  const [isListening, setIsListening] = useState(false);\r\n+  const [isSpeaking, setIsSpeaking] = useState(false);\r\n+  const recognition = useRef(null);\r\n+  const speechSynthesis = useRef(window.speechSynthesis);\r\n+  const [hasGreeted, setHasGreeted] = useState(false);\r\n+  const navigate = useNavigate();\r\n+\r\n+  // Initialize speech recognition\r\n+  useEffect(() => {\r\n+    recognition.current = new window.webkitSpeechRecognition();\r\n+    recognition.current.continuous = true;\r\n+    recognition.current.interimResults = false;\r\n+    recognition.current.onresult = onResult;\r\n+    recognition.current.onend = onRecognitionEnd;\r\n+    recognition.current.starting = false;\r\n+\r\n+    recognition.current.onerror = (event) => {\r\n+      console.error(\"Recognition error:\", event.error);\r\n+      if (isListening && !isSpeaking) {\r\n+        restartRecognition();\r\n+      }\r\n+    };\r\n+\r\n+    return () => {\r\n+      if (recognition.current) {\r\n+        recognition.current.abort();\r\n+      }\r\n+    };\r\n+  }, []);\r\n+\r\n+  useEffect(() => {\r\n+    const checkRecognition = () => {\r\n+      if (isListening && !isSpeaking && !recognition.current.starting) {\r\n+        console.log(\"Restarting recognition because it's not active.\");\r\n+        recognition.current.starting = true;\r\n+        recognition.current.start();\r\n+        console.log(\"Restarted recognition.\");\r\n+      }\r\n+    };\r\n+\r\n+    const recognitionCheckInterval = setInterval(checkRecognition, 500); // Check every .5 second\r\n+\r\n+    return () => {\r\n+      clearInterval(recognitionCheckInterval);\r\n+    };\r\n+  }, [isListening, isSpeaking]);\r\n+\r\n+  const historyStack = useRef([]);\r\n+\r\n+  useEffect(() => {\r\n+    return () => {\r\n+      // Clean up the listener when the component unmounts\r\n+      window.removeEventListener(\"popstate\", handlePopState);\r\n+    };\r\n+  }, []);\r\n+\r\n+  const handlePopState = () => {\r\n+    // This needs to handle both back and forward browser actions\r\n+    // Use some logic to determine whether it's a back or forward action\r\n+    // For simplicity, assume it's always back\r\n+    historyStack.current.pop();\r\n+    forwardStack.current.length = 0; // Clear forward stack on manual navigation\r\n+  };\r\n+\r\n+  // Add a new entry to the stack whenever navigate is called\r\n+  const customNavigate = (to, options) => {\r\n+    historyStack.current.push(to);\r\n+    navigate(to, options);\r\n+  };\r\n+\r\n+  // Listen to popstate events to update the history stack\r\n+  useEffect(() => {\r\n+    window.addEventListener(\"popstate\", handlePopState);\r\n+  }, []);\r\n+\r\n+  const forwardStack = useRef([]);\r\n+\r\n+  const goBack = () => {\r\n+    if (window.history.state && window.history.state.idx > 0) {\r\n+      window.history.back();\r\n+      speak(\"Going back\");\r\n+    } else {\r\n+      speak(\"Can't go back any further.\");\r\n+    }\r\n+  };\r\n+\r\n+  const goForward = () => {\r\n+    if (\r\n+      window.history.state &&\r\n+      window.history.state.idx < window.history.length - 1\r\n+    ) {\r\n+      window.history.forward();\r\n+      speak(\"Going forward\");\r\n+    } else {\r\n+      speak(\"No forward history available.\");\r\n+    }\r\n+  };\r\n+\r\n+  const playVideo = () => {\r\n+    if (videoRef.current) {\r\n+      videoRef.current.play();\r\n+      speak(\"Playing video.\");\r\n+    } else {\r\n+      speak(\"No video to play.\");\r\n+    }\r\n+  };\r\n+\r\n+  const pauseVideo = () => {\r\n+    if (videoRef.current) {\r\n+      videoRef.current.pause();\r\n+      speak(\"Video paused.\");\r\n+    } else {\r\n+      speak(\"No video to pause.\");\r\n+    }\r\n+  };\r\n+\r\n+  const scrollAmount = window.innerHeight * 0.82;\r\n+\r\n+  const scrollUp = () => {\r\n+    if (window.pageYOffset === 0) {\r\n+      speak(\"Already at the top of the page.\");\r\n+    } else {\r\n+      window.scrollBy(0, -scrollAmount);\r\n+      speak(\"Scrolled up.\");\r\n+    }\r\n+  };\r\n+\r\n+  const scrollDown = () => {\r\n+    const maxScrollTop =\r\n+      document.documentElement.scrollHeight - window.innerHeight;\r\n+    if (window.pageYOffset >= maxScrollTop) {\r\n+      speak(\"Already at the bottom of the page.\");\r\n+    } else {\r\n+      window.scrollBy(0, scrollAmount);\r\n+      speak(\"Scrolled down.\");\r\n+    }\r\n+  };\r\n+\r\n+  const scrollToTop = () => {\r\n+    if (window.pageYOffset === 0) {\r\n+      speak(\"Already at the top of the page.\");\r\n+    } else {\r\n+      window.scrollTo(0, 0);\r\n+      speak(\"Scrolled to the top of the page.\");\r\n+    }\r\n+  };\r\n+\r\n+  const scrollToBottom = () => {\r\n+    const maxScrollTop =\r\n+      document.documentElement.scrollHeight - window.innerHeight;\r\n+    if (window.pageYOffset >= maxScrollTop) {\r\n+      speak(\"Already at the bottom of the page.\");\r\n+    } else {\r\n+      window.scrollTo(0, document.body.scrollHeight);\r\n+      speak(\"Scrolled to the bottom of the page.\");\r\n+    }\r\n+  };\r\n+\r\n+  const muteVideo = () => {\r\n+    if (videoRef.current) {\r\n+      setIsMuted(true);\r\n+    } else {\r\n+      speak(\"No video to mute.\");\r\n+    }\r\n+  };\r\n+\r\n+  const unmuteVideo = () => {\r\n+    if (videoRef.current) {\r\n+      setIsMuted(false);\r\n+    } else {\r\n+      speak(\"No video to unmute.\");\r\n+    }\r\n+  };\r\n+\r\n+  const controlVideo = (videoId, action) => {\r\n+    const videoRef = videoRefs.current.get(videoId);\r\n+    if (videoRef && videoRef.current) {\r\n+      switch (action) {\r\n+        case 'play':\r\n+          videoRef.current.play();\r\n+          break;\r\n+        case 'pause':\r\n+          videoRef.current.pause();\r\n+          break;\r\n+        case 'mute':\r\n+          videoRef.current.muted = true;\r\n+          break;\r\n+        case 'unmute':\r\n+          videoRef.current.muted = false;\r\n+          break;\r\n+        case 'fullscreen':\r\n+          if (videoRef.current.requestFullscreen) {\r\n+            videoRef.current.requestFullscreen();\r\n+          } else if (videoRef.current.webkitRequestFullscreen) { // Safari\r\n+            videoRef.current.webkitRequestFullscreen();\r\n+          } else if (videoRef.current.msRequestFullscreen) { // IE11\r\n+            videoRef.current.msRequestFullscreen();\r\n+          }\r\n+          break;\r\n+        case 'exitFullscreen':\r\n+          if (document.exitFullscreen) {\r\n+            document.exitFullscreen();\r\n+          } else if (document.webkitExitFullscreen) { // Safari\r\n+            document.webkitExitFullscreen();\r\n+          } else if (document.msExitFullscreen) { // IE11\r\n+            document.msExitFullscreen();\r\n+          }\r\n+          break;\r\n+        case 'increaseVolume':\r\n+          if (videoRef.current.volume < 1) {\r\n+            videoRef.current.volume = Math.min(1, videoRef.current.volume + 0.1);\r\n+          }\r\n+          break;\r\n+        case 'decreaseVolume':\r\n+          if (videoRef.current.volume > 0) {\r\n+            videoRef.current.volume = Math.max(0, videoRef.current.volume - 0.1);\r\n+          }\r\n+          break;\r\n+        // Add other cases as needed\r\n+      }\r\n+      speak(`${action.charAt(0).toUpperCase() + action.slice(1).replace(/([A-Z])/g, ' $1').toLowerCase()}ing video ${videoId}.`);\r\n+    } else {\r\n+      speak(`Video ${videoId} not found.`);\r\n+    }\r\n+  };\r\n+\r\n+  const speak = (message) => {\r\n+    const utterance = new SpeechSynthesisUtterance(message);\r\n+    utterance.onend = () => {\r\n+      setIsSpeaking(false);\r\n+      // Restart recognition after speaking has ended\r\n+      if (isListening) {\r\n+        restartRecognition();\r\n+      }\r\n+    };\r\n+\r\n+    setIsSpeaking(true);\r\n+    // Stop recognition when the bot starts speaking\r\n+    if (recognition.current) {\r\n+      recognition.current.abort();\r\n+    }\r\n+    speechSynthesis.current.speak(utterance);\r\n+  };\r\n+\r\n+  const restartRecognition = () => {\r\n+    // Check if recognition is not already started and if the bot is set to listen\r\n+    if (\r\n+      recognition.current &&\r\n+      !recognition.current.starting &&\r\n+      isListening &&\r\n+      !isSpeaking\r\n+    ) {\r\n+      recognition.current.abort(); // Ensure any ongoing recognition is stopped\r\n+      recognition.current.starting = true;\r\n+      recognition.current.start();\r\n+    }\r\n+  };\r\n+\r\n+  // Restart recognition when bot finishes speaking and isListening is true\r\n+  useEffect(() => {\r\n+    if (!isSpeaking && isListening) {\r\n+      restartRecognition();\r\n+    }\r\n+  }, [isSpeaking, isListening]);\r\n+\r\n+  const onResult = (event) => {\r\n+    const resultIndex = event.resultIndex;\r\n+    const transcript = event.results[resultIndex][0].transcript\r\n+      .trim()\r\n+      .toLowerCase();\r\n+\r\n+    if (event.results[resultIndex].isFinal) {\r\n+      console.log(`Recognized text: ${transcript}`);\r\n+      if (transcript.includes(\"brain\")) {\r\n+        console.log(\"Wake word heard, processing command...\");\r\n+        handleCommandWithFuse(transcript.replace(\"brain\", \"\"));\r\n+      }\r\n+    }\r\n+  };\r\n+\r\n+  const onRecognitionEnd = () => {\r\n+    recognition.current.starting = false;\r\n+    if (isListening && !isSpeaking) {\r\n+      restartRecognition();\r\n+    }\r\n+  };\r\n+\r\n+  useEffect(() => {\r\n+    if (isListening && !hasGreeted) {\r\n+      speak(\"Hello, I'm Brane. How can I help you today?\");\r\n+      setHasGreeted(true);\r\n+    }\r\n+  }, [isListening, hasGreeted]);\r\n+\r\n+  // Updated startListening function\r\n+  const startListening = () => {\r\n+    setIsListening(true);\r\n+    if (!recognition.current.starting) {\r\n+      restartRecognition();\r\n+    }\r\n+  };\r\n+\r\n+  // Updated stopListening function\r\n+  const stopListening = () => {\r\n+    setIsListening(false);\r\n+    if (speechSynthesis.current.speaking) {\r\n+      speechSynthesis.current.cancel();\r\n+    }\r\n+    recognition.current.abort();\r\n+  };\r\n+\r\n+  const handleCommandWithFuse = (command) => {\r\n+    const fuse = new Fuse(commands, { keys: [\"utterance\"], threshold: 0.4 });\r\n+    const results = fuse.search(command);\r\n+    const foundCommand = results.length ? results[0].item : null;\r\n+\r\n+    if (foundCommand) {\r\n+      console.log(\"Command found:\", foundCommand.utterance);\r\n+\r\n+      if (foundCommand.action) {\r\n+        foundCommand.action();\r\n+      } else if (foundCommand.route) {\r\n+        navigate(foundCommand.route);\r\n+      }\r\n+\r\n+      // Speak after performing the action or navigation\r\n+      speak(foundCommand.response);\r\n+    } else {\r\n+      console.log(\"No command found.\");\r\n+      speak(\"I'm not sure how to respond to that.\");\r\n+    }\r\n+  };\r\n+\r\n+  const commands = [\r\n+    {\r\n+      utterance: \"Hello who are you ?\",\r\n+\r\n+      response:\r\n+        \"Hi! This is Brane! your Voice bot from Brane Education How can I Assist you Today ?\",\r\n+    },\r\n+\r\n+    {\r\n+      utterance: \"Hello\",\r\n+\r\n+      response: \"Hi! How can I assist you today?\",\r\n+    },\r\n+\r\n+    {\r\n+      utterance: \"hello\",\r\n+\r\n+      response: \"Hi! How can I assist you today?\",\r\n+    },\r\n+\r\n+    {\r\n+      utterance: \"Hi.\",\r\n+\r\n+      response: \"Hello! How can I assist you today?\",\r\n+    },\r\n+\r\n+    {\r\n+      utterance: \"Hey there\",\r\n+\r\n+      response: \"Hi! How can I assist you today?\",\r\n+    },\r\n+\r\n+    {\r\n+      utterance: \"Good morning Brane.\",\r\n+\r\n+      response: \"Hey Hiii! Good morning  ! How can I help you?\",\r\n+    },\r\n+\r\n+    {\r\n+      utterance: \"Good afternoon Brane.\",\r\n+\r\n+      response: \"Hey Hiii! Good after noon ! How can I help you?\",\r\n+    },\r\n+\r\n+    {\r\n+      utterance: \"Good evening Brane.\",\r\n+\r\n+      response: \"Hey Hiii! Good evening ! How can I help you?\",\r\n+    },\r\n+\r\n+    {\r\n+      utterance: \"take me to homepage\",\r\n+\r\n+      route: \"/\",\r\n+\r\n+      response: \"You're in Homepage now\",\r\n+    },\r\n+    {\r\n+      utterance: \"open homepage\",\r\n+\r\n+      route: \"/\",\r\n+\r\n+      response: \"You're in Homepage now\",\r\n+    },\r\n+    {\r\n+      utterance: \"go to homepage\",\r\n+\r\n+      route: \"/\",\r\n+\r\n+      response: \"You're in Homepage now\",\r\n+    },\r\n+    {\r\n+      utterance: \"go back to homepage\",\r\n+\r\n+      route: \"/\",\r\n+\r\n+      response: \"You're in Homepage now\",\r\n+    },\r\n+    {\r\n+      utterance: \"can you please take me to login page\",\r\n+\r\n+      route: \"/login\",\r\n+\r\n+      response: \"Here's the Login Page, Please Login\",\r\n+    },\r\n+\r\n+    {\r\n+      utterance: \"please take me to login page\",\r\n+\r\n+      route: \"/login\",\r\n+\r\n+      response: \"Here's the Login Page, Please Login\",\r\n+    },\r\n+\r\n+    {\r\n+      utterance: \"Go to login page\",\r\n+\r\n+      route: \"/login\",\r\n+\r\n+      response: \"Here's the Login Page, Please Login\",\r\n+    },\r\n+\r\n+    {\r\n+      utterance: \"open login page\",\r\n+\r\n+      route: \"/login\",\r\n+\r\n+      response: \"Here's the Login Page, Please Login\",\r\n+    },\r\n+\r\n+    {\r\n+      utterance: \"can you please take me to signup page\",\r\n+\r\n+      route: \"/signup\",\r\n+\r\n+      response: \"Here's the signup page. Please proceed With Registration.\",\r\n+    },\r\n+\r\n+    {\r\n+      utterance: \"take me to signup page\",\r\n+\r\n+      route: \"/signup\",\r\n+\r\n+      response: \"Here's the signup page. Please proceed With Registration.\",\r\n+    },\r\n+\r\n+    {\r\n+      utterance: \"Go to signup page\",\r\n+\r\n+      route: \"/signup\",\r\n+\r\n+      response: \"Here's the signup page. Please proceed With Registration.\",\r\n+    },\r\n+\r\n+    {\r\n+      utterance: \"open signup page\",\r\n+\r\n+      route: \"/signup\",\r\n+\r\n+      response: \"Here's the signup page. Please proceed With Registration.\",\r\n+    },\r\n+\r\n+    {\r\n+      utterance: \"Go to face id\",\r\n+\r\n+      route: \"/login/faceid\",\r\n+\r\n+      response: \"Here's Face ID Login. Please proceed.\",\r\n+    },\r\n+\r\n+    {\r\n+      utterance: \"Go to face id login\",\r\n+\r\n+      route: \"/login/faceid\",\r\n+\r\n+      response: \"Here's Face ID Login. Please proceed.\",\r\n+    },\r\n+    {\r\n+      utterance: \"Go to face login\",\r\n+\r\n+      route: \"/login/faceid\",\r\n+\r\n+      response: \"Here's Face ID Login. Please proceed.\",\r\n+    },\r\n+\r\n+    {\r\n+      utterance: \"login with face id\",\r\n+\r\n+      route: \"/login/faceid\",\r\n+\r\n+      response: \"Here's Face ID Login. Please proceed.\",\r\n+    },\r\n+\r\n+    {\r\n+      utterance: \"login with face\",\r\n+\r\n+      route: \"/login/faceid\",\r\n+\r\n+      response: \"Here's Face ID Login. Please proceed.\",\r\n+    },\r\n+\r\n+    {\r\n+      utterance: \"i want to login with face\",\r\n+\r\n+      route: \"/login/faceid\",\r\n+\r\n+      response: \"Here's Face ID Login. Please proceed.\",\r\n+    },\r\n+\r\n+    {\r\n+      utterance: \"login with voice\",\r\n+\r\n+      route: \"/login/voiceid\",\r\n+\r\n+      response: \"Here's Voice Login. Please proceed.\",\r\n+    },\r\n+\r\n+    {\r\n+      utterance: \"i want to login with voice\",\r\n+\r\n+      route: \"/login/voiceid\",\r\n+\r\n+      response: \"Here's Voice Login. Please proceed.\",\r\n+    },\r\n+\r\n+    {\r\n+      utterance: \"go to voice login\",\r\n+\r\n+      route: \"/login/voiceid\",\r\n+\r\n+      response: \"Here's Voice Login. Please proceed.\",\r\n+    },\r\n+\r\n+    {\r\n+      utterance: \"login with voice\",\r\n+\r\n+      route: \"/login/voiceid\",\r\n+\r\n+      response: \"Here's Voice Login. Please proceed.\",\r\n+    },\r\n+\r\n+    {\r\n+      utterance: \"login with mobile\",\r\n+\r\n+      route: \"/login/mobile\",\r\n+\r\n+      response: \"Here's Mobile Login. Please proceed.\",\r\n+    },\r\n+\r\n+    {\r\n+      utterance: \"i want to login with mobile\",\r\n+\r\n+      route: \"/login/mobile\",\r\n+\r\n+      response: \"Here's Mobile Login. Please proceed.\",\r\n+    },\r\n+    {\r\n+      utterance: \"go to mobile login\",\r\n+\r\n+      route: \"/login/mobile\",\r\n+\r\n+      response: \"Here's Mobile Login. Please proceed.\",\r\n+    },\r\n+    {\r\n+      utterance: \"go to about page\",\r\n+\r\n+      route: \"/aboutus\",\r\n+\r\n+      response: \"This is About us.\",\r\n+    },\r\n+    {\r\n+      utterance: \"go to about us page\",\r\n+\r\n+      route: \"/aboutus\",\r\n+\r\n+      response: \"This is About us.\",\r\n+    },\r\n+    {\r\n+      utterance: \"open about us page\",\r\n+\r\n+      route: \"/aboutus\",\r\n+\r\n+      response: \"This is About us.\",\r\n+    },\r\n+    {\r\n+      utterance: \"open about page\",\r\n+\r\n+      route: \"/aboutus\",\r\n+\r\n+      response: \"This is About us.\",\r\n+    },\r\n+    {\r\n+      utterance: \"take me to about page\",\r\n+\r\n+      route: \"/aboutus\",\r\n+\r\n+      response: \"This is About us.\",\r\n+    },\r\n+    {\r\n+      utterance: \"take me to about us page\",\r\n+\r\n+      route: \"/aboutus\",\r\n+\r\n+      response: \"This is About us.\",\r\n+    },\r\n+\r\n+    {\r\n+      utterance: \"go to contact page\",\r\n+\r\n+      route: \"/contactus\",\r\n+\r\n+      response: \"You can contact us from here\",\r\n+    },\r\n+    {\r\n+      utterance: \"go to contact us page\",\r\n+\r\n+      route: \"/contactus\",\r\n+\r\n+      response: \"You can contact us from here\",\r\n+    },\r\n+    {\r\n+      utterance: \"open contact us page\",\r\n+\r\n+      route: \"/contactus\",\r\n+\r\n+      response: \"You can contact us from here\",\r\n+    },\r\n+    {\r\n+      utterance: \"open contact page\",\r\n+\r\n+      route: \"/contactus\",\r\n+\r\n+      response: \"You can contact us from here\",\r\n+    },\r\n+    {\r\n+      utterance: \"take me to about page\",\r\n+\r\n+      route: \"/contactus\",\r\n+\r\n+      response: \"You can contact us from here\",\r\n+    },\r\n+    {\r\n+      utterance: \"take me to contact us page\",\r\n+\r\n+      route: \"/contactus\",\r\n+\r\n+      response: \"You can contact us from here\",\r\n+    },\r\n+\r\n+    {\r\n+      utterance: \"what are platform features\",\r\n+\r\n+      response:\r\n+        \"Dashboard, Dynamic time table, Learning Networks, Little Masters, Video Based Dictionary, General Search.\",\r\n+    },\r\n+\r\n+    {\r\n+      utterance: \"Features of platform\",\r\n+\r\n+      response:\r\n+        \"Dashboard, Dynamic time table, Learning Networks, Little Masters, Video Based Dictionary, General Search.\",\r\n+    },\r\n+\r\n+    {\r\n+      utterance: \"What does the platform offer\",\r\n+\r\n+      response:\r\n+        \"Dashboard, Dynamic time table, Learning Networks, Little Masters, Video Based Dictionary, General Search.\",\r\n+    },\r\n+\r\n+    {\r\n+      utterance: \"Say me the features of platform\",\r\n+\r\n+      response:\r\n+        \"Dashboard, Dynamic time table, Learning Networks, Little Masters, Video Based Dictionary, General Search.\",\r\n+    },\r\n+\r\n+    {\r\n+      utterance: \"Say me the services of platform\",\r\n+\r\n+      response:\r\n+        \"Dashboard, Dynamic time table, Learning Networks, Little Masters, Video Based Dictionary, General Search.\",\r\n+    },\r\n+\r\n+    {\r\n+      utterance: \"tell me the services offered by the platform\",\r\n+\r\n+      response:\r\n+        \"Dashboard, Dynamic time table, Learning Networks, Little Masters, Video Based Dictionary, General Search.\",\r\n+    },\r\n+\r\n+    {\r\n+      utterance: \"explain platform services\",\r\n+\r\n+      response:\r\n+        \"Dashboard, Dynamic time table, Learning Networks, Little Masters, Video Based Dictionary, General Search.\",\r\n+    },\r\n+\r\n+    {\r\n+      utterance: \"Give me the Parent voice of Julia Harris\",\r\n+\r\n+      response:\r\n+        \"Brane education has helped my son a lot in his studies. He improved a lot in his studies and is now able to score good marks in his exams\",\r\n+    },\r\n+\r\n+    {\r\n+      utterance: \"Leaders Voice\",\r\n+\r\n+      response:\r\n+        \"This Voice-interactive AI Platform is a game Changer. It revolutionizes education.\",\r\n+    },\r\n+\r\n+    {\r\n+      utterance: \"Curriculum Supported by Brane Education\",\r\n+\r\n+      response:\r\n+        \"we support multiple Boards let me say few Telangana State Board Andhra Pradesh Board Maharashtra Board Assam Board\",\r\n+    },\r\n+\r\n+    {\r\n+      utterance: \"Boards supported by the platform\",\r\n+\r\n+      response:\r\n+        \"we support multiple Boards let me say few Telangana State Board Andhra Pradesh Board Maharashtra Board Assam Board\",\r\n+    },\r\n+\r\n+    {\r\n+      utterance: \"Curriculum\",\r\n+\r\n+      response:\r\n+        \"we support multiple Boards let me say few Telangana State Board Andhra Pradesh Board Maharashtra Board Assam Board\",\r\n+    },\r\n+\r\n+    {\r\n+      utterance: \"what is today's quote\",\r\n+\r\n+      response:\r\n+        \"Determination is the power that sees us through all our frustration and obstacles. It helps in building our willpower which is the very basis of success.\",\r\n+\r\n+      route: \"/childpage\",\r\n+    },\r\n+\r\n+    {\r\n+      utterance: \"Today's Inspirational quote\",\r\n+\r\n+      response:\r\n+        \"Determination is the power that sees us through all our frustration and obstacles. It helps in building our willpower which is the very basis of success.\",\r\n+\r\n+      route: \"/childpage\",\r\n+    },\r\n+\r\n+    {\r\n+      utterance: \"say me today's quote\",\r\n+\r\n+      response:\r\n+        \"Determination is the power that sees us through all our frustration and obstacles. It helps in building our willpower which is the very basis of success.\",\r\n+\r\n+      route: \"/childpage\",\r\n+    },\r\n+    {\r\n+      utterance: \"go back\",\r\n+      response: \"\",\r\n+      action: goBack, // Note the use of an action property\r\n+    },\r\n+    {\r\n+      utterance: \"go forward\",\r\n+      response: \"\",\r\n+      action: goForward,\r\n+    },\r\n+    // {\r\n+    //   utterance: \"play video\",\r\n+    //   // response: \"Playing video.\",\r\n+    //   action: playVideo,\r\n+    // },\r\n+    // {\r\n+    //   utterance: \"pause video\",\r\n+    //   // response: \"Pausing video.\",\r\n+    //   action: pauseVideo,\r\n+    // },\r\n+    // {\r\n+    //   utterance: \"start video\",\r\n+    //   // response: \"Playing video.\",\r\n+    //   action: playVideo,\r\n+    // },\r\n+    // {\r\n+    //   utterance: \"stop video\",\r\n+    //   // response: \"Playing video.\",\r\n+    //   action: pauseVideo,\r\n+    // },\r\n+    {\r\n+      utterance: \"scroll up\",\r\n+      // response: \"Scrolling up.\",\r\n+      action: scrollUp,\r\n+    },\r\n+    {\r\n+      utterance: \"scroll down\",\r\n+      // response: \"Scrolling down.\",\r\n+      action: scrollDown,\r\n+    },\r\n+    {\r\n+      utterance: \"go up\",\r\n+\r\n+      // response: \"Scrolling up.\",\r\n+      action: scrollUp,\r\n+    },\r\n+    {\r\n+      utterance: \"go down\",\r\n+      // response: \"Scrolling down.\",\r\n+      action: scrollDown,\r\n+    },\r\n+    {\r\n+      utterance: \"scroll to top\",\r\n+      action: scrollToTop,\r\n+    },\r\n+    {\r\n+      utterance: \"scroll to bottom\",\r\n+      action: scrollToBottom,\r\n+    },\r\n+    {\r\n+      utterance: \"brane stop\",\r\n+      action: stopListening,\r\n+    },\r\n+    {\r\n+      utterance: \"brane turn off\",\r\n+      action: stopListening,\r\n+    },\r\n+    {\r\n+      utterance: \"brane stop the bot\",\r\n+      action: stopListening,\r\n+    },\r\n+    // {\r\n+    //   utterance: \"mute the video\",\r\n+    //   action: muteVideo,\r\n+    // },\r\n+    // {\r\n+    //   utterance: \"unmute the video\",\r\n+    //   action: unmuteVideo,\r\n+    // },\r\n+    // {\r\n+    //   utterance: \"stop the video sound\",\r\n+    //   action: muteVideo,\r\n+    // },\r\n+    // {\r\n+    //   utterance: \"play the video sound\",\r\n+    //   action: unmuteVideo,\r\n+    // },\r\n+    {\r\n+      utterance: \"play transform education using ai video\",\r\n+      action: () => controlVideo('video1', 'play'),\r\n+    },\r\n+    {\r\n+      utterance: \"start transform education using ai video\",\r\n+      action: () => controlVideo('video1', 'play'),\r\n+    },\r\n+    {\r\n+      utterance: \"pause transform education using ai video\",\r\n+      action: () => controlVideo('video1', 'pause'),\r\n+    },\r\n+    {\r\n+      utterance: \"stop transform education using ai video\",\r\n+      action: () => controlVideo('video1', 'pause'),\r\n+    },\r\n+\r\n+    {\r\n+      utterance: \"mute transform education using ai video\",\r\n+      action: () => controlVideo('video1', 'mute'),\r\n+    },\r\n+    {\r\n+      utterance: \"unmute transform education using ai video\",\r\n+      action: () => controlVideo('video1', 'unmute'),\r\n+    },\r\n+    {\r\n+      utterance: \"fullscreen transform education using ai video\",\r\n+      action: () => controlVideo('video1', 'fullscreen'),\r\n+    },\r\n+    {\r\n+      utterance: \"exit fullscreen transform education using ai video\",\r\n+      action: () => controlVideo('video1', 'exitFullscreen'),\r\n+    },\r\n+    {\r\n+      utterance: \"increase volume transform education using ai video\",\r\n+      action: () => controlVideo('video1', 'increaseVolume'),\r\n+    },\r\n+    {\r\n+      utterance: \"decrease volume transform education using ai video\",\r\n+      action: () => controlVideo('video1', 'decreaseVolume'),\r\n+    },\r\n+  ];\r\n+\r\n+  return (\r\n+    <div className=\"speech-bot-container\">\r\n+      <div\r\n+        className={`button-container ${\r\n+          isListening ? \"voicebotframeactive\" : \"voicebotframe\"\r\n+        }`}\r\n+      >\r\n+        {/* <button onClick={isListening ? stopListening : startListening}>\r\n+          {isListening ? \"Stop\" : \"Start\"} Animation\r\n+        </button> */}\r\n+        <img\r\n+          className=\"botimage\"\r\n+          src={chatbotimage}\r\n+          alt=\"\"\r\n+          onClick={isListening ? stopListening : startListening}\r\n+        />\r\n+      </div>\r\n+    </div>\r\n+  );\r\n+};\r\n+\r\n+export default VoiceBot;\r\n+\r\n+{\r\n+  /* // import React, { useState, useEffect, useRef } from \"react\";\r\n+// import { useNavigate, useLocation } from \"react-router-dom\";\r\n+// import Fuse from \"fuse.js\";\r\n+// import \"./VoiceBot.css\";\r\n+\r\n+// const VoiceBot = ({ videoRef }) => {\r\n+//   const [isListening, setIsListening] = useState(false);\r\n+//   const [isSpeaking, setIsSpeaking] = useState(false);\r\n+//   const recognition = useRef(null);\r\n+//   const speechSynthesis = useRef(window.speechSynthesis);\r\n+//   const [hasGreeted, setHasGreeted] = useState(false);\r\n+//   const navigate = useNavigate();\r\n+\r\n+//   useEffect(() => {\r\n+//     recognition.current = new window.webkitSpeechRecognition();\r\n+//     recognition.current.continuous = true;\r\n+//     recognition.current.interimResults = false;\r\n+//     recognition.current.onresult = onResult;\r\n+//     recognition.current.onend = onRecognitionEnd;\r\n+//     recognition.current.starting = false;\r\n+\r\n+//     // Simplified error handling, removed specific handling for 'no-speech'\r\n+//     recognition.current.onerror = (event) => {\r\n+//       console.error(\"Recognition error:\", event.error);\r\n+//       // Check if listening is true and the bot isn't speaking\r\n+//       if (isListening && !isSpeaking) {\r\n+//         // Restart recognition\r\n+//         restartRecognition();\r\n+//       }\r\n+//     };\r\n+\r\n+//     return () => {\r\n+//       if (recognition.current) {\r\n+//         recognition.current.abort();\r\n+//       }\r\n+//     };\r\n+//   }, []);\r\n+\r\n+//   useEffect(() => {\r\n+//     const checkRecognition = () => {\r\n+//       if (isListening && !isSpeaking && !recognition.current.starting) {\r\n+//         console.log(\"Restarting recognition because it's not active.\");\r\n+//         recognition.current.starting = true;\r\n+//         recognition.current.start();\r\n+//         console.log(\"Restarted recognition.\");\r\n+//       }\r\n+//     };\r\n+\r\n+//     const recognitionCheckInterval = setInterval(checkRecognition, 100); // Check every 1 second\r\n+\r\n+//     return () => {\r\n+//       clearInterval(recognitionCheckInterval);\r\n+//     };\r\n+//   }, [isListening, isSpeaking]);\r\n+\r\n+//   const restartRecognition = () => {\r\n+//     if (recognition.current.starting) {\r\n+//       console.log(\"Recognition is already starting or running.\");\r\n+//       return;\r\n+//     }\r\n+\r\n+//     recognition.current.abort(); // Stop any existing recognition process\r\n+//     recognition.current.starting = true;\r\n+//     recognition.current.start();\r\n+//     console.log(\"Recognition restarted.\");\r\n+//   };\r\n+\r\n+//   const historyStack = useRef([]);\r\n+\r\n+//   useEffect(() => {\r\n+//     return () => {\r\n+//       // Clean up the listener when the component unmounts\r\n+//       window.removeEventListener(\"popstate\", handlePopState);\r\n+//     };\r\n+//   }, []);\r\n+\r\n+//   const handlePopState = () => {\r\n+//     // This needs to handle both back and forward browser actions\r\n+//     // Use some logic to determine whether it's a back or forward action\r\n+//     // For simplicity, assume it's always back\r\n+//     historyStack.current.pop();\r\n+//     forwardStack.current.length = 0; // Clear forward stack on manual navigation\r\n+//   };\r\n+  \r\n+\r\n+//   // Add a new entry to the stack whenever navigate is called\r\n+//   const customNavigate = (to, options) => {\r\n+//     historyStack.current.push(to);\r\n+//     navigate(to, options);\r\n+//   };\r\n+\r\n+//   // Listen to popstate events to update the history stack\r\n+//   useEffect(() => {\r\n+//     window.addEventListener(\"popstate\", handlePopState);\r\n+//   }, []);\r\n+\r\n+//   const forwardStack = useRef([]);\r\n+\r\n+//   const goBack = () => {\r\n+//     if (window.history.state && window.history.state.idx > 0) {\r\n+//       window.history.back();\r\n+//       speak(\"Going back\");\r\n+//     } else {\r\n+//       speak(\"Can't go back any further.\");\r\n+//     }\r\n+//   };\r\n+\r\n+//   const goForward = () => {\r\n+//     if (window.history.state && window.history.state.idx < window.history.length - 1) {\r\n+//       window.history.forward();\r\n+//       speak(\"Going forward\");\r\n+//     } else {\r\n+//       speak(\"No forward history available.\");\r\n+//     }\r\n+//   };\r\n+\r\n+//   const playVideo = () => {\r\n+//     if (videoRef.current) {\r\n+//       videoRef.current.play();\r\n+//       speak(\"Playing video.\");\r\n+//     } else {\r\n+//       speak(\"No video to play.\");\r\n+//     }\r\n+//   };\r\n+\r\n+//   const pauseVideo = () => {\r\n+//     if (videoRef.current) {\r\n+//       videoRef.current.pause();\r\n+//       speak(\"Video paused.\");\r\n+//     } else {\r\n+//       speak(\"No video to pause.\");\r\n+//     }\r\n+//   };\r\n+\r\n+//   const scrollAmount = window.innerHeight * 0.82;\r\n+\r\n+//   const scrollUp = () => {\r\n+//     if (window.pageYOffset === 0) {\r\n+//       speak(\"Already at the top of the page.\");\r\n+//     } else {\r\n+//       window.scrollBy(0, -scrollAmount);\r\n+//       speak(\"Scrolled up.\");\r\n+//     }\r\n+//   };\r\n+\r\n+//   const scrollDown = () => {\r\n+//     const maxScrollTop =\r\n+//       document.documentElement.scrollHeight - window.innerHeight;\r\n+//     if (window.pageYOffset >= maxScrollTop) {\r\n+//       speak(\"Already at the bottom of the page.\");\r\n+//     } else {\r\n+//       window.scrollBy(0, scrollAmount);\r\n+//       speak(\"Scrolled down.\");\r\n+//     }\r\n+//   };\r\n+\r\n+//   const scrollToTop = () => {\r\n+//     if (window.pageYOffset === 0) {\r\n+//       speak(\"Already at the top of the page.\");\r\n+//     } else {\r\n+//       window.scrollTo(0, 0);\r\n+//       speak(\"Scrolled to the top of the page.\");\r\n+//     }\r\n+//   };\r\n+\r\n+//   const scrollToBottom = () => {\r\n+//     const maxScrollTop =\r\n+//       document.documentElement.scrollHeight - window.innerHeight;\r\n+//     if (window.pageYOffset >= maxScrollTop) {\r\n+//       speak(\"Already at the bottom of the page.\");\r\n+//     } else {\r\n+//       window.scrollTo(0, document.body.scrollHeight);\r\n+//       speak(\"Scrolled to the bottom of the page.\");\r\n+//     }\r\n+//   };\r\n+\r\n+//   const speak = (message) => {\r\n+//     console.log(\"speak function called with message:\", message);\r\n+//     const utterance = new SpeechSynthesisUtterance(message);\r\n+//     utterance.onend = () => {\r\n+//       setIsSpeaking(false);\r\n+//       console.log(\"Speaking ended.\");\r\n+//       if (isListening && !recognition.current.starting) {\r\n+//         console.log(\"Restarting recognition after speaking.\");\r\n+//         recognition.current.starting = true;\r\n+//         recognition.current.start();\r\n+//         console.log(\"Restarted recognition after speaking.\");\r\n+//       }\r\n+//     };\r\n+\r\n+//     setIsSpeaking(true);\r\n+//     console.log(\"Speaking started.\");\r\n+//     recognition.current.stop(); // Ensure to stop recognition before speaking\r\n+//     speechSynthesis.current.speak(utterance);\r\n+//   };\r\n+\r\n+//   const onResult = (event) => {\r\n+//     const resultIndex = event.resultIndex;\r\n+//     const transcript = event.results[resultIndex][0].transcript\r\n+//       .trim()\r\n+//       .toLowerCase();\r\n+\r\n+//     if (event.results[resultIndex].isFinal) {\r\n+//       console.log(`Recognized text: ${transcript}`);\r\n+//       if (transcript.includes(\"brain\")) {\r\n+//         console.log(\"Wake word heard, processing command...\");\r\n+//         handleCommandWithFuse(transcript.replace(\"brain\", \"\"));\r\n+//       }\r\n+//     }\r\n+//   };\r\n+\r\n+//   const onRecognitionEnd = () => {\r\n+//     recognition.current.starting = false;\r\n+//     if (isListening && !isSpeaking) {\r\n+//       restartRecognition();\r\n+//     }\r\n+//   };\r\n+\r\n+//   useEffect(() => {\r\n+//     if (isListening) {\r\n+//       if (!hasGreeted) {\r\n+//         speak(\"Hello, I'm Brane. How can I help you today?\");\r\n+//         setHasGreeted(true);\r\n+//       } else {\r\n+//         speak(\"Listening.\");\r\n+//       }\r\n+//     }\r\n+//   }, [isListening, hasGreeted]);\r\n+\r\n+\r\n+//   const startListening = () => {\r\n+//     if (!recognition.current.starting) {\r\n+//       setIsListening(true);\r\n+//       restartRecognition();\r\n+//     }\r\n+//   };\r\n+\r\n+//   const stopListening = () => {\r\n+//     setIsListening(false);\r\n+//     recognition.current.abort();\r\n+//     if (speechSynthesis.current.speaking) {\r\n+//       speechSynthesis.current.cancel();\r\n+//     }\r\n+//   };\r\n+\r\n+//   const handleCommandWithFuse = (command) => {\r\n+//     const fuse = new Fuse(commands, { keys: [\"utterance\"], threshold: 0.4 });\r\n+//     const results = fuse.search(command);\r\n+//     const foundCommand = results.length ? results[0].item : null;\r\n+\r\n+//     if (foundCommand) {\r\n+//       console.log(\"Command found:\", foundCommand.utterance);\r\n+\r\n+//       if (foundCommand.action) {\r\n+//         foundCommand.action();\r\n+//       } else if (foundCommand.route) {\r\n+//         navigate(foundCommand.route);\r\n+//       }\r\n+\r\n+//       // Speak after performing the action or navigation\r\n+//       speak(foundCommand.response);\r\n+//     } else {\r\n+//       console.log(\"No command found.\");\r\n+//       speak(\"I'm not sure how to respond to that.\");\r\n+//     }\r\n+//   };\r\n+\r\n+//   const commands = [\r\n+//     {\r\n+//       utterance: \"Hello who are you ?\",\r\n+\r\n+//       response:\r\n+//         \"Hi! This is Brane! your Voice bot from Brane Education How can I Assist you Today ?\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"Hello\",\r\n+\r\n+//       response: \"Hi! How can I assist you today?\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"hello\",\r\n+\r\n+//       response: \"Hi! How can I assist you today?\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"Hi.\",\r\n+\r\n+//       response: \"Hello! How can I assist you today?\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"Hey there\",\r\n+\r\n+//       response: \"Hi! How can I assist you today?\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"Good morning Brane.\",\r\n+\r\n+//       response: \"Hey Hiii! Good morning  ! How can I help you?\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"Good afternoon Brane.\",\r\n+\r\n+//       response: \"Hey Hiii! Good after noon ! How can I help you?\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"Good evening Brane.\",\r\n+\r\n+//       response: \"Hey Hiii! Good evening ! How can I help you?\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"can you please take me to login page\",\r\n+\r\n+//       route: \"/login\",\r\n+\r\n+//       response: \"Here's the Login Page, Please Login\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"please take me to login page\",\r\n+\r\n+//       route: \"/login\",\r\n+\r\n+//       response: \"Here's the Login Page, Please Login\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"Go to login page\",\r\n+\r\n+//       route: \"/login\",\r\n+\r\n+//       response: \"Here's the Login Page, Please Login\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"open login page\",\r\n+\r\n+//       route: \"/login\",\r\n+\r\n+//       response: \"Here's the Login Page, Please Login\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"can you please take me to signup page\",\r\n+\r\n+//       route: \"/signup\",\r\n+\r\n+//       response: \"Here's the signup page. Please proceed With Registration.\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"take me to signup page\",\r\n+\r\n+//       route: \"/signup\",\r\n+\r\n+//       response: \"Here's the signup page. Please proceed With Registration.\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"Go to signup page\",\r\n+\r\n+//       route: \"/signup\",\r\n+\r\n+//       response: \"Here's the signup page. Please proceed With Registration.\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"open signup page\",\r\n+\r\n+//       route: \"/signup\",\r\n+\r\n+//       response: \"Here's the signup page. Please proceed With Registration.\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"Go to face id\",\r\n+\r\n+//       route: \"/login/faceid\",\r\n+\r\n+//       response: \"Here's Face ID Login. Please proceed.\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"Go to face id login\",\r\n+\r\n+//       route: \"/login/faceid\",\r\n+\r\n+//       response: \"Here's Face ID Login. Please proceed.\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"login with face id\",\r\n+\r\n+//       route: \"/login/faceid\",\r\n+\r\n+//       response: \"Here's Face ID Login. Please proceed.\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"login with face\",\r\n+\r\n+//       route: \"/login/faceid\",\r\n+\r\n+//       response: \"Here's Face ID Login. Please proceed.\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"i want to login with face\",\r\n+\r\n+//       route: \"/login/faceid\",\r\n+\r\n+//       response: \"Here's Face ID Login. Please proceed.\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"login with voice\",\r\n+\r\n+//       route: \"/login/voiceid\",\r\n+\r\n+//       response: \"Here's Voice Login. Please proceed.\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"i want to login with voice\",\r\n+\r\n+//       route: \"/login/voiceid\",\r\n+\r\n+//       response: \"Here's Voice Login. Please proceed.\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"go to voice login\",\r\n+\r\n+//       route: \"/login/voiceid\",\r\n+\r\n+//       response: \"Here's Voice Login. Please proceed.\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"login with voice\",\r\n+\r\n+//       route: \"/login/voiceid\",\r\n+\r\n+//       response: \"Here's Voice Login. Please proceed.\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"login with mobile\",\r\n+\r\n+//       route: \"/login/mobile\",\r\n+\r\n+//       response: \"Here's Mobile Login. Please proceed.\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"i want to login with mobile\",\r\n+\r\n+//       route: \"/login/mobile\",\r\n+\r\n+//       response: \"Here's Mobile Login. Please proceed.\",\r\n+//     },\r\n+//     {\r\n+//       utterance: \"go to mobile login\",\r\n+\r\n+//       route: \"/login/mobile\",\r\n+\r\n+//       response: \"Here's Mobile Login. Please proceed.\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"what are platform features\",\r\n+\r\n+//       response:\r\n+//         \"Dashboard, Dynamic time table, Learning Networks, Little Masters, Video Based Dictionary, General Search.\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"Features of platform\",\r\n+\r\n+//       response:\r\n+//         \"Dashboard, Dynamic time table, Learning Networks, Little Masters, Video Based Dictionary, General Search.\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"What does the platform offer\",\r\n+\r\n+//       response:\r\n+//         \"Dashboard, Dynamic time table, Learning Networks, Little Masters, Video Based Dictionary, General Search.\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"Say me the features of platform\",\r\n+\r\n+//       response:\r\n+//         \"Dashboard, Dynamic time table, Learning Networks, Little Masters, Video Based Dictionary, General Search.\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"Say me the services of platform\",\r\n+\r\n+//       response:\r\n+//         \"Dashboard, Dynamic time table, Learning Networks, Little Masters, Video Based Dictionary, General Search.\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"tell me the services offered by the platform\",\r\n+\r\n+//       response:\r\n+//         \"Dashboard, Dynamic time table, Learning Networks, Little Masters, Video Based Dictionary, General Search.\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"explain platform services\",\r\n+\r\n+//       response:\r\n+//         \"Dashboard, Dynamic time table, Learning Networks, Little Masters, Video Based Dictionary, General Search.\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"Give me the Parent voice of Julia Harris\",\r\n+\r\n+//       response:\r\n+//         \"Brane education has helped my son a lot in his studies. He improved a lot in his studies and is now able to score good marks in his exams\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"Play today's motivational video\",\r\n+\r\n+//       response: \"I am playing the video\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"Play today's video\",\r\n+\r\n+//       response: \"I am playing Motivational video\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"Leaders Voice\",\r\n+\r\n+//       response:\r\n+//         \"This Voice-interactive AI Platform is a game Changer. It revolutionizes education.\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"Curriculum Supported by Brane Education\",\r\n+\r\n+//       response:\r\n+//         \"we support multiple Boards let me say few Telangana State Board Andhra Pradesh Board Maharashtra Board Assam Board\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"Boards supported by the platform\",\r\n+\r\n+//       response:\r\n+//         \"we support multiple Boards let me say few Telangana State Board Andhra Pradesh Board Maharashtra Board Assam Board\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"Curriculum\",\r\n+\r\n+//       response:\r\n+//         \"we support multiple Boards let me say few Telangana State Board Andhra Pradesh Board Maharashtra Board Assam Board\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"Go to landing page\",\r\n+\r\n+//       response: \"Okay, I am taking you to the landing page.\",\r\n+\r\n+//       route: \"/childpage\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"take me to landing page\",\r\n+\r\n+//       response: \"Okay, I am taking you to the landing page.\",\r\n+\r\n+//       route: \"/childpage\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"move to landing page\",\r\n+\r\n+//       response: \"Okay, I am taking you to the landing page.\",\r\n+\r\n+//       route: \"/childpage\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"roll back to landing page\",\r\n+\r\n+//       response: \"Okay, I am taking you to the landing page.\",\r\n+\r\n+//       route: \"/childpage\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"move to landing page\",\r\n+\r\n+//       response: \"Okay, I am taking you to the landing page.\",\r\n+\r\n+//       route: \"/childpage\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"what is today's quote\",\r\n+\r\n+//       response:\r\n+//         \"Determination is the power that sees us through all our frustration and obstacles. It helps in building our willpower which is the very basis of success.\",\r\n+\r\n+//       route: \"/childpage\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"Today's Inspirational quote\",\r\n+\r\n+//       response:\r\n+//         \"Determination is the power that sees us through all our frustration and obstacles. It helps in building our willpower which is the very basis of success.\",\r\n+\r\n+//       route: \"/childpage\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"say me today's quote\",\r\n+\r\n+//       response:\r\n+//         \"Determination is the power that sees us through all our frustration and obstacles. It helps in building our willpower which is the very basis of success.\",\r\n+\r\n+//       route: \"/childpage\",\r\n+//     },\r\n+//     {\r\n+//       utterance: \"go back\",\r\n+//       response: \"\",\r\n+//       action: goBack, // Note the use of an action property\r\n+//     },\r\n+//     {\r\n+//       utterance: \"go forward\",\r\n+//       response: \"\",\r\n+//       action: goForward,\r\n+//     },\r\n+//     {\r\n+//       utterance: \"play video\",\r\n+//       // response: \"Playing video.\",\r\n+//       action: playVideo,\r\n+//     },\r\n+//     {\r\n+//       utterance: \"pause video\",\r\n+//       // response: \"Pausing video.\",\r\n+//       action: pauseVideo,\r\n+//     },\r\n+//     {\r\n+//       utterance: \"start video\",\r\n+//       // response: \"Playing video.\",\r\n+//       action: playVideo,\r\n+//     },\r\n+//     {\r\n+//       utterance: \"stop video\",\r\n+//       // response: \"Playing video.\",\r\n+//       action: pauseVideo,\r\n+//     },\r\n+//     {\r\n+//       utterance: \"scroll up\",\r\n+//       // response: \"Scrolling up.\",\r\n+//       action: scrollUp,\r\n+//     },\r\n+//     {\r\n+//       utterance: \"scroll down\",\r\n+//       // response: \"Scrolling down.\",\r\n+//       action: scrollDown,\r\n+//     },\r\n+//     {\r\n+//       utterance: \"go up\",\r\n+\r\n+//       // response: \"Scrolling up.\",\r\n+//       action: scrollUp,\r\n+//     },\r\n+//     {\r\n+//       utterance: \"go down\",\r\n+//       // response: \"Scrolling down.\",\r\n+//       action: scrollDown,\r\n+//     },\r\n+//     {\r\n+//       utterance: \"scroll to top\",\r\n+//       action: scrollToTop,\r\n+//     },\r\n+//     {\r\n+//       utterance: \"scroll to bottom\",\r\n+//       action: scrollToBottom,\r\n+//     },\r\n+//     {\r\n+//       utterance: \"brane stop\",\r\n+//       action: stopListening,\r\n+//     },\r\n+//     {\r\n+//       utterance: \"brane turn off\",\r\n+//       action: stopListening,\r\n+//     },\r\n+//     {\r\n+//       utterance: \"brane stop the bot\",\r\n+//       action: stopListening,\r\n+//     },\r\n+//   ];\r\n+\r\n+//   return (\r\n+//     <div className=\"speech-bot-container\">\r\n+//       <div\r\n+//         className={`button-container ${\r\n+//           isListening ? \"voicebotframeactive\" : \"voicebotframe\"\r\n+//         }`}\r\n+//       >\r\n+//         <button onClick={isListening ? stopListening : startListening}>\r\n+//           {isListening ? \"Stop\" : \"Start\"} Animation\r\n+//         </button>\r\n+//         {/* <button onClick={toggleBotActive}>\r\n+//         {isBotActive ? 'Deactivate Bot' : 'Activate Bot'}\r\n+//       </button> \r\n+//       </div>\r\n+//     </div>\r\n+//   );\r\n+// };\r\n+\r\n+// export default VoiceBot; */\r\n+}\r\n+\r\n+//iska v1\r\n+\r\n+// import React, { useState, useEffect, useRef } from \"react\";\r\n+// import { useNavigate, useLocation } from \"react-router-dom\";\r\n+// import Fuse from \"fuse.js\";\r\n+// import \"./VoiceBot.css\";\r\n+\r\n+// const VoiceBot = ({ videoRef}) => {\r\n+//   const [isListening, setIsListening] = useState(false);\r\n+//   const [isSpeaking, setIsSpeaking] = useState(false);\r\n+//   const recognition = useRef(null);\r\n+//   const speechSynthesis = useRef(window.speechSynthesis);\r\n+//   const [hasGreeted, setHasGreeted] = useState(false);\r\n+//   const navigate = useNavigate();\r\n+\r\n+//  // Initialize speech recognition\r\n+//  useEffect(() => {\r\n+//   recognition.current = new window.webkitSpeechRecognition();\r\n+//   recognition.current.continuous = true;\r\n+//   recognition.current.interimResults = false;\r\n+//   recognition.current.onresult = onResult;\r\n+//   recognition.current.onend = onRecognitionEnd;\r\n+//   recognition.current.starting = false;\r\n+\r\n+//   recognition.current.onerror = (event) => {\r\n+//     console.error(\"Recognition error:\", event.error);\r\n+//     if (isListening && !isSpeaking) {\r\n+//       restartRecognition();\r\n+//     }\r\n+//   };\r\n+\r\n+//   return () => {\r\n+//     if (recognition.current) {\r\n+//       recognition.current.abort();\r\n+//     }\r\n+//   };\r\n+// }, []);\r\n+\r\n+//   // useEffect(() => {\r\n+//   //   const checkRecognition = () => {\r\n+//   //     if (isListening && !isSpeaking && !recognition.current.starting) {\r\n+//   //       console.log(\"Restarting recognition because it's not active.\");\r\n+//   //       recognition.current.starting = true;\r\n+//   //       recognition.current.start();\r\n+//   //       console.log(\"Restarted recognition.\");\r\n+//   //     }\r\n+//   //   };\r\n+\r\n+//   //   const recognitionCheckInterval = setInterval(checkRecognition, 100); // Check every .5 second\r\n+\r\n+//   //   return () => {\r\n+//   //     clearInterval(recognitionCheckInterval);\r\n+//   //   };\r\n+//   // }, [isListening, isSpeaking]);\r\n+\r\n+//   const historyStack = useRef([]);\r\n+\r\n+//   useEffect(() => {\r\n+//     return () => {\r\n+//       // Clean up the listener when the component unmounts\r\n+//       window.removeEventListener(\"popstate\", handlePopState);\r\n+//     };\r\n+//   }, []);\r\n+\r\n+//   const handlePopState = () => {\r\n+//     // This needs to handle both back and forward browser actions\r\n+//     // Use some logic to determine whether it's a back or forward action\r\n+//     // For simplicity, assume it's always back\r\n+//     historyStack.current.pop();\r\n+//     forwardStack.current.length = 0; // Clear forward stack on manual navigation\r\n+//   };\r\n+\r\n+//   // Add a new entry to the stack whenever navigate is called\r\n+//   const customNavigate = (to, options) => {\r\n+//     historyStack.current.push(to);\r\n+//     navigate(to, options);\r\n+//   };\r\n+\r\n+//   // Listen to popstate events to update the history stack\r\n+//   useEffect(() => {\r\n+//     window.addEventListener(\"popstate\", handlePopState);\r\n+//   }, []);\r\n+\r\n+//   const forwardStack = useRef([]);\r\n+\r\n+//   const goBack = () => {\r\n+//     if (window.history.state && window.history.state.idx > 0) {\r\n+//       window.history.back();\r\n+//       speak(\"Going back\");\r\n+//     } else {\r\n+//       speak(\"Can't go back any further.\");\r\n+//     }\r\n+//   };\r\n+\r\n+//   const goForward = () => {\r\n+//     if (window.history.state && window.history.state.idx < window.history.length - 1) {\r\n+//       window.history.forward();\r\n+//       speak(\"Going forward\");\r\n+//     } else {\r\n+//       speak(\"No forward history available.\");\r\n+//     }\r\n+//   };\r\n+\r\n+//   const playVideo = () => {\r\n+//     if (videoRef.current) {\r\n+//       videoRef.current.play();\r\n+//       speak(\"Playing video.\");\r\n+//     } else {\r\n+//       speak(\"No video to play.\");\r\n+//     }\r\n+//   };\r\n+\r\n+//   const pauseVideo = () => {\r\n+//     if (videoRef.current) {\r\n+//       videoRef.current.pause();\r\n+//       speak(\"Video paused.\");\r\n+//     } else {\r\n+//       speak(\"No video to pause.\");\r\n+//     }\r\n+//   };\r\n+\r\n+//   const scrollAmount = window.innerHeight * 0.82;\r\n+\r\n+//   const scrollUp = () => {\r\n+//     if (window.pageYOffset === 0) {\r\n+//       speak(\"Already at the top of the page.\");\r\n+//     } else {\r\n+//       window.scrollBy(0, -scrollAmount);\r\n+//       speak(\"Scrolled up.\");\r\n+//     }\r\n+//   };\r\n+\r\n+//   const scrollDown = () => {\r\n+//     const maxScrollTop =\r\n+//       document.documentElement.scrollHeight - window.innerHeight;\r\n+//     if (window.pageYOffset >= maxScrollTop) {\r\n+//       speak(\"Already at the bottom of the page.\");\r\n+//     } else {\r\n+//       window.scrollBy(0, scrollAmount);\r\n+//       speak(\"Scrolled down.\");\r\n+//     }\r\n+//   };\r\n+\r\n+//   const scrollToTop = () => {\r\n+//     if (window.pageYOffset === 0) {\r\n+//       speak(\"Already at the top of the page.\");\r\n+//     } else {\r\n+//       window.scrollTo(0, 0);\r\n+//       speak(\"Scrolled to the top of the page.\");\r\n+//     }\r\n+//   };\r\n+\r\n+//   const scrollToBottom = () => {\r\n+//     const maxScrollTop =\r\n+//       document.documentElement.scrollHeight - window.innerHeight;\r\n+//     if (window.pageYOffset >= maxScrollTop) {\r\n+//       speak(\"Already at the bottom of the page.\");\r\n+//     } else {\r\n+//       window.scrollTo(0, document.body.scrollHeight);\r\n+//       speak(\"Scrolled to the bottom of the page.\");\r\n+//     }\r\n+//   };\r\n+\r\n+//   const speak = (message) => {\r\n+//     const utterance = new SpeechSynthesisUtterance(message);\r\n+//     utterance.onend = () => {\r\n+//       setIsSpeaking(false);\r\n+//       // Restart recognition after speaking has ended\r\n+//       if (isListening) {\r\n+//         restartRecognition();\r\n+//       }\r\n+//     };\r\n+\r\n+//     setIsSpeaking(true);\r\n+//     // Stop recognition when the bot starts speaking\r\n+//     if (recognition.current) {\r\n+//       recognition.current.abort();\r\n+//     }\r\n+//     speechSynthesis.current.speak(utterance);\r\n+//   };\r\n+\r\n+//   const restartRecognition = () => {\r\n+//     // Check if recognition is not already started and if the bot is set to listen\r\n+//     if (recognition.current && !recognition.current.starting && isListening && !isSpeaking) {\r\n+//       // Only start recognition if it's not already active\r\n+//       if (recognition.current.state !== 'active') {\r\n+//         recognition.current.abort(); // Ensure any ongoing recognition is stopped\r\n+//         recognition.current.starting = true;\r\n+//         recognition.current.start();\r\n+//       }\r\n+//     }\r\n+//   };\r\n+\r\n+//     // Restart recognition when bot finishes speaking and isListening is true\r\n+//     useEffect(() => {\r\n+//       if (!isSpeaking && isListening) {\r\n+//         restartRecognition();\r\n+//       }\r\n+//     }, [isSpeaking, isListening]);\r\n+\r\n+//   const onResult = (event) => {\r\n+//     const resultIndex = event.resultIndex;\r\n+//     const transcript = event.results[resultIndex][0].transcript\r\n+//       .trim()\r\n+//       .toLowerCase();\r\n+\r\n+//     if (event.results[resultIndex].isFinal) {\r\n+//       console.log(`Recognized text: ${transcript}`);\r\n+//       if (transcript.includes(\"brain\")) {\r\n+//         console.log(\"Wake word heard, processing command...\");\r\n+//         handleCommandWithFuse(transcript.replace(\"brain\", \"\"));\r\n+//       }\r\n+//     }\r\n+//   };\r\n+\r\n+//   const onRecognitionEnd = () => {\r\n+//     recognition.current.starting = false;\r\n+//     if (isListening && !isSpeaking) {\r\n+//       restartRecognition();\r\n+//     }\r\n+//   };\r\n+\r\n+//   useEffect(() => {\r\n+//     if (isListening && !hasGreeted) {\r\n+//       speak(\"Hello, I'm Brane. How can I help you today?\");\r\n+//       setHasGreeted(true);\r\n+//     }\r\n+//   }, [isListening, hasGreeted]);\r\n+\r\n+// // Updated startListening function\r\n+// const startListening = () => {\r\n+//   setIsListening(true);\r\n+//   if (recognition.current && !recognition.current.starting) {\r\n+//     recognition.current.start();\r\n+//   }\r\n+// };\r\n+\r\n+// // Updated stopListening function\r\n+// const stopListening = () => {\r\n+//   setIsListening(false);\r\n+//   setIsSpeaking(false); // Reset speaking state\r\n+//   setHasGreeted(false); // Reset greeting state if needed\r\n+//   if (recognition.current) {\r\n+//     recognition.current.abort(); // Stop any ongoing speech recognition\r\n+//   }\r\n+//   if (speechSynthesis.current.speaking) {\r\n+//     speechSynthesis.current.cancel(); // Stop any ongoing speech synthesis\r\n+//   }\r\n+// };\r\n+\r\n+//   const handleCommandWithFuse = (command) => {\r\n+//     const fuse = new Fuse(commands, { keys: [\"utterance\"], threshold: 0.4 });\r\n+//     const results = fuse.search(command);\r\n+//     const foundCommand = results.length ? results[0].item : null;\r\n+\r\n+//     if (foundCommand) {\r\n+//       console.log(\"Command found:\", foundCommand.utterance);\r\n+\r\n+//       if (foundCommand.action) {\r\n+//         foundCommand.action();\r\n+//       } else if (foundCommand.route) {\r\n+//         navigate(foundCommand.route);\r\n+//       }\r\n+\r\n+//       // Speak after performing the action or navigation\r\n+//       speak(foundCommand.response);\r\n+//     } else {\r\n+//       console.log(\"No command found.\");\r\n+//       speak(\"I'm not sure how to respond to that.\");\r\n+//     }\r\n+//   };\r\n+\r\n+//   const commands = [\r\n+//     {\r\n+//       utterance: \"Hello who are you ?\",\r\n+\r\n+//       response:\r\n+//         \"Hi! This is Brane! your Voice bot from Brane Education How can I Assist you Today ?\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"Hello\",\r\n+\r\n+//       response: \"Hi! How can I assist you today?\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"hello\",\r\n+\r\n+//       response: \"Hi! How can I assist you today?\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"Hi.\",\r\n+\r\n+//       response: \"Hello! How can I assist you today?\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"Hey there\",\r\n+\r\n+//       response: \"Hi! How can I assist you today?\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"Good morning Brane.\",\r\n+\r\n+//       response: \"Hey Hiii! Good morning  ! How can I help you?\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"Good afternoon Brane.\",\r\n+\r\n+//       response: \"Hey Hiii! Good after noon ! How can I help you?\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"Good evening Brane.\",\r\n+\r\n+//       response: \"Hey Hiii! Good evening ! How can I help you?\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"can you please take me to login page\",\r\n+\r\n+//       route: \"/login\",\r\n+\r\n+//       response: \"Here's the Login Page, Please Login\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"please take me to login page\",\r\n+\r\n+//       route: \"/login\",\r\n+\r\n+//       response: \"Here's the Login Page, Please Login\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"Go to login page\",\r\n+\r\n+//       route: \"/login\",\r\n+\r\n+//       response: \"Here's the Login Page, Please Login\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"open login page\",\r\n+\r\n+//       route: \"/login\",\r\n+\r\n+//       response: \"Here's the Login Page, Please Login\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"can you please take me to signup page\",\r\n+\r\n+//       route: \"/signup\",\r\n+\r\n+//       response: \"Here's the signup page. Please proceed With Registration.\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"take me to signup page\",\r\n+\r\n+//       route: \"/signup\",\r\n+\r\n+//       response: \"Here's the signup page. Please proceed With Registration.\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"Go to signup page\",\r\n+\r\n+//       route: \"/signup\",\r\n+\r\n+//       response: \"Here's the signup page. Please proceed With Registration.\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"open signup page\",\r\n+\r\n+//       route: \"/signup\",\r\n+\r\n+//       response: \"Here's the signup page. Please proceed With Registration.\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"Go to face id\",\r\n+\r\n+//       route: \"/login/faceid\",\r\n+\r\n+//       response: \"Here's Face ID Login. Please proceed.\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"Go to face id login\",\r\n+\r\n+//       route: \"/login/faceid\",\r\n+\r\n+//       response: \"Here's Face ID Login. Please proceed.\",\r\n+//     },\r\n+//     {\r\n+//       utterance: \"Go to face login\",\r\n+\r\n+//       route: \"/login/faceid\",\r\n+\r\n+//       response: \"Here's Face ID Login. Please proceed.\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"login with face id\",\r\n+\r\n+//       route: \"/login/faceid\",\r\n+\r\n+//       response: \"Here's Face ID Login. Please proceed.\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"login with face\",\r\n+\r\n+//       route: \"/login/faceid\",\r\n+\r\n+//       response: \"Here's Face ID Login. Please proceed.\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"i want to login with face\",\r\n+\r\n+//       route: \"/login/faceid\",\r\n+\r\n+//       response: \"Here's Face ID Login. Please proceed.\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"login with voice\",\r\n+\r\n+//       route: \"/login/voiceid\",\r\n+\r\n+//       response: \"Here's Voice Login. Please proceed.\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"i want to login with voice\",\r\n+\r\n+//       route: \"/login/voiceid\",\r\n+\r\n+//       response: \"Here's Voice Login. Please proceed.\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"go to voice login\",\r\n+\r\n+//       route: \"/login/voiceid\",\r\n+\r\n+//       response: \"Here's Voice Login. Please proceed.\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"login with voice\",\r\n+\r\n+//       route: \"/login/voiceid\",\r\n+\r\n+//       response: \"Here's Voice Login. Please proceed.\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"login with mobile\",\r\n+\r\n+//       route: \"/login/mobile\",\r\n+\r\n+//       response: \"Here's Mobile Login. Please proceed.\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"i want to login with mobile\",\r\n+\r\n+//       route: \"/login/mobile\",\r\n+\r\n+//       response: \"Here's Mobile Login. Please proceed.\",\r\n+//     },\r\n+//     {\r\n+//       utterance: \"go to mobile login\",\r\n+\r\n+//       route: \"/login/mobile\",\r\n+\r\n+//       response: \"Here's Mobile Login. Please proceed.\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"what are platform features\",\r\n+\r\n+//       response:\r\n+//         \"Dashboard, Dynamic time table, Learning Networks, Little Masters, Video Based Dictionary, General Search.\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"Features of platform\",\r\n+\r\n+//       response:\r\n+//         \"Dashboard, Dynamic time table, Learning Networks, Little Masters, Video Based Dictionary, General Search.\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"What does the platform offer\",\r\n+\r\n+//       response:\r\n+//         \"Dashboard, Dynamic time table, Learning Networks, Little Masters, Video Based Dictionary, General Search.\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"Say me the features of platform\",\r\n+\r\n+//       response:\r\n+//         \"Dashboard, Dynamic time table, Learning Networks, Little Masters, Video Based Dictionary, General Search.\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"Say me the services of platform\",\r\n+\r\n+//       response:\r\n+//         \"Dashboard, Dynamic time table, Learning Networks, Little Masters, Video Based Dictionary, General Search.\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"tell me the services offered by the platform\",\r\n+\r\n+//       response:\r\n+//         \"Dashboard, Dynamic time table, Learning Networks, Little Masters, Video Based Dictionary, General Search.\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"explain platform services\",\r\n+\r\n+//       response:\r\n+//         \"Dashboard, Dynamic time table, Learning Networks, Little Masters, Video Based Dictionary, General Search.\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"Give me the Parent voice of Julia Harris\",\r\n+\r\n+//       response:\r\n+//         \"Brane education has helped my son a lot in his studies. He improved a lot in his studies and is now able to score good marks in his exams\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"Play today's motivational video\",\r\n+\r\n+//       response: \"I am playing the video\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"Play today's video\",\r\n+\r\n+//       response: \"I am playing Motivational video\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"Leaders Voice\",\r\n+\r\n+//       response:\r\n+//         \"This Voice-interactive AI Platform is a game Changer. It revolutionizes education.\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"Curriculum Supported by Brane Education\",\r\n+\r\n+//       response:\r\n+//         \"we support multiple Boards let me say few Telangana State Board Andhra Pradesh Board Maharashtra Board Assam Board\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"Boards supported by the platform\",\r\n+\r\n+//       response:\r\n+//         \"we support multiple Boards let me say few Telangana State Board Andhra Pradesh Board Maharashtra Board Assam Board\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"Curriculum\",\r\n+\r\n+//       response:\r\n+//         \"we support multiple Boards let me say few Telangana State Board Andhra Pradesh Board Maharashtra Board Assam Board\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"Go to landing page\",\r\n+\r\n+//       response: \"Okay, I am taking you to the landing page.\",\r\n+\r\n+//       route: \"/childpage\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"take me to landing page\",\r\n+\r\n+//       response: \"Okay, I am taking you to the landing page.\",\r\n+\r\n+//       route: \"/childpage\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"move to landing page\",\r\n+\r\n+//       response: \"Okay, I am taking you to the landing page.\",\r\n+\r\n+//       route: \"/childpage\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"roll back to landing page\",\r\n+\r\n+//       response: \"Okay, I am taking you to the landing page.\",\r\n+\r\n+//       route: \"/childpage\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"move to landing page\",\r\n+\r\n+//       response: \"Okay, I am taking you to the landing page.\",\r\n+\r\n+//       route: \"/childpage\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"what is today's quote\",\r\n+\r\n+//       response:\r\n+//         \"Determination is the power that sees us through all our frustration and obstacles. It helps in building our willpower which is the very basis of success.\",\r\n+\r\n+//       route: \"/childpage\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"Today's Inspirational quote\",\r\n+\r\n+//       response:\r\n+//         \"Determination is the power that sees us through all our frustration and obstacles. It helps in building our willpower which is the very basis of success.\",\r\n+\r\n+//       route: \"/childpage\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"say me today's quote\",\r\n+\r\n+//       response:\r\n+//         \"Determination is the power that sees us through all our frustration and obstacles. It helps in building our willpower which is the very basis of success.\",\r\n+\r\n+//       route: \"/childpage\",\r\n+//     },\r\n+//     {\r\n+//       utterance: \"go back\",\r\n+//       response: \"\",\r\n+//       action: goBack, // Note the use of an action property\r\n+//     },\r\n+//     {\r\n+//       utterance: \"go forward\",\r\n+//       response: \"\",\r\n+//       action: goForward,\r\n+//     },\r\n+//     {\r\n+//       utterance: \"play video\",\r\n+//       // response: \"Playing video.\",\r\n+//       action: playVideo,\r\n+//     },\r\n+//     {\r\n+//       utterance: \"pause video\",\r\n+//       // response: \"Pausing video.\",\r\n+//       action: pauseVideo,\r\n+//     },\r\n+//     {\r\n+//       utterance: \"start video\",\r\n+//       // response: \"Playing video.\",\r\n+//       action: playVideo,\r\n+//     },\r\n+//     {\r\n+//       utterance: \"stop video\",\r\n+//       // response: \"Playing video.\",\r\n+//       action: pauseVideo,\r\n+//     },\r\n+//     {\r\n+//       utterance: \"scroll up\",\r\n+//       // response: \"Scrolling up.\",\r\n+//       action: scrollUp,\r\n+//     },\r\n+//     {\r\n+//       utterance: \"scroll down\",\r\n+//       // response: \"Scrolling down.\",\r\n+//       action: scrollDown,\r\n+//     },\r\n+//     {\r\n+//       utterance: \"go up\",\r\n+\r\n+//       // response: \"Scrolling up.\",\r\n+//       action: scrollUp,\r\n+//     },\r\n+//     {\r\n+//       utterance: \"go down\",\r\n+//       // response: \"Scrolling down.\",\r\n+//       action: scrollDown,\r\n+//     },\r\n+//     {\r\n+//       utterance: \"scroll to top\",\r\n+//       action: scrollToTop,\r\n+//     },\r\n+//     {\r\n+//       utterance: \"scroll to bottom\",\r\n+//       action: scrollToBottom,\r\n+//     },\r\n+//     {\r\n+//       utterance: \"brane stop\",\r\n+//       action: stopListening,\r\n+//     },\r\n+//     {\r\n+//       utterance: \"brane turn off\",\r\n+//       action: stopListening,\r\n+//     },\r\n+//     {\r\n+//       utterance: \"brane stop the bot\",\r\n+//       action: stopListening,\r\n+//     },\r\n+//   ];\r\n+\r\n+//   return (\r\n+//     <div className=\"speech-bot-container\">\r\n+//       <div\r\n+//         className={`button-container ${\r\n+//           isListening ? \"voicebotframeactive\" : \"voicebotframe\"\r\n+//         }`}\r\n+//       >\r\n+//         <button onClick={isListening ? stopListening : startListening}>\r\n+//           {isListening ? \"Stop\" : \"Start\"} Animation\r\n+//         </button>\r\n+//         {/* <button onClick={toggleBotActive}>\r\n+//         {isBotActive ? 'Deactivate Bot' : 'Activate Bot'}\r\n+//       </button> */}\r\n+//       </div>\r\n+//     </div>\r\n+//   );\r\n+// };\r\n+\r\n+// export default VoiceBot;\r\n+\r\n+//Bot Video added but some start issues\r\n+\r\n+// import React, { useState, useEffect, useRef } from \"react\";\r\n+// import { useNavigate, useLocation } from \"react-router-dom\";\r\n+// import Fuse from \"fuse.js\";\r\n+// import \"./VoiceBot.css\";\r\n+\r\n+// const VoiceBot = ({ videoRef }) => {\r\n+//   const [isListening, setIsListening] = useState(false);\r\n+//   const [isSpeaking, setIsSpeaking] = useState(false);\r\n+//   const recognition = useRef(null);\r\n+//   const speechSynthesis = useRef(window.speechSynthesis);\r\n+//   const hasGreeted = useRef(false);\r\n+//   const restartRecognitionTimeout = useRef(null);\r\n+//   const navigate = useNavigate();\r\n+//   const location = useLocation();\r\n+//   const [isRecognitionActive, setIsRecognitionActive] = useState(false); // New state to track recognition status\r\n+\r\n+//   useEffect(() => {\r\n+//     recognition.current = new window.webkitSpeechRecognition();\r\n+//     recognition.current.continuous = true;\r\n+//     recognition.current.interimResults = false;\r\n+//     recognition.current.onresult = onResult;\r\n+//     recognition.current.onend = () => {\r\n+//       console.log(\"Recognition ended.\");\r\n+//       if (isListening) {\r\n+//         startListening();\r\n+//       }\r\n+//     };\r\n+//     recognition.current.onerror = (event) => {\r\n+//       console.error(\"Recognition error:\", event.error);\r\n+//     };\r\n+\r\n+//     return () => {\r\n+//       recognition.current.abort();\r\n+//     };\r\n+//   }, []);\r\n+\r\n+//   // Update useEffect for managing the recognition state based on isListening and isRecognitionActive\r\n+//   useEffect(() => {\r\n+//     if (isListening && !isRecognitionActive) {\r\n+//       startListening();\r\n+//     } else if (!isListening && isRecognitionActive) {\r\n+//       stopListening();\r\n+//     }\r\n+//   }, [isListening, isRecognitionActive]);\r\n+\r\n+//   const goBack = () => {\r\n+//     if (window.history.length > 1) {\r\n+//       navigate(-1);\r\n+//     } else {\r\n+//       speak(\"Can't go back any further.\");\r\n+//     }\r\n+//   };\r\n+\r\n+//   const goForward = () => {\r\n+//     // Unfortunately, there's no direct way to check if you can go forward in the history.\r\n+//     // You might need to manage this state manually based on user navigation.\r\n+//     navigate(1);\r\n+//   };\r\n+\r\n+//   const playVideo = () => {\r\n+//     if (videoRef.current && !videoRef.current.paused) {\r\n+//       speak(\"Video is already playing.\");\r\n+//     } else if (videoRef.current) {\r\n+//       videoRef.current.play();\r\n+//       speak(\"Playing video.\");\r\n+//     } else {\r\n+//       speak(\"No video to play.\");\r\n+//     }\r\n+//   };\r\n+\r\n+//   const pauseVideo = () => {\r\n+//     if (videoRef.current && videoRef.current.paused) {\r\n+//       speak(\"Video is already paused.\");\r\n+//     } else if (videoRef.current) {\r\n+//       videoRef.current.pause();\r\n+//       speak(\"Video paused.\");\r\n+//     } else {\r\n+//       speak(\"No video to pause.\");\r\n+//     }\r\n+//   };\r\n+\r\n+//   const scrollAmount = window.innerHeight * 0.82;\r\n+\r\n+//   const scrollUp = () => {\r\n+//     if (window.pageYOffset === 0) {\r\n+//       speak(\"Already at the top of the page.\");\r\n+//     } else {\r\n+//       window.scrollBy(0, -scrollAmount);\r\n+//       speak(\"Scrolled up.\");\r\n+//     }\r\n+//   };\r\n+\r\n+//   const scrollDown = () => {\r\n+//     const maxScrollTop =\r\n+//       document.documentElement.scrollHeight - window.innerHeight;\r\n+//     if (window.pageYOffset >= maxScrollTop) {\r\n+//       speak(\"Already at the bottom of the page.\");\r\n+//     } else {\r\n+//       window.scrollBy(0, scrollAmount);\r\n+//       speak(\"Scrolled down.\");\r\n+//     }\r\n+//   };\r\n+\r\n+//   const scrollToTop = () => {\r\n+//     if (window.pageYOffset === 0) {\r\n+//       speak(\"Already at the top of the page.\");\r\n+//     } else {\r\n+//       window.scrollTo(0, 0);\r\n+//       speak(\"Scrolled to the top of the page.\");\r\n+//     }\r\n+//   };\r\n+\r\n+//   const scrollToBottom = () => {\r\n+//     const maxScrollTop =\r\n+//       document.documentElement.scrollHeight - window.innerHeight;\r\n+//     if (window.pageYOffset >= maxScrollTop) {\r\n+//       speak(\"Already at the bottom of the page.\");\r\n+//     } else {\r\n+//       window.scrollTo(0, document.body.scrollHeight);\r\n+//       speak(\"Scrolled to the bottom of the page.\");\r\n+//     }\r\n+//   };\r\n+\r\n+//   // const speak = (message) => {\r\n+//   //   const utterance = new SpeechSynthesisUtterance(message);\r\n+//   //   utterance.onend = () => {\r\n+//   //     setIsSpeaking(false);\r\n+//   //     console.log(\"Speaking ended.\");\r\n+//   //     // Only restart recognition if we're still supposed to be listening\r\n+//   //     // if (isListening) {\r\n+//   //     //   if (restartRecognitionTimeout.current) {\r\n+//   //     //     clearTimeout(restartRecognitionTimeout.current);\r\n+//   //     //   }\r\n+//   //     //   restartRecognitionTimeout.current = setTimeout(() => {\r\n+//   //     //     console.log(\"Recognition restarted.\");\r\n+//   //     //     recognition.current.start();\r\n+//   //     //   }, 100); // Delay to prevent immediate restart\r\n+//   //     // }\r\n+//   //     if (isListening && !recognition.current.starting) { // Check the flag before restarting\r\n+//   //       recognition.current.starting = true; // Set the flag when starting recognition\r\n+//   //       recognition.current.start();\r\n+//   //     }\r\n+//   //   };\r\n+\r\n+//   //   setIsSpeaking(true);\r\n+//   //   console.log(\"Speaking started.\");\r\n+//   //   recognition.current.stop(); // Stop recognition when the bot starts speaking\r\n+//   //   speechSynthesis.current.speak(utterance);\r\n+//   // };\r\n+\r\n+//   const speak = (message) => {\r\n+//     console.log(\"speak function called with message:\", message);\r\n+//     const utterance = new SpeechSynthesisUtterance(message);\r\n+//     utterance.onend = () => {\r\n+//       setIsSpeaking(false);\r\n+//       console.log(\"Speaking ended.\");\r\n+//       // Directly handle the restart of recognition here if needed\r\n+//       if (isListening) {\r\n+//         startListening();\r\n+//       }\r\n+//     };\r\n+\r\n+//     setIsSpeaking(true);\r\n+//     console.log(\"Speaking started.\");\r\n+//     recognition.current.stop(); // Ensure to stop recognition before speaking\r\n+//     speechSynthesis.current.speak(utterance);\r\n+//   };\r\n+\r\n+//   const onResult = (event) => {\r\n+//     const resultIndex = event.resultIndex;\r\n+//     const transcript = event.results[resultIndex][0].transcript\r\n+//       .trim()\r\n+//       .toLowerCase();\r\n+\r\n+//     if (event.results[resultIndex].isFinal) {\r\n+//       console.log(`Recognized text: ${transcript}`);\r\n+//       if (transcript.includes(\"brain\")) {\r\n+//         console.log(\"Wake word heard, processing command...\");\r\n+//         handleCommandWithFuse(transcript.replace(\"brain\", \"\"));\r\n+//       }\r\n+//     }\r\n+//   };\r\n+\r\n+//   // const onRecognitionEnd = () => {\r\n+//   //   console.log(\"Recognition ended.\");\r\n+//   //   setIsRecognitionActive(false); // Update state when recognition ends\r\n+//   //   recognition.current.starting = false; // Reset the flag when recognition ends\r\n+//   //   // We now check if the recognition is already running before starting it again\r\n+//   //   if (isListening && !isSpeaking && !recognition.current?.starting) {\r\n+//   //     console.log(\"Restarting recognition.\");\r\n+//   //     recognition.current.start();\r\n+//   //   }\r\n+//   // };\r\n+\r\n+//   // useEffect(() => {\r\n+//   //   if (isListening && !hasGreeted.current) {\r\n+//   //     speak(\"Hello, I'm Brane. How can I assist you today?\");\r\n+//   //     hasGreeted.current = true;\r\n+//   //   } else if (isListening && !isSpeaking) {\r\n+//   //     recognition.current.start();\r\n+//   //   }\r\n+//   // }, [isListening, isSpeaking]);\r\n+\r\n+//   useEffect(() => {\r\n+//     if (isListening && !hasGreeted.current) {\r\n+//       speak(\"Hello, I'm Brane. How can I assist you today?\");\r\n+//       hasGreeted.current = true;\r\n+//     } else if (isListening && !isSpeaking && !recognition.current.starting) {\r\n+//       // Check the flag before starting\r\n+//       recognition.current.starting = true; // Set the flag when starting recognition\r\n+//       recognition.current.start();\r\n+//     }\r\n+//   }, [isListening, isSpeaking]);\r\n+\r\n+//   // const startListening = () => {\r\n+//   //   console.log(\"Attempting to start listening.\");\r\n+//   //   if (recognition.current && !recognition.current.starting) {\r\n+//   //     setIsListening(true);\r\n+//   //     recognition.current.starting = true; // Set the flag when starting recognition\r\n+//   //     recognition.current.start();\r\n+//   //     console.log(\"Listening started.\");\r\n+//   //   }\r\n+//   // };\r\n+\r\n+//   // const stopListening = () => {\r\n+//   //   console.log(\"Stopping listening.\");\r\n+\r\n+//   //   setIsListening(false);\r\n+//   //   recognition.current.stop();\r\n+//   //   if (speechSynthesis.current.speaking) {\r\n+//   //     speechSynthesis.current.cancel();\r\n+//   //   }\r\n+//   //   if (restartRecognitionTimeout.current) {\r\n+//   //     clearTimeout(restartRecognitionTimeout.current);\r\n+//   //   }\r\n+//   //   console.log(\"Listening stopped.\");\r\n+//   // };\r\n+//   // Handle start and stop listening logic\r\n+//   const startListening = () => {\r\n+//     console.log(\"Attempting to start listening.\");\r\n+//     if (!recognition.current.starting) {\r\n+//       setIsListening(true);\r\n+//       recognition.current.starting = true;\r\n+//       recognition.current.start();\r\n+//       console.log(\"Listening started.\");\r\n+//     } else {\r\n+//       console.log(\"Recognition already active.\");\r\n+//     }\r\n+//   };\r\n+\r\n+//   const stopListening = () => {\r\n+//     console.log(\"Stopping listening.\");\r\n+//     if (recognition.current.starting) {\r\n+//       setIsListening(false);\r\n+//       recognition.current.starting = false;\r\n+//       recognition.current.stop();\r\n+//       console.log(\"Listening stopped.\");\r\n+//     } else {\r\n+//       console.log(\"Recognition already inactive.\");\r\n+//     }\r\n+//   };\r\n+\r\n+//   // const handleCommandWithFuse = (command) => {\r\n+//   //   const fuse = new Fuse(commands, { keys: [\"utterance\"], threshold: 0.4 });\r\n+//   //   const results = fuse.search(command);\r\n+//   //   const foundCommand = results.length ? results[0].item : null;\r\n+\r\n+//   //   if (foundCommand) {\r\n+//   //     console.log(\"Command found:\", foundCommand.utterance);\r\n+//   //     speak(foundCommand.response);\r\n+//   //     if (foundCommand.route) {\r\n+//   //       navigate(foundCommand.route); // Navigate to the route specified in the command\r\n+//   //     }\r\n+//   //   } else {\r\n+//   //     console.log(\"No command found.\");\r\n+//   //     speak(\"I'm not sure how to respond to that.\");\r\n+//   //   }\r\n+//   // };\r\n+\r\n+//   const handleCommandWithFuse = (command) => {\r\n+//     const fuse = new Fuse(commands, { keys: [\"utterance\"], threshold: 0.4 });\r\n+//     const results = fuse.search(command);\r\n+//     const foundCommand = results.length ? results[0].item : null;\r\n+\r\n+//     if (foundCommand) {\r\n+//       console.log(\"Command found:\", foundCommand.utterance);\r\n+\r\n+//       if (foundCommand.route) {\r\n+//         if (location.pathname !== foundCommand.route) {\r\n+//           navigate(foundCommand.route);\r\n+//           speak(\r\n+//             `Navigating to ${\r\n+//               foundCommand.routeDescription || \"requested page\"\r\n+//             }.`\r\n+//           );\r\n+//         } else {\r\n+//           speak(\r\n+//             `You are already on the ${\r\n+//               foundCommand.routeDescription || \"requested page\"\r\n+//             }.`\r\n+//           );\r\n+//         }\r\n+//       } else if (foundCommand.action) {\r\n+//         foundCommand.action();\r\n+//       }\r\n+\r\n+//       if (foundCommand.response) {\r\n+//         speak(foundCommand.response);\r\n+//       }\r\n+//     } else {\r\n+//       console.log(\"No command found.\");\r\n+//       speak(\"I'm not sure how to respond to that.\");\r\n+//     }\r\n+//   };\r\n+\r\n+//   const commands = [\r\n+//     {\r\n+//       utterance: \"Hello who are you ?\",\r\n+\r\n+//       response:\r\n+//         \"Hi! This is Brane! your Voice bot from Brane Education How can I Assist you Today ?\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"Hello\",\r\n+\r\n+//       response: \"Hi! How can I assist you today?\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"hello\",\r\n+\r\n+//       response: \"Hi! How can I assist you today?\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"Hi.\",\r\n+\r\n+//       response: \"Hello! How can I assist you today?\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"Hey there\",\r\n+\r\n+//       response: \"Hi! How can I assist you today?\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"Good morning Brane.\",\r\n+\r\n+//       response: \"Hey Hiii! Good morning  ! How can I help you?\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"Good afternoon Brane.\",\r\n+\r\n+//       response: \"Hey Hiii! Good after noon ! How can I help you?\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"Good evening Brane.\",\r\n+\r\n+//       response: \"Hey Hiii! Good evening ! How can I help you?\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"can you please take me to login page\",\r\n+//       route: \"/login\",\r\n+//       routeDescription: \"login page\",\r\n+//       response: \"Navigating to the login page.\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"go to login page\",\r\n+//       route: \"/login\",\r\n+//       routeDescription: \"login page\",\r\n+//       response: \"Navigating to the login page.\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"please take me to login page\",\r\n+//       route: \"/login\",\r\n+//       routeDescription: \"login page\",\r\n+//       response: \"Navigating to the login page.\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"Go to login page\",\r\n+//       route: \"/login\",\r\n+//       routeDescription: \"login page\",\r\n+//       response: \"Navigating to the login page.\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"open login page\",\r\n+//       route: \"/login\",\r\n+//       routeDescription: \"login page\",\r\n+//       response: \"Navigating to the login page.\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"can you please take me to signup page\",\r\n+//       route: \"/signup\",\r\n+//       routeDescription: \"signup page\",\r\n+//       response: \"Navigating to the signup page.\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"take me to signup page\",\r\n+//       route: \"/signup\",\r\n+//       routeDescription: \"signup page\",\r\n+//       response: \"Navigating to the signup page.\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"Go to signup page\",\r\n+//       route: \"/signup\",\r\n+//       routeDescription: \"signup page\",\r\n+//       response: \"Navigating to the signup page.\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"open signup page\",\r\n+//       route: \"/signup\",\r\n+//       routeDescription: \"signup page\",\r\n+//       response: \"Navigating to the signup page.\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"what are platform features\",\r\n+\r\n+//       response:\r\n+//         \"Dashboard, Dynamic time table, Learning Networks, Little Masters, Video Based Dictionary, General Search.\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"Features of platform\",\r\n+\r\n+//       response:\r\n+//         \"Dashboard, Dynamic time table, Learning Networks, Little Masters, Video Based Dictionary, General Search.\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"What does the platform offer\",\r\n+\r\n+//       response:\r\n+//         \"Dashboard, Dynamic time table, Learning Networks, Little Masters, Video Based Dictionary, General Search.\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"Say me the features of platform\",\r\n+\r\n+//       response:\r\n+//         \"Dashboard, Dynamic time table, Learning Networks, Little Masters, Video Based Dictionary, General Search.\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"Say me the services of platform\",\r\n+\r\n+//       response:\r\n+//         \"Dashboard, Dynamic time table, Learning Networks, Little Masters, Video Based Dictionary, General Search.\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"tell me the services offered by the platform\",\r\n+\r\n+//       response:\r\n+//         \"Dashboard, Dynamic time table, Learning Networks, Little Masters, Video Based Dictionary, General Search.\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"explain platform services\",\r\n+\r\n+//       response:\r\n+//         \"Dashboard, Dynamic time table, Learning Networks, Little Masters, Video Based Dictionary, General Search.\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"Give me the Parent voice of Julia Harris\",\r\n+\r\n+//       response:\r\n+//         \"Brane education has helped my son a lot in his studies. He improved a lot in his studies and is now able to score good marks in his exams\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"Play today's motivational video\",\r\n+\r\n+//       response: \"I am playing the video\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"Play today's video\",\r\n+\r\n+//       response: \"I am playing Motivational video\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"Leaders Voice\",\r\n+\r\n+//       response:\r\n+//         \"This Voice-interactive AI Platform is a game Changer. It revolutionizes education.\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"Curriculum Supported by Brane Education\",\r\n+\r\n+//       response:\r\n+//         \"we support multiple Boards let me say few Telangana State Board Andhra Pradesh Board Maharashtra Board Assam Board\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"Boards supported by the platform\",\r\n+\r\n+//       response:\r\n+//         \"we support multiple Boards let me say few Telangana State Board Andhra Pradesh Board Maharashtra Board Assam Board\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"Curriculum\",\r\n+\r\n+//       response:\r\n+//         \"we support multiple Boards let me say few Telangana State Board Andhra Pradesh Board Maharashtra Board Assam Board\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"Go to landing page\",\r\n+\r\n+//       response: \"Okay, I am taking you to the landing page.\",\r\n+\r\n+//       route: \"/childpage\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"take me to landing page\",\r\n+\r\n+//       response: \"Okay, I am taking you to the landing page.\",\r\n+\r\n+//       route: \"/childpage\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"move to landing page\",\r\n+\r\n+//       response: \"Okay, I am taking you to the landing page.\",\r\n+\r\n+//       route: \"/childpage\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"roll back to landing page\",\r\n+\r\n+//       response: \"Okay, I am taking you to the landing page.\",\r\n+\r\n+//       route: \"/childpage\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"move to landing page\",\r\n+\r\n+//       response: \"Okay, I am taking you to the landing page.\",\r\n+\r\n+//       route: \"/childpage\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"what is today's quote\",\r\n+\r\n+//       response:\r\n+//         \"Determination is the power that sees us through all our frustration and obstacles. It helps in building our willpower which is the very basis of success.\",\r\n+\r\n+//       // route: \"/childpage\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"Today's Inspirational quote\",\r\n+\r\n+//       response:\r\n+//         \"Determination is the power that sees us through all our frustration and obstacles. It helps in building our willpower which is the very basis of success.\",\r\n+\r\n+//       // route: \"/childpage\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"say me today's quote\",\r\n+\r\n+//       response:\r\n+//         \"Determination is the power that sees us through all our frustration and obstacles. It helps in building our willpower which is the very basis of success.\",\r\n+\r\n+//       // route: \"/childpage\",\r\n+//     },\r\n+//     {\r\n+//       utterance: \"go back\",\r\n+//       response: \"Going back.\",\r\n+//       action: goBack, // Note the use of an action property\r\n+//     },\r\n+//     {\r\n+//       utterance: \"go forward\",\r\n+//       response: \"Going forward.\",\r\n+//       action: goForward,\r\n+//     },\r\n+//     {\r\n+//       utterance: \"play video\",\r\n+//       // response: \"Playing video.\",\r\n+//       action: playVideo,\r\n+//     },\r\n+//     {\r\n+//       utterance: \"pause video\",\r\n+//       // response: \"Pausing video.\",\r\n+//       action: pauseVideo,\r\n+//     },\r\n+//     {\r\n+//       utterance: \"start video\",\r\n+//       // response: \"Playing video.\",\r\n+//       action: playVideo,\r\n+//     },\r\n+//     {\r\n+//       utterance: \"stop video\",\r\n+//       // response: \"Playing video.\",\r\n+//       action: pauseVideo,\r\n+//     },\r\n+//     {\r\n+//       utterance: \"scroll up\",\r\n+//       // response: \"Scrolling up.\",\r\n+//       action: scrollUp,\r\n+//     },\r\n+//     {\r\n+//       utterance: \"scroll down\",\r\n+//       // response: \"Scrolling down.\",\r\n+//       action: scrollDown,\r\n+//     },\r\n+//     {\r\n+//       utterance: \"go up\",\r\n+\r\n+//       // response: \"Scrolling up.\",\r\n+//       action: scrollUp,\r\n+//     },\r\n+//     {\r\n+//       utterance: \"go down\",\r\n+//       // response: \"Scrolling down.\",\r\n+//       action: scrollDown,\r\n+//     },\r\n+//     {\r\n+//       utterance: \"scroll to top\",\r\n+//       action: scrollToTop,\r\n+//     },\r\n+//     {\r\n+//       utterance: \"scroll to bottom\",\r\n+//       action: scrollToBottom,\r\n+//     },\r\n+//   ];\r\n+//   return (\r\n+//     <div className=\"speech-bot-container\">\r\n+//       <div\r\n+//         className={`button-container ${\r\n+//           isListening ? \"voicebotframeactive\" : \"voicebotframe\"\r\n+//         }`}\r\n+//       >\r\n+//         <div onClick={isListening ? stopListening : startListening}>\r\n+//           <iframe\r\n+//             src={\r\n+//               isListening\r\n+//                 ? \"https://lottie.host/?file=a89aca3f-5407-4052-82c3-2048afca7a9f/NpCdWzLSKD.json\"\r\n+//                 : \"https://lottie.host/?file=d2b6cc0e-fe95-4847-85b5-35365fca7e00/vTudpCuPZq.json\"\r\n+//             }\r\n+//             width=\"120\" // Set your desired width\r\n+//             height=\"120\" // Set your desired height\r\n+//             title={isListening ? \"Stop Animation\" : \"Start Animation\"}\r\n+//             className={isListening ? \"voicebotframeactive\" : \"voicebotframe\"}\r\n+//           ></iframe>\r\n+//           {isListening ? (\r\n+//             <div className=\"overlay\" onClick={stopListening}></div>\r\n+//           ) : (\r\n+//             <div className=\"overlay\" onClick={startListening}></div>\r\n+//           )}\r\n+//         </div>\r\n+//       </div>\r\n+//     </div>\r\n+//   );\r\n+// };\r\n+\r\n+// export default VoiceBot;\r\n+\r\n+// All functionalities but messed up\r\n+\r\n+// import React, { useState, useEffect, useRef } from \"react\";\r\n+// import { useNavigate, useLocation } from \"react-router-dom\";\r\n+// import Fuse from \"fuse.js\";\r\n+// import \"./VoiceBot.css\";\r\n+\r\n+// const VoiceBot = ({ videoRef, takeTestRef, goBackRef }) => {\r\n+//   const [isListening, setIsListening] = useState(false);\r\n+//   const [isSpeaking, setIsSpeaking] = useState(false);\r\n+//   const recognition = useRef(null);\r\n+//   const speechSynthesis = useRef(window.speechSynthesis);\r\n+//   const hasGreeted = useRef(false);\r\n+//   const navigate = useNavigate();\r\n+//   const location = useLocation();\r\n+//   const isRecognitionActive = useRef(false);\r\n+\r\n+//   useEffect(() => {\r\n+//     recognition.current = new window.webkitSpeechRecognition();\r\n+//     recognition.current.continuous = true;\r\n+//     recognition.current.interimResults = false;\r\n+//     recognition.current.onresult = onResult;\r\n+//     recognition.current.onend = onRecognitionEnd;\r\n+\r\n+//     return () => {\r\n+//       if (recognition.current) {\r\n+//         recognition.current.abort();\r\n+//       }\r\n+//     };\r\n+//   }, [location.pathname]);\r\n+\r\n+//   const onResult = (event) => {\r\n+//     const resultIndex = event.resultIndex;\r\n+//     const transcript = event.results[resultIndex][0].transcript\r\n+//       .trim()\r\n+//       .toLowerCase();\r\n+\r\n+//     if (event.results[resultIndex].isFinal) {\r\n+//       console.log(`Recognized text: ${transcript}`);\r\n+//       if (transcript.includes(\"brain\")) {\r\n+//         console.log(\"Wake word heard, processing command...\");\r\n+//         handleCommandWithFuse(transcript.replace(\"brain\", \"\"));\r\n+//       }\r\n+//     }\r\n+//   };\r\n+\r\n+//   const startListening = () => {\r\n+//     if (!isRecognitionActive.current) {\r\n+//       setIsListening(true);\r\n+//       recognition.current.start();\r\n+//       isRecognitionActive.current = true;\r\n+//     }\r\n+//   };\r\n+\r\n+//   const stopListening = () => {\r\n+//     if (isRecognitionActive.current) {\r\n+//       setIsListening(false);\r\n+//       recognition.current.stop();\r\n+//       isRecognitionActive.current = false;\r\n+//     }\r\n+//   };\r\n+\r\n+//   const onRecognitionEnd = () => {\r\n+//     isRecognitionActive.current = false;\r\n+//     if (isListening) {\r\n+//       startListening();\r\n+//     }\r\n+//   };\r\n+\r\n+//   const speak = (message) => {\r\n+//     const utterance = new SpeechSynthesisUtterance(message);\r\n+//     utterance.onend = () => {\r\n+//       setIsSpeaking(false);\r\n+//       if (isListening && !isRecognitionActive.current) {\r\n+//         startListening();\r\n+//       }\r\n+//     };\r\n+\r\n+//     setIsSpeaking(true);\r\n+//     if (isRecognitionActive.current) {\r\n+//       stopListening(); // Adjusted to use stopListening\r\n+//     }\r\n+//     speechSynthesis.current.speak(utterance);\r\n+//   };\r\n+\r\n+//   useEffect(() => {\r\n+//     if (isListening && !hasGreeted.current) {\r\n+//       speak(\"Hello, I'm Brane. How can I assist you today?\");\r\n+//       hasGreeted.current = true;\r\n+//     }\r\n+//   }, [isListening]);\r\n+\r\n+//   const goBack = () => {\r\n+//     if (window.history.length > 1) {\r\n+//       navigate(-1);\r\n+//     } else {\r\n+//       speak(\"Can't go back any further.\");\r\n+//     }\r\n+//   };\r\n+\r\n+//   const goForward = () => {\r\n+//     // Unfortunately, there's no direct way to check if you can go forward in the history.\r\n+//     // You might need to manage this state manually based on user navigation.\r\n+//     navigate(1);\r\n+//   };\r\n+\r\n+//   const playVideo = () => {\r\n+//     if (videoRef.current && !videoRef.current.paused) {\r\n+//       speak(\"Video is already playing.\");\r\n+//     } else if (videoRef.current) {\r\n+//       videoRef.current.play();\r\n+//       speak(\"Playing video.\");\r\n+//     } else {\r\n+//       speak(\"No video to play.\");\r\n+//     }\r\n+//   };\r\n+\r\n+//   const pauseVideo = () => {\r\n+//     if (videoRef.current && videoRef.current.paused) {\r\n+//       speak(\"Video is already paused.\");\r\n+//     } else if (videoRef.current) {\r\n+//       videoRef.current.pause();\r\n+//       speak(\"Video paused.\");\r\n+//     } else {\r\n+//       speak(\"No video to pause.\");\r\n+//     }\r\n+//   };\r\n+\r\n+//   const scrollAmount = window.innerHeight * 0.82;\r\n+\r\n+//   const scrollUp = () => {\r\n+//     if (window.pageYOffset === 0) {\r\n+//       speak(\"Already at the top of the page.\");\r\n+//     } else {\r\n+//       window.scrollBy(0, -scrollAmount);\r\n+//       speak(\"Scrolled up.\");\r\n+//     }\r\n+//   };\r\n+\r\n+//   const scrollDown = () => {\r\n+//     const maxScrollTop =\r\n+//       document.documentElement.scrollHeight - window.innerHeight;\r\n+//     if (window.pageYOffset >= maxScrollTop) {\r\n+//       speak(\"Already at the bottom of the page.\");\r\n+//     } else {\r\n+//       window.scrollBy(0, scrollAmount);\r\n+//       speak(\"Scrolled down.\");\r\n+//     }\r\n+//   };\r\n+\r\n+//   const scrollToTop = () => {\r\n+//     if (window.pageYOffset === 0) {\r\n+//       speak(\"Already at the top of the page.\");\r\n+//     } else {\r\n+//       window.scrollTo(0, 0);\r\n+//       speak(\"Scrolled to the top of the page.\");\r\n+//     }\r\n+//   };\r\n+\r\n+//   const scrollToBottom = () => {\r\n+//     const maxScrollTop =\r\n+//       document.documentElement.scrollHeight - window.innerHeight;\r\n+//     if (window.pageYOffset >= maxScrollTop) {\r\n+//       speak(\"Already at the bottom of the page.\");\r\n+//     } else {\r\n+//       window.scrollTo(0, document.body.scrollHeight);\r\n+//       speak(\"Scrolled to the bottom of the page.\");\r\n+//     }\r\n+//   };\r\n+\r\n+//   // const speak = (message) => {\r\n+//   //   const utterance = new SpeechSynthesisUtterance(message);\r\n+//   //   utterance.onend = () => {\r\n+//   //     setIsSpeaking(false);\r\n+//   //     console.log(\"Speaking ended.\");\r\n+//   //     // Only restart recognition if we're still supposed to be listening\r\n+//   //     // if (isListening) {\r\n+//   //     //   if (restartRecognitionTimeout.current) {\r\n+//   //     //     clearTimeout(restartRecognitionTimeout.current);\r\n+//   //     //   }\r\n+//   //     //   restartRecognitionTimeout.current = setTimeout(() => {\r\n+//   //     //     console.log(\"Recognition restarted.\");\r\n+//   //     //     recognition.current.start();\r\n+//   //     //   }, 100); // Delay to prevent immediate restart\r\n+//   //     // }\r\n+//   //     if (isListening && !recognition.current.starting) { // Check the flag before restarting\r\n+//   //       recognition.current.starting = true; // Set the flag when starting recognition\r\n+//   //       recognition.current.start();\r\n+//   //     }\r\n+//   //   };\r\n+\r\n+//   //   setIsSpeaking(true);\r\n+//   //   console.log(\"Speaking started.\");\r\n+//   //   recognition.current.stop(); // Stop recognition when the bot starts speaking\r\n+//   //   speechSynthesis.current.speak(utterance);\r\n+//   // };\r\n+\r\n+//   // const onRecognitionEnd = () => {\r\n+//   //   console.log(\"Recognition ended.\");\r\n+//   //   setIsRecognitionActive(false); // Update state when recognition ends\r\n+//   //   recognition.current.starting = false; // Reset the flag when recognition ends\r\n+//   //   // We now check if the recognition is already running before starting it again\r\n+//   //   if (isListening && !isSpeaking && !recognition.current?.starting) {\r\n+//   //     console.log(\"Restarting recognition.\");\r\n+//   //     recognition.current.start();\r\n+//   //   }\r\n+//   // };\r\n+\r\n+//   // useEffect(() => {\r\n+//   //   if (isListening && !hasGreeted.current) {\r\n+//   //     speak(\"Hello, I'm Brane. How can I assist you today?\");\r\n+//   //     hasGreeted.current = true;\r\n+//   //   } else if (isListening && !isSpeaking) {\r\n+//   //     recognition.current.start();\r\n+//   //   }\r\n+//   // }, [isListening, isSpeaking]);\r\n+\r\n+//   // const startListening = () => {\r\n+//   //   console.log(\"Attempting to start listening.\");\r\n+//   //   if (recognition.current && !recognition.current.starting) {\r\n+//   //     setIsListening(true);\r\n+//   //     recognition.current.starting = true; // Set the flag when starting recognition\r\n+//   //     recognition.current.start();\r\n+//   //     console.log(\"Listening started.\");\r\n+//   //   }\r\n+//   // };\r\n+\r\n+//   // const stopListening = () => {\r\n+//   //   console.log(\"Stopping listening.\");\r\n+\r\n+//   //   setIsListening(false);\r\n+//   //   recognition.current.stop();\r\n+//   //   if (speechSynthesis.current.speaking) {\r\n+//   //     speechSynthesis.current.cancel();\r\n+//   //   }\r\n+//   //   if (restartRecognitionTimeout.current) {\r\n+//   //     clearTimeout(restartRecognitionTimeout.current);\r\n+//   //   }\r\n+//   //   console.log(\"Listening stopped.\");\r\n+//   // };\r\n+//   // Handle start and stop listening logic\r\n+\r\n+//   useEffect(() => {\r\n+//     if (isListening && !hasGreeted.current) {\r\n+//       speak(\"Hello, I'm Brane. How can I assist you today?\");\r\n+//       hasGreeted.current = true;\r\n+//     }\r\n+//   }, [isListening]);\r\n+\r\n+//   // const handleCommandWithFuse = (command) => {\r\n+//   //   const fuse = new Fuse(commands, { keys: [\"utterance\"], threshold: 0.4 });\r\n+//   //   const results = fuse.search(command);\r\n+//   //   const foundCommand = results.length ? results[0].item : null;\r\n+\r\n+//   //   if (foundCommand) {\r\n+//   //     console.log(\"Command found:\", foundCommand.utterance);\r\n+//   //     speak(foundCommand.response);\r\n+//   //     if (foundCommand.route) {\r\n+//   //       navigate(foundCommand.route); // Navigate to the route specified in the command\r\n+//   //     }\r\n+//   //   } else {\r\n+//   //     console.log(\"No command found.\");\r\n+//   //     speak(\"I'm not sure how to respond to that.\");\r\n+//   //   }\r\n+//   // };\r\n+\r\n+//   const handleCommandWithFuse = (command) => {\r\n+//     const fuse = new Fuse(commands, { keys: [\"utterance\"], threshold: 0.4 });\r\n+//     const results = fuse.search(command);\r\n+//     const foundCommand = results.length ? results[0].item : null;\r\n+\r\n+//     if (foundCommand) {\r\n+//       console.log(\"Command found:\", foundCommand.utterance);\r\n+\r\n+//       if (foundCommand.action) {\r\n+//         foundCommand.action();\r\n+//       } else if (foundCommand.route) {\r\n+//         navigate(foundCommand.route);\r\n+//       }\r\n+\r\n+//       if (foundCommand.response) {\r\n+//         speak(foundCommand.response);\r\n+//       }\r\n+//     } else {\r\n+//       console.log(\"No command found.\");\r\n+//       speak(\"I'm not sure how to respond to that.\");\r\n+//     }\r\n+//   };\r\n+\r\n+//   const commands = [\r\n+//     {\r\n+//       utterance: \"Hello who are you ?\",\r\n+\r\n+//       response:\r\n+//         \"Hi! This is Brane! your Voice bot from Brane Education How can I Assist you Today ?\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"Hello\",\r\n+\r\n+//       response: \"Hi! How can I assist you today?\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"hello\",\r\n+\r\n+//       response: \"Hi! How can I assist you today?\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"Hi.\",\r\n+\r\n+//       response: \"Hello! How can I assist you today?\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"Hey there\",\r\n+\r\n+//       response: \"Hi! How can I assist you today?\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"Good morning Brane.\",\r\n+\r\n+//       response: \"Hey Hiii! Good morning  ! How can I help you?\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"Good afternoon Brane.\",\r\n+\r\n+//       response: \"Hey Hiii! Good after noon ! How can I help you?\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"Good evening Brane.\",\r\n+\r\n+//       response: \"Hey Hiii! Good evening ! How can I help you?\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"can you please take me to login page\",\r\n+//       route: \"/login\",\r\n+//       routeDescription: \"login page\",\r\n+//       response: \"Navigating to the login page.\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"go to login page\",\r\n+//       route: \"/login\",\r\n+//       routeDescription: \"login page\",\r\n+//       response: \"Navigating to the login page.\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"please take me to login page\",\r\n+//       route: \"/login\",\r\n+//       routeDescription: \"login page\",\r\n+//       response: \"Navigating to the login page.\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"Go to login page\",\r\n+//       route: \"/login\",\r\n+//       routeDescription: \"login page\",\r\n+//       response: \"Navigating to the login page.\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"open login page\",\r\n+//       route: \"/login\",\r\n+//       routeDescription: \"login page\",\r\n+//       response: \"Navigating to the login page.\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"can you please take me to signup page\",\r\n+//       route: \"/signup\",\r\n+//       routeDescription: \"signup page\",\r\n+//       response: \"Navigating to the signup page.\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"take me to signup page\",\r\n+//       route: \"/signup\",\r\n+//       routeDescription: \"signup page\",\r\n+//       response: \"Navigating to the signup page.\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"Go to signup page\",\r\n+//       route: \"/signup\",\r\n+//       routeDescription: \"signup page\",\r\n+//       response: \"Navigating to the signup page.\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"open signup page\",\r\n+//       route: \"/signup\",\r\n+//       routeDescription: \"signup page\",\r\n+//       response: \"Navigating to the signup page.\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"what are platform features\",\r\n+\r\n+//       response:\r\n+//         \"Dashboard, Dynamic time table, Learning Networks, Little Masters, Video Based Dictionary, General Search.\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"Features of platform\",\r\n+\r\n+//       response:\r\n+//         \"Dashboard, Dynamic time table, Learning Networks, Little Masters, Video Based Dictionary, General Search.\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"What does the platform offer\",\r\n+\r\n+//       response:\r\n+//         \"Dashboard, Dynamic time table, Learning Networks, Little Masters, Video Based Dictionary, General Search.\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"Say me the features of platform\",\r\n+\r\n+//       response:\r\n+//         \"Dashboard, Dynamic time table, Learning Networks, Little Masters, Video Based Dictionary, General Search.\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"Say me the services of platform\",\r\n+\r\n+//       response:\r\n+//         \"Dashboard, Dynamic time table, Learning Networks, Little Masters, Video Based Dictionary, General Search.\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"tell me the services offered by the platform\",\r\n+\r\n+//       response:\r\n+//         \"Dashboard, Dynamic time table, Learning Networks, Little Masters, Video Based Dictionary, General Search.\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"explain platform services\",\r\n+\r\n+//       response:\r\n+//         \"Dashboard, Dynamic time table, Learning Networks, Little Masters, Video Based Dictionary, General Search.\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"Give me the Parent voice of Julia Harris\",\r\n+\r\n+//       response:\r\n+//         \"Brane education has helped my son a lot in his studies. He improved a lot in his studies and is now able to score good marks in his exams\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"Play today's motivational video\",\r\n+\r\n+//       response: \"I am playing the video\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"Play today's video\",\r\n+\r\n+//       response: \"I am playing Motivational video\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"Leaders Voice\",\r\n+\r\n+//       response:\r\n+//         \"This Voice-interactive AI Platform is a game Changer. It revolutionizes education.\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"Curriculum Supported by Brane Education\",\r\n+\r\n+//       response:\r\n+//         \"we support multiple Boards let me say few Telangana State Board Andhra Pradesh Board Maharashtra Board Assam Board\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"Boards supported by the platform\",\r\n+\r\n+//       response:\r\n+//         \"we support multiple Boards let me say few Telangana State Board Andhra Pradesh Board Maharashtra Board Assam Board\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"Curriculum\",\r\n+\r\n+//       response:\r\n+//         \"we support multiple Boards let me say few Telangana State Board Andhra Pradesh Board Maharashtra Board Assam Board\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"Go to landing page\",\r\n+\r\n+//       response: \"Okay, I am taking you to the landing page.\",\r\n+\r\n+//       route: \"/childpage\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"take me to landing page\",\r\n+\r\n+//       response: \"Okay, I am taking you to the landing page.\",\r\n+\r\n+//       route: \"/childpage\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"move to landing page\",\r\n+\r\n+//       response: \"Okay, I am taking you to the landing page.\",\r\n+\r\n+//       route: \"/childpage\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"roll back to landing page\",\r\n+\r\n+//       response: \"Okay, I am taking you to the landing page.\",\r\n+\r\n+//       route: \"/childpage\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"move to landing page\",\r\n+\r\n+//       response: \"Okay, I am taking you to the landing page.\",\r\n+\r\n+//       route: \"/childpage\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"what is today's quote\",\r\n+\r\n+//       response:\r\n+//         \"Determination is the power that sees us through all our frustration and obstacles. It helps in building our willpower which is the very basis of success.\",\r\n+\r\n+//       // route: \"/childpage\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"Today's Inspirational quote\",\r\n+\r\n+//       response:\r\n+//         \"Determination is the power that sees us through all our frustration and obstacles. It helps in building our willpower which is the very basis of success.\",\r\n+\r\n+//       // route: \"/childpage\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"say me today's quote\",\r\n+\r\n+//       response:\r\n+//         \"Determination is the power that sees us through all our frustration and obstacles. It helps in building our willpower which is the very basis of success.\",\r\n+\r\n+//       // route: \"/childpage\",\r\n+//     },\r\n+//     {\r\n+//       utterance: \"go back\",\r\n+//       response: \"Going back.\",\r\n+//       action: goBack, // Note the use of an action property\r\n+//     },\r\n+//     {\r\n+//       utterance: \"go forward\",\r\n+//       response: \"Going forward.\",\r\n+//       action: goForward,\r\n+//     },\r\n+//     {\r\n+//       utterance: \"play video\",\r\n+//       // response: \"Playing video.\",\r\n+//       action: playVideo,\r\n+//     },\r\n+//     {\r\n+//       utterance: \"pause video\",\r\n+//       // response: \"Pausing video.\",\r\n+//       action: pauseVideo,\r\n+//     },\r\n+//     {\r\n+//       utterance: \"start video\",\r\n+//       // response: \"Playing video.\",\r\n+//       action: playVideo,\r\n+//     },\r\n+//     {\r\n+//       utterance: \"stop video\",\r\n+//       // response: \"Playing video.\",\r\n+//       action: pauseVideo,\r\n+//     },\r\n+//     {\r\n+//       utterance: \"scroll up\",\r\n+//       // response: \"Scrolling up.\",\r\n+//       action: scrollUp,\r\n+//     },\r\n+//     {\r\n+//       utterance: \"scroll down\",\r\n+//       // response: \"Scrolling down.\",\r\n+//       action: scrollDown,\r\n+//     },\r\n+//     {\r\n+//       utterance: \"go up\",\r\n+\r\n+//       // response: \"Scrolling up.\",\r\n+//       action: scrollUp,\r\n+//     },\r\n+//     {\r\n+//       utterance: \"go down\",\r\n+//       // response: \"Scrolling down.\",\r\n+//       action: scrollDown,\r\n+//     },\r\n+//     {\r\n+//       utterance: \"scroll to top\",\r\n+//       action: scrollToTop,\r\n+//     },\r\n+//     {\r\n+//       utterance: \"scroll to bottom\",\r\n+//       action: scrollToBottom,\r\n+//     },\r\n+//     {\r\n+//       utterance: \"go back\",\r\n+//       action: goBackRef?.current?.click, // Use goBackRef directly\r\n+//       response: \"Going back.\",\r\n+//     },\r\n+//     {\r\n+//       utterance: \"take test\",\r\n+//       action: takeTestRef?.current?.click, // Use takeTestRef directly\r\n+//       response: \"Starting the test.\",\r\n+//     },\r\n+//   ];\r\n+//   return (\r\n+//     <div className=\"speech-bot-container\">\r\n+//       <div\r\n+//         className={`button-container ${\r\n+//           isListening ? \"voicebotframeactive\" : \"voicebotframe\"\r\n+//         }`}\r\n+//       >\r\n+//         <div onClick={isListening ? stopListening : startListening}>\r\n+//           <iframe\r\n+//             src={\r\n+//               isListening\r\n+//                 ? \"https://lottie.host/?file=a89aca3f-5407-4052-82c3-2048afca7a9f/NpCdWzLSKD.json\"\r\n+//                 : \"https://lottie.host/?file=d2b6cc0e-fe95-4847-85b5-35365fca7e00/vTudpCuPZq.json\"\r\n+//             }\r\n+//             width=\"120\" // Set your desired width\r\n+//             height=\"120\" // Set your desired height\r\n+//             title={isListening ? \"Stop Animation\" : \"Start Animation\"}\r\n+//             className={isListening ? \"voicebotframeactive\" : \"voicebotframe\"}\r\n+//           ></iframe>\r\n+//           {isListening ? (\r\n+//             <div className=\"overlay\" onClick={stopListening}></div>\r\n+//           ) : (\r\n+//             <div className=\"overlay\" onClick={startListening}></div>\r\n+//           )}\r\n+//         </div>\r\n+//       </div>\r\n+//     </div>\r\n+//   );\r\n+// };\r\n+\r\n+// export default VoiceBot;\r\n"
                },
                {
                    "date": 1700650711061,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -3754,3742 +3754,4 @@\n //   );\r\n // };\r\n \r\n // export default VoiceBot;\r\n-import React, { useState, useEffect, useRef } from \"react\";\r\n-import { useNavigate, useLocation } from \"react-router-dom\";\r\n-import Fuse from \"fuse.js\";\r\n-import \"./VoiceBot.css\";\r\n-import chatbotimage from \"../../assets/chatbotgif.gif\";\r\n-\r\n-const VoiceBot = ({ videoRef, isMuted, setIsMuted }) => {\r\n-  const [isListening, setIsListening] = useState(false);\r\n-  const [isSpeaking, setIsSpeaking] = useState(false);\r\n-  const recognition = useRef(null);\r\n-  const speechSynthesis = useRef(window.speechSynthesis);\r\n-  const [hasGreeted, setHasGreeted] = useState(false);\r\n-  const navigate = useNavigate();\r\n-\r\n-  // Initialize speech recognition\r\n-  useEffect(() => {\r\n-    recognition.current = new window.webkitSpeechRecognition();\r\n-    recognition.current.continuous = true;\r\n-    recognition.current.interimResults = false;\r\n-    recognition.current.onresult = onResult;\r\n-    recognition.current.onend = onRecognitionEnd;\r\n-    recognition.current.starting = false;\r\n-\r\n-    recognition.current.onerror = (event) => {\r\n-      console.error(\"Recognition error:\", event.error);\r\n-      if (isListening && !isSpeaking) {\r\n-        restartRecognition();\r\n-      }\r\n-    };\r\n-\r\n-    return () => {\r\n-      if (recognition.current) {\r\n-        recognition.current.abort();\r\n-      }\r\n-    };\r\n-  }, []);\r\n-\r\n-  useEffect(() => {\r\n-    const checkRecognition = () => {\r\n-      if (isListening && !isSpeaking && !recognition.current.starting) {\r\n-        console.log(\"Restarting recognition because it's not active.\");\r\n-        recognition.current.starting = true;\r\n-        recognition.current.start();\r\n-        console.log(\"Restarted recognition.\");\r\n-      }\r\n-    };\r\n-\r\n-    const recognitionCheckInterval = setInterval(checkRecognition, 500); // Check every .5 second\r\n-\r\n-    return () => {\r\n-      clearInterval(recognitionCheckInterval);\r\n-    };\r\n-  }, [isListening, isSpeaking]);\r\n-\r\n-  const historyStack = useRef([]);\r\n-\r\n-  useEffect(() => {\r\n-    return () => {\r\n-      // Clean up the listener when the component unmounts\r\n-      window.removeEventListener(\"popstate\", handlePopState);\r\n-    };\r\n-  }, []);\r\n-\r\n-  const handlePopState = () => {\r\n-    // This needs to handle both back and forward browser actions\r\n-    // Use some logic to determine whether it's a back or forward action\r\n-    // For simplicity, assume it's always back\r\n-    historyStack.current.pop();\r\n-    forwardStack.current.length = 0; // Clear forward stack on manual navigation\r\n-  };\r\n-\r\n-  // Add a new entry to the stack whenever navigate is called\r\n-  const customNavigate = (to, options) => {\r\n-    historyStack.current.push(to);\r\n-    navigate(to, options);\r\n-  };\r\n-\r\n-  // Listen to popstate events to update the history stack\r\n-  useEffect(() => {\r\n-    window.addEventListener(\"popstate\", handlePopState);\r\n-  }, []);\r\n-\r\n-  const forwardStack = useRef([]);\r\n-\r\n-  const goBack = () => {\r\n-    if (window.history.state && window.history.state.idx > 0) {\r\n-      window.history.back();\r\n-      speak(\"Going back\");\r\n-    } else {\r\n-      speak(\"Can't go back any further.\");\r\n-    }\r\n-  };\r\n-\r\n-  const goForward = () => {\r\n-    if (\r\n-      window.history.state &&\r\n-      window.history.state.idx < window.history.length - 1\r\n-    ) {\r\n-      window.history.forward();\r\n-      speak(\"Going forward\");\r\n-    } else {\r\n-      speak(\"No forward history available.\");\r\n-    }\r\n-  };\r\n-\r\n-  const playVideo = () => {\r\n-    if (videoRef.current) {\r\n-      videoRef.current.play();\r\n-      speak(\"Playing video.\");\r\n-    } else {\r\n-      speak(\"No video to play.\");\r\n-    }\r\n-  };\r\n-\r\n-  const pauseVideo = () => {\r\n-    if (videoRef.current) {\r\n-      videoRef.current.pause();\r\n-      speak(\"Video paused.\");\r\n-    } else {\r\n-      speak(\"No video to pause.\");\r\n-    }\r\n-  };\r\n-\r\n-  const scrollAmount = window.innerHeight * 0.82;\r\n-\r\n-  const scrollUp = () => {\r\n-    if (window.pageYOffset === 0) {\r\n-      speak(\"Already at the top of the page.\");\r\n-    } else {\r\n-      window.scrollBy(0, -scrollAmount);\r\n-      speak(\"Scrolled up.\");\r\n-    }\r\n-  };\r\n-\r\n-  const scrollDown = () => {\r\n-    const maxScrollTop =\r\n-      document.documentElement.scrollHeight - window.innerHeight;\r\n-    if (window.pageYOffset >= maxScrollTop) {\r\n-      speak(\"Already at the bottom of the page.\");\r\n-    } else {\r\n-      window.scrollBy(0, scrollAmount);\r\n-      speak(\"Scrolled down.\");\r\n-    }\r\n-  };\r\n-\r\n-  const scrollToTop = () => {\r\n-    if (window.pageYOffset === 0) {\r\n-      speak(\"Already at the top of the page.\");\r\n-    } else {\r\n-      window.scrollTo(0, 0);\r\n-      speak(\"Scrolled to the top of the page.\");\r\n-    }\r\n-  };\r\n-\r\n-  const scrollToBottom = () => {\r\n-    const maxScrollTop =\r\n-      document.documentElement.scrollHeight - window.innerHeight;\r\n-    if (window.pageYOffset >= maxScrollTop) {\r\n-      speak(\"Already at the bottom of the page.\");\r\n-    } else {\r\n-      window.scrollTo(0, document.body.scrollHeight);\r\n-      speak(\"Scrolled to the bottom of the page.\");\r\n-    }\r\n-  };\r\n-\r\n-  const muteVideo = () => {\r\n-    if (videoRef.current) {\r\n-      setIsMuted(true);\r\n-    } else {\r\n-      speak(\"No video to mute.\");\r\n-    }\r\n-  };\r\n-\r\n-  const unmuteVideo = () => {\r\n-    if (videoRef.current) {\r\n-      setIsMuted(false);\r\n-    } else {\r\n-      speak(\"No video to unmute.\");\r\n-    }\r\n-  };\r\n-\r\n-  const controlVideo = (videoId, action) => {\r\n-    const videoRef = videoRefs.current.get(videoId);\r\n-    if (videoRef && videoRef.current) {\r\n-      switch (action) {\r\n-        case 'play':\r\n-          videoRef.current.play();\r\n-          break;\r\n-        case 'pause':\r\n-          videoRef.current.pause();\r\n-          break;\r\n-        case 'mute':\r\n-          videoRef.current.muted = true;\r\n-          break;\r\n-        case 'unmute':\r\n-          videoRef.current.muted = false;\r\n-          break;\r\n-        case 'fullscreen':\r\n-          if (videoRef.current.requestFullscreen) {\r\n-            videoRef.current.requestFullscreen();\r\n-          } else if (videoRef.current.webkitRequestFullscreen) { /* Safari */\r\n-            videoRef.current.webkitRequestFullscreen();\r\n-          } else if (videoRef.current.msRequestFullscreen) { /* IE11 */\r\n-            videoRef.current.msRequestFullscreen();\r\n-          }\r\n-          break;\r\n-        // Add other cases as needed\r\n-      }\r\n-      speak(`${action.charAt(0).toUpperCase() + action.slice(1)}ing video ${videoId}.`);\r\n-    } else {\r\n-      speak(`Video ${videoId} not found.`);\r\n-    }\r\n-  };\r\n-\r\n-  const speak = (message) => {\r\n-    const utterance = new SpeechSynthesisUtterance(message);\r\n-    utterance.onend = () => {\r\n-      setIsSpeaking(false);\r\n-      // Restart recognition after speaking has ended\r\n-      if (isListening) {\r\n-        restartRecognition();\r\n-      }\r\n-    };\r\n-\r\n-    setIsSpeaking(true);\r\n-    // Stop recognition when the bot starts speaking\r\n-    if (recognition.current) {\r\n-      recognition.current.abort();\r\n-    }\r\n-    speechSynthesis.current.speak(utterance);\r\n-  };\r\n-\r\n-  const restartRecognition = () => {\r\n-    // Check if recognition is not already started and if the bot is set to listen\r\n-    if (\r\n-      recognition.current &&\r\n-      !recognition.current.starting &&\r\n-      isListening &&\r\n-      !isSpeaking\r\n-    ) {\r\n-      recognition.current.abort(); // Ensure any ongoing recognition is stopped\r\n-      recognition.current.starting = true;\r\n-      recognition.current.start();\r\n-    }\r\n-  };\r\n-\r\n-  // Restart recognition when bot finishes speaking and isListening is true\r\n-  useEffect(() => {\r\n-    if (!isSpeaking && isListening) {\r\n-      restartRecognition();\r\n-    }\r\n-  }, [isSpeaking, isListening]);\r\n-\r\n-  const onResult = (event) => {\r\n-    const resultIndex = event.resultIndex;\r\n-    const transcript = event.results[resultIndex][0].transcript\r\n-      .trim()\r\n-      .toLowerCase();\r\n-\r\n-    if (event.results[resultIndex].isFinal) {\r\n-      console.log(`Recognized text: ${transcript}`);\r\n-      if (transcript.includes(\"brain\")) {\r\n-        console.log(\"Wake word heard, processing command...\");\r\n-        handleCommandWithFuse(transcript.replace(\"brain\", \"\"));\r\n-      }\r\n-    }\r\n-  };\r\n-\r\n-  const onRecognitionEnd = () => {\r\n-    recognition.current.starting = false;\r\n-    if (isListening && !isSpeaking) {\r\n-      restartRecognition();\r\n-    }\r\n-  };\r\n-\r\n-  useEffect(() => {\r\n-    if (isListening && !hasGreeted) {\r\n-      speak(\"Hello, I'm Brane. How can I help you today?\");\r\n-      setHasGreeted(true);\r\n-    }\r\n-  }, [isListening, hasGreeted]);\r\n-\r\n-  // Updated startListening function\r\n-  const startListening = () => {\r\n-    setIsListening(true);\r\n-    if (!recognition.current.starting) {\r\n-      restartRecognition();\r\n-    }\r\n-  };\r\n-\r\n-  // Updated stopListening function\r\n-  const stopListening = () => {\r\n-    setIsListening(false);\r\n-    if (speechSynthesis.current.speaking) {\r\n-      speechSynthesis.current.cancel();\r\n-    }\r\n-    recognition.current.abort();\r\n-  };\r\n-\r\n-  const handleCommandWithFuse = (command) => {\r\n-    const fuse = new Fuse(commands, { keys: [\"utterance\"], threshold: 0.4 });\r\n-    const results = fuse.search(command);\r\n-    const foundCommand = results.length ? results[0].item : null;\r\n-\r\n-    if (foundCommand) {\r\n-      console.log(\"Command found:\", foundCommand.utterance);\r\n-\r\n-      if (foundCommand.action) {\r\n-        foundCommand.action();\r\n-      } else if (foundCommand.route) {\r\n-        navigate(foundCommand.route);\r\n-      }\r\n-\r\n-      // Speak after performing the action or navigation\r\n-      speak(foundCommand.response);\r\n-    } else {\r\n-      console.log(\"No command found.\");\r\n-      speak(\"I'm not sure how to respond to that.\");\r\n-    }\r\n-  };\r\n-\r\n-  const commands = [\r\n-    {\r\n-      utterance: \"Hello who are you ?\",\r\n-\r\n-      response:\r\n-        \"Hi! This is Brane! your Voice bot from Brane Education How can I Assist you Today ?\",\r\n-    },\r\n-\r\n-    {\r\n-      utterance: \"Hello\",\r\n-\r\n-      response: \"Hi! How can I assist you today?\",\r\n-    },\r\n-\r\n-    {\r\n-      utterance: \"hello\",\r\n-\r\n-      response: \"Hi! How can I assist you today?\",\r\n-    },\r\n-\r\n-    {\r\n-      utterance: \"Hi.\",\r\n-\r\n-      response: \"Hello! How can I assist you today?\",\r\n-    },\r\n-\r\n-    {\r\n-      utterance: \"Hey there\",\r\n-\r\n-      response: \"Hi! How can I assist you today?\",\r\n-    },\r\n-\r\n-    {\r\n-      utterance: \"Good morning Brane.\",\r\n-\r\n-      response: \"Hey Hiii! Good morning  ! How can I help you?\",\r\n-    },\r\n-\r\n-    {\r\n-      utterance: \"Good afternoon Brane.\",\r\n-\r\n-      response: \"Hey Hiii! Good after noon ! How can I help you?\",\r\n-    },\r\n-\r\n-    {\r\n-      utterance: \"Good evening Brane.\",\r\n-\r\n-      response: \"Hey Hiii! Good evening ! How can I help you?\",\r\n-    },\r\n-\r\n-    {\r\n-      utterance: \"take me to homepage\",\r\n-\r\n-      route: \"/\",\r\n-\r\n-      response: \"You're in Homepage now\",\r\n-    },\r\n-    {\r\n-      utterance: \"open homepage\",\r\n-\r\n-      route: \"/\",\r\n-\r\n-      response: \"You're in Homepage now\",\r\n-    },\r\n-    {\r\n-      utterance: \"go to homepage\",\r\n-\r\n-      route: \"/\",\r\n-\r\n-      response: \"You're in Homepage now\",\r\n-    },\r\n-    {\r\n-      utterance: \"go back to homepage\",\r\n-\r\n-      route: \"/\",\r\n-\r\n-      response: \"You're in Homepage now\",\r\n-    },\r\n-    {\r\n-      utterance: \"can you please take me to login page\",\r\n-\r\n-      route: \"/login\",\r\n-\r\n-      response: \"Here's the Login Page, Please Login\",\r\n-    },\r\n-\r\n-    {\r\n-      utterance: \"please take me to login page\",\r\n-\r\n-      route: \"/login\",\r\n-\r\n-      response: \"Here's the Login Page, Please Login\",\r\n-    },\r\n-\r\n-    {\r\n-      utterance: \"Go to login page\",\r\n-\r\n-      route: \"/login\",\r\n-\r\n-      response: \"Here's the Login Page, Please Login\",\r\n-    },\r\n-\r\n-    {\r\n-      utterance: \"open login page\",\r\n-\r\n-      route: \"/login\",\r\n-\r\n-      response: \"Here's the Login Page, Please Login\",\r\n-    },\r\n-\r\n-    {\r\n-      utterance: \"can you please take me to signup page\",\r\n-\r\n-      route: \"/signup\",\r\n-\r\n-      response: \"Here's the signup page. Please proceed With Registration.\",\r\n-    },\r\n-\r\n-    {\r\n-      utterance: \"take me to signup page\",\r\n-\r\n-      route: \"/signup\",\r\n-\r\n-      response: \"Here's the signup page. Please proceed With Registration.\",\r\n-    },\r\n-\r\n-    {\r\n-      utterance: \"Go to signup page\",\r\n-\r\n-      route: \"/signup\",\r\n-\r\n-      response: \"Here's the signup page. Please proceed With Registration.\",\r\n-    },\r\n-\r\n-    {\r\n-      utterance: \"open signup page\",\r\n-\r\n-      route: \"/signup\",\r\n-\r\n-      response: \"Here's the signup page. Please proceed With Registration.\",\r\n-    },\r\n-\r\n-    {\r\n-      utterance: \"Go to face id\",\r\n-\r\n-      route: \"/login/faceid\",\r\n-\r\n-      response: \"Here's Face ID Login. Please proceed.\",\r\n-    },\r\n-\r\n-    {\r\n-      utterance: \"Go to face id login\",\r\n-\r\n-      route: \"/login/faceid\",\r\n-\r\n-      response: \"Here's Face ID Login. Please proceed.\",\r\n-    },\r\n-    {\r\n-      utterance: \"Go to face login\",\r\n-\r\n-      route: \"/login/faceid\",\r\n-\r\n-      response: \"Here's Face ID Login. Please proceed.\",\r\n-    },\r\n-\r\n-    {\r\n-      utterance: \"login with face id\",\r\n-\r\n-      route: \"/login/faceid\",\r\n-\r\n-      response: \"Here's Face ID Login. Please proceed.\",\r\n-    },\r\n-\r\n-    {\r\n-      utterance: \"login with face\",\r\n-\r\n-      route: \"/login/faceid\",\r\n-\r\n-      response: \"Here's Face ID Login. Please proceed.\",\r\n-    },\r\n-\r\n-    {\r\n-      utterance: \"i want to login with face\",\r\n-\r\n-      route: \"/login/faceid\",\r\n-\r\n-      response: \"Here's Face ID Login. Please proceed.\",\r\n-    },\r\n-\r\n-    {\r\n-      utterance: \"login with voice\",\r\n-\r\n-      route: \"/login/voiceid\",\r\n-\r\n-      response: \"Here's Voice Login. Please proceed.\",\r\n-    },\r\n-\r\n-    {\r\n-      utterance: \"i want to login with voice\",\r\n-\r\n-      route: \"/login/voiceid\",\r\n-\r\n-      response: \"Here's Voice Login. Please proceed.\",\r\n-    },\r\n-\r\n-    {\r\n-      utterance: \"go to voice login\",\r\n-\r\n-      route: \"/login/voiceid\",\r\n-\r\n-      response: \"Here's Voice Login. Please proceed.\",\r\n-    },\r\n-\r\n-    {\r\n-      utterance: \"login with voice\",\r\n-\r\n-      route: \"/login/voiceid\",\r\n-\r\n-      response: \"Here's Voice Login. Please proceed.\",\r\n-    },\r\n-\r\n-    {\r\n-      utterance: \"login with mobile\",\r\n-\r\n-      route: \"/login/mobile\",\r\n-\r\n-      response: \"Here's Mobile Login. Please proceed.\",\r\n-    },\r\n-\r\n-    {\r\n-      utterance: \"i want to login with mobile\",\r\n-\r\n-      route: \"/login/mobile\",\r\n-\r\n-      response: \"Here's Mobile Login. Please proceed.\",\r\n-    },\r\n-    {\r\n-      utterance: \"go to mobile login\",\r\n-\r\n-      route: \"/login/mobile\",\r\n-\r\n-      response: \"Here's Mobile Login. Please proceed.\",\r\n-    },\r\n-    {\r\n-      utterance: \"go to about page\",\r\n-\r\n-      route: \"/aboutus\",\r\n-\r\n-      response: \"This is About us.\",\r\n-    },\r\n-    {\r\n-      utterance: \"go to about us page\",\r\n-\r\n-      route: \"/aboutus\",\r\n-\r\n-      response: \"This is About us.\",\r\n-    },\r\n-    {\r\n-      utterance: \"open about us page\",\r\n-\r\n-      route: \"/aboutus\",\r\n-\r\n-      response: \"This is About us.\",\r\n-    },\r\n-    {\r\n-      utterance: \"open about page\",\r\n-\r\n-      route: \"/aboutus\",\r\n-\r\n-      response: \"This is About us.\",\r\n-    },\r\n-    {\r\n-      utterance: \"take me to about page\",\r\n-\r\n-      route: \"/aboutus\",\r\n-\r\n-      response: \"This is About us.\",\r\n-    },\r\n-    {\r\n-      utterance: \"take me to about us page\",\r\n-\r\n-      route: \"/aboutus\",\r\n-\r\n-      response: \"This is About us.\",\r\n-    },\r\n-\r\n-    {\r\n-      utterance: \"go to contact page\",\r\n-\r\n-      route: \"/contactus\",\r\n-\r\n-      response: \"You can contact us from here\",\r\n-    },\r\n-    {\r\n-      utterance: \"go to contact us page\",\r\n-\r\n-      route: \"/contactus\",\r\n-\r\n-      response: \"You can contact us from here\",\r\n-    },\r\n-    {\r\n-      utterance: \"open contact us page\",\r\n-\r\n-      route: \"/contactus\",\r\n-\r\n-      response: \"You can contact us from here\",\r\n-    },\r\n-    {\r\n-      utterance: \"open contact page\",\r\n-\r\n-      route: \"/contactus\",\r\n-\r\n-      response: \"You can contact us from here\",\r\n-    },\r\n-    {\r\n-      utterance: \"take me to about page\",\r\n-\r\n-      route: \"/contactus\",\r\n-\r\n-      response: \"You can contact us from here\",\r\n-    },\r\n-    {\r\n-      utterance: \"take me to contact us page\",\r\n-\r\n-      route: \"/contactus\",\r\n-\r\n-      response: \"You can contact us from here\",\r\n-    },\r\n-\r\n-    {\r\n-      utterance: \"what are platform features\",\r\n-\r\n-      response:\r\n-        \"Dashboard, Dynamic time table, Learning Networks, Little Masters, Video Based Dictionary, General Search.\",\r\n-    },\r\n-\r\n-    {\r\n-      utterance: \"Features of platform\",\r\n-\r\n-      response:\r\n-        \"Dashboard, Dynamic time table, Learning Networks, Little Masters, Video Based Dictionary, General Search.\",\r\n-    },\r\n-\r\n-    {\r\n-      utterance: \"What does the platform offer\",\r\n-\r\n-      response:\r\n-        \"Dashboard, Dynamic time table, Learning Networks, Little Masters, Video Based Dictionary, General Search.\",\r\n-    },\r\n-\r\n-    {\r\n-      utterance: \"Say me the features of platform\",\r\n-\r\n-      response:\r\n-        \"Dashboard, Dynamic time table, Learning Networks, Little Masters, Video Based Dictionary, General Search.\",\r\n-    },\r\n-\r\n-    {\r\n-      utterance: \"Say me the services of platform\",\r\n-\r\n-      response:\r\n-        \"Dashboard, Dynamic time table, Learning Networks, Little Masters, Video Based Dictionary, General Search.\",\r\n-    },\r\n-\r\n-    {\r\n-      utterance: \"tell me the services offered by the platform\",\r\n-\r\n-      response:\r\n-        \"Dashboard, Dynamic time table, Learning Networks, Little Masters, Video Based Dictionary, General Search.\",\r\n-    },\r\n-\r\n-    {\r\n-      utterance: \"explain platform services\",\r\n-\r\n-      response:\r\n-        \"Dashboard, Dynamic time table, Learning Networks, Little Masters, Video Based Dictionary, General Search.\",\r\n-    },\r\n-\r\n-    {\r\n-      utterance: \"Give me the Parent voice of Julia Harris\",\r\n-\r\n-      response:\r\n-        \"Brane education has helped my son a lot in his studies. He improved a lot in his studies and is now able to score good marks in his exams\",\r\n-    },\r\n-\r\n-    {\r\n-      utterance: \"Leaders Voice\",\r\n-\r\n-      response:\r\n-        \"This Voice-interactive AI Platform is a game Changer. It revolutionizes education.\",\r\n-    },\r\n-\r\n-    {\r\n-      utterance: \"Curriculum Supported by Brane Education\",\r\n-\r\n-      response:\r\n-        \"we support multiple Boards let me say few Telangana State Board Andhra Pradesh Board Maharashtra Board Assam Board\",\r\n-    },\r\n-\r\n-    {\r\n-      utterance: \"Boards supported by the platform\",\r\n-\r\n-      response:\r\n-        \"we support multiple Boards let me say few Telangana State Board Andhra Pradesh Board Maharashtra Board Assam Board\",\r\n-    },\r\n-\r\n-    {\r\n-      utterance: \"Curriculum\",\r\n-\r\n-      response:\r\n-        \"we support multiple Boards let me say few Telangana State Board Andhra Pradesh Board Maharashtra Board Assam Board\",\r\n-    },\r\n-\r\n-    {\r\n-      utterance: \"what is today's quote\",\r\n-\r\n-      response:\r\n-        \"Determination is the power that sees us through all our frustration and obstacles. It helps in building our willpower which is the very basis of success.\",\r\n-\r\n-      route: \"/childpage\",\r\n-    },\r\n-\r\n-    {\r\n-      utterance: \"Today's Inspirational quote\",\r\n-\r\n-      response:\r\n-        \"Determination is the power that sees us through all our frustration and obstacles. It helps in building our willpower which is the very basis of success.\",\r\n-\r\n-      route: \"/childpage\",\r\n-    },\r\n-\r\n-    {\r\n-      utterance: \"say me today's quote\",\r\n-\r\n-      response:\r\n-        \"Determination is the power that sees us through all our frustration and obstacles. It helps in building our willpower which is the very basis of success.\",\r\n-\r\n-      route: \"/childpage\",\r\n-    },\r\n-    {\r\n-      utterance: \"go back\",\r\n-      response: \"\",\r\n-      action: goBack, // Note the use of an action property\r\n-    },\r\n-    {\r\n-      utterance: \"go forward\",\r\n-      response: \"\",\r\n-      action: goForward,\r\n-    },\r\n-    // {\r\n-    //   utterance: \"play video\",\r\n-    //   // response: \"Playing video.\",\r\n-    //   action: playVideo,\r\n-    // },\r\n-    // {\r\n-    //   utterance: \"pause video\",\r\n-    //   // response: \"Pausing video.\",\r\n-    //   action: pauseVideo,\r\n-    // },\r\n-    // {\r\n-    //   utterance: \"start video\",\r\n-    //   // response: \"Playing video.\",\r\n-    //   action: playVideo,\r\n-    // },\r\n-    // {\r\n-    //   utterance: \"stop video\",\r\n-    //   // response: \"Playing video.\",\r\n-    //   action: pauseVideo,\r\n-    // },\r\n-    {\r\n-      utterance: \"scroll up\",\r\n-      // response: \"Scrolling up.\",\r\n-      action: scrollUp,\r\n-    },\r\n-    {\r\n-      utterance: \"scroll down\",\r\n-      // response: \"Scrolling down.\",\r\n-      action: scrollDown,\r\n-    },\r\n-    {\r\n-      utterance: \"go up\",\r\n-\r\n-      // response: \"Scrolling up.\",\r\n-      action: scrollUp,\r\n-    },\r\n-    {\r\n-      utterance: \"go down\",\r\n-      // response: \"Scrolling down.\",\r\n-      action: scrollDown,\r\n-    },\r\n-    {\r\n-      utterance: \"scroll to top\",\r\n-      action: scrollToTop,\r\n-    },\r\n-    {\r\n-      utterance: \"scroll to bottom\",\r\n-      action: scrollToBottom,\r\n-    },\r\n-    {\r\n-      utterance: \"brane stop\",\r\n-      action: stopListening,\r\n-    },\r\n-    {\r\n-      utterance: \"brane turn off\",\r\n-      action: stopListening,\r\n-    },\r\n-    {\r\n-      utterance: \"brane stop the bot\",\r\n-      action: stopListening,\r\n-    },\r\n-    // {\r\n-    //   utterance: \"mute the video\",\r\n-    //   action: muteVideo,\r\n-    // },\r\n-    // {\r\n-    //   utterance: \"unmute the video\",\r\n-    //   action: unmuteVideo,\r\n-    // },\r\n-    // {\r\n-    //   utterance: \"stop the video sound\",\r\n-    //   action: muteVideo,\r\n-    // },\r\n-    // {\r\n-    //   utterance: \"play the video sound\",\r\n-    //   action: unmuteVideo,\r\n-    // },\r\n-    {\r\n-      utterance: \"play transform education using ai video\",\r\n-      action: () => controlVideo('video1', 'play'),\r\n-    },\r\n-    {\r\n-      utterance: \"start transform education using ai video\",\r\n-      action: () => controlVideo('video1', 'play'),\r\n-    },\r\n-    {\r\n-      utterance: \"pause transform education using ai video\",\r\n-      action: () => controlVideo('video1', 'pause'),\r\n-    },\r\n-    {\r\n-      utterance: \"stop transform education using ai video\",\r\n-      action: () => controlVideo('video1', 'pause'),\r\n-    },\r\n-\r\n-    {\r\n-      utterance: \"mute transform education using ai video\",\r\n-      action: () => controlVideo('video1', 'mute'),\r\n-    },\r\n-    {\r\n-      utterance: \"unmute transform education using ai video\",\r\n-      action: () => controlVideo('video1', 'unmute'),\r\n-    },\r\n-    {\r\n-      utterance: \"fullscreen transform education using ai video\",\r\n-      action: () => controlVideo('video1', 'fullscreen'),\r\n-    },\r\n-    {\r\n-      utterance: \"exit fullscreen transform education using ai video\",\r\n-      action: () => controlVideo('video1', 'exitFullscreen'),\r\n-    },\r\n-    {\r\n-      utterance: \"increase volume transform education using ai video\",\r\n-      action: () => controlVideo('video1', 'increaseVolume'),\r\n-    },\r\n-    {\r\n-      utterance: \"decrease volume transform education using ai video\",\r\n-      action: () => controlVideo('video1', 'decreaseVolume'),\r\n-    },\r\n-  ];\r\n-\r\n-  return (\r\n-    <div className=\"speech-bot-container\">\r\n-      <div\r\n-        className={`button-container ${\r\n-          isListening ? \"voicebotframeactive\" : \"voicebotframe\"\r\n-        }`}\r\n-      >\r\n-        {/* <button onClick={isListening ? stopListening : startListening}>\r\n-          {isListening ? \"Stop\" : \"Start\"} Animation\r\n-        </button> */}\r\n-        <img\r\n-          className=\"botimage\"\r\n-          src={chatbotimage}\r\n-          alt=\"\"\r\n-          onClick={isListening ? stopListening : startListening}\r\n-        />\r\n-      </div>\r\n-    </div>\r\n-  );\r\n-};\r\n-\r\n-export default VoiceBot;\r\n-\r\n-{\r\n-  /* // import React, { useState, useEffect, useRef } from \"react\";\r\n-// import { useNavigate, useLocation } from \"react-router-dom\";\r\n-// import Fuse from \"fuse.js\";\r\n-// import \"./VoiceBot.css\";\r\n-\r\n-// const VoiceBot = ({ videoRef }) => {\r\n-//   const [isListening, setIsListening] = useState(false);\r\n-//   const [isSpeaking, setIsSpeaking] = useState(false);\r\n-//   const recognition = useRef(null);\r\n-//   const speechSynthesis = useRef(window.speechSynthesis);\r\n-//   const [hasGreeted, setHasGreeted] = useState(false);\r\n-//   const navigate = useNavigate();\r\n-\r\n-//   useEffect(() => {\r\n-//     recognition.current = new window.webkitSpeechRecognition();\r\n-//     recognition.current.continuous = true;\r\n-//     recognition.current.interimResults = false;\r\n-//     recognition.current.onresult = onResult;\r\n-//     recognition.current.onend = onRecognitionEnd;\r\n-//     recognition.current.starting = false;\r\n-\r\n-//     // Simplified error handling, removed specific handling for 'no-speech'\r\n-//     recognition.current.onerror = (event) => {\r\n-//       console.error(\"Recognition error:\", event.error);\r\n-//       // Check if listening is true and the bot isn't speaking\r\n-//       if (isListening && !isSpeaking) {\r\n-//         // Restart recognition\r\n-//         restartRecognition();\r\n-//       }\r\n-//     };\r\n-\r\n-//     return () => {\r\n-//       if (recognition.current) {\r\n-//         recognition.current.abort();\r\n-//       }\r\n-//     };\r\n-//   }, []);\r\n-\r\n-//   useEffect(() => {\r\n-//     const checkRecognition = () => {\r\n-//       if (isListening && !isSpeaking && !recognition.current.starting) {\r\n-//         console.log(\"Restarting recognition because it's not active.\");\r\n-//         recognition.current.starting = true;\r\n-//         recognition.current.start();\r\n-//         console.log(\"Restarted recognition.\");\r\n-//       }\r\n-//     };\r\n-\r\n-//     const recognitionCheckInterval = setInterval(checkRecognition, 100); // Check every 1 second\r\n-\r\n-//     return () => {\r\n-//       clearInterval(recognitionCheckInterval);\r\n-//     };\r\n-//   }, [isListening, isSpeaking]);\r\n-\r\n-//   const restartRecognition = () => {\r\n-//     if (recognition.current.starting) {\r\n-//       console.log(\"Recognition is already starting or running.\");\r\n-//       return;\r\n-//     }\r\n-\r\n-//     recognition.current.abort(); // Stop any existing recognition process\r\n-//     recognition.current.starting = true;\r\n-//     recognition.current.start();\r\n-//     console.log(\"Recognition restarted.\");\r\n-//   };\r\n-\r\n-//   const historyStack = useRef([]);\r\n-\r\n-//   useEffect(() => {\r\n-//     return () => {\r\n-//       // Clean up the listener when the component unmounts\r\n-//       window.removeEventListener(\"popstate\", handlePopState);\r\n-//     };\r\n-//   }, []);\r\n-\r\n-//   const handlePopState = () => {\r\n-//     // This needs to handle both back and forward browser actions\r\n-//     // Use some logic to determine whether it's a back or forward action\r\n-//     // For simplicity, assume it's always back\r\n-//     historyStack.current.pop();\r\n-//     forwardStack.current.length = 0; // Clear forward stack on manual navigation\r\n-//   };\r\n-  \r\n-\r\n-//   // Add a new entry to the stack whenever navigate is called\r\n-//   const customNavigate = (to, options) => {\r\n-//     historyStack.current.push(to);\r\n-//     navigate(to, options);\r\n-//   };\r\n-\r\n-//   // Listen to popstate events to update the history stack\r\n-//   useEffect(() => {\r\n-//     window.addEventListener(\"popstate\", handlePopState);\r\n-//   }, []);\r\n-\r\n-//   const forwardStack = useRef([]);\r\n-\r\n-//   const goBack = () => {\r\n-//     if (window.history.state && window.history.state.idx > 0) {\r\n-//       window.history.back();\r\n-//       speak(\"Going back\");\r\n-//     } else {\r\n-//       speak(\"Can't go back any further.\");\r\n-//     }\r\n-//   };\r\n-\r\n-//   const goForward = () => {\r\n-//     if (window.history.state && window.history.state.idx < window.history.length - 1) {\r\n-//       window.history.forward();\r\n-//       speak(\"Going forward\");\r\n-//     } else {\r\n-//       speak(\"No forward history available.\");\r\n-//     }\r\n-//   };\r\n-\r\n-//   const playVideo = () => {\r\n-//     if (videoRef.current) {\r\n-//       videoRef.current.play();\r\n-//       speak(\"Playing video.\");\r\n-//     } else {\r\n-//       speak(\"No video to play.\");\r\n-//     }\r\n-//   };\r\n-\r\n-//   const pauseVideo = () => {\r\n-//     if (videoRef.current) {\r\n-//       videoRef.current.pause();\r\n-//       speak(\"Video paused.\");\r\n-//     } else {\r\n-//       speak(\"No video to pause.\");\r\n-//     }\r\n-//   };\r\n-\r\n-//   const scrollAmount = window.innerHeight * 0.82;\r\n-\r\n-//   const scrollUp = () => {\r\n-//     if (window.pageYOffset === 0) {\r\n-//       speak(\"Already at the top of the page.\");\r\n-//     } else {\r\n-//       window.scrollBy(0, -scrollAmount);\r\n-//       speak(\"Scrolled up.\");\r\n-//     }\r\n-//   };\r\n-\r\n-//   const scrollDown = () => {\r\n-//     const maxScrollTop =\r\n-//       document.documentElement.scrollHeight - window.innerHeight;\r\n-//     if (window.pageYOffset >= maxScrollTop) {\r\n-//       speak(\"Already at the bottom of the page.\");\r\n-//     } else {\r\n-//       window.scrollBy(0, scrollAmount);\r\n-//       speak(\"Scrolled down.\");\r\n-//     }\r\n-//   };\r\n-\r\n-//   const scrollToTop = () => {\r\n-//     if (window.pageYOffset === 0) {\r\n-//       speak(\"Already at the top of the page.\");\r\n-//     } else {\r\n-//       window.scrollTo(0, 0);\r\n-//       speak(\"Scrolled to the top of the page.\");\r\n-//     }\r\n-//   };\r\n-\r\n-//   const scrollToBottom = () => {\r\n-//     const maxScrollTop =\r\n-//       document.documentElement.scrollHeight - window.innerHeight;\r\n-//     if (window.pageYOffset >= maxScrollTop) {\r\n-//       speak(\"Already at the bottom of the page.\");\r\n-//     } else {\r\n-//       window.scrollTo(0, document.body.scrollHeight);\r\n-//       speak(\"Scrolled to the bottom of the page.\");\r\n-//     }\r\n-//   };\r\n-\r\n-//   const speak = (message) => {\r\n-//     console.log(\"speak function called with message:\", message);\r\n-//     const utterance = new SpeechSynthesisUtterance(message);\r\n-//     utterance.onend = () => {\r\n-//       setIsSpeaking(false);\r\n-//       console.log(\"Speaking ended.\");\r\n-//       if (isListening && !recognition.current.starting) {\r\n-//         console.log(\"Restarting recognition after speaking.\");\r\n-//         recognition.current.starting = true;\r\n-//         recognition.current.start();\r\n-//         console.log(\"Restarted recognition after speaking.\");\r\n-//       }\r\n-//     };\r\n-\r\n-//     setIsSpeaking(true);\r\n-//     console.log(\"Speaking started.\");\r\n-//     recognition.current.stop(); // Ensure to stop recognition before speaking\r\n-//     speechSynthesis.current.speak(utterance);\r\n-//   };\r\n-\r\n-//   const onResult = (event) => {\r\n-//     const resultIndex = event.resultIndex;\r\n-//     const transcript = event.results[resultIndex][0].transcript\r\n-//       .trim()\r\n-//       .toLowerCase();\r\n-\r\n-//     if (event.results[resultIndex].isFinal) {\r\n-//       console.log(`Recognized text: ${transcript}`);\r\n-//       if (transcript.includes(\"brain\")) {\r\n-//         console.log(\"Wake word heard, processing command...\");\r\n-//         handleCommandWithFuse(transcript.replace(\"brain\", \"\"));\r\n-//       }\r\n-//     }\r\n-//   };\r\n-\r\n-//   const onRecognitionEnd = () => {\r\n-//     recognition.current.starting = false;\r\n-//     if (isListening && !isSpeaking) {\r\n-//       restartRecognition();\r\n-//     }\r\n-//   };\r\n-\r\n-//   useEffect(() => {\r\n-//     if (isListening) {\r\n-//       if (!hasGreeted) {\r\n-//         speak(\"Hello, I'm Brane. How can I help you today?\");\r\n-//         setHasGreeted(true);\r\n-//       } else {\r\n-//         speak(\"Listening.\");\r\n-//       }\r\n-//     }\r\n-//   }, [isListening, hasGreeted]);\r\n-\r\n-\r\n-//   const startListening = () => {\r\n-//     if (!recognition.current.starting) {\r\n-//       setIsListening(true);\r\n-//       restartRecognition();\r\n-//     }\r\n-//   };\r\n-\r\n-//   const stopListening = () => {\r\n-//     setIsListening(false);\r\n-//     recognition.current.abort();\r\n-//     if (speechSynthesis.current.speaking) {\r\n-//       speechSynthesis.current.cancel();\r\n-//     }\r\n-//   };\r\n-\r\n-//   const handleCommandWithFuse = (command) => {\r\n-//     const fuse = new Fuse(commands, { keys: [\"utterance\"], threshold: 0.4 });\r\n-//     const results = fuse.search(command);\r\n-//     const foundCommand = results.length ? results[0].item : null;\r\n-\r\n-//     if (foundCommand) {\r\n-//       console.log(\"Command found:\", foundCommand.utterance);\r\n-\r\n-//       if (foundCommand.action) {\r\n-//         foundCommand.action();\r\n-//       } else if (foundCommand.route) {\r\n-//         navigate(foundCommand.route);\r\n-//       }\r\n-\r\n-//       // Speak after performing the action or navigation\r\n-//       speak(foundCommand.response);\r\n-//     } else {\r\n-//       console.log(\"No command found.\");\r\n-//       speak(\"I'm not sure how to respond to that.\");\r\n-//     }\r\n-//   };\r\n-\r\n-//   const commands = [\r\n-//     {\r\n-//       utterance: \"Hello who are you ?\",\r\n-\r\n-//       response:\r\n-//         \"Hi! This is Brane! your Voice bot from Brane Education How can I Assist you Today ?\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"Hello\",\r\n-\r\n-//       response: \"Hi! How can I assist you today?\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"hello\",\r\n-\r\n-//       response: \"Hi! How can I assist you today?\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"Hi.\",\r\n-\r\n-//       response: \"Hello! How can I assist you today?\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"Hey there\",\r\n-\r\n-//       response: \"Hi! How can I assist you today?\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"Good morning Brane.\",\r\n-\r\n-//       response: \"Hey Hiii! Good morning  ! How can I help you?\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"Good afternoon Brane.\",\r\n-\r\n-//       response: \"Hey Hiii! Good after noon ! How can I help you?\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"Good evening Brane.\",\r\n-\r\n-//       response: \"Hey Hiii! Good evening ! How can I help you?\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"can you please take me to login page\",\r\n-\r\n-//       route: \"/login\",\r\n-\r\n-//       response: \"Here's the Login Page, Please Login\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"please take me to login page\",\r\n-\r\n-//       route: \"/login\",\r\n-\r\n-//       response: \"Here's the Login Page, Please Login\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"Go to login page\",\r\n-\r\n-//       route: \"/login\",\r\n-\r\n-//       response: \"Here's the Login Page, Please Login\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"open login page\",\r\n-\r\n-//       route: \"/login\",\r\n-\r\n-//       response: \"Here's the Login Page, Please Login\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"can you please take me to signup page\",\r\n-\r\n-//       route: \"/signup\",\r\n-\r\n-//       response: \"Here's the signup page. Please proceed With Registration.\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"take me to signup page\",\r\n-\r\n-//       route: \"/signup\",\r\n-\r\n-//       response: \"Here's the signup page. Please proceed With Registration.\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"Go to signup page\",\r\n-\r\n-//       route: \"/signup\",\r\n-\r\n-//       response: \"Here's the signup page. Please proceed With Registration.\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"open signup page\",\r\n-\r\n-//       route: \"/signup\",\r\n-\r\n-//       response: \"Here's the signup page. Please proceed With Registration.\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"Go to face id\",\r\n-\r\n-//       route: \"/login/faceid\",\r\n-\r\n-//       response: \"Here's Face ID Login. Please proceed.\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"Go to face id login\",\r\n-\r\n-//       route: \"/login/faceid\",\r\n-\r\n-//       response: \"Here's Face ID Login. Please proceed.\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"login with face id\",\r\n-\r\n-//       route: \"/login/faceid\",\r\n-\r\n-//       response: \"Here's Face ID Login. Please proceed.\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"login with face\",\r\n-\r\n-//       route: \"/login/faceid\",\r\n-\r\n-//       response: \"Here's Face ID Login. Please proceed.\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"i want to login with face\",\r\n-\r\n-//       route: \"/login/faceid\",\r\n-\r\n-//       response: \"Here's Face ID Login. Please proceed.\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"login with voice\",\r\n-\r\n-//       route: \"/login/voiceid\",\r\n-\r\n-//       response: \"Here's Voice Login. Please proceed.\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"i want to login with voice\",\r\n-\r\n-//       route: \"/login/voiceid\",\r\n-\r\n-//       response: \"Here's Voice Login. Please proceed.\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"go to voice login\",\r\n-\r\n-//       route: \"/login/voiceid\",\r\n-\r\n-//       response: \"Here's Voice Login. Please proceed.\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"login with voice\",\r\n-\r\n-//       route: \"/login/voiceid\",\r\n-\r\n-//       response: \"Here's Voice Login. Please proceed.\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"login with mobile\",\r\n-\r\n-//       route: \"/login/mobile\",\r\n-\r\n-//       response: \"Here's Mobile Login. Please proceed.\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"i want to login with mobile\",\r\n-\r\n-//       route: \"/login/mobile\",\r\n-\r\n-//       response: \"Here's Mobile Login. Please proceed.\",\r\n-//     },\r\n-//     {\r\n-//       utterance: \"go to mobile login\",\r\n-\r\n-//       route: \"/login/mobile\",\r\n-\r\n-//       response: \"Here's Mobile Login. Please proceed.\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"what are platform features\",\r\n-\r\n-//       response:\r\n-//         \"Dashboard, Dynamic time table, Learning Networks, Little Masters, Video Based Dictionary, General Search.\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"Features of platform\",\r\n-\r\n-//       response:\r\n-//         \"Dashboard, Dynamic time table, Learning Networks, Little Masters, Video Based Dictionary, General Search.\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"What does the platform offer\",\r\n-\r\n-//       response:\r\n-//         \"Dashboard, Dynamic time table, Learning Networks, Little Masters, Video Based Dictionary, General Search.\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"Say me the features of platform\",\r\n-\r\n-//       response:\r\n-//         \"Dashboard, Dynamic time table, Learning Networks, Little Masters, Video Based Dictionary, General Search.\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"Say me the services of platform\",\r\n-\r\n-//       response:\r\n-//         \"Dashboard, Dynamic time table, Learning Networks, Little Masters, Video Based Dictionary, General Search.\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"tell me the services offered by the platform\",\r\n-\r\n-//       response:\r\n-//         \"Dashboard, Dynamic time table, Learning Networks, Little Masters, Video Based Dictionary, General Search.\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"explain platform services\",\r\n-\r\n-//       response:\r\n-//         \"Dashboard, Dynamic time table, Learning Networks, Little Masters, Video Based Dictionary, General Search.\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"Give me the Parent voice of Julia Harris\",\r\n-\r\n-//       response:\r\n-//         \"Brane education has helped my son a lot in his studies. He improved a lot in his studies and is now able to score good marks in his exams\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"Play today's motivational video\",\r\n-\r\n-//       response: \"I am playing the video\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"Play today's video\",\r\n-\r\n-//       response: \"I am playing Motivational video\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"Leaders Voice\",\r\n-\r\n-//       response:\r\n-//         \"This Voice-interactive AI Platform is a game Changer. It revolutionizes education.\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"Curriculum Supported by Brane Education\",\r\n-\r\n-//       response:\r\n-//         \"we support multiple Boards let me say few Telangana State Board Andhra Pradesh Board Maharashtra Board Assam Board\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"Boards supported by the platform\",\r\n-\r\n-//       response:\r\n-//         \"we support multiple Boards let me say few Telangana State Board Andhra Pradesh Board Maharashtra Board Assam Board\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"Curriculum\",\r\n-\r\n-//       response:\r\n-//         \"we support multiple Boards let me say few Telangana State Board Andhra Pradesh Board Maharashtra Board Assam Board\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"Go to landing page\",\r\n-\r\n-//       response: \"Okay, I am taking you to the landing page.\",\r\n-\r\n-//       route: \"/childpage\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"take me to landing page\",\r\n-\r\n-//       response: \"Okay, I am taking you to the landing page.\",\r\n-\r\n-//       route: \"/childpage\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"move to landing page\",\r\n-\r\n-//       response: \"Okay, I am taking you to the landing page.\",\r\n-\r\n-//       route: \"/childpage\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"roll back to landing page\",\r\n-\r\n-//       response: \"Okay, I am taking you to the landing page.\",\r\n-\r\n-//       route: \"/childpage\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"move to landing page\",\r\n-\r\n-//       response: \"Okay, I am taking you to the landing page.\",\r\n-\r\n-//       route: \"/childpage\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"what is today's quote\",\r\n-\r\n-//       response:\r\n-//         \"Determination is the power that sees us through all our frustration and obstacles. It helps in building our willpower which is the very basis of success.\",\r\n-\r\n-//       route: \"/childpage\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"Today's Inspirational quote\",\r\n-\r\n-//       response:\r\n-//         \"Determination is the power that sees us through all our frustration and obstacles. It helps in building our willpower which is the very basis of success.\",\r\n-\r\n-//       route: \"/childpage\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"say me today's quote\",\r\n-\r\n-//       response:\r\n-//         \"Determination is the power that sees us through all our frustration and obstacles. It helps in building our willpower which is the very basis of success.\",\r\n-\r\n-//       route: \"/childpage\",\r\n-//     },\r\n-//     {\r\n-//       utterance: \"go back\",\r\n-//       response: \"\",\r\n-//       action: goBack, // Note the use of an action property\r\n-//     },\r\n-//     {\r\n-//       utterance: \"go forward\",\r\n-//       response: \"\",\r\n-//       action: goForward,\r\n-//     },\r\n-//     {\r\n-//       utterance: \"play video\",\r\n-//       // response: \"Playing video.\",\r\n-//       action: playVideo,\r\n-//     },\r\n-//     {\r\n-//       utterance: \"pause video\",\r\n-//       // response: \"Pausing video.\",\r\n-//       action: pauseVideo,\r\n-//     },\r\n-//     {\r\n-//       utterance: \"start video\",\r\n-//       // response: \"Playing video.\",\r\n-//       action: playVideo,\r\n-//     },\r\n-//     {\r\n-//       utterance: \"stop video\",\r\n-//       // response: \"Playing video.\",\r\n-//       action: pauseVideo,\r\n-//     },\r\n-//     {\r\n-//       utterance: \"scroll up\",\r\n-//       // response: \"Scrolling up.\",\r\n-//       action: scrollUp,\r\n-//     },\r\n-//     {\r\n-//       utterance: \"scroll down\",\r\n-//       // response: \"Scrolling down.\",\r\n-//       action: scrollDown,\r\n-//     },\r\n-//     {\r\n-//       utterance: \"go up\",\r\n-\r\n-//       // response: \"Scrolling up.\",\r\n-//       action: scrollUp,\r\n-//     },\r\n-//     {\r\n-//       utterance: \"go down\",\r\n-//       // response: \"Scrolling down.\",\r\n-//       action: scrollDown,\r\n-//     },\r\n-//     {\r\n-//       utterance: \"scroll to top\",\r\n-//       action: scrollToTop,\r\n-//     },\r\n-//     {\r\n-//       utterance: \"scroll to bottom\",\r\n-//       action: scrollToBottom,\r\n-//     },\r\n-//     {\r\n-//       utterance: \"brane stop\",\r\n-//       action: stopListening,\r\n-//     },\r\n-//     {\r\n-//       utterance: \"brane turn off\",\r\n-//       action: stopListening,\r\n-//     },\r\n-//     {\r\n-//       utterance: \"brane stop the bot\",\r\n-//       action: stopListening,\r\n-//     },\r\n-//   ];\r\n-\r\n-//   return (\r\n-//     <div className=\"speech-bot-container\">\r\n-//       <div\r\n-//         className={`button-container ${\r\n-//           isListening ? \"voicebotframeactive\" : \"voicebotframe\"\r\n-//         }`}\r\n-//       >\r\n-//         <button onClick={isListening ? stopListening : startListening}>\r\n-//           {isListening ? \"Stop\" : \"Start\"} Animation\r\n-//         </button>\r\n-//         {/* <button onClick={toggleBotActive}>\r\n-//         {isBotActive ? 'Deactivate Bot' : 'Activate Bot'}\r\n-//       </button> \r\n-//       </div>\r\n-//     </div>\r\n-//   );\r\n-// };\r\n-\r\n-// export default VoiceBot; */\r\n-}\r\n-\r\n-//iska v1\r\n-\r\n-// import React, { useState, useEffect, useRef } from \"react\";\r\n-// import { useNavigate, useLocation } from \"react-router-dom\";\r\n-// import Fuse from \"fuse.js\";\r\n-// import \"./VoiceBot.css\";\r\n-\r\n-// const VoiceBot = ({ videoRef}) => {\r\n-//   const [isListening, setIsListening] = useState(false);\r\n-//   const [isSpeaking, setIsSpeaking] = useState(false);\r\n-//   const recognition = useRef(null);\r\n-//   const speechSynthesis = useRef(window.speechSynthesis);\r\n-//   const [hasGreeted, setHasGreeted] = useState(false);\r\n-//   const navigate = useNavigate();\r\n-\r\n-//  // Initialize speech recognition\r\n-//  useEffect(() => {\r\n-//   recognition.current = new window.webkitSpeechRecognition();\r\n-//   recognition.current.continuous = true;\r\n-//   recognition.current.interimResults = false;\r\n-//   recognition.current.onresult = onResult;\r\n-//   recognition.current.onend = onRecognitionEnd;\r\n-//   recognition.current.starting = false;\r\n-\r\n-//   recognition.current.onerror = (event) => {\r\n-//     console.error(\"Recognition error:\", event.error);\r\n-//     if (isListening && !isSpeaking) {\r\n-//       restartRecognition();\r\n-//     }\r\n-//   };\r\n-\r\n-//   return () => {\r\n-//     if (recognition.current) {\r\n-//       recognition.current.abort();\r\n-//     }\r\n-//   };\r\n-// }, []);\r\n-\r\n-//   // useEffect(() => {\r\n-//   //   const checkRecognition = () => {\r\n-//   //     if (isListening && !isSpeaking && !recognition.current.starting) {\r\n-//   //       console.log(\"Restarting recognition because it's not active.\");\r\n-//   //       recognition.current.starting = true;\r\n-//   //       recognition.current.start();\r\n-//   //       console.log(\"Restarted recognition.\");\r\n-//   //     }\r\n-//   //   };\r\n-\r\n-//   //   const recognitionCheckInterval = setInterval(checkRecognition, 100); // Check every .5 second\r\n-\r\n-//   //   return () => {\r\n-//   //     clearInterval(recognitionCheckInterval);\r\n-//   //   };\r\n-//   // }, [isListening, isSpeaking]);\r\n-\r\n-//   const historyStack = useRef([]);\r\n-\r\n-//   useEffect(() => {\r\n-//     return () => {\r\n-//       // Clean up the listener when the component unmounts\r\n-//       window.removeEventListener(\"popstate\", handlePopState);\r\n-//     };\r\n-//   }, []);\r\n-\r\n-//   const handlePopState = () => {\r\n-//     // This needs to handle both back and forward browser actions\r\n-//     // Use some logic to determine whether it's a back or forward action\r\n-//     // For simplicity, assume it's always back\r\n-//     historyStack.current.pop();\r\n-//     forwardStack.current.length = 0; // Clear forward stack on manual navigation\r\n-//   };\r\n-\r\n-//   // Add a new entry to the stack whenever navigate is called\r\n-//   const customNavigate = (to, options) => {\r\n-//     historyStack.current.push(to);\r\n-//     navigate(to, options);\r\n-//   };\r\n-\r\n-//   // Listen to popstate events to update the history stack\r\n-//   useEffect(() => {\r\n-//     window.addEventListener(\"popstate\", handlePopState);\r\n-//   }, []);\r\n-\r\n-//   const forwardStack = useRef([]);\r\n-\r\n-//   const goBack = () => {\r\n-//     if (window.history.state && window.history.state.idx > 0) {\r\n-//       window.history.back();\r\n-//       speak(\"Going back\");\r\n-//     } else {\r\n-//       speak(\"Can't go back any further.\");\r\n-//     }\r\n-//   };\r\n-\r\n-//   const goForward = () => {\r\n-//     if (window.history.state && window.history.state.idx < window.history.length - 1) {\r\n-//       window.history.forward();\r\n-//       speak(\"Going forward\");\r\n-//     } else {\r\n-//       speak(\"No forward history available.\");\r\n-//     }\r\n-//   };\r\n-\r\n-//   const playVideo = () => {\r\n-//     if (videoRef.current) {\r\n-//       videoRef.current.play();\r\n-//       speak(\"Playing video.\");\r\n-//     } else {\r\n-//       speak(\"No video to play.\");\r\n-//     }\r\n-//   };\r\n-\r\n-//   const pauseVideo = () => {\r\n-//     if (videoRef.current) {\r\n-//       videoRef.current.pause();\r\n-//       speak(\"Video paused.\");\r\n-//     } else {\r\n-//       speak(\"No video to pause.\");\r\n-//     }\r\n-//   };\r\n-\r\n-//   const scrollAmount = window.innerHeight * 0.82;\r\n-\r\n-//   const scrollUp = () => {\r\n-//     if (window.pageYOffset === 0) {\r\n-//       speak(\"Already at the top of the page.\");\r\n-//     } else {\r\n-//       window.scrollBy(0, -scrollAmount);\r\n-//       speak(\"Scrolled up.\");\r\n-//     }\r\n-//   };\r\n-\r\n-//   const scrollDown = () => {\r\n-//     const maxScrollTop =\r\n-//       document.documentElement.scrollHeight - window.innerHeight;\r\n-//     if (window.pageYOffset >= maxScrollTop) {\r\n-//       speak(\"Already at the bottom of the page.\");\r\n-//     } else {\r\n-//       window.scrollBy(0, scrollAmount);\r\n-//       speak(\"Scrolled down.\");\r\n-//     }\r\n-//   };\r\n-\r\n-//   const scrollToTop = () => {\r\n-//     if (window.pageYOffset === 0) {\r\n-//       speak(\"Already at the top of the page.\");\r\n-//     } else {\r\n-//       window.scrollTo(0, 0);\r\n-//       speak(\"Scrolled to the top of the page.\");\r\n-//     }\r\n-//   };\r\n-\r\n-//   const scrollToBottom = () => {\r\n-//     const maxScrollTop =\r\n-//       document.documentElement.scrollHeight - window.innerHeight;\r\n-//     if (window.pageYOffset >= maxScrollTop) {\r\n-//       speak(\"Already at the bottom of the page.\");\r\n-//     } else {\r\n-//       window.scrollTo(0, document.body.scrollHeight);\r\n-//       speak(\"Scrolled to the bottom of the page.\");\r\n-//     }\r\n-//   };\r\n-\r\n-//   const speak = (message) => {\r\n-//     const utterance = new SpeechSynthesisUtterance(message);\r\n-//     utterance.onend = () => {\r\n-//       setIsSpeaking(false);\r\n-//       // Restart recognition after speaking has ended\r\n-//       if (isListening) {\r\n-//         restartRecognition();\r\n-//       }\r\n-//     };\r\n-\r\n-//     setIsSpeaking(true);\r\n-//     // Stop recognition when the bot starts speaking\r\n-//     if (recognition.current) {\r\n-//       recognition.current.abort();\r\n-//     }\r\n-//     speechSynthesis.current.speak(utterance);\r\n-//   };\r\n-\r\n-//   const restartRecognition = () => {\r\n-//     // Check if recognition is not already started and if the bot is set to listen\r\n-//     if (recognition.current && !recognition.current.starting && isListening && !isSpeaking) {\r\n-//       // Only start recognition if it's not already active\r\n-//       if (recognition.current.state !== 'active') {\r\n-//         recognition.current.abort(); // Ensure any ongoing recognition is stopped\r\n-//         recognition.current.starting = true;\r\n-//         recognition.current.start();\r\n-//       }\r\n-//     }\r\n-//   };\r\n-\r\n-//     // Restart recognition when bot finishes speaking and isListening is true\r\n-//     useEffect(() => {\r\n-//       if (!isSpeaking && isListening) {\r\n-//         restartRecognition();\r\n-//       }\r\n-//     }, [isSpeaking, isListening]);\r\n-\r\n-//   const onResult = (event) => {\r\n-//     const resultIndex = event.resultIndex;\r\n-//     const transcript = event.results[resultIndex][0].transcript\r\n-//       .trim()\r\n-//       .toLowerCase();\r\n-\r\n-//     if (event.results[resultIndex].isFinal) {\r\n-//       console.log(`Recognized text: ${transcript}`);\r\n-//       if (transcript.includes(\"brain\")) {\r\n-//         console.log(\"Wake word heard, processing command...\");\r\n-//         handleCommandWithFuse(transcript.replace(\"brain\", \"\"));\r\n-//       }\r\n-//     }\r\n-//   };\r\n-\r\n-//   const onRecognitionEnd = () => {\r\n-//     recognition.current.starting = false;\r\n-//     if (isListening && !isSpeaking) {\r\n-//       restartRecognition();\r\n-//     }\r\n-//   };\r\n-\r\n-//   useEffect(() => {\r\n-//     if (isListening && !hasGreeted) {\r\n-//       speak(\"Hello, I'm Brane. How can I help you today?\");\r\n-//       setHasGreeted(true);\r\n-//     }\r\n-//   }, [isListening, hasGreeted]);\r\n-\r\n-// // Updated startListening function\r\n-// const startListening = () => {\r\n-//   setIsListening(true);\r\n-//   if (recognition.current && !recognition.current.starting) {\r\n-//     recognition.current.start();\r\n-//   }\r\n-// };\r\n-\r\n-// // Updated stopListening function\r\n-// const stopListening = () => {\r\n-//   setIsListening(false);\r\n-//   setIsSpeaking(false); // Reset speaking state\r\n-//   setHasGreeted(false); // Reset greeting state if needed\r\n-//   if (recognition.current) {\r\n-//     recognition.current.abort(); // Stop any ongoing speech recognition\r\n-//   }\r\n-//   if (speechSynthesis.current.speaking) {\r\n-//     speechSynthesis.current.cancel(); // Stop any ongoing speech synthesis\r\n-//   }\r\n-// };\r\n-\r\n-//   const handleCommandWithFuse = (command) => {\r\n-//     const fuse = new Fuse(commands, { keys: [\"utterance\"], threshold: 0.4 });\r\n-//     const results = fuse.search(command);\r\n-//     const foundCommand = results.length ? results[0].item : null;\r\n-\r\n-//     if (foundCommand) {\r\n-//       console.log(\"Command found:\", foundCommand.utterance);\r\n-\r\n-//       if (foundCommand.action) {\r\n-//         foundCommand.action();\r\n-//       } else if (foundCommand.route) {\r\n-//         navigate(foundCommand.route);\r\n-//       }\r\n-\r\n-//       // Speak after performing the action or navigation\r\n-//       speak(foundCommand.response);\r\n-//     } else {\r\n-//       console.log(\"No command found.\");\r\n-//       speak(\"I'm not sure how to respond to that.\");\r\n-//     }\r\n-//   };\r\n-\r\n-//   const commands = [\r\n-//     {\r\n-//       utterance: \"Hello who are you ?\",\r\n-\r\n-//       response:\r\n-//         \"Hi! This is Brane! your Voice bot from Brane Education How can I Assist you Today ?\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"Hello\",\r\n-\r\n-//       response: \"Hi! How can I assist you today?\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"hello\",\r\n-\r\n-//       response: \"Hi! How can I assist you today?\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"Hi.\",\r\n-\r\n-//       response: \"Hello! How can I assist you today?\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"Hey there\",\r\n-\r\n-//       response: \"Hi! How can I assist you today?\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"Good morning Brane.\",\r\n-\r\n-//       response: \"Hey Hiii! Good morning  ! How can I help you?\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"Good afternoon Brane.\",\r\n-\r\n-//       response: \"Hey Hiii! Good after noon ! How can I help you?\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"Good evening Brane.\",\r\n-\r\n-//       response: \"Hey Hiii! Good evening ! How can I help you?\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"can you please take me to login page\",\r\n-\r\n-//       route: \"/login\",\r\n-\r\n-//       response: \"Here's the Login Page, Please Login\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"please take me to login page\",\r\n-\r\n-//       route: \"/login\",\r\n-\r\n-//       response: \"Here's the Login Page, Please Login\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"Go to login page\",\r\n-\r\n-//       route: \"/login\",\r\n-\r\n-//       response: \"Here's the Login Page, Please Login\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"open login page\",\r\n-\r\n-//       route: \"/login\",\r\n-\r\n-//       response: \"Here's the Login Page, Please Login\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"can you please take me to signup page\",\r\n-\r\n-//       route: \"/signup\",\r\n-\r\n-//       response: \"Here's the signup page. Please proceed With Registration.\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"take me to signup page\",\r\n-\r\n-//       route: \"/signup\",\r\n-\r\n-//       response: \"Here's the signup page. Please proceed With Registration.\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"Go to signup page\",\r\n-\r\n-//       route: \"/signup\",\r\n-\r\n-//       response: \"Here's the signup page. Please proceed With Registration.\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"open signup page\",\r\n-\r\n-//       route: \"/signup\",\r\n-\r\n-//       response: \"Here's the signup page. Please proceed With Registration.\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"Go to face id\",\r\n-\r\n-//       route: \"/login/faceid\",\r\n-\r\n-//       response: \"Here's Face ID Login. Please proceed.\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"Go to face id login\",\r\n-\r\n-//       route: \"/login/faceid\",\r\n-\r\n-//       response: \"Here's Face ID Login. Please proceed.\",\r\n-//     },\r\n-//     {\r\n-//       utterance: \"Go to face login\",\r\n-\r\n-//       route: \"/login/faceid\",\r\n-\r\n-//       response: \"Here's Face ID Login. Please proceed.\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"login with face id\",\r\n-\r\n-//       route: \"/login/faceid\",\r\n-\r\n-//       response: \"Here's Face ID Login. Please proceed.\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"login with face\",\r\n-\r\n-//       route: \"/login/faceid\",\r\n-\r\n-//       response: \"Here's Face ID Login. Please proceed.\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"i want to login with face\",\r\n-\r\n-//       route: \"/login/faceid\",\r\n-\r\n-//       response: \"Here's Face ID Login. Please proceed.\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"login with voice\",\r\n-\r\n-//       route: \"/login/voiceid\",\r\n-\r\n-//       response: \"Here's Voice Login. Please proceed.\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"i want to login with voice\",\r\n-\r\n-//       route: \"/login/voiceid\",\r\n-\r\n-//       response: \"Here's Voice Login. Please proceed.\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"go to voice login\",\r\n-\r\n-//       route: \"/login/voiceid\",\r\n-\r\n-//       response: \"Here's Voice Login. Please proceed.\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"login with voice\",\r\n-\r\n-//       route: \"/login/voiceid\",\r\n-\r\n-//       response: \"Here's Voice Login. Please proceed.\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"login with mobile\",\r\n-\r\n-//       route: \"/login/mobile\",\r\n-\r\n-//       response: \"Here's Mobile Login. Please proceed.\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"i want to login with mobile\",\r\n-\r\n-//       route: \"/login/mobile\",\r\n-\r\n-//       response: \"Here's Mobile Login. Please proceed.\",\r\n-//     },\r\n-//     {\r\n-//       utterance: \"go to mobile login\",\r\n-\r\n-//       route: \"/login/mobile\",\r\n-\r\n-//       response: \"Here's Mobile Login. Please proceed.\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"what are platform features\",\r\n-\r\n-//       response:\r\n-//         \"Dashboard, Dynamic time table, Learning Networks, Little Masters, Video Based Dictionary, General Search.\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"Features of platform\",\r\n-\r\n-//       response:\r\n-//         \"Dashboard, Dynamic time table, Learning Networks, Little Masters, Video Based Dictionary, General Search.\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"What does the platform offer\",\r\n-\r\n-//       response:\r\n-//         \"Dashboard, Dynamic time table, Learning Networks, Little Masters, Video Based Dictionary, General Search.\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"Say me the features of platform\",\r\n-\r\n-//       response:\r\n-//         \"Dashboard, Dynamic time table, Learning Networks, Little Masters, Video Based Dictionary, General Search.\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"Say me the services of platform\",\r\n-\r\n-//       response:\r\n-//         \"Dashboard, Dynamic time table, Learning Networks, Little Masters, Video Based Dictionary, General Search.\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"tell me the services offered by the platform\",\r\n-\r\n-//       response:\r\n-//         \"Dashboard, Dynamic time table, Learning Networks, Little Masters, Video Based Dictionary, General Search.\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"explain platform services\",\r\n-\r\n-//       response:\r\n-//         \"Dashboard, Dynamic time table, Learning Networks, Little Masters, Video Based Dictionary, General Search.\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"Give me the Parent voice of Julia Harris\",\r\n-\r\n-//       response:\r\n-//         \"Brane education has helped my son a lot in his studies. He improved a lot in his studies and is now able to score good marks in his exams\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"Play today's motivational video\",\r\n-\r\n-//       response: \"I am playing the video\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"Play today's video\",\r\n-\r\n-//       response: \"I am playing Motivational video\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"Leaders Voice\",\r\n-\r\n-//       response:\r\n-//         \"This Voice-interactive AI Platform is a game Changer. It revolutionizes education.\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"Curriculum Supported by Brane Education\",\r\n-\r\n-//       response:\r\n-//         \"we support multiple Boards let me say few Telangana State Board Andhra Pradesh Board Maharashtra Board Assam Board\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"Boards supported by the platform\",\r\n-\r\n-//       response:\r\n-//         \"we support multiple Boards let me say few Telangana State Board Andhra Pradesh Board Maharashtra Board Assam Board\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"Curriculum\",\r\n-\r\n-//       response:\r\n-//         \"we support multiple Boards let me say few Telangana State Board Andhra Pradesh Board Maharashtra Board Assam Board\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"Go to landing page\",\r\n-\r\n-//       response: \"Okay, I am taking you to the landing page.\",\r\n-\r\n-//       route: \"/childpage\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"take me to landing page\",\r\n-\r\n-//       response: \"Okay, I am taking you to the landing page.\",\r\n-\r\n-//       route: \"/childpage\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"move to landing page\",\r\n-\r\n-//       response: \"Okay, I am taking you to the landing page.\",\r\n-\r\n-//       route: \"/childpage\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"roll back to landing page\",\r\n-\r\n-//       response: \"Okay, I am taking you to the landing page.\",\r\n-\r\n-//       route: \"/childpage\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"move to landing page\",\r\n-\r\n-//       response: \"Okay, I am taking you to the landing page.\",\r\n-\r\n-//       route: \"/childpage\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"what is today's quote\",\r\n-\r\n-//       response:\r\n-//         \"Determination is the power that sees us through all our frustration and obstacles. It helps in building our willpower which is the very basis of success.\",\r\n-\r\n-//       route: \"/childpage\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"Today's Inspirational quote\",\r\n-\r\n-//       response:\r\n-//         \"Determination is the power that sees us through all our frustration and obstacles. It helps in building our willpower which is the very basis of success.\",\r\n-\r\n-//       route: \"/childpage\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"say me today's quote\",\r\n-\r\n-//       response:\r\n-//         \"Determination is the power that sees us through all our frustration and obstacles. It helps in building our willpower which is the very basis of success.\",\r\n-\r\n-//       route: \"/childpage\",\r\n-//     },\r\n-//     {\r\n-//       utterance: \"go back\",\r\n-//       response: \"\",\r\n-//       action: goBack, // Note the use of an action property\r\n-//     },\r\n-//     {\r\n-//       utterance: \"go forward\",\r\n-//       response: \"\",\r\n-//       action: goForward,\r\n-//     },\r\n-//     {\r\n-//       utterance: \"play video\",\r\n-//       // response: \"Playing video.\",\r\n-//       action: playVideo,\r\n-//     },\r\n-//     {\r\n-//       utterance: \"pause video\",\r\n-//       // response: \"Pausing video.\",\r\n-//       action: pauseVideo,\r\n-//     },\r\n-//     {\r\n-//       utterance: \"start video\",\r\n-//       // response: \"Playing video.\",\r\n-//       action: playVideo,\r\n-//     },\r\n-//     {\r\n-//       utterance: \"stop video\",\r\n-//       // response: \"Playing video.\",\r\n-//       action: pauseVideo,\r\n-//     },\r\n-//     {\r\n-//       utterance: \"scroll up\",\r\n-//       // response: \"Scrolling up.\",\r\n-//       action: scrollUp,\r\n-//     },\r\n-//     {\r\n-//       utterance: \"scroll down\",\r\n-//       // response: \"Scrolling down.\",\r\n-//       action: scrollDown,\r\n-//     },\r\n-//     {\r\n-//       utterance: \"go up\",\r\n-\r\n-//       // response: \"Scrolling up.\",\r\n-//       action: scrollUp,\r\n-//     },\r\n-//     {\r\n-//       utterance: \"go down\",\r\n-//       // response: \"Scrolling down.\",\r\n-//       action: scrollDown,\r\n-//     },\r\n-//     {\r\n-//       utterance: \"scroll to top\",\r\n-//       action: scrollToTop,\r\n-//     },\r\n-//     {\r\n-//       utterance: \"scroll to bottom\",\r\n-//       action: scrollToBottom,\r\n-//     },\r\n-//     {\r\n-//       utterance: \"brane stop\",\r\n-//       action: stopListening,\r\n-//     },\r\n-//     {\r\n-//       utterance: \"brane turn off\",\r\n-//       action: stopListening,\r\n-//     },\r\n-//     {\r\n-//       utterance: \"brane stop the bot\",\r\n-//       action: stopListening,\r\n-//     },\r\n-//   ];\r\n-\r\n-//   return (\r\n-//     <div className=\"speech-bot-container\">\r\n-//       <div\r\n-//         className={`button-container ${\r\n-//           isListening ? \"voicebotframeactive\" : \"voicebotframe\"\r\n-//         }`}\r\n-//       >\r\n-//         <button onClick={isListening ? stopListening : startListening}>\r\n-//           {isListening ? \"Stop\" : \"Start\"} Animation\r\n-//         </button>\r\n-//         {/* <button onClick={toggleBotActive}>\r\n-//         {isBotActive ? 'Deactivate Bot' : 'Activate Bot'}\r\n-//       </button> */}\r\n-//       </div>\r\n-//     </div>\r\n-//   );\r\n-// };\r\n-\r\n-// export default VoiceBot;\r\n-\r\n-//Bot Video added but some start issues\r\n-\r\n-// import React, { useState, useEffect, useRef } from \"react\";\r\n-// import { useNavigate, useLocation } from \"react-router-dom\";\r\n-// import Fuse from \"fuse.js\";\r\n-// import \"./VoiceBot.css\";\r\n-\r\n-// const VoiceBot = ({ videoRef }) => {\r\n-//   const [isListening, setIsListening] = useState(false);\r\n-//   const [isSpeaking, setIsSpeaking] = useState(false);\r\n-//   const recognition = useRef(null);\r\n-//   const speechSynthesis = useRef(window.speechSynthesis);\r\n-//   const hasGreeted = useRef(false);\r\n-//   const restartRecognitionTimeout = useRef(null);\r\n-//   const navigate = useNavigate();\r\n-//   const location = useLocation();\r\n-//   const [isRecognitionActive, setIsRecognitionActive] = useState(false); // New state to track recognition status\r\n-\r\n-//   useEffect(() => {\r\n-//     recognition.current = new window.webkitSpeechRecognition();\r\n-//     recognition.current.continuous = true;\r\n-//     recognition.current.interimResults = false;\r\n-//     recognition.current.onresult = onResult;\r\n-//     recognition.current.onend = () => {\r\n-//       console.log(\"Recognition ended.\");\r\n-//       if (isListening) {\r\n-//         startListening();\r\n-//       }\r\n-//     };\r\n-//     recognition.current.onerror = (event) => {\r\n-//       console.error(\"Recognition error:\", event.error);\r\n-//     };\r\n-\r\n-//     return () => {\r\n-//       recognition.current.abort();\r\n-//     };\r\n-//   }, []);\r\n-\r\n-//   // Update useEffect for managing the recognition state based on isListening and isRecognitionActive\r\n-//   useEffect(() => {\r\n-//     if (isListening && !isRecognitionActive) {\r\n-//       startListening();\r\n-//     } else if (!isListening && isRecognitionActive) {\r\n-//       stopListening();\r\n-//     }\r\n-//   }, [isListening, isRecognitionActive]);\r\n-\r\n-//   const goBack = () => {\r\n-//     if (window.history.length > 1) {\r\n-//       navigate(-1);\r\n-//     } else {\r\n-//       speak(\"Can't go back any further.\");\r\n-//     }\r\n-//   };\r\n-\r\n-//   const goForward = () => {\r\n-//     // Unfortunately, there's no direct way to check if you can go forward in the history.\r\n-//     // You might need to manage this state manually based on user navigation.\r\n-//     navigate(1);\r\n-//   };\r\n-\r\n-//   const playVideo = () => {\r\n-//     if (videoRef.current && !videoRef.current.paused) {\r\n-//       speak(\"Video is already playing.\");\r\n-//     } else if (videoRef.current) {\r\n-//       videoRef.current.play();\r\n-//       speak(\"Playing video.\");\r\n-//     } else {\r\n-//       speak(\"No video to play.\");\r\n-//     }\r\n-//   };\r\n-\r\n-//   const pauseVideo = () => {\r\n-//     if (videoRef.current && videoRef.current.paused) {\r\n-//       speak(\"Video is already paused.\");\r\n-//     } else if (videoRef.current) {\r\n-//       videoRef.current.pause();\r\n-//       speak(\"Video paused.\");\r\n-//     } else {\r\n-//       speak(\"No video to pause.\");\r\n-//     }\r\n-//   };\r\n-\r\n-//   const scrollAmount = window.innerHeight * 0.82;\r\n-\r\n-//   const scrollUp = () => {\r\n-//     if (window.pageYOffset === 0) {\r\n-//       speak(\"Already at the top of the page.\");\r\n-//     } else {\r\n-//       window.scrollBy(0, -scrollAmount);\r\n-//       speak(\"Scrolled up.\");\r\n-//     }\r\n-//   };\r\n-\r\n-//   const scrollDown = () => {\r\n-//     const maxScrollTop =\r\n-//       document.documentElement.scrollHeight - window.innerHeight;\r\n-//     if (window.pageYOffset >= maxScrollTop) {\r\n-//       speak(\"Already at the bottom of the page.\");\r\n-//     } else {\r\n-//       window.scrollBy(0, scrollAmount);\r\n-//       speak(\"Scrolled down.\");\r\n-//     }\r\n-//   };\r\n-\r\n-//   const scrollToTop = () => {\r\n-//     if (window.pageYOffset === 0) {\r\n-//       speak(\"Already at the top of the page.\");\r\n-//     } else {\r\n-//       window.scrollTo(0, 0);\r\n-//       speak(\"Scrolled to the top of the page.\");\r\n-//     }\r\n-//   };\r\n-\r\n-//   const scrollToBottom = () => {\r\n-//     const maxScrollTop =\r\n-//       document.documentElement.scrollHeight - window.innerHeight;\r\n-//     if (window.pageYOffset >= maxScrollTop) {\r\n-//       speak(\"Already at the bottom of the page.\");\r\n-//     } else {\r\n-//       window.scrollTo(0, document.body.scrollHeight);\r\n-//       speak(\"Scrolled to the bottom of the page.\");\r\n-//     }\r\n-//   };\r\n-\r\n-//   // const speak = (message) => {\r\n-//   //   const utterance = new SpeechSynthesisUtterance(message);\r\n-//   //   utterance.onend = () => {\r\n-//   //     setIsSpeaking(false);\r\n-//   //     console.log(\"Speaking ended.\");\r\n-//   //     // Only restart recognition if we're still supposed to be listening\r\n-//   //     // if (isListening) {\r\n-//   //     //   if (restartRecognitionTimeout.current) {\r\n-//   //     //     clearTimeout(restartRecognitionTimeout.current);\r\n-//   //     //   }\r\n-//   //     //   restartRecognitionTimeout.current = setTimeout(() => {\r\n-//   //     //     console.log(\"Recognition restarted.\");\r\n-//   //     //     recognition.current.start();\r\n-//   //     //   }, 100); // Delay to prevent immediate restart\r\n-//   //     // }\r\n-//   //     if (isListening && !recognition.current.starting) { // Check the flag before restarting\r\n-//   //       recognition.current.starting = true; // Set the flag when starting recognition\r\n-//   //       recognition.current.start();\r\n-//   //     }\r\n-//   //   };\r\n-\r\n-//   //   setIsSpeaking(true);\r\n-//   //   console.log(\"Speaking started.\");\r\n-//   //   recognition.current.stop(); // Stop recognition when the bot starts speaking\r\n-//   //   speechSynthesis.current.speak(utterance);\r\n-//   // };\r\n-\r\n-//   const speak = (message) => {\r\n-//     console.log(\"speak function called with message:\", message);\r\n-//     const utterance = new SpeechSynthesisUtterance(message);\r\n-//     utterance.onend = () => {\r\n-//       setIsSpeaking(false);\r\n-//       console.log(\"Speaking ended.\");\r\n-//       // Directly handle the restart of recognition here if needed\r\n-//       if (isListening) {\r\n-//         startListening();\r\n-//       }\r\n-//     };\r\n-\r\n-//     setIsSpeaking(true);\r\n-//     console.log(\"Speaking started.\");\r\n-//     recognition.current.stop(); // Ensure to stop recognition before speaking\r\n-//     speechSynthesis.current.speak(utterance);\r\n-//   };\r\n-\r\n-//   const onResult = (event) => {\r\n-//     const resultIndex = event.resultIndex;\r\n-//     const transcript = event.results[resultIndex][0].transcript\r\n-//       .trim()\r\n-//       .toLowerCase();\r\n-\r\n-//     if (event.results[resultIndex].isFinal) {\r\n-//       console.log(`Recognized text: ${transcript}`);\r\n-//       if (transcript.includes(\"brain\")) {\r\n-//         console.log(\"Wake word heard, processing command...\");\r\n-//         handleCommandWithFuse(transcript.replace(\"brain\", \"\"));\r\n-//       }\r\n-//     }\r\n-//   };\r\n-\r\n-//   // const onRecognitionEnd = () => {\r\n-//   //   console.log(\"Recognition ended.\");\r\n-//   //   setIsRecognitionActive(false); // Update state when recognition ends\r\n-//   //   recognition.current.starting = false; // Reset the flag when recognition ends\r\n-//   //   // We now check if the recognition is already running before starting it again\r\n-//   //   if (isListening && !isSpeaking && !recognition.current?.starting) {\r\n-//   //     console.log(\"Restarting recognition.\");\r\n-//   //     recognition.current.start();\r\n-//   //   }\r\n-//   // };\r\n-\r\n-//   // useEffect(() => {\r\n-//   //   if (isListening && !hasGreeted.current) {\r\n-//   //     speak(\"Hello, I'm Brane. How can I assist you today?\");\r\n-//   //     hasGreeted.current = true;\r\n-//   //   } else if (isListening && !isSpeaking) {\r\n-//   //     recognition.current.start();\r\n-//   //   }\r\n-//   // }, [isListening, isSpeaking]);\r\n-\r\n-//   useEffect(() => {\r\n-//     if (isListening && !hasGreeted.current) {\r\n-//       speak(\"Hello, I'm Brane. How can I assist you today?\");\r\n-//       hasGreeted.current = true;\r\n-//     } else if (isListening && !isSpeaking && !recognition.current.starting) {\r\n-//       // Check the flag before starting\r\n-//       recognition.current.starting = true; // Set the flag when starting recognition\r\n-//       recognition.current.start();\r\n-//     }\r\n-//   }, [isListening, isSpeaking]);\r\n-\r\n-//   // const startListening = () => {\r\n-//   //   console.log(\"Attempting to start listening.\");\r\n-//   //   if (recognition.current && !recognition.current.starting) {\r\n-//   //     setIsListening(true);\r\n-//   //     recognition.current.starting = true; // Set the flag when starting recognition\r\n-//   //     recognition.current.start();\r\n-//   //     console.log(\"Listening started.\");\r\n-//   //   }\r\n-//   // };\r\n-\r\n-//   // const stopListening = () => {\r\n-//   //   console.log(\"Stopping listening.\");\r\n-\r\n-//   //   setIsListening(false);\r\n-//   //   recognition.current.stop();\r\n-//   //   if (speechSynthesis.current.speaking) {\r\n-//   //     speechSynthesis.current.cancel();\r\n-//   //   }\r\n-//   //   if (restartRecognitionTimeout.current) {\r\n-//   //     clearTimeout(restartRecognitionTimeout.current);\r\n-//   //   }\r\n-//   //   console.log(\"Listening stopped.\");\r\n-//   // };\r\n-//   // Handle start and stop listening logic\r\n-//   const startListening = () => {\r\n-//     console.log(\"Attempting to start listening.\");\r\n-//     if (!recognition.current.starting) {\r\n-//       setIsListening(true);\r\n-//       recognition.current.starting = true;\r\n-//       recognition.current.start();\r\n-//       console.log(\"Listening started.\");\r\n-//     } else {\r\n-//       console.log(\"Recognition already active.\");\r\n-//     }\r\n-//   };\r\n-\r\n-//   const stopListening = () => {\r\n-//     console.log(\"Stopping listening.\");\r\n-//     if (recognition.current.starting) {\r\n-//       setIsListening(false);\r\n-//       recognition.current.starting = false;\r\n-//       recognition.current.stop();\r\n-//       console.log(\"Listening stopped.\");\r\n-//     } else {\r\n-//       console.log(\"Recognition already inactive.\");\r\n-//     }\r\n-//   };\r\n-\r\n-//   // const handleCommandWithFuse = (command) => {\r\n-//   //   const fuse = new Fuse(commands, { keys: [\"utterance\"], threshold: 0.4 });\r\n-//   //   const results = fuse.search(command);\r\n-//   //   const foundCommand = results.length ? results[0].item : null;\r\n-\r\n-//   //   if (foundCommand) {\r\n-//   //     console.log(\"Command found:\", foundCommand.utterance);\r\n-//   //     speak(foundCommand.response);\r\n-//   //     if (foundCommand.route) {\r\n-//   //       navigate(foundCommand.route); // Navigate to the route specified in the command\r\n-//   //     }\r\n-//   //   } else {\r\n-//   //     console.log(\"No command found.\");\r\n-//   //     speak(\"I'm not sure how to respond to that.\");\r\n-//   //   }\r\n-//   // };\r\n-\r\n-//   const handleCommandWithFuse = (command) => {\r\n-//     const fuse = new Fuse(commands, { keys: [\"utterance\"], threshold: 0.4 });\r\n-//     const results = fuse.search(command);\r\n-//     const foundCommand = results.length ? results[0].item : null;\r\n-\r\n-//     if (foundCommand) {\r\n-//       console.log(\"Command found:\", foundCommand.utterance);\r\n-\r\n-//       if (foundCommand.route) {\r\n-//         if (location.pathname !== foundCommand.route) {\r\n-//           navigate(foundCommand.route);\r\n-//           speak(\r\n-//             `Navigating to ${\r\n-//               foundCommand.routeDescription || \"requested page\"\r\n-//             }.`\r\n-//           );\r\n-//         } else {\r\n-//           speak(\r\n-//             `You are already on the ${\r\n-//               foundCommand.routeDescription || \"requested page\"\r\n-//             }.`\r\n-//           );\r\n-//         }\r\n-//       } else if (foundCommand.action) {\r\n-//         foundCommand.action();\r\n-//       }\r\n-\r\n-//       if (foundCommand.response) {\r\n-//         speak(foundCommand.response);\r\n-//       }\r\n-//     } else {\r\n-//       console.log(\"No command found.\");\r\n-//       speak(\"I'm not sure how to respond to that.\");\r\n-//     }\r\n-//   };\r\n-\r\n-//   const commands = [\r\n-//     {\r\n-//       utterance: \"Hello who are you ?\",\r\n-\r\n-//       response:\r\n-//         \"Hi! This is Brane! your Voice bot from Brane Education How can I Assist you Today ?\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"Hello\",\r\n-\r\n-//       response: \"Hi! How can I assist you today?\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"hello\",\r\n-\r\n-//       response: \"Hi! How can I assist you today?\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"Hi.\",\r\n-\r\n-//       response: \"Hello! How can I assist you today?\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"Hey there\",\r\n-\r\n-//       response: \"Hi! How can I assist you today?\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"Good morning Brane.\",\r\n-\r\n-//       response: \"Hey Hiii! Good morning  ! How can I help you?\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"Good afternoon Brane.\",\r\n-\r\n-//       response: \"Hey Hiii! Good after noon ! How can I help you?\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"Good evening Brane.\",\r\n-\r\n-//       response: \"Hey Hiii! Good evening ! How can I help you?\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"can you please take me to login page\",\r\n-//       route: \"/login\",\r\n-//       routeDescription: \"login page\",\r\n-//       response: \"Navigating to the login page.\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"go to login page\",\r\n-//       route: \"/login\",\r\n-//       routeDescription: \"login page\",\r\n-//       response: \"Navigating to the login page.\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"please take me to login page\",\r\n-//       route: \"/login\",\r\n-//       routeDescription: \"login page\",\r\n-//       response: \"Navigating to the login page.\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"Go to login page\",\r\n-//       route: \"/login\",\r\n-//       routeDescription: \"login page\",\r\n-//       response: \"Navigating to the login page.\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"open login page\",\r\n-//       route: \"/login\",\r\n-//       routeDescription: \"login page\",\r\n-//       response: \"Navigating to the login page.\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"can you please take me to signup page\",\r\n-//       route: \"/signup\",\r\n-//       routeDescription: \"signup page\",\r\n-//       response: \"Navigating to the signup page.\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"take me to signup page\",\r\n-//       route: \"/signup\",\r\n-//       routeDescription: \"signup page\",\r\n-//       response: \"Navigating to the signup page.\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"Go to signup page\",\r\n-//       route: \"/signup\",\r\n-//       routeDescription: \"signup page\",\r\n-//       response: \"Navigating to the signup page.\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"open signup page\",\r\n-//       route: \"/signup\",\r\n-//       routeDescription: \"signup page\",\r\n-//       response: \"Navigating to the signup page.\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"what are platform features\",\r\n-\r\n-//       response:\r\n-//         \"Dashboard, Dynamic time table, Learning Networks, Little Masters, Video Based Dictionary, General Search.\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"Features of platform\",\r\n-\r\n-//       response:\r\n-//         \"Dashboard, Dynamic time table, Learning Networks, Little Masters, Video Based Dictionary, General Search.\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"What does the platform offer\",\r\n-\r\n-//       response:\r\n-//         \"Dashboard, Dynamic time table, Learning Networks, Little Masters, Video Based Dictionary, General Search.\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"Say me the features of platform\",\r\n-\r\n-//       response:\r\n-//         \"Dashboard, Dynamic time table, Learning Networks, Little Masters, Video Based Dictionary, General Search.\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"Say me the services of platform\",\r\n-\r\n-//       response:\r\n-//         \"Dashboard, Dynamic time table, Learning Networks, Little Masters, Video Based Dictionary, General Search.\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"tell me the services offered by the platform\",\r\n-\r\n-//       response:\r\n-//         \"Dashboard, Dynamic time table, Learning Networks, Little Masters, Video Based Dictionary, General Search.\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"explain platform services\",\r\n-\r\n-//       response:\r\n-//         \"Dashboard, Dynamic time table, Learning Networks, Little Masters, Video Based Dictionary, General Search.\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"Give me the Parent voice of Julia Harris\",\r\n-\r\n-//       response:\r\n-//         \"Brane education has helped my son a lot in his studies. He improved a lot in his studies and is now able to score good marks in his exams\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"Play today's motivational video\",\r\n-\r\n-//       response: \"I am playing the video\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"Play today's video\",\r\n-\r\n-//       response: \"I am playing Motivational video\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"Leaders Voice\",\r\n-\r\n-//       response:\r\n-//         \"This Voice-interactive AI Platform is a game Changer. It revolutionizes education.\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"Curriculum Supported by Brane Education\",\r\n-\r\n-//       response:\r\n-//         \"we support multiple Boards let me say few Telangana State Board Andhra Pradesh Board Maharashtra Board Assam Board\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"Boards supported by the platform\",\r\n-\r\n-//       response:\r\n-//         \"we support multiple Boards let me say few Telangana State Board Andhra Pradesh Board Maharashtra Board Assam Board\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"Curriculum\",\r\n-\r\n-//       response:\r\n-//         \"we support multiple Boards let me say few Telangana State Board Andhra Pradesh Board Maharashtra Board Assam Board\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"Go to landing page\",\r\n-\r\n-//       response: \"Okay, I am taking you to the landing page.\",\r\n-\r\n-//       route: \"/childpage\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"take me to landing page\",\r\n-\r\n-//       response: \"Okay, I am taking you to the landing page.\",\r\n-\r\n-//       route: \"/childpage\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"move to landing page\",\r\n-\r\n-//       response: \"Okay, I am taking you to the landing page.\",\r\n-\r\n-//       route: \"/childpage\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"roll back to landing page\",\r\n-\r\n-//       response: \"Okay, I am taking you to the landing page.\",\r\n-\r\n-//       route: \"/childpage\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"move to landing page\",\r\n-\r\n-//       response: \"Okay, I am taking you to the landing page.\",\r\n-\r\n-//       route: \"/childpage\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"what is today's quote\",\r\n-\r\n-//       response:\r\n-//         \"Determination is the power that sees us through all our frustration and obstacles. It helps in building our willpower which is the very basis of success.\",\r\n-\r\n-//       // route: \"/childpage\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"Today's Inspirational quote\",\r\n-\r\n-//       response:\r\n-//         \"Determination is the power that sees us through all our frustration and obstacles. It helps in building our willpower which is the very basis of success.\",\r\n-\r\n-//       // route: \"/childpage\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"say me today's quote\",\r\n-\r\n-//       response:\r\n-//         \"Determination is the power that sees us through all our frustration and obstacles. It helps in building our willpower which is the very basis of success.\",\r\n-\r\n-//       // route: \"/childpage\",\r\n-//     },\r\n-//     {\r\n-//       utterance: \"go back\",\r\n-//       response: \"Going back.\",\r\n-//       action: goBack, // Note the use of an action property\r\n-//     },\r\n-//     {\r\n-//       utterance: \"go forward\",\r\n-//       response: \"Going forward.\",\r\n-//       action: goForward,\r\n-//     },\r\n-//     {\r\n-//       utterance: \"play video\",\r\n-//       // response: \"Playing video.\",\r\n-//       action: playVideo,\r\n-//     },\r\n-//     {\r\n-//       utterance: \"pause video\",\r\n-//       // response: \"Pausing video.\",\r\n-//       action: pauseVideo,\r\n-//     },\r\n-//     {\r\n-//       utterance: \"start video\",\r\n-//       // response: \"Playing video.\",\r\n-//       action: playVideo,\r\n-//     },\r\n-//     {\r\n-//       utterance: \"stop video\",\r\n-//       // response: \"Playing video.\",\r\n-//       action: pauseVideo,\r\n-//     },\r\n-//     {\r\n-//       utterance: \"scroll up\",\r\n-//       // response: \"Scrolling up.\",\r\n-//       action: scrollUp,\r\n-//     },\r\n-//     {\r\n-//       utterance: \"scroll down\",\r\n-//       // response: \"Scrolling down.\",\r\n-//       action: scrollDown,\r\n-//     },\r\n-//     {\r\n-//       utterance: \"go up\",\r\n-\r\n-//       // response: \"Scrolling up.\",\r\n-//       action: scrollUp,\r\n-//     },\r\n-//     {\r\n-//       utterance: \"go down\",\r\n-//       // response: \"Scrolling down.\",\r\n-//       action: scrollDown,\r\n-//     },\r\n-//     {\r\n-//       utterance: \"scroll to top\",\r\n-//       action: scrollToTop,\r\n-//     },\r\n-//     {\r\n-//       utterance: \"scroll to bottom\",\r\n-//       action: scrollToBottom,\r\n-//     },\r\n-//   ];\r\n-//   return (\r\n-//     <div className=\"speech-bot-container\">\r\n-//       <div\r\n-//         className={`button-container ${\r\n-//           isListening ? \"voicebotframeactive\" : \"voicebotframe\"\r\n-//         }`}\r\n-//       >\r\n-//         <div onClick={isListening ? stopListening : startListening}>\r\n-//           <iframe\r\n-//             src={\r\n-//               isListening\r\n-//                 ? \"https://lottie.host/?file=a89aca3f-5407-4052-82c3-2048afca7a9f/NpCdWzLSKD.json\"\r\n-//                 : \"https://lottie.host/?file=d2b6cc0e-fe95-4847-85b5-35365fca7e00/vTudpCuPZq.json\"\r\n-//             }\r\n-//             width=\"120\" // Set your desired width\r\n-//             height=\"120\" // Set your desired height\r\n-//             title={isListening ? \"Stop Animation\" : \"Start Animation\"}\r\n-//             className={isListening ? \"voicebotframeactive\" : \"voicebotframe\"}\r\n-//           ></iframe>\r\n-//           {isListening ? (\r\n-//             <div className=\"overlay\" onClick={stopListening}></div>\r\n-//           ) : (\r\n-//             <div className=\"overlay\" onClick={startListening}></div>\r\n-//           )}\r\n-//         </div>\r\n-//       </div>\r\n-//     </div>\r\n-//   );\r\n-// };\r\n-\r\n-// export default VoiceBot;\r\n-\r\n-// All functionalities but messed up\r\n-\r\n-// import React, { useState, useEffect, useRef } from \"react\";\r\n-// import { useNavigate, useLocation } from \"react-router-dom\";\r\n-// import Fuse from \"fuse.js\";\r\n-// import \"./VoiceBot.css\";\r\n-\r\n-// const VoiceBot = ({ videoRef, takeTestRef, goBackRef }) => {\r\n-//   const [isListening, setIsListening] = useState(false);\r\n-//   const [isSpeaking, setIsSpeaking] = useState(false);\r\n-//   const recognition = useRef(null);\r\n-//   const speechSynthesis = useRef(window.speechSynthesis);\r\n-//   const hasGreeted = useRef(false);\r\n-//   const navigate = useNavigate();\r\n-//   const location = useLocation();\r\n-//   const isRecognitionActive = useRef(false);\r\n-\r\n-//   useEffect(() => {\r\n-//     recognition.current = new window.webkitSpeechRecognition();\r\n-//     recognition.current.continuous = true;\r\n-//     recognition.current.interimResults = false;\r\n-//     recognition.current.onresult = onResult;\r\n-//     recognition.current.onend = onRecognitionEnd;\r\n-\r\n-//     return () => {\r\n-//       if (recognition.current) {\r\n-//         recognition.current.abort();\r\n-//       }\r\n-//     };\r\n-//   }, [location.pathname]);\r\n-\r\n-//   const onResult = (event) => {\r\n-//     const resultIndex = event.resultIndex;\r\n-//     const transcript = event.results[resultIndex][0].transcript\r\n-//       .trim()\r\n-//       .toLowerCase();\r\n-\r\n-//     if (event.results[resultIndex].isFinal) {\r\n-//       console.log(`Recognized text: ${transcript}`);\r\n-//       if (transcript.includes(\"brain\")) {\r\n-//         console.log(\"Wake word heard, processing command...\");\r\n-//         handleCommandWithFuse(transcript.replace(\"brain\", \"\"));\r\n-//       }\r\n-//     }\r\n-//   };\r\n-\r\n-//   const startListening = () => {\r\n-//     if (!isRecognitionActive.current) {\r\n-//       setIsListening(true);\r\n-//       recognition.current.start();\r\n-//       isRecognitionActive.current = true;\r\n-//     }\r\n-//   };\r\n-\r\n-//   const stopListening = () => {\r\n-//     if (isRecognitionActive.current) {\r\n-//       setIsListening(false);\r\n-//       recognition.current.stop();\r\n-//       isRecognitionActive.current = false;\r\n-//     }\r\n-//   };\r\n-\r\n-//   const onRecognitionEnd = () => {\r\n-//     isRecognitionActive.current = false;\r\n-//     if (isListening) {\r\n-//       startListening();\r\n-//     }\r\n-//   };\r\n-\r\n-//   const speak = (message) => {\r\n-//     const utterance = new SpeechSynthesisUtterance(message);\r\n-//     utterance.onend = () => {\r\n-//       setIsSpeaking(false);\r\n-//       if (isListening && !isRecognitionActive.current) {\r\n-//         startListening();\r\n-//       }\r\n-//     };\r\n-\r\n-//     setIsSpeaking(true);\r\n-//     if (isRecognitionActive.current) {\r\n-//       stopListening(); // Adjusted to use stopListening\r\n-//     }\r\n-//     speechSynthesis.current.speak(utterance);\r\n-//   };\r\n-\r\n-//   useEffect(() => {\r\n-//     if (isListening && !hasGreeted.current) {\r\n-//       speak(\"Hello, I'm Brane. How can I assist you today?\");\r\n-//       hasGreeted.current = true;\r\n-//     }\r\n-//   }, [isListening]);\r\n-\r\n-//   const goBack = () => {\r\n-//     if (window.history.length > 1) {\r\n-//       navigate(-1);\r\n-//     } else {\r\n-//       speak(\"Can't go back any further.\");\r\n-//     }\r\n-//   };\r\n-\r\n-//   const goForward = () => {\r\n-//     // Unfortunately, there's no direct way to check if you can go forward in the history.\r\n-//     // You might need to manage this state manually based on user navigation.\r\n-//     navigate(1);\r\n-//   };\r\n-\r\n-//   const playVideo = () => {\r\n-//     if (videoRef.current && !videoRef.current.paused) {\r\n-//       speak(\"Video is already playing.\");\r\n-//     } else if (videoRef.current) {\r\n-//       videoRef.current.play();\r\n-//       speak(\"Playing video.\");\r\n-//     } else {\r\n-//       speak(\"No video to play.\");\r\n-//     }\r\n-//   };\r\n-\r\n-//   const pauseVideo = () => {\r\n-//     if (videoRef.current && videoRef.current.paused) {\r\n-//       speak(\"Video is already paused.\");\r\n-//     } else if (videoRef.current) {\r\n-//       videoRef.current.pause();\r\n-//       speak(\"Video paused.\");\r\n-//     } else {\r\n-//       speak(\"No video to pause.\");\r\n-//     }\r\n-//   };\r\n-\r\n-//   const scrollAmount = window.innerHeight * 0.82;\r\n-\r\n-//   const scrollUp = () => {\r\n-//     if (window.pageYOffset === 0) {\r\n-//       speak(\"Already at the top of the page.\");\r\n-//     } else {\r\n-//       window.scrollBy(0, -scrollAmount);\r\n-//       speak(\"Scrolled up.\");\r\n-//     }\r\n-//   };\r\n-\r\n-//   const scrollDown = () => {\r\n-//     const maxScrollTop =\r\n-//       document.documentElement.scrollHeight - window.innerHeight;\r\n-//     if (window.pageYOffset >= maxScrollTop) {\r\n-//       speak(\"Already at the bottom of the page.\");\r\n-//     } else {\r\n-//       window.scrollBy(0, scrollAmount);\r\n-//       speak(\"Scrolled down.\");\r\n-//     }\r\n-//   };\r\n-\r\n-//   const scrollToTop = () => {\r\n-//     if (window.pageYOffset === 0) {\r\n-//       speak(\"Already at the top of the page.\");\r\n-//     } else {\r\n-//       window.scrollTo(0, 0);\r\n-//       speak(\"Scrolled to the top of the page.\");\r\n-//     }\r\n-//   };\r\n-\r\n-//   const scrollToBottom = () => {\r\n-//     const maxScrollTop =\r\n-//       document.documentElement.scrollHeight - window.innerHeight;\r\n-//     if (window.pageYOffset >= maxScrollTop) {\r\n-//       speak(\"Already at the bottom of the page.\");\r\n-//     } else {\r\n-//       window.scrollTo(0, document.body.scrollHeight);\r\n-//       speak(\"Scrolled to the bottom of the page.\");\r\n-//     }\r\n-//   };\r\n-\r\n-//   // const speak = (message) => {\r\n-//   //   const utterance = new SpeechSynthesisUtterance(message);\r\n-//   //   utterance.onend = () => {\r\n-//   //     setIsSpeaking(false);\r\n-//   //     console.log(\"Speaking ended.\");\r\n-//   //     // Only restart recognition if we're still supposed to be listening\r\n-//   //     // if (isListening) {\r\n-//   //     //   if (restartRecognitionTimeout.current) {\r\n-//   //     //     clearTimeout(restartRecognitionTimeout.current);\r\n-//   //     //   }\r\n-//   //     //   restartRecognitionTimeout.current = setTimeout(() => {\r\n-//   //     //     console.log(\"Recognition restarted.\");\r\n-//   //     //     recognition.current.start();\r\n-//   //     //   }, 100); // Delay to prevent immediate restart\r\n-//   //     // }\r\n-//   //     if (isListening && !recognition.current.starting) { // Check the flag before restarting\r\n-//   //       recognition.current.starting = true; // Set the flag when starting recognition\r\n-//   //       recognition.current.start();\r\n-//   //     }\r\n-//   //   };\r\n-\r\n-//   //   setIsSpeaking(true);\r\n-//   //   console.log(\"Speaking started.\");\r\n-//   //   recognition.current.stop(); // Stop recognition when the bot starts speaking\r\n-//   //   speechSynthesis.current.speak(utterance);\r\n-//   // };\r\n-\r\n-//   // const onRecognitionEnd = () => {\r\n-//   //   console.log(\"Recognition ended.\");\r\n-//   //   setIsRecognitionActive(false); // Update state when recognition ends\r\n-//   //   recognition.current.starting = false; // Reset the flag when recognition ends\r\n-//   //   // We now check if the recognition is already running before starting it again\r\n-//   //   if (isListening && !isSpeaking && !recognition.current?.starting) {\r\n-//   //     console.log(\"Restarting recognition.\");\r\n-//   //     recognition.current.start();\r\n-//   //   }\r\n-//   // };\r\n-\r\n-//   // useEffect(() => {\r\n-//   //   if (isListening && !hasGreeted.current) {\r\n-//   //     speak(\"Hello, I'm Brane. How can I assist you today?\");\r\n-//   //     hasGreeted.current = true;\r\n-//   //   } else if (isListening && !isSpeaking) {\r\n-//   //     recognition.current.start();\r\n-//   //   }\r\n-//   // }, [isListening, isSpeaking]);\r\n-\r\n-//   // const startListening = () => {\r\n-//   //   console.log(\"Attempting to start listening.\");\r\n-//   //   if (recognition.current && !recognition.current.starting) {\r\n-//   //     setIsListening(true);\r\n-//   //     recognition.current.starting = true; // Set the flag when starting recognition\r\n-//   //     recognition.current.start();\r\n-//   //     console.log(\"Listening started.\");\r\n-//   //   }\r\n-//   // };\r\n-\r\n-//   // const stopListening = () => {\r\n-//   //   console.log(\"Stopping listening.\");\r\n-\r\n-//   //   setIsListening(false);\r\n-//   //   recognition.current.stop();\r\n-//   //   if (speechSynthesis.current.speaking) {\r\n-//   //     speechSynthesis.current.cancel();\r\n-//   //   }\r\n-//   //   if (restartRecognitionTimeout.current) {\r\n-//   //     clearTimeout(restartRecognitionTimeout.current);\r\n-//   //   }\r\n-//   //   console.log(\"Listening stopped.\");\r\n-//   // };\r\n-//   // Handle start and stop listening logic\r\n-\r\n-//   useEffect(() => {\r\n-//     if (isListening && !hasGreeted.current) {\r\n-//       speak(\"Hello, I'm Brane. How can I assist you today?\");\r\n-//       hasGreeted.current = true;\r\n-//     }\r\n-//   }, [isListening]);\r\n-\r\n-//   // const handleCommandWithFuse = (command) => {\r\n-//   //   const fuse = new Fuse(commands, { keys: [\"utterance\"], threshold: 0.4 });\r\n-//   //   const results = fuse.search(command);\r\n-//   //   const foundCommand = results.length ? results[0].item : null;\r\n-\r\n-//   //   if (foundCommand) {\r\n-//   //     console.log(\"Command found:\", foundCommand.utterance);\r\n-//   //     speak(foundCommand.response);\r\n-//   //     if (foundCommand.route) {\r\n-//   //       navigate(foundCommand.route); // Navigate to the route specified in the command\r\n-//   //     }\r\n-//   //   } else {\r\n-//   //     console.log(\"No command found.\");\r\n-//   //     speak(\"I'm not sure how to respond to that.\");\r\n-//   //   }\r\n-//   // };\r\n-\r\n-//   const handleCommandWithFuse = (command) => {\r\n-//     const fuse = new Fuse(commands, { keys: [\"utterance\"], threshold: 0.4 });\r\n-//     const results = fuse.search(command);\r\n-//     const foundCommand = results.length ? results[0].item : null;\r\n-\r\n-//     if (foundCommand) {\r\n-//       console.log(\"Command found:\", foundCommand.utterance);\r\n-\r\n-//       if (foundCommand.action) {\r\n-//         foundCommand.action();\r\n-//       } else if (foundCommand.route) {\r\n-//         navigate(foundCommand.route);\r\n-//       }\r\n-\r\n-//       if (foundCommand.response) {\r\n-//         speak(foundCommand.response);\r\n-//       }\r\n-//     } else {\r\n-//       console.log(\"No command found.\");\r\n-//       speak(\"I'm not sure how to respond to that.\");\r\n-//     }\r\n-//   };\r\n-\r\n-//   const commands = [\r\n-//     {\r\n-//       utterance: \"Hello who are you ?\",\r\n-\r\n-//       response:\r\n-//         \"Hi! This is Brane! your Voice bot from Brane Education How can I Assist you Today ?\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"Hello\",\r\n-\r\n-//       response: \"Hi! How can I assist you today?\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"hello\",\r\n-\r\n-//       response: \"Hi! How can I assist you today?\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"Hi.\",\r\n-\r\n-//       response: \"Hello! How can I assist you today?\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"Hey there\",\r\n-\r\n-//       response: \"Hi! How can I assist you today?\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"Good morning Brane.\",\r\n-\r\n-//       response: \"Hey Hiii! Good morning  ! How can I help you?\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"Good afternoon Brane.\",\r\n-\r\n-//       response: \"Hey Hiii! Good after noon ! How can I help you?\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"Good evening Brane.\",\r\n-\r\n-//       response: \"Hey Hiii! Good evening ! How can I help you?\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"can you please take me to login page\",\r\n-//       route: \"/login\",\r\n-//       routeDescription: \"login page\",\r\n-//       response: \"Navigating to the login page.\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"go to login page\",\r\n-//       route: \"/login\",\r\n-//       routeDescription: \"login page\",\r\n-//       response: \"Navigating to the login page.\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"please take me to login page\",\r\n-//       route: \"/login\",\r\n-//       routeDescription: \"login page\",\r\n-//       response: \"Navigating to the login page.\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"Go to login page\",\r\n-//       route: \"/login\",\r\n-//       routeDescription: \"login page\",\r\n-//       response: \"Navigating to the login page.\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"open login page\",\r\n-//       route: \"/login\",\r\n-//       routeDescription: \"login page\",\r\n-//       response: \"Navigating to the login page.\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"can you please take me to signup page\",\r\n-//       route: \"/signup\",\r\n-//       routeDescription: \"signup page\",\r\n-//       response: \"Navigating to the signup page.\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"take me to signup page\",\r\n-//       route: \"/signup\",\r\n-//       routeDescription: \"signup page\",\r\n-//       response: \"Navigating to the signup page.\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"Go to signup page\",\r\n-//       route: \"/signup\",\r\n-//       routeDescription: \"signup page\",\r\n-//       response: \"Navigating to the signup page.\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"open signup page\",\r\n-//       route: \"/signup\",\r\n-//       routeDescription: \"signup page\",\r\n-//       response: \"Navigating to the signup page.\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"what are platform features\",\r\n-\r\n-//       response:\r\n-//         \"Dashboard, Dynamic time table, Learning Networks, Little Masters, Video Based Dictionary, General Search.\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"Features of platform\",\r\n-\r\n-//       response:\r\n-//         \"Dashboard, Dynamic time table, Learning Networks, Little Masters, Video Based Dictionary, General Search.\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"What does the platform offer\",\r\n-\r\n-//       response:\r\n-//         \"Dashboard, Dynamic time table, Learning Networks, Little Masters, Video Based Dictionary, General Search.\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"Say me the features of platform\",\r\n-\r\n-//       response:\r\n-//         \"Dashboard, Dynamic time table, Learning Networks, Little Masters, Video Based Dictionary, General Search.\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"Say me the services of platform\",\r\n-\r\n-//       response:\r\n-//         \"Dashboard, Dynamic time table, Learning Networks, Little Masters, Video Based Dictionary, General Search.\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"tell me the services offered by the platform\",\r\n-\r\n-//       response:\r\n-//         \"Dashboard, Dynamic time table, Learning Networks, Little Masters, Video Based Dictionary, General Search.\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"explain platform services\",\r\n-\r\n-//       response:\r\n-//         \"Dashboard, Dynamic time table, Learning Networks, Little Masters, Video Based Dictionary, General Search.\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"Give me the Parent voice of Julia Harris\",\r\n-\r\n-//       response:\r\n-//         \"Brane education has helped my son a lot in his studies. He improved a lot in his studies and is now able to score good marks in his exams\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"Play today's motivational video\",\r\n-\r\n-//       response: \"I am playing the video\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"Play today's video\",\r\n-\r\n-//       response: \"I am playing Motivational video\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"Leaders Voice\",\r\n-\r\n-//       response:\r\n-//         \"This Voice-interactive AI Platform is a game Changer. It revolutionizes education.\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"Curriculum Supported by Brane Education\",\r\n-\r\n-//       response:\r\n-//         \"we support multiple Boards let me say few Telangana State Board Andhra Pradesh Board Maharashtra Board Assam Board\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"Boards supported by the platform\",\r\n-\r\n-//       response:\r\n-//         \"we support multiple Boards let me say few Telangana State Board Andhra Pradesh Board Maharashtra Board Assam Board\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"Curriculum\",\r\n-\r\n-//       response:\r\n-//         \"we support multiple Boards let me say few Telangana State Board Andhra Pradesh Board Maharashtra Board Assam Board\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"Go to landing page\",\r\n-\r\n-//       response: \"Okay, I am taking you to the landing page.\",\r\n-\r\n-//       route: \"/childpage\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"take me to landing page\",\r\n-\r\n-//       response: \"Okay, I am taking you to the landing page.\",\r\n-\r\n-//       route: \"/childpage\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"move to landing page\",\r\n-\r\n-//       response: \"Okay, I am taking you to the landing page.\",\r\n-\r\n-//       route: \"/childpage\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"roll back to landing page\",\r\n-\r\n-//       response: \"Okay, I am taking you to the landing page.\",\r\n-\r\n-//       route: \"/childpage\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"move to landing page\",\r\n-\r\n-//       response: \"Okay, I am taking you to the landing page.\",\r\n-\r\n-//       route: \"/childpage\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"what is today's quote\",\r\n-\r\n-//       response:\r\n-//         \"Determination is the power that sees us through all our frustration and obstacles. It helps in building our willpower which is the very basis of success.\",\r\n-\r\n-//       // route: \"/childpage\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"Today's Inspirational quote\",\r\n-\r\n-//       response:\r\n-//         \"Determination is the power that sees us through all our frustration and obstacles. It helps in building our willpower which is the very basis of success.\",\r\n-\r\n-//       // route: \"/childpage\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"say me today's quote\",\r\n-\r\n-//       response:\r\n-//         \"Determination is the power that sees us through all our frustration and obstacles. It helps in building our willpower which is the very basis of success.\",\r\n-\r\n-//       // route: \"/childpage\",\r\n-//     },\r\n-//     {\r\n-//       utterance: \"go back\",\r\n-//       response: \"Going back.\",\r\n-//       action: goBack, // Note the use of an action property\r\n-//     },\r\n-//     {\r\n-//       utterance: \"go forward\",\r\n-//       response: \"Going forward.\",\r\n-//       action: goForward,\r\n-//     },\r\n-//     {\r\n-//       utterance: \"play video\",\r\n-//       // response: \"Playing video.\",\r\n-//       action: playVideo,\r\n-//     },\r\n-//     {\r\n-//       utterance: \"pause video\",\r\n-//       // response: \"Pausing video.\",\r\n-//       action: pauseVideo,\r\n-//     },\r\n-//     {\r\n-//       utterance: \"start video\",\r\n-//       // response: \"Playing video.\",\r\n-//       action: playVideo,\r\n-//     },\r\n-//     {\r\n-//       utterance: \"stop video\",\r\n-//       // response: \"Playing video.\",\r\n-//       action: pauseVideo,\r\n-//     },\r\n-//     {\r\n-//       utterance: \"scroll up\",\r\n-//       // response: \"Scrolling up.\",\r\n-//       action: scrollUp,\r\n-//     },\r\n-//     {\r\n-//       utterance: \"scroll down\",\r\n-//       // response: \"Scrolling down.\",\r\n-//       action: scrollDown,\r\n-//     },\r\n-//     {\r\n-//       utterance: \"go up\",\r\n-\r\n-//       // response: \"Scrolling up.\",\r\n-//       action: scrollUp,\r\n-//     },\r\n-//     {\r\n-//       utterance: \"go down\",\r\n-//       // response: \"Scrolling down.\",\r\n-//       action: scrollDown,\r\n-//     },\r\n-//     {\r\n-//       utterance: \"scroll to top\",\r\n-//       action: scrollToTop,\r\n-//     },\r\n-//     {\r\n-//       utterance: \"scroll to bottom\",\r\n-//       action: scrollToBottom,\r\n-//     },\r\n-//     {\r\n-//       utterance: \"go back\",\r\n-//       action: goBackRef?.current?.click, // Use goBackRef directly\r\n-//       response: \"Going back.\",\r\n-//     },\r\n-//     {\r\n-//       utterance: \"take test\",\r\n-//       action: takeTestRef?.current?.click, // Use takeTestRef directly\r\n-//       response: \"Starting the test.\",\r\n-//     },\r\n-//   ];\r\n-//   return (\r\n-//     <div className=\"speech-bot-container\">\r\n-//       <div\r\n-//         className={`button-container ${\r\n-//           isListening ? \"voicebotframeactive\" : \"voicebotframe\"\r\n-//         }`}\r\n-//       >\r\n-//         <div onClick={isListening ? stopListening : startListening}>\r\n-//           <iframe\r\n-//             src={\r\n-//               isListening\r\n-//                 ? \"https://lottie.host/?file=a89aca3f-5407-4052-82c3-2048afca7a9f/NpCdWzLSKD.json\"\r\n-//                 : \"https://lottie.host/?file=d2b6cc0e-fe95-4847-85b5-35365fca7e00/vTudpCuPZq.json\"\r\n-//             }\r\n-//             width=\"120\" // Set your desired width\r\n-//             height=\"120\" // Set your desired height\r\n-//             title={isListening ? \"Stop Animation\" : \"Start Animation\"}\r\n-//             className={isListening ? \"voicebotframeactive\" : \"voicebotframe\"}\r\n-//           ></iframe>\r\n-//           {isListening ? (\r\n-//             <div className=\"overlay\" onClick={stopListening}></div>\r\n-//           ) : (\r\n-//             <div className=\"overlay\" onClick={startListening}></div>\r\n-//           )}\r\n-//         </div>\r\n-//       </div>\r\n-//     </div>\r\n-//   );\r\n-// };\r\n-\r\n-// export default VoiceBot;\r\n"
                },
                {
                    "date": 1700650754073,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -3,9 +3,9 @@\n import Fuse from \"fuse.js\";\r\n import \"./VoiceBot.css\";\r\n import chatbotimage from \"../../assets/chatbotgif.gif\";\r\n \r\n-const VoiceBot = ({ videoRef, isMuted, setIsMuted }) => {\r\n+const VoiceBot = ({ videoRefs }) => {\r\n   const [isListening, setIsListening] = useState(false);\r\n   const [isSpeaking, setIsSpeaking] = useState(false);\r\n   const recognition = useRef(null);\r\n   const speechSynthesis = useRef(window.speechSynthesis);\r\n"
                },
                {
                    "date": 1700651344288,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -865,46 +865,46 @@\n     //   action: unmuteVideo,\r\n     // },\r\n     {\r\n       utterance: \"play transform education using ai video\",\r\n-      action: () => controlVideo('video1', 'play'),\r\n+      action: () => controlVideo('ourProjectsVideo', 'play'),\r\n     },\r\n     {\r\n       utterance: \"start transform education using ai video\",\r\n-      action: () => controlVideo('video1', 'play'),\r\n+      action: () => controlVideo('ourProjectsVideo', 'play'),\r\n     },\r\n     {\r\n       utterance: \"pause transform education using ai video\",\r\n-      action: () => controlVideo('video1', 'pause'),\r\n+      action: () => controlVideo('ourProjectsVideo', 'pause'),\r\n     },\r\n     {\r\n       utterance: \"stop transform education using ai video\",\r\n-      action: () => controlVideo('video1', 'pause'),\r\n+      action: () => controlVideo('ourProjectsVideo', 'pause'),\r\n     },\r\n \r\n     {\r\n       utterance: \"mute transform education using ai video\",\r\n-      action: () => controlVideo('video1', 'mute'),\r\n+      action: () => controlVideo('ourProjectsVideo', 'mute'),\r\n     },\r\n     {\r\n       utterance: \"unmute transform education using ai video\",\r\n-      action: () => controlVideo('video1', 'unmute'),\r\n+      action: () => controlVideo('ourProjectsVideo', 'unmute'),\r\n     },\r\n     {\r\n       utterance: \"fullscreen transform education using ai video\",\r\n-      action: () => controlVideo('video1', 'fullscreen'),\r\n+      action: () => controlVideo('ourProjectsVideo', 'fullscreen'),\r\n     },\r\n     {\r\n       utterance: \"exit fullscreen transform education using ai video\",\r\n-      action: () => controlVideo('video1', 'exitFullscreen'),\r\n+      action: () => controlVideo('ourProjectsVideo', 'exitFullscreen'),\r\n     },\r\n     {\r\n       utterance: \"increase volume transform education using ai video\",\r\n-      action: () => controlVideo('video1', 'increaseVolume'),\r\n+      action: () => controlVideo('ourProjectsVideo', 'increaseVolume'),\r\n     },\r\n     {\r\n       utterance: \"decrease volume transform education using ai video\",\r\n-      action: () => controlVideo('video1', 'decreaseVolume'),\r\n+      action: () => controlVideo('ourProjectsVideo', 'decreaseVolume'),\r\n     },\r\n   ];\r\n \r\n   return (\r\n"
                },
                {
                    "date": 1700651969112,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -226,9 +226,9 @@\n         // Add other cases as needed\r\n       }\r\n       speak(`${action.charAt(0).toUpperCase() + action.slice(1).replace(/([A-Z])/g, ' $1').toLowerCase()}ing video ${videoId}.`);\r\n     } else {\r\n-      speak(`Video ${videoId} not found.`);\r\n+      speak(`Video not found.`);\r\n     }\r\n   };\r\n \r\n   const speak = (message) => {\r\n"
                },
                {
                    "date": 1700651978877,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,3757 @@\n+import React, { useState, useEffect, useRef } from \"react\";\r\n+import { useNavigate, useLocation } from \"react-router-dom\";\r\n+import Fuse from \"fuse.js\";\r\n+import \"./VoiceBot.css\";\r\n+import chatbotimage from \"../../assets/chatbotgif.gif\";\r\n+\r\n+const VoiceBot = ({ videoRefs }) => {\r\n+  const [isListening, setIsListening] = useState(false);\r\n+  const [isSpeaking, setIsSpeaking] = useState(false);\r\n+  const recognition = useRef(null);\r\n+  const speechSynthesis = useRef(window.speechSynthesis);\r\n+  const [hasGreeted, setHasGreeted] = useState(false);\r\n+  const navigate = useNavigate();\r\n+\r\n+  // Initialize speech recognition\r\n+  useEffect(() => {\r\n+    recognition.current = new window.webkitSpeechRecognition();\r\n+    recognition.current.continuous = true;\r\n+    recognition.current.interimResults = false;\r\n+    recognition.current.onresult = onResult;\r\n+    recognition.current.onend = onRecognitionEnd;\r\n+    recognition.current.starting = false;\r\n+\r\n+    recognition.current.onerror = (event) => {\r\n+      console.error(\"Recognition error:\", event.error);\r\n+      if (isListening && !isSpeaking) {\r\n+        restartRecognition();\r\n+      }\r\n+    };\r\n+\r\n+    return () => {\r\n+      if (recognition.current) {\r\n+        recognition.current.abort();\r\n+      }\r\n+    };\r\n+  }, []);\r\n+\r\n+  useEffect(() => {\r\n+    const checkRecognition = () => {\r\n+      if (isListening && !isSpeaking && !recognition.current.starting) {\r\n+        console.log(\"Restarting recognition because it's not active.\");\r\n+        recognition.current.starting = true;\r\n+        recognition.current.start();\r\n+        console.log(\"Restarted recognition.\");\r\n+      }\r\n+    };\r\n+\r\n+    const recognitionCheckInterval = setInterval(checkRecognition, 500); // Check every .5 second\r\n+\r\n+    return () => {\r\n+      clearInterval(recognitionCheckInterval);\r\n+    };\r\n+  }, [isListening, isSpeaking]);\r\n+\r\n+  const historyStack = useRef([]);\r\n+\r\n+  useEffect(() => {\r\n+    return () => {\r\n+      // Clean up the listener when the component unmounts\r\n+      window.removeEventListener(\"popstate\", handlePopState);\r\n+    };\r\n+  }, []);\r\n+\r\n+  const handlePopState = () => {\r\n+    // This needs to handle both back and forward browser actions\r\n+    // Use some logic to determine whether it's a back or forward action\r\n+    // For simplicity, assume it's always back\r\n+    historyStack.current.pop();\r\n+    forwardStack.current.length = 0; // Clear forward stack on manual navigation\r\n+  };\r\n+\r\n+  // Add a new entry to the stack whenever navigate is called\r\n+  const customNavigate = (to, options) => {\r\n+    historyStack.current.push(to);\r\n+    navigate(to, options);\r\n+  };\r\n+\r\n+  // Listen to popstate events to update the history stack\r\n+  useEffect(() => {\r\n+    window.addEventListener(\"popstate\", handlePopState);\r\n+  }, []);\r\n+\r\n+  const forwardStack = useRef([]);\r\n+\r\n+  const goBack = () => {\r\n+    if (window.history.state && window.history.state.idx > 0) {\r\n+      window.history.back();\r\n+      speak(\"Going back\");\r\n+    } else {\r\n+      speak(\"Can't go back any further.\");\r\n+    }\r\n+  };\r\n+\r\n+  const goForward = () => {\r\n+    if (\r\n+      window.history.state &&\r\n+      window.history.state.idx < window.history.length - 1\r\n+    ) {\r\n+      window.history.forward();\r\n+      speak(\"Going forward\");\r\n+    } else {\r\n+      speak(\"No forward history available.\");\r\n+    }\r\n+  };\r\n+\r\n+  const playVideo = () => {\r\n+    if (videoRef.current) {\r\n+      videoRef.current.play();\r\n+      speak(\"Playing video.\");\r\n+    } else {\r\n+      speak(\"No video to play.\");\r\n+    }\r\n+  };\r\n+\r\n+  const pauseVideo = () => {\r\n+    if (videoRef.current) {\r\n+      videoRef.current.pause();\r\n+      speak(\"Video paused.\");\r\n+    } else {\r\n+      speak(\"No video to pause.\");\r\n+    }\r\n+  };\r\n+\r\n+  const scrollAmount = window.innerHeight * 0.82;\r\n+\r\n+  const scrollUp = () => {\r\n+    if (window.pageYOffset === 0) {\r\n+      speak(\"Already at the top of the page.\");\r\n+    } else {\r\n+      window.scrollBy(0, -scrollAmount);\r\n+      speak(\"Scrolled up.\");\r\n+    }\r\n+  };\r\n+\r\n+  const scrollDown = () => {\r\n+    const maxScrollTop =\r\n+      document.documentElement.scrollHeight - window.innerHeight;\r\n+    if (window.pageYOffset >= maxScrollTop) {\r\n+      speak(\"Already at the bottom of the page.\");\r\n+    } else {\r\n+      window.scrollBy(0, scrollAmount);\r\n+      speak(\"Scrolled down.\");\r\n+    }\r\n+  };\r\n+\r\n+  const scrollToTop = () => {\r\n+    if (window.pageYOffset === 0) {\r\n+      speak(\"Already at the top of the page.\");\r\n+    } else {\r\n+      window.scrollTo(0, 0);\r\n+      speak(\"Scrolled to the top of the page.\");\r\n+    }\r\n+  };\r\n+\r\n+  const scrollToBottom = () => {\r\n+    const maxScrollTop =\r\n+      document.documentElement.scrollHeight - window.innerHeight;\r\n+    if (window.pageYOffset >= maxScrollTop) {\r\n+      speak(\"Already at the bottom of the page.\");\r\n+    } else {\r\n+      window.scrollTo(0, document.body.scrollHeight);\r\n+      speak(\"Scrolled to the bottom of the page.\");\r\n+    }\r\n+  };\r\n+\r\n+  const muteVideo = () => {\r\n+    if (videoRef.current) {\r\n+      setIsMuted(true);\r\n+    } else {\r\n+      speak(\"No video to mute.\");\r\n+    }\r\n+  };\r\n+\r\n+  const unmuteVideo = () => {\r\n+    if (videoRef.current) {\r\n+      setIsMuted(false);\r\n+    } else {\r\n+      speak(\"No video to unmute.\");\r\n+    }\r\n+  };\r\n+\r\n+  const controlVideo = (videoId, action) => {\r\n+    const videoRef = videoRefs.current.get(videoId);\r\n+    if (videoRef && videoRef.current) {\r\n+      switch (action) {\r\n+        case 'play':\r\n+          videoRef.current.play();\r\n+          break;\r\n+        case 'pause':\r\n+          videoRef.current.pause();\r\n+          break;\r\n+        case 'mute':\r\n+          videoRef.current.muted = true;\r\n+          break;\r\n+        case 'unmute':\r\n+          videoRef.current.muted = false;\r\n+          break;\r\n+        case 'fullscreen':\r\n+          if (videoRef.current.requestFullscreen) {\r\n+            videoRef.current.requestFullscreen();\r\n+          } else if (videoRef.current.webkitRequestFullscreen) { // Safari\r\n+            videoRef.current.webkitRequestFullscreen();\r\n+          } else if (videoRef.current.msRequestFullscreen) { // IE11\r\n+            videoRef.current.msRequestFullscreen();\r\n+          }\r\n+          break;\r\n+        case 'exitFullscreen':\r\n+          if (document.exitFullscreen) {\r\n+            document.exitFullscreen();\r\n+          } else if (document.webkitExitFullscreen) { // Safari\r\n+            document.webkitExitFullscreen();\r\n+          } else if (document.msExitFullscreen) { // IE11\r\n+            document.msExitFullscreen();\r\n+          }\r\n+          break;\r\n+        case 'increaseVolume':\r\n+          if (videoRef.current.volume < 1) {\r\n+            videoRef.current.volume = Math.min(1, videoRef.current.volume + 0.1);\r\n+          }\r\n+          break;\r\n+        case 'decreaseVolume':\r\n+          if (videoRef.current.volume > 0) {\r\n+            videoRef.current.volume = Math.max(0, videoRef.current.volume - 0.1);\r\n+          }\r\n+          break;\r\n+        // Add other cases as needed\r\n+      }\r\n+      speak(`${action.charAt(0).toUpperCase() + action.slice(1).replace(/([A-Z])/g, ' $1').toLowerCase()}ing video.`);\r\n+    } else {\r\n+      speak(`Video not found.`);\r\n+    }\r\n+  };\r\n+\r\n+  const speak = (message) => {\r\n+    const utterance = new SpeechSynthesisUtterance(message);\r\n+    utterance.onend = () => {\r\n+      setIsSpeaking(false);\r\n+      // Restart recognition after speaking has ended\r\n+      if (isListening) {\r\n+        restartRecognition();\r\n+      }\r\n+    };\r\n+\r\n+    setIsSpeaking(true);\r\n+    // Stop recognition when the bot starts speaking\r\n+    if (recognition.current) {\r\n+      recognition.current.abort();\r\n+    }\r\n+    speechSynthesis.current.speak(utterance);\r\n+  };\r\n+\r\n+  const restartRecognition = () => {\r\n+    // Check if recognition is not already started and if the bot is set to listen\r\n+    if (\r\n+      recognition.current &&\r\n+      !recognition.current.starting &&\r\n+      isListening &&\r\n+      !isSpeaking\r\n+    ) {\r\n+      recognition.current.abort(); // Ensure any ongoing recognition is stopped\r\n+      recognition.current.starting = true;\r\n+      recognition.current.start();\r\n+    }\r\n+  };\r\n+\r\n+  // Restart recognition when bot finishes speaking and isListening is true\r\n+  useEffect(() => {\r\n+    if (!isSpeaking && isListening) {\r\n+      restartRecognition();\r\n+    }\r\n+  }, [isSpeaking, isListening]);\r\n+\r\n+  const onResult = (event) => {\r\n+    const resultIndex = event.resultIndex;\r\n+    const transcript = event.results[resultIndex][0].transcript\r\n+      .trim()\r\n+      .toLowerCase();\r\n+\r\n+    if (event.results[resultIndex].isFinal) {\r\n+      console.log(`Recognized text: ${transcript}`);\r\n+      if (transcript.includes(\"brain\")) {\r\n+        console.log(\"Wake word heard, processing command...\");\r\n+        handleCommandWithFuse(transcript.replace(\"brain\", \"\"));\r\n+      }\r\n+    }\r\n+  };\r\n+\r\n+  const onRecognitionEnd = () => {\r\n+    recognition.current.starting = false;\r\n+    if (isListening && !isSpeaking) {\r\n+      restartRecognition();\r\n+    }\r\n+  };\r\n+\r\n+  useEffect(() => {\r\n+    if (isListening && !hasGreeted) {\r\n+      speak(\"Hello, I'm Brane. How can I help you today?\");\r\n+      setHasGreeted(true);\r\n+    }\r\n+  }, [isListening, hasGreeted]);\r\n+\r\n+  // Updated startListening function\r\n+  const startListening = () => {\r\n+    setIsListening(true);\r\n+    if (!recognition.current.starting) {\r\n+      restartRecognition();\r\n+    }\r\n+  };\r\n+\r\n+  // Updated stopListening function\r\n+  const stopListening = () => {\r\n+    setIsListening(false);\r\n+    if (speechSynthesis.current.speaking) {\r\n+      speechSynthesis.current.cancel();\r\n+    }\r\n+    recognition.current.abort();\r\n+  };\r\n+\r\n+  const handleCommandWithFuse = (command) => {\r\n+    const fuse = new Fuse(commands, { keys: [\"utterance\"], threshold: 0.4 });\r\n+    const results = fuse.search(command);\r\n+    const foundCommand = results.length ? results[0].item : null;\r\n+\r\n+    if (foundCommand) {\r\n+      console.log(\"Command found:\", foundCommand.utterance);\r\n+\r\n+      if (foundCommand.action) {\r\n+        foundCommand.action();\r\n+      } else if (foundCommand.route) {\r\n+        navigate(foundCommand.route);\r\n+      }\r\n+\r\n+      // Speak after performing the action or navigation\r\n+      speak(foundCommand.response);\r\n+    } else {\r\n+      console.log(\"No command found.\");\r\n+      speak(\"I'm not sure how to respond to that.\");\r\n+    }\r\n+  };\r\n+\r\n+  const commands = [\r\n+    {\r\n+      utterance: \"Hello who are you ?\",\r\n+\r\n+      response:\r\n+        \"Hi! This is Brane! your Voice bot from Brane Education How can I Assist you Today ?\",\r\n+    },\r\n+\r\n+    {\r\n+      utterance: \"Hello\",\r\n+\r\n+      response: \"Hi! How can I assist you today?\",\r\n+    },\r\n+\r\n+    {\r\n+      utterance: \"hello\",\r\n+\r\n+      response: \"Hi! How can I assist you today?\",\r\n+    },\r\n+\r\n+    {\r\n+      utterance: \"Hi.\",\r\n+\r\n+      response: \"Hello! How can I assist you today?\",\r\n+    },\r\n+\r\n+    {\r\n+      utterance: \"Hey there\",\r\n+\r\n+      response: \"Hi! How can I assist you today?\",\r\n+    },\r\n+\r\n+    {\r\n+      utterance: \"Good morning Brane.\",\r\n+\r\n+      response: \"Hey Hiii! Good morning  ! How can I help you?\",\r\n+    },\r\n+\r\n+    {\r\n+      utterance: \"Good afternoon Brane.\",\r\n+\r\n+      response: \"Hey Hiii! Good after noon ! How can I help you?\",\r\n+    },\r\n+\r\n+    {\r\n+      utterance: \"Good evening Brane.\",\r\n+\r\n+      response: \"Hey Hiii! Good evening ! How can I help you?\",\r\n+    },\r\n+\r\n+    {\r\n+      utterance: \"take me to homepage\",\r\n+\r\n+      route: \"/\",\r\n+\r\n+      response: \"You're in Homepage now\",\r\n+    },\r\n+    {\r\n+      utterance: \"open homepage\",\r\n+\r\n+      route: \"/\",\r\n+\r\n+      response: \"You're in Homepage now\",\r\n+    },\r\n+    {\r\n+      utterance: \"go to homepage\",\r\n+\r\n+      route: \"/\",\r\n+\r\n+      response: \"You're in Homepage now\",\r\n+    },\r\n+    {\r\n+      utterance: \"go back to homepage\",\r\n+\r\n+      route: \"/\",\r\n+\r\n+      response: \"You're in Homepage now\",\r\n+    },\r\n+    {\r\n+      utterance: \"can you please take me to login page\",\r\n+\r\n+      route: \"/login\",\r\n+\r\n+      response: \"Here's the Login Page, Please Login\",\r\n+    },\r\n+\r\n+    {\r\n+      utterance: \"please take me to login page\",\r\n+\r\n+      route: \"/login\",\r\n+\r\n+      response: \"Here's the Login Page, Please Login\",\r\n+    },\r\n+\r\n+    {\r\n+      utterance: \"Go to login page\",\r\n+\r\n+      route: \"/login\",\r\n+\r\n+      response: \"Here's the Login Page, Please Login\",\r\n+    },\r\n+\r\n+    {\r\n+      utterance: \"open login page\",\r\n+\r\n+      route: \"/login\",\r\n+\r\n+      response: \"Here's the Login Page, Please Login\",\r\n+    },\r\n+\r\n+    {\r\n+      utterance: \"can you please take me to signup page\",\r\n+\r\n+      route: \"/signup\",\r\n+\r\n+      response: \"Here's the signup page. Please proceed With Registration.\",\r\n+    },\r\n+\r\n+    {\r\n+      utterance: \"take me to signup page\",\r\n+\r\n+      route: \"/signup\",\r\n+\r\n+      response: \"Here's the signup page. Please proceed With Registration.\",\r\n+    },\r\n+\r\n+    {\r\n+      utterance: \"Go to signup page\",\r\n+\r\n+      route: \"/signup\",\r\n+\r\n+      response: \"Here's the signup page. Please proceed With Registration.\",\r\n+    },\r\n+\r\n+    {\r\n+      utterance: \"open signup page\",\r\n+\r\n+      route: \"/signup\",\r\n+\r\n+      response: \"Here's the signup page. Please proceed With Registration.\",\r\n+    },\r\n+\r\n+    {\r\n+      utterance: \"Go to face id\",\r\n+\r\n+      route: \"/login/faceid\",\r\n+\r\n+      response: \"Here's Face ID Login. Please proceed.\",\r\n+    },\r\n+\r\n+    {\r\n+      utterance: \"Go to face id login\",\r\n+\r\n+      route: \"/login/faceid\",\r\n+\r\n+      response: \"Here's Face ID Login. Please proceed.\",\r\n+    },\r\n+    {\r\n+      utterance: \"Go to face login\",\r\n+\r\n+      route: \"/login/faceid\",\r\n+\r\n+      response: \"Here's Face ID Login. Please proceed.\",\r\n+    },\r\n+\r\n+    {\r\n+      utterance: \"login with face id\",\r\n+\r\n+      route: \"/login/faceid\",\r\n+\r\n+      response: \"Here's Face ID Login. Please proceed.\",\r\n+    },\r\n+\r\n+    {\r\n+      utterance: \"login with face\",\r\n+\r\n+      route: \"/login/faceid\",\r\n+\r\n+      response: \"Here's Face ID Login. Please proceed.\",\r\n+    },\r\n+\r\n+    {\r\n+      utterance: \"i want to login with face\",\r\n+\r\n+      route: \"/login/faceid\",\r\n+\r\n+      response: \"Here's Face ID Login. Please proceed.\",\r\n+    },\r\n+\r\n+    {\r\n+      utterance: \"login with voice\",\r\n+\r\n+      route: \"/login/voiceid\",\r\n+\r\n+      response: \"Here's Voice Login. Please proceed.\",\r\n+    },\r\n+\r\n+    {\r\n+      utterance: \"i want to login with voice\",\r\n+\r\n+      route: \"/login/voiceid\",\r\n+\r\n+      response: \"Here's Voice Login. Please proceed.\",\r\n+    },\r\n+\r\n+    {\r\n+      utterance: \"go to voice login\",\r\n+\r\n+      route: \"/login/voiceid\",\r\n+\r\n+      response: \"Here's Voice Login. Please proceed.\",\r\n+    },\r\n+\r\n+    {\r\n+      utterance: \"login with voice\",\r\n+\r\n+      route: \"/login/voiceid\",\r\n+\r\n+      response: \"Here's Voice Login. Please proceed.\",\r\n+    },\r\n+\r\n+    {\r\n+      utterance: \"login with mobile\",\r\n+\r\n+      route: \"/login/mobile\",\r\n+\r\n+      response: \"Here's Mobile Login. Please proceed.\",\r\n+    },\r\n+\r\n+    {\r\n+      utterance: \"i want to login with mobile\",\r\n+\r\n+      route: \"/login/mobile\",\r\n+\r\n+      response: \"Here's Mobile Login. Please proceed.\",\r\n+    },\r\n+    {\r\n+      utterance: \"go to mobile login\",\r\n+\r\n+      route: \"/login/mobile\",\r\n+\r\n+      response: \"Here's Mobile Login. Please proceed.\",\r\n+    },\r\n+    {\r\n+      utterance: \"go to about page\",\r\n+\r\n+      route: \"/aboutus\",\r\n+\r\n+      response: \"This is About us.\",\r\n+    },\r\n+    {\r\n+      utterance: \"go to about us page\",\r\n+\r\n+      route: \"/aboutus\",\r\n+\r\n+      response: \"This is About us.\",\r\n+    },\r\n+    {\r\n+      utterance: \"open about us page\",\r\n+\r\n+      route: \"/aboutus\",\r\n+\r\n+      response: \"This is About us.\",\r\n+    },\r\n+    {\r\n+      utterance: \"open about page\",\r\n+\r\n+      route: \"/aboutus\",\r\n+\r\n+      response: \"This is About us.\",\r\n+    },\r\n+    {\r\n+      utterance: \"take me to about page\",\r\n+\r\n+      route: \"/aboutus\",\r\n+\r\n+      response: \"This is About us.\",\r\n+    },\r\n+    {\r\n+      utterance: \"take me to about us page\",\r\n+\r\n+      route: \"/aboutus\",\r\n+\r\n+      response: \"This is About us.\",\r\n+    },\r\n+\r\n+    {\r\n+      utterance: \"go to contact page\",\r\n+\r\n+      route: \"/contactus\",\r\n+\r\n+      response: \"You can contact us from here\",\r\n+    },\r\n+    {\r\n+      utterance: \"go to contact us page\",\r\n+\r\n+      route: \"/contactus\",\r\n+\r\n+      response: \"You can contact us from here\",\r\n+    },\r\n+    {\r\n+      utterance: \"open contact us page\",\r\n+\r\n+      route: \"/contactus\",\r\n+\r\n+      response: \"You can contact us from here\",\r\n+    },\r\n+    {\r\n+      utterance: \"open contact page\",\r\n+\r\n+      route: \"/contactus\",\r\n+\r\n+      response: \"You can contact us from here\",\r\n+    },\r\n+    {\r\n+      utterance: \"take me to about page\",\r\n+\r\n+      route: \"/contactus\",\r\n+\r\n+      response: \"You can contact us from here\",\r\n+    },\r\n+    {\r\n+      utterance: \"take me to contact us page\",\r\n+\r\n+      route: \"/contactus\",\r\n+\r\n+      response: \"You can contact us from here\",\r\n+    },\r\n+\r\n+    {\r\n+      utterance: \"what are platform features\",\r\n+\r\n+      response:\r\n+        \"Dashboard, Dynamic time table, Learning Networks, Little Masters, Video Based Dictionary, General Search.\",\r\n+    },\r\n+\r\n+    {\r\n+      utterance: \"Features of platform\",\r\n+\r\n+      response:\r\n+        \"Dashboard, Dynamic time table, Learning Networks, Little Masters, Video Based Dictionary, General Search.\",\r\n+    },\r\n+\r\n+    {\r\n+      utterance: \"What does the platform offer\",\r\n+\r\n+      response:\r\n+        \"Dashboard, Dynamic time table, Learning Networks, Little Masters, Video Based Dictionary, General Search.\",\r\n+    },\r\n+\r\n+    {\r\n+      utterance: \"Say me the features of platform\",\r\n+\r\n+      response:\r\n+        \"Dashboard, Dynamic time table, Learning Networks, Little Masters, Video Based Dictionary, General Search.\",\r\n+    },\r\n+\r\n+    {\r\n+      utterance: \"Say me the services of platform\",\r\n+\r\n+      response:\r\n+        \"Dashboard, Dynamic time table, Learning Networks, Little Masters, Video Based Dictionary, General Search.\",\r\n+    },\r\n+\r\n+    {\r\n+      utterance: \"tell me the services offered by the platform\",\r\n+\r\n+      response:\r\n+        \"Dashboard, Dynamic time table, Learning Networks, Little Masters, Video Based Dictionary, General Search.\",\r\n+    },\r\n+\r\n+    {\r\n+      utterance: \"explain platform services\",\r\n+\r\n+      response:\r\n+        \"Dashboard, Dynamic time table, Learning Networks, Little Masters, Video Based Dictionary, General Search.\",\r\n+    },\r\n+\r\n+    {\r\n+      utterance: \"Give me the Parent voice of Julia Harris\",\r\n+\r\n+      response:\r\n+        \"Brane education has helped my son a lot in his studies. He improved a lot in his studies and is now able to score good marks in his exams\",\r\n+    },\r\n+\r\n+    {\r\n+      utterance: \"Leaders Voice\",\r\n+\r\n+      response:\r\n+        \"This Voice-interactive AI Platform is a game Changer. It revolutionizes education.\",\r\n+    },\r\n+\r\n+    {\r\n+      utterance: \"Curriculum Supported by Brane Education\",\r\n+\r\n+      response:\r\n+        \"we support multiple Boards let me say few Telangana State Board Andhra Pradesh Board Maharashtra Board Assam Board\",\r\n+    },\r\n+\r\n+    {\r\n+      utterance: \"Boards supported by the platform\",\r\n+\r\n+      response:\r\n+        \"we support multiple Boards let me say few Telangana State Board Andhra Pradesh Board Maharashtra Board Assam Board\",\r\n+    },\r\n+\r\n+    {\r\n+      utterance: \"Curriculum\",\r\n+\r\n+      response:\r\n+        \"we support multiple Boards let me say few Telangana State Board Andhra Pradesh Board Maharashtra Board Assam Board\",\r\n+    },\r\n+\r\n+    {\r\n+      utterance: \"what is today's quote\",\r\n+\r\n+      response:\r\n+        \"Determination is the power that sees us through all our frustration and obstacles. It helps in building our willpower which is the very basis of success.\",\r\n+\r\n+      route: \"/childpage\",\r\n+    },\r\n+\r\n+    {\r\n+      utterance: \"Today's Inspirational quote\",\r\n+\r\n+      response:\r\n+        \"Determination is the power that sees us through all our frustration and obstacles. It helps in building our willpower which is the very basis of success.\",\r\n+\r\n+      route: \"/childpage\",\r\n+    },\r\n+\r\n+    {\r\n+      utterance: \"say me today's quote\",\r\n+\r\n+      response:\r\n+        \"Determination is the power that sees us through all our frustration and obstacles. It helps in building our willpower which is the very basis of success.\",\r\n+\r\n+      route: \"/childpage\",\r\n+    },\r\n+    {\r\n+      utterance: \"go back\",\r\n+      response: \"\",\r\n+      action: goBack, // Note the use of an action property\r\n+    },\r\n+    {\r\n+      utterance: \"go forward\",\r\n+      response: \"\",\r\n+      action: goForward,\r\n+    },\r\n+    // {\r\n+    //   utterance: \"play video\",\r\n+    //   // response: \"Playing video.\",\r\n+    //   action: playVideo,\r\n+    // },\r\n+    // {\r\n+    //   utterance: \"pause video\",\r\n+    //   // response: \"Pausing video.\",\r\n+    //   action: pauseVideo,\r\n+    // },\r\n+    // {\r\n+    //   utterance: \"start video\",\r\n+    //   // response: \"Playing video.\",\r\n+    //   action: playVideo,\r\n+    // },\r\n+    // {\r\n+    //   utterance: \"stop video\",\r\n+    //   // response: \"Playing video.\",\r\n+    //   action: pauseVideo,\r\n+    // },\r\n+    {\r\n+      utterance: \"scroll up\",\r\n+      // response: \"Scrolling up.\",\r\n+      action: scrollUp,\r\n+    },\r\n+    {\r\n+      utterance: \"scroll down\",\r\n+      // response: \"Scrolling down.\",\r\n+      action: scrollDown,\r\n+    },\r\n+    {\r\n+      utterance: \"go up\",\r\n+\r\n+      // response: \"Scrolling up.\",\r\n+      action: scrollUp,\r\n+    },\r\n+    {\r\n+      utterance: \"go down\",\r\n+      // response: \"Scrolling down.\",\r\n+      action: scrollDown,\r\n+    },\r\n+    {\r\n+      utterance: \"scroll to top\",\r\n+      action: scrollToTop,\r\n+    },\r\n+    {\r\n+      utterance: \"scroll to bottom\",\r\n+      action: scrollToBottom,\r\n+    },\r\n+    {\r\n+      utterance: \"brane stop\",\r\n+      action: stopListening,\r\n+    },\r\n+    {\r\n+      utterance: \"brane turn off\",\r\n+      action: stopListening,\r\n+    },\r\n+    {\r\n+      utterance: \"brane stop the bot\",\r\n+      action: stopListening,\r\n+    },\r\n+    // {\r\n+    //   utterance: \"mute the video\",\r\n+    //   action: muteVideo,\r\n+    // },\r\n+    // {\r\n+    //   utterance: \"unmute the video\",\r\n+    //   action: unmuteVideo,\r\n+    // },\r\n+    // {\r\n+    //   utterance: \"stop the video sound\",\r\n+    //   action: muteVideo,\r\n+    // },\r\n+    // {\r\n+    //   utterance: \"play the video sound\",\r\n+    //   action: unmuteVideo,\r\n+    // },\r\n+    {\r\n+      utterance: \"play transform education using ai video\",\r\n+      action: () => controlVideo('ourProjectsVideo', 'play'),\r\n+    },\r\n+    {\r\n+      utterance: \"start transform education using ai video\",\r\n+      action: () => controlVideo('ourProjectsVideo', 'play'),\r\n+    },\r\n+    {\r\n+      utterance: \"pause transform education using ai video\",\r\n+      action: () => controlVideo('ourProjectsVideo', 'pause'),\r\n+    },\r\n+    {\r\n+      utterance: \"stop transform education using ai video\",\r\n+      action: () => controlVideo('ourProjectsVideo', 'pause'),\r\n+    },\r\n+\r\n+    {\r\n+      utterance: \"mute transform education using ai video\",\r\n+      action: () => controlVideo('ourProjectsVideo', 'mute'),\r\n+    },\r\n+    {\r\n+      utterance: \"unmute transform education using ai video\",\r\n+      action: () => controlVideo('ourProjectsVideo', 'unmute'),\r\n+    },\r\n+    {\r\n+      utterance: \"fullscreen transform education using ai video\",\r\n+      action: () => controlVideo('ourProjectsVideo', 'fullscreen'),\r\n+    },\r\n+    {\r\n+      utterance: \"exit fullscreen transform education using ai video\",\r\n+      action: () => controlVideo('ourProjectsVideo', 'exitFullscreen'),\r\n+    },\r\n+    {\r\n+      utterance: \"increase volume transform education using ai video\",\r\n+      action: () => controlVideo('ourProjectsVideo', 'increaseVolume'),\r\n+    },\r\n+    {\r\n+      utterance: \"decrease volume transform education using ai video\",\r\n+      action: () => controlVideo('ourProjectsVideo', 'decreaseVolume'),\r\n+    },\r\n+  ];\r\n+\r\n+  return (\r\n+    <div className=\"speech-bot-container\">\r\n+      <div\r\n+        className={`button-container ${\r\n+          isListening ? \"voicebotframeactive\" : \"voicebotframe\"\r\n+        }`}\r\n+      >\r\n+        {/* <button onClick={isListening ? stopListening : startListening}>\r\n+          {isListening ? \"Stop\" : \"Start\"} Animation\r\n+        </button> */}\r\n+        <img\r\n+          className=\"botimage\"\r\n+          src={chatbotimage}\r\n+          alt=\"\"\r\n+          onClick={isListening ? stopListening : startListening}\r\n+        />\r\n+      </div>\r\n+    </div>\r\n+  );\r\n+};\r\n+\r\n+export default VoiceBot;\r\n+\r\n+{\r\n+  /* // import React, { useState, useEffect, useRef } from \"react\";\r\n+// import { useNavigate, useLocation } from \"react-router-dom\";\r\n+// import Fuse from \"fuse.js\";\r\n+// import \"./VoiceBot.css\";\r\n+\r\n+// const VoiceBot = ({ videoRef }) => {\r\n+//   const [isListening, setIsListening] = useState(false);\r\n+//   const [isSpeaking, setIsSpeaking] = useState(false);\r\n+//   const recognition = useRef(null);\r\n+//   const speechSynthesis = useRef(window.speechSynthesis);\r\n+//   const [hasGreeted, setHasGreeted] = useState(false);\r\n+//   const navigate = useNavigate();\r\n+\r\n+//   useEffect(() => {\r\n+//     recognition.current = new window.webkitSpeechRecognition();\r\n+//     recognition.current.continuous = true;\r\n+//     recognition.current.interimResults = false;\r\n+//     recognition.current.onresult = onResult;\r\n+//     recognition.current.onend = onRecognitionEnd;\r\n+//     recognition.current.starting = false;\r\n+\r\n+//     // Simplified error handling, removed specific handling for 'no-speech'\r\n+//     recognition.current.onerror = (event) => {\r\n+//       console.error(\"Recognition error:\", event.error);\r\n+//       // Check if listening is true and the bot isn't speaking\r\n+//       if (isListening && !isSpeaking) {\r\n+//         // Restart recognition\r\n+//         restartRecognition();\r\n+//       }\r\n+//     };\r\n+\r\n+//     return () => {\r\n+//       if (recognition.current) {\r\n+//         recognition.current.abort();\r\n+//       }\r\n+//     };\r\n+//   }, []);\r\n+\r\n+//   useEffect(() => {\r\n+//     const checkRecognition = () => {\r\n+//       if (isListening && !isSpeaking && !recognition.current.starting) {\r\n+//         console.log(\"Restarting recognition because it's not active.\");\r\n+//         recognition.current.starting = true;\r\n+//         recognition.current.start();\r\n+//         console.log(\"Restarted recognition.\");\r\n+//       }\r\n+//     };\r\n+\r\n+//     const recognitionCheckInterval = setInterval(checkRecognition, 100); // Check every 1 second\r\n+\r\n+//     return () => {\r\n+//       clearInterval(recognitionCheckInterval);\r\n+//     };\r\n+//   }, [isListening, isSpeaking]);\r\n+\r\n+//   const restartRecognition = () => {\r\n+//     if (recognition.current.starting) {\r\n+//       console.log(\"Recognition is already starting or running.\");\r\n+//       return;\r\n+//     }\r\n+\r\n+//     recognition.current.abort(); // Stop any existing recognition process\r\n+//     recognition.current.starting = true;\r\n+//     recognition.current.start();\r\n+//     console.log(\"Recognition restarted.\");\r\n+//   };\r\n+\r\n+//   const historyStack = useRef([]);\r\n+\r\n+//   useEffect(() => {\r\n+//     return () => {\r\n+//       // Clean up the listener when the component unmounts\r\n+//       window.removeEventListener(\"popstate\", handlePopState);\r\n+//     };\r\n+//   }, []);\r\n+\r\n+//   const handlePopState = () => {\r\n+//     // This needs to handle both back and forward browser actions\r\n+//     // Use some logic to determine whether it's a back or forward action\r\n+//     // For simplicity, assume it's always back\r\n+//     historyStack.current.pop();\r\n+//     forwardStack.current.length = 0; // Clear forward stack on manual navigation\r\n+//   };\r\n+  \r\n+\r\n+//   // Add a new entry to the stack whenever navigate is called\r\n+//   const customNavigate = (to, options) => {\r\n+//     historyStack.current.push(to);\r\n+//     navigate(to, options);\r\n+//   };\r\n+\r\n+//   // Listen to popstate events to update the history stack\r\n+//   useEffect(() => {\r\n+//     window.addEventListener(\"popstate\", handlePopState);\r\n+//   }, []);\r\n+\r\n+//   const forwardStack = useRef([]);\r\n+\r\n+//   const goBack = () => {\r\n+//     if (window.history.state && window.history.state.idx > 0) {\r\n+//       window.history.back();\r\n+//       speak(\"Going back\");\r\n+//     } else {\r\n+//       speak(\"Can't go back any further.\");\r\n+//     }\r\n+//   };\r\n+\r\n+//   const goForward = () => {\r\n+//     if (window.history.state && window.history.state.idx < window.history.length - 1) {\r\n+//       window.history.forward();\r\n+//       speak(\"Going forward\");\r\n+//     } else {\r\n+//       speak(\"No forward history available.\");\r\n+//     }\r\n+//   };\r\n+\r\n+//   const playVideo = () => {\r\n+//     if (videoRef.current) {\r\n+//       videoRef.current.play();\r\n+//       speak(\"Playing video.\");\r\n+//     } else {\r\n+//       speak(\"No video to play.\");\r\n+//     }\r\n+//   };\r\n+\r\n+//   const pauseVideo = () => {\r\n+//     if (videoRef.current) {\r\n+//       videoRef.current.pause();\r\n+//       speak(\"Video paused.\");\r\n+//     } else {\r\n+//       speak(\"No video to pause.\");\r\n+//     }\r\n+//   };\r\n+\r\n+//   const scrollAmount = window.innerHeight * 0.82;\r\n+\r\n+//   const scrollUp = () => {\r\n+//     if (window.pageYOffset === 0) {\r\n+//       speak(\"Already at the top of the page.\");\r\n+//     } else {\r\n+//       window.scrollBy(0, -scrollAmount);\r\n+//       speak(\"Scrolled up.\");\r\n+//     }\r\n+//   };\r\n+\r\n+//   const scrollDown = () => {\r\n+//     const maxScrollTop =\r\n+//       document.documentElement.scrollHeight - window.innerHeight;\r\n+//     if (window.pageYOffset >= maxScrollTop) {\r\n+//       speak(\"Already at the bottom of the page.\");\r\n+//     } else {\r\n+//       window.scrollBy(0, scrollAmount);\r\n+//       speak(\"Scrolled down.\");\r\n+//     }\r\n+//   };\r\n+\r\n+//   const scrollToTop = () => {\r\n+//     if (window.pageYOffset === 0) {\r\n+//       speak(\"Already at the top of the page.\");\r\n+//     } else {\r\n+//       window.scrollTo(0, 0);\r\n+//       speak(\"Scrolled to the top of the page.\");\r\n+//     }\r\n+//   };\r\n+\r\n+//   const scrollToBottom = () => {\r\n+//     const maxScrollTop =\r\n+//       document.documentElement.scrollHeight - window.innerHeight;\r\n+//     if (window.pageYOffset >= maxScrollTop) {\r\n+//       speak(\"Already at the bottom of the page.\");\r\n+//     } else {\r\n+//       window.scrollTo(0, document.body.scrollHeight);\r\n+//       speak(\"Scrolled to the bottom of the page.\");\r\n+//     }\r\n+//   };\r\n+\r\n+//   const speak = (message) => {\r\n+//     console.log(\"speak function called with message:\", message);\r\n+//     const utterance = new SpeechSynthesisUtterance(message);\r\n+//     utterance.onend = () => {\r\n+//       setIsSpeaking(false);\r\n+//       console.log(\"Speaking ended.\");\r\n+//       if (isListening && !recognition.current.starting) {\r\n+//         console.log(\"Restarting recognition after speaking.\");\r\n+//         recognition.current.starting = true;\r\n+//         recognition.current.start();\r\n+//         console.log(\"Restarted recognition after speaking.\");\r\n+//       }\r\n+//     };\r\n+\r\n+//     setIsSpeaking(true);\r\n+//     console.log(\"Speaking started.\");\r\n+//     recognition.current.stop(); // Ensure to stop recognition before speaking\r\n+//     speechSynthesis.current.speak(utterance);\r\n+//   };\r\n+\r\n+//   const onResult = (event) => {\r\n+//     const resultIndex = event.resultIndex;\r\n+//     const transcript = event.results[resultIndex][0].transcript\r\n+//       .trim()\r\n+//       .toLowerCase();\r\n+\r\n+//     if (event.results[resultIndex].isFinal) {\r\n+//       console.log(`Recognized text: ${transcript}`);\r\n+//       if (transcript.includes(\"brain\")) {\r\n+//         console.log(\"Wake word heard, processing command...\");\r\n+//         handleCommandWithFuse(transcript.replace(\"brain\", \"\"));\r\n+//       }\r\n+//     }\r\n+//   };\r\n+\r\n+//   const onRecognitionEnd = () => {\r\n+//     recognition.current.starting = false;\r\n+//     if (isListening && !isSpeaking) {\r\n+//       restartRecognition();\r\n+//     }\r\n+//   };\r\n+\r\n+//   useEffect(() => {\r\n+//     if (isListening) {\r\n+//       if (!hasGreeted) {\r\n+//         speak(\"Hello, I'm Brane. How can I help you today?\");\r\n+//         setHasGreeted(true);\r\n+//       } else {\r\n+//         speak(\"Listening.\");\r\n+//       }\r\n+//     }\r\n+//   }, [isListening, hasGreeted]);\r\n+\r\n+\r\n+//   const startListening = () => {\r\n+//     if (!recognition.current.starting) {\r\n+//       setIsListening(true);\r\n+//       restartRecognition();\r\n+//     }\r\n+//   };\r\n+\r\n+//   const stopListening = () => {\r\n+//     setIsListening(false);\r\n+//     recognition.current.abort();\r\n+//     if (speechSynthesis.current.speaking) {\r\n+//       speechSynthesis.current.cancel();\r\n+//     }\r\n+//   };\r\n+\r\n+//   const handleCommandWithFuse = (command) => {\r\n+//     const fuse = new Fuse(commands, { keys: [\"utterance\"], threshold: 0.4 });\r\n+//     const results = fuse.search(command);\r\n+//     const foundCommand = results.length ? results[0].item : null;\r\n+\r\n+//     if (foundCommand) {\r\n+//       console.log(\"Command found:\", foundCommand.utterance);\r\n+\r\n+//       if (foundCommand.action) {\r\n+//         foundCommand.action();\r\n+//       } else if (foundCommand.route) {\r\n+//         navigate(foundCommand.route);\r\n+//       }\r\n+\r\n+//       // Speak after performing the action or navigation\r\n+//       speak(foundCommand.response);\r\n+//     } else {\r\n+//       console.log(\"No command found.\");\r\n+//       speak(\"I'm not sure how to respond to that.\");\r\n+//     }\r\n+//   };\r\n+\r\n+//   const commands = [\r\n+//     {\r\n+//       utterance: \"Hello who are you ?\",\r\n+\r\n+//       response:\r\n+//         \"Hi! This is Brane! your Voice bot from Brane Education How can I Assist you Today ?\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"Hello\",\r\n+\r\n+//       response: \"Hi! How can I assist you today?\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"hello\",\r\n+\r\n+//       response: \"Hi! How can I assist you today?\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"Hi.\",\r\n+\r\n+//       response: \"Hello! How can I assist you today?\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"Hey there\",\r\n+\r\n+//       response: \"Hi! How can I assist you today?\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"Good morning Brane.\",\r\n+\r\n+//       response: \"Hey Hiii! Good morning  ! How can I help you?\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"Good afternoon Brane.\",\r\n+\r\n+//       response: \"Hey Hiii! Good after noon ! How can I help you?\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"Good evening Brane.\",\r\n+\r\n+//       response: \"Hey Hiii! Good evening ! How can I help you?\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"can you please take me to login page\",\r\n+\r\n+//       route: \"/login\",\r\n+\r\n+//       response: \"Here's the Login Page, Please Login\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"please take me to login page\",\r\n+\r\n+//       route: \"/login\",\r\n+\r\n+//       response: \"Here's the Login Page, Please Login\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"Go to login page\",\r\n+\r\n+//       route: \"/login\",\r\n+\r\n+//       response: \"Here's the Login Page, Please Login\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"open login page\",\r\n+\r\n+//       route: \"/login\",\r\n+\r\n+//       response: \"Here's the Login Page, Please Login\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"can you please take me to signup page\",\r\n+\r\n+//       route: \"/signup\",\r\n+\r\n+//       response: \"Here's the signup page. Please proceed With Registration.\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"take me to signup page\",\r\n+\r\n+//       route: \"/signup\",\r\n+\r\n+//       response: \"Here's the signup page. Please proceed With Registration.\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"Go to signup page\",\r\n+\r\n+//       route: \"/signup\",\r\n+\r\n+//       response: \"Here's the signup page. Please proceed With Registration.\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"open signup page\",\r\n+\r\n+//       route: \"/signup\",\r\n+\r\n+//       response: \"Here's the signup page. Please proceed With Registration.\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"Go to face id\",\r\n+\r\n+//       route: \"/login/faceid\",\r\n+\r\n+//       response: \"Here's Face ID Login. Please proceed.\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"Go to face id login\",\r\n+\r\n+//       route: \"/login/faceid\",\r\n+\r\n+//       response: \"Here's Face ID Login. Please proceed.\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"login with face id\",\r\n+\r\n+//       route: \"/login/faceid\",\r\n+\r\n+//       response: \"Here's Face ID Login. Please proceed.\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"login with face\",\r\n+\r\n+//       route: \"/login/faceid\",\r\n+\r\n+//       response: \"Here's Face ID Login. Please proceed.\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"i want to login with face\",\r\n+\r\n+//       route: \"/login/faceid\",\r\n+\r\n+//       response: \"Here's Face ID Login. Please proceed.\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"login with voice\",\r\n+\r\n+//       route: \"/login/voiceid\",\r\n+\r\n+//       response: \"Here's Voice Login. Please proceed.\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"i want to login with voice\",\r\n+\r\n+//       route: \"/login/voiceid\",\r\n+\r\n+//       response: \"Here's Voice Login. Please proceed.\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"go to voice login\",\r\n+\r\n+//       route: \"/login/voiceid\",\r\n+\r\n+//       response: \"Here's Voice Login. Please proceed.\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"login with voice\",\r\n+\r\n+//       route: \"/login/voiceid\",\r\n+\r\n+//       response: \"Here's Voice Login. Please proceed.\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"login with mobile\",\r\n+\r\n+//       route: \"/login/mobile\",\r\n+\r\n+//       response: \"Here's Mobile Login. Please proceed.\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"i want to login with mobile\",\r\n+\r\n+//       route: \"/login/mobile\",\r\n+\r\n+//       response: \"Here's Mobile Login. Please proceed.\",\r\n+//     },\r\n+//     {\r\n+//       utterance: \"go to mobile login\",\r\n+\r\n+//       route: \"/login/mobile\",\r\n+\r\n+//       response: \"Here's Mobile Login. Please proceed.\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"what are platform features\",\r\n+\r\n+//       response:\r\n+//         \"Dashboard, Dynamic time table, Learning Networks, Little Masters, Video Based Dictionary, General Search.\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"Features of platform\",\r\n+\r\n+//       response:\r\n+//         \"Dashboard, Dynamic time table, Learning Networks, Little Masters, Video Based Dictionary, General Search.\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"What does the platform offer\",\r\n+\r\n+//       response:\r\n+//         \"Dashboard, Dynamic time table, Learning Networks, Little Masters, Video Based Dictionary, General Search.\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"Say me the features of platform\",\r\n+\r\n+//       response:\r\n+//         \"Dashboard, Dynamic time table, Learning Networks, Little Masters, Video Based Dictionary, General Search.\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"Say me the services of platform\",\r\n+\r\n+//       response:\r\n+//         \"Dashboard, Dynamic time table, Learning Networks, Little Masters, Video Based Dictionary, General Search.\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"tell me the services offered by the platform\",\r\n+\r\n+//       response:\r\n+//         \"Dashboard, Dynamic time table, Learning Networks, Little Masters, Video Based Dictionary, General Search.\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"explain platform services\",\r\n+\r\n+//       response:\r\n+//         \"Dashboard, Dynamic time table, Learning Networks, Little Masters, Video Based Dictionary, General Search.\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"Give me the Parent voice of Julia Harris\",\r\n+\r\n+//       response:\r\n+//         \"Brane education has helped my son a lot in his studies. He improved a lot in his studies and is now able to score good marks in his exams\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"Play today's motivational video\",\r\n+\r\n+//       response: \"I am playing the video\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"Play today's video\",\r\n+\r\n+//       response: \"I am playing Motivational video\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"Leaders Voice\",\r\n+\r\n+//       response:\r\n+//         \"This Voice-interactive AI Platform is a game Changer. It revolutionizes education.\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"Curriculum Supported by Brane Education\",\r\n+\r\n+//       response:\r\n+//         \"we support multiple Boards let me say few Telangana State Board Andhra Pradesh Board Maharashtra Board Assam Board\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"Boards supported by the platform\",\r\n+\r\n+//       response:\r\n+//         \"we support multiple Boards let me say few Telangana State Board Andhra Pradesh Board Maharashtra Board Assam Board\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"Curriculum\",\r\n+\r\n+//       response:\r\n+//         \"we support multiple Boards let me say few Telangana State Board Andhra Pradesh Board Maharashtra Board Assam Board\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"Go to landing page\",\r\n+\r\n+//       response: \"Okay, I am taking you to the landing page.\",\r\n+\r\n+//       route: \"/childpage\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"take me to landing page\",\r\n+\r\n+//       response: \"Okay, I am taking you to the landing page.\",\r\n+\r\n+//       route: \"/childpage\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"move to landing page\",\r\n+\r\n+//       response: \"Okay, I am taking you to the landing page.\",\r\n+\r\n+//       route: \"/childpage\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"roll back to landing page\",\r\n+\r\n+//       response: \"Okay, I am taking you to the landing page.\",\r\n+\r\n+//       route: \"/childpage\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"move to landing page\",\r\n+\r\n+//       response: \"Okay, I am taking you to the landing page.\",\r\n+\r\n+//       route: \"/childpage\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"what is today's quote\",\r\n+\r\n+//       response:\r\n+//         \"Determination is the power that sees us through all our frustration and obstacles. It helps in building our willpower which is the very basis of success.\",\r\n+\r\n+//       route: \"/childpage\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"Today's Inspirational quote\",\r\n+\r\n+//       response:\r\n+//         \"Determination is the power that sees us through all our frustration and obstacles. It helps in building our willpower which is the very basis of success.\",\r\n+\r\n+//       route: \"/childpage\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"say me today's quote\",\r\n+\r\n+//       response:\r\n+//         \"Determination is the power that sees us through all our frustration and obstacles. It helps in building our willpower which is the very basis of success.\",\r\n+\r\n+//       route: \"/childpage\",\r\n+//     },\r\n+//     {\r\n+//       utterance: \"go back\",\r\n+//       response: \"\",\r\n+//       action: goBack, // Note the use of an action property\r\n+//     },\r\n+//     {\r\n+//       utterance: \"go forward\",\r\n+//       response: \"\",\r\n+//       action: goForward,\r\n+//     },\r\n+//     {\r\n+//       utterance: \"play video\",\r\n+//       // response: \"Playing video.\",\r\n+//       action: playVideo,\r\n+//     },\r\n+//     {\r\n+//       utterance: \"pause video\",\r\n+//       // response: \"Pausing video.\",\r\n+//       action: pauseVideo,\r\n+//     },\r\n+//     {\r\n+//       utterance: \"start video\",\r\n+//       // response: \"Playing video.\",\r\n+//       action: playVideo,\r\n+//     },\r\n+//     {\r\n+//       utterance: \"stop video\",\r\n+//       // response: \"Playing video.\",\r\n+//       action: pauseVideo,\r\n+//     },\r\n+//     {\r\n+//       utterance: \"scroll up\",\r\n+//       // response: \"Scrolling up.\",\r\n+//       action: scrollUp,\r\n+//     },\r\n+//     {\r\n+//       utterance: \"scroll down\",\r\n+//       // response: \"Scrolling down.\",\r\n+//       action: scrollDown,\r\n+//     },\r\n+//     {\r\n+//       utterance: \"go up\",\r\n+\r\n+//       // response: \"Scrolling up.\",\r\n+//       action: scrollUp,\r\n+//     },\r\n+//     {\r\n+//       utterance: \"go down\",\r\n+//       // response: \"Scrolling down.\",\r\n+//       action: scrollDown,\r\n+//     },\r\n+//     {\r\n+//       utterance: \"scroll to top\",\r\n+//       action: scrollToTop,\r\n+//     },\r\n+//     {\r\n+//       utterance: \"scroll to bottom\",\r\n+//       action: scrollToBottom,\r\n+//     },\r\n+//     {\r\n+//       utterance: \"brane stop\",\r\n+//       action: stopListening,\r\n+//     },\r\n+//     {\r\n+//       utterance: \"brane turn off\",\r\n+//       action: stopListening,\r\n+//     },\r\n+//     {\r\n+//       utterance: \"brane stop the bot\",\r\n+//       action: stopListening,\r\n+//     },\r\n+//   ];\r\n+\r\n+//   return (\r\n+//     <div className=\"speech-bot-container\">\r\n+//       <div\r\n+//         className={`button-container ${\r\n+//           isListening ? \"voicebotframeactive\" : \"voicebotframe\"\r\n+//         }`}\r\n+//       >\r\n+//         <button onClick={isListening ? stopListening : startListening}>\r\n+//           {isListening ? \"Stop\" : \"Start\"} Animation\r\n+//         </button>\r\n+//         {/* <button onClick={toggleBotActive}>\r\n+//         {isBotActive ? 'Deactivate Bot' : 'Activate Bot'}\r\n+//       </button> \r\n+//       </div>\r\n+//     </div>\r\n+//   );\r\n+// };\r\n+\r\n+// export default VoiceBot; */\r\n+}\r\n+\r\n+//iska v1\r\n+\r\n+// import React, { useState, useEffect, useRef } from \"react\";\r\n+// import { useNavigate, useLocation } from \"react-router-dom\";\r\n+// import Fuse from \"fuse.js\";\r\n+// import \"./VoiceBot.css\";\r\n+\r\n+// const VoiceBot = ({ videoRef}) => {\r\n+//   const [isListening, setIsListening] = useState(false);\r\n+//   const [isSpeaking, setIsSpeaking] = useState(false);\r\n+//   const recognition = useRef(null);\r\n+//   const speechSynthesis = useRef(window.speechSynthesis);\r\n+//   const [hasGreeted, setHasGreeted] = useState(false);\r\n+//   const navigate = useNavigate();\r\n+\r\n+//  // Initialize speech recognition\r\n+//  useEffect(() => {\r\n+//   recognition.current = new window.webkitSpeechRecognition();\r\n+//   recognition.current.continuous = true;\r\n+//   recognition.current.interimResults = false;\r\n+//   recognition.current.onresult = onResult;\r\n+//   recognition.current.onend = onRecognitionEnd;\r\n+//   recognition.current.starting = false;\r\n+\r\n+//   recognition.current.onerror = (event) => {\r\n+//     console.error(\"Recognition error:\", event.error);\r\n+//     if (isListening && !isSpeaking) {\r\n+//       restartRecognition();\r\n+//     }\r\n+//   };\r\n+\r\n+//   return () => {\r\n+//     if (recognition.current) {\r\n+//       recognition.current.abort();\r\n+//     }\r\n+//   };\r\n+// }, []);\r\n+\r\n+//   // useEffect(() => {\r\n+//   //   const checkRecognition = () => {\r\n+//   //     if (isListening && !isSpeaking && !recognition.current.starting) {\r\n+//   //       console.log(\"Restarting recognition because it's not active.\");\r\n+//   //       recognition.current.starting = true;\r\n+//   //       recognition.current.start();\r\n+//   //       console.log(\"Restarted recognition.\");\r\n+//   //     }\r\n+//   //   };\r\n+\r\n+//   //   const recognitionCheckInterval = setInterval(checkRecognition, 100); // Check every .5 second\r\n+\r\n+//   //   return () => {\r\n+//   //     clearInterval(recognitionCheckInterval);\r\n+//   //   };\r\n+//   // }, [isListening, isSpeaking]);\r\n+\r\n+//   const historyStack = useRef([]);\r\n+\r\n+//   useEffect(() => {\r\n+//     return () => {\r\n+//       // Clean up the listener when the component unmounts\r\n+//       window.removeEventListener(\"popstate\", handlePopState);\r\n+//     };\r\n+//   }, []);\r\n+\r\n+//   const handlePopState = () => {\r\n+//     // This needs to handle both back and forward browser actions\r\n+//     // Use some logic to determine whether it's a back or forward action\r\n+//     // For simplicity, assume it's always back\r\n+//     historyStack.current.pop();\r\n+//     forwardStack.current.length = 0; // Clear forward stack on manual navigation\r\n+//   };\r\n+\r\n+//   // Add a new entry to the stack whenever navigate is called\r\n+//   const customNavigate = (to, options) => {\r\n+//     historyStack.current.push(to);\r\n+//     navigate(to, options);\r\n+//   };\r\n+\r\n+//   // Listen to popstate events to update the history stack\r\n+//   useEffect(() => {\r\n+//     window.addEventListener(\"popstate\", handlePopState);\r\n+//   }, []);\r\n+\r\n+//   const forwardStack = useRef([]);\r\n+\r\n+//   const goBack = () => {\r\n+//     if (window.history.state && window.history.state.idx > 0) {\r\n+//       window.history.back();\r\n+//       speak(\"Going back\");\r\n+//     } else {\r\n+//       speak(\"Can't go back any further.\");\r\n+//     }\r\n+//   };\r\n+\r\n+//   const goForward = () => {\r\n+//     if (window.history.state && window.history.state.idx < window.history.length - 1) {\r\n+//       window.history.forward();\r\n+//       speak(\"Going forward\");\r\n+//     } else {\r\n+//       speak(\"No forward history available.\");\r\n+//     }\r\n+//   };\r\n+\r\n+//   const playVideo = () => {\r\n+//     if (videoRef.current) {\r\n+//       videoRef.current.play();\r\n+//       speak(\"Playing video.\");\r\n+//     } else {\r\n+//       speak(\"No video to play.\");\r\n+//     }\r\n+//   };\r\n+\r\n+//   const pauseVideo = () => {\r\n+//     if (videoRef.current) {\r\n+//       videoRef.current.pause();\r\n+//       speak(\"Video paused.\");\r\n+//     } else {\r\n+//       speak(\"No video to pause.\");\r\n+//     }\r\n+//   };\r\n+\r\n+//   const scrollAmount = window.innerHeight * 0.82;\r\n+\r\n+//   const scrollUp = () => {\r\n+//     if (window.pageYOffset === 0) {\r\n+//       speak(\"Already at the top of the page.\");\r\n+//     } else {\r\n+//       window.scrollBy(0, -scrollAmount);\r\n+//       speak(\"Scrolled up.\");\r\n+//     }\r\n+//   };\r\n+\r\n+//   const scrollDown = () => {\r\n+//     const maxScrollTop =\r\n+//       document.documentElement.scrollHeight - window.innerHeight;\r\n+//     if (window.pageYOffset >= maxScrollTop) {\r\n+//       speak(\"Already at the bottom of the page.\");\r\n+//     } else {\r\n+//       window.scrollBy(0, scrollAmount);\r\n+//       speak(\"Scrolled down.\");\r\n+//     }\r\n+//   };\r\n+\r\n+//   const scrollToTop = () => {\r\n+//     if (window.pageYOffset === 0) {\r\n+//       speak(\"Already at the top of the page.\");\r\n+//     } else {\r\n+//       window.scrollTo(0, 0);\r\n+//       speak(\"Scrolled to the top of the page.\");\r\n+//     }\r\n+//   };\r\n+\r\n+//   const scrollToBottom = () => {\r\n+//     const maxScrollTop =\r\n+//       document.documentElement.scrollHeight - window.innerHeight;\r\n+//     if (window.pageYOffset >= maxScrollTop) {\r\n+//       speak(\"Already at the bottom of the page.\");\r\n+//     } else {\r\n+//       window.scrollTo(0, document.body.scrollHeight);\r\n+//       speak(\"Scrolled to the bottom of the page.\");\r\n+//     }\r\n+//   };\r\n+\r\n+//   const speak = (message) => {\r\n+//     const utterance = new SpeechSynthesisUtterance(message);\r\n+//     utterance.onend = () => {\r\n+//       setIsSpeaking(false);\r\n+//       // Restart recognition after speaking has ended\r\n+//       if (isListening) {\r\n+//         restartRecognition();\r\n+//       }\r\n+//     };\r\n+\r\n+//     setIsSpeaking(true);\r\n+//     // Stop recognition when the bot starts speaking\r\n+//     if (recognition.current) {\r\n+//       recognition.current.abort();\r\n+//     }\r\n+//     speechSynthesis.current.speak(utterance);\r\n+//   };\r\n+\r\n+//   const restartRecognition = () => {\r\n+//     // Check if recognition is not already started and if the bot is set to listen\r\n+//     if (recognition.current && !recognition.current.starting && isListening && !isSpeaking) {\r\n+//       // Only start recognition if it's not already active\r\n+//       if (recognition.current.state !== 'active') {\r\n+//         recognition.current.abort(); // Ensure any ongoing recognition is stopped\r\n+//         recognition.current.starting = true;\r\n+//         recognition.current.start();\r\n+//       }\r\n+//     }\r\n+//   };\r\n+\r\n+//     // Restart recognition when bot finishes speaking and isListening is true\r\n+//     useEffect(() => {\r\n+//       if (!isSpeaking && isListening) {\r\n+//         restartRecognition();\r\n+//       }\r\n+//     }, [isSpeaking, isListening]);\r\n+\r\n+//   const onResult = (event) => {\r\n+//     const resultIndex = event.resultIndex;\r\n+//     const transcript = event.results[resultIndex][0].transcript\r\n+//       .trim()\r\n+//       .toLowerCase();\r\n+\r\n+//     if (event.results[resultIndex].isFinal) {\r\n+//       console.log(`Recognized text: ${transcript}`);\r\n+//       if (transcript.includes(\"brain\")) {\r\n+//         console.log(\"Wake word heard, processing command...\");\r\n+//         handleCommandWithFuse(transcript.replace(\"brain\", \"\"));\r\n+//       }\r\n+//     }\r\n+//   };\r\n+\r\n+//   const onRecognitionEnd = () => {\r\n+//     recognition.current.starting = false;\r\n+//     if (isListening && !isSpeaking) {\r\n+//       restartRecognition();\r\n+//     }\r\n+//   };\r\n+\r\n+//   useEffect(() => {\r\n+//     if (isListening && !hasGreeted) {\r\n+//       speak(\"Hello, I'm Brane. How can I help you today?\");\r\n+//       setHasGreeted(true);\r\n+//     }\r\n+//   }, [isListening, hasGreeted]);\r\n+\r\n+// // Updated startListening function\r\n+// const startListening = () => {\r\n+//   setIsListening(true);\r\n+//   if (recognition.current && !recognition.current.starting) {\r\n+//     recognition.current.start();\r\n+//   }\r\n+// };\r\n+\r\n+// // Updated stopListening function\r\n+// const stopListening = () => {\r\n+//   setIsListening(false);\r\n+//   setIsSpeaking(false); // Reset speaking state\r\n+//   setHasGreeted(false); // Reset greeting state if needed\r\n+//   if (recognition.current) {\r\n+//     recognition.current.abort(); // Stop any ongoing speech recognition\r\n+//   }\r\n+//   if (speechSynthesis.current.speaking) {\r\n+//     speechSynthesis.current.cancel(); // Stop any ongoing speech synthesis\r\n+//   }\r\n+// };\r\n+\r\n+//   const handleCommandWithFuse = (command) => {\r\n+//     const fuse = new Fuse(commands, { keys: [\"utterance\"], threshold: 0.4 });\r\n+//     const results = fuse.search(command);\r\n+//     const foundCommand = results.length ? results[0].item : null;\r\n+\r\n+//     if (foundCommand) {\r\n+//       console.log(\"Command found:\", foundCommand.utterance);\r\n+\r\n+//       if (foundCommand.action) {\r\n+//         foundCommand.action();\r\n+//       } else if (foundCommand.route) {\r\n+//         navigate(foundCommand.route);\r\n+//       }\r\n+\r\n+//       // Speak after performing the action or navigation\r\n+//       speak(foundCommand.response);\r\n+//     } else {\r\n+//       console.log(\"No command found.\");\r\n+//       speak(\"I'm not sure how to respond to that.\");\r\n+//     }\r\n+//   };\r\n+\r\n+//   const commands = [\r\n+//     {\r\n+//       utterance: \"Hello who are you ?\",\r\n+\r\n+//       response:\r\n+//         \"Hi! This is Brane! your Voice bot from Brane Education How can I Assist you Today ?\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"Hello\",\r\n+\r\n+//       response: \"Hi! How can I assist you today?\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"hello\",\r\n+\r\n+//       response: \"Hi! How can I assist you today?\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"Hi.\",\r\n+\r\n+//       response: \"Hello! How can I assist you today?\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"Hey there\",\r\n+\r\n+//       response: \"Hi! How can I assist you today?\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"Good morning Brane.\",\r\n+\r\n+//       response: \"Hey Hiii! Good morning  ! How can I help you?\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"Good afternoon Brane.\",\r\n+\r\n+//       response: \"Hey Hiii! Good after noon ! How can I help you?\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"Good evening Brane.\",\r\n+\r\n+//       response: \"Hey Hiii! Good evening ! How can I help you?\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"can you please take me to login page\",\r\n+\r\n+//       route: \"/login\",\r\n+\r\n+//       response: \"Here's the Login Page, Please Login\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"please take me to login page\",\r\n+\r\n+//       route: \"/login\",\r\n+\r\n+//       response: \"Here's the Login Page, Please Login\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"Go to login page\",\r\n+\r\n+//       route: \"/login\",\r\n+\r\n+//       response: \"Here's the Login Page, Please Login\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"open login page\",\r\n+\r\n+//       route: \"/login\",\r\n+\r\n+//       response: \"Here's the Login Page, Please Login\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"can you please take me to signup page\",\r\n+\r\n+//       route: \"/signup\",\r\n+\r\n+//       response: \"Here's the signup page. Please proceed With Registration.\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"take me to signup page\",\r\n+\r\n+//       route: \"/signup\",\r\n+\r\n+//       response: \"Here's the signup page. Please proceed With Registration.\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"Go to signup page\",\r\n+\r\n+//       route: \"/signup\",\r\n+\r\n+//       response: \"Here's the signup page. Please proceed With Registration.\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"open signup page\",\r\n+\r\n+//       route: \"/signup\",\r\n+\r\n+//       response: \"Here's the signup page. Please proceed With Registration.\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"Go to face id\",\r\n+\r\n+//       route: \"/login/faceid\",\r\n+\r\n+//       response: \"Here's Face ID Login. Please proceed.\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"Go to face id login\",\r\n+\r\n+//       route: \"/login/faceid\",\r\n+\r\n+//       response: \"Here's Face ID Login. Please proceed.\",\r\n+//     },\r\n+//     {\r\n+//       utterance: \"Go to face login\",\r\n+\r\n+//       route: \"/login/faceid\",\r\n+\r\n+//       response: \"Here's Face ID Login. Please proceed.\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"login with face id\",\r\n+\r\n+//       route: \"/login/faceid\",\r\n+\r\n+//       response: \"Here's Face ID Login. Please proceed.\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"login with face\",\r\n+\r\n+//       route: \"/login/faceid\",\r\n+\r\n+//       response: \"Here's Face ID Login. Please proceed.\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"i want to login with face\",\r\n+\r\n+//       route: \"/login/faceid\",\r\n+\r\n+//       response: \"Here's Face ID Login. Please proceed.\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"login with voice\",\r\n+\r\n+//       route: \"/login/voiceid\",\r\n+\r\n+//       response: \"Here's Voice Login. Please proceed.\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"i want to login with voice\",\r\n+\r\n+//       route: \"/login/voiceid\",\r\n+\r\n+//       response: \"Here's Voice Login. Please proceed.\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"go to voice login\",\r\n+\r\n+//       route: \"/login/voiceid\",\r\n+\r\n+//       response: \"Here's Voice Login. Please proceed.\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"login with voice\",\r\n+\r\n+//       route: \"/login/voiceid\",\r\n+\r\n+//       response: \"Here's Voice Login. Please proceed.\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"login with mobile\",\r\n+\r\n+//       route: \"/login/mobile\",\r\n+\r\n+//       response: \"Here's Mobile Login. Please proceed.\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"i want to login with mobile\",\r\n+\r\n+//       route: \"/login/mobile\",\r\n+\r\n+//       response: \"Here's Mobile Login. Please proceed.\",\r\n+//     },\r\n+//     {\r\n+//       utterance: \"go to mobile login\",\r\n+\r\n+//       route: \"/login/mobile\",\r\n+\r\n+//       response: \"Here's Mobile Login. Please proceed.\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"what are platform features\",\r\n+\r\n+//       response:\r\n+//         \"Dashboard, Dynamic time table, Learning Networks, Little Masters, Video Based Dictionary, General Search.\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"Features of platform\",\r\n+\r\n+//       response:\r\n+//         \"Dashboard, Dynamic time table, Learning Networks, Little Masters, Video Based Dictionary, General Search.\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"What does the platform offer\",\r\n+\r\n+//       response:\r\n+//         \"Dashboard, Dynamic time table, Learning Networks, Little Masters, Video Based Dictionary, General Search.\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"Say me the features of platform\",\r\n+\r\n+//       response:\r\n+//         \"Dashboard, Dynamic time table, Learning Networks, Little Masters, Video Based Dictionary, General Search.\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"Say me the services of platform\",\r\n+\r\n+//       response:\r\n+//         \"Dashboard, Dynamic time table, Learning Networks, Little Masters, Video Based Dictionary, General Search.\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"tell me the services offered by the platform\",\r\n+\r\n+//       response:\r\n+//         \"Dashboard, Dynamic time table, Learning Networks, Little Masters, Video Based Dictionary, General Search.\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"explain platform services\",\r\n+\r\n+//       response:\r\n+//         \"Dashboard, Dynamic time table, Learning Networks, Little Masters, Video Based Dictionary, General Search.\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"Give me the Parent voice of Julia Harris\",\r\n+\r\n+//       response:\r\n+//         \"Brane education has helped my son a lot in his studies. He improved a lot in his studies and is now able to score good marks in his exams\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"Play today's motivational video\",\r\n+\r\n+//       response: \"I am playing the video\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"Play today's video\",\r\n+\r\n+//       response: \"I am playing Motivational video\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"Leaders Voice\",\r\n+\r\n+//       response:\r\n+//         \"This Voice-interactive AI Platform is a game Changer. It revolutionizes education.\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"Curriculum Supported by Brane Education\",\r\n+\r\n+//       response:\r\n+//         \"we support multiple Boards let me say few Telangana State Board Andhra Pradesh Board Maharashtra Board Assam Board\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"Boards supported by the platform\",\r\n+\r\n+//       response:\r\n+//         \"we support multiple Boards let me say few Telangana State Board Andhra Pradesh Board Maharashtra Board Assam Board\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"Curriculum\",\r\n+\r\n+//       response:\r\n+//         \"we support multiple Boards let me say few Telangana State Board Andhra Pradesh Board Maharashtra Board Assam Board\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"Go to landing page\",\r\n+\r\n+//       response: \"Okay, I am taking you to the landing page.\",\r\n+\r\n+//       route: \"/childpage\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"take me to landing page\",\r\n+\r\n+//       response: \"Okay, I am taking you to the landing page.\",\r\n+\r\n+//       route: \"/childpage\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"move to landing page\",\r\n+\r\n+//       response: \"Okay, I am taking you to the landing page.\",\r\n+\r\n+//       route: \"/childpage\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"roll back to landing page\",\r\n+\r\n+//       response: \"Okay, I am taking you to the landing page.\",\r\n+\r\n+//       route: \"/childpage\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"move to landing page\",\r\n+\r\n+//       response: \"Okay, I am taking you to the landing page.\",\r\n+\r\n+//       route: \"/childpage\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"what is today's quote\",\r\n+\r\n+//       response:\r\n+//         \"Determination is the power that sees us through all our frustration and obstacles. It helps in building our willpower which is the very basis of success.\",\r\n+\r\n+//       route: \"/childpage\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"Today's Inspirational quote\",\r\n+\r\n+//       response:\r\n+//         \"Determination is the power that sees us through all our frustration and obstacles. It helps in building our willpower which is the very basis of success.\",\r\n+\r\n+//       route: \"/childpage\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"say me today's quote\",\r\n+\r\n+//       response:\r\n+//         \"Determination is the power that sees us through all our frustration and obstacles. It helps in building our willpower which is the very basis of success.\",\r\n+\r\n+//       route: \"/childpage\",\r\n+//     },\r\n+//     {\r\n+//       utterance: \"go back\",\r\n+//       response: \"\",\r\n+//       action: goBack, // Note the use of an action property\r\n+//     },\r\n+//     {\r\n+//       utterance: \"go forward\",\r\n+//       response: \"\",\r\n+//       action: goForward,\r\n+//     },\r\n+//     {\r\n+//       utterance: \"play video\",\r\n+//       // response: \"Playing video.\",\r\n+//       action: playVideo,\r\n+//     },\r\n+//     {\r\n+//       utterance: \"pause video\",\r\n+//       // response: \"Pausing video.\",\r\n+//       action: pauseVideo,\r\n+//     },\r\n+//     {\r\n+//       utterance: \"start video\",\r\n+//       // response: \"Playing video.\",\r\n+//       action: playVideo,\r\n+//     },\r\n+//     {\r\n+//       utterance: \"stop video\",\r\n+//       // response: \"Playing video.\",\r\n+//       action: pauseVideo,\r\n+//     },\r\n+//     {\r\n+//       utterance: \"scroll up\",\r\n+//       // response: \"Scrolling up.\",\r\n+//       action: scrollUp,\r\n+//     },\r\n+//     {\r\n+//       utterance: \"scroll down\",\r\n+//       // response: \"Scrolling down.\",\r\n+//       action: scrollDown,\r\n+//     },\r\n+//     {\r\n+//       utterance: \"go up\",\r\n+\r\n+//       // response: \"Scrolling up.\",\r\n+//       action: scrollUp,\r\n+//     },\r\n+//     {\r\n+//       utterance: \"go down\",\r\n+//       // response: \"Scrolling down.\",\r\n+//       action: scrollDown,\r\n+//     },\r\n+//     {\r\n+//       utterance: \"scroll to top\",\r\n+//       action: scrollToTop,\r\n+//     },\r\n+//     {\r\n+//       utterance: \"scroll to bottom\",\r\n+//       action: scrollToBottom,\r\n+//     },\r\n+//     {\r\n+//       utterance: \"brane stop\",\r\n+//       action: stopListening,\r\n+//     },\r\n+//     {\r\n+//       utterance: \"brane turn off\",\r\n+//       action: stopListening,\r\n+//     },\r\n+//     {\r\n+//       utterance: \"brane stop the bot\",\r\n+//       action: stopListening,\r\n+//     },\r\n+//   ];\r\n+\r\n+//   return (\r\n+//     <div className=\"speech-bot-container\">\r\n+//       <div\r\n+//         className={`button-container ${\r\n+//           isListening ? \"voicebotframeactive\" : \"voicebotframe\"\r\n+//         }`}\r\n+//       >\r\n+//         <button onClick={isListening ? stopListening : startListening}>\r\n+//           {isListening ? \"Stop\" : \"Start\"} Animation\r\n+//         </button>\r\n+//         {/* <button onClick={toggleBotActive}>\r\n+//         {isBotActive ? 'Deactivate Bot' : 'Activate Bot'}\r\n+//       </button> */}\r\n+//       </div>\r\n+//     </div>\r\n+//   );\r\n+// };\r\n+\r\n+// export default VoiceBot;\r\n+\r\n+//Bot Video added but some start issues\r\n+\r\n+// import React, { useState, useEffect, useRef } from \"react\";\r\n+// import { useNavigate, useLocation } from \"react-router-dom\";\r\n+// import Fuse from \"fuse.js\";\r\n+// import \"./VoiceBot.css\";\r\n+\r\n+// const VoiceBot = ({ videoRef }) => {\r\n+//   const [isListening, setIsListening] = useState(false);\r\n+//   const [isSpeaking, setIsSpeaking] = useState(false);\r\n+//   const recognition = useRef(null);\r\n+//   const speechSynthesis = useRef(window.speechSynthesis);\r\n+//   const hasGreeted = useRef(false);\r\n+//   const restartRecognitionTimeout = useRef(null);\r\n+//   const navigate = useNavigate();\r\n+//   const location = useLocation();\r\n+//   const [isRecognitionActive, setIsRecognitionActive] = useState(false); // New state to track recognition status\r\n+\r\n+//   useEffect(() => {\r\n+//     recognition.current = new window.webkitSpeechRecognition();\r\n+//     recognition.current.continuous = true;\r\n+//     recognition.current.interimResults = false;\r\n+//     recognition.current.onresult = onResult;\r\n+//     recognition.current.onend = () => {\r\n+//       console.log(\"Recognition ended.\");\r\n+//       if (isListening) {\r\n+//         startListening();\r\n+//       }\r\n+//     };\r\n+//     recognition.current.onerror = (event) => {\r\n+//       console.error(\"Recognition error:\", event.error);\r\n+//     };\r\n+\r\n+//     return () => {\r\n+//       recognition.current.abort();\r\n+//     };\r\n+//   }, []);\r\n+\r\n+//   // Update useEffect for managing the recognition state based on isListening and isRecognitionActive\r\n+//   useEffect(() => {\r\n+//     if (isListening && !isRecognitionActive) {\r\n+//       startListening();\r\n+//     } else if (!isListening && isRecognitionActive) {\r\n+//       stopListening();\r\n+//     }\r\n+//   }, [isListening, isRecognitionActive]);\r\n+\r\n+//   const goBack = () => {\r\n+//     if (window.history.length > 1) {\r\n+//       navigate(-1);\r\n+//     } else {\r\n+//       speak(\"Can't go back any further.\");\r\n+//     }\r\n+//   };\r\n+\r\n+//   const goForward = () => {\r\n+//     // Unfortunately, there's no direct way to check if you can go forward in the history.\r\n+//     // You might need to manage this state manually based on user navigation.\r\n+//     navigate(1);\r\n+//   };\r\n+\r\n+//   const playVideo = () => {\r\n+//     if (videoRef.current && !videoRef.current.paused) {\r\n+//       speak(\"Video is already playing.\");\r\n+//     } else if (videoRef.current) {\r\n+//       videoRef.current.play();\r\n+//       speak(\"Playing video.\");\r\n+//     } else {\r\n+//       speak(\"No video to play.\");\r\n+//     }\r\n+//   };\r\n+\r\n+//   const pauseVideo = () => {\r\n+//     if (videoRef.current && videoRef.current.paused) {\r\n+//       speak(\"Video is already paused.\");\r\n+//     } else if (videoRef.current) {\r\n+//       videoRef.current.pause();\r\n+//       speak(\"Video paused.\");\r\n+//     } else {\r\n+//       speak(\"No video to pause.\");\r\n+//     }\r\n+//   };\r\n+\r\n+//   const scrollAmount = window.innerHeight * 0.82;\r\n+\r\n+//   const scrollUp = () => {\r\n+//     if (window.pageYOffset === 0) {\r\n+//       speak(\"Already at the top of the page.\");\r\n+//     } else {\r\n+//       window.scrollBy(0, -scrollAmount);\r\n+//       speak(\"Scrolled up.\");\r\n+//     }\r\n+//   };\r\n+\r\n+//   const scrollDown = () => {\r\n+//     const maxScrollTop =\r\n+//       document.documentElement.scrollHeight - window.innerHeight;\r\n+//     if (window.pageYOffset >= maxScrollTop) {\r\n+//       speak(\"Already at the bottom of the page.\");\r\n+//     } else {\r\n+//       window.scrollBy(0, scrollAmount);\r\n+//       speak(\"Scrolled down.\");\r\n+//     }\r\n+//   };\r\n+\r\n+//   const scrollToTop = () => {\r\n+//     if (window.pageYOffset === 0) {\r\n+//       speak(\"Already at the top of the page.\");\r\n+//     } else {\r\n+//       window.scrollTo(0, 0);\r\n+//       speak(\"Scrolled to the top of the page.\");\r\n+//     }\r\n+//   };\r\n+\r\n+//   const scrollToBottom = () => {\r\n+//     const maxScrollTop =\r\n+//       document.documentElement.scrollHeight - window.innerHeight;\r\n+//     if (window.pageYOffset >= maxScrollTop) {\r\n+//       speak(\"Already at the bottom of the page.\");\r\n+//     } else {\r\n+//       window.scrollTo(0, document.body.scrollHeight);\r\n+//       speak(\"Scrolled to the bottom of the page.\");\r\n+//     }\r\n+//   };\r\n+\r\n+//   // const speak = (message) => {\r\n+//   //   const utterance = new SpeechSynthesisUtterance(message);\r\n+//   //   utterance.onend = () => {\r\n+//   //     setIsSpeaking(false);\r\n+//   //     console.log(\"Speaking ended.\");\r\n+//   //     // Only restart recognition if we're still supposed to be listening\r\n+//   //     // if (isListening) {\r\n+//   //     //   if (restartRecognitionTimeout.current) {\r\n+//   //     //     clearTimeout(restartRecognitionTimeout.current);\r\n+//   //     //   }\r\n+//   //     //   restartRecognitionTimeout.current = setTimeout(() => {\r\n+//   //     //     console.log(\"Recognition restarted.\");\r\n+//   //     //     recognition.current.start();\r\n+//   //     //   }, 100); // Delay to prevent immediate restart\r\n+//   //     // }\r\n+//   //     if (isListening && !recognition.current.starting) { // Check the flag before restarting\r\n+//   //       recognition.current.starting = true; // Set the flag when starting recognition\r\n+//   //       recognition.current.start();\r\n+//   //     }\r\n+//   //   };\r\n+\r\n+//   //   setIsSpeaking(true);\r\n+//   //   console.log(\"Speaking started.\");\r\n+//   //   recognition.current.stop(); // Stop recognition when the bot starts speaking\r\n+//   //   speechSynthesis.current.speak(utterance);\r\n+//   // };\r\n+\r\n+//   const speak = (message) => {\r\n+//     console.log(\"speak function called with message:\", message);\r\n+//     const utterance = new SpeechSynthesisUtterance(message);\r\n+//     utterance.onend = () => {\r\n+//       setIsSpeaking(false);\r\n+//       console.log(\"Speaking ended.\");\r\n+//       // Directly handle the restart of recognition here if needed\r\n+//       if (isListening) {\r\n+//         startListening();\r\n+//       }\r\n+//     };\r\n+\r\n+//     setIsSpeaking(true);\r\n+//     console.log(\"Speaking started.\");\r\n+//     recognition.current.stop(); // Ensure to stop recognition before speaking\r\n+//     speechSynthesis.current.speak(utterance);\r\n+//   };\r\n+\r\n+//   const onResult = (event) => {\r\n+//     const resultIndex = event.resultIndex;\r\n+//     const transcript = event.results[resultIndex][0].transcript\r\n+//       .trim()\r\n+//       .toLowerCase();\r\n+\r\n+//     if (event.results[resultIndex].isFinal) {\r\n+//       console.log(`Recognized text: ${transcript}`);\r\n+//       if (transcript.includes(\"brain\")) {\r\n+//         console.log(\"Wake word heard, processing command...\");\r\n+//         handleCommandWithFuse(transcript.replace(\"brain\", \"\"));\r\n+//       }\r\n+//     }\r\n+//   };\r\n+\r\n+//   // const onRecognitionEnd = () => {\r\n+//   //   console.log(\"Recognition ended.\");\r\n+//   //   setIsRecognitionActive(false); // Update state when recognition ends\r\n+//   //   recognition.current.starting = false; // Reset the flag when recognition ends\r\n+//   //   // We now check if the recognition is already running before starting it again\r\n+//   //   if (isListening && !isSpeaking && !recognition.current?.starting) {\r\n+//   //     console.log(\"Restarting recognition.\");\r\n+//   //     recognition.current.start();\r\n+//   //   }\r\n+//   // };\r\n+\r\n+//   // useEffect(() => {\r\n+//   //   if (isListening && !hasGreeted.current) {\r\n+//   //     speak(\"Hello, I'm Brane. How can I assist you today?\");\r\n+//   //     hasGreeted.current = true;\r\n+//   //   } else if (isListening && !isSpeaking) {\r\n+//   //     recognition.current.start();\r\n+//   //   }\r\n+//   // }, [isListening, isSpeaking]);\r\n+\r\n+//   useEffect(() => {\r\n+//     if (isListening && !hasGreeted.current) {\r\n+//       speak(\"Hello, I'm Brane. How can I assist you today?\");\r\n+//       hasGreeted.current = true;\r\n+//     } else if (isListening && !isSpeaking && !recognition.current.starting) {\r\n+//       // Check the flag before starting\r\n+//       recognition.current.starting = true; // Set the flag when starting recognition\r\n+//       recognition.current.start();\r\n+//     }\r\n+//   }, [isListening, isSpeaking]);\r\n+\r\n+//   // const startListening = () => {\r\n+//   //   console.log(\"Attempting to start listening.\");\r\n+//   //   if (recognition.current && !recognition.current.starting) {\r\n+//   //     setIsListening(true);\r\n+//   //     recognition.current.starting = true; // Set the flag when starting recognition\r\n+//   //     recognition.current.start();\r\n+//   //     console.log(\"Listening started.\");\r\n+//   //   }\r\n+//   // };\r\n+\r\n+//   // const stopListening = () => {\r\n+//   //   console.log(\"Stopping listening.\");\r\n+\r\n+//   //   setIsListening(false);\r\n+//   //   recognition.current.stop();\r\n+//   //   if (speechSynthesis.current.speaking) {\r\n+//   //     speechSynthesis.current.cancel();\r\n+//   //   }\r\n+//   //   if (restartRecognitionTimeout.current) {\r\n+//   //     clearTimeout(restartRecognitionTimeout.current);\r\n+//   //   }\r\n+//   //   console.log(\"Listening stopped.\");\r\n+//   // };\r\n+//   // Handle start and stop listening logic\r\n+//   const startListening = () => {\r\n+//     console.log(\"Attempting to start listening.\");\r\n+//     if (!recognition.current.starting) {\r\n+//       setIsListening(true);\r\n+//       recognition.current.starting = true;\r\n+//       recognition.current.start();\r\n+//       console.log(\"Listening started.\");\r\n+//     } else {\r\n+//       console.log(\"Recognition already active.\");\r\n+//     }\r\n+//   };\r\n+\r\n+//   const stopListening = () => {\r\n+//     console.log(\"Stopping listening.\");\r\n+//     if (recognition.current.starting) {\r\n+//       setIsListening(false);\r\n+//       recognition.current.starting = false;\r\n+//       recognition.current.stop();\r\n+//       console.log(\"Listening stopped.\");\r\n+//     } else {\r\n+//       console.log(\"Recognition already inactive.\");\r\n+//     }\r\n+//   };\r\n+\r\n+//   // const handleCommandWithFuse = (command) => {\r\n+//   //   const fuse = new Fuse(commands, { keys: [\"utterance\"], threshold: 0.4 });\r\n+//   //   const results = fuse.search(command);\r\n+//   //   const foundCommand = results.length ? results[0].item : null;\r\n+\r\n+//   //   if (foundCommand) {\r\n+//   //     console.log(\"Command found:\", foundCommand.utterance);\r\n+//   //     speak(foundCommand.response);\r\n+//   //     if (foundCommand.route) {\r\n+//   //       navigate(foundCommand.route); // Navigate to the route specified in the command\r\n+//   //     }\r\n+//   //   } else {\r\n+//   //     console.log(\"No command found.\");\r\n+//   //     speak(\"I'm not sure how to respond to that.\");\r\n+//   //   }\r\n+//   // };\r\n+\r\n+//   const handleCommandWithFuse = (command) => {\r\n+//     const fuse = new Fuse(commands, { keys: [\"utterance\"], threshold: 0.4 });\r\n+//     const results = fuse.search(command);\r\n+//     const foundCommand = results.length ? results[0].item : null;\r\n+\r\n+//     if (foundCommand) {\r\n+//       console.log(\"Command found:\", foundCommand.utterance);\r\n+\r\n+//       if (foundCommand.route) {\r\n+//         if (location.pathname !== foundCommand.route) {\r\n+//           navigate(foundCommand.route);\r\n+//           speak(\r\n+//             `Navigating to ${\r\n+//               foundCommand.routeDescription || \"requested page\"\r\n+//             }.`\r\n+//           );\r\n+//         } else {\r\n+//           speak(\r\n+//             `You are already on the ${\r\n+//               foundCommand.routeDescription || \"requested page\"\r\n+//             }.`\r\n+//           );\r\n+//         }\r\n+//       } else if (foundCommand.action) {\r\n+//         foundCommand.action();\r\n+//       }\r\n+\r\n+//       if (foundCommand.response) {\r\n+//         speak(foundCommand.response);\r\n+//       }\r\n+//     } else {\r\n+//       console.log(\"No command found.\");\r\n+//       speak(\"I'm not sure how to respond to that.\");\r\n+//     }\r\n+//   };\r\n+\r\n+//   const commands = [\r\n+//     {\r\n+//       utterance: \"Hello who are you ?\",\r\n+\r\n+//       response:\r\n+//         \"Hi! This is Brane! your Voice bot from Brane Education How can I Assist you Today ?\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"Hello\",\r\n+\r\n+//       response: \"Hi! How can I assist you today?\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"hello\",\r\n+\r\n+//       response: \"Hi! How can I assist you today?\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"Hi.\",\r\n+\r\n+//       response: \"Hello! How can I assist you today?\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"Hey there\",\r\n+\r\n+//       response: \"Hi! How can I assist you today?\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"Good morning Brane.\",\r\n+\r\n+//       response: \"Hey Hiii! Good morning  ! How can I help you?\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"Good afternoon Brane.\",\r\n+\r\n+//       response: \"Hey Hiii! Good after noon ! How can I help you?\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"Good evening Brane.\",\r\n+\r\n+//       response: \"Hey Hiii! Good evening ! How can I help you?\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"can you please take me to login page\",\r\n+//       route: \"/login\",\r\n+//       routeDescription: \"login page\",\r\n+//       response: \"Navigating to the login page.\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"go to login page\",\r\n+//       route: \"/login\",\r\n+//       routeDescription: \"login page\",\r\n+//       response: \"Navigating to the login page.\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"please take me to login page\",\r\n+//       route: \"/login\",\r\n+//       routeDescription: \"login page\",\r\n+//       response: \"Navigating to the login page.\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"Go to login page\",\r\n+//       route: \"/login\",\r\n+//       routeDescription: \"login page\",\r\n+//       response: \"Navigating to the login page.\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"open login page\",\r\n+//       route: \"/login\",\r\n+//       routeDescription: \"login page\",\r\n+//       response: \"Navigating to the login page.\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"can you please take me to signup page\",\r\n+//       route: \"/signup\",\r\n+//       routeDescription: \"signup page\",\r\n+//       response: \"Navigating to the signup page.\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"take me to signup page\",\r\n+//       route: \"/signup\",\r\n+//       routeDescription: \"signup page\",\r\n+//       response: \"Navigating to the signup page.\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"Go to signup page\",\r\n+//       route: \"/signup\",\r\n+//       routeDescription: \"signup page\",\r\n+//       response: \"Navigating to the signup page.\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"open signup page\",\r\n+//       route: \"/signup\",\r\n+//       routeDescription: \"signup page\",\r\n+//       response: \"Navigating to the signup page.\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"what are platform features\",\r\n+\r\n+//       response:\r\n+//         \"Dashboard, Dynamic time table, Learning Networks, Little Masters, Video Based Dictionary, General Search.\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"Features of platform\",\r\n+\r\n+//       response:\r\n+//         \"Dashboard, Dynamic time table, Learning Networks, Little Masters, Video Based Dictionary, General Search.\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"What does the platform offer\",\r\n+\r\n+//       response:\r\n+//         \"Dashboard, Dynamic time table, Learning Networks, Little Masters, Video Based Dictionary, General Search.\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"Say me the features of platform\",\r\n+\r\n+//       response:\r\n+//         \"Dashboard, Dynamic time table, Learning Networks, Little Masters, Video Based Dictionary, General Search.\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"Say me the services of platform\",\r\n+\r\n+//       response:\r\n+//         \"Dashboard, Dynamic time table, Learning Networks, Little Masters, Video Based Dictionary, General Search.\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"tell me the services offered by the platform\",\r\n+\r\n+//       response:\r\n+//         \"Dashboard, Dynamic time table, Learning Networks, Little Masters, Video Based Dictionary, General Search.\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"explain platform services\",\r\n+\r\n+//       response:\r\n+//         \"Dashboard, Dynamic time table, Learning Networks, Little Masters, Video Based Dictionary, General Search.\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"Give me the Parent voice of Julia Harris\",\r\n+\r\n+//       response:\r\n+//         \"Brane education has helped my son a lot in his studies. He improved a lot in his studies and is now able to score good marks in his exams\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"Play today's motivational video\",\r\n+\r\n+//       response: \"I am playing the video\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"Play today's video\",\r\n+\r\n+//       response: \"I am playing Motivational video\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"Leaders Voice\",\r\n+\r\n+//       response:\r\n+//         \"This Voice-interactive AI Platform is a game Changer. It revolutionizes education.\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"Curriculum Supported by Brane Education\",\r\n+\r\n+//       response:\r\n+//         \"we support multiple Boards let me say few Telangana State Board Andhra Pradesh Board Maharashtra Board Assam Board\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"Boards supported by the platform\",\r\n+\r\n+//       response:\r\n+//         \"we support multiple Boards let me say few Telangana State Board Andhra Pradesh Board Maharashtra Board Assam Board\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"Curriculum\",\r\n+\r\n+//       response:\r\n+//         \"we support multiple Boards let me say few Telangana State Board Andhra Pradesh Board Maharashtra Board Assam Board\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"Go to landing page\",\r\n+\r\n+//       response: \"Okay, I am taking you to the landing page.\",\r\n+\r\n+//       route: \"/childpage\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"take me to landing page\",\r\n+\r\n+//       response: \"Okay, I am taking you to the landing page.\",\r\n+\r\n+//       route: \"/childpage\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"move to landing page\",\r\n+\r\n+//       response: \"Okay, I am taking you to the landing page.\",\r\n+\r\n+//       route: \"/childpage\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"roll back to landing page\",\r\n+\r\n+//       response: \"Okay, I am taking you to the landing page.\",\r\n+\r\n+//       route: \"/childpage\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"move to landing page\",\r\n+\r\n+//       response: \"Okay, I am taking you to the landing page.\",\r\n+\r\n+//       route: \"/childpage\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"what is today's quote\",\r\n+\r\n+//       response:\r\n+//         \"Determination is the power that sees us through all our frustration and obstacles. It helps in building our willpower which is the very basis of success.\",\r\n+\r\n+//       // route: \"/childpage\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"Today's Inspirational quote\",\r\n+\r\n+//       response:\r\n+//         \"Determination is the power that sees us through all our frustration and obstacles. It helps in building our willpower which is the very basis of success.\",\r\n+\r\n+//       // route: \"/childpage\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"say me today's quote\",\r\n+\r\n+//       response:\r\n+//         \"Determination is the power that sees us through all our frustration and obstacles. It helps in building our willpower which is the very basis of success.\",\r\n+\r\n+//       // route: \"/childpage\",\r\n+//     },\r\n+//     {\r\n+//       utterance: \"go back\",\r\n+//       response: \"Going back.\",\r\n+//       action: goBack, // Note the use of an action property\r\n+//     },\r\n+//     {\r\n+//       utterance: \"go forward\",\r\n+//       response: \"Going forward.\",\r\n+//       action: goForward,\r\n+//     },\r\n+//     {\r\n+//       utterance: \"play video\",\r\n+//       // response: \"Playing video.\",\r\n+//       action: playVideo,\r\n+//     },\r\n+//     {\r\n+//       utterance: \"pause video\",\r\n+//       // response: \"Pausing video.\",\r\n+//       action: pauseVideo,\r\n+//     },\r\n+//     {\r\n+//       utterance: \"start video\",\r\n+//       // response: \"Playing video.\",\r\n+//       action: playVideo,\r\n+//     },\r\n+//     {\r\n+//       utterance: \"stop video\",\r\n+//       // response: \"Playing video.\",\r\n+//       action: pauseVideo,\r\n+//     },\r\n+//     {\r\n+//       utterance: \"scroll up\",\r\n+//       // response: \"Scrolling up.\",\r\n+//       action: scrollUp,\r\n+//     },\r\n+//     {\r\n+//       utterance: \"scroll down\",\r\n+//       // response: \"Scrolling down.\",\r\n+//       action: scrollDown,\r\n+//     },\r\n+//     {\r\n+//       utterance: \"go up\",\r\n+\r\n+//       // response: \"Scrolling up.\",\r\n+//       action: scrollUp,\r\n+//     },\r\n+//     {\r\n+//       utterance: \"go down\",\r\n+//       // response: \"Scrolling down.\",\r\n+//       action: scrollDown,\r\n+//     },\r\n+//     {\r\n+//       utterance: \"scroll to top\",\r\n+//       action: scrollToTop,\r\n+//     },\r\n+//     {\r\n+//       utterance: \"scroll to bottom\",\r\n+//       action: scrollToBottom,\r\n+//     },\r\n+//   ];\r\n+//   return (\r\n+//     <div className=\"speech-bot-container\">\r\n+//       <div\r\n+//         className={`button-container ${\r\n+//           isListening ? \"voicebotframeactive\" : \"voicebotframe\"\r\n+//         }`}\r\n+//       >\r\n+//         <div onClick={isListening ? stopListening : startListening}>\r\n+//           <iframe\r\n+//             src={\r\n+//               isListening\r\n+//                 ? \"https://lottie.host/?file=a89aca3f-5407-4052-82c3-2048afca7a9f/NpCdWzLSKD.json\"\r\n+//                 : \"https://lottie.host/?file=d2b6cc0e-fe95-4847-85b5-35365fca7e00/vTudpCuPZq.json\"\r\n+//             }\r\n+//             width=\"120\" // Set your desired width\r\n+//             height=\"120\" // Set your desired height\r\n+//             title={isListening ? \"Stop Animation\" : \"Start Animation\"}\r\n+//             className={isListening ? \"voicebotframeactive\" : \"voicebotframe\"}\r\n+//           ></iframe>\r\n+//           {isListening ? (\r\n+//             <div className=\"overlay\" onClick={stopListening}></div>\r\n+//           ) : (\r\n+//             <div className=\"overlay\" onClick={startListening}></div>\r\n+//           )}\r\n+//         </div>\r\n+//       </div>\r\n+//     </div>\r\n+//   );\r\n+// };\r\n+\r\n+// export default VoiceBot;\r\n+\r\n+// All functionalities but messed up\r\n+\r\n+// import React, { useState, useEffect, useRef } from \"react\";\r\n+// import { useNavigate, useLocation } from \"react-router-dom\";\r\n+// import Fuse from \"fuse.js\";\r\n+// import \"./VoiceBot.css\";\r\n+\r\n+// const VoiceBot = ({ videoRef, takeTestRef, goBackRef }) => {\r\n+//   const [isListening, setIsListening] = useState(false);\r\n+//   const [isSpeaking, setIsSpeaking] = useState(false);\r\n+//   const recognition = useRef(null);\r\n+//   const speechSynthesis = useRef(window.speechSynthesis);\r\n+//   const hasGreeted = useRef(false);\r\n+//   const navigate = useNavigate();\r\n+//   const location = useLocation();\r\n+//   const isRecognitionActive = useRef(false);\r\n+\r\n+//   useEffect(() => {\r\n+//     recognition.current = new window.webkitSpeechRecognition();\r\n+//     recognition.current.continuous = true;\r\n+//     recognition.current.interimResults = false;\r\n+//     recognition.current.onresult = onResult;\r\n+//     recognition.current.onend = onRecognitionEnd;\r\n+\r\n+//     return () => {\r\n+//       if (recognition.current) {\r\n+//         recognition.current.abort();\r\n+//       }\r\n+//     };\r\n+//   }, [location.pathname]);\r\n+\r\n+//   const onResult = (event) => {\r\n+//     const resultIndex = event.resultIndex;\r\n+//     const transcript = event.results[resultIndex][0].transcript\r\n+//       .trim()\r\n+//       .toLowerCase();\r\n+\r\n+//     if (event.results[resultIndex].isFinal) {\r\n+//       console.log(`Recognized text: ${transcript}`);\r\n+//       if (transcript.includes(\"brain\")) {\r\n+//         console.log(\"Wake word heard, processing command...\");\r\n+//         handleCommandWithFuse(transcript.replace(\"brain\", \"\"));\r\n+//       }\r\n+//     }\r\n+//   };\r\n+\r\n+//   const startListening = () => {\r\n+//     if (!isRecognitionActive.current) {\r\n+//       setIsListening(true);\r\n+//       recognition.current.start();\r\n+//       isRecognitionActive.current = true;\r\n+//     }\r\n+//   };\r\n+\r\n+//   const stopListening = () => {\r\n+//     if (isRecognitionActive.current) {\r\n+//       setIsListening(false);\r\n+//       recognition.current.stop();\r\n+//       isRecognitionActive.current = false;\r\n+//     }\r\n+//   };\r\n+\r\n+//   const onRecognitionEnd = () => {\r\n+//     isRecognitionActive.current = false;\r\n+//     if (isListening) {\r\n+//       startListening();\r\n+//     }\r\n+//   };\r\n+\r\n+//   const speak = (message) => {\r\n+//     const utterance = new SpeechSynthesisUtterance(message);\r\n+//     utterance.onend = () => {\r\n+//       setIsSpeaking(false);\r\n+//       if (isListening && !isRecognitionActive.current) {\r\n+//         startListening();\r\n+//       }\r\n+//     };\r\n+\r\n+//     setIsSpeaking(true);\r\n+//     if (isRecognitionActive.current) {\r\n+//       stopListening(); // Adjusted to use stopListening\r\n+//     }\r\n+//     speechSynthesis.current.speak(utterance);\r\n+//   };\r\n+\r\n+//   useEffect(() => {\r\n+//     if (isListening && !hasGreeted.current) {\r\n+//       speak(\"Hello, I'm Brane. How can I assist you today?\");\r\n+//       hasGreeted.current = true;\r\n+//     }\r\n+//   }, [isListening]);\r\n+\r\n+//   const goBack = () => {\r\n+//     if (window.history.length > 1) {\r\n+//       navigate(-1);\r\n+//     } else {\r\n+//       speak(\"Can't go back any further.\");\r\n+//     }\r\n+//   };\r\n+\r\n+//   const goForward = () => {\r\n+//     // Unfortunately, there's no direct way to check if you can go forward in the history.\r\n+//     // You might need to manage this state manually based on user navigation.\r\n+//     navigate(1);\r\n+//   };\r\n+\r\n+//   const playVideo = () => {\r\n+//     if (videoRef.current && !videoRef.current.paused) {\r\n+//       speak(\"Video is already playing.\");\r\n+//     } else if (videoRef.current) {\r\n+//       videoRef.current.play();\r\n+//       speak(\"Playing video.\");\r\n+//     } else {\r\n+//       speak(\"No video to play.\");\r\n+//     }\r\n+//   };\r\n+\r\n+//   const pauseVideo = () => {\r\n+//     if (videoRef.current && videoRef.current.paused) {\r\n+//       speak(\"Video is already paused.\");\r\n+//     } else if (videoRef.current) {\r\n+//       videoRef.current.pause();\r\n+//       speak(\"Video paused.\");\r\n+//     } else {\r\n+//       speak(\"No video to pause.\");\r\n+//     }\r\n+//   };\r\n+\r\n+//   const scrollAmount = window.innerHeight * 0.82;\r\n+\r\n+//   const scrollUp = () => {\r\n+//     if (window.pageYOffset === 0) {\r\n+//       speak(\"Already at the top of the page.\");\r\n+//     } else {\r\n+//       window.scrollBy(0, -scrollAmount);\r\n+//       speak(\"Scrolled up.\");\r\n+//     }\r\n+//   };\r\n+\r\n+//   const scrollDown = () => {\r\n+//     const maxScrollTop =\r\n+//       document.documentElement.scrollHeight - window.innerHeight;\r\n+//     if (window.pageYOffset >= maxScrollTop) {\r\n+//       speak(\"Already at the bottom of the page.\");\r\n+//     } else {\r\n+//       window.scrollBy(0, scrollAmount);\r\n+//       speak(\"Scrolled down.\");\r\n+//     }\r\n+//   };\r\n+\r\n+//   const scrollToTop = () => {\r\n+//     if (window.pageYOffset === 0) {\r\n+//       speak(\"Already at the top of the page.\");\r\n+//     } else {\r\n+//       window.scrollTo(0, 0);\r\n+//       speak(\"Scrolled to the top of the page.\");\r\n+//     }\r\n+//   };\r\n+\r\n+//   const scrollToBottom = () => {\r\n+//     const maxScrollTop =\r\n+//       document.documentElement.scrollHeight - window.innerHeight;\r\n+//     if (window.pageYOffset >= maxScrollTop) {\r\n+//       speak(\"Already at the bottom of the page.\");\r\n+//     } else {\r\n+//       window.scrollTo(0, document.body.scrollHeight);\r\n+//       speak(\"Scrolled to the bottom of the page.\");\r\n+//     }\r\n+//   };\r\n+\r\n+//   // const speak = (message) => {\r\n+//   //   const utterance = new SpeechSynthesisUtterance(message);\r\n+//   //   utterance.onend = () => {\r\n+//   //     setIsSpeaking(false);\r\n+//   //     console.log(\"Speaking ended.\");\r\n+//   //     // Only restart recognition if we're still supposed to be listening\r\n+//   //     // if (isListening) {\r\n+//   //     //   if (restartRecognitionTimeout.current) {\r\n+//   //     //     clearTimeout(restartRecognitionTimeout.current);\r\n+//   //     //   }\r\n+//   //     //   restartRecognitionTimeout.current = setTimeout(() => {\r\n+//   //     //     console.log(\"Recognition restarted.\");\r\n+//   //     //     recognition.current.start();\r\n+//   //     //   }, 100); // Delay to prevent immediate restart\r\n+//   //     // }\r\n+//   //     if (isListening && !recognition.current.starting) { // Check the flag before restarting\r\n+//   //       recognition.current.starting = true; // Set the flag when starting recognition\r\n+//   //       recognition.current.start();\r\n+//   //     }\r\n+//   //   };\r\n+\r\n+//   //   setIsSpeaking(true);\r\n+//   //   console.log(\"Speaking started.\");\r\n+//   //   recognition.current.stop(); // Stop recognition when the bot starts speaking\r\n+//   //   speechSynthesis.current.speak(utterance);\r\n+//   // };\r\n+\r\n+//   // const onRecognitionEnd = () => {\r\n+//   //   console.log(\"Recognition ended.\");\r\n+//   //   setIsRecognitionActive(false); // Update state when recognition ends\r\n+//   //   recognition.current.starting = false; // Reset the flag when recognition ends\r\n+//   //   // We now check if the recognition is already running before starting it again\r\n+//   //   if (isListening && !isSpeaking && !recognition.current?.starting) {\r\n+//   //     console.log(\"Restarting recognition.\");\r\n+//   //     recognition.current.start();\r\n+//   //   }\r\n+//   // };\r\n+\r\n+//   // useEffect(() => {\r\n+//   //   if (isListening && !hasGreeted.current) {\r\n+//   //     speak(\"Hello, I'm Brane. How can I assist you today?\");\r\n+//   //     hasGreeted.current = true;\r\n+//   //   } else if (isListening && !isSpeaking) {\r\n+//   //     recognition.current.start();\r\n+//   //   }\r\n+//   // }, [isListening, isSpeaking]);\r\n+\r\n+//   // const startListening = () => {\r\n+//   //   console.log(\"Attempting to start listening.\");\r\n+//   //   if (recognition.current && !recognition.current.starting) {\r\n+//   //     setIsListening(true);\r\n+//   //     recognition.current.starting = true; // Set the flag when starting recognition\r\n+//   //     recognition.current.start();\r\n+//   //     console.log(\"Listening started.\");\r\n+//   //   }\r\n+//   // };\r\n+\r\n+//   // const stopListening = () => {\r\n+//   //   console.log(\"Stopping listening.\");\r\n+\r\n+//   //   setIsListening(false);\r\n+//   //   recognition.current.stop();\r\n+//   //   if (speechSynthesis.current.speaking) {\r\n+//   //     speechSynthesis.current.cancel();\r\n+//   //   }\r\n+//   //   if (restartRecognitionTimeout.current) {\r\n+//   //     clearTimeout(restartRecognitionTimeout.current);\r\n+//   //   }\r\n+//   //   console.log(\"Listening stopped.\");\r\n+//   // };\r\n+//   // Handle start and stop listening logic\r\n+\r\n+//   useEffect(() => {\r\n+//     if (isListening && !hasGreeted.current) {\r\n+//       speak(\"Hello, I'm Brane. How can I assist you today?\");\r\n+//       hasGreeted.current = true;\r\n+//     }\r\n+//   }, [isListening]);\r\n+\r\n+//   // const handleCommandWithFuse = (command) => {\r\n+//   //   const fuse = new Fuse(commands, { keys: [\"utterance\"], threshold: 0.4 });\r\n+//   //   const results = fuse.search(command);\r\n+//   //   const foundCommand = results.length ? results[0].item : null;\r\n+\r\n+//   //   if (foundCommand) {\r\n+//   //     console.log(\"Command found:\", foundCommand.utterance);\r\n+//   //     speak(foundCommand.response);\r\n+//   //     if (foundCommand.route) {\r\n+//   //       navigate(foundCommand.route); // Navigate to the route specified in the command\r\n+//   //     }\r\n+//   //   } else {\r\n+//   //     console.log(\"No command found.\");\r\n+//   //     speak(\"I'm not sure how to respond to that.\");\r\n+//   //   }\r\n+//   // };\r\n+\r\n+//   const handleCommandWithFuse = (command) => {\r\n+//     const fuse = new Fuse(commands, { keys: [\"utterance\"], threshold: 0.4 });\r\n+//     const results = fuse.search(command);\r\n+//     const foundCommand = results.length ? results[0].item : null;\r\n+\r\n+//     if (foundCommand) {\r\n+//       console.log(\"Command found:\", foundCommand.utterance);\r\n+\r\n+//       if (foundCommand.action) {\r\n+//         foundCommand.action();\r\n+//       } else if (foundCommand.route) {\r\n+//         navigate(foundCommand.route);\r\n+//       }\r\n+\r\n+//       if (foundCommand.response) {\r\n+//         speak(foundCommand.response);\r\n+//       }\r\n+//     } else {\r\n+//       console.log(\"No command found.\");\r\n+//       speak(\"I'm not sure how to respond to that.\");\r\n+//     }\r\n+//   };\r\n+\r\n+//   const commands = [\r\n+//     {\r\n+//       utterance: \"Hello who are you ?\",\r\n+\r\n+//       response:\r\n+//         \"Hi! This is Brane! your Voice bot from Brane Education How can I Assist you Today ?\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"Hello\",\r\n+\r\n+//       response: \"Hi! How can I assist you today?\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"hello\",\r\n+\r\n+//       response: \"Hi! How can I assist you today?\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"Hi.\",\r\n+\r\n+//       response: \"Hello! How can I assist you today?\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"Hey there\",\r\n+\r\n+//       response: \"Hi! How can I assist you today?\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"Good morning Brane.\",\r\n+\r\n+//       response: \"Hey Hiii! Good morning  ! How can I help you?\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"Good afternoon Brane.\",\r\n+\r\n+//       response: \"Hey Hiii! Good after noon ! How can I help you?\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"Good evening Brane.\",\r\n+\r\n+//       response: \"Hey Hiii! Good evening ! How can I help you?\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"can you please take me to login page\",\r\n+//       route: \"/login\",\r\n+//       routeDescription: \"login page\",\r\n+//       response: \"Navigating to the login page.\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"go to login page\",\r\n+//       route: \"/login\",\r\n+//       routeDescription: \"login page\",\r\n+//       response: \"Navigating to the login page.\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"please take me to login page\",\r\n+//       route: \"/login\",\r\n+//       routeDescription: \"login page\",\r\n+//       response: \"Navigating to the login page.\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"Go to login page\",\r\n+//       route: \"/login\",\r\n+//       routeDescription: \"login page\",\r\n+//       response: \"Navigating to the login page.\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"open login page\",\r\n+//       route: \"/login\",\r\n+//       routeDescription: \"login page\",\r\n+//       response: \"Navigating to the login page.\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"can you please take me to signup page\",\r\n+//       route: \"/signup\",\r\n+//       routeDescription: \"signup page\",\r\n+//       response: \"Navigating to the signup page.\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"take me to signup page\",\r\n+//       route: \"/signup\",\r\n+//       routeDescription: \"signup page\",\r\n+//       response: \"Navigating to the signup page.\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"Go to signup page\",\r\n+//       route: \"/signup\",\r\n+//       routeDescription: \"signup page\",\r\n+//       response: \"Navigating to the signup page.\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"open signup page\",\r\n+//       route: \"/signup\",\r\n+//       routeDescription: \"signup page\",\r\n+//       response: \"Navigating to the signup page.\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"what are platform features\",\r\n+\r\n+//       response:\r\n+//         \"Dashboard, Dynamic time table, Learning Networks, Little Masters, Video Based Dictionary, General Search.\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"Features of platform\",\r\n+\r\n+//       response:\r\n+//         \"Dashboard, Dynamic time table, Learning Networks, Little Masters, Video Based Dictionary, General Search.\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"What does the platform offer\",\r\n+\r\n+//       response:\r\n+//         \"Dashboard, Dynamic time table, Learning Networks, Little Masters, Video Based Dictionary, General Search.\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"Say me the features of platform\",\r\n+\r\n+//       response:\r\n+//         \"Dashboard, Dynamic time table, Learning Networks, Little Masters, Video Based Dictionary, General Search.\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"Say me the services of platform\",\r\n+\r\n+//       response:\r\n+//         \"Dashboard, Dynamic time table, Learning Networks, Little Masters, Video Based Dictionary, General Search.\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"tell me the services offered by the platform\",\r\n+\r\n+//       response:\r\n+//         \"Dashboard, Dynamic time table, Learning Networks, Little Masters, Video Based Dictionary, General Search.\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"explain platform services\",\r\n+\r\n+//       response:\r\n+//         \"Dashboard, Dynamic time table, Learning Networks, Little Masters, Video Based Dictionary, General Search.\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"Give me the Parent voice of Julia Harris\",\r\n+\r\n+//       response:\r\n+//         \"Brane education has helped my son a lot in his studies. He improved a lot in his studies and is now able to score good marks in his exams\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"Play today's motivational video\",\r\n+\r\n+//       response: \"I am playing the video\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"Play today's video\",\r\n+\r\n+//       response: \"I am playing Motivational video\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"Leaders Voice\",\r\n+\r\n+//       response:\r\n+//         \"This Voice-interactive AI Platform is a game Changer. It revolutionizes education.\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"Curriculum Supported by Brane Education\",\r\n+\r\n+//       response:\r\n+//         \"we support multiple Boards let me say few Telangana State Board Andhra Pradesh Board Maharashtra Board Assam Board\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"Boards supported by the platform\",\r\n+\r\n+//       response:\r\n+//         \"we support multiple Boards let me say few Telangana State Board Andhra Pradesh Board Maharashtra Board Assam Board\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"Curriculum\",\r\n+\r\n+//       response:\r\n+//         \"we support multiple Boards let me say few Telangana State Board Andhra Pradesh Board Maharashtra Board Assam Board\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"Go to landing page\",\r\n+\r\n+//       response: \"Okay, I am taking you to the landing page.\",\r\n+\r\n+//       route: \"/childpage\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"take me to landing page\",\r\n+\r\n+//       response: \"Okay, I am taking you to the landing page.\",\r\n+\r\n+//       route: \"/childpage\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"move to landing page\",\r\n+\r\n+//       response: \"Okay, I am taking you to the landing page.\",\r\n+\r\n+//       route: \"/childpage\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"roll back to landing page\",\r\n+\r\n+//       response: \"Okay, I am taking you to the landing page.\",\r\n+\r\n+//       route: \"/childpage\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"move to landing page\",\r\n+\r\n+//       response: \"Okay, I am taking you to the landing page.\",\r\n+\r\n+//       route: \"/childpage\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"what is today's quote\",\r\n+\r\n+//       response:\r\n+//         \"Determination is the power that sees us through all our frustration and obstacles. It helps in building our willpower which is the very basis of success.\",\r\n+\r\n+//       // route: \"/childpage\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"Today's Inspirational quote\",\r\n+\r\n+//       response:\r\n+//         \"Determination is the power that sees us through all our frustration and obstacles. It helps in building our willpower which is the very basis of success.\",\r\n+\r\n+//       // route: \"/childpage\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"say me today's quote\",\r\n+\r\n+//       response:\r\n+//         \"Determination is the power that sees us through all our frustration and obstacles. It helps in building our willpower which is the very basis of success.\",\r\n+\r\n+//       // route: \"/childpage\",\r\n+//     },\r\n+//     {\r\n+//       utterance: \"go back\",\r\n+//       response: \"Going back.\",\r\n+//       action: goBack, // Note the use of an action property\r\n+//     },\r\n+//     {\r\n+//       utterance: \"go forward\",\r\n+//       response: \"Going forward.\",\r\n+//       action: goForward,\r\n+//     },\r\n+//     {\r\n+//       utterance: \"play video\",\r\n+//       // response: \"Playing video.\",\r\n+//       action: playVideo,\r\n+//     },\r\n+//     {\r\n+//       utterance: \"pause video\",\r\n+//       // response: \"Pausing video.\",\r\n+//       action: pauseVideo,\r\n+//     },\r\n+//     {\r\n+//       utterance: \"start video\",\r\n+//       // response: \"Playing video.\",\r\n+//       action: playVideo,\r\n+//     },\r\n+//     {\r\n+//       utterance: \"stop video\",\r\n+//       // response: \"Playing video.\",\r\n+//       action: pauseVideo,\r\n+//     },\r\n+//     {\r\n+//       utterance: \"scroll up\",\r\n+//       // response: \"Scrolling up.\",\r\n+//       action: scrollUp,\r\n+//     },\r\n+//     {\r\n+//       utterance: \"scroll down\",\r\n+//       // response: \"Scrolling down.\",\r\n+//       action: scrollDown,\r\n+//     },\r\n+//     {\r\n+//       utterance: \"go up\",\r\n+\r\n+//       // response: \"Scrolling up.\",\r\n+//       action: scrollUp,\r\n+//     },\r\n+//     {\r\n+//       utterance: \"go down\",\r\n+//       // response: \"Scrolling down.\",\r\n+//       action: scrollDown,\r\n+//     },\r\n+//     {\r\n+//       utterance: \"scroll to top\",\r\n+//       action: scrollToTop,\r\n+//     },\r\n+//     {\r\n+//       utterance: \"scroll to bottom\",\r\n+//       action: scrollToBottom,\r\n+//     },\r\n+//     {\r\n+//       utterance: \"go back\",\r\n+//       action: goBackRef?.current?.click, // Use goBackRef directly\r\n+//       response: \"Going back.\",\r\n+//     },\r\n+//     {\r\n+//       utterance: \"take test\",\r\n+//       action: takeTestRef?.current?.click, // Use takeTestRef directly\r\n+//       response: \"Starting the test.\",\r\n+//     },\r\n+//   ];\r\n+//   return (\r\n+//     <div className=\"speech-bot-container\">\r\n+//       <div\r\n+//         className={`button-container ${\r\n+//           isListening ? \"voicebotframeactive\" : \"voicebotframe\"\r\n+//         }`}\r\n+//       >\r\n+//         <div onClick={isListening ? stopListening : startListening}>\r\n+//           <iframe\r\n+//             src={\r\n+//               isListening\r\n+//                 ? \"https://lottie.host/?file=a89aca3f-5407-4052-82c3-2048afca7a9f/NpCdWzLSKD.json\"\r\n+//                 : \"https://lottie.host/?file=d2b6cc0e-fe95-4847-85b5-35365fca7e00/vTudpCuPZq.json\"\r\n+//             }\r\n+//             width=\"120\" // Set your desired width\r\n+//             height=\"120\" // Set your desired height\r\n+//             title={isListening ? \"Stop Animation\" : \"Start Animation\"}\r\n+//             className={isListening ? \"voicebotframeactive\" : \"voicebotframe\"}\r\n+//           ></iframe>\r\n+//           {isListening ? (\r\n+//             <div className=\"overlay\" onClick={stopListening}></div>\r\n+//           ) : (\r\n+//             <div className=\"overlay\" onClick={startListening}></div>\r\n+//           )}\r\n+//         </div>\r\n+//       </div>\r\n+//     </div>\r\n+//   );\r\n+// };\r\n+\r\n+// export default VoiceBot;\r\n"
                },
                {
                    "date": 1700654718205,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -68,14 +68,8 @@\n     historyStack.current.pop();\r\n     forwardStack.current.length = 0; // Clear forward stack on manual navigation\r\n   };\r\n \r\n-  // Add a new entry to the stack whenever navigate is called\r\n-  const customNavigate = (to, options) => {\r\n-    historyStack.current.push(to);\r\n-    navigate(to, options);\r\n-  };\r\n-\r\n   // Listen to popstate events to update the history stack\r\n   useEffect(() => {\r\n     window.addEventListener(\"popstate\", handlePopState);\r\n   }, []);\r\n@@ -102,26 +96,8 @@\n       speak(\"No forward history available.\");\r\n     }\r\n   };\r\n \r\n-  const playVideo = () => {\r\n-    if (videoRef.current) {\r\n-      videoRef.current.play();\r\n-      speak(\"Playing video.\");\r\n-    } else {\r\n-      speak(\"No video to play.\");\r\n-    }\r\n-  };\r\n-\r\n-  const pauseVideo = () => {\r\n-    if (videoRef.current) {\r\n-      videoRef.current.pause();\r\n-      speak(\"Video paused.\");\r\n-    } else {\r\n-      speak(\"No video to pause.\");\r\n-    }\r\n-  };\r\n-\r\n   const scrollAmount = window.innerHeight * 0.82;\r\n \r\n   const scrollUp = () => {\r\n     if (window.pageYOffset === 0) {\r\n@@ -162,24 +138,9 @@\n       speak(\"Scrolled to the bottom of the page.\");\r\n     }\r\n   };\r\n \r\n-  const muteVideo = () => {\r\n-    if (videoRef.current) {\r\n-      setIsMuted(true);\r\n-    } else {\r\n-      speak(\"No video to mute.\");\r\n-    }\r\n-  };\r\n \r\n-  const unmuteVideo = () => {\r\n-    if (videoRef.current) {\r\n-      setIsMuted(false);\r\n-    } else {\r\n-      speak(\"No video to unmute.\");\r\n-    }\r\n-  };\r\n-\r\n   const controlVideo = (videoId, action) => {\r\n     const videoRef = videoRefs.current.get(videoId);\r\n     if (videoRef && videoRef.current) {\r\n       switch (action) {\r\n@@ -3754,3761 +3715,4 @@\n //   );\r\n // };\r\n \r\n // export default VoiceBot;\r\n-import React, { useState, useEffect, useRef } from \"react\";\r\n-import { useNavigate, useLocation } from \"react-router-dom\";\r\n-import Fuse from \"fuse.js\";\r\n-import \"./VoiceBot.css\";\r\n-import chatbotimage from \"../../assets/chatbotgif.gif\";\r\n-\r\n-const VoiceBot = ({ videoRefs }) => {\r\n-  const [isListening, setIsListening] = useState(false);\r\n-  const [isSpeaking, setIsSpeaking] = useState(false);\r\n-  const recognition = useRef(null);\r\n-  const speechSynthesis = useRef(window.speechSynthesis);\r\n-  const [hasGreeted, setHasGreeted] = useState(false);\r\n-  const navigate = useNavigate();\r\n-\r\n-  // Initialize speech recognition\r\n-  useEffect(() => {\r\n-    recognition.current = new window.webkitSpeechRecognition();\r\n-    recognition.current.continuous = true;\r\n-    recognition.current.interimResults = false;\r\n-    recognition.current.onresult = onResult;\r\n-    recognition.current.onend = onRecognitionEnd;\r\n-    recognition.current.starting = false;\r\n-\r\n-    recognition.current.onerror = (event) => {\r\n-      console.error(\"Recognition error:\", event.error);\r\n-      if (isListening && !isSpeaking) {\r\n-        restartRecognition();\r\n-      }\r\n-    };\r\n-\r\n-    return () => {\r\n-      if (recognition.current) {\r\n-        recognition.current.abort();\r\n-      }\r\n-    };\r\n-  }, []);\r\n-\r\n-  useEffect(() => {\r\n-    const checkRecognition = () => {\r\n-      if (isListening && !isSpeaking && !recognition.current.starting) {\r\n-        console.log(\"Restarting recognition because it's not active.\");\r\n-        recognition.current.starting = true;\r\n-        recognition.current.start();\r\n-        console.log(\"Restarted recognition.\");\r\n-      }\r\n-    };\r\n-\r\n-    const recognitionCheckInterval = setInterval(checkRecognition, 500); // Check every .5 second\r\n-\r\n-    return () => {\r\n-      clearInterval(recognitionCheckInterval);\r\n-    };\r\n-  }, [isListening, isSpeaking]);\r\n-\r\n-  const historyStack = useRef([]);\r\n-\r\n-  useEffect(() => {\r\n-    return () => {\r\n-      // Clean up the listener when the component unmounts\r\n-      window.removeEventListener(\"popstate\", handlePopState);\r\n-    };\r\n-  }, []);\r\n-\r\n-  const handlePopState = () => {\r\n-    // This needs to handle both back and forward browser actions\r\n-    // Use some logic to determine whether it's a back or forward action\r\n-    // For simplicity, assume it's always back\r\n-    historyStack.current.pop();\r\n-    forwardStack.current.length = 0; // Clear forward stack on manual navigation\r\n-  };\r\n-\r\n-  // Add a new entry to the stack whenever navigate is called\r\n-  const customNavigate = (to, options) => {\r\n-    historyStack.current.push(to);\r\n-    navigate(to, options);\r\n-  };\r\n-\r\n-  // Listen to popstate events to update the history stack\r\n-  useEffect(() => {\r\n-    window.addEventListener(\"popstate\", handlePopState);\r\n-  }, []);\r\n-\r\n-  const forwardStack = useRef([]);\r\n-\r\n-  const goBack = () => {\r\n-    if (window.history.state && window.history.state.idx > 0) {\r\n-      window.history.back();\r\n-      speak(\"Going back\");\r\n-    } else {\r\n-      speak(\"Can't go back any further.\");\r\n-    }\r\n-  };\r\n-\r\n-  const goForward = () => {\r\n-    if (\r\n-      window.history.state &&\r\n-      window.history.state.idx < window.history.length - 1\r\n-    ) {\r\n-      window.history.forward();\r\n-      speak(\"Going forward\");\r\n-    } else {\r\n-      speak(\"No forward history available.\");\r\n-    }\r\n-  };\r\n-\r\n-  const playVideo = () => {\r\n-    if (videoRef.current) {\r\n-      videoRef.current.play();\r\n-      speak(\"Playing video.\");\r\n-    } else {\r\n-      speak(\"No video to play.\");\r\n-    }\r\n-  };\r\n-\r\n-  const pauseVideo = () => {\r\n-    if (videoRef.current) {\r\n-      videoRef.current.pause();\r\n-      speak(\"Video paused.\");\r\n-    } else {\r\n-      speak(\"No video to pause.\");\r\n-    }\r\n-  };\r\n-\r\n-  const scrollAmount = window.innerHeight * 0.82;\r\n-\r\n-  const scrollUp = () => {\r\n-    if (window.pageYOffset === 0) {\r\n-      speak(\"Already at the top of the page.\");\r\n-    } else {\r\n-      window.scrollBy(0, -scrollAmount);\r\n-      speak(\"Scrolled up.\");\r\n-    }\r\n-  };\r\n-\r\n-  const scrollDown = () => {\r\n-    const maxScrollTop =\r\n-      document.documentElement.scrollHeight - window.innerHeight;\r\n-    if (window.pageYOffset >= maxScrollTop) {\r\n-      speak(\"Already at the bottom of the page.\");\r\n-    } else {\r\n-      window.scrollBy(0, scrollAmount);\r\n-      speak(\"Scrolled down.\");\r\n-    }\r\n-  };\r\n-\r\n-  const scrollToTop = () => {\r\n-    if (window.pageYOffset === 0) {\r\n-      speak(\"Already at the top of the page.\");\r\n-    } else {\r\n-      window.scrollTo(0, 0);\r\n-      speak(\"Scrolled to the top of the page.\");\r\n-    }\r\n-  };\r\n-\r\n-  const scrollToBottom = () => {\r\n-    const maxScrollTop =\r\n-      document.documentElement.scrollHeight - window.innerHeight;\r\n-    if (window.pageYOffset >= maxScrollTop) {\r\n-      speak(\"Already at the bottom of the page.\");\r\n-    } else {\r\n-      window.scrollTo(0, document.body.scrollHeight);\r\n-      speak(\"Scrolled to the bottom of the page.\");\r\n-    }\r\n-  };\r\n-\r\n-  const muteVideo = () => {\r\n-    if (videoRef.current) {\r\n-      setIsMuted(true);\r\n-    } else {\r\n-      speak(\"No video to mute.\");\r\n-    }\r\n-  };\r\n-\r\n-  const unmuteVideo = () => {\r\n-    if (videoRef.current) {\r\n-      setIsMuted(false);\r\n-    } else {\r\n-      speak(\"No video to unmute.\");\r\n-    }\r\n-  };\r\n-\r\n-  const controlVideo = (videoId, action) => {\r\n-    const videoRef = videoRefs.current.get(videoId);\r\n-    if (videoRef && videoRef.current) {\r\n-      switch (action) {\r\n-        case 'play':\r\n-          videoRef.current.play();\r\n-          break;\r\n-        case 'pause':\r\n-          videoRef.current.pause();\r\n-          break;\r\n-        case 'mute':\r\n-          videoRef.current.muted = true;\r\n-          break;\r\n-        case 'unmute':\r\n-          videoRef.current.muted = false;\r\n-          break;\r\n-        case 'fullscreen':\r\n-          if (videoRef.current.requestFullscreen) {\r\n-            videoRef.current.requestFullscreen();\r\n-          } else if (videoRef.current.webkitRequestFullscreen) { // Safari\r\n-            videoRef.current.webkitRequestFullscreen();\r\n-          } else if (videoRef.current.msRequestFullscreen) { // IE11\r\n-            videoRef.current.msRequestFullscreen();\r\n-          }\r\n-          break;\r\n-        case 'exitFullscreen':\r\n-          if (document.exitFullscreen) {\r\n-            document.exitFullscreen();\r\n-          } else if (document.webkitExitFullscreen) { // Safari\r\n-            document.webkitExitFullscreen();\r\n-          } else if (document.msExitFullscreen) { // IE11\r\n-            document.msExitFullscreen();\r\n-          }\r\n-          break;\r\n-        case 'increaseVolume':\r\n-          if (videoRef.current.volume < 1) {\r\n-            videoRef.current.volume = Math.min(1, videoRef.current.volume + 0.1);\r\n-          }\r\n-          break;\r\n-        case 'decreaseVolume':\r\n-          if (videoRef.current.volume > 0) {\r\n-            videoRef.current.volume = Math.max(0, videoRef.current.volume - 0.1);\r\n-          }\r\n-          break;\r\n-        // Add other cases as needed\r\n-      }\r\n-      speak(`${action.charAt(0).toUpperCase() + action.slice(1).replace(/([A-Z])/g, ' $1').toLowerCase()}ing video ${videoId}.`);\r\n-    } else {\r\n-      speak(`Video not found.`);\r\n-    }\r\n-  };\r\n-\r\n-  const speak = (message) => {\r\n-    const utterance = new SpeechSynthesisUtterance(message);\r\n-    utterance.onend = () => {\r\n-      setIsSpeaking(false);\r\n-      // Restart recognition after speaking has ended\r\n-      if (isListening) {\r\n-        restartRecognition();\r\n-      }\r\n-    };\r\n-\r\n-    setIsSpeaking(true);\r\n-    // Stop recognition when the bot starts speaking\r\n-    if (recognition.current) {\r\n-      recognition.current.abort();\r\n-    }\r\n-    speechSynthesis.current.speak(utterance);\r\n-  };\r\n-\r\n-  const restartRecognition = () => {\r\n-    // Check if recognition is not already started and if the bot is set to listen\r\n-    if (\r\n-      recognition.current &&\r\n-      !recognition.current.starting &&\r\n-      isListening &&\r\n-      !isSpeaking\r\n-    ) {\r\n-      recognition.current.abort(); // Ensure any ongoing recognition is stopped\r\n-      recognition.current.starting = true;\r\n-      recognition.current.start();\r\n-    }\r\n-  };\r\n-\r\n-  // Restart recognition when bot finishes speaking and isListening is true\r\n-  useEffect(() => {\r\n-    if (!isSpeaking && isListening) {\r\n-      restartRecognition();\r\n-    }\r\n-  }, [isSpeaking, isListening]);\r\n-\r\n-  const onResult = (event) => {\r\n-    const resultIndex = event.resultIndex;\r\n-    const transcript = event.results[resultIndex][0].transcript\r\n-      .trim()\r\n-      .toLowerCase();\r\n-\r\n-    if (event.results[resultIndex].isFinal) {\r\n-      console.log(`Recognized text: ${transcript}`);\r\n-      if (transcript.includes(\"brain\")) {\r\n-        console.log(\"Wake word heard, processing command...\");\r\n-        handleCommandWithFuse(transcript.replace(\"brain\", \"\"));\r\n-      }\r\n-    }\r\n-  };\r\n-\r\n-  const onRecognitionEnd = () => {\r\n-    recognition.current.starting = false;\r\n-    if (isListening && !isSpeaking) {\r\n-      restartRecognition();\r\n-    }\r\n-  };\r\n-\r\n-  useEffect(() => {\r\n-    if (isListening && !hasGreeted) {\r\n-      speak(\"Hello, I'm Brane. How can I help you today?\");\r\n-      setHasGreeted(true);\r\n-    }\r\n-  }, [isListening, hasGreeted]);\r\n-\r\n-  // Updated startListening function\r\n-  const startListening = () => {\r\n-    setIsListening(true);\r\n-    if (!recognition.current.starting) {\r\n-      restartRecognition();\r\n-    }\r\n-  };\r\n-\r\n-  // Updated stopListening function\r\n-  const stopListening = () => {\r\n-    setIsListening(false);\r\n-    if (speechSynthesis.current.speaking) {\r\n-      speechSynthesis.current.cancel();\r\n-    }\r\n-    recognition.current.abort();\r\n-  };\r\n-\r\n-  const handleCommandWithFuse = (command) => {\r\n-    const fuse = new Fuse(commands, { keys: [\"utterance\"], threshold: 0.4 });\r\n-    const results = fuse.search(command);\r\n-    const foundCommand = results.length ? results[0].item : null;\r\n-\r\n-    if (foundCommand) {\r\n-      console.log(\"Command found:\", foundCommand.utterance);\r\n-\r\n-      if (foundCommand.action) {\r\n-        foundCommand.action();\r\n-      } else if (foundCommand.route) {\r\n-        navigate(foundCommand.route);\r\n-      }\r\n-\r\n-      // Speak after performing the action or navigation\r\n-      speak(foundCommand.response);\r\n-    } else {\r\n-      console.log(\"No command found.\");\r\n-      speak(\"I'm not sure how to respond to that.\");\r\n-    }\r\n-  };\r\n-\r\n-  const commands = [\r\n-    {\r\n-      utterance: \"Hello who are you ?\",\r\n-\r\n-      response:\r\n-        \"Hi! This is Brane! your Voice bot from Brane Education How can I Assist you Today ?\",\r\n-    },\r\n-\r\n-    {\r\n-      utterance: \"Hello\",\r\n-\r\n-      response: \"Hi! How can I assist you today?\",\r\n-    },\r\n-\r\n-    {\r\n-      utterance: \"hello\",\r\n-\r\n-      response: \"Hi! How can I assist you today?\",\r\n-    },\r\n-\r\n-    {\r\n-      utterance: \"Hi.\",\r\n-\r\n-      response: \"Hello! How can I assist you today?\",\r\n-    },\r\n-\r\n-    {\r\n-      utterance: \"Hey there\",\r\n-\r\n-      response: \"Hi! How can I assist you today?\",\r\n-    },\r\n-\r\n-    {\r\n-      utterance: \"Good morning Brane.\",\r\n-\r\n-      response: \"Hey Hiii! Good morning  ! How can I help you?\",\r\n-    },\r\n-\r\n-    {\r\n-      utterance: \"Good afternoon Brane.\",\r\n-\r\n-      response: \"Hey Hiii! Good after noon ! How can I help you?\",\r\n-    },\r\n-\r\n-    {\r\n-      utterance: \"Good evening Brane.\",\r\n-\r\n-      response: \"Hey Hiii! Good evening ! How can I help you?\",\r\n-    },\r\n-\r\n-    {\r\n-      utterance: \"take me to homepage\",\r\n-\r\n-      route: \"/\",\r\n-\r\n-      response: \"You're in Homepage now\",\r\n-    },\r\n-    {\r\n-      utterance: \"open homepage\",\r\n-\r\n-      route: \"/\",\r\n-\r\n-      response: \"You're in Homepage now\",\r\n-    },\r\n-    {\r\n-      utterance: \"go to homepage\",\r\n-\r\n-      route: \"/\",\r\n-\r\n-      response: \"You're in Homepage now\",\r\n-    },\r\n-    {\r\n-      utterance: \"go back to homepage\",\r\n-\r\n-      route: \"/\",\r\n-\r\n-      response: \"You're in Homepage now\",\r\n-    },\r\n-    {\r\n-      utterance: \"can you please take me to login page\",\r\n-\r\n-      route: \"/login\",\r\n-\r\n-      response: \"Here's the Login Page, Please Login\",\r\n-    },\r\n-\r\n-    {\r\n-      utterance: \"please take me to login page\",\r\n-\r\n-      route: \"/login\",\r\n-\r\n-      response: \"Here's the Login Page, Please Login\",\r\n-    },\r\n-\r\n-    {\r\n-      utterance: \"Go to login page\",\r\n-\r\n-      route: \"/login\",\r\n-\r\n-      response: \"Here's the Login Page, Please Login\",\r\n-    },\r\n-\r\n-    {\r\n-      utterance: \"open login page\",\r\n-\r\n-      route: \"/login\",\r\n-\r\n-      response: \"Here's the Login Page, Please Login\",\r\n-    },\r\n-\r\n-    {\r\n-      utterance: \"can you please take me to signup page\",\r\n-\r\n-      route: \"/signup\",\r\n-\r\n-      response: \"Here's the signup page. Please proceed With Registration.\",\r\n-    },\r\n-\r\n-    {\r\n-      utterance: \"take me to signup page\",\r\n-\r\n-      route: \"/signup\",\r\n-\r\n-      response: \"Here's the signup page. Please proceed With Registration.\",\r\n-    },\r\n-\r\n-    {\r\n-      utterance: \"Go to signup page\",\r\n-\r\n-      route: \"/signup\",\r\n-\r\n-      response: \"Here's the signup page. Please proceed With Registration.\",\r\n-    },\r\n-\r\n-    {\r\n-      utterance: \"open signup page\",\r\n-\r\n-      route: \"/signup\",\r\n-\r\n-      response: \"Here's the signup page. Please proceed With Registration.\",\r\n-    },\r\n-\r\n-    {\r\n-      utterance: \"Go to face id\",\r\n-\r\n-      route: \"/login/faceid\",\r\n-\r\n-      response: \"Here's Face ID Login. Please proceed.\",\r\n-    },\r\n-\r\n-    {\r\n-      utterance: \"Go to face id login\",\r\n-\r\n-      route: \"/login/faceid\",\r\n-\r\n-      response: \"Here's Face ID Login. Please proceed.\",\r\n-    },\r\n-    {\r\n-      utterance: \"Go to face login\",\r\n-\r\n-      route: \"/login/faceid\",\r\n-\r\n-      response: \"Here's Face ID Login. Please proceed.\",\r\n-    },\r\n-\r\n-    {\r\n-      utterance: \"login with face id\",\r\n-\r\n-      route: \"/login/faceid\",\r\n-\r\n-      response: \"Here's Face ID Login. Please proceed.\",\r\n-    },\r\n-\r\n-    {\r\n-      utterance: \"login with face\",\r\n-\r\n-      route: \"/login/faceid\",\r\n-\r\n-      response: \"Here's Face ID Login. Please proceed.\",\r\n-    },\r\n-\r\n-    {\r\n-      utterance: \"i want to login with face\",\r\n-\r\n-      route: \"/login/faceid\",\r\n-\r\n-      response: \"Here's Face ID Login. Please proceed.\",\r\n-    },\r\n-\r\n-    {\r\n-      utterance: \"login with voice\",\r\n-\r\n-      route: \"/login/voiceid\",\r\n-\r\n-      response: \"Here's Voice Login. Please proceed.\",\r\n-    },\r\n-\r\n-    {\r\n-      utterance: \"i want to login with voice\",\r\n-\r\n-      route: \"/login/voiceid\",\r\n-\r\n-      response: \"Here's Voice Login. Please proceed.\",\r\n-    },\r\n-\r\n-    {\r\n-      utterance: \"go to voice login\",\r\n-\r\n-      route: \"/login/voiceid\",\r\n-\r\n-      response: \"Here's Voice Login. Please proceed.\",\r\n-    },\r\n-\r\n-    {\r\n-      utterance: \"login with voice\",\r\n-\r\n-      route: \"/login/voiceid\",\r\n-\r\n-      response: \"Here's Voice Login. Please proceed.\",\r\n-    },\r\n-\r\n-    {\r\n-      utterance: \"login with mobile\",\r\n-\r\n-      route: \"/login/mobile\",\r\n-\r\n-      response: \"Here's Mobile Login. Please proceed.\",\r\n-    },\r\n-\r\n-    {\r\n-      utterance: \"i want to login with mobile\",\r\n-\r\n-      route: \"/login/mobile\",\r\n-\r\n-      response: \"Here's Mobile Login. Please proceed.\",\r\n-    },\r\n-    {\r\n-      utterance: \"go to mobile login\",\r\n-\r\n-      route: \"/login/mobile\",\r\n-\r\n-      response: \"Here's Mobile Login. Please proceed.\",\r\n-    },\r\n-    {\r\n-      utterance: \"go to about page\",\r\n-\r\n-      route: \"/aboutus\",\r\n-\r\n-      response: \"This is About us.\",\r\n-    },\r\n-    {\r\n-      utterance: \"go to about us page\",\r\n-\r\n-      route: \"/aboutus\",\r\n-\r\n-      response: \"This is About us.\",\r\n-    },\r\n-    {\r\n-      utterance: \"open about us page\",\r\n-\r\n-      route: \"/aboutus\",\r\n-\r\n-      response: \"This is About us.\",\r\n-    },\r\n-    {\r\n-      utterance: \"open about page\",\r\n-\r\n-      route: \"/aboutus\",\r\n-\r\n-      response: \"This is About us.\",\r\n-    },\r\n-    {\r\n-      utterance: \"take me to about page\",\r\n-\r\n-      route: \"/aboutus\",\r\n-\r\n-      response: \"This is About us.\",\r\n-    },\r\n-    {\r\n-      utterance: \"take me to about us page\",\r\n-\r\n-      route: \"/aboutus\",\r\n-\r\n-      response: \"This is About us.\",\r\n-    },\r\n-\r\n-    {\r\n-      utterance: \"go to contact page\",\r\n-\r\n-      route: \"/contactus\",\r\n-\r\n-      response: \"You can contact us from here\",\r\n-    },\r\n-    {\r\n-      utterance: \"go to contact us page\",\r\n-\r\n-      route: \"/contactus\",\r\n-\r\n-      response: \"You can contact us from here\",\r\n-    },\r\n-    {\r\n-      utterance: \"open contact us page\",\r\n-\r\n-      route: \"/contactus\",\r\n-\r\n-      response: \"You can contact us from here\",\r\n-    },\r\n-    {\r\n-      utterance: \"open contact page\",\r\n-\r\n-      route: \"/contactus\",\r\n-\r\n-      response: \"You can contact us from here\",\r\n-    },\r\n-    {\r\n-      utterance: \"take me to about page\",\r\n-\r\n-      route: \"/contactus\",\r\n-\r\n-      response: \"You can contact us from here\",\r\n-    },\r\n-    {\r\n-      utterance: \"take me to contact us page\",\r\n-\r\n-      route: \"/contactus\",\r\n-\r\n-      response: \"You can contact us from here\",\r\n-    },\r\n-\r\n-    {\r\n-      utterance: \"what are platform features\",\r\n-\r\n-      response:\r\n-        \"Dashboard, Dynamic time table, Learning Networks, Little Masters, Video Based Dictionary, General Search.\",\r\n-    },\r\n-\r\n-    {\r\n-      utterance: \"Features of platform\",\r\n-\r\n-      response:\r\n-        \"Dashboard, Dynamic time table, Learning Networks, Little Masters, Video Based Dictionary, General Search.\",\r\n-    },\r\n-\r\n-    {\r\n-      utterance: \"What does the platform offer\",\r\n-\r\n-      response:\r\n-        \"Dashboard, Dynamic time table, Learning Networks, Little Masters, Video Based Dictionary, General Search.\",\r\n-    },\r\n-\r\n-    {\r\n-      utterance: \"Say me the features of platform\",\r\n-\r\n-      response:\r\n-        \"Dashboard, Dynamic time table, Learning Networks, Little Masters, Video Based Dictionary, General Search.\",\r\n-    },\r\n-\r\n-    {\r\n-      utterance: \"Say me the services of platform\",\r\n-\r\n-      response:\r\n-        \"Dashboard, Dynamic time table, Learning Networks, Little Masters, Video Based Dictionary, General Search.\",\r\n-    },\r\n-\r\n-    {\r\n-      utterance: \"tell me the services offered by the platform\",\r\n-\r\n-      response:\r\n-        \"Dashboard, Dynamic time table, Learning Networks, Little Masters, Video Based Dictionary, General Search.\",\r\n-    },\r\n-\r\n-    {\r\n-      utterance: \"explain platform services\",\r\n-\r\n-      response:\r\n-        \"Dashboard, Dynamic time table, Learning Networks, Little Masters, Video Based Dictionary, General Search.\",\r\n-    },\r\n-\r\n-    {\r\n-      utterance: \"Give me the Parent voice of Julia Harris\",\r\n-\r\n-      response:\r\n-        \"Brane education has helped my son a lot in his studies. He improved a lot in his studies and is now able to score good marks in his exams\",\r\n-    },\r\n-\r\n-    {\r\n-      utterance: \"Leaders Voice\",\r\n-\r\n-      response:\r\n-        \"This Voice-interactive AI Platform is a game Changer. It revolutionizes education.\",\r\n-    },\r\n-\r\n-    {\r\n-      utterance: \"Curriculum Supported by Brane Education\",\r\n-\r\n-      response:\r\n-        \"we support multiple Boards let me say few Telangana State Board Andhra Pradesh Board Maharashtra Board Assam Board\",\r\n-    },\r\n-\r\n-    {\r\n-      utterance: \"Boards supported by the platform\",\r\n-\r\n-      response:\r\n-        \"we support multiple Boards let me say few Telangana State Board Andhra Pradesh Board Maharashtra Board Assam Board\",\r\n-    },\r\n-\r\n-    {\r\n-      utterance: \"Curriculum\",\r\n-\r\n-      response:\r\n-        \"we support multiple Boards let me say few Telangana State Board Andhra Pradesh Board Maharashtra Board Assam Board\",\r\n-    },\r\n-\r\n-    {\r\n-      utterance: \"what is today's quote\",\r\n-\r\n-      response:\r\n-        \"Determination is the power that sees us through all our frustration and obstacles. It helps in building our willpower which is the very basis of success.\",\r\n-\r\n-      route: \"/childpage\",\r\n-    },\r\n-\r\n-    {\r\n-      utterance: \"Today's Inspirational quote\",\r\n-\r\n-      response:\r\n-        \"Determination is the power that sees us through all our frustration and obstacles. It helps in building our willpower which is the very basis of success.\",\r\n-\r\n-      route: \"/childpage\",\r\n-    },\r\n-\r\n-    {\r\n-      utterance: \"say me today's quote\",\r\n-\r\n-      response:\r\n-        \"Determination is the power that sees us through all our frustration and obstacles. It helps in building our willpower which is the very basis of success.\",\r\n-\r\n-      route: \"/childpage\",\r\n-    },\r\n-    {\r\n-      utterance: \"go back\",\r\n-      response: \"\",\r\n-      action: goBack, // Note the use of an action property\r\n-    },\r\n-    {\r\n-      utterance: \"go forward\",\r\n-      response: \"\",\r\n-      action: goForward,\r\n-    },\r\n-    // {\r\n-    //   utterance: \"play video\",\r\n-    //   // response: \"Playing video.\",\r\n-    //   action: playVideo,\r\n-    // },\r\n-    // {\r\n-    //   utterance: \"pause video\",\r\n-    //   // response: \"Pausing video.\",\r\n-    //   action: pauseVideo,\r\n-    // },\r\n-    // {\r\n-    //   utterance: \"start video\",\r\n-    //   // response: \"Playing video.\",\r\n-    //   action: playVideo,\r\n-    // },\r\n-    // {\r\n-    //   utterance: \"stop video\",\r\n-    //   // response: \"Playing video.\",\r\n-    //   action: pauseVideo,\r\n-    // },\r\n-    {\r\n-      utterance: \"scroll up\",\r\n-      // response: \"Scrolling up.\",\r\n-      action: scrollUp,\r\n-    },\r\n-    {\r\n-      utterance: \"scroll down\",\r\n-      // response: \"Scrolling down.\",\r\n-      action: scrollDown,\r\n-    },\r\n-    {\r\n-      utterance: \"go up\",\r\n-\r\n-      // response: \"Scrolling up.\",\r\n-      action: scrollUp,\r\n-    },\r\n-    {\r\n-      utterance: \"go down\",\r\n-      // response: \"Scrolling down.\",\r\n-      action: scrollDown,\r\n-    },\r\n-    {\r\n-      utterance: \"scroll to top\",\r\n-      action: scrollToTop,\r\n-    },\r\n-    {\r\n-      utterance: \"scroll to bottom\",\r\n-      action: scrollToBottom,\r\n-    },\r\n-    {\r\n-      utterance: \"brane stop\",\r\n-      action: stopListening,\r\n-    },\r\n-    {\r\n-      utterance: \"brane turn off\",\r\n-      action: stopListening,\r\n-    },\r\n-    {\r\n-      utterance: \"brane stop the bot\",\r\n-      action: stopListening,\r\n-    },\r\n-    // {\r\n-    //   utterance: \"mute the video\",\r\n-    //   action: muteVideo,\r\n-    // },\r\n-    // {\r\n-    //   utterance: \"unmute the video\",\r\n-    //   action: unmuteVideo,\r\n-    // },\r\n-    // {\r\n-    //   utterance: \"stop the video sound\",\r\n-    //   action: muteVideo,\r\n-    // },\r\n-    // {\r\n-    //   utterance: \"play the video sound\",\r\n-    //   action: unmuteVideo,\r\n-    // },\r\n-    {\r\n-      utterance: \"play transform education using ai video\",\r\n-      action: () => controlVideo('ourProjectsVideo', 'play'),\r\n-    },\r\n-    {\r\n-      utterance: \"start transform education using ai video\",\r\n-      action: () => controlVideo('ourProjectsVideo', 'play'),\r\n-    },\r\n-    {\r\n-      utterance: \"pause transform education using ai video\",\r\n-      action: () => controlVideo('ourProjectsVideo', 'pause'),\r\n-    },\r\n-    {\r\n-      utterance: \"stop transform education using ai video\",\r\n-      action: () => controlVideo('ourProjectsVideo', 'pause'),\r\n-    },\r\n-\r\n-    {\r\n-      utterance: \"mute transform education using ai video\",\r\n-      action: () => controlVideo('ourProjectsVideo', 'mute'),\r\n-    },\r\n-    {\r\n-      utterance: \"unmute transform education using ai video\",\r\n-      action: () => controlVideo('ourProjectsVideo', 'unmute'),\r\n-    },\r\n-    {\r\n-      utterance: \"fullscreen transform education using ai video\",\r\n-      action: () => controlVideo('ourProjectsVideo', 'fullscreen'),\r\n-    },\r\n-    {\r\n-      utterance: \"exit fullscreen transform education using ai video\",\r\n-      action: () => controlVideo('ourProjectsVideo', 'exitFullscreen'),\r\n-    },\r\n-    {\r\n-      utterance: \"increase volume transform education using ai video\",\r\n-      action: () => controlVideo('ourProjectsVideo', 'increaseVolume'),\r\n-    },\r\n-    {\r\n-      utterance: \"decrease volume transform education using ai video\",\r\n-      action: () => controlVideo('ourProjectsVideo', 'decreaseVolume'),\r\n-    },\r\n-  ];\r\n-\r\n-  return (\r\n-    <div className=\"speech-bot-container\">\r\n-      <div\r\n-        className={`button-container ${\r\n-          isListening ? \"voicebotframeactive\" : \"voicebotframe\"\r\n-        }`}\r\n-      >\r\n-        {/* <button onClick={isListening ? stopListening : startListening}>\r\n-          {isListening ? \"Stop\" : \"Start\"} Animation\r\n-        </button> */}\r\n-        <img\r\n-          className=\"botimage\"\r\n-          src={chatbotimage}\r\n-          alt=\"\"\r\n-          onClick={isListening ? stopListening : startListening}\r\n-        />\r\n-      </div>\r\n-    </div>\r\n-  );\r\n-};\r\n-\r\n-export default VoiceBot;\r\n-\r\n-{\r\n-  /* // import React, { useState, useEffect, useRef } from \"react\";\r\n-// import { useNavigate, useLocation } from \"react-router-dom\";\r\n-// import Fuse from \"fuse.js\";\r\n-// import \"./VoiceBot.css\";\r\n-\r\n-// const VoiceBot = ({ videoRef }) => {\r\n-//   const [isListening, setIsListening] = useState(false);\r\n-//   const [isSpeaking, setIsSpeaking] = useState(false);\r\n-//   const recognition = useRef(null);\r\n-//   const speechSynthesis = useRef(window.speechSynthesis);\r\n-//   const [hasGreeted, setHasGreeted] = useState(false);\r\n-//   const navigate = useNavigate();\r\n-\r\n-//   useEffect(() => {\r\n-//     recognition.current = new window.webkitSpeechRecognition();\r\n-//     recognition.current.continuous = true;\r\n-//     recognition.current.interimResults = false;\r\n-//     recognition.current.onresult = onResult;\r\n-//     recognition.current.onend = onRecognitionEnd;\r\n-//     recognition.current.starting = false;\r\n-\r\n-//     // Simplified error handling, removed specific handling for 'no-speech'\r\n-//     recognition.current.onerror = (event) => {\r\n-//       console.error(\"Recognition error:\", event.error);\r\n-//       // Check if listening is true and the bot isn't speaking\r\n-//       if (isListening && !isSpeaking) {\r\n-//         // Restart recognition\r\n-//         restartRecognition();\r\n-//       }\r\n-//     };\r\n-\r\n-//     return () => {\r\n-//       if (recognition.current) {\r\n-//         recognition.current.abort();\r\n-//       }\r\n-//     };\r\n-//   }, []);\r\n-\r\n-//   useEffect(() => {\r\n-//     const checkRecognition = () => {\r\n-//       if (isListening && !isSpeaking && !recognition.current.starting) {\r\n-//         console.log(\"Restarting recognition because it's not active.\");\r\n-//         recognition.current.starting = true;\r\n-//         recognition.current.start();\r\n-//         console.log(\"Restarted recognition.\");\r\n-//       }\r\n-//     };\r\n-\r\n-//     const recognitionCheckInterval = setInterval(checkRecognition, 100); // Check every 1 second\r\n-\r\n-//     return () => {\r\n-//       clearInterval(recognitionCheckInterval);\r\n-//     };\r\n-//   }, [isListening, isSpeaking]);\r\n-\r\n-//   const restartRecognition = () => {\r\n-//     if (recognition.current.starting) {\r\n-//       console.log(\"Recognition is already starting or running.\");\r\n-//       return;\r\n-//     }\r\n-\r\n-//     recognition.current.abort(); // Stop any existing recognition process\r\n-//     recognition.current.starting = true;\r\n-//     recognition.current.start();\r\n-//     console.log(\"Recognition restarted.\");\r\n-//   };\r\n-\r\n-//   const historyStack = useRef([]);\r\n-\r\n-//   useEffect(() => {\r\n-//     return () => {\r\n-//       // Clean up the listener when the component unmounts\r\n-//       window.removeEventListener(\"popstate\", handlePopState);\r\n-//     };\r\n-//   }, []);\r\n-\r\n-//   const handlePopState = () => {\r\n-//     // This needs to handle both back and forward browser actions\r\n-//     // Use some logic to determine whether it's a back or forward action\r\n-//     // For simplicity, assume it's always back\r\n-//     historyStack.current.pop();\r\n-//     forwardStack.current.length = 0; // Clear forward stack on manual navigation\r\n-//   };\r\n-  \r\n-\r\n-//   // Add a new entry to the stack whenever navigate is called\r\n-//   const customNavigate = (to, options) => {\r\n-//     historyStack.current.push(to);\r\n-//     navigate(to, options);\r\n-//   };\r\n-\r\n-//   // Listen to popstate events to update the history stack\r\n-//   useEffect(() => {\r\n-//     window.addEventListener(\"popstate\", handlePopState);\r\n-//   }, []);\r\n-\r\n-//   const forwardStack = useRef([]);\r\n-\r\n-//   const goBack = () => {\r\n-//     if (window.history.state && window.history.state.idx > 0) {\r\n-//       window.history.back();\r\n-//       speak(\"Going back\");\r\n-//     } else {\r\n-//       speak(\"Can't go back any further.\");\r\n-//     }\r\n-//   };\r\n-\r\n-//   const goForward = () => {\r\n-//     if (window.history.state && window.history.state.idx < window.history.length - 1) {\r\n-//       window.history.forward();\r\n-//       speak(\"Going forward\");\r\n-//     } else {\r\n-//       speak(\"No forward history available.\");\r\n-//     }\r\n-//   };\r\n-\r\n-//   const playVideo = () => {\r\n-//     if (videoRef.current) {\r\n-//       videoRef.current.play();\r\n-//       speak(\"Playing video.\");\r\n-//     } else {\r\n-//       speak(\"No video to play.\");\r\n-//     }\r\n-//   };\r\n-\r\n-//   const pauseVideo = () => {\r\n-//     if (videoRef.current) {\r\n-//       videoRef.current.pause();\r\n-//       speak(\"Video paused.\");\r\n-//     } else {\r\n-//       speak(\"No video to pause.\");\r\n-//     }\r\n-//   };\r\n-\r\n-//   const scrollAmount = window.innerHeight * 0.82;\r\n-\r\n-//   const scrollUp = () => {\r\n-//     if (window.pageYOffset === 0) {\r\n-//       speak(\"Already at the top of the page.\");\r\n-//     } else {\r\n-//       window.scrollBy(0, -scrollAmount);\r\n-//       speak(\"Scrolled up.\");\r\n-//     }\r\n-//   };\r\n-\r\n-//   const scrollDown = () => {\r\n-//     const maxScrollTop =\r\n-//       document.documentElement.scrollHeight - window.innerHeight;\r\n-//     if (window.pageYOffset >= maxScrollTop) {\r\n-//       speak(\"Already at the bottom of the page.\");\r\n-//     } else {\r\n-//       window.scrollBy(0, scrollAmount);\r\n-//       speak(\"Scrolled down.\");\r\n-//     }\r\n-//   };\r\n-\r\n-//   const scrollToTop = () => {\r\n-//     if (window.pageYOffset === 0) {\r\n-//       speak(\"Already at the top of the page.\");\r\n-//     } else {\r\n-//       window.scrollTo(0, 0);\r\n-//       speak(\"Scrolled to the top of the page.\");\r\n-//     }\r\n-//   };\r\n-\r\n-//   const scrollToBottom = () => {\r\n-//     const maxScrollTop =\r\n-//       document.documentElement.scrollHeight - window.innerHeight;\r\n-//     if (window.pageYOffset >= maxScrollTop) {\r\n-//       speak(\"Already at the bottom of the page.\");\r\n-//     } else {\r\n-//       window.scrollTo(0, document.body.scrollHeight);\r\n-//       speak(\"Scrolled to the bottom of the page.\");\r\n-//     }\r\n-//   };\r\n-\r\n-//   const speak = (message) => {\r\n-//     console.log(\"speak function called with message:\", message);\r\n-//     const utterance = new SpeechSynthesisUtterance(message);\r\n-//     utterance.onend = () => {\r\n-//       setIsSpeaking(false);\r\n-//       console.log(\"Speaking ended.\");\r\n-//       if (isListening && !recognition.current.starting) {\r\n-//         console.log(\"Restarting recognition after speaking.\");\r\n-//         recognition.current.starting = true;\r\n-//         recognition.current.start();\r\n-//         console.log(\"Restarted recognition after speaking.\");\r\n-//       }\r\n-//     };\r\n-\r\n-//     setIsSpeaking(true);\r\n-//     console.log(\"Speaking started.\");\r\n-//     recognition.current.stop(); // Ensure to stop recognition before speaking\r\n-//     speechSynthesis.current.speak(utterance);\r\n-//   };\r\n-\r\n-//   const onResult = (event) => {\r\n-//     const resultIndex = event.resultIndex;\r\n-//     const transcript = event.results[resultIndex][0].transcript\r\n-//       .trim()\r\n-//       .toLowerCase();\r\n-\r\n-//     if (event.results[resultIndex].isFinal) {\r\n-//       console.log(`Recognized text: ${transcript}`);\r\n-//       if (transcript.includes(\"brain\")) {\r\n-//         console.log(\"Wake word heard, processing command...\");\r\n-//         handleCommandWithFuse(transcript.replace(\"brain\", \"\"));\r\n-//       }\r\n-//     }\r\n-//   };\r\n-\r\n-//   const onRecognitionEnd = () => {\r\n-//     recognition.current.starting = false;\r\n-//     if (isListening && !isSpeaking) {\r\n-//       restartRecognition();\r\n-//     }\r\n-//   };\r\n-\r\n-//   useEffect(() => {\r\n-//     if (isListening) {\r\n-//       if (!hasGreeted) {\r\n-//         speak(\"Hello, I'm Brane. How can I help you today?\");\r\n-//         setHasGreeted(true);\r\n-//       } else {\r\n-//         speak(\"Listening.\");\r\n-//       }\r\n-//     }\r\n-//   }, [isListening, hasGreeted]);\r\n-\r\n-\r\n-//   const startListening = () => {\r\n-//     if (!recognition.current.starting) {\r\n-//       setIsListening(true);\r\n-//       restartRecognition();\r\n-//     }\r\n-//   };\r\n-\r\n-//   const stopListening = () => {\r\n-//     setIsListening(false);\r\n-//     recognition.current.abort();\r\n-//     if (speechSynthesis.current.speaking) {\r\n-//       speechSynthesis.current.cancel();\r\n-//     }\r\n-//   };\r\n-\r\n-//   const handleCommandWithFuse = (command) => {\r\n-//     const fuse = new Fuse(commands, { keys: [\"utterance\"], threshold: 0.4 });\r\n-//     const results = fuse.search(command);\r\n-//     const foundCommand = results.length ? results[0].item : null;\r\n-\r\n-//     if (foundCommand) {\r\n-//       console.log(\"Command found:\", foundCommand.utterance);\r\n-\r\n-//       if (foundCommand.action) {\r\n-//         foundCommand.action();\r\n-//       } else if (foundCommand.route) {\r\n-//         navigate(foundCommand.route);\r\n-//       }\r\n-\r\n-//       // Speak after performing the action or navigation\r\n-//       speak(foundCommand.response);\r\n-//     } else {\r\n-//       console.log(\"No command found.\");\r\n-//       speak(\"I'm not sure how to respond to that.\");\r\n-//     }\r\n-//   };\r\n-\r\n-//   const commands = [\r\n-//     {\r\n-//       utterance: \"Hello who are you ?\",\r\n-\r\n-//       response:\r\n-//         \"Hi! This is Brane! your Voice bot from Brane Education How can I Assist you Today ?\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"Hello\",\r\n-\r\n-//       response: \"Hi! How can I assist you today?\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"hello\",\r\n-\r\n-//       response: \"Hi! How can I assist you today?\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"Hi.\",\r\n-\r\n-//       response: \"Hello! How can I assist you today?\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"Hey there\",\r\n-\r\n-//       response: \"Hi! How can I assist you today?\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"Good morning Brane.\",\r\n-\r\n-//       response: \"Hey Hiii! Good morning  ! How can I help you?\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"Good afternoon Brane.\",\r\n-\r\n-//       response: \"Hey Hiii! Good after noon ! How can I help you?\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"Good evening Brane.\",\r\n-\r\n-//       response: \"Hey Hiii! Good evening ! How can I help you?\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"can you please take me to login page\",\r\n-\r\n-//       route: \"/login\",\r\n-\r\n-//       response: \"Here's the Login Page, Please Login\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"please take me to login page\",\r\n-\r\n-//       route: \"/login\",\r\n-\r\n-//       response: \"Here's the Login Page, Please Login\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"Go to login page\",\r\n-\r\n-//       route: \"/login\",\r\n-\r\n-//       response: \"Here's the Login Page, Please Login\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"open login page\",\r\n-\r\n-//       route: \"/login\",\r\n-\r\n-//       response: \"Here's the Login Page, Please Login\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"can you please take me to signup page\",\r\n-\r\n-//       route: \"/signup\",\r\n-\r\n-//       response: \"Here's the signup page. Please proceed With Registration.\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"take me to signup page\",\r\n-\r\n-//       route: \"/signup\",\r\n-\r\n-//       response: \"Here's the signup page. Please proceed With Registration.\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"Go to signup page\",\r\n-\r\n-//       route: \"/signup\",\r\n-\r\n-//       response: \"Here's the signup page. Please proceed With Registration.\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"open signup page\",\r\n-\r\n-//       route: \"/signup\",\r\n-\r\n-//       response: \"Here's the signup page. Please proceed With Registration.\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"Go to face id\",\r\n-\r\n-//       route: \"/login/faceid\",\r\n-\r\n-//       response: \"Here's Face ID Login. Please proceed.\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"Go to face id login\",\r\n-\r\n-//       route: \"/login/faceid\",\r\n-\r\n-//       response: \"Here's Face ID Login. Please proceed.\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"login with face id\",\r\n-\r\n-//       route: \"/login/faceid\",\r\n-\r\n-//       response: \"Here's Face ID Login. Please proceed.\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"login with face\",\r\n-\r\n-//       route: \"/login/faceid\",\r\n-\r\n-//       response: \"Here's Face ID Login. Please proceed.\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"i want to login with face\",\r\n-\r\n-//       route: \"/login/faceid\",\r\n-\r\n-//       response: \"Here's Face ID Login. Please proceed.\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"login with voice\",\r\n-\r\n-//       route: \"/login/voiceid\",\r\n-\r\n-//       response: \"Here's Voice Login. Please proceed.\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"i want to login with voice\",\r\n-\r\n-//       route: \"/login/voiceid\",\r\n-\r\n-//       response: \"Here's Voice Login. Please proceed.\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"go to voice login\",\r\n-\r\n-//       route: \"/login/voiceid\",\r\n-\r\n-//       response: \"Here's Voice Login. Please proceed.\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"login with voice\",\r\n-\r\n-//       route: \"/login/voiceid\",\r\n-\r\n-//       response: \"Here's Voice Login. Please proceed.\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"login with mobile\",\r\n-\r\n-//       route: \"/login/mobile\",\r\n-\r\n-//       response: \"Here's Mobile Login. Please proceed.\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"i want to login with mobile\",\r\n-\r\n-//       route: \"/login/mobile\",\r\n-\r\n-//       response: \"Here's Mobile Login. Please proceed.\",\r\n-//     },\r\n-//     {\r\n-//       utterance: \"go to mobile login\",\r\n-\r\n-//       route: \"/login/mobile\",\r\n-\r\n-//       response: \"Here's Mobile Login. Please proceed.\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"what are platform features\",\r\n-\r\n-//       response:\r\n-//         \"Dashboard, Dynamic time table, Learning Networks, Little Masters, Video Based Dictionary, General Search.\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"Features of platform\",\r\n-\r\n-//       response:\r\n-//         \"Dashboard, Dynamic time table, Learning Networks, Little Masters, Video Based Dictionary, General Search.\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"What does the platform offer\",\r\n-\r\n-//       response:\r\n-//         \"Dashboard, Dynamic time table, Learning Networks, Little Masters, Video Based Dictionary, General Search.\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"Say me the features of platform\",\r\n-\r\n-//       response:\r\n-//         \"Dashboard, Dynamic time table, Learning Networks, Little Masters, Video Based Dictionary, General Search.\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"Say me the services of platform\",\r\n-\r\n-//       response:\r\n-//         \"Dashboard, Dynamic time table, Learning Networks, Little Masters, Video Based Dictionary, General Search.\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"tell me the services offered by the platform\",\r\n-\r\n-//       response:\r\n-//         \"Dashboard, Dynamic time table, Learning Networks, Little Masters, Video Based Dictionary, General Search.\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"explain platform services\",\r\n-\r\n-//       response:\r\n-//         \"Dashboard, Dynamic time table, Learning Networks, Little Masters, Video Based Dictionary, General Search.\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"Give me the Parent voice of Julia Harris\",\r\n-\r\n-//       response:\r\n-//         \"Brane education has helped my son a lot in his studies. He improved a lot in his studies and is now able to score good marks in his exams\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"Play today's motivational video\",\r\n-\r\n-//       response: \"I am playing the video\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"Play today's video\",\r\n-\r\n-//       response: \"I am playing Motivational video\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"Leaders Voice\",\r\n-\r\n-//       response:\r\n-//         \"This Voice-interactive AI Platform is a game Changer. It revolutionizes education.\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"Curriculum Supported by Brane Education\",\r\n-\r\n-//       response:\r\n-//         \"we support multiple Boards let me say few Telangana State Board Andhra Pradesh Board Maharashtra Board Assam Board\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"Boards supported by the platform\",\r\n-\r\n-//       response:\r\n-//         \"we support multiple Boards let me say few Telangana State Board Andhra Pradesh Board Maharashtra Board Assam Board\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"Curriculum\",\r\n-\r\n-//       response:\r\n-//         \"we support multiple Boards let me say few Telangana State Board Andhra Pradesh Board Maharashtra Board Assam Board\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"Go to landing page\",\r\n-\r\n-//       response: \"Okay, I am taking you to the landing page.\",\r\n-\r\n-//       route: \"/childpage\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"take me to landing page\",\r\n-\r\n-//       response: \"Okay, I am taking you to the landing page.\",\r\n-\r\n-//       route: \"/childpage\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"move to landing page\",\r\n-\r\n-//       response: \"Okay, I am taking you to the landing page.\",\r\n-\r\n-//       route: \"/childpage\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"roll back to landing page\",\r\n-\r\n-//       response: \"Okay, I am taking you to the landing page.\",\r\n-\r\n-//       route: \"/childpage\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"move to landing page\",\r\n-\r\n-//       response: \"Okay, I am taking you to the landing page.\",\r\n-\r\n-//       route: \"/childpage\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"what is today's quote\",\r\n-\r\n-//       response:\r\n-//         \"Determination is the power that sees us through all our frustration and obstacles. It helps in building our willpower which is the very basis of success.\",\r\n-\r\n-//       route: \"/childpage\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"Today's Inspirational quote\",\r\n-\r\n-//       response:\r\n-//         \"Determination is the power that sees us through all our frustration and obstacles. It helps in building our willpower which is the very basis of success.\",\r\n-\r\n-//       route: \"/childpage\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"say me today's quote\",\r\n-\r\n-//       response:\r\n-//         \"Determination is the power that sees us through all our frustration and obstacles. It helps in building our willpower which is the very basis of success.\",\r\n-\r\n-//       route: \"/childpage\",\r\n-//     },\r\n-//     {\r\n-//       utterance: \"go back\",\r\n-//       response: \"\",\r\n-//       action: goBack, // Note the use of an action property\r\n-//     },\r\n-//     {\r\n-//       utterance: \"go forward\",\r\n-//       response: \"\",\r\n-//       action: goForward,\r\n-//     },\r\n-//     {\r\n-//       utterance: \"play video\",\r\n-//       // response: \"Playing video.\",\r\n-//       action: playVideo,\r\n-//     },\r\n-//     {\r\n-//       utterance: \"pause video\",\r\n-//       // response: \"Pausing video.\",\r\n-//       action: pauseVideo,\r\n-//     },\r\n-//     {\r\n-//       utterance: \"start video\",\r\n-//       // response: \"Playing video.\",\r\n-//       action: playVideo,\r\n-//     },\r\n-//     {\r\n-//       utterance: \"stop video\",\r\n-//       // response: \"Playing video.\",\r\n-//       action: pauseVideo,\r\n-//     },\r\n-//     {\r\n-//       utterance: \"scroll up\",\r\n-//       // response: \"Scrolling up.\",\r\n-//       action: scrollUp,\r\n-//     },\r\n-//     {\r\n-//       utterance: \"scroll down\",\r\n-//       // response: \"Scrolling down.\",\r\n-//       action: scrollDown,\r\n-//     },\r\n-//     {\r\n-//       utterance: \"go up\",\r\n-\r\n-//       // response: \"Scrolling up.\",\r\n-//       action: scrollUp,\r\n-//     },\r\n-//     {\r\n-//       utterance: \"go down\",\r\n-//       // response: \"Scrolling down.\",\r\n-//       action: scrollDown,\r\n-//     },\r\n-//     {\r\n-//       utterance: \"scroll to top\",\r\n-//       action: scrollToTop,\r\n-//     },\r\n-//     {\r\n-//       utterance: \"scroll to bottom\",\r\n-//       action: scrollToBottom,\r\n-//     },\r\n-//     {\r\n-//       utterance: \"brane stop\",\r\n-//       action: stopListening,\r\n-//     },\r\n-//     {\r\n-//       utterance: \"brane turn off\",\r\n-//       action: stopListening,\r\n-//     },\r\n-//     {\r\n-//       utterance: \"brane stop the bot\",\r\n-//       action: stopListening,\r\n-//     },\r\n-//   ];\r\n-\r\n-//   return (\r\n-//     <div className=\"speech-bot-container\">\r\n-//       <div\r\n-//         className={`button-container ${\r\n-//           isListening ? \"voicebotframeactive\" : \"voicebotframe\"\r\n-//         }`}\r\n-//       >\r\n-//         <button onClick={isListening ? stopListening : startListening}>\r\n-//           {isListening ? \"Stop\" : \"Start\"} Animation\r\n-//         </button>\r\n-//         {/* <button onClick={toggleBotActive}>\r\n-//         {isBotActive ? 'Deactivate Bot' : 'Activate Bot'}\r\n-//       </button> \r\n-//       </div>\r\n-//     </div>\r\n-//   );\r\n-// };\r\n-\r\n-// export default VoiceBot; */\r\n-}\r\n-\r\n-//iska v1\r\n-\r\n-// import React, { useState, useEffect, useRef } from \"react\";\r\n-// import { useNavigate, useLocation } from \"react-router-dom\";\r\n-// import Fuse from \"fuse.js\";\r\n-// import \"./VoiceBot.css\";\r\n-\r\n-// const VoiceBot = ({ videoRef}) => {\r\n-//   const [isListening, setIsListening] = useState(false);\r\n-//   const [isSpeaking, setIsSpeaking] = useState(false);\r\n-//   const recognition = useRef(null);\r\n-//   const speechSynthesis = useRef(window.speechSynthesis);\r\n-//   const [hasGreeted, setHasGreeted] = useState(false);\r\n-//   const navigate = useNavigate();\r\n-\r\n-//  // Initialize speech recognition\r\n-//  useEffect(() => {\r\n-//   recognition.current = new window.webkitSpeechRecognition();\r\n-//   recognition.current.continuous = true;\r\n-//   recognition.current.interimResults = false;\r\n-//   recognition.current.onresult = onResult;\r\n-//   recognition.current.onend = onRecognitionEnd;\r\n-//   recognition.current.starting = false;\r\n-\r\n-//   recognition.current.onerror = (event) => {\r\n-//     console.error(\"Recognition error:\", event.error);\r\n-//     if (isListening && !isSpeaking) {\r\n-//       restartRecognition();\r\n-//     }\r\n-//   };\r\n-\r\n-//   return () => {\r\n-//     if (recognition.current) {\r\n-//       recognition.current.abort();\r\n-//     }\r\n-//   };\r\n-// }, []);\r\n-\r\n-//   // useEffect(() => {\r\n-//   //   const checkRecognition = () => {\r\n-//   //     if (isListening && !isSpeaking && !recognition.current.starting) {\r\n-//   //       console.log(\"Restarting recognition because it's not active.\");\r\n-//   //       recognition.current.starting = true;\r\n-//   //       recognition.current.start();\r\n-//   //       console.log(\"Restarted recognition.\");\r\n-//   //     }\r\n-//   //   };\r\n-\r\n-//   //   const recognitionCheckInterval = setInterval(checkRecognition, 100); // Check every .5 second\r\n-\r\n-//   //   return () => {\r\n-//   //     clearInterval(recognitionCheckInterval);\r\n-//   //   };\r\n-//   // }, [isListening, isSpeaking]);\r\n-\r\n-//   const historyStack = useRef([]);\r\n-\r\n-//   useEffect(() => {\r\n-//     return () => {\r\n-//       // Clean up the listener when the component unmounts\r\n-//       window.removeEventListener(\"popstate\", handlePopState);\r\n-//     };\r\n-//   }, []);\r\n-\r\n-//   const handlePopState = () => {\r\n-//     // This needs to handle both back and forward browser actions\r\n-//     // Use some logic to determine whether it's a back or forward action\r\n-//     // For simplicity, assume it's always back\r\n-//     historyStack.current.pop();\r\n-//     forwardStack.current.length = 0; // Clear forward stack on manual navigation\r\n-//   };\r\n-\r\n-//   // Add a new entry to the stack whenever navigate is called\r\n-//   const customNavigate = (to, options) => {\r\n-//     historyStack.current.push(to);\r\n-//     navigate(to, options);\r\n-//   };\r\n-\r\n-//   // Listen to popstate events to update the history stack\r\n-//   useEffect(() => {\r\n-//     window.addEventListener(\"popstate\", handlePopState);\r\n-//   }, []);\r\n-\r\n-//   const forwardStack = useRef([]);\r\n-\r\n-//   const goBack = () => {\r\n-//     if (window.history.state && window.history.state.idx > 0) {\r\n-//       window.history.back();\r\n-//       speak(\"Going back\");\r\n-//     } else {\r\n-//       speak(\"Can't go back any further.\");\r\n-//     }\r\n-//   };\r\n-\r\n-//   const goForward = () => {\r\n-//     if (window.history.state && window.history.state.idx < window.history.length - 1) {\r\n-//       window.history.forward();\r\n-//       speak(\"Going forward\");\r\n-//     } else {\r\n-//       speak(\"No forward history available.\");\r\n-//     }\r\n-//   };\r\n-\r\n-//   const playVideo = () => {\r\n-//     if (videoRef.current) {\r\n-//       videoRef.current.play();\r\n-//       speak(\"Playing video.\");\r\n-//     } else {\r\n-//       speak(\"No video to play.\");\r\n-//     }\r\n-//   };\r\n-\r\n-//   const pauseVideo = () => {\r\n-//     if (videoRef.current) {\r\n-//       videoRef.current.pause();\r\n-//       speak(\"Video paused.\");\r\n-//     } else {\r\n-//       speak(\"No video to pause.\");\r\n-//     }\r\n-//   };\r\n-\r\n-//   const scrollAmount = window.innerHeight * 0.82;\r\n-\r\n-//   const scrollUp = () => {\r\n-//     if (window.pageYOffset === 0) {\r\n-//       speak(\"Already at the top of the page.\");\r\n-//     } else {\r\n-//       window.scrollBy(0, -scrollAmount);\r\n-//       speak(\"Scrolled up.\");\r\n-//     }\r\n-//   };\r\n-\r\n-//   const scrollDown = () => {\r\n-//     const maxScrollTop =\r\n-//       document.documentElement.scrollHeight - window.innerHeight;\r\n-//     if (window.pageYOffset >= maxScrollTop) {\r\n-//       speak(\"Already at the bottom of the page.\");\r\n-//     } else {\r\n-//       window.scrollBy(0, scrollAmount);\r\n-//       speak(\"Scrolled down.\");\r\n-//     }\r\n-//   };\r\n-\r\n-//   const scrollToTop = () => {\r\n-//     if (window.pageYOffset === 0) {\r\n-//       speak(\"Already at the top of the page.\");\r\n-//     } else {\r\n-//       window.scrollTo(0, 0);\r\n-//       speak(\"Scrolled to the top of the page.\");\r\n-//     }\r\n-//   };\r\n-\r\n-//   const scrollToBottom = () => {\r\n-//     const maxScrollTop =\r\n-//       document.documentElement.scrollHeight - window.innerHeight;\r\n-//     if (window.pageYOffset >= maxScrollTop) {\r\n-//       speak(\"Already at the bottom of the page.\");\r\n-//     } else {\r\n-//       window.scrollTo(0, document.body.scrollHeight);\r\n-//       speak(\"Scrolled to the bottom of the page.\");\r\n-//     }\r\n-//   };\r\n-\r\n-//   const speak = (message) => {\r\n-//     const utterance = new SpeechSynthesisUtterance(message);\r\n-//     utterance.onend = () => {\r\n-//       setIsSpeaking(false);\r\n-//       // Restart recognition after speaking has ended\r\n-//       if (isListening) {\r\n-//         restartRecognition();\r\n-//       }\r\n-//     };\r\n-\r\n-//     setIsSpeaking(true);\r\n-//     // Stop recognition when the bot starts speaking\r\n-//     if (recognition.current) {\r\n-//       recognition.current.abort();\r\n-//     }\r\n-//     speechSynthesis.current.speak(utterance);\r\n-//   };\r\n-\r\n-//   const restartRecognition = () => {\r\n-//     // Check if recognition is not already started and if the bot is set to listen\r\n-//     if (recognition.current && !recognition.current.starting && isListening && !isSpeaking) {\r\n-//       // Only start recognition if it's not already active\r\n-//       if (recognition.current.state !== 'active') {\r\n-//         recognition.current.abort(); // Ensure any ongoing recognition is stopped\r\n-//         recognition.current.starting = true;\r\n-//         recognition.current.start();\r\n-//       }\r\n-//     }\r\n-//   };\r\n-\r\n-//     // Restart recognition when bot finishes speaking and isListening is true\r\n-//     useEffect(() => {\r\n-//       if (!isSpeaking && isListening) {\r\n-//         restartRecognition();\r\n-//       }\r\n-//     }, [isSpeaking, isListening]);\r\n-\r\n-//   const onResult = (event) => {\r\n-//     const resultIndex = event.resultIndex;\r\n-//     const transcript = event.results[resultIndex][0].transcript\r\n-//       .trim()\r\n-//       .toLowerCase();\r\n-\r\n-//     if (event.results[resultIndex].isFinal) {\r\n-//       console.log(`Recognized text: ${transcript}`);\r\n-//       if (transcript.includes(\"brain\")) {\r\n-//         console.log(\"Wake word heard, processing command...\");\r\n-//         handleCommandWithFuse(transcript.replace(\"brain\", \"\"));\r\n-//       }\r\n-//     }\r\n-//   };\r\n-\r\n-//   const onRecognitionEnd = () => {\r\n-//     recognition.current.starting = false;\r\n-//     if (isListening && !isSpeaking) {\r\n-//       restartRecognition();\r\n-//     }\r\n-//   };\r\n-\r\n-//   useEffect(() => {\r\n-//     if (isListening && !hasGreeted) {\r\n-//       speak(\"Hello, I'm Brane. How can I help you today?\");\r\n-//       setHasGreeted(true);\r\n-//     }\r\n-//   }, [isListening, hasGreeted]);\r\n-\r\n-// // Updated startListening function\r\n-// const startListening = () => {\r\n-//   setIsListening(true);\r\n-//   if (recognition.current && !recognition.current.starting) {\r\n-//     recognition.current.start();\r\n-//   }\r\n-// };\r\n-\r\n-// // Updated stopListening function\r\n-// const stopListening = () => {\r\n-//   setIsListening(false);\r\n-//   setIsSpeaking(false); // Reset speaking state\r\n-//   setHasGreeted(false); // Reset greeting state if needed\r\n-//   if (recognition.current) {\r\n-//     recognition.current.abort(); // Stop any ongoing speech recognition\r\n-//   }\r\n-//   if (speechSynthesis.current.speaking) {\r\n-//     speechSynthesis.current.cancel(); // Stop any ongoing speech synthesis\r\n-//   }\r\n-// };\r\n-\r\n-//   const handleCommandWithFuse = (command) => {\r\n-//     const fuse = new Fuse(commands, { keys: [\"utterance\"], threshold: 0.4 });\r\n-//     const results = fuse.search(command);\r\n-//     const foundCommand = results.length ? results[0].item : null;\r\n-\r\n-//     if (foundCommand) {\r\n-//       console.log(\"Command found:\", foundCommand.utterance);\r\n-\r\n-//       if (foundCommand.action) {\r\n-//         foundCommand.action();\r\n-//       } else if (foundCommand.route) {\r\n-//         navigate(foundCommand.route);\r\n-//       }\r\n-\r\n-//       // Speak after performing the action or navigation\r\n-//       speak(foundCommand.response);\r\n-//     } else {\r\n-//       console.log(\"No command found.\");\r\n-//       speak(\"I'm not sure how to respond to that.\");\r\n-//     }\r\n-//   };\r\n-\r\n-//   const commands = [\r\n-//     {\r\n-//       utterance: \"Hello who are you ?\",\r\n-\r\n-//       response:\r\n-//         \"Hi! This is Brane! your Voice bot from Brane Education How can I Assist you Today ?\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"Hello\",\r\n-\r\n-//       response: \"Hi! How can I assist you today?\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"hello\",\r\n-\r\n-//       response: \"Hi! How can I assist you today?\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"Hi.\",\r\n-\r\n-//       response: \"Hello! How can I assist you today?\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"Hey there\",\r\n-\r\n-//       response: \"Hi! How can I assist you today?\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"Good morning Brane.\",\r\n-\r\n-//       response: \"Hey Hiii! Good morning  ! How can I help you?\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"Good afternoon Brane.\",\r\n-\r\n-//       response: \"Hey Hiii! Good after noon ! How can I help you?\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"Good evening Brane.\",\r\n-\r\n-//       response: \"Hey Hiii! Good evening ! How can I help you?\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"can you please take me to login page\",\r\n-\r\n-//       route: \"/login\",\r\n-\r\n-//       response: \"Here's the Login Page, Please Login\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"please take me to login page\",\r\n-\r\n-//       route: \"/login\",\r\n-\r\n-//       response: \"Here's the Login Page, Please Login\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"Go to login page\",\r\n-\r\n-//       route: \"/login\",\r\n-\r\n-//       response: \"Here's the Login Page, Please Login\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"open login page\",\r\n-\r\n-//       route: \"/login\",\r\n-\r\n-//       response: \"Here's the Login Page, Please Login\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"can you please take me to signup page\",\r\n-\r\n-//       route: \"/signup\",\r\n-\r\n-//       response: \"Here's the signup page. Please proceed With Registration.\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"take me to signup page\",\r\n-\r\n-//       route: \"/signup\",\r\n-\r\n-//       response: \"Here's the signup page. Please proceed With Registration.\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"Go to signup page\",\r\n-\r\n-//       route: \"/signup\",\r\n-\r\n-//       response: \"Here's the signup page. Please proceed With Registration.\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"open signup page\",\r\n-\r\n-//       route: \"/signup\",\r\n-\r\n-//       response: \"Here's the signup page. Please proceed With Registration.\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"Go to face id\",\r\n-\r\n-//       route: \"/login/faceid\",\r\n-\r\n-//       response: \"Here's Face ID Login. Please proceed.\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"Go to face id login\",\r\n-\r\n-//       route: \"/login/faceid\",\r\n-\r\n-//       response: \"Here's Face ID Login. Please proceed.\",\r\n-//     },\r\n-//     {\r\n-//       utterance: \"Go to face login\",\r\n-\r\n-//       route: \"/login/faceid\",\r\n-\r\n-//       response: \"Here's Face ID Login. Please proceed.\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"login with face id\",\r\n-\r\n-//       route: \"/login/faceid\",\r\n-\r\n-//       response: \"Here's Face ID Login. Please proceed.\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"login with face\",\r\n-\r\n-//       route: \"/login/faceid\",\r\n-\r\n-//       response: \"Here's Face ID Login. Please proceed.\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"i want to login with face\",\r\n-\r\n-//       route: \"/login/faceid\",\r\n-\r\n-//       response: \"Here's Face ID Login. Please proceed.\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"login with voice\",\r\n-\r\n-//       route: \"/login/voiceid\",\r\n-\r\n-//       response: \"Here's Voice Login. Please proceed.\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"i want to login with voice\",\r\n-\r\n-//       route: \"/login/voiceid\",\r\n-\r\n-//       response: \"Here's Voice Login. Please proceed.\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"go to voice login\",\r\n-\r\n-//       route: \"/login/voiceid\",\r\n-\r\n-//       response: \"Here's Voice Login. Please proceed.\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"login with voice\",\r\n-\r\n-//       route: \"/login/voiceid\",\r\n-\r\n-//       response: \"Here's Voice Login. Please proceed.\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"login with mobile\",\r\n-\r\n-//       route: \"/login/mobile\",\r\n-\r\n-//       response: \"Here's Mobile Login. Please proceed.\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"i want to login with mobile\",\r\n-\r\n-//       route: \"/login/mobile\",\r\n-\r\n-//       response: \"Here's Mobile Login. Please proceed.\",\r\n-//     },\r\n-//     {\r\n-//       utterance: \"go to mobile login\",\r\n-\r\n-//       route: \"/login/mobile\",\r\n-\r\n-//       response: \"Here's Mobile Login. Please proceed.\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"what are platform features\",\r\n-\r\n-//       response:\r\n-//         \"Dashboard, Dynamic time table, Learning Networks, Little Masters, Video Based Dictionary, General Search.\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"Features of platform\",\r\n-\r\n-//       response:\r\n-//         \"Dashboard, Dynamic time table, Learning Networks, Little Masters, Video Based Dictionary, General Search.\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"What does the platform offer\",\r\n-\r\n-//       response:\r\n-//         \"Dashboard, Dynamic time table, Learning Networks, Little Masters, Video Based Dictionary, General Search.\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"Say me the features of platform\",\r\n-\r\n-//       response:\r\n-//         \"Dashboard, Dynamic time table, Learning Networks, Little Masters, Video Based Dictionary, General Search.\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"Say me the services of platform\",\r\n-\r\n-//       response:\r\n-//         \"Dashboard, Dynamic time table, Learning Networks, Little Masters, Video Based Dictionary, General Search.\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"tell me the services offered by the platform\",\r\n-\r\n-//       response:\r\n-//         \"Dashboard, Dynamic time table, Learning Networks, Little Masters, Video Based Dictionary, General Search.\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"explain platform services\",\r\n-\r\n-//       response:\r\n-//         \"Dashboard, Dynamic time table, Learning Networks, Little Masters, Video Based Dictionary, General Search.\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"Give me the Parent voice of Julia Harris\",\r\n-\r\n-//       response:\r\n-//         \"Brane education has helped my son a lot in his studies. He improved a lot in his studies and is now able to score good marks in his exams\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"Play today's motivational video\",\r\n-\r\n-//       response: \"I am playing the video\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"Play today's video\",\r\n-\r\n-//       response: \"I am playing Motivational video\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"Leaders Voice\",\r\n-\r\n-//       response:\r\n-//         \"This Voice-interactive AI Platform is a game Changer. It revolutionizes education.\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"Curriculum Supported by Brane Education\",\r\n-\r\n-//       response:\r\n-//         \"we support multiple Boards let me say few Telangana State Board Andhra Pradesh Board Maharashtra Board Assam Board\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"Boards supported by the platform\",\r\n-\r\n-//       response:\r\n-//         \"we support multiple Boards let me say few Telangana State Board Andhra Pradesh Board Maharashtra Board Assam Board\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"Curriculum\",\r\n-\r\n-//       response:\r\n-//         \"we support multiple Boards let me say few Telangana State Board Andhra Pradesh Board Maharashtra Board Assam Board\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"Go to landing page\",\r\n-\r\n-//       response: \"Okay, I am taking you to the landing page.\",\r\n-\r\n-//       route: \"/childpage\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"take me to landing page\",\r\n-\r\n-//       response: \"Okay, I am taking you to the landing page.\",\r\n-\r\n-//       route: \"/childpage\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"move to landing page\",\r\n-\r\n-//       response: \"Okay, I am taking you to the landing page.\",\r\n-\r\n-//       route: \"/childpage\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"roll back to landing page\",\r\n-\r\n-//       response: \"Okay, I am taking you to the landing page.\",\r\n-\r\n-//       route: \"/childpage\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"move to landing page\",\r\n-\r\n-//       response: \"Okay, I am taking you to the landing page.\",\r\n-\r\n-//       route: \"/childpage\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"what is today's quote\",\r\n-\r\n-//       response:\r\n-//         \"Determination is the power that sees us through all our frustration and obstacles. It helps in building our willpower which is the very basis of success.\",\r\n-\r\n-//       route: \"/childpage\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"Today's Inspirational quote\",\r\n-\r\n-//       response:\r\n-//         \"Determination is the power that sees us through all our frustration and obstacles. It helps in building our willpower which is the very basis of success.\",\r\n-\r\n-//       route: \"/childpage\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"say me today's quote\",\r\n-\r\n-//       response:\r\n-//         \"Determination is the power that sees us through all our frustration and obstacles. It helps in building our willpower which is the very basis of success.\",\r\n-\r\n-//       route: \"/childpage\",\r\n-//     },\r\n-//     {\r\n-//       utterance: \"go back\",\r\n-//       response: \"\",\r\n-//       action: goBack, // Note the use of an action property\r\n-//     },\r\n-//     {\r\n-//       utterance: \"go forward\",\r\n-//       response: \"\",\r\n-//       action: goForward,\r\n-//     },\r\n-//     {\r\n-//       utterance: \"play video\",\r\n-//       // response: \"Playing video.\",\r\n-//       action: playVideo,\r\n-//     },\r\n-//     {\r\n-//       utterance: \"pause video\",\r\n-//       // response: \"Pausing video.\",\r\n-//       action: pauseVideo,\r\n-//     },\r\n-//     {\r\n-//       utterance: \"start video\",\r\n-//       // response: \"Playing video.\",\r\n-//       action: playVideo,\r\n-//     },\r\n-//     {\r\n-//       utterance: \"stop video\",\r\n-//       // response: \"Playing video.\",\r\n-//       action: pauseVideo,\r\n-//     },\r\n-//     {\r\n-//       utterance: \"scroll up\",\r\n-//       // response: \"Scrolling up.\",\r\n-//       action: scrollUp,\r\n-//     },\r\n-//     {\r\n-//       utterance: \"scroll down\",\r\n-//       // response: \"Scrolling down.\",\r\n-//       action: scrollDown,\r\n-//     },\r\n-//     {\r\n-//       utterance: \"go up\",\r\n-\r\n-//       // response: \"Scrolling up.\",\r\n-//       action: scrollUp,\r\n-//     },\r\n-//     {\r\n-//       utterance: \"go down\",\r\n-//       // response: \"Scrolling down.\",\r\n-//       action: scrollDown,\r\n-//     },\r\n-//     {\r\n-//       utterance: \"scroll to top\",\r\n-//       action: scrollToTop,\r\n-//     },\r\n-//     {\r\n-//       utterance: \"scroll to bottom\",\r\n-//       action: scrollToBottom,\r\n-//     },\r\n-//     {\r\n-//       utterance: \"brane stop\",\r\n-//       action: stopListening,\r\n-//     },\r\n-//     {\r\n-//       utterance: \"brane turn off\",\r\n-//       action: stopListening,\r\n-//     },\r\n-//     {\r\n-//       utterance: \"brane stop the bot\",\r\n-//       action: stopListening,\r\n-//     },\r\n-//   ];\r\n-\r\n-//   return (\r\n-//     <div className=\"speech-bot-container\">\r\n-//       <div\r\n-//         className={`button-container ${\r\n-//           isListening ? \"voicebotframeactive\" : \"voicebotframe\"\r\n-//         }`}\r\n-//       >\r\n-//         <button onClick={isListening ? stopListening : startListening}>\r\n-//           {isListening ? \"Stop\" : \"Start\"} Animation\r\n-//         </button>\r\n-//         {/* <button onClick={toggleBotActive}>\r\n-//         {isBotActive ? 'Deactivate Bot' : 'Activate Bot'}\r\n-//       </button> */}\r\n-//       </div>\r\n-//     </div>\r\n-//   );\r\n-// };\r\n-\r\n-// export default VoiceBot;\r\n-\r\n-//Bot Video added but some start issues\r\n-\r\n-// import React, { useState, useEffect, useRef } from \"react\";\r\n-// import { useNavigate, useLocation } from \"react-router-dom\";\r\n-// import Fuse from \"fuse.js\";\r\n-// import \"./VoiceBot.css\";\r\n-\r\n-// const VoiceBot = ({ videoRef }) => {\r\n-//   const [isListening, setIsListening] = useState(false);\r\n-//   const [isSpeaking, setIsSpeaking] = useState(false);\r\n-//   const recognition = useRef(null);\r\n-//   const speechSynthesis = useRef(window.speechSynthesis);\r\n-//   const hasGreeted = useRef(false);\r\n-//   const restartRecognitionTimeout = useRef(null);\r\n-//   const navigate = useNavigate();\r\n-//   const location = useLocation();\r\n-//   const [isRecognitionActive, setIsRecognitionActive] = useState(false); // New state to track recognition status\r\n-\r\n-//   useEffect(() => {\r\n-//     recognition.current = new window.webkitSpeechRecognition();\r\n-//     recognition.current.continuous = true;\r\n-//     recognition.current.interimResults = false;\r\n-//     recognition.current.onresult = onResult;\r\n-//     recognition.current.onend = () => {\r\n-//       console.log(\"Recognition ended.\");\r\n-//       if (isListening) {\r\n-//         startListening();\r\n-//       }\r\n-//     };\r\n-//     recognition.current.onerror = (event) => {\r\n-//       console.error(\"Recognition error:\", event.error);\r\n-//     };\r\n-\r\n-//     return () => {\r\n-//       recognition.current.abort();\r\n-//     };\r\n-//   }, []);\r\n-\r\n-//   // Update useEffect for managing the recognition state based on isListening and isRecognitionActive\r\n-//   useEffect(() => {\r\n-//     if (isListening && !isRecognitionActive) {\r\n-//       startListening();\r\n-//     } else if (!isListening && isRecognitionActive) {\r\n-//       stopListening();\r\n-//     }\r\n-//   }, [isListening, isRecognitionActive]);\r\n-\r\n-//   const goBack = () => {\r\n-//     if (window.history.length > 1) {\r\n-//       navigate(-1);\r\n-//     } else {\r\n-//       speak(\"Can't go back any further.\");\r\n-//     }\r\n-//   };\r\n-\r\n-//   const goForward = () => {\r\n-//     // Unfortunately, there's no direct way to check if you can go forward in the history.\r\n-//     // You might need to manage this state manually based on user navigation.\r\n-//     navigate(1);\r\n-//   };\r\n-\r\n-//   const playVideo = () => {\r\n-//     if (videoRef.current && !videoRef.current.paused) {\r\n-//       speak(\"Video is already playing.\");\r\n-//     } else if (videoRef.current) {\r\n-//       videoRef.current.play();\r\n-//       speak(\"Playing video.\");\r\n-//     } else {\r\n-//       speak(\"No video to play.\");\r\n-//     }\r\n-//   };\r\n-\r\n-//   const pauseVideo = () => {\r\n-//     if (videoRef.current && videoRef.current.paused) {\r\n-//       speak(\"Video is already paused.\");\r\n-//     } else if (videoRef.current) {\r\n-//       videoRef.current.pause();\r\n-//       speak(\"Video paused.\");\r\n-//     } else {\r\n-//       speak(\"No video to pause.\");\r\n-//     }\r\n-//   };\r\n-\r\n-//   const scrollAmount = window.innerHeight * 0.82;\r\n-\r\n-//   const scrollUp = () => {\r\n-//     if (window.pageYOffset === 0) {\r\n-//       speak(\"Already at the top of the page.\");\r\n-//     } else {\r\n-//       window.scrollBy(0, -scrollAmount);\r\n-//       speak(\"Scrolled up.\");\r\n-//     }\r\n-//   };\r\n-\r\n-//   const scrollDown = () => {\r\n-//     const maxScrollTop =\r\n-//       document.documentElement.scrollHeight - window.innerHeight;\r\n-//     if (window.pageYOffset >= maxScrollTop) {\r\n-//       speak(\"Already at the bottom of the page.\");\r\n-//     } else {\r\n-//       window.scrollBy(0, scrollAmount);\r\n-//       speak(\"Scrolled down.\");\r\n-//     }\r\n-//   };\r\n-\r\n-//   const scrollToTop = () => {\r\n-//     if (window.pageYOffset === 0) {\r\n-//       speak(\"Already at the top of the page.\");\r\n-//     } else {\r\n-//       window.scrollTo(0, 0);\r\n-//       speak(\"Scrolled to the top of the page.\");\r\n-//     }\r\n-//   };\r\n-\r\n-//   const scrollToBottom = () => {\r\n-//     const maxScrollTop =\r\n-//       document.documentElement.scrollHeight - window.innerHeight;\r\n-//     if (window.pageYOffset >= maxScrollTop) {\r\n-//       speak(\"Already at the bottom of the page.\");\r\n-//     } else {\r\n-//       window.scrollTo(0, document.body.scrollHeight);\r\n-//       speak(\"Scrolled to the bottom of the page.\");\r\n-//     }\r\n-//   };\r\n-\r\n-//   // const speak = (message) => {\r\n-//   //   const utterance = new SpeechSynthesisUtterance(message);\r\n-//   //   utterance.onend = () => {\r\n-//   //     setIsSpeaking(false);\r\n-//   //     console.log(\"Speaking ended.\");\r\n-//   //     // Only restart recognition if we're still supposed to be listening\r\n-//   //     // if (isListening) {\r\n-//   //     //   if (restartRecognitionTimeout.current) {\r\n-//   //     //     clearTimeout(restartRecognitionTimeout.current);\r\n-//   //     //   }\r\n-//   //     //   restartRecognitionTimeout.current = setTimeout(() => {\r\n-//   //     //     console.log(\"Recognition restarted.\");\r\n-//   //     //     recognition.current.start();\r\n-//   //     //   }, 100); // Delay to prevent immediate restart\r\n-//   //     // }\r\n-//   //     if (isListening && !recognition.current.starting) { // Check the flag before restarting\r\n-//   //       recognition.current.starting = true; // Set the flag when starting recognition\r\n-//   //       recognition.current.start();\r\n-//   //     }\r\n-//   //   };\r\n-\r\n-//   //   setIsSpeaking(true);\r\n-//   //   console.log(\"Speaking started.\");\r\n-//   //   recognition.current.stop(); // Stop recognition when the bot starts speaking\r\n-//   //   speechSynthesis.current.speak(utterance);\r\n-//   // };\r\n-\r\n-//   const speak = (message) => {\r\n-//     console.log(\"speak function called with message:\", message);\r\n-//     const utterance = new SpeechSynthesisUtterance(message);\r\n-//     utterance.onend = () => {\r\n-//       setIsSpeaking(false);\r\n-//       console.log(\"Speaking ended.\");\r\n-//       // Directly handle the restart of recognition here if needed\r\n-//       if (isListening) {\r\n-//         startListening();\r\n-//       }\r\n-//     };\r\n-\r\n-//     setIsSpeaking(true);\r\n-//     console.log(\"Speaking started.\");\r\n-//     recognition.current.stop(); // Ensure to stop recognition before speaking\r\n-//     speechSynthesis.current.speak(utterance);\r\n-//   };\r\n-\r\n-//   const onResult = (event) => {\r\n-//     const resultIndex = event.resultIndex;\r\n-//     const transcript = event.results[resultIndex][0].transcript\r\n-//       .trim()\r\n-//       .toLowerCase();\r\n-\r\n-//     if (event.results[resultIndex].isFinal) {\r\n-//       console.log(`Recognized text: ${transcript}`);\r\n-//       if (transcript.includes(\"brain\")) {\r\n-//         console.log(\"Wake word heard, processing command...\");\r\n-//         handleCommandWithFuse(transcript.replace(\"brain\", \"\"));\r\n-//       }\r\n-//     }\r\n-//   };\r\n-\r\n-//   // const onRecognitionEnd = () => {\r\n-//   //   console.log(\"Recognition ended.\");\r\n-//   //   setIsRecognitionActive(false); // Update state when recognition ends\r\n-//   //   recognition.current.starting = false; // Reset the flag when recognition ends\r\n-//   //   // We now check if the recognition is already running before starting it again\r\n-//   //   if (isListening && !isSpeaking && !recognition.current?.starting) {\r\n-//   //     console.log(\"Restarting recognition.\");\r\n-//   //     recognition.current.start();\r\n-//   //   }\r\n-//   // };\r\n-\r\n-//   // useEffect(() => {\r\n-//   //   if (isListening && !hasGreeted.current) {\r\n-//   //     speak(\"Hello, I'm Brane. How can I assist you today?\");\r\n-//   //     hasGreeted.current = true;\r\n-//   //   } else if (isListening && !isSpeaking) {\r\n-//   //     recognition.current.start();\r\n-//   //   }\r\n-//   // }, [isListening, isSpeaking]);\r\n-\r\n-//   useEffect(() => {\r\n-//     if (isListening && !hasGreeted.current) {\r\n-//       speak(\"Hello, I'm Brane. How can I assist you today?\");\r\n-//       hasGreeted.current = true;\r\n-//     } else if (isListening && !isSpeaking && !recognition.current.starting) {\r\n-//       // Check the flag before starting\r\n-//       recognition.current.starting = true; // Set the flag when starting recognition\r\n-//       recognition.current.start();\r\n-//     }\r\n-//   }, [isListening, isSpeaking]);\r\n-\r\n-//   // const startListening = () => {\r\n-//   //   console.log(\"Attempting to start listening.\");\r\n-//   //   if (recognition.current && !recognition.current.starting) {\r\n-//   //     setIsListening(true);\r\n-//   //     recognition.current.starting = true; // Set the flag when starting recognition\r\n-//   //     recognition.current.start();\r\n-//   //     console.log(\"Listening started.\");\r\n-//   //   }\r\n-//   // };\r\n-\r\n-//   // const stopListening = () => {\r\n-//   //   console.log(\"Stopping listening.\");\r\n-\r\n-//   //   setIsListening(false);\r\n-//   //   recognition.current.stop();\r\n-//   //   if (speechSynthesis.current.speaking) {\r\n-//   //     speechSynthesis.current.cancel();\r\n-//   //   }\r\n-//   //   if (restartRecognitionTimeout.current) {\r\n-//   //     clearTimeout(restartRecognitionTimeout.current);\r\n-//   //   }\r\n-//   //   console.log(\"Listening stopped.\");\r\n-//   // };\r\n-//   // Handle start and stop listening logic\r\n-//   const startListening = () => {\r\n-//     console.log(\"Attempting to start listening.\");\r\n-//     if (!recognition.current.starting) {\r\n-//       setIsListening(true);\r\n-//       recognition.current.starting = true;\r\n-//       recognition.current.start();\r\n-//       console.log(\"Listening started.\");\r\n-//     } else {\r\n-//       console.log(\"Recognition already active.\");\r\n-//     }\r\n-//   };\r\n-\r\n-//   const stopListening = () => {\r\n-//     console.log(\"Stopping listening.\");\r\n-//     if (recognition.current.starting) {\r\n-//       setIsListening(false);\r\n-//       recognition.current.starting = false;\r\n-//       recognition.current.stop();\r\n-//       console.log(\"Listening stopped.\");\r\n-//     } else {\r\n-//       console.log(\"Recognition already inactive.\");\r\n-//     }\r\n-//   };\r\n-\r\n-//   // const handleCommandWithFuse = (command) => {\r\n-//   //   const fuse = new Fuse(commands, { keys: [\"utterance\"], threshold: 0.4 });\r\n-//   //   const results = fuse.search(command);\r\n-//   //   const foundCommand = results.length ? results[0].item : null;\r\n-\r\n-//   //   if (foundCommand) {\r\n-//   //     console.log(\"Command found:\", foundCommand.utterance);\r\n-//   //     speak(foundCommand.response);\r\n-//   //     if (foundCommand.route) {\r\n-//   //       navigate(foundCommand.route); // Navigate to the route specified in the command\r\n-//   //     }\r\n-//   //   } else {\r\n-//   //     console.log(\"No command found.\");\r\n-//   //     speak(\"I'm not sure how to respond to that.\");\r\n-//   //   }\r\n-//   // };\r\n-\r\n-//   const handleCommandWithFuse = (command) => {\r\n-//     const fuse = new Fuse(commands, { keys: [\"utterance\"], threshold: 0.4 });\r\n-//     const results = fuse.search(command);\r\n-//     const foundCommand = results.length ? results[0].item : null;\r\n-\r\n-//     if (foundCommand) {\r\n-//       console.log(\"Command found:\", foundCommand.utterance);\r\n-\r\n-//       if (foundCommand.route) {\r\n-//         if (location.pathname !== foundCommand.route) {\r\n-//           navigate(foundCommand.route);\r\n-//           speak(\r\n-//             `Navigating to ${\r\n-//               foundCommand.routeDescription || \"requested page\"\r\n-//             }.`\r\n-//           );\r\n-//         } else {\r\n-//           speak(\r\n-//             `You are already on the ${\r\n-//               foundCommand.routeDescription || \"requested page\"\r\n-//             }.`\r\n-//           );\r\n-//         }\r\n-//       } else if (foundCommand.action) {\r\n-//         foundCommand.action();\r\n-//       }\r\n-\r\n-//       if (foundCommand.response) {\r\n-//         speak(foundCommand.response);\r\n-//       }\r\n-//     } else {\r\n-//       console.log(\"No command found.\");\r\n-//       speak(\"I'm not sure how to respond to that.\");\r\n-//     }\r\n-//   };\r\n-\r\n-//   const commands = [\r\n-//     {\r\n-//       utterance: \"Hello who are you ?\",\r\n-\r\n-//       response:\r\n-//         \"Hi! This is Brane! your Voice bot from Brane Education How can I Assist you Today ?\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"Hello\",\r\n-\r\n-//       response: \"Hi! How can I assist you today?\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"hello\",\r\n-\r\n-//       response: \"Hi! How can I assist you today?\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"Hi.\",\r\n-\r\n-//       response: \"Hello! How can I assist you today?\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"Hey there\",\r\n-\r\n-//       response: \"Hi! How can I assist you today?\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"Good morning Brane.\",\r\n-\r\n-//       response: \"Hey Hiii! Good morning  ! How can I help you?\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"Good afternoon Brane.\",\r\n-\r\n-//       response: \"Hey Hiii! Good after noon ! How can I help you?\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"Good evening Brane.\",\r\n-\r\n-//       response: \"Hey Hiii! Good evening ! How can I help you?\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"can you please take me to login page\",\r\n-//       route: \"/login\",\r\n-//       routeDescription: \"login page\",\r\n-//       response: \"Navigating to the login page.\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"go to login page\",\r\n-//       route: \"/login\",\r\n-//       routeDescription: \"login page\",\r\n-//       response: \"Navigating to the login page.\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"please take me to login page\",\r\n-//       route: \"/login\",\r\n-//       routeDescription: \"login page\",\r\n-//       response: \"Navigating to the login page.\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"Go to login page\",\r\n-//       route: \"/login\",\r\n-//       routeDescription: \"login page\",\r\n-//       response: \"Navigating to the login page.\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"open login page\",\r\n-//       route: \"/login\",\r\n-//       routeDescription: \"login page\",\r\n-//       response: \"Navigating to the login page.\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"can you please take me to signup page\",\r\n-//       route: \"/signup\",\r\n-//       routeDescription: \"signup page\",\r\n-//       response: \"Navigating to the signup page.\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"take me to signup page\",\r\n-//       route: \"/signup\",\r\n-//       routeDescription: \"signup page\",\r\n-//       response: \"Navigating to the signup page.\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"Go to signup page\",\r\n-//       route: \"/signup\",\r\n-//       routeDescription: \"signup page\",\r\n-//       response: \"Navigating to the signup page.\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"open signup page\",\r\n-//       route: \"/signup\",\r\n-//       routeDescription: \"signup page\",\r\n-//       response: \"Navigating to the signup page.\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"what are platform features\",\r\n-\r\n-//       response:\r\n-//         \"Dashboard, Dynamic time table, Learning Networks, Little Masters, Video Based Dictionary, General Search.\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"Features of platform\",\r\n-\r\n-//       response:\r\n-//         \"Dashboard, Dynamic time table, Learning Networks, Little Masters, Video Based Dictionary, General Search.\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"What does the platform offer\",\r\n-\r\n-//       response:\r\n-//         \"Dashboard, Dynamic time table, Learning Networks, Little Masters, Video Based Dictionary, General Search.\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"Say me the features of platform\",\r\n-\r\n-//       response:\r\n-//         \"Dashboard, Dynamic time table, Learning Networks, Little Masters, Video Based Dictionary, General Search.\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"Say me the services of platform\",\r\n-\r\n-//       response:\r\n-//         \"Dashboard, Dynamic time table, Learning Networks, Little Masters, Video Based Dictionary, General Search.\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"tell me the services offered by the platform\",\r\n-\r\n-//       response:\r\n-//         \"Dashboard, Dynamic time table, Learning Networks, Little Masters, Video Based Dictionary, General Search.\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"explain platform services\",\r\n-\r\n-//       response:\r\n-//         \"Dashboard, Dynamic time table, Learning Networks, Little Masters, Video Based Dictionary, General Search.\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"Give me the Parent voice of Julia Harris\",\r\n-\r\n-//       response:\r\n-//         \"Brane education has helped my son a lot in his studies. He improved a lot in his studies and is now able to score good marks in his exams\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"Play today's motivational video\",\r\n-\r\n-//       response: \"I am playing the video\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"Play today's video\",\r\n-\r\n-//       response: \"I am playing Motivational video\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"Leaders Voice\",\r\n-\r\n-//       response:\r\n-//         \"This Voice-interactive AI Platform is a game Changer. It revolutionizes education.\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"Curriculum Supported by Brane Education\",\r\n-\r\n-//       response:\r\n-//         \"we support multiple Boards let me say few Telangana State Board Andhra Pradesh Board Maharashtra Board Assam Board\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"Boards supported by the platform\",\r\n-\r\n-//       response:\r\n-//         \"we support multiple Boards let me say few Telangana State Board Andhra Pradesh Board Maharashtra Board Assam Board\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"Curriculum\",\r\n-\r\n-//       response:\r\n-//         \"we support multiple Boards let me say few Telangana State Board Andhra Pradesh Board Maharashtra Board Assam Board\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"Go to landing page\",\r\n-\r\n-//       response: \"Okay, I am taking you to the landing page.\",\r\n-\r\n-//       route: \"/childpage\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"take me to landing page\",\r\n-\r\n-//       response: \"Okay, I am taking you to the landing page.\",\r\n-\r\n-//       route: \"/childpage\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"move to landing page\",\r\n-\r\n-//       response: \"Okay, I am taking you to the landing page.\",\r\n-\r\n-//       route: \"/childpage\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"roll back to landing page\",\r\n-\r\n-//       response: \"Okay, I am taking you to the landing page.\",\r\n-\r\n-//       route: \"/childpage\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"move to landing page\",\r\n-\r\n-//       response: \"Okay, I am taking you to the landing page.\",\r\n-\r\n-//       route: \"/childpage\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"what is today's quote\",\r\n-\r\n-//       response:\r\n-//         \"Determination is the power that sees us through all our frustration and obstacles. It helps in building our willpower which is the very basis of success.\",\r\n-\r\n-//       // route: \"/childpage\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"Today's Inspirational quote\",\r\n-\r\n-//       response:\r\n-//         \"Determination is the power that sees us through all our frustration and obstacles. It helps in building our willpower which is the very basis of success.\",\r\n-\r\n-//       // route: \"/childpage\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"say me today's quote\",\r\n-\r\n-//       response:\r\n-//         \"Determination is the power that sees us through all our frustration and obstacles. It helps in building our willpower which is the very basis of success.\",\r\n-\r\n-//       // route: \"/childpage\",\r\n-//     },\r\n-//     {\r\n-//       utterance: \"go back\",\r\n-//       response: \"Going back.\",\r\n-//       action: goBack, // Note the use of an action property\r\n-//     },\r\n-//     {\r\n-//       utterance: \"go forward\",\r\n-//       response: \"Going forward.\",\r\n-//       action: goForward,\r\n-//     },\r\n-//     {\r\n-//       utterance: \"play video\",\r\n-//       // response: \"Playing video.\",\r\n-//       action: playVideo,\r\n-//     },\r\n-//     {\r\n-//       utterance: \"pause video\",\r\n-//       // response: \"Pausing video.\",\r\n-//       action: pauseVideo,\r\n-//     },\r\n-//     {\r\n-//       utterance: \"start video\",\r\n-//       // response: \"Playing video.\",\r\n-//       action: playVideo,\r\n-//     },\r\n-//     {\r\n-//       utterance: \"stop video\",\r\n-//       // response: \"Playing video.\",\r\n-//       action: pauseVideo,\r\n-//     },\r\n-//     {\r\n-//       utterance: \"scroll up\",\r\n-//       // response: \"Scrolling up.\",\r\n-//       action: scrollUp,\r\n-//     },\r\n-//     {\r\n-//       utterance: \"scroll down\",\r\n-//       // response: \"Scrolling down.\",\r\n-//       action: scrollDown,\r\n-//     },\r\n-//     {\r\n-//       utterance: \"go up\",\r\n-\r\n-//       // response: \"Scrolling up.\",\r\n-//       action: scrollUp,\r\n-//     },\r\n-//     {\r\n-//       utterance: \"go down\",\r\n-//       // response: \"Scrolling down.\",\r\n-//       action: scrollDown,\r\n-//     },\r\n-//     {\r\n-//       utterance: \"scroll to top\",\r\n-//       action: scrollToTop,\r\n-//     },\r\n-//     {\r\n-//       utterance: \"scroll to bottom\",\r\n-//       action: scrollToBottom,\r\n-//     },\r\n-//   ];\r\n-//   return (\r\n-//     <div className=\"speech-bot-container\">\r\n-//       <div\r\n-//         className={`button-container ${\r\n-//           isListening ? \"voicebotframeactive\" : \"voicebotframe\"\r\n-//         }`}\r\n-//       >\r\n-//         <div onClick={isListening ? stopListening : startListening}>\r\n-//           <iframe\r\n-//             src={\r\n-//               isListening\r\n-//                 ? \"https://lottie.host/?file=a89aca3f-5407-4052-82c3-2048afca7a9f/NpCdWzLSKD.json\"\r\n-//                 : \"https://lottie.host/?file=d2b6cc0e-fe95-4847-85b5-35365fca7e00/vTudpCuPZq.json\"\r\n-//             }\r\n-//             width=\"120\" // Set your desired width\r\n-//             height=\"120\" // Set your desired height\r\n-//             title={isListening ? \"Stop Animation\" : \"Start Animation\"}\r\n-//             className={isListening ? \"voicebotframeactive\" : \"voicebotframe\"}\r\n-//           ></iframe>\r\n-//           {isListening ? (\r\n-//             <div className=\"overlay\" onClick={stopListening}></div>\r\n-//           ) : (\r\n-//             <div className=\"overlay\" onClick={startListening}></div>\r\n-//           )}\r\n-//         </div>\r\n-//       </div>\r\n-//     </div>\r\n-//   );\r\n-// };\r\n-\r\n-// export default VoiceBot;\r\n-\r\n-// All functionalities but messed up\r\n-\r\n-// import React, { useState, useEffect, useRef } from \"react\";\r\n-// import { useNavigate, useLocation } from \"react-router-dom\";\r\n-// import Fuse from \"fuse.js\";\r\n-// import \"./VoiceBot.css\";\r\n-\r\n-// const VoiceBot = ({ videoRef, takeTestRef, goBackRef }) => {\r\n-//   const [isListening, setIsListening] = useState(false);\r\n-//   const [isSpeaking, setIsSpeaking] = useState(false);\r\n-//   const recognition = useRef(null);\r\n-//   const speechSynthesis = useRef(window.speechSynthesis);\r\n-//   const hasGreeted = useRef(false);\r\n-//   const navigate = useNavigate();\r\n-//   const location = useLocation();\r\n-//   const isRecognitionActive = useRef(false);\r\n-\r\n-//   useEffect(() => {\r\n-//     recognition.current = new window.webkitSpeechRecognition();\r\n-//     recognition.current.continuous = true;\r\n-//     recognition.current.interimResults = false;\r\n-//     recognition.current.onresult = onResult;\r\n-//     recognition.current.onend = onRecognitionEnd;\r\n-\r\n-//     return () => {\r\n-//       if (recognition.current) {\r\n-//         recognition.current.abort();\r\n-//       }\r\n-//     };\r\n-//   }, [location.pathname]);\r\n-\r\n-//   const onResult = (event) => {\r\n-//     const resultIndex = event.resultIndex;\r\n-//     const transcript = event.results[resultIndex][0].transcript\r\n-//       .trim()\r\n-//       .toLowerCase();\r\n-\r\n-//     if (event.results[resultIndex].isFinal) {\r\n-//       console.log(`Recognized text: ${transcript}`);\r\n-//       if (transcript.includes(\"brain\")) {\r\n-//         console.log(\"Wake word heard, processing command...\");\r\n-//         handleCommandWithFuse(transcript.replace(\"brain\", \"\"));\r\n-//       }\r\n-//     }\r\n-//   };\r\n-\r\n-//   const startListening = () => {\r\n-//     if (!isRecognitionActive.current) {\r\n-//       setIsListening(true);\r\n-//       recognition.current.start();\r\n-//       isRecognitionActive.current = true;\r\n-//     }\r\n-//   };\r\n-\r\n-//   const stopListening = () => {\r\n-//     if (isRecognitionActive.current) {\r\n-//       setIsListening(false);\r\n-//       recognition.current.stop();\r\n-//       isRecognitionActive.current = false;\r\n-//     }\r\n-//   };\r\n-\r\n-//   const onRecognitionEnd = () => {\r\n-//     isRecognitionActive.current = false;\r\n-//     if (isListening) {\r\n-//       startListening();\r\n-//     }\r\n-//   };\r\n-\r\n-//   const speak = (message) => {\r\n-//     const utterance = new SpeechSynthesisUtterance(message);\r\n-//     utterance.onend = () => {\r\n-//       setIsSpeaking(false);\r\n-//       if (isListening && !isRecognitionActive.current) {\r\n-//         startListening();\r\n-//       }\r\n-//     };\r\n-\r\n-//     setIsSpeaking(true);\r\n-//     if (isRecognitionActive.current) {\r\n-//       stopListening(); // Adjusted to use stopListening\r\n-//     }\r\n-//     speechSynthesis.current.speak(utterance);\r\n-//   };\r\n-\r\n-//   useEffect(() => {\r\n-//     if (isListening && !hasGreeted.current) {\r\n-//       speak(\"Hello, I'm Brane. How can I assist you today?\");\r\n-//       hasGreeted.current = true;\r\n-//     }\r\n-//   }, [isListening]);\r\n-\r\n-//   const goBack = () => {\r\n-//     if (window.history.length > 1) {\r\n-//       navigate(-1);\r\n-//     } else {\r\n-//       speak(\"Can't go back any further.\");\r\n-//     }\r\n-//   };\r\n-\r\n-//   const goForward = () => {\r\n-//     // Unfortunately, there's no direct way to check if you can go forward in the history.\r\n-//     // You might need to manage this state manually based on user navigation.\r\n-//     navigate(1);\r\n-//   };\r\n-\r\n-//   const playVideo = () => {\r\n-//     if (videoRef.current && !videoRef.current.paused) {\r\n-//       speak(\"Video is already playing.\");\r\n-//     } else if (videoRef.current) {\r\n-//       videoRef.current.play();\r\n-//       speak(\"Playing video.\");\r\n-//     } else {\r\n-//       speak(\"No video to play.\");\r\n-//     }\r\n-//   };\r\n-\r\n-//   const pauseVideo = () => {\r\n-//     if (videoRef.current && videoRef.current.paused) {\r\n-//       speak(\"Video is already paused.\");\r\n-//     } else if (videoRef.current) {\r\n-//       videoRef.current.pause();\r\n-//       speak(\"Video paused.\");\r\n-//     } else {\r\n-//       speak(\"No video to pause.\");\r\n-//     }\r\n-//   };\r\n-\r\n-//   const scrollAmount = window.innerHeight * 0.82;\r\n-\r\n-//   const scrollUp = () => {\r\n-//     if (window.pageYOffset === 0) {\r\n-//       speak(\"Already at the top of the page.\");\r\n-//     } else {\r\n-//       window.scrollBy(0, -scrollAmount);\r\n-//       speak(\"Scrolled up.\");\r\n-//     }\r\n-//   };\r\n-\r\n-//   const scrollDown = () => {\r\n-//     const maxScrollTop =\r\n-//       document.documentElement.scrollHeight - window.innerHeight;\r\n-//     if (window.pageYOffset >= maxScrollTop) {\r\n-//       speak(\"Already at the bottom of the page.\");\r\n-//     } else {\r\n-//       window.scrollBy(0, scrollAmount);\r\n-//       speak(\"Scrolled down.\");\r\n-//     }\r\n-//   };\r\n-\r\n-//   const scrollToTop = () => {\r\n-//     if (window.pageYOffset === 0) {\r\n-//       speak(\"Already at the top of the page.\");\r\n-//     } else {\r\n-//       window.scrollTo(0, 0);\r\n-//       speak(\"Scrolled to the top of the page.\");\r\n-//     }\r\n-//   };\r\n-\r\n-//   const scrollToBottom = () => {\r\n-//     const maxScrollTop =\r\n-//       document.documentElement.scrollHeight - window.innerHeight;\r\n-//     if (window.pageYOffset >= maxScrollTop) {\r\n-//       speak(\"Already at the bottom of the page.\");\r\n-//     } else {\r\n-//       window.scrollTo(0, document.body.scrollHeight);\r\n-//       speak(\"Scrolled to the bottom of the page.\");\r\n-//     }\r\n-//   };\r\n-\r\n-//   // const speak = (message) => {\r\n-//   //   const utterance = new SpeechSynthesisUtterance(message);\r\n-//   //   utterance.onend = () => {\r\n-//   //     setIsSpeaking(false);\r\n-//   //     console.log(\"Speaking ended.\");\r\n-//   //     // Only restart recognition if we're still supposed to be listening\r\n-//   //     // if (isListening) {\r\n-//   //     //   if (restartRecognitionTimeout.current) {\r\n-//   //     //     clearTimeout(restartRecognitionTimeout.current);\r\n-//   //     //   }\r\n-//   //     //   restartRecognitionTimeout.current = setTimeout(() => {\r\n-//   //     //     console.log(\"Recognition restarted.\");\r\n-//   //     //     recognition.current.start();\r\n-//   //     //   }, 100); // Delay to prevent immediate restart\r\n-//   //     // }\r\n-//   //     if (isListening && !recognition.current.starting) { // Check the flag before restarting\r\n-//   //       recognition.current.starting = true; // Set the flag when starting recognition\r\n-//   //       recognition.current.start();\r\n-//   //     }\r\n-//   //   };\r\n-\r\n-//   //   setIsSpeaking(true);\r\n-//   //   console.log(\"Speaking started.\");\r\n-//   //   recognition.current.stop(); // Stop recognition when the bot starts speaking\r\n-//   //   speechSynthesis.current.speak(utterance);\r\n-//   // };\r\n-\r\n-//   // const onRecognitionEnd = () => {\r\n-//   //   console.log(\"Recognition ended.\");\r\n-//   //   setIsRecognitionActive(false); // Update state when recognition ends\r\n-//   //   recognition.current.starting = false; // Reset the flag when recognition ends\r\n-//   //   // We now check if the recognition is already running before starting it again\r\n-//   //   if (isListening && !isSpeaking && !recognition.current?.starting) {\r\n-//   //     console.log(\"Restarting recognition.\");\r\n-//   //     recognition.current.start();\r\n-//   //   }\r\n-//   // };\r\n-\r\n-//   // useEffect(() => {\r\n-//   //   if (isListening && !hasGreeted.current) {\r\n-//   //     speak(\"Hello, I'm Brane. How can I assist you today?\");\r\n-//   //     hasGreeted.current = true;\r\n-//   //   } else if (isListening && !isSpeaking) {\r\n-//   //     recognition.current.start();\r\n-//   //   }\r\n-//   // }, [isListening, isSpeaking]);\r\n-\r\n-//   // const startListening = () => {\r\n-//   //   console.log(\"Attempting to start listening.\");\r\n-//   //   if (recognition.current && !recognition.current.starting) {\r\n-//   //     setIsListening(true);\r\n-//   //     recognition.current.starting = true; // Set the flag when starting recognition\r\n-//   //     recognition.current.start();\r\n-//   //     console.log(\"Listening started.\");\r\n-//   //   }\r\n-//   // };\r\n-\r\n-//   // const stopListening = () => {\r\n-//   //   console.log(\"Stopping listening.\");\r\n-\r\n-//   //   setIsListening(false);\r\n-//   //   recognition.current.stop();\r\n-//   //   if (speechSynthesis.current.speaking) {\r\n-//   //     speechSynthesis.current.cancel();\r\n-//   //   }\r\n-//   //   if (restartRecognitionTimeout.current) {\r\n-//   //     clearTimeout(restartRecognitionTimeout.current);\r\n-//   //   }\r\n-//   //   console.log(\"Listening stopped.\");\r\n-//   // };\r\n-//   // Handle start and stop listening logic\r\n-\r\n-//   useEffect(() => {\r\n-//     if (isListening && !hasGreeted.current) {\r\n-//       speak(\"Hello, I'm Brane. How can I assist you today?\");\r\n-//       hasGreeted.current = true;\r\n-//     }\r\n-//   }, [isListening]);\r\n-\r\n-//   // const handleCommandWithFuse = (command) => {\r\n-//   //   const fuse = new Fuse(commands, { keys: [\"utterance\"], threshold: 0.4 });\r\n-//   //   const results = fuse.search(command);\r\n-//   //   const foundCommand = results.length ? results[0].item : null;\r\n-\r\n-//   //   if (foundCommand) {\r\n-//   //     console.log(\"Command found:\", foundCommand.utterance);\r\n-//   //     speak(foundCommand.response);\r\n-//   //     if (foundCommand.route) {\r\n-//   //       navigate(foundCommand.route); // Navigate to the route specified in the command\r\n-//   //     }\r\n-//   //   } else {\r\n-//   //     console.log(\"No command found.\");\r\n-//   //     speak(\"I'm not sure how to respond to that.\");\r\n-//   //   }\r\n-//   // };\r\n-\r\n-//   const handleCommandWithFuse = (command) => {\r\n-//     const fuse = new Fuse(commands, { keys: [\"utterance\"], threshold: 0.4 });\r\n-//     const results = fuse.search(command);\r\n-//     const foundCommand = results.length ? results[0].item : null;\r\n-\r\n-//     if (foundCommand) {\r\n-//       console.log(\"Command found:\", foundCommand.utterance);\r\n-\r\n-//       if (foundCommand.action) {\r\n-//         foundCommand.action();\r\n-//       } else if (foundCommand.route) {\r\n-//         navigate(foundCommand.route);\r\n-//       }\r\n-\r\n-//       if (foundCommand.response) {\r\n-//         speak(foundCommand.response);\r\n-//       }\r\n-//     } else {\r\n-//       console.log(\"No command found.\");\r\n-//       speak(\"I'm not sure how to respond to that.\");\r\n-//     }\r\n-//   };\r\n-\r\n-//   const commands = [\r\n-//     {\r\n-//       utterance: \"Hello who are you ?\",\r\n-\r\n-//       response:\r\n-//         \"Hi! This is Brane! your Voice bot from Brane Education How can I Assist you Today ?\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"Hello\",\r\n-\r\n-//       response: \"Hi! How can I assist you today?\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"hello\",\r\n-\r\n-//       response: \"Hi! How can I assist you today?\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"Hi.\",\r\n-\r\n-//       response: \"Hello! How can I assist you today?\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"Hey there\",\r\n-\r\n-//       response: \"Hi! How can I assist you today?\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"Good morning Brane.\",\r\n-\r\n-//       response: \"Hey Hiii! Good morning  ! How can I help you?\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"Good afternoon Brane.\",\r\n-\r\n-//       response: \"Hey Hiii! Good after noon ! How can I help you?\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"Good evening Brane.\",\r\n-\r\n-//       response: \"Hey Hiii! Good evening ! How can I help you?\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"can you please take me to login page\",\r\n-//       route: \"/login\",\r\n-//       routeDescription: \"login page\",\r\n-//       response: \"Navigating to the login page.\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"go to login page\",\r\n-//       route: \"/login\",\r\n-//       routeDescription: \"login page\",\r\n-//       response: \"Navigating to the login page.\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"please take me to login page\",\r\n-//       route: \"/login\",\r\n-//       routeDescription: \"login page\",\r\n-//       response: \"Navigating to the login page.\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"Go to login page\",\r\n-//       route: \"/login\",\r\n-//       routeDescription: \"login page\",\r\n-//       response: \"Navigating to the login page.\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"open login page\",\r\n-//       route: \"/login\",\r\n-//       routeDescription: \"login page\",\r\n-//       response: \"Navigating to the login page.\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"can you please take me to signup page\",\r\n-//       route: \"/signup\",\r\n-//       routeDescription: \"signup page\",\r\n-//       response: \"Navigating to the signup page.\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"take me to signup page\",\r\n-//       route: \"/signup\",\r\n-//       routeDescription: \"signup page\",\r\n-//       response: \"Navigating to the signup page.\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"Go to signup page\",\r\n-//       route: \"/signup\",\r\n-//       routeDescription: \"signup page\",\r\n-//       response: \"Navigating to the signup page.\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"open signup page\",\r\n-//       route: \"/signup\",\r\n-//       routeDescription: \"signup page\",\r\n-//       response: \"Navigating to the signup page.\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"what are platform features\",\r\n-\r\n-//       response:\r\n-//         \"Dashboard, Dynamic time table, Learning Networks, Little Masters, Video Based Dictionary, General Search.\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"Features of platform\",\r\n-\r\n-//       response:\r\n-//         \"Dashboard, Dynamic time table, Learning Networks, Little Masters, Video Based Dictionary, General Search.\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"What does the platform offer\",\r\n-\r\n-//       response:\r\n-//         \"Dashboard, Dynamic time table, Learning Networks, Little Masters, Video Based Dictionary, General Search.\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"Say me the features of platform\",\r\n-\r\n-//       response:\r\n-//         \"Dashboard, Dynamic time table, Learning Networks, Little Masters, Video Based Dictionary, General Search.\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"Say me the services of platform\",\r\n-\r\n-//       response:\r\n-//         \"Dashboard, Dynamic time table, Learning Networks, Little Masters, Video Based Dictionary, General Search.\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"tell me the services offered by the platform\",\r\n-\r\n-//       response:\r\n-//         \"Dashboard, Dynamic time table, Learning Networks, Little Masters, Video Based Dictionary, General Search.\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"explain platform services\",\r\n-\r\n-//       response:\r\n-//         \"Dashboard, Dynamic time table, Learning Networks, Little Masters, Video Based Dictionary, General Search.\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"Give me the Parent voice of Julia Harris\",\r\n-\r\n-//       response:\r\n-//         \"Brane education has helped my son a lot in his studies. He improved a lot in his studies and is now able to score good marks in his exams\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"Play today's motivational video\",\r\n-\r\n-//       response: \"I am playing the video\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"Play today's video\",\r\n-\r\n-//       response: \"I am playing Motivational video\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"Leaders Voice\",\r\n-\r\n-//       response:\r\n-//         \"This Voice-interactive AI Platform is a game Changer. It revolutionizes education.\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"Curriculum Supported by Brane Education\",\r\n-\r\n-//       response:\r\n-//         \"we support multiple Boards let me say few Telangana State Board Andhra Pradesh Board Maharashtra Board Assam Board\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"Boards supported by the platform\",\r\n-\r\n-//       response:\r\n-//         \"we support multiple Boards let me say few Telangana State Board Andhra Pradesh Board Maharashtra Board Assam Board\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"Curriculum\",\r\n-\r\n-//       response:\r\n-//         \"we support multiple Boards let me say few Telangana State Board Andhra Pradesh Board Maharashtra Board Assam Board\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"Go to landing page\",\r\n-\r\n-//       response: \"Okay, I am taking you to the landing page.\",\r\n-\r\n-//       route: \"/childpage\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"take me to landing page\",\r\n-\r\n-//       response: \"Okay, I am taking you to the landing page.\",\r\n-\r\n-//       route: \"/childpage\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"move to landing page\",\r\n-\r\n-//       response: \"Okay, I am taking you to the landing page.\",\r\n-\r\n-//       route: \"/childpage\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"roll back to landing page\",\r\n-\r\n-//       response: \"Okay, I am taking you to the landing page.\",\r\n-\r\n-//       route: \"/childpage\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"move to landing page\",\r\n-\r\n-//       response: \"Okay, I am taking you to the landing page.\",\r\n-\r\n-//       route: \"/childpage\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"what is today's quote\",\r\n-\r\n-//       response:\r\n-//         \"Determination is the power that sees us through all our frustration and obstacles. It helps in building our willpower which is the very basis of success.\",\r\n-\r\n-//       // route: \"/childpage\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"Today's Inspirational quote\",\r\n-\r\n-//       response:\r\n-//         \"Determination is the power that sees us through all our frustration and obstacles. It helps in building our willpower which is the very basis of success.\",\r\n-\r\n-//       // route: \"/childpage\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"say me today's quote\",\r\n-\r\n-//       response:\r\n-//         \"Determination is the power that sees us through all our frustration and obstacles. It helps in building our willpower which is the very basis of success.\",\r\n-\r\n-//       // route: \"/childpage\",\r\n-//     },\r\n-//     {\r\n-//       utterance: \"go back\",\r\n-//       response: \"Going back.\",\r\n-//       action: goBack, // Note the use of an action property\r\n-//     },\r\n-//     {\r\n-//       utterance: \"go forward\",\r\n-//       response: \"Going forward.\",\r\n-//       action: goForward,\r\n-//     },\r\n-//     {\r\n-//       utterance: \"play video\",\r\n-//       // response: \"Playing video.\",\r\n-//       action: playVideo,\r\n-//     },\r\n-//     {\r\n-//       utterance: \"pause video\",\r\n-//       // response: \"Pausing video.\",\r\n-//       action: pauseVideo,\r\n-//     },\r\n-//     {\r\n-//       utterance: \"start video\",\r\n-//       // response: \"Playing video.\",\r\n-//       action: playVideo,\r\n-//     },\r\n-//     {\r\n-//       utterance: \"stop video\",\r\n-//       // response: \"Playing video.\",\r\n-//       action: pauseVideo,\r\n-//     },\r\n-//     {\r\n-//       utterance: \"scroll up\",\r\n-//       // response: \"Scrolling up.\",\r\n-//       action: scrollUp,\r\n-//     },\r\n-//     {\r\n-//       utterance: \"scroll down\",\r\n-//       // response: \"Scrolling down.\",\r\n-//       action: scrollDown,\r\n-//     },\r\n-//     {\r\n-//       utterance: \"go up\",\r\n-\r\n-//       // response: \"Scrolling up.\",\r\n-//       action: scrollUp,\r\n-//     },\r\n-//     {\r\n-//       utterance: \"go down\",\r\n-//       // response: \"Scrolling down.\",\r\n-//       action: scrollDown,\r\n-//     },\r\n-//     {\r\n-//       utterance: \"scroll to top\",\r\n-//       action: scrollToTop,\r\n-//     },\r\n-//     {\r\n-//       utterance: \"scroll to bottom\",\r\n-//       action: scrollToBottom,\r\n-//     },\r\n-//     {\r\n-//       utterance: \"go back\",\r\n-//       action: goBackRef?.current?.click, // Use goBackRef directly\r\n-//       response: \"Going back.\",\r\n-//     },\r\n-//     {\r\n-//       utterance: \"take test\",\r\n-//       action: takeTestRef?.current?.click, // Use takeTestRef directly\r\n-//       response: \"Starting the test.\",\r\n-//     },\r\n-//   ];\r\n-//   return (\r\n-//     <div className=\"speech-bot-container\">\r\n-//       <div\r\n-//         className={`button-container ${\r\n-//           isListening ? \"voicebotframeactive\" : \"voicebotframe\"\r\n-//         }`}\r\n-//       >\r\n-//         <div onClick={isListening ? stopListening : startListening}>\r\n-//           <iframe\r\n-//             src={\r\n-//               isListening\r\n-//                 ? \"https://lottie.host/?file=a89aca3f-5407-4052-82c3-2048afca7a9f/NpCdWzLSKD.json\"\r\n-//                 : \"https://lottie.host/?file=d2b6cc0e-fe95-4847-85b5-35365fca7e00/vTudpCuPZq.json\"\r\n-//             }\r\n-//             width=\"120\" // Set your desired width\r\n-//             height=\"120\" // Set your desired height\r\n-//             title={isListening ? \"Stop Animation\" : \"Start Animation\"}\r\n-//             className={isListening ? \"voicebotframeactive\" : \"voicebotframe\"}\r\n-//           ></iframe>\r\n-//           {isListening ? (\r\n-//             <div className=\"overlay\" onClick={stopListening}></div>\r\n-//           ) : (\r\n-//             <div className=\"overlay\" onClick={startListening}></div>\r\n-//           )}\r\n-//         </div>\r\n-//       </div>\r\n-//     </div>\r\n-//   );\r\n-// };\r\n-\r\n-// export default VoiceBot;\r\n"
                },
                {
                    "date": 1700655549683,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,3718 @@\n+import React, { useState, useEffect, useRef } from \"react\";\r\n+import { useNavigate, useLocation } from \"react-router-dom\";\r\n+import Fuse from \"fuse.js\";\r\n+import \"./VoiceBot.css\";\r\n+import chatbotimage from \"../../assets/chatbotgif.gif\";\r\n+\r\n+const VoiceBot = ({ videoRefs }) => {\r\n+  const [isListening, setIsListening] = useState(false);\r\n+  const [isSpeaking, setIsSpeaking] = useState(false);\r\n+  const recognition = useRef(null);\r\n+  const speechSynthesis = useRef(window.speechSynthesis);\r\n+  const [hasGreeted, setHasGreeted] = useState(false);\r\n+  const navigate = useNavigate();\r\n+\r\n+  // Initialize speech recognition\r\n+  useEffect(() => {\r\n+    recognition.current = new window.webkitSpeechRecognition();\r\n+    recognition.current.continuous = true;\r\n+    recognition.current.interimResults = false;\r\n+    recognition.current.onresult = onResult;\r\n+    recognition.current.onend = onRecognitionEnd;\r\n+    recognition.current.starting = false;\r\n+\r\n+    recognition.current.onerror = (event) => {\r\n+      console.error(\"Recognition error:\", event.error);\r\n+      if (isListening && !isSpeaking) {\r\n+        restartRecognition();\r\n+      }\r\n+    };\r\n+\r\n+    return () => {\r\n+      if (recognition.current) {\r\n+        recognition.current.abort();\r\n+      }\r\n+    };\r\n+  }, []);\r\n+\r\n+  useEffect(() => {\r\n+    const checkRecognition = () => {\r\n+      if (isListening && !isSpeaking && !recognition.current.starting) {\r\n+        console.log(\"Restarting recognition because it's not active.\");\r\n+        recognition.current.starting = true;\r\n+        recognition.current.start();\r\n+        console.log(\"Restarted recognition.\");\r\n+      }\r\n+    };\r\n+\r\n+    const recognitionCheckInterval = setInterval(checkRecognition, 500); // Check every .5 second\r\n+\r\n+    return () => {\r\n+      clearInterval(recognitionCheckInterval);\r\n+    };\r\n+  }, [isListening, isSpeaking]);\r\n+\r\n+  const historyStack = useRef([]);\r\n+\r\n+  useEffect(() => {\r\n+    return () => {\r\n+      // Clean up the listener when the component unmounts\r\n+      window.removeEventListener(\"popstate\", handlePopState);\r\n+    };\r\n+  }, []);\r\n+\r\n+  const handlePopState = () => {\r\n+    // This needs to handle both back and forward browser actions\r\n+    // Use some logic to determine whether it's a back or forward action\r\n+    // For simplicity, assume it's always back\r\n+    historyStack.current.pop();\r\n+    forwardStack.current.length = 0; // Clear forward stack on manual navigation\r\n+  };\r\n+\r\n+  // Listen to popstate events to update the history stack\r\n+  useEffect(() => {\r\n+    window.addEventListener(\"popstate\", handlePopState);\r\n+  }, []);\r\n+\r\n+  const forwardStack = useRef([]);\r\n+\r\n+  const goBack = () => {\r\n+    if (window.history.state && window.history.state.idx > 0) {\r\n+      window.history.back();\r\n+      speak(\"Going back\");\r\n+    } else {\r\n+      speak(\"Can't go back any further.\");\r\n+    }\r\n+  };\r\n+\r\n+  const goForward = () => {\r\n+    if (\r\n+      window.history.state &&\r\n+      window.history.state.idx < window.history.length - 1\r\n+    ) {\r\n+      window.history.forward();\r\n+      speak(\"Going forward\");\r\n+    } else {\r\n+      speak(\"No forward history available.\");\r\n+    }\r\n+  };\r\n+\r\n+  const scrollAmount = window.innerHeight * 0.82;\r\n+\r\n+  const scrollUp = () => {\r\n+    if (window.pageYOffset === 0) {\r\n+      speak(\"Already at the top of the page.\");\r\n+    } else {\r\n+      window.scrollBy(0, -scrollAmount);\r\n+      speak(\"Scrolled up.\");\r\n+    }\r\n+  };\r\n+\r\n+  const scrollDown = () => {\r\n+    const maxScrollTop =\r\n+      document.documentElement.scrollHeight - window.innerHeight;\r\n+    if (window.pageYOffset >= maxScrollTop) {\r\n+      speak(\"Already at the bottom of the page.\");\r\n+    } else {\r\n+      window.scrollBy(0, scrollAmount);\r\n+      speak(\"Scrolled down.\");\r\n+    }\r\n+  };\r\n+\r\n+  const scrollToTop = () => {\r\n+    if (window.pageYOffset === 0) {\r\n+      speak(\"Already at the top of the page.\");\r\n+    } else {\r\n+      window.scrollTo(0, 0);\r\n+      speak(\"Scrolled to the top of the page.\");\r\n+    }\r\n+  };\r\n+\r\n+  const scrollToBottom = () => {\r\n+    const maxScrollTop =\r\n+      document.documentElement.scrollHeight - window.innerHeight;\r\n+    if (window.pageYOffset >= maxScrollTop) {\r\n+      speak(\"Already at the bottom of the page.\");\r\n+    } else {\r\n+      window.scrollTo(0, document.body.scrollHeight);\r\n+      speak(\"Scrolled to the bottom of the page.\");\r\n+    }\r\n+  };\r\n+\r\n+\r\n+  const controlVideo = (videoId, action) => {\r\n+    const videoRef = videoRefs.current.get(videoId);\r\n+    if (videoRef && videoRef.current) {\r\n+      switch (action) {\r\n+        case 'play':\r\n+          videoRef.current.play();\r\n+          break;\r\n+        case 'pause':\r\n+          videoRef.current.pause();\r\n+          break;\r\n+        case 'mute':\r\n+          videoRef.current.muted = true;\r\n+          break;\r\n+        case 'unmute':\r\n+          videoRef.current.muted = false;\r\n+          break;\r\n+        case 'fullscreen':\r\n+          if (videoRef.current.requestFullscreen) {\r\n+            videoRef.current.requestFullscreen();\r\n+          } else if (videoRef.current.webkitRequestFullscreen) { // Safari\r\n+            videoRef.current.webkitRequestFullscreen();\r\n+          } else if (videoRef.current.msRequestFullscreen) { // IE11\r\n+            videoRef.current.msRequestFullscreen();\r\n+          }\r\n+          break;\r\n+        case 'exitFullscreen':\r\n+          if (document.exitFullscreen) {\r\n+            document.exitFullscreen();\r\n+          } else if (document.webkitExitFullscreen) { // Safari\r\n+            document.webkitExitFullscreen();\r\n+          } else if (document.msExitFullscreen) { // IE11\r\n+            document.msExitFullscreen();\r\n+          }\r\n+          break;\r\n+        case 'increaseVolume':\r\n+          if (videoRef.current.volume < 1) {\r\n+            videoRef.current.volume = Math.min(1, videoRef.current.volume + 0.1);\r\n+          }\r\n+          break;\r\n+        case 'decreaseVolume':\r\n+          if (videoRef.current.volume > 0) {\r\n+            videoRef.current.volume = Math.max(0, videoRef.current.volume - 0.1);\r\n+          }\r\n+          break;\r\n+        // Add other cases as needed\r\n+      }\r\n+      speak(`${action.charAt(0).toUpperCase() + action.slice(1).replace(/([A-Z])/g, ' $1').toLowerCase()}ing video.`);\r\n+    } else {\r\n+      speak(`Video not found.`);\r\n+    }\r\n+  };\r\n+\r\n+  const speak = (message) => {\r\n+    const utterance = new SpeechSynthesisUtterance(message);\r\n+    utterance.onend = () => {\r\n+      setIsSpeaking(false);\r\n+      // Restart recognition after speaking has ended\r\n+      if (isListening) {\r\n+        restartRecognition();\r\n+      }\r\n+    };\r\n+\r\n+    setIsSpeaking(true);\r\n+    // Stop recognition when the bot starts speaking\r\n+    if (recognition.current) {\r\n+      recognition.current.abort();\r\n+    }\r\n+    speechSynthesis.current.speak(utterance);\r\n+  };\r\n+\r\n+  const restartRecognition = () => {\r\n+    // Check if recognition is not already started and if the bot is set to listen\r\n+    if (\r\n+      recognition.current &&\r\n+      !recognition.current.starting &&\r\n+      isListening &&\r\n+      !isSpeaking\r\n+    ) {\r\n+      recognition.current.abort(); // Ensure any ongoing recognition is stopped\r\n+      recognition.current.starting = true;\r\n+      recognition.current.start();\r\n+    }\r\n+  };\r\n+\r\n+  // Restart recognition when bot finishes speaking and isListening is true\r\n+  useEffect(() => {\r\n+    if (!isSpeaking && isListening) {\r\n+      restartRecognition();\r\n+    }\r\n+  }, [isSpeaking, isListening]);\r\n+\r\n+  const onResult = (event) => {\r\n+    const resultIndex = event.resultIndex;\r\n+    const transcript = event.results[resultIndex][0].transcript\r\n+      .trim()\r\n+      .toLowerCase();\r\n+\r\n+    if (event.results[resultIndex].isFinal) {\r\n+      console.log(`Recognized text: ${transcript}`);\r\n+      if (transcript.includes(\"brain\")) {\r\n+        console.log(\"Wake word heard, processing command...\");\r\n+        handleCommandWithFuse(transcript.replace(\"brain\", \"\"));\r\n+      }\r\n+    }\r\n+  };\r\n+\r\n+  const onRecognitionEnd = () => {\r\n+    recognition.current.starting = false;\r\n+    if (isListening && !isSpeaking) {\r\n+      restartRecognition();\r\n+    }\r\n+  };\r\n+\r\n+  useEffect(() => {\r\n+    if (isListening && !hasGreeted) {\r\n+      speak(\"Hello, I'm Brane. How can I help you today?\");\r\n+      setHasGreeted(true);\r\n+    }\r\n+  }, [isListening, hasGreeted]);\r\n+\r\n+  // Updated startListening function\r\n+  const startListening = () => {\r\n+    setIsListening(true);\r\n+    if (!recognition.current.starting) {\r\n+      restartRecognition();\r\n+    }\r\n+  };\r\n+\r\n+  // Updated stopListening function\r\n+  const stopListening = () => {\r\n+    setIsListening(false);\r\n+    if (speechSynthesis.current.speaking) {\r\n+      speechSynthesis.current.cancel();\r\n+    }\r\n+    recognition.current.abort();\r\n+  };\r\n+\r\n+  const handleCommandWithFuse = (command) => {\r\n+    const fuse = new Fuse(commands, { keys: [\"utterance\"], threshold: 0.4 });\r\n+    const results = fuse.search(command);\r\n+    const foundCommand = results.length ? results[0].item : null;\r\n+\r\n+    if (foundCommand) {\r\n+      console.log(\"Command found:\", foundCommand.utterance);\r\n+\r\n+      if (foundCommand.action) {\r\n+        foundCommand.action();\r\n+      } else if (foundCommand.route) {\r\n+        navigate(foundCommand.route);\r\n+      }\r\n+\r\n+      // Speak after performing the action or navigation\r\n+      speak(foundCommand.response);\r\n+    } else {\r\n+      console.log(\"No command found.\");\r\n+      speak(\"I'm not sure how to respond to that.\");\r\n+    }\r\n+  };\r\n+\r\n+  const commands = [\r\n+    {\r\n+      utterance: \"Hello who are you ?\",\r\n+\r\n+      response:\r\n+        \"Hi! This is Brane! your Voice bot from Brane Education How can I Assist you Today ?\",\r\n+    },\r\n+\r\n+    {\r\n+      utterance: \"Hello\",\r\n+\r\n+      response: \"Hi! How can I assist you today?\",\r\n+    },\r\n+\r\n+    {\r\n+      utterance: \"hello\",\r\n+\r\n+      response: \"Hi! How can I assist you today?\",\r\n+    },\r\n+\r\n+    {\r\n+      utterance: \"Hi.\",\r\n+\r\n+      response: \"Hello! How can I assist you today?\",\r\n+    },\r\n+\r\n+    {\r\n+      utterance: \"Hey there\",\r\n+\r\n+      response: \"Hi! How can I assist you today?\",\r\n+    },\r\n+\r\n+    {\r\n+      utterance: \"Good morning Brane.\",\r\n+\r\n+      response: \"Hey Hiii! Good morning  ! How can I help you?\",\r\n+    },\r\n+\r\n+    {\r\n+      utterance: \"Good afternoon Brane.\",\r\n+\r\n+      response: \"Hey Hiii! Good after noon ! How can I help you?\",\r\n+    },\r\n+\r\n+    {\r\n+      utterance: \"Good evening Brane.\",\r\n+\r\n+      response: \"Hey Hiii! Good evening ! How can I help you?\",\r\n+    },\r\n+\r\n+    {\r\n+      utterance: \"take me to homepage\",\r\n+\r\n+      route: \"/\",\r\n+\r\n+      response: \"You're in Homepage now\",\r\n+    },\r\n+    {\r\n+      utterance: \"open homepage\",\r\n+\r\n+      route: \"/\",\r\n+\r\n+      response: \"You're in Homepage now\",\r\n+    },\r\n+    {\r\n+      utterance: \"go to homepage\",\r\n+\r\n+      route: \"/\",\r\n+\r\n+      response: \"You're in Homepage now\",\r\n+    },\r\n+    {\r\n+      utterance: \"go back to homepage\",\r\n+\r\n+      route: \"/\",\r\n+\r\n+      response: \"You're in Homepage now\",\r\n+    },\r\n+    {\r\n+      utterance: \"can you please take me to login page\",\r\n+\r\n+      route: \"/login\",\r\n+\r\n+      response: \"Here's the Login Page, Please Login\",\r\n+    },\r\n+\r\n+    {\r\n+      utterance: \"please take me to login page\",\r\n+\r\n+      route: \"/login\",\r\n+\r\n+      response: \"Here's the Login Page, Please Login\",\r\n+    },\r\n+\r\n+    {\r\n+      utterance: \"Go to login page\",\r\n+\r\n+      route: \"/login\",\r\n+\r\n+      response: \"Here's the Login Page, Please Login\",\r\n+    },\r\n+\r\n+    {\r\n+      utterance: \"open login page\",\r\n+\r\n+      route: \"/login\",\r\n+\r\n+      response: \"Here's the Login Page, Please Login\",\r\n+    },\r\n+\r\n+    {\r\n+      utterance: \"can you please take me to signup page\",\r\n+\r\n+      route: \"/signup\",\r\n+\r\n+      response: \"Here's the signup page. Please proceed With Registration.\",\r\n+    },\r\n+\r\n+    {\r\n+      utterance: \"take me to signup page\",\r\n+\r\n+      route: \"/signup\",\r\n+\r\n+      response: \"Here's the signup page. Please proceed With Registration.\",\r\n+    },\r\n+\r\n+    {\r\n+      utterance: \"Go to signup page\",\r\n+\r\n+      route: \"/signup\",\r\n+\r\n+      response: \"Here's the signup page. Please proceed With Registration.\",\r\n+    },\r\n+\r\n+    {\r\n+      utterance: \"open signup page\",\r\n+\r\n+      route: \"/signup\",\r\n+\r\n+      response: \"Here's the signup page. Please proceed With Registration.\",\r\n+    },\r\n+\r\n+    {\r\n+      utterance: \"Go to face id\",\r\n+\r\n+      route: \"/login/faceid\",\r\n+\r\n+      response: \"Here's Face ID Login. Please proceed.\",\r\n+    },\r\n+\r\n+    {\r\n+      utterance: \"Go to face id login\",\r\n+\r\n+      route: \"/login/faceid\",\r\n+\r\n+      response: \"Here's Face ID Login. Please proceed.\",\r\n+    },\r\n+    {\r\n+      utterance: \"Go to face login\",\r\n+\r\n+      route: \"/login/faceid\",\r\n+\r\n+      response: \"Here's Face ID Login. Please proceed.\",\r\n+    },\r\n+\r\n+    {\r\n+      utterance: \"login with face id\",\r\n+\r\n+      route: \"/login/faceid\",\r\n+\r\n+      response: \"Here's Face ID Login. Please proceed.\",\r\n+    },\r\n+\r\n+    {\r\n+      utterance: \"login with face\",\r\n+\r\n+      route: \"/login/faceid\",\r\n+\r\n+      response: \"Here's Face ID Login. Please proceed.\",\r\n+    },\r\n+\r\n+    {\r\n+      utterance: \"i want to login with face\",\r\n+\r\n+      route: \"/login/faceid\",\r\n+\r\n+      response: \"Here's Face ID Login. Please proceed.\",\r\n+    },\r\n+\r\n+    {\r\n+      utterance: \"login with voice\",\r\n+\r\n+      route: \"/login/voiceid\",\r\n+\r\n+      response: \"Here's Voice Login. Please proceed.\",\r\n+    },\r\n+\r\n+    {\r\n+      utterance: \"i want to login with voice\",\r\n+\r\n+      route: \"/login/voiceid\",\r\n+\r\n+      response: \"Here's Voice Login. Please proceed.\",\r\n+    },\r\n+\r\n+    {\r\n+      utterance: \"go to voice login\",\r\n+\r\n+      route: \"/login/voiceid\",\r\n+\r\n+      response: \"Here's Voice Login. Please proceed.\",\r\n+    },\r\n+\r\n+    {\r\n+      utterance: \"login with voice\",\r\n+\r\n+      route: \"/login/voiceid\",\r\n+\r\n+      response: \"Here's Voice Login. Please proceed.\",\r\n+    },\r\n+\r\n+    {\r\n+      utterance: \"login with mobile\",\r\n+\r\n+      route: \"/login/mobile\",\r\n+\r\n+      response: \"Here's Mobile Login. Please proceed.\",\r\n+    },\r\n+\r\n+    {\r\n+      utterance: \"i want to login with mobile\",\r\n+\r\n+      route: \"/login/mobile\",\r\n+\r\n+      response: \"Here's Mobile Login. Please proceed.\",\r\n+    },\r\n+    {\r\n+      utterance: \"go to mobile login\",\r\n+\r\n+      route: \"/login/mobile\",\r\n+\r\n+      response: \"Here's Mobile Login. Please proceed.\",\r\n+    },\r\n+    {\r\n+      utterance: \"go to about page\",\r\n+\r\n+      route: \"/aboutus\",\r\n+\r\n+      response: \"This is About us.\",\r\n+    },\r\n+    {\r\n+      utterance: \"go to about us page\",\r\n+\r\n+      route: \"/aboutus\",\r\n+\r\n+      response: \"This is About us.\",\r\n+    },\r\n+    {\r\n+      utterance: \"open about us page\",\r\n+\r\n+      route: \"/aboutus\",\r\n+\r\n+      response: \"This is About us.\",\r\n+    },\r\n+    {\r\n+      utterance: \"open about page\",\r\n+\r\n+      route: \"/aboutus\",\r\n+\r\n+      response: \"This is About us.\",\r\n+    },\r\n+    {\r\n+      utterance: \"take me to about page\",\r\n+\r\n+      route: \"/aboutus\",\r\n+\r\n+      response: \"This is About us.\",\r\n+    },\r\n+    {\r\n+      utterance: \"take me to about us page\",\r\n+\r\n+      route: \"/aboutus\",\r\n+\r\n+      response: \"This is About us.\",\r\n+    },\r\n+\r\n+    {\r\n+      utterance: \"go to contact page\",\r\n+\r\n+      route: \"/contactus\",\r\n+\r\n+      response: \"You can contact us from here\",\r\n+    },\r\n+    {\r\n+      utterance: \"go to contact us page\",\r\n+\r\n+      route: \"/contactus\",\r\n+\r\n+      response: \"You can contact us from here\",\r\n+    },\r\n+    {\r\n+      utterance: \"open contact us page\",\r\n+\r\n+      route: \"/contactus\",\r\n+\r\n+      response: \"You can contact us from here\",\r\n+    },\r\n+    {\r\n+      utterance: \"open contact page\",\r\n+\r\n+      route: \"/contactus\",\r\n+\r\n+      response: \"You can contact us from here\",\r\n+    },\r\n+    {\r\n+      utterance: \"take me to about page\",\r\n+\r\n+      route: \"/contactus\",\r\n+\r\n+      response: \"You can contact us from here\",\r\n+    },\r\n+    {\r\n+      utterance: \"take me to contact us page\",\r\n+\r\n+      route: \"/contactus\",\r\n+\r\n+      response: \"You can contact us from here\",\r\n+    },\r\n+\r\n+    {\r\n+      utterance: \"what are platform features\",\r\n+\r\n+      response:\r\n+        \"Dashboard, Dynamic time table, Learning Networks, Little Masters, Video Based Dictionary, General Search.\",\r\n+    },\r\n+\r\n+    {\r\n+      utterance: \"Features of platform\",\r\n+\r\n+      response:\r\n+        \"Dashboard, Dynamic time table, Learning Networks, Little Masters, Video Based Dictionary, General Search.\",\r\n+    },\r\n+\r\n+    {\r\n+      utterance: \"What does the platform offer\",\r\n+\r\n+      response:\r\n+        \"Dashboard, Dynamic time table, Learning Networks, Little Masters, Video Based Dictionary, General Search.\",\r\n+    },\r\n+\r\n+    {\r\n+      utterance: \"Say me the features of platform\",\r\n+\r\n+      response:\r\n+        \"Dashboard, Dynamic time table, Learning Networks, Little Masters, Video Based Dictionary, General Search.\",\r\n+    },\r\n+\r\n+    {\r\n+      utterance: \"Say me the services of platform\",\r\n+\r\n+      response:\r\n+        \"Dashboard, Dynamic time table, Learning Networks, Little Masters, Video Based Dictionary, General Search.\",\r\n+    },\r\n+\r\n+    {\r\n+      utterance: \"tell me the services offered by the platform\",\r\n+\r\n+      response:\r\n+        \"Dashboard, Dynamic time table, Learning Networks, Little Masters, Video Based Dictionary, General Search.\",\r\n+    },\r\n+\r\n+    {\r\n+      utterance: \"explain platform services\",\r\n+\r\n+      response:\r\n+        \"Dashboard, Dynamic time table, Learning Networks, Little Masters, Video Based Dictionary, General Search.\",\r\n+    },\r\n+\r\n+    {\r\n+      utterance: \"Give me the Parent voice of Julia Harris\",\r\n+\r\n+      response:\r\n+        \"Brane education has helped my son a lot in his studies. He improved a lot in his studies and is now able to score good marks in his exams\",\r\n+    },\r\n+\r\n+    {\r\n+      utterance: \"Leaders Voice\",\r\n+\r\n+      response:\r\n+        \"This Voice-interactive AI Platform is a game Changer. It revolutionizes education.\",\r\n+    },\r\n+\r\n+    {\r\n+      utterance: \"Curriculum Supported by Brane Education\",\r\n+\r\n+      response:\r\n+        \"we support multiple Boards let me say few Telangana State Board Andhra Pradesh Board Maharashtra Board Assam Board\",\r\n+    },\r\n+\r\n+    {\r\n+      utterance: \"Boards supported by the platform\",\r\n+\r\n+      response:\r\n+        \"we support multiple Boards let me say few Telangana State Board Andhra Pradesh Board Maharashtra Board Assam Board\",\r\n+    },\r\n+\r\n+    {\r\n+      utterance: \"Curriculum\",\r\n+\r\n+      response:\r\n+        \"we support multiple Boards let me say few Telangana State Board Andhra Pradesh Board Maharashtra Board Assam Board\",\r\n+    },\r\n+\r\n+    {\r\n+      utterance: \"what is today's quote\",\r\n+\r\n+      response:\r\n+        \"Determination is the power that sees us through all our frustration and obstacles. It helps in building our willpower which is the very basis of success.\",\r\n+\r\n+      route: \"/childpage\",\r\n+    },\r\n+\r\n+    {\r\n+      utterance: \"Today's Inspirational quote\",\r\n+\r\n+      response:\r\n+        \"Determination is the power that sees us through all our frustration and obstacles. It helps in building our willpower which is the very basis of success.\",\r\n+\r\n+      route: \"/childpage\",\r\n+    },\r\n+\r\n+    {\r\n+      utterance: \"say me today's quote\",\r\n+\r\n+      response:\r\n+        \"Determination is the power that sees us through all our frustration and obstacles. It helps in building our willpower which is the very basis of success.\",\r\n+\r\n+      route: \"/childpage\",\r\n+    },\r\n+    {\r\n+      utterance: \"go back\",\r\n+      response: \"\",\r\n+      action: goBack, // Note the use of an action property\r\n+    },\r\n+    {\r\n+      utterance: \"go forward\",\r\n+      response: \"\",\r\n+      action: goForward,\r\n+    },\r\n+    // {\r\n+    //   utterance: \"play video\",\r\n+    //   // response: \"Playing video.\",\r\n+    //   action: playVideo,\r\n+    // },\r\n+    // {\r\n+    //   utterance: \"pause video\",\r\n+    //   // response: \"Pausing video.\",\r\n+    //   action: pauseVideo,\r\n+    // },\r\n+    // {\r\n+    //   utterance: \"start video\",\r\n+    //   // response: \"Playing video.\",\r\n+    //   action: playVideo,\r\n+    // },\r\n+    // {\r\n+    //   utterance: \"stop video\",\r\n+    //   // response: \"Playing video.\",\r\n+    //   action: pauseVideo,\r\n+    // },\r\n+    {\r\n+      utterance: \"scroll up\",\r\n+      // response: \"Scrolling up.\",\r\n+      action: scrollUp,\r\n+    },\r\n+    {\r\n+      utterance: \"scroll down\",\r\n+      // response: \"Scrolling down.\",\r\n+      action: scrollDown,\r\n+    },\r\n+    {\r\n+      utterance: \"go up\",\r\n+\r\n+      // response: \"Scrolling up.\",\r\n+      action: scrollUp,\r\n+    },\r\n+    {\r\n+      utterance: \"go down\",\r\n+      // response: \"Scrolling down.\",\r\n+      action: scrollDown,\r\n+    },\r\n+    {\r\n+      utterance: \"scroll to top\",\r\n+      action: scrollToTop,\r\n+    },\r\n+    {\r\n+      utterance: \"scroll to bottom\",\r\n+      action: scrollToBottom,\r\n+    },\r\n+    {\r\n+      utterance: \"brane stop\",\r\n+      action: stopListening,\r\n+    },\r\n+    {\r\n+      utterance: \"brane turn off\",\r\n+      action: stopListening,\r\n+    },\r\n+    {\r\n+      utterance: \"brane stop the bot\",\r\n+      action: stopListening,\r\n+    },\r\n+    // {\r\n+    //   utterance: \"mute the video\",\r\n+    //   action: muteVideo,\r\n+    // },\r\n+    // {\r\n+    //   utterance: \"unmute the video\",\r\n+    //   action: unmuteVideo,\r\n+    // },\r\n+    // {\r\n+    //   utterance: \"stop the video sound\",\r\n+    //   action: muteVideo,\r\n+    // },\r\n+    // {\r\n+    //   utterance: \"play the video sound\",\r\n+    //   action: unmuteVideo,\r\n+    // },\r\n+    {\r\n+      utterance: \"play transforming education video\",\r\n+      action: () => controlVideo('ourProjectsVideo', 'play'),\r\n+    },\r\n+    {\r\n+      utterance: \"start transforming education using ai video\",\r\n+      action: () => controlVideo('ourProjectsVideo', 'play'),\r\n+    },\r\n+    {\r\n+      utterance: \"pause transforming education using ai video\",\r\n+      action: () => controlVideo('ourProjectsVideo', 'pause'),\r\n+    },\r\n+    {\r\n+      utterance: \"stop transforming education using ai video\",\r\n+      action: () => controlVideo('ourProjectsVideo', 'pause'),\r\n+    },\r\n+\r\n+    {\r\n+      utterance: \"mute transforming education using ai video\",\r\n+      action: () => controlVideo('ourProjectsVideo', 'mute'),\r\n+    },\r\n+    {\r\n+      utterance: \"unmute transforming education using ai video\",\r\n+      action: () => controlVideo('ourProjectsVideo', 'unmute'),\r\n+    },\r\n+    {\r\n+      utterance: \"fullscreen transforming education using ai video\",\r\n+      action: () => controlVideo('ourProjectsVideo', 'fullscreen'),\r\n+    },\r\n+    {\r\n+      utterance: \"exit fullscreen transforming education using ai video\",\r\n+      action: () => controlVideo('ourProjectsVideo', 'exitFullscreen'),\r\n+    },\r\n+    {\r\n+      utterance: \"increase volume transforming education using ai video\",\r\n+      action: () => controlVideo('ourProjectsVideo', 'increaseVolume'),\r\n+    },\r\n+    {\r\n+      utterance: \"decrease volume transforming education using ai video\",\r\n+      action: () => controlVideo('ourProjectsVideo', 'decreaseVolume'),\r\n+    },\r\n+  ];\r\n+\r\n+  return (\r\n+    <div className=\"speech-bot-container\">\r\n+      <div\r\n+        className={`button-container ${\r\n+          isListening ? \"voicebotframeactive\" : \"voicebotframe\"\r\n+        }`}\r\n+      >\r\n+        {/* <button onClick={isListening ? stopListening : startListening}>\r\n+          {isListening ? \"Stop\" : \"Start\"} Animation\r\n+        </button> */}\r\n+        <img\r\n+          className=\"botimage\"\r\n+          src={chatbotimage}\r\n+          alt=\"\"\r\n+          onClick={isListening ? stopListening : startListening}\r\n+        />\r\n+      </div>\r\n+    </div>\r\n+  );\r\n+};\r\n+\r\n+export default VoiceBot;\r\n+\r\n+{\r\n+  /* // import React, { useState, useEffect, useRef } from \"react\";\r\n+// import { useNavigate, useLocation } from \"react-router-dom\";\r\n+// import Fuse from \"fuse.js\";\r\n+// import \"./VoiceBot.css\";\r\n+\r\n+// const VoiceBot = ({ videoRef }) => {\r\n+//   const [isListening, setIsListening] = useState(false);\r\n+//   const [isSpeaking, setIsSpeaking] = useState(false);\r\n+//   const recognition = useRef(null);\r\n+//   const speechSynthesis = useRef(window.speechSynthesis);\r\n+//   const [hasGreeted, setHasGreeted] = useState(false);\r\n+//   const navigate = useNavigate();\r\n+\r\n+//   useEffect(() => {\r\n+//     recognition.current = new window.webkitSpeechRecognition();\r\n+//     recognition.current.continuous = true;\r\n+//     recognition.current.interimResults = false;\r\n+//     recognition.current.onresult = onResult;\r\n+//     recognition.current.onend = onRecognitionEnd;\r\n+//     recognition.current.starting = false;\r\n+\r\n+//     // Simplified error handling, removed specific handling for 'no-speech'\r\n+//     recognition.current.onerror = (event) => {\r\n+//       console.error(\"Recognition error:\", event.error);\r\n+//       // Check if listening is true and the bot isn't speaking\r\n+//       if (isListening && !isSpeaking) {\r\n+//         // Restart recognition\r\n+//         restartRecognition();\r\n+//       }\r\n+//     };\r\n+\r\n+//     return () => {\r\n+//       if (recognition.current) {\r\n+//         recognition.current.abort();\r\n+//       }\r\n+//     };\r\n+//   }, []);\r\n+\r\n+//   useEffect(() => {\r\n+//     const checkRecognition = () => {\r\n+//       if (isListening && !isSpeaking && !recognition.current.starting) {\r\n+//         console.log(\"Restarting recognition because it's not active.\");\r\n+//         recognition.current.starting = true;\r\n+//         recognition.current.start();\r\n+//         console.log(\"Restarted recognition.\");\r\n+//       }\r\n+//     };\r\n+\r\n+//     const recognitionCheckInterval = setInterval(checkRecognition, 100); // Check every 1 second\r\n+\r\n+//     return () => {\r\n+//       clearInterval(recognitionCheckInterval);\r\n+//     };\r\n+//   }, [isListening, isSpeaking]);\r\n+\r\n+//   const restartRecognition = () => {\r\n+//     if (recognition.current.starting) {\r\n+//       console.log(\"Recognition is already starting or running.\");\r\n+//       return;\r\n+//     }\r\n+\r\n+//     recognition.current.abort(); // Stop any existing recognition process\r\n+//     recognition.current.starting = true;\r\n+//     recognition.current.start();\r\n+//     console.log(\"Recognition restarted.\");\r\n+//   };\r\n+\r\n+//   const historyStack = useRef([]);\r\n+\r\n+//   useEffect(() => {\r\n+//     return () => {\r\n+//       // Clean up the listener when the component unmounts\r\n+//       window.removeEventListener(\"popstate\", handlePopState);\r\n+//     };\r\n+//   }, []);\r\n+\r\n+//   const handlePopState = () => {\r\n+//     // This needs to handle both back and forward browser actions\r\n+//     // Use some logic to determine whether it's a back or forward action\r\n+//     // For simplicity, assume it's always back\r\n+//     historyStack.current.pop();\r\n+//     forwardStack.current.length = 0; // Clear forward stack on manual navigation\r\n+//   };\r\n+  \r\n+\r\n+//   // Add a new entry to the stack whenever navigate is called\r\n+//   const customNavigate = (to, options) => {\r\n+//     historyStack.current.push(to);\r\n+//     navigate(to, options);\r\n+//   };\r\n+\r\n+//   // Listen to popstate events to update the history stack\r\n+//   useEffect(() => {\r\n+//     window.addEventListener(\"popstate\", handlePopState);\r\n+//   }, []);\r\n+\r\n+//   const forwardStack = useRef([]);\r\n+\r\n+//   const goBack = () => {\r\n+//     if (window.history.state && window.history.state.idx > 0) {\r\n+//       window.history.back();\r\n+//       speak(\"Going back\");\r\n+//     } else {\r\n+//       speak(\"Can't go back any further.\");\r\n+//     }\r\n+//   };\r\n+\r\n+//   const goForward = () => {\r\n+//     if (window.history.state && window.history.state.idx < window.history.length - 1) {\r\n+//       window.history.forward();\r\n+//       speak(\"Going forward\");\r\n+//     } else {\r\n+//       speak(\"No forward history available.\");\r\n+//     }\r\n+//   };\r\n+\r\n+//   const playVideo = () => {\r\n+//     if (videoRef.current) {\r\n+//       videoRef.current.play();\r\n+//       speak(\"Playing video.\");\r\n+//     } else {\r\n+//       speak(\"No video to play.\");\r\n+//     }\r\n+//   };\r\n+\r\n+//   const pauseVideo = () => {\r\n+//     if (videoRef.current) {\r\n+//       videoRef.current.pause();\r\n+//       speak(\"Video paused.\");\r\n+//     } else {\r\n+//       speak(\"No video to pause.\");\r\n+//     }\r\n+//   };\r\n+\r\n+//   const scrollAmount = window.innerHeight * 0.82;\r\n+\r\n+//   const scrollUp = () => {\r\n+//     if (window.pageYOffset === 0) {\r\n+//       speak(\"Already at the top of the page.\");\r\n+//     } else {\r\n+//       window.scrollBy(0, -scrollAmount);\r\n+//       speak(\"Scrolled up.\");\r\n+//     }\r\n+//   };\r\n+\r\n+//   const scrollDown = () => {\r\n+//     const maxScrollTop =\r\n+//       document.documentElement.scrollHeight - window.innerHeight;\r\n+//     if (window.pageYOffset >= maxScrollTop) {\r\n+//       speak(\"Already at the bottom of the page.\");\r\n+//     } else {\r\n+//       window.scrollBy(0, scrollAmount);\r\n+//       speak(\"Scrolled down.\");\r\n+//     }\r\n+//   };\r\n+\r\n+//   const scrollToTop = () => {\r\n+//     if (window.pageYOffset === 0) {\r\n+//       speak(\"Already at the top of the page.\");\r\n+//     } else {\r\n+//       window.scrollTo(0, 0);\r\n+//       speak(\"Scrolled to the top of the page.\");\r\n+//     }\r\n+//   };\r\n+\r\n+//   const scrollToBottom = () => {\r\n+//     const maxScrollTop =\r\n+//       document.documentElement.scrollHeight - window.innerHeight;\r\n+//     if (window.pageYOffset >= maxScrollTop) {\r\n+//       speak(\"Already at the bottom of the page.\");\r\n+//     } else {\r\n+//       window.scrollTo(0, document.body.scrollHeight);\r\n+//       speak(\"Scrolled to the bottom of the page.\");\r\n+//     }\r\n+//   };\r\n+\r\n+//   const speak = (message) => {\r\n+//     console.log(\"speak function called with message:\", message);\r\n+//     const utterance = new SpeechSynthesisUtterance(message);\r\n+//     utterance.onend = () => {\r\n+//       setIsSpeaking(false);\r\n+//       console.log(\"Speaking ended.\");\r\n+//       if (isListening && !recognition.current.starting) {\r\n+//         console.log(\"Restarting recognition after speaking.\");\r\n+//         recognition.current.starting = true;\r\n+//         recognition.current.start();\r\n+//         console.log(\"Restarted recognition after speaking.\");\r\n+//       }\r\n+//     };\r\n+\r\n+//     setIsSpeaking(true);\r\n+//     console.log(\"Speaking started.\");\r\n+//     recognition.current.stop(); // Ensure to stop recognition before speaking\r\n+//     speechSynthesis.current.speak(utterance);\r\n+//   };\r\n+\r\n+//   const onResult = (event) => {\r\n+//     const resultIndex = event.resultIndex;\r\n+//     const transcript = event.results[resultIndex][0].transcript\r\n+//       .trim()\r\n+//       .toLowerCase();\r\n+\r\n+//     if (event.results[resultIndex].isFinal) {\r\n+//       console.log(`Recognized text: ${transcript}`);\r\n+//       if (transcript.includes(\"brain\")) {\r\n+//         console.log(\"Wake word heard, processing command...\");\r\n+//         handleCommandWithFuse(transcript.replace(\"brain\", \"\"));\r\n+//       }\r\n+//     }\r\n+//   };\r\n+\r\n+//   const onRecognitionEnd = () => {\r\n+//     recognition.current.starting = false;\r\n+//     if (isListening && !isSpeaking) {\r\n+//       restartRecognition();\r\n+//     }\r\n+//   };\r\n+\r\n+//   useEffect(() => {\r\n+//     if (isListening) {\r\n+//       if (!hasGreeted) {\r\n+//         speak(\"Hello, I'm Brane. How can I help you today?\");\r\n+//         setHasGreeted(true);\r\n+//       } else {\r\n+//         speak(\"Listening.\");\r\n+//       }\r\n+//     }\r\n+//   }, [isListening, hasGreeted]);\r\n+\r\n+\r\n+//   const startListening = () => {\r\n+//     if (!recognition.current.starting) {\r\n+//       setIsListening(true);\r\n+//       restartRecognition();\r\n+//     }\r\n+//   };\r\n+\r\n+//   const stopListening = () => {\r\n+//     setIsListening(false);\r\n+//     recognition.current.abort();\r\n+//     if (speechSynthesis.current.speaking) {\r\n+//       speechSynthesis.current.cancel();\r\n+//     }\r\n+//   };\r\n+\r\n+//   const handleCommandWithFuse = (command) => {\r\n+//     const fuse = new Fuse(commands, { keys: [\"utterance\"], threshold: 0.4 });\r\n+//     const results = fuse.search(command);\r\n+//     const foundCommand = results.length ? results[0].item : null;\r\n+\r\n+//     if (foundCommand) {\r\n+//       console.log(\"Command found:\", foundCommand.utterance);\r\n+\r\n+//       if (foundCommand.action) {\r\n+//         foundCommand.action();\r\n+//       } else if (foundCommand.route) {\r\n+//         navigate(foundCommand.route);\r\n+//       }\r\n+\r\n+//       // Speak after performing the action or navigation\r\n+//       speak(foundCommand.response);\r\n+//     } else {\r\n+//       console.log(\"No command found.\");\r\n+//       speak(\"I'm not sure how to respond to that.\");\r\n+//     }\r\n+//   };\r\n+\r\n+//   const commands = [\r\n+//     {\r\n+//       utterance: \"Hello who are you ?\",\r\n+\r\n+//       response:\r\n+//         \"Hi! This is Brane! your Voice bot from Brane Education How can I Assist you Today ?\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"Hello\",\r\n+\r\n+//       response: \"Hi! How can I assist you today?\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"hello\",\r\n+\r\n+//       response: \"Hi! How can I assist you today?\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"Hi.\",\r\n+\r\n+//       response: \"Hello! How can I assist you today?\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"Hey there\",\r\n+\r\n+//       response: \"Hi! How can I assist you today?\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"Good morning Brane.\",\r\n+\r\n+//       response: \"Hey Hiii! Good morning  ! How can I help you?\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"Good afternoon Brane.\",\r\n+\r\n+//       response: \"Hey Hiii! Good after noon ! How can I help you?\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"Good evening Brane.\",\r\n+\r\n+//       response: \"Hey Hiii! Good evening ! How can I help you?\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"can you please take me to login page\",\r\n+\r\n+//       route: \"/login\",\r\n+\r\n+//       response: \"Here's the Login Page, Please Login\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"please take me to login page\",\r\n+\r\n+//       route: \"/login\",\r\n+\r\n+//       response: \"Here's the Login Page, Please Login\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"Go to login page\",\r\n+\r\n+//       route: \"/login\",\r\n+\r\n+//       response: \"Here's the Login Page, Please Login\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"open login page\",\r\n+\r\n+//       route: \"/login\",\r\n+\r\n+//       response: \"Here's the Login Page, Please Login\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"can you please take me to signup page\",\r\n+\r\n+//       route: \"/signup\",\r\n+\r\n+//       response: \"Here's the signup page. Please proceed With Registration.\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"take me to signup page\",\r\n+\r\n+//       route: \"/signup\",\r\n+\r\n+//       response: \"Here's the signup page. Please proceed With Registration.\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"Go to signup page\",\r\n+\r\n+//       route: \"/signup\",\r\n+\r\n+//       response: \"Here's the signup page. Please proceed With Registration.\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"open signup page\",\r\n+\r\n+//       route: \"/signup\",\r\n+\r\n+//       response: \"Here's the signup page. Please proceed With Registration.\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"Go to face id\",\r\n+\r\n+//       route: \"/login/faceid\",\r\n+\r\n+//       response: \"Here's Face ID Login. Please proceed.\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"Go to face id login\",\r\n+\r\n+//       route: \"/login/faceid\",\r\n+\r\n+//       response: \"Here's Face ID Login. Please proceed.\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"login with face id\",\r\n+\r\n+//       route: \"/login/faceid\",\r\n+\r\n+//       response: \"Here's Face ID Login. Please proceed.\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"login with face\",\r\n+\r\n+//       route: \"/login/faceid\",\r\n+\r\n+//       response: \"Here's Face ID Login. Please proceed.\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"i want to login with face\",\r\n+\r\n+//       route: \"/login/faceid\",\r\n+\r\n+//       response: \"Here's Face ID Login. Please proceed.\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"login with voice\",\r\n+\r\n+//       route: \"/login/voiceid\",\r\n+\r\n+//       response: \"Here's Voice Login. Please proceed.\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"i want to login with voice\",\r\n+\r\n+//       route: \"/login/voiceid\",\r\n+\r\n+//       response: \"Here's Voice Login. Please proceed.\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"go to voice login\",\r\n+\r\n+//       route: \"/login/voiceid\",\r\n+\r\n+//       response: \"Here's Voice Login. Please proceed.\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"login with voice\",\r\n+\r\n+//       route: \"/login/voiceid\",\r\n+\r\n+//       response: \"Here's Voice Login. Please proceed.\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"login with mobile\",\r\n+\r\n+//       route: \"/login/mobile\",\r\n+\r\n+//       response: \"Here's Mobile Login. Please proceed.\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"i want to login with mobile\",\r\n+\r\n+//       route: \"/login/mobile\",\r\n+\r\n+//       response: \"Here's Mobile Login. Please proceed.\",\r\n+//     },\r\n+//     {\r\n+//       utterance: \"go to mobile login\",\r\n+\r\n+//       route: \"/login/mobile\",\r\n+\r\n+//       response: \"Here's Mobile Login. Please proceed.\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"what are platform features\",\r\n+\r\n+//       response:\r\n+//         \"Dashboard, Dynamic time table, Learning Networks, Little Masters, Video Based Dictionary, General Search.\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"Features of platform\",\r\n+\r\n+//       response:\r\n+//         \"Dashboard, Dynamic time table, Learning Networks, Little Masters, Video Based Dictionary, General Search.\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"What does the platform offer\",\r\n+\r\n+//       response:\r\n+//         \"Dashboard, Dynamic time table, Learning Networks, Little Masters, Video Based Dictionary, General Search.\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"Say me the features of platform\",\r\n+\r\n+//       response:\r\n+//         \"Dashboard, Dynamic time table, Learning Networks, Little Masters, Video Based Dictionary, General Search.\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"Say me the services of platform\",\r\n+\r\n+//       response:\r\n+//         \"Dashboard, Dynamic time table, Learning Networks, Little Masters, Video Based Dictionary, General Search.\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"tell me the services offered by the platform\",\r\n+\r\n+//       response:\r\n+//         \"Dashboard, Dynamic time table, Learning Networks, Little Masters, Video Based Dictionary, General Search.\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"explain platform services\",\r\n+\r\n+//       response:\r\n+//         \"Dashboard, Dynamic time table, Learning Networks, Little Masters, Video Based Dictionary, General Search.\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"Give me the Parent voice of Julia Harris\",\r\n+\r\n+//       response:\r\n+//         \"Brane education has helped my son a lot in his studies. He improved a lot in his studies and is now able to score good marks in his exams\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"Play today's motivational video\",\r\n+\r\n+//       response: \"I am playing the video\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"Play today's video\",\r\n+\r\n+//       response: \"I am playing Motivational video\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"Leaders Voice\",\r\n+\r\n+//       response:\r\n+//         \"This Voice-interactive AI Platform is a game Changer. It revolutionizes education.\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"Curriculum Supported by Brane Education\",\r\n+\r\n+//       response:\r\n+//         \"we support multiple Boards let me say few Telangana State Board Andhra Pradesh Board Maharashtra Board Assam Board\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"Boards supported by the platform\",\r\n+\r\n+//       response:\r\n+//         \"we support multiple Boards let me say few Telangana State Board Andhra Pradesh Board Maharashtra Board Assam Board\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"Curriculum\",\r\n+\r\n+//       response:\r\n+//         \"we support multiple Boards let me say few Telangana State Board Andhra Pradesh Board Maharashtra Board Assam Board\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"Go to landing page\",\r\n+\r\n+//       response: \"Okay, I am taking you to the landing page.\",\r\n+\r\n+//       route: \"/childpage\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"take me to landing page\",\r\n+\r\n+//       response: \"Okay, I am taking you to the landing page.\",\r\n+\r\n+//       route: \"/childpage\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"move to landing page\",\r\n+\r\n+//       response: \"Okay, I am taking you to the landing page.\",\r\n+\r\n+//       route: \"/childpage\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"roll back to landing page\",\r\n+\r\n+//       response: \"Okay, I am taking you to the landing page.\",\r\n+\r\n+//       route: \"/childpage\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"move to landing page\",\r\n+\r\n+//       response: \"Okay, I am taking you to the landing page.\",\r\n+\r\n+//       route: \"/childpage\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"what is today's quote\",\r\n+\r\n+//       response:\r\n+//         \"Determination is the power that sees us through all our frustration and obstacles. It helps in building our willpower which is the very basis of success.\",\r\n+\r\n+//       route: \"/childpage\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"Today's Inspirational quote\",\r\n+\r\n+//       response:\r\n+//         \"Determination is the power that sees us through all our frustration and obstacles. It helps in building our willpower which is the very basis of success.\",\r\n+\r\n+//       route: \"/childpage\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"say me today's quote\",\r\n+\r\n+//       response:\r\n+//         \"Determination is the power that sees us through all our frustration and obstacles. It helps in building our willpower which is the very basis of success.\",\r\n+\r\n+//       route: \"/childpage\",\r\n+//     },\r\n+//     {\r\n+//       utterance: \"go back\",\r\n+//       response: \"\",\r\n+//       action: goBack, // Note the use of an action property\r\n+//     },\r\n+//     {\r\n+//       utterance: \"go forward\",\r\n+//       response: \"\",\r\n+//       action: goForward,\r\n+//     },\r\n+//     {\r\n+//       utterance: \"play video\",\r\n+//       // response: \"Playing video.\",\r\n+//       action: playVideo,\r\n+//     },\r\n+//     {\r\n+//       utterance: \"pause video\",\r\n+//       // response: \"Pausing video.\",\r\n+//       action: pauseVideo,\r\n+//     },\r\n+//     {\r\n+//       utterance: \"start video\",\r\n+//       // response: \"Playing video.\",\r\n+//       action: playVideo,\r\n+//     },\r\n+//     {\r\n+//       utterance: \"stop video\",\r\n+//       // response: \"Playing video.\",\r\n+//       action: pauseVideo,\r\n+//     },\r\n+//     {\r\n+//       utterance: \"scroll up\",\r\n+//       // response: \"Scrolling up.\",\r\n+//       action: scrollUp,\r\n+//     },\r\n+//     {\r\n+//       utterance: \"scroll down\",\r\n+//       // response: \"Scrolling down.\",\r\n+//       action: scrollDown,\r\n+//     },\r\n+//     {\r\n+//       utterance: \"go up\",\r\n+\r\n+//       // response: \"Scrolling up.\",\r\n+//       action: scrollUp,\r\n+//     },\r\n+//     {\r\n+//       utterance: \"go down\",\r\n+//       // response: \"Scrolling down.\",\r\n+//       action: scrollDown,\r\n+//     },\r\n+//     {\r\n+//       utterance: \"scroll to top\",\r\n+//       action: scrollToTop,\r\n+//     },\r\n+//     {\r\n+//       utterance: \"scroll to bottom\",\r\n+//       action: scrollToBottom,\r\n+//     },\r\n+//     {\r\n+//       utterance: \"brane stop\",\r\n+//       action: stopListening,\r\n+//     },\r\n+//     {\r\n+//       utterance: \"brane turn off\",\r\n+//       action: stopListening,\r\n+//     },\r\n+//     {\r\n+//       utterance: \"brane stop the bot\",\r\n+//       action: stopListening,\r\n+//     },\r\n+//   ];\r\n+\r\n+//   return (\r\n+//     <div className=\"speech-bot-container\">\r\n+//       <div\r\n+//         className={`button-container ${\r\n+//           isListening ? \"voicebotframeactive\" : \"voicebotframe\"\r\n+//         }`}\r\n+//       >\r\n+//         <button onClick={isListening ? stopListening : startListening}>\r\n+//           {isListening ? \"Stop\" : \"Start\"} Animation\r\n+//         </button>\r\n+//         {/* <button onClick={toggleBotActive}>\r\n+//         {isBotActive ? 'Deactivate Bot' : 'Activate Bot'}\r\n+//       </button> \r\n+//       </div>\r\n+//     </div>\r\n+//   );\r\n+// };\r\n+\r\n+// export default VoiceBot; */\r\n+}\r\n+\r\n+//iska v1\r\n+\r\n+// import React, { useState, useEffect, useRef } from \"react\";\r\n+// import { useNavigate, useLocation } from \"react-router-dom\";\r\n+// import Fuse from \"fuse.js\";\r\n+// import \"./VoiceBot.css\";\r\n+\r\n+// const VoiceBot = ({ videoRef}) => {\r\n+//   const [isListening, setIsListening] = useState(false);\r\n+//   const [isSpeaking, setIsSpeaking] = useState(false);\r\n+//   const recognition = useRef(null);\r\n+//   const speechSynthesis = useRef(window.speechSynthesis);\r\n+//   const [hasGreeted, setHasGreeted] = useState(false);\r\n+//   const navigate = useNavigate();\r\n+\r\n+//  // Initialize speech recognition\r\n+//  useEffect(() => {\r\n+//   recognition.current = new window.webkitSpeechRecognition();\r\n+//   recognition.current.continuous = true;\r\n+//   recognition.current.interimResults = false;\r\n+//   recognition.current.onresult = onResult;\r\n+//   recognition.current.onend = onRecognitionEnd;\r\n+//   recognition.current.starting = false;\r\n+\r\n+//   recognition.current.onerror = (event) => {\r\n+//     console.error(\"Recognition error:\", event.error);\r\n+//     if (isListening && !isSpeaking) {\r\n+//       restartRecognition();\r\n+//     }\r\n+//   };\r\n+\r\n+//   return () => {\r\n+//     if (recognition.current) {\r\n+//       recognition.current.abort();\r\n+//     }\r\n+//   };\r\n+// }, []);\r\n+\r\n+//   // useEffect(() => {\r\n+//   //   const checkRecognition = () => {\r\n+//   //     if (isListening && !isSpeaking && !recognition.current.starting) {\r\n+//   //       console.log(\"Restarting recognition because it's not active.\");\r\n+//   //       recognition.current.starting = true;\r\n+//   //       recognition.current.start();\r\n+//   //       console.log(\"Restarted recognition.\");\r\n+//   //     }\r\n+//   //   };\r\n+\r\n+//   //   const recognitionCheckInterval = setInterval(checkRecognition, 100); // Check every .5 second\r\n+\r\n+//   //   return () => {\r\n+//   //     clearInterval(recognitionCheckInterval);\r\n+//   //   };\r\n+//   // }, [isListening, isSpeaking]);\r\n+\r\n+//   const historyStack = useRef([]);\r\n+\r\n+//   useEffect(() => {\r\n+//     return () => {\r\n+//       // Clean up the listener when the component unmounts\r\n+//       window.removeEventListener(\"popstate\", handlePopState);\r\n+//     };\r\n+//   }, []);\r\n+\r\n+//   const handlePopState = () => {\r\n+//     // This needs to handle both back and forward browser actions\r\n+//     // Use some logic to determine whether it's a back or forward action\r\n+//     // For simplicity, assume it's always back\r\n+//     historyStack.current.pop();\r\n+//     forwardStack.current.length = 0; // Clear forward stack on manual navigation\r\n+//   };\r\n+\r\n+//   // Add a new entry to the stack whenever navigate is called\r\n+//   const customNavigate = (to, options) => {\r\n+//     historyStack.current.push(to);\r\n+//     navigate(to, options);\r\n+//   };\r\n+\r\n+//   // Listen to popstate events to update the history stack\r\n+//   useEffect(() => {\r\n+//     window.addEventListener(\"popstate\", handlePopState);\r\n+//   }, []);\r\n+\r\n+//   const forwardStack = useRef([]);\r\n+\r\n+//   const goBack = () => {\r\n+//     if (window.history.state && window.history.state.idx > 0) {\r\n+//       window.history.back();\r\n+//       speak(\"Going back\");\r\n+//     } else {\r\n+//       speak(\"Can't go back any further.\");\r\n+//     }\r\n+//   };\r\n+\r\n+//   const goForward = () => {\r\n+//     if (window.history.state && window.history.state.idx < window.history.length - 1) {\r\n+//       window.history.forward();\r\n+//       speak(\"Going forward\");\r\n+//     } else {\r\n+//       speak(\"No forward history available.\");\r\n+//     }\r\n+//   };\r\n+\r\n+//   const playVideo = () => {\r\n+//     if (videoRef.current) {\r\n+//       videoRef.current.play();\r\n+//       speak(\"Playing video.\");\r\n+//     } else {\r\n+//       speak(\"No video to play.\");\r\n+//     }\r\n+//   };\r\n+\r\n+//   const pauseVideo = () => {\r\n+//     if (videoRef.current) {\r\n+//       videoRef.current.pause();\r\n+//       speak(\"Video paused.\");\r\n+//     } else {\r\n+//       speak(\"No video to pause.\");\r\n+//     }\r\n+//   };\r\n+\r\n+//   const scrollAmount = window.innerHeight * 0.82;\r\n+\r\n+//   const scrollUp = () => {\r\n+//     if (window.pageYOffset === 0) {\r\n+//       speak(\"Already at the top of the page.\");\r\n+//     } else {\r\n+//       window.scrollBy(0, -scrollAmount);\r\n+//       speak(\"Scrolled up.\");\r\n+//     }\r\n+//   };\r\n+\r\n+//   const scrollDown = () => {\r\n+//     const maxScrollTop =\r\n+//       document.documentElement.scrollHeight - window.innerHeight;\r\n+//     if (window.pageYOffset >= maxScrollTop) {\r\n+//       speak(\"Already at the bottom of the page.\");\r\n+//     } else {\r\n+//       window.scrollBy(0, scrollAmount);\r\n+//       speak(\"Scrolled down.\");\r\n+//     }\r\n+//   };\r\n+\r\n+//   const scrollToTop = () => {\r\n+//     if (window.pageYOffset === 0) {\r\n+//       speak(\"Already at the top of the page.\");\r\n+//     } else {\r\n+//       window.scrollTo(0, 0);\r\n+//       speak(\"Scrolled to the top of the page.\");\r\n+//     }\r\n+//   };\r\n+\r\n+//   const scrollToBottom = () => {\r\n+//     const maxScrollTop =\r\n+//       document.documentElement.scrollHeight - window.innerHeight;\r\n+//     if (window.pageYOffset >= maxScrollTop) {\r\n+//       speak(\"Already at the bottom of the page.\");\r\n+//     } else {\r\n+//       window.scrollTo(0, document.body.scrollHeight);\r\n+//       speak(\"Scrolled to the bottom of the page.\");\r\n+//     }\r\n+//   };\r\n+\r\n+//   const speak = (message) => {\r\n+//     const utterance = new SpeechSynthesisUtterance(message);\r\n+//     utterance.onend = () => {\r\n+//       setIsSpeaking(false);\r\n+//       // Restart recognition after speaking has ended\r\n+//       if (isListening) {\r\n+//         restartRecognition();\r\n+//       }\r\n+//     };\r\n+\r\n+//     setIsSpeaking(true);\r\n+//     // Stop recognition when the bot starts speaking\r\n+//     if (recognition.current) {\r\n+//       recognition.current.abort();\r\n+//     }\r\n+//     speechSynthesis.current.speak(utterance);\r\n+//   };\r\n+\r\n+//   const restartRecognition = () => {\r\n+//     // Check if recognition is not already started and if the bot is set to listen\r\n+//     if (recognition.current && !recognition.current.starting && isListening && !isSpeaking) {\r\n+//       // Only start recognition if it's not already active\r\n+//       if (recognition.current.state !== 'active') {\r\n+//         recognition.current.abort(); // Ensure any ongoing recognition is stopped\r\n+//         recognition.current.starting = true;\r\n+//         recognition.current.start();\r\n+//       }\r\n+//     }\r\n+//   };\r\n+\r\n+//     // Restart recognition when bot finishes speaking and isListening is true\r\n+//     useEffect(() => {\r\n+//       if (!isSpeaking && isListening) {\r\n+//         restartRecognition();\r\n+//       }\r\n+//     }, [isSpeaking, isListening]);\r\n+\r\n+//   const onResult = (event) => {\r\n+//     const resultIndex = event.resultIndex;\r\n+//     const transcript = event.results[resultIndex][0].transcript\r\n+//       .trim()\r\n+//       .toLowerCase();\r\n+\r\n+//     if (event.results[resultIndex].isFinal) {\r\n+//       console.log(`Recognized text: ${transcript}`);\r\n+//       if (transcript.includes(\"brain\")) {\r\n+//         console.log(\"Wake word heard, processing command...\");\r\n+//         handleCommandWithFuse(transcript.replace(\"brain\", \"\"));\r\n+//       }\r\n+//     }\r\n+//   };\r\n+\r\n+//   const onRecognitionEnd = () => {\r\n+//     recognition.current.starting = false;\r\n+//     if (isListening && !isSpeaking) {\r\n+//       restartRecognition();\r\n+//     }\r\n+//   };\r\n+\r\n+//   useEffect(() => {\r\n+//     if (isListening && !hasGreeted) {\r\n+//       speak(\"Hello, I'm Brane. How can I help you today?\");\r\n+//       setHasGreeted(true);\r\n+//     }\r\n+//   }, [isListening, hasGreeted]);\r\n+\r\n+// // Updated startListening function\r\n+// const startListening = () => {\r\n+//   setIsListening(true);\r\n+//   if (recognition.current && !recognition.current.starting) {\r\n+//     recognition.current.start();\r\n+//   }\r\n+// };\r\n+\r\n+// // Updated stopListening function\r\n+// const stopListening = () => {\r\n+//   setIsListening(false);\r\n+//   setIsSpeaking(false); // Reset speaking state\r\n+//   setHasGreeted(false); // Reset greeting state if needed\r\n+//   if (recognition.current) {\r\n+//     recognition.current.abort(); // Stop any ongoing speech recognition\r\n+//   }\r\n+//   if (speechSynthesis.current.speaking) {\r\n+//     speechSynthesis.current.cancel(); // Stop any ongoing speech synthesis\r\n+//   }\r\n+// };\r\n+\r\n+//   const handleCommandWithFuse = (command) => {\r\n+//     const fuse = new Fuse(commands, { keys: [\"utterance\"], threshold: 0.4 });\r\n+//     const results = fuse.search(command);\r\n+//     const foundCommand = results.length ? results[0].item : null;\r\n+\r\n+//     if (foundCommand) {\r\n+//       console.log(\"Command found:\", foundCommand.utterance);\r\n+\r\n+//       if (foundCommand.action) {\r\n+//         foundCommand.action();\r\n+//       } else if (foundCommand.route) {\r\n+//         navigate(foundCommand.route);\r\n+//       }\r\n+\r\n+//       // Speak after performing the action or navigation\r\n+//       speak(foundCommand.response);\r\n+//     } else {\r\n+//       console.log(\"No command found.\");\r\n+//       speak(\"I'm not sure how to respond to that.\");\r\n+//     }\r\n+//   };\r\n+\r\n+//   const commands = [\r\n+//     {\r\n+//       utterance: \"Hello who are you ?\",\r\n+\r\n+//       response:\r\n+//         \"Hi! This is Brane! your Voice bot from Brane Education How can I Assist you Today ?\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"Hello\",\r\n+\r\n+//       response: \"Hi! How can I assist you today?\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"hello\",\r\n+\r\n+//       response: \"Hi! How can I assist you today?\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"Hi.\",\r\n+\r\n+//       response: \"Hello! How can I assist you today?\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"Hey there\",\r\n+\r\n+//       response: \"Hi! How can I assist you today?\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"Good morning Brane.\",\r\n+\r\n+//       response: \"Hey Hiii! Good morning  ! How can I help you?\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"Good afternoon Brane.\",\r\n+\r\n+//       response: \"Hey Hiii! Good after noon ! How can I help you?\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"Good evening Brane.\",\r\n+\r\n+//       response: \"Hey Hiii! Good evening ! How can I help you?\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"can you please take me to login page\",\r\n+\r\n+//       route: \"/login\",\r\n+\r\n+//       response: \"Here's the Login Page, Please Login\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"please take me to login page\",\r\n+\r\n+//       route: \"/login\",\r\n+\r\n+//       response: \"Here's the Login Page, Please Login\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"Go to login page\",\r\n+\r\n+//       route: \"/login\",\r\n+\r\n+//       response: \"Here's the Login Page, Please Login\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"open login page\",\r\n+\r\n+//       route: \"/login\",\r\n+\r\n+//       response: \"Here's the Login Page, Please Login\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"can you please take me to signup page\",\r\n+\r\n+//       route: \"/signup\",\r\n+\r\n+//       response: \"Here's the signup page. Please proceed With Registration.\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"take me to signup page\",\r\n+\r\n+//       route: \"/signup\",\r\n+\r\n+//       response: \"Here's the signup page. Please proceed With Registration.\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"Go to signup page\",\r\n+\r\n+//       route: \"/signup\",\r\n+\r\n+//       response: \"Here's the signup page. Please proceed With Registration.\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"open signup page\",\r\n+\r\n+//       route: \"/signup\",\r\n+\r\n+//       response: \"Here's the signup page. Please proceed With Registration.\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"Go to face id\",\r\n+\r\n+//       route: \"/login/faceid\",\r\n+\r\n+//       response: \"Here's Face ID Login. Please proceed.\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"Go to face id login\",\r\n+\r\n+//       route: \"/login/faceid\",\r\n+\r\n+//       response: \"Here's Face ID Login. Please proceed.\",\r\n+//     },\r\n+//     {\r\n+//       utterance: \"Go to face login\",\r\n+\r\n+//       route: \"/login/faceid\",\r\n+\r\n+//       response: \"Here's Face ID Login. Please proceed.\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"login with face id\",\r\n+\r\n+//       route: \"/login/faceid\",\r\n+\r\n+//       response: \"Here's Face ID Login. Please proceed.\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"login with face\",\r\n+\r\n+//       route: \"/login/faceid\",\r\n+\r\n+//       response: \"Here's Face ID Login. Please proceed.\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"i want to login with face\",\r\n+\r\n+//       route: \"/login/faceid\",\r\n+\r\n+//       response: \"Here's Face ID Login. Please proceed.\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"login with voice\",\r\n+\r\n+//       route: \"/login/voiceid\",\r\n+\r\n+//       response: \"Here's Voice Login. Please proceed.\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"i want to login with voice\",\r\n+\r\n+//       route: \"/login/voiceid\",\r\n+\r\n+//       response: \"Here's Voice Login. Please proceed.\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"go to voice login\",\r\n+\r\n+//       route: \"/login/voiceid\",\r\n+\r\n+//       response: \"Here's Voice Login. Please proceed.\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"login with voice\",\r\n+\r\n+//       route: \"/login/voiceid\",\r\n+\r\n+//       response: \"Here's Voice Login. Please proceed.\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"login with mobile\",\r\n+\r\n+//       route: \"/login/mobile\",\r\n+\r\n+//       response: \"Here's Mobile Login. Please proceed.\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"i want to login with mobile\",\r\n+\r\n+//       route: \"/login/mobile\",\r\n+\r\n+//       response: \"Here's Mobile Login. Please proceed.\",\r\n+//     },\r\n+//     {\r\n+//       utterance: \"go to mobile login\",\r\n+\r\n+//       route: \"/login/mobile\",\r\n+\r\n+//       response: \"Here's Mobile Login. Please proceed.\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"what are platform features\",\r\n+\r\n+//       response:\r\n+//         \"Dashboard, Dynamic time table, Learning Networks, Little Masters, Video Based Dictionary, General Search.\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"Features of platform\",\r\n+\r\n+//       response:\r\n+//         \"Dashboard, Dynamic time table, Learning Networks, Little Masters, Video Based Dictionary, General Search.\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"What does the platform offer\",\r\n+\r\n+//       response:\r\n+//         \"Dashboard, Dynamic time table, Learning Networks, Little Masters, Video Based Dictionary, General Search.\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"Say me the features of platform\",\r\n+\r\n+//       response:\r\n+//         \"Dashboard, Dynamic time table, Learning Networks, Little Masters, Video Based Dictionary, General Search.\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"Say me the services of platform\",\r\n+\r\n+//       response:\r\n+//         \"Dashboard, Dynamic time table, Learning Networks, Little Masters, Video Based Dictionary, General Search.\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"tell me the services offered by the platform\",\r\n+\r\n+//       response:\r\n+//         \"Dashboard, Dynamic time table, Learning Networks, Little Masters, Video Based Dictionary, General Search.\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"explain platform services\",\r\n+\r\n+//       response:\r\n+//         \"Dashboard, Dynamic time table, Learning Networks, Little Masters, Video Based Dictionary, General Search.\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"Give me the Parent voice of Julia Harris\",\r\n+\r\n+//       response:\r\n+//         \"Brane education has helped my son a lot in his studies. He improved a lot in his studies and is now able to score good marks in his exams\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"Play today's motivational video\",\r\n+\r\n+//       response: \"I am playing the video\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"Play today's video\",\r\n+\r\n+//       response: \"I am playing Motivational video\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"Leaders Voice\",\r\n+\r\n+//       response:\r\n+//         \"This Voice-interactive AI Platform is a game Changer. It revolutionizes education.\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"Curriculum Supported by Brane Education\",\r\n+\r\n+//       response:\r\n+//         \"we support multiple Boards let me say few Telangana State Board Andhra Pradesh Board Maharashtra Board Assam Board\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"Boards supported by the platform\",\r\n+\r\n+//       response:\r\n+//         \"we support multiple Boards let me say few Telangana State Board Andhra Pradesh Board Maharashtra Board Assam Board\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"Curriculum\",\r\n+\r\n+//       response:\r\n+//         \"we support multiple Boards let me say few Telangana State Board Andhra Pradesh Board Maharashtra Board Assam Board\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"Go to landing page\",\r\n+\r\n+//       response: \"Okay, I am taking you to the landing page.\",\r\n+\r\n+//       route: \"/childpage\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"take me to landing page\",\r\n+\r\n+//       response: \"Okay, I am taking you to the landing page.\",\r\n+\r\n+//       route: \"/childpage\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"move to landing page\",\r\n+\r\n+//       response: \"Okay, I am taking you to the landing page.\",\r\n+\r\n+//       route: \"/childpage\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"roll back to landing page\",\r\n+\r\n+//       response: \"Okay, I am taking you to the landing page.\",\r\n+\r\n+//       route: \"/childpage\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"move to landing page\",\r\n+\r\n+//       response: \"Okay, I am taking you to the landing page.\",\r\n+\r\n+//       route: \"/childpage\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"what is today's quote\",\r\n+\r\n+//       response:\r\n+//         \"Determination is the power that sees us through all our frustration and obstacles. It helps in building our willpower which is the very basis of success.\",\r\n+\r\n+//       route: \"/childpage\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"Today's Inspirational quote\",\r\n+\r\n+//       response:\r\n+//         \"Determination is the power that sees us through all our frustration and obstacles. It helps in building our willpower which is the very basis of success.\",\r\n+\r\n+//       route: \"/childpage\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"say me today's quote\",\r\n+\r\n+//       response:\r\n+//         \"Determination is the power that sees us through all our frustration and obstacles. It helps in building our willpower which is the very basis of success.\",\r\n+\r\n+//       route: \"/childpage\",\r\n+//     },\r\n+//     {\r\n+//       utterance: \"go back\",\r\n+//       response: \"\",\r\n+//       action: goBack, // Note the use of an action property\r\n+//     },\r\n+//     {\r\n+//       utterance: \"go forward\",\r\n+//       response: \"\",\r\n+//       action: goForward,\r\n+//     },\r\n+//     {\r\n+//       utterance: \"play video\",\r\n+//       // response: \"Playing video.\",\r\n+//       action: playVideo,\r\n+//     },\r\n+//     {\r\n+//       utterance: \"pause video\",\r\n+//       // response: \"Pausing video.\",\r\n+//       action: pauseVideo,\r\n+//     },\r\n+//     {\r\n+//       utterance: \"start video\",\r\n+//       // response: \"Playing video.\",\r\n+//       action: playVideo,\r\n+//     },\r\n+//     {\r\n+//       utterance: \"stop video\",\r\n+//       // response: \"Playing video.\",\r\n+//       action: pauseVideo,\r\n+//     },\r\n+//     {\r\n+//       utterance: \"scroll up\",\r\n+//       // response: \"Scrolling up.\",\r\n+//       action: scrollUp,\r\n+//     },\r\n+//     {\r\n+//       utterance: \"scroll down\",\r\n+//       // response: \"Scrolling down.\",\r\n+//       action: scrollDown,\r\n+//     },\r\n+//     {\r\n+//       utterance: \"go up\",\r\n+\r\n+//       // response: \"Scrolling up.\",\r\n+//       action: scrollUp,\r\n+//     },\r\n+//     {\r\n+//       utterance: \"go down\",\r\n+//       // response: \"Scrolling down.\",\r\n+//       action: scrollDown,\r\n+//     },\r\n+//     {\r\n+//       utterance: \"scroll to top\",\r\n+//       action: scrollToTop,\r\n+//     },\r\n+//     {\r\n+//       utterance: \"scroll to bottom\",\r\n+//       action: scrollToBottom,\r\n+//     },\r\n+//     {\r\n+//       utterance: \"brane stop\",\r\n+//       action: stopListening,\r\n+//     },\r\n+//     {\r\n+//       utterance: \"brane turn off\",\r\n+//       action: stopListening,\r\n+//     },\r\n+//     {\r\n+//       utterance: \"brane stop the bot\",\r\n+//       action: stopListening,\r\n+//     },\r\n+//   ];\r\n+\r\n+//   return (\r\n+//     <div className=\"speech-bot-container\">\r\n+//       <div\r\n+//         className={`button-container ${\r\n+//           isListening ? \"voicebotframeactive\" : \"voicebotframe\"\r\n+//         }`}\r\n+//       >\r\n+//         <button onClick={isListening ? stopListening : startListening}>\r\n+//           {isListening ? \"Stop\" : \"Start\"} Animation\r\n+//         </button>\r\n+//         {/* <button onClick={toggleBotActive}>\r\n+//         {isBotActive ? 'Deactivate Bot' : 'Activate Bot'}\r\n+//       </button> */}\r\n+//       </div>\r\n+//     </div>\r\n+//   );\r\n+// };\r\n+\r\n+// export default VoiceBot;\r\n+\r\n+//Bot Video added but some start issues\r\n+\r\n+// import React, { useState, useEffect, useRef } from \"react\";\r\n+// import { useNavigate, useLocation } from \"react-router-dom\";\r\n+// import Fuse from \"fuse.js\";\r\n+// import \"./VoiceBot.css\";\r\n+\r\n+// const VoiceBot = ({ videoRef }) => {\r\n+//   const [isListening, setIsListening] = useState(false);\r\n+//   const [isSpeaking, setIsSpeaking] = useState(false);\r\n+//   const recognition = useRef(null);\r\n+//   const speechSynthesis = useRef(window.speechSynthesis);\r\n+//   const hasGreeted = useRef(false);\r\n+//   const restartRecognitionTimeout = useRef(null);\r\n+//   const navigate = useNavigate();\r\n+//   const location = useLocation();\r\n+//   const [isRecognitionActive, setIsRecognitionActive] = useState(false); // New state to track recognition status\r\n+\r\n+//   useEffect(() => {\r\n+//     recognition.current = new window.webkitSpeechRecognition();\r\n+//     recognition.current.continuous = true;\r\n+//     recognition.current.interimResults = false;\r\n+//     recognition.current.onresult = onResult;\r\n+//     recognition.current.onend = () => {\r\n+//       console.log(\"Recognition ended.\");\r\n+//       if (isListening) {\r\n+//         startListening();\r\n+//       }\r\n+//     };\r\n+//     recognition.current.onerror = (event) => {\r\n+//       console.error(\"Recognition error:\", event.error);\r\n+//     };\r\n+\r\n+//     return () => {\r\n+//       recognition.current.abort();\r\n+//     };\r\n+//   }, []);\r\n+\r\n+//   // Update useEffect for managing the recognition state based on isListening and isRecognitionActive\r\n+//   useEffect(() => {\r\n+//     if (isListening && !isRecognitionActive) {\r\n+//       startListening();\r\n+//     } else if (!isListening && isRecognitionActive) {\r\n+//       stopListening();\r\n+//     }\r\n+//   }, [isListening, isRecognitionActive]);\r\n+\r\n+//   const goBack = () => {\r\n+//     if (window.history.length > 1) {\r\n+//       navigate(-1);\r\n+//     } else {\r\n+//       speak(\"Can't go back any further.\");\r\n+//     }\r\n+//   };\r\n+\r\n+//   const goForward = () => {\r\n+//     // Unfortunately, there's no direct way to check if you can go forward in the history.\r\n+//     // You might need to manage this state manually based on user navigation.\r\n+//     navigate(1);\r\n+//   };\r\n+\r\n+//   const playVideo = () => {\r\n+//     if (videoRef.current && !videoRef.current.paused) {\r\n+//       speak(\"Video is already playing.\");\r\n+//     } else if (videoRef.current) {\r\n+//       videoRef.current.play();\r\n+//       speak(\"Playing video.\");\r\n+//     } else {\r\n+//       speak(\"No video to play.\");\r\n+//     }\r\n+//   };\r\n+\r\n+//   const pauseVideo = () => {\r\n+//     if (videoRef.current && videoRef.current.paused) {\r\n+//       speak(\"Video is already paused.\");\r\n+//     } else if (videoRef.current) {\r\n+//       videoRef.current.pause();\r\n+//       speak(\"Video paused.\");\r\n+//     } else {\r\n+//       speak(\"No video to pause.\");\r\n+//     }\r\n+//   };\r\n+\r\n+//   const scrollAmount = window.innerHeight * 0.82;\r\n+\r\n+//   const scrollUp = () => {\r\n+//     if (window.pageYOffset === 0) {\r\n+//       speak(\"Already at the top of the page.\");\r\n+//     } else {\r\n+//       window.scrollBy(0, -scrollAmount);\r\n+//       speak(\"Scrolled up.\");\r\n+//     }\r\n+//   };\r\n+\r\n+//   const scrollDown = () => {\r\n+//     const maxScrollTop =\r\n+//       document.documentElement.scrollHeight - window.innerHeight;\r\n+//     if (window.pageYOffset >= maxScrollTop) {\r\n+//       speak(\"Already at the bottom of the page.\");\r\n+//     } else {\r\n+//       window.scrollBy(0, scrollAmount);\r\n+//       speak(\"Scrolled down.\");\r\n+//     }\r\n+//   };\r\n+\r\n+//   const scrollToTop = () => {\r\n+//     if (window.pageYOffset === 0) {\r\n+//       speak(\"Already at the top of the page.\");\r\n+//     } else {\r\n+//       window.scrollTo(0, 0);\r\n+//       speak(\"Scrolled to the top of the page.\");\r\n+//     }\r\n+//   };\r\n+\r\n+//   const scrollToBottom = () => {\r\n+//     const maxScrollTop =\r\n+//       document.documentElement.scrollHeight - window.innerHeight;\r\n+//     if (window.pageYOffset >= maxScrollTop) {\r\n+//       speak(\"Already at the bottom of the page.\");\r\n+//     } else {\r\n+//       window.scrollTo(0, document.body.scrollHeight);\r\n+//       speak(\"Scrolled to the bottom of the page.\");\r\n+//     }\r\n+//   };\r\n+\r\n+//   // const speak = (message) => {\r\n+//   //   const utterance = new SpeechSynthesisUtterance(message);\r\n+//   //   utterance.onend = () => {\r\n+//   //     setIsSpeaking(false);\r\n+//   //     console.log(\"Speaking ended.\");\r\n+//   //     // Only restart recognition if we're still supposed to be listening\r\n+//   //     // if (isListening) {\r\n+//   //     //   if (restartRecognitionTimeout.current) {\r\n+//   //     //     clearTimeout(restartRecognitionTimeout.current);\r\n+//   //     //   }\r\n+//   //     //   restartRecognitionTimeout.current = setTimeout(() => {\r\n+//   //     //     console.log(\"Recognition restarted.\");\r\n+//   //     //     recognition.current.start();\r\n+//   //     //   }, 100); // Delay to prevent immediate restart\r\n+//   //     // }\r\n+//   //     if (isListening && !recognition.current.starting) { // Check the flag before restarting\r\n+//   //       recognition.current.starting = true; // Set the flag when starting recognition\r\n+//   //       recognition.current.start();\r\n+//   //     }\r\n+//   //   };\r\n+\r\n+//   //   setIsSpeaking(true);\r\n+//   //   console.log(\"Speaking started.\");\r\n+//   //   recognition.current.stop(); // Stop recognition when the bot starts speaking\r\n+//   //   speechSynthesis.current.speak(utterance);\r\n+//   // };\r\n+\r\n+//   const speak = (message) => {\r\n+//     console.log(\"speak function called with message:\", message);\r\n+//     const utterance = new SpeechSynthesisUtterance(message);\r\n+//     utterance.onend = () => {\r\n+//       setIsSpeaking(false);\r\n+//       console.log(\"Speaking ended.\");\r\n+//       // Directly handle the restart of recognition here if needed\r\n+//       if (isListening) {\r\n+//         startListening();\r\n+//       }\r\n+//     };\r\n+\r\n+//     setIsSpeaking(true);\r\n+//     console.log(\"Speaking started.\");\r\n+//     recognition.current.stop(); // Ensure to stop recognition before speaking\r\n+//     speechSynthesis.current.speak(utterance);\r\n+//   };\r\n+\r\n+//   const onResult = (event) => {\r\n+//     const resultIndex = event.resultIndex;\r\n+//     const transcript = event.results[resultIndex][0].transcript\r\n+//       .trim()\r\n+//       .toLowerCase();\r\n+\r\n+//     if (event.results[resultIndex].isFinal) {\r\n+//       console.log(`Recognized text: ${transcript}`);\r\n+//       if (transcript.includes(\"brain\")) {\r\n+//         console.log(\"Wake word heard, processing command...\");\r\n+//         handleCommandWithFuse(transcript.replace(\"brain\", \"\"));\r\n+//       }\r\n+//     }\r\n+//   };\r\n+\r\n+//   // const onRecognitionEnd = () => {\r\n+//   //   console.log(\"Recognition ended.\");\r\n+//   //   setIsRecognitionActive(false); // Update state when recognition ends\r\n+//   //   recognition.current.starting = false; // Reset the flag when recognition ends\r\n+//   //   // We now check if the recognition is already running before starting it again\r\n+//   //   if (isListening && !isSpeaking && !recognition.current?.starting) {\r\n+//   //     console.log(\"Restarting recognition.\");\r\n+//   //     recognition.current.start();\r\n+//   //   }\r\n+//   // };\r\n+\r\n+//   // useEffect(() => {\r\n+//   //   if (isListening && !hasGreeted.current) {\r\n+//   //     speak(\"Hello, I'm Brane. How can I assist you today?\");\r\n+//   //     hasGreeted.current = true;\r\n+//   //   } else if (isListening && !isSpeaking) {\r\n+//   //     recognition.current.start();\r\n+//   //   }\r\n+//   // }, [isListening, isSpeaking]);\r\n+\r\n+//   useEffect(() => {\r\n+//     if (isListening && !hasGreeted.current) {\r\n+//       speak(\"Hello, I'm Brane. How can I assist you today?\");\r\n+//       hasGreeted.current = true;\r\n+//     } else if (isListening && !isSpeaking && !recognition.current.starting) {\r\n+//       // Check the flag before starting\r\n+//       recognition.current.starting = true; // Set the flag when starting recognition\r\n+//       recognition.current.start();\r\n+//     }\r\n+//   }, [isListening, isSpeaking]);\r\n+\r\n+//   // const startListening = () => {\r\n+//   //   console.log(\"Attempting to start listening.\");\r\n+//   //   if (recognition.current && !recognition.current.starting) {\r\n+//   //     setIsListening(true);\r\n+//   //     recognition.current.starting = true; // Set the flag when starting recognition\r\n+//   //     recognition.current.start();\r\n+//   //     console.log(\"Listening started.\");\r\n+//   //   }\r\n+//   // };\r\n+\r\n+//   // const stopListening = () => {\r\n+//   //   console.log(\"Stopping listening.\");\r\n+\r\n+//   //   setIsListening(false);\r\n+//   //   recognition.current.stop();\r\n+//   //   if (speechSynthesis.current.speaking) {\r\n+//   //     speechSynthesis.current.cancel();\r\n+//   //   }\r\n+//   //   if (restartRecognitionTimeout.current) {\r\n+//   //     clearTimeout(restartRecognitionTimeout.current);\r\n+//   //   }\r\n+//   //   console.log(\"Listening stopped.\");\r\n+//   // };\r\n+//   // Handle start and stop listening logic\r\n+//   const startListening = () => {\r\n+//     console.log(\"Attempting to start listening.\");\r\n+//     if (!recognition.current.starting) {\r\n+//       setIsListening(true);\r\n+//       recognition.current.starting = true;\r\n+//       recognition.current.start();\r\n+//       console.log(\"Listening started.\");\r\n+//     } else {\r\n+//       console.log(\"Recognition already active.\");\r\n+//     }\r\n+//   };\r\n+\r\n+//   const stopListening = () => {\r\n+//     console.log(\"Stopping listening.\");\r\n+//     if (recognition.current.starting) {\r\n+//       setIsListening(false);\r\n+//       recognition.current.starting = false;\r\n+//       recognition.current.stop();\r\n+//       console.log(\"Listening stopped.\");\r\n+//     } else {\r\n+//       console.log(\"Recognition already inactive.\");\r\n+//     }\r\n+//   };\r\n+\r\n+//   // const handleCommandWithFuse = (command) => {\r\n+//   //   const fuse = new Fuse(commands, { keys: [\"utterance\"], threshold: 0.4 });\r\n+//   //   const results = fuse.search(command);\r\n+//   //   const foundCommand = results.length ? results[0].item : null;\r\n+\r\n+//   //   if (foundCommand) {\r\n+//   //     console.log(\"Command found:\", foundCommand.utterance);\r\n+//   //     speak(foundCommand.response);\r\n+//   //     if (foundCommand.route) {\r\n+//   //       navigate(foundCommand.route); // Navigate to the route specified in the command\r\n+//   //     }\r\n+//   //   } else {\r\n+//   //     console.log(\"No command found.\");\r\n+//   //     speak(\"I'm not sure how to respond to that.\");\r\n+//   //   }\r\n+//   // };\r\n+\r\n+//   const handleCommandWithFuse = (command) => {\r\n+//     const fuse = new Fuse(commands, { keys: [\"utterance\"], threshold: 0.4 });\r\n+//     const results = fuse.search(command);\r\n+//     const foundCommand = results.length ? results[0].item : null;\r\n+\r\n+//     if (foundCommand) {\r\n+//       console.log(\"Command found:\", foundCommand.utterance);\r\n+\r\n+//       if (foundCommand.route) {\r\n+//         if (location.pathname !== foundCommand.route) {\r\n+//           navigate(foundCommand.route);\r\n+//           speak(\r\n+//             `Navigating to ${\r\n+//               foundCommand.routeDescription || \"requested page\"\r\n+//             }.`\r\n+//           );\r\n+//         } else {\r\n+//           speak(\r\n+//             `You are already on the ${\r\n+//               foundCommand.routeDescription || \"requested page\"\r\n+//             }.`\r\n+//           );\r\n+//         }\r\n+//       } else if (foundCommand.action) {\r\n+//         foundCommand.action();\r\n+//       }\r\n+\r\n+//       if (foundCommand.response) {\r\n+//         speak(foundCommand.response);\r\n+//       }\r\n+//     } else {\r\n+//       console.log(\"No command found.\");\r\n+//       speak(\"I'm not sure how to respond to that.\");\r\n+//     }\r\n+//   };\r\n+\r\n+//   const commands = [\r\n+//     {\r\n+//       utterance: \"Hello who are you ?\",\r\n+\r\n+//       response:\r\n+//         \"Hi! This is Brane! your Voice bot from Brane Education How can I Assist you Today ?\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"Hello\",\r\n+\r\n+//       response: \"Hi! How can I assist you today?\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"hello\",\r\n+\r\n+//       response: \"Hi! How can I assist you today?\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"Hi.\",\r\n+\r\n+//       response: \"Hello! How can I assist you today?\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"Hey there\",\r\n+\r\n+//       response: \"Hi! How can I assist you today?\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"Good morning Brane.\",\r\n+\r\n+//       response: \"Hey Hiii! Good morning  ! How can I help you?\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"Good afternoon Brane.\",\r\n+\r\n+//       response: \"Hey Hiii! Good after noon ! How can I help you?\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"Good evening Brane.\",\r\n+\r\n+//       response: \"Hey Hiii! Good evening ! How can I help you?\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"can you please take me to login page\",\r\n+//       route: \"/login\",\r\n+//       routeDescription: \"login page\",\r\n+//       response: \"Navigating to the login page.\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"go to login page\",\r\n+//       route: \"/login\",\r\n+//       routeDescription: \"login page\",\r\n+//       response: \"Navigating to the login page.\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"please take me to login page\",\r\n+//       route: \"/login\",\r\n+//       routeDescription: \"login page\",\r\n+//       response: \"Navigating to the login page.\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"Go to login page\",\r\n+//       route: \"/login\",\r\n+//       routeDescription: \"login page\",\r\n+//       response: \"Navigating to the login page.\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"open login page\",\r\n+//       route: \"/login\",\r\n+//       routeDescription: \"login page\",\r\n+//       response: \"Navigating to the login page.\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"can you please take me to signup page\",\r\n+//       route: \"/signup\",\r\n+//       routeDescription: \"signup page\",\r\n+//       response: \"Navigating to the signup page.\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"take me to signup page\",\r\n+//       route: \"/signup\",\r\n+//       routeDescription: \"signup page\",\r\n+//       response: \"Navigating to the signup page.\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"Go to signup page\",\r\n+//       route: \"/signup\",\r\n+//       routeDescription: \"signup page\",\r\n+//       response: \"Navigating to the signup page.\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"open signup page\",\r\n+//       route: \"/signup\",\r\n+//       routeDescription: \"signup page\",\r\n+//       response: \"Navigating to the signup page.\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"what are platform features\",\r\n+\r\n+//       response:\r\n+//         \"Dashboard, Dynamic time table, Learning Networks, Little Masters, Video Based Dictionary, General Search.\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"Features of platform\",\r\n+\r\n+//       response:\r\n+//         \"Dashboard, Dynamic time table, Learning Networks, Little Masters, Video Based Dictionary, General Search.\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"What does the platform offer\",\r\n+\r\n+//       response:\r\n+//         \"Dashboard, Dynamic time table, Learning Networks, Little Masters, Video Based Dictionary, General Search.\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"Say me the features of platform\",\r\n+\r\n+//       response:\r\n+//         \"Dashboard, Dynamic time table, Learning Networks, Little Masters, Video Based Dictionary, General Search.\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"Say me the services of platform\",\r\n+\r\n+//       response:\r\n+//         \"Dashboard, Dynamic time table, Learning Networks, Little Masters, Video Based Dictionary, General Search.\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"tell me the services offered by the platform\",\r\n+\r\n+//       response:\r\n+//         \"Dashboard, Dynamic time table, Learning Networks, Little Masters, Video Based Dictionary, General Search.\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"explain platform services\",\r\n+\r\n+//       response:\r\n+//         \"Dashboard, Dynamic time table, Learning Networks, Little Masters, Video Based Dictionary, General Search.\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"Give me the Parent voice of Julia Harris\",\r\n+\r\n+//       response:\r\n+//         \"Brane education has helped my son a lot in his studies. He improved a lot in his studies and is now able to score good marks in his exams\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"Play today's motivational video\",\r\n+\r\n+//       response: \"I am playing the video\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"Play today's video\",\r\n+\r\n+//       response: \"I am playing Motivational video\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"Leaders Voice\",\r\n+\r\n+//       response:\r\n+//         \"This Voice-interactive AI Platform is a game Changer. It revolutionizes education.\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"Curriculum Supported by Brane Education\",\r\n+\r\n+//       response:\r\n+//         \"we support multiple Boards let me say few Telangana State Board Andhra Pradesh Board Maharashtra Board Assam Board\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"Boards supported by the platform\",\r\n+\r\n+//       response:\r\n+//         \"we support multiple Boards let me say few Telangana State Board Andhra Pradesh Board Maharashtra Board Assam Board\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"Curriculum\",\r\n+\r\n+//       response:\r\n+//         \"we support multiple Boards let me say few Telangana State Board Andhra Pradesh Board Maharashtra Board Assam Board\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"Go to landing page\",\r\n+\r\n+//       response: \"Okay, I am taking you to the landing page.\",\r\n+\r\n+//       route: \"/childpage\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"take me to landing page\",\r\n+\r\n+//       response: \"Okay, I am taking you to the landing page.\",\r\n+\r\n+//       route: \"/childpage\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"move to landing page\",\r\n+\r\n+//       response: \"Okay, I am taking you to the landing page.\",\r\n+\r\n+//       route: \"/childpage\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"roll back to landing page\",\r\n+\r\n+//       response: \"Okay, I am taking you to the landing page.\",\r\n+\r\n+//       route: \"/childpage\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"move to landing page\",\r\n+\r\n+//       response: \"Okay, I am taking you to the landing page.\",\r\n+\r\n+//       route: \"/childpage\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"what is today's quote\",\r\n+\r\n+//       response:\r\n+//         \"Determination is the power that sees us through all our frustration and obstacles. It helps in building our willpower which is the very basis of success.\",\r\n+\r\n+//       // route: \"/childpage\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"Today's Inspirational quote\",\r\n+\r\n+//       response:\r\n+//         \"Determination is the power that sees us through all our frustration and obstacles. It helps in building our willpower which is the very basis of success.\",\r\n+\r\n+//       // route: \"/childpage\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"say me today's quote\",\r\n+\r\n+//       response:\r\n+//         \"Determination is the power that sees us through all our frustration and obstacles. It helps in building our willpower which is the very basis of success.\",\r\n+\r\n+//       // route: \"/childpage\",\r\n+//     },\r\n+//     {\r\n+//       utterance: \"go back\",\r\n+//       response: \"Going back.\",\r\n+//       action: goBack, // Note the use of an action property\r\n+//     },\r\n+//     {\r\n+//       utterance: \"go forward\",\r\n+//       response: \"Going forward.\",\r\n+//       action: goForward,\r\n+//     },\r\n+//     {\r\n+//       utterance: \"play video\",\r\n+//       // response: \"Playing video.\",\r\n+//       action: playVideo,\r\n+//     },\r\n+//     {\r\n+//       utterance: \"pause video\",\r\n+//       // response: \"Pausing video.\",\r\n+//       action: pauseVideo,\r\n+//     },\r\n+//     {\r\n+//       utterance: \"start video\",\r\n+//       // response: \"Playing video.\",\r\n+//       action: playVideo,\r\n+//     },\r\n+//     {\r\n+//       utterance: \"stop video\",\r\n+//       // response: \"Playing video.\",\r\n+//       action: pauseVideo,\r\n+//     },\r\n+//     {\r\n+//       utterance: \"scroll up\",\r\n+//       // response: \"Scrolling up.\",\r\n+//       action: scrollUp,\r\n+//     },\r\n+//     {\r\n+//       utterance: \"scroll down\",\r\n+//       // response: \"Scrolling down.\",\r\n+//       action: scrollDown,\r\n+//     },\r\n+//     {\r\n+//       utterance: \"go up\",\r\n+\r\n+//       // response: \"Scrolling up.\",\r\n+//       action: scrollUp,\r\n+//     },\r\n+//     {\r\n+//       utterance: \"go down\",\r\n+//       // response: \"Scrolling down.\",\r\n+//       action: scrollDown,\r\n+//     },\r\n+//     {\r\n+//       utterance: \"scroll to top\",\r\n+//       action: scrollToTop,\r\n+//     },\r\n+//     {\r\n+//       utterance: \"scroll to bottom\",\r\n+//       action: scrollToBottom,\r\n+//     },\r\n+//   ];\r\n+//   return (\r\n+//     <div className=\"speech-bot-container\">\r\n+//       <div\r\n+//         className={`button-container ${\r\n+//           isListening ? \"voicebotframeactive\" : \"voicebotframe\"\r\n+//         }`}\r\n+//       >\r\n+//         <div onClick={isListening ? stopListening : startListening}>\r\n+//           <iframe\r\n+//             src={\r\n+//               isListening\r\n+//                 ? \"https://lottie.host/?file=a89aca3f-5407-4052-82c3-2048afca7a9f/NpCdWzLSKD.json\"\r\n+//                 : \"https://lottie.host/?file=d2b6cc0e-fe95-4847-85b5-35365fca7e00/vTudpCuPZq.json\"\r\n+//             }\r\n+//             width=\"120\" // Set your desired width\r\n+//             height=\"120\" // Set your desired height\r\n+//             title={isListening ? \"Stop Animation\" : \"Start Animation\"}\r\n+//             className={isListening ? \"voicebotframeactive\" : \"voicebotframe\"}\r\n+//           ></iframe>\r\n+//           {isListening ? (\r\n+//             <div className=\"overlay\" onClick={stopListening}></div>\r\n+//           ) : (\r\n+//             <div className=\"overlay\" onClick={startListening}></div>\r\n+//           )}\r\n+//         </div>\r\n+//       </div>\r\n+//     </div>\r\n+//   );\r\n+// };\r\n+\r\n+// export default VoiceBot;\r\n+\r\n+// All functionalities but messed up\r\n+\r\n+// import React, { useState, useEffect, useRef } from \"react\";\r\n+// import { useNavigate, useLocation } from \"react-router-dom\";\r\n+// import Fuse from \"fuse.js\";\r\n+// import \"./VoiceBot.css\";\r\n+\r\n+// const VoiceBot = ({ videoRef, takeTestRef, goBackRef }) => {\r\n+//   const [isListening, setIsListening] = useState(false);\r\n+//   const [isSpeaking, setIsSpeaking] = useState(false);\r\n+//   const recognition = useRef(null);\r\n+//   const speechSynthesis = useRef(window.speechSynthesis);\r\n+//   const hasGreeted = useRef(false);\r\n+//   const navigate = useNavigate();\r\n+//   const location = useLocation();\r\n+//   const isRecognitionActive = useRef(false);\r\n+\r\n+//   useEffect(() => {\r\n+//     recognition.current = new window.webkitSpeechRecognition();\r\n+//     recognition.current.continuous = true;\r\n+//     recognition.current.interimResults = false;\r\n+//     recognition.current.onresult = onResult;\r\n+//     recognition.current.onend = onRecognitionEnd;\r\n+\r\n+//     return () => {\r\n+//       if (recognition.current) {\r\n+//         recognition.current.abort();\r\n+//       }\r\n+//     };\r\n+//   }, [location.pathname]);\r\n+\r\n+//   const onResult = (event) => {\r\n+//     const resultIndex = event.resultIndex;\r\n+//     const transcript = event.results[resultIndex][0].transcript\r\n+//       .trim()\r\n+//       .toLowerCase();\r\n+\r\n+//     if (event.results[resultIndex].isFinal) {\r\n+//       console.log(`Recognized text: ${transcript}`);\r\n+//       if (transcript.includes(\"brain\")) {\r\n+//         console.log(\"Wake word heard, processing command...\");\r\n+//         handleCommandWithFuse(transcript.replace(\"brain\", \"\"));\r\n+//       }\r\n+//     }\r\n+//   };\r\n+\r\n+//   const startListening = () => {\r\n+//     if (!isRecognitionActive.current) {\r\n+//       setIsListening(true);\r\n+//       recognition.current.start();\r\n+//       isRecognitionActive.current = true;\r\n+//     }\r\n+//   };\r\n+\r\n+//   const stopListening = () => {\r\n+//     if (isRecognitionActive.current) {\r\n+//       setIsListening(false);\r\n+//       recognition.current.stop();\r\n+//       isRecognitionActive.current = false;\r\n+//     }\r\n+//   };\r\n+\r\n+//   const onRecognitionEnd = () => {\r\n+//     isRecognitionActive.current = false;\r\n+//     if (isListening) {\r\n+//       startListening();\r\n+//     }\r\n+//   };\r\n+\r\n+//   const speak = (message) => {\r\n+//     const utterance = new SpeechSynthesisUtterance(message);\r\n+//     utterance.onend = () => {\r\n+//       setIsSpeaking(false);\r\n+//       if (isListening && !isRecognitionActive.current) {\r\n+//         startListening();\r\n+//       }\r\n+//     };\r\n+\r\n+//     setIsSpeaking(true);\r\n+//     if (isRecognitionActive.current) {\r\n+//       stopListening(); // Adjusted to use stopListening\r\n+//     }\r\n+//     speechSynthesis.current.speak(utterance);\r\n+//   };\r\n+\r\n+//   useEffect(() => {\r\n+//     if (isListening && !hasGreeted.current) {\r\n+//       speak(\"Hello, I'm Brane. How can I assist you today?\");\r\n+//       hasGreeted.current = true;\r\n+//     }\r\n+//   }, [isListening]);\r\n+\r\n+//   const goBack = () => {\r\n+//     if (window.history.length > 1) {\r\n+//       navigate(-1);\r\n+//     } else {\r\n+//       speak(\"Can't go back any further.\");\r\n+//     }\r\n+//   };\r\n+\r\n+//   const goForward = () => {\r\n+//     // Unfortunately, there's no direct way to check if you can go forward in the history.\r\n+//     // You might need to manage this state manually based on user navigation.\r\n+//     navigate(1);\r\n+//   };\r\n+\r\n+//   const playVideo = () => {\r\n+//     if (videoRef.current && !videoRef.current.paused) {\r\n+//       speak(\"Video is already playing.\");\r\n+//     } else if (videoRef.current) {\r\n+//       videoRef.current.play();\r\n+//       speak(\"Playing video.\");\r\n+//     } else {\r\n+//       speak(\"No video to play.\");\r\n+//     }\r\n+//   };\r\n+\r\n+//   const pauseVideo = () => {\r\n+//     if (videoRef.current && videoRef.current.paused) {\r\n+//       speak(\"Video is already paused.\");\r\n+//     } else if (videoRef.current) {\r\n+//       videoRef.current.pause();\r\n+//       speak(\"Video paused.\");\r\n+//     } else {\r\n+//       speak(\"No video to pause.\");\r\n+//     }\r\n+//   };\r\n+\r\n+//   const scrollAmount = window.innerHeight * 0.82;\r\n+\r\n+//   const scrollUp = () => {\r\n+//     if (window.pageYOffset === 0) {\r\n+//       speak(\"Already at the top of the page.\");\r\n+//     } else {\r\n+//       window.scrollBy(0, -scrollAmount);\r\n+//       speak(\"Scrolled up.\");\r\n+//     }\r\n+//   };\r\n+\r\n+//   const scrollDown = () => {\r\n+//     const maxScrollTop =\r\n+//       document.documentElement.scrollHeight - window.innerHeight;\r\n+//     if (window.pageYOffset >= maxScrollTop) {\r\n+//       speak(\"Already at the bottom of the page.\");\r\n+//     } else {\r\n+//       window.scrollBy(0, scrollAmount);\r\n+//       speak(\"Scrolled down.\");\r\n+//     }\r\n+//   };\r\n+\r\n+//   const scrollToTop = () => {\r\n+//     if (window.pageYOffset === 0) {\r\n+//       speak(\"Already at the top of the page.\");\r\n+//     } else {\r\n+//       window.scrollTo(0, 0);\r\n+//       speak(\"Scrolled to the top of the page.\");\r\n+//     }\r\n+//   };\r\n+\r\n+//   const scrollToBottom = () => {\r\n+//     const maxScrollTop =\r\n+//       document.documentElement.scrollHeight - window.innerHeight;\r\n+//     if (window.pageYOffset >= maxScrollTop) {\r\n+//       speak(\"Already at the bottom of the page.\");\r\n+//     } else {\r\n+//       window.scrollTo(0, document.body.scrollHeight);\r\n+//       speak(\"Scrolled to the bottom of the page.\");\r\n+//     }\r\n+//   };\r\n+\r\n+//   // const speak = (message) => {\r\n+//   //   const utterance = new SpeechSynthesisUtterance(message);\r\n+//   //   utterance.onend = () => {\r\n+//   //     setIsSpeaking(false);\r\n+//   //     console.log(\"Speaking ended.\");\r\n+//   //     // Only restart recognition if we're still supposed to be listening\r\n+//   //     // if (isListening) {\r\n+//   //     //   if (restartRecognitionTimeout.current) {\r\n+//   //     //     clearTimeout(restartRecognitionTimeout.current);\r\n+//   //     //   }\r\n+//   //     //   restartRecognitionTimeout.current = setTimeout(() => {\r\n+//   //     //     console.log(\"Recognition restarted.\");\r\n+//   //     //     recognition.current.start();\r\n+//   //     //   }, 100); // Delay to prevent immediate restart\r\n+//   //     // }\r\n+//   //     if (isListening && !recognition.current.starting) { // Check the flag before restarting\r\n+//   //       recognition.current.starting = true; // Set the flag when starting recognition\r\n+//   //       recognition.current.start();\r\n+//   //     }\r\n+//   //   };\r\n+\r\n+//   //   setIsSpeaking(true);\r\n+//   //   console.log(\"Speaking started.\");\r\n+//   //   recognition.current.stop(); // Stop recognition when the bot starts speaking\r\n+//   //   speechSynthesis.current.speak(utterance);\r\n+//   // };\r\n+\r\n+//   // const onRecognitionEnd = () => {\r\n+//   //   console.log(\"Recognition ended.\");\r\n+//   //   setIsRecognitionActive(false); // Update state when recognition ends\r\n+//   //   recognition.current.starting = false; // Reset the flag when recognition ends\r\n+//   //   // We now check if the recognition is already running before starting it again\r\n+//   //   if (isListening && !isSpeaking && !recognition.current?.starting) {\r\n+//   //     console.log(\"Restarting recognition.\");\r\n+//   //     recognition.current.start();\r\n+//   //   }\r\n+//   // };\r\n+\r\n+//   // useEffect(() => {\r\n+//   //   if (isListening && !hasGreeted.current) {\r\n+//   //     speak(\"Hello, I'm Brane. How can I assist you today?\");\r\n+//   //     hasGreeted.current = true;\r\n+//   //   } else if (isListening && !isSpeaking) {\r\n+//   //     recognition.current.start();\r\n+//   //   }\r\n+//   // }, [isListening, isSpeaking]);\r\n+\r\n+//   // const startListening = () => {\r\n+//   //   console.log(\"Attempting to start listening.\");\r\n+//   //   if (recognition.current && !recognition.current.starting) {\r\n+//   //     setIsListening(true);\r\n+//   //     recognition.current.starting = true; // Set the flag when starting recognition\r\n+//   //     recognition.current.start();\r\n+//   //     console.log(\"Listening started.\");\r\n+//   //   }\r\n+//   // };\r\n+\r\n+//   // const stopListening = () => {\r\n+//   //   console.log(\"Stopping listening.\");\r\n+\r\n+//   //   setIsListening(false);\r\n+//   //   recognition.current.stop();\r\n+//   //   if (speechSynthesis.current.speaking) {\r\n+//   //     speechSynthesis.current.cancel();\r\n+//   //   }\r\n+//   //   if (restartRecognitionTimeout.current) {\r\n+//   //     clearTimeout(restartRecognitionTimeout.current);\r\n+//   //   }\r\n+//   //   console.log(\"Listening stopped.\");\r\n+//   // };\r\n+//   // Handle start and stop listening logic\r\n+\r\n+//   useEffect(() => {\r\n+//     if (isListening && !hasGreeted.current) {\r\n+//       speak(\"Hello, I'm Brane. How can I assist you today?\");\r\n+//       hasGreeted.current = true;\r\n+//     }\r\n+//   }, [isListening]);\r\n+\r\n+//   // const handleCommandWithFuse = (command) => {\r\n+//   //   const fuse = new Fuse(commands, { keys: [\"utterance\"], threshold: 0.4 });\r\n+//   //   const results = fuse.search(command);\r\n+//   //   const foundCommand = results.length ? results[0].item : null;\r\n+\r\n+//   //   if (foundCommand) {\r\n+//   //     console.log(\"Command found:\", foundCommand.utterance);\r\n+//   //     speak(foundCommand.response);\r\n+//   //     if (foundCommand.route) {\r\n+//   //       navigate(foundCommand.route); // Navigate to the route specified in the command\r\n+//   //     }\r\n+//   //   } else {\r\n+//   //     console.log(\"No command found.\");\r\n+//   //     speak(\"I'm not sure how to respond to that.\");\r\n+//   //   }\r\n+//   // };\r\n+\r\n+//   const handleCommandWithFuse = (command) => {\r\n+//     const fuse = new Fuse(commands, { keys: [\"utterance\"], threshold: 0.4 });\r\n+//     const results = fuse.search(command);\r\n+//     const foundCommand = results.length ? results[0].item : null;\r\n+\r\n+//     if (foundCommand) {\r\n+//       console.log(\"Command found:\", foundCommand.utterance);\r\n+\r\n+//       if (foundCommand.action) {\r\n+//         foundCommand.action();\r\n+//       } else if (foundCommand.route) {\r\n+//         navigate(foundCommand.route);\r\n+//       }\r\n+\r\n+//       if (foundCommand.response) {\r\n+//         speak(foundCommand.response);\r\n+//       }\r\n+//     } else {\r\n+//       console.log(\"No command found.\");\r\n+//       speak(\"I'm not sure how to respond to that.\");\r\n+//     }\r\n+//   };\r\n+\r\n+//   const commands = [\r\n+//     {\r\n+//       utterance: \"Hello who are you ?\",\r\n+\r\n+//       response:\r\n+//         \"Hi! This is Brane! your Voice bot from Brane Education How can I Assist you Today ?\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"Hello\",\r\n+\r\n+//       response: \"Hi! How can I assist you today?\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"hello\",\r\n+\r\n+//       response: \"Hi! How can I assist you today?\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"Hi.\",\r\n+\r\n+//       response: \"Hello! How can I assist you today?\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"Hey there\",\r\n+\r\n+//       response: \"Hi! How can I assist you today?\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"Good morning Brane.\",\r\n+\r\n+//       response: \"Hey Hiii! Good morning  ! How can I help you?\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"Good afternoon Brane.\",\r\n+\r\n+//       response: \"Hey Hiii! Good after noon ! How can I help you?\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"Good evening Brane.\",\r\n+\r\n+//       response: \"Hey Hiii! Good evening ! How can I help you?\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"can you please take me to login page\",\r\n+//       route: \"/login\",\r\n+//       routeDescription: \"login page\",\r\n+//       response: \"Navigating to the login page.\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"go to login page\",\r\n+//       route: \"/login\",\r\n+//       routeDescription: \"login page\",\r\n+//       response: \"Navigating to the login page.\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"please take me to login page\",\r\n+//       route: \"/login\",\r\n+//       routeDescription: \"login page\",\r\n+//       response: \"Navigating to the login page.\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"Go to login page\",\r\n+//       route: \"/login\",\r\n+//       routeDescription: \"login page\",\r\n+//       response: \"Navigating to the login page.\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"open login page\",\r\n+//       route: \"/login\",\r\n+//       routeDescription: \"login page\",\r\n+//       response: \"Navigating to the login page.\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"can you please take me to signup page\",\r\n+//       route: \"/signup\",\r\n+//       routeDescription: \"signup page\",\r\n+//       response: \"Navigating to the signup page.\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"take me to signup page\",\r\n+//       route: \"/signup\",\r\n+//       routeDescription: \"signup page\",\r\n+//       response: \"Navigating to the signup page.\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"Go to signup page\",\r\n+//       route: \"/signup\",\r\n+//       routeDescription: \"signup page\",\r\n+//       response: \"Navigating to the signup page.\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"open signup page\",\r\n+//       route: \"/signup\",\r\n+//       routeDescription: \"signup page\",\r\n+//       response: \"Navigating to the signup page.\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"what are platform features\",\r\n+\r\n+//       response:\r\n+//         \"Dashboard, Dynamic time table, Learning Networks, Little Masters, Video Based Dictionary, General Search.\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"Features of platform\",\r\n+\r\n+//       response:\r\n+//         \"Dashboard, Dynamic time table, Learning Networks, Little Masters, Video Based Dictionary, General Search.\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"What does the platform offer\",\r\n+\r\n+//       response:\r\n+//         \"Dashboard, Dynamic time table, Learning Networks, Little Masters, Video Based Dictionary, General Search.\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"Say me the features of platform\",\r\n+\r\n+//       response:\r\n+//         \"Dashboard, Dynamic time table, Learning Networks, Little Masters, Video Based Dictionary, General Search.\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"Say me the services of platform\",\r\n+\r\n+//       response:\r\n+//         \"Dashboard, Dynamic time table, Learning Networks, Little Masters, Video Based Dictionary, General Search.\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"tell me the services offered by the platform\",\r\n+\r\n+//       response:\r\n+//         \"Dashboard, Dynamic time table, Learning Networks, Little Masters, Video Based Dictionary, General Search.\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"explain platform services\",\r\n+\r\n+//       response:\r\n+//         \"Dashboard, Dynamic time table, Learning Networks, Little Masters, Video Based Dictionary, General Search.\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"Give me the Parent voice of Julia Harris\",\r\n+\r\n+//       response:\r\n+//         \"Brane education has helped my son a lot in his studies. He improved a lot in his studies and is now able to score good marks in his exams\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"Play today's motivational video\",\r\n+\r\n+//       response: \"I am playing the video\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"Play today's video\",\r\n+\r\n+//       response: \"I am playing Motivational video\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"Leaders Voice\",\r\n+\r\n+//       response:\r\n+//         \"This Voice-interactive AI Platform is a game Changer. It revolutionizes education.\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"Curriculum Supported by Brane Education\",\r\n+\r\n+//       response:\r\n+//         \"we support multiple Boards let me say few Telangana State Board Andhra Pradesh Board Maharashtra Board Assam Board\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"Boards supported by the platform\",\r\n+\r\n+//       response:\r\n+//         \"we support multiple Boards let me say few Telangana State Board Andhra Pradesh Board Maharashtra Board Assam Board\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"Curriculum\",\r\n+\r\n+//       response:\r\n+//         \"we support multiple Boards let me say few Telangana State Board Andhra Pradesh Board Maharashtra Board Assam Board\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"Go to landing page\",\r\n+\r\n+//       response: \"Okay, I am taking you to the landing page.\",\r\n+\r\n+//       route: \"/childpage\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"take me to landing page\",\r\n+\r\n+//       response: \"Okay, I am taking you to the landing page.\",\r\n+\r\n+//       route: \"/childpage\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"move to landing page\",\r\n+\r\n+//       response: \"Okay, I am taking you to the landing page.\",\r\n+\r\n+//       route: \"/childpage\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"roll back to landing page\",\r\n+\r\n+//       response: \"Okay, I am taking you to the landing page.\",\r\n+\r\n+//       route: \"/childpage\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"move to landing page\",\r\n+\r\n+//       response: \"Okay, I am taking you to the landing page.\",\r\n+\r\n+//       route: \"/childpage\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"what is today's quote\",\r\n+\r\n+//       response:\r\n+//         \"Determination is the power that sees us through all our frustration and obstacles. It helps in building our willpower which is the very basis of success.\",\r\n+\r\n+//       // route: \"/childpage\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"Today's Inspirational quote\",\r\n+\r\n+//       response:\r\n+//         \"Determination is the power that sees us through all our frustration and obstacles. It helps in building our willpower which is the very basis of success.\",\r\n+\r\n+//       // route: \"/childpage\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"say me today's quote\",\r\n+\r\n+//       response:\r\n+//         \"Determination is the power that sees us through all our frustration and obstacles. It helps in building our willpower which is the very basis of success.\",\r\n+\r\n+//       // route: \"/childpage\",\r\n+//     },\r\n+//     {\r\n+//       utterance: \"go back\",\r\n+//       response: \"Going back.\",\r\n+//       action: goBack, // Note the use of an action property\r\n+//     },\r\n+//     {\r\n+//       utterance: \"go forward\",\r\n+//       response: \"Going forward.\",\r\n+//       action: goForward,\r\n+//     },\r\n+//     {\r\n+//       utterance: \"play video\",\r\n+//       // response: \"Playing video.\",\r\n+//       action: playVideo,\r\n+//     },\r\n+//     {\r\n+//       utterance: \"pause video\",\r\n+//       // response: \"Pausing video.\",\r\n+//       action: pauseVideo,\r\n+//     },\r\n+//     {\r\n+//       utterance: \"start video\",\r\n+//       // response: \"Playing video.\",\r\n+//       action: playVideo,\r\n+//     },\r\n+//     {\r\n+//       utterance: \"stop video\",\r\n+//       // response: \"Playing video.\",\r\n+//       action: pauseVideo,\r\n+//     },\r\n+//     {\r\n+//       utterance: \"scroll up\",\r\n+//       // response: \"Scrolling up.\",\r\n+//       action: scrollUp,\r\n+//     },\r\n+//     {\r\n+//       utterance: \"scroll down\",\r\n+//       // response: \"Scrolling down.\",\r\n+//       action: scrollDown,\r\n+//     },\r\n+//     {\r\n+//       utterance: \"go up\",\r\n+\r\n+//       // response: \"Scrolling up.\",\r\n+//       action: scrollUp,\r\n+//     },\r\n+//     {\r\n+//       utterance: \"go down\",\r\n+//       // response: \"Scrolling down.\",\r\n+//       action: scrollDown,\r\n+//     },\r\n+//     {\r\n+//       utterance: \"scroll to top\",\r\n+//       action: scrollToTop,\r\n+//     },\r\n+//     {\r\n+//       utterance: \"scroll to bottom\",\r\n+//       action: scrollToBottom,\r\n+//     },\r\n+//     {\r\n+//       utterance: \"go back\",\r\n+//       action: goBackRef?.current?.click, // Use goBackRef directly\r\n+//       response: \"Going back.\",\r\n+//     },\r\n+//     {\r\n+//       utterance: \"take test\",\r\n+//       action: takeTestRef?.current?.click, // Use takeTestRef directly\r\n+//       response: \"Starting the test.\",\r\n+//     },\r\n+//   ];\r\n+//   return (\r\n+//     <div className=\"speech-bot-container\">\r\n+//       <div\r\n+//         className={`button-container ${\r\n+//           isListening ? \"voicebotframeactive\" : \"voicebotframe\"\r\n+//         }`}\r\n+//       >\r\n+//         <div onClick={isListening ? stopListening : startListening}>\r\n+//           <iframe\r\n+//             src={\r\n+//               isListening\r\n+//                 ? \"https://lottie.host/?file=a89aca3f-5407-4052-82c3-2048afca7a9f/NpCdWzLSKD.json\"\r\n+//                 : \"https://lottie.host/?file=d2b6cc0e-fe95-4847-85b5-35365fca7e00/vTudpCuPZq.json\"\r\n+//             }\r\n+//             width=\"120\" // Set your desired width\r\n+//             height=\"120\" // Set your desired height\r\n+//             title={isListening ? \"Stop Animation\" : \"Start Animation\"}\r\n+//             className={isListening ? \"voicebotframeactive\" : \"voicebotframe\"}\r\n+//           ></iframe>\r\n+//           {isListening ? (\r\n+//             <div className=\"overlay\" onClick={stopListening}></div>\r\n+//           ) : (\r\n+//             <div className=\"overlay\" onClick={startListening}></div>\r\n+//           )}\r\n+//         </div>\r\n+//       </div>\r\n+//     </div>\r\n+//   );\r\n+// };\r\n+\r\n+// export default VoiceBot;\r\n"
                },
                {
                    "date": 1700655611773,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,3718 @@\n+import React, { useState, useEffect, useRef } from \"react\";\r\n+import { useNavigate, useLocation } from \"react-router-dom\";\r\n+import Fuse from \"fuse.js\";\r\n+import \"./VoiceBot.css\";\r\n+import chatbotimage from \"../../assets/chatbotgif.gif\";\r\n+\r\n+const VoiceBot = ({ videoRefs }) => {\r\n+  const [isListening, setIsListening] = useState(false);\r\n+  const [isSpeaking, setIsSpeaking] = useState(false);\r\n+  const recognition = useRef(null);\r\n+  const speechSynthesis = useRef(window.speechSynthesis);\r\n+  const [hasGreeted, setHasGreeted] = useState(false);\r\n+  const navigate = useNavigate();\r\n+\r\n+  // Initialize speech recognition\r\n+  useEffect(() => {\r\n+    recognition.current = new window.webkitSpeechRecognition();\r\n+    recognition.current.continuous = true;\r\n+    recognition.current.interimResults = false;\r\n+    recognition.current.onresult = onResult;\r\n+    recognition.current.onend = onRecognitionEnd;\r\n+    recognition.current.starting = false;\r\n+\r\n+    recognition.current.onerror = (event) => {\r\n+      console.error(\"Recognition error:\", event.error);\r\n+      if (isListening && !isSpeaking) {\r\n+        restartRecognition();\r\n+      }\r\n+    };\r\n+\r\n+    return () => {\r\n+      if (recognition.current) {\r\n+        recognition.current.abort();\r\n+      }\r\n+    };\r\n+  }, []);\r\n+\r\n+  useEffect(() => {\r\n+    const checkRecognition = () => {\r\n+      if (isListening && !isSpeaking && !recognition.current.starting) {\r\n+        console.log(\"Restarting recognition because it's not active.\");\r\n+        recognition.current.starting = true;\r\n+        recognition.current.start();\r\n+        console.log(\"Restarted recognition.\");\r\n+      }\r\n+    };\r\n+\r\n+    const recognitionCheckInterval = setInterval(checkRecognition, 500); // Check every .5 second\r\n+\r\n+    return () => {\r\n+      clearInterval(recognitionCheckInterval);\r\n+    };\r\n+  }, [isListening, isSpeaking]);\r\n+\r\n+  const historyStack = useRef([]);\r\n+\r\n+  useEffect(() => {\r\n+    return () => {\r\n+      // Clean up the listener when the component unmounts\r\n+      window.removeEventListener(\"popstate\", handlePopState);\r\n+    };\r\n+  }, []);\r\n+\r\n+  const handlePopState = () => {\r\n+    // This needs to handle both back and forward browser actions\r\n+    // Use some logic to determine whether it's a back or forward action\r\n+    // For simplicity, assume it's always back\r\n+    historyStack.current.pop();\r\n+    forwardStack.current.length = 0; // Clear forward stack on manual navigation\r\n+  };\r\n+\r\n+  // Listen to popstate events to update the history stack\r\n+  useEffect(() => {\r\n+    window.addEventListener(\"popstate\", handlePopState);\r\n+  }, []);\r\n+\r\n+  const forwardStack = useRef([]);\r\n+\r\n+  const goBack = () => {\r\n+    if (window.history.state && window.history.state.idx > 0) {\r\n+      window.history.back();\r\n+      speak(\"Going back\");\r\n+    } else {\r\n+      speak(\"Can't go back any further.\");\r\n+    }\r\n+  };\r\n+\r\n+  const goForward = () => {\r\n+    if (\r\n+      window.history.state &&\r\n+      window.history.state.idx < window.history.length - 1\r\n+    ) {\r\n+      window.history.forward();\r\n+      speak(\"Going forward\");\r\n+    } else {\r\n+      speak(\"No forward history available.\");\r\n+    }\r\n+  };\r\n+\r\n+  const scrollAmount = window.innerHeight * 0.82;\r\n+\r\n+  const scrollUp = () => {\r\n+    if (window.pageYOffset === 0) {\r\n+      speak(\"Already at the top of the page.\");\r\n+    } else {\r\n+      window.scrollBy(0, -scrollAmount);\r\n+      speak(\"Scrolled up.\");\r\n+    }\r\n+  };\r\n+\r\n+  const scrollDown = () => {\r\n+    const maxScrollTop =\r\n+      document.documentElement.scrollHeight - window.innerHeight;\r\n+    if (window.pageYOffset >= maxScrollTop) {\r\n+      speak(\"Already at the bottom of the page.\");\r\n+    } else {\r\n+      window.scrollBy(0, scrollAmount);\r\n+      speak(\"Scrolled down.\");\r\n+    }\r\n+  };\r\n+\r\n+  const scrollToTop = () => {\r\n+    if (window.pageYOffset === 0) {\r\n+      speak(\"Already at the top of the page.\");\r\n+    } else {\r\n+      window.scrollTo(0, 0);\r\n+      speak(\"Scrolled to the top of the page.\");\r\n+    }\r\n+  };\r\n+\r\n+  const scrollToBottom = () => {\r\n+    const maxScrollTop =\r\n+      document.documentElement.scrollHeight - window.innerHeight;\r\n+    if (window.pageYOffset >= maxScrollTop) {\r\n+      speak(\"Already at the bottom of the page.\");\r\n+    } else {\r\n+      window.scrollTo(0, document.body.scrollHeight);\r\n+      speak(\"Scrolled to the bottom of the page.\");\r\n+    }\r\n+  };\r\n+\r\n+\r\n+  const controlVideo = (videoId, action) => {\r\n+    const videoRef = videoRefs.current.get(videoId);\r\n+    if (videoRef && videoRef.current) {\r\n+      switch (action) {\r\n+        case 'play':\r\n+          videoRef.current.play();\r\n+          break;\r\n+        case 'pause':\r\n+          videoRef.current.pause();\r\n+          break;\r\n+        case 'mute':\r\n+          videoRef.current.muted = true;\r\n+          break;\r\n+        case 'unmute':\r\n+          videoRef.current.muted = false;\r\n+          break;\r\n+        case 'fullscreen':\r\n+          if (videoRef.current.requestFullscreen) {\r\n+            videoRef.current.requestFullscreen();\r\n+          } else if (videoRef.current.webkitRequestFullscreen) { // Safari\r\n+            videoRef.current.webkitRequestFullscreen();\r\n+          } else if (videoRef.current.msRequestFullscreen) { // IE11\r\n+            videoRef.current.msRequestFullscreen();\r\n+          }\r\n+          break;\r\n+        case 'exitFullscreen':\r\n+          if (document.exitFullscreen) {\r\n+            document.exitFullscreen();\r\n+          } else if (document.webkitExitFullscreen) { // Safari\r\n+            document.webkitExitFullscreen();\r\n+          } else if (document.msExitFullscreen) { // IE11\r\n+            document.msExitFullscreen();\r\n+          }\r\n+          break;\r\n+        case 'increaseVolume':\r\n+          if (videoRef.current.volume < 1) {\r\n+            videoRef.current.volume = Math.min(1, videoRef.current.volume + 0.1);\r\n+          }\r\n+          break;\r\n+        case 'decreaseVolume':\r\n+          if (videoRef.current.volume > 0) {\r\n+            videoRef.current.volume = Math.max(0, videoRef.current.volume - 0.1);\r\n+          }\r\n+          break;\r\n+        // Add other cases as needed\r\n+      }\r\n+      speak(`${action.charAt(0).toUpperCase() + action.slice(1).replace(/([A-Z])/g, ' $1').toLowerCase()}ing video.`);\r\n+    } else {\r\n+      speak(`Video not found.`);\r\n+    }\r\n+  };\r\n+\r\n+  const speak = (message) => {\r\n+    const utterance = new SpeechSynthesisUtterance(message);\r\n+    utterance.onend = () => {\r\n+      setIsSpeaking(false);\r\n+      // Restart recognition after speaking has ended\r\n+      if (isListening) {\r\n+        restartRecognition();\r\n+      }\r\n+    };\r\n+\r\n+    setIsSpeaking(true);\r\n+    // Stop recognition when the bot starts speaking\r\n+    if (recognition.current) {\r\n+      recognition.current.abort();\r\n+    }\r\n+    speechSynthesis.current.speak(utterance);\r\n+  };\r\n+\r\n+  const restartRecognition = () => {\r\n+    // Check if recognition is not already started and if the bot is set to listen\r\n+    if (\r\n+      recognition.current &&\r\n+      !recognition.current.starting &&\r\n+      isListening &&\r\n+      !isSpeaking\r\n+    ) {\r\n+      recognition.current.abort(); // Ensure any ongoing recognition is stopped\r\n+      recognition.current.starting = true;\r\n+      recognition.current.start();\r\n+    }\r\n+  };\r\n+\r\n+  // Restart recognition when bot finishes speaking and isListening is true\r\n+  useEffect(() => {\r\n+    if (!isSpeaking && isListening) {\r\n+      restartRecognition();\r\n+    }\r\n+  }, [isSpeaking, isListening]);\r\n+\r\n+  const onResult = (event) => {\r\n+    const resultIndex = event.resultIndex;\r\n+    const transcript = event.results[resultIndex][0].transcript\r\n+      .trim()\r\n+      .toLowerCase();\r\n+\r\n+    if (event.results[resultIndex].isFinal) {\r\n+      console.log(`Recognized text: ${transcript}`);\r\n+      if (transcript.includes(\"brain\")) {\r\n+        console.log(\"Wake word heard, processing command...\");\r\n+        handleCommandWithFuse(transcript.replace(\"brain\", \"\"));\r\n+      }\r\n+    }\r\n+  };\r\n+\r\n+  const onRecognitionEnd = () => {\r\n+    recognition.current.starting = false;\r\n+    if (isListening && !isSpeaking) {\r\n+      restartRecognition();\r\n+    }\r\n+  };\r\n+\r\n+  useEffect(() => {\r\n+    if (isListening && !hasGreeted) {\r\n+      speak(\"Hello, I'm Brane. How can I help you today?\");\r\n+      setHasGreeted(true);\r\n+    }\r\n+  }, [isListening, hasGreeted]);\r\n+\r\n+  // Updated startListening function\r\n+  const startListening = () => {\r\n+    setIsListening(true);\r\n+    if (!recognition.current.starting) {\r\n+      restartRecognition();\r\n+    }\r\n+  };\r\n+\r\n+  // Updated stopListening function\r\n+  const stopListening = () => {\r\n+    setIsListening(false);\r\n+    if (speechSynthesis.current.speaking) {\r\n+      speechSynthesis.current.cancel();\r\n+    }\r\n+    recognition.current.abort();\r\n+  };\r\n+\r\n+  const handleCommandWithFuse = (command) => {\r\n+    const fuse = new Fuse(commands, { keys: [\"utterance\"], threshold: 0.4 });\r\n+    const results = fuse.search(command);\r\n+    const foundCommand = results.length ? results[0].item : null;\r\n+\r\n+    if (foundCommand) {\r\n+      console.log(\"Command found:\", foundCommand.utterance);\r\n+\r\n+      if (foundCommand.action) {\r\n+        foundCommand.action();\r\n+      } else if (foundCommand.route) {\r\n+        navigate(foundCommand.route);\r\n+      }\r\n+\r\n+      // Speak after performing the action or navigation\r\n+      speak(foundCommand.response);\r\n+    } else {\r\n+      console.log(\"No command found.\");\r\n+      speak(\"I'm not sure how to respond to that.\");\r\n+    }\r\n+  };\r\n+\r\n+  const commands = [\r\n+    {\r\n+      utterance: \"Hello who are you ?\",\r\n+\r\n+      response:\r\n+        \"Hi! This is Brane! your Voice bot from Brane Education How can I Assist you Today ?\",\r\n+    },\r\n+\r\n+    {\r\n+      utterance: \"Hello\",\r\n+\r\n+      response: \"Hi! How can I assist you today?\",\r\n+    },\r\n+\r\n+    {\r\n+      utterance: \"hello\",\r\n+\r\n+      response: \"Hi! How can I assist you today?\",\r\n+    },\r\n+\r\n+    {\r\n+      utterance: \"Hi.\",\r\n+\r\n+      response: \"Hello! How can I assist you today?\",\r\n+    },\r\n+\r\n+    {\r\n+      utterance: \"Hey there\",\r\n+\r\n+      response: \"Hi! How can I assist you today?\",\r\n+    },\r\n+\r\n+    {\r\n+      utterance: \"Good morning Brane.\",\r\n+\r\n+      response: \"Hey Hiii! Good morning  ! How can I help you?\",\r\n+    },\r\n+\r\n+    {\r\n+      utterance: \"Good afternoon Brane.\",\r\n+\r\n+      response: \"Hey Hiii! Good after noon ! How can I help you?\",\r\n+    },\r\n+\r\n+    {\r\n+      utterance: \"Good evening Brane.\",\r\n+\r\n+      response: \"Hey Hiii! Good evening ! How can I help you?\",\r\n+    },\r\n+\r\n+    {\r\n+      utterance: \"take me to homepage\",\r\n+\r\n+      route: \"/\",\r\n+\r\n+      response: \"You're in Homepage now\",\r\n+    },\r\n+    {\r\n+      utterance: \"open homepage\",\r\n+\r\n+      route: \"/\",\r\n+\r\n+      response: \"You're in Homepage now\",\r\n+    },\r\n+    {\r\n+      utterance: \"go to homepage\",\r\n+\r\n+      route: \"/\",\r\n+\r\n+      response: \"You're in Homepage now\",\r\n+    },\r\n+    {\r\n+      utterance: \"go back to homepage\",\r\n+\r\n+      route: \"/\",\r\n+\r\n+      response: \"You're in Homepage now\",\r\n+    },\r\n+    {\r\n+      utterance: \"can you please take me to login page\",\r\n+\r\n+      route: \"/login\",\r\n+\r\n+      response: \"Here's the Login Page, Please Login\",\r\n+    },\r\n+\r\n+    {\r\n+      utterance: \"please take me to login page\",\r\n+\r\n+      route: \"/login\",\r\n+\r\n+      response: \"Here's the Login Page, Please Login\",\r\n+    },\r\n+\r\n+    {\r\n+      utterance: \"Go to login page\",\r\n+\r\n+      route: \"/login\",\r\n+\r\n+      response: \"Here's the Login Page, Please Login\",\r\n+    },\r\n+\r\n+    {\r\n+      utterance: \"open login page\",\r\n+\r\n+      route: \"/login\",\r\n+\r\n+      response: \"Here's the Login Page, Please Login\",\r\n+    },\r\n+\r\n+    {\r\n+      utterance: \"can you please take me to signup page\",\r\n+\r\n+      route: \"/signup\",\r\n+\r\n+      response: \"Here's the signup page. Please proceed With Registration.\",\r\n+    },\r\n+\r\n+    {\r\n+      utterance: \"take me to signup page\",\r\n+\r\n+      route: \"/signup\",\r\n+\r\n+      response: \"Here's the signup page. Please proceed With Registration.\",\r\n+    },\r\n+\r\n+    {\r\n+      utterance: \"Go to signup page\",\r\n+\r\n+      route: \"/signup\",\r\n+\r\n+      response: \"Here's the signup page. Please proceed With Registration.\",\r\n+    },\r\n+\r\n+    {\r\n+      utterance: \"open signup page\",\r\n+\r\n+      route: \"/signup\",\r\n+\r\n+      response: \"Here's the signup page. Please proceed With Registration.\",\r\n+    },\r\n+\r\n+    {\r\n+      utterance: \"Go to face id\",\r\n+\r\n+      route: \"/login/faceid\",\r\n+\r\n+      response: \"Here's Face ID Login. Please proceed.\",\r\n+    },\r\n+\r\n+    {\r\n+      utterance: \"Go to face id login\",\r\n+\r\n+      route: \"/login/faceid\",\r\n+\r\n+      response: \"Here's Face ID Login. Please proceed.\",\r\n+    },\r\n+    {\r\n+      utterance: \"Go to face login\",\r\n+\r\n+      route: \"/login/faceid\",\r\n+\r\n+      response: \"Here's Face ID Login. Please proceed.\",\r\n+    },\r\n+\r\n+    {\r\n+      utterance: \"login with face id\",\r\n+\r\n+      route: \"/login/faceid\",\r\n+\r\n+      response: \"Here's Face ID Login. Please proceed.\",\r\n+    },\r\n+\r\n+    {\r\n+      utterance: \"login with face\",\r\n+\r\n+      route: \"/login/faceid\",\r\n+\r\n+      response: \"Here's Face ID Login. Please proceed.\",\r\n+    },\r\n+\r\n+    {\r\n+      utterance: \"i want to login with face\",\r\n+\r\n+      route: \"/login/faceid\",\r\n+\r\n+      response: \"Here's Face ID Login. Please proceed.\",\r\n+    },\r\n+\r\n+    {\r\n+      utterance: \"login with voice\",\r\n+\r\n+      route: \"/login/voiceid\",\r\n+\r\n+      response: \"Here's Voice Login. Please proceed.\",\r\n+    },\r\n+\r\n+    {\r\n+      utterance: \"i want to login with voice\",\r\n+\r\n+      route: \"/login/voiceid\",\r\n+\r\n+      response: \"Here's Voice Login. Please proceed.\",\r\n+    },\r\n+\r\n+    {\r\n+      utterance: \"go to voice login\",\r\n+\r\n+      route: \"/login/voiceid\",\r\n+\r\n+      response: \"Here's Voice Login. Please proceed.\",\r\n+    },\r\n+\r\n+    {\r\n+      utterance: \"login with voice\",\r\n+\r\n+      route: \"/login/voiceid\",\r\n+\r\n+      response: \"Here's Voice Login. Please proceed.\",\r\n+    },\r\n+\r\n+    {\r\n+      utterance: \"login with mobile\",\r\n+\r\n+      route: \"/login/mobile\",\r\n+\r\n+      response: \"Here's Mobile Login. Please proceed.\",\r\n+    },\r\n+\r\n+    {\r\n+      utterance: \"i want to login with mobile\",\r\n+\r\n+      route: \"/login/mobile\",\r\n+\r\n+      response: \"Here's Mobile Login. Please proceed.\",\r\n+    },\r\n+    {\r\n+      utterance: \"go to mobile login\",\r\n+\r\n+      route: \"/login/mobile\",\r\n+\r\n+      response: \"Here's Mobile Login. Please proceed.\",\r\n+    },\r\n+    {\r\n+      utterance: \"go to about page\",\r\n+\r\n+      route: \"/aboutus\",\r\n+\r\n+      response: \"This is About us.\",\r\n+    },\r\n+    {\r\n+      utterance: \"go to about us page\",\r\n+\r\n+      route: \"/aboutus\",\r\n+\r\n+      response: \"This is About us.\",\r\n+    },\r\n+    {\r\n+      utterance: \"open about us page\",\r\n+\r\n+      route: \"/aboutus\",\r\n+\r\n+      response: \"This is About us.\",\r\n+    },\r\n+    {\r\n+      utterance: \"open about page\",\r\n+\r\n+      route: \"/aboutus\",\r\n+\r\n+      response: \"This is About us.\",\r\n+    },\r\n+    {\r\n+      utterance: \"take me to about page\",\r\n+\r\n+      route: \"/aboutus\",\r\n+\r\n+      response: \"This is About us.\",\r\n+    },\r\n+    {\r\n+      utterance: \"take me to about us page\",\r\n+\r\n+      route: \"/aboutus\",\r\n+\r\n+      response: \"This is About us.\",\r\n+    },\r\n+\r\n+    {\r\n+      utterance: \"go to contact page\",\r\n+\r\n+      route: \"/contactus\",\r\n+\r\n+      response: \"You can contact us from here\",\r\n+    },\r\n+    {\r\n+      utterance: \"go to contact us page\",\r\n+\r\n+      route: \"/contactus\",\r\n+\r\n+      response: \"You can contact us from here\",\r\n+    },\r\n+    {\r\n+      utterance: \"open contact us page\",\r\n+\r\n+      route: \"/contactus\",\r\n+\r\n+      response: \"You can contact us from here\",\r\n+    },\r\n+    {\r\n+      utterance: \"open contact page\",\r\n+\r\n+      route: \"/contactus\",\r\n+\r\n+      response: \"You can contact us from here\",\r\n+    },\r\n+    {\r\n+      utterance: \"take me to about page\",\r\n+\r\n+      route: \"/contactus\",\r\n+\r\n+      response: \"You can contact us from here\",\r\n+    },\r\n+    {\r\n+      utterance: \"take me to contact us page\",\r\n+\r\n+      route: \"/contactus\",\r\n+\r\n+      response: \"You can contact us from here\",\r\n+    },\r\n+\r\n+    {\r\n+      utterance: \"what are platform features\",\r\n+\r\n+      response:\r\n+        \"Dashboard, Dynamic time table, Learning Networks, Little Masters, Video Based Dictionary, General Search.\",\r\n+    },\r\n+\r\n+    {\r\n+      utterance: \"Features of platform\",\r\n+\r\n+      response:\r\n+        \"Dashboard, Dynamic time table, Learning Networks, Little Masters, Video Based Dictionary, General Search.\",\r\n+    },\r\n+\r\n+    {\r\n+      utterance: \"What does the platform offer\",\r\n+\r\n+      response:\r\n+        \"Dashboard, Dynamic time table, Learning Networks, Little Masters, Video Based Dictionary, General Search.\",\r\n+    },\r\n+\r\n+    {\r\n+      utterance: \"Say me the features of platform\",\r\n+\r\n+      response:\r\n+        \"Dashboard, Dynamic time table, Learning Networks, Little Masters, Video Based Dictionary, General Search.\",\r\n+    },\r\n+\r\n+    {\r\n+      utterance: \"Say me the services of platform\",\r\n+\r\n+      response:\r\n+        \"Dashboard, Dynamic time table, Learning Networks, Little Masters, Video Based Dictionary, General Search.\",\r\n+    },\r\n+\r\n+    {\r\n+      utterance: \"tell me the services offered by the platform\",\r\n+\r\n+      response:\r\n+        \"Dashboard, Dynamic time table, Learning Networks, Little Masters, Video Based Dictionary, General Search.\",\r\n+    },\r\n+\r\n+    {\r\n+      utterance: \"explain platform services\",\r\n+\r\n+      response:\r\n+        \"Dashboard, Dynamic time table, Learning Networks, Little Masters, Video Based Dictionary, General Search.\",\r\n+    },\r\n+\r\n+    {\r\n+      utterance: \"Give me the Parent voice of Julia Harris\",\r\n+\r\n+      response:\r\n+        \"Brane education has helped my son a lot in his studies. He improved a lot in his studies and is now able to score good marks in his exams\",\r\n+    },\r\n+\r\n+    {\r\n+      utterance: \"Leaders Voice\",\r\n+\r\n+      response:\r\n+        \"This Voice-interactive AI Platform is a game Changer. It revolutionizes education.\",\r\n+    },\r\n+\r\n+    {\r\n+      utterance: \"Curriculum Supported by Brane Education\",\r\n+\r\n+      response:\r\n+        \"we support multiple Boards let me say few Telangana State Board Andhra Pradesh Board Maharashtra Board Assam Board\",\r\n+    },\r\n+\r\n+    {\r\n+      utterance: \"Boards supported by the platform\",\r\n+\r\n+      response:\r\n+        \"we support multiple Boards let me say few Telangana State Board Andhra Pradesh Board Maharashtra Board Assam Board\",\r\n+    },\r\n+\r\n+    {\r\n+      utterance: \"Curriculum\",\r\n+\r\n+      response:\r\n+        \"we support multiple Boards let me say few Telangana State Board Andhra Pradesh Board Maharashtra Board Assam Board\",\r\n+    },\r\n+\r\n+    {\r\n+      utterance: \"what is today's quote\",\r\n+\r\n+      response:\r\n+        \"Determination is the power that sees us through all our frustration and obstacles. It helps in building our willpower which is the very basis of success.\",\r\n+\r\n+      route: \"/childpage\",\r\n+    },\r\n+\r\n+    {\r\n+      utterance: \"Today's Inspirational quote\",\r\n+\r\n+      response:\r\n+        \"Determination is the power that sees us through all our frustration and obstacles. It helps in building our willpower which is the very basis of success.\",\r\n+\r\n+      route: \"/childpage\",\r\n+    },\r\n+\r\n+    {\r\n+      utterance: \"say me today's quote\",\r\n+\r\n+      response:\r\n+        \"Determination is the power that sees us through all our frustration and obstacles. It helps in building our willpower which is the very basis of success.\",\r\n+\r\n+      route: \"/childpage\",\r\n+    },\r\n+    {\r\n+      utterance: \"go back\",\r\n+      response: \"\",\r\n+      action: goBack, // Note the use of an action property\r\n+    },\r\n+    {\r\n+      utterance: \"go forward\",\r\n+      response: \"\",\r\n+      action: goForward,\r\n+    },\r\n+    // {\r\n+    //   utterance: \"play video\",\r\n+    //   // response: \"Playing video.\",\r\n+    //   action: playVideo,\r\n+    // },\r\n+    // {\r\n+    //   utterance: \"pause video\",\r\n+    //   // response: \"Pausing video.\",\r\n+    //   action: pauseVideo,\r\n+    // },\r\n+    // {\r\n+    //   utterance: \"start video\",\r\n+    //   // response: \"Playing video.\",\r\n+    //   action: playVideo,\r\n+    // },\r\n+    // {\r\n+    //   utterance: \"stop video\",\r\n+    //   // response: \"Playing video.\",\r\n+    //   action: pauseVideo,\r\n+    // },\r\n+    {\r\n+      utterance: \"scroll up\",\r\n+      // response: \"Scrolling up.\",\r\n+      action: scrollUp,\r\n+    },\r\n+    {\r\n+      utterance: \"scroll down\",\r\n+      // response: \"Scrolling down.\",\r\n+      action: scrollDown,\r\n+    },\r\n+    {\r\n+      utterance: \"go up\",\r\n+\r\n+      // response: \"Scrolling up.\",\r\n+      action: scrollUp,\r\n+    },\r\n+    {\r\n+      utterance: \"go down\",\r\n+      // response: \"Scrolling down.\",\r\n+      action: scrollDown,\r\n+    },\r\n+    {\r\n+      utterance: \"scroll to top\",\r\n+      action: scrollToTop,\r\n+    },\r\n+    {\r\n+      utterance: \"scroll to bottom\",\r\n+      action: scrollToBottom,\r\n+    },\r\n+    {\r\n+      utterance: \"brane stop\",\r\n+      action: stopListening,\r\n+    },\r\n+    {\r\n+      utterance: \"brane turn off\",\r\n+      action: stopListening,\r\n+    },\r\n+    {\r\n+      utterance: \"brane stop the bot\",\r\n+      action: stopListening,\r\n+    },\r\n+    // {\r\n+    //   utterance: \"mute the video\",\r\n+    //   action: muteVideo,\r\n+    // },\r\n+    // {\r\n+    //   utterance: \"unmute the video\",\r\n+    //   action: unmuteVideo,\r\n+    // },\r\n+    // {\r\n+    //   utterance: \"stop the video sound\",\r\n+    //   action: muteVideo,\r\n+    // },\r\n+    // {\r\n+    //   utterance: \"play the video sound\",\r\n+    //   action: unmuteVideo,\r\n+    // },\r\n+    {\r\n+      utterance: \"play transforming education video\",\r\n+      action: () => controlVideo('ourProjectsVideo', 'play'),\r\n+    },\r\n+    {\r\n+      utterance: \"start transforming education video\",\r\n+      action: () => controlVideo('ourProjectsVideo', 'play'),\r\n+    },\r\n+    {\r\n+      utterance: \"pause transforming education video\",\r\n+      action: () => controlVideo('ourProjectsVideo', 'pause'),\r\n+    },\r\n+    {\r\n+      utterance: \"stop transforming education video\",\r\n+      action: () => controlVideo('ourProjectsVideo', 'pause'),\r\n+    },\r\n+\r\n+    {\r\n+      utterance: \"mute transforming education video\",\r\n+      action: () => controlVideo('ourProjectsVideo', 'mute'),\r\n+    },\r\n+    {\r\n+      utterance: \"unmute transforming education video\",\r\n+      action: () => controlVideo('ourProjectsVideo', 'unmute'),\r\n+    },\r\n+    {\r\n+      utterance: \"fullscreen transforming education video\",\r\n+      action: () => controlVideo('ourProjectsVideo', 'fullscreen'),\r\n+    },\r\n+    {\r\n+      utterance: \"exit fullscreen transforming education video\",\r\n+      action: () => controlVideo('ourProjectsVideo', 'exitFullscreen'),\r\n+    },\r\n+    {\r\n+      utterance: \"increase volume transforming education video\",\r\n+      action: () => controlVideo('ourProjectsVideo', 'increaseVolume'),\r\n+    },\r\n+    {\r\n+      utterance: \"decrease volume transforming education video\",\r\n+      action: () => controlVideo('ourProjectsVideo', 'decreaseVolume'),\r\n+    },\r\n+  ];\r\n+\r\n+  return (\r\n+    <div className=\"speech-bot-container\">\r\n+      <div\r\n+        className={`button-container ${\r\n+          isListening ? \"voicebotframeactive\" : \"voicebotframe\"\r\n+        }`}\r\n+      >\r\n+        {/* <button onClick={isListening ? stopListening : startListening}>\r\n+          {isListening ? \"Stop\" : \"Start\"} Animation\r\n+        </button> */}\r\n+        <img\r\n+          className=\"botimage\"\r\n+          src={chatbotimage}\r\n+          alt=\"\"\r\n+          onClick={isListening ? stopListening : startListening}\r\n+        />\r\n+      </div>\r\n+    </div>\r\n+  );\r\n+};\r\n+\r\n+export default VoiceBot;\r\n+\r\n+{\r\n+  /* // import React, { useState, useEffect, useRef } from \"react\";\r\n+// import { useNavigate, useLocation } from \"react-router-dom\";\r\n+// import Fuse from \"fuse.js\";\r\n+// import \"./VoiceBot.css\";\r\n+\r\n+// const VoiceBot = ({ videoRef }) => {\r\n+//   const [isListening, setIsListening] = useState(false);\r\n+//   const [isSpeaking, setIsSpeaking] = useState(false);\r\n+//   const recognition = useRef(null);\r\n+//   const speechSynthesis = useRef(window.speechSynthesis);\r\n+//   const [hasGreeted, setHasGreeted] = useState(false);\r\n+//   const navigate = useNavigate();\r\n+\r\n+//   useEffect(() => {\r\n+//     recognition.current = new window.webkitSpeechRecognition();\r\n+//     recognition.current.continuous = true;\r\n+//     recognition.current.interimResults = false;\r\n+//     recognition.current.onresult = onResult;\r\n+//     recognition.current.onend = onRecognitionEnd;\r\n+//     recognition.current.starting = false;\r\n+\r\n+//     // Simplified error handling, removed specific handling for 'no-speech'\r\n+//     recognition.current.onerror = (event) => {\r\n+//       console.error(\"Recognition error:\", event.error);\r\n+//       // Check if listening is true and the bot isn't speaking\r\n+//       if (isListening && !isSpeaking) {\r\n+//         // Restart recognition\r\n+//         restartRecognition();\r\n+//       }\r\n+//     };\r\n+\r\n+//     return () => {\r\n+//       if (recognition.current) {\r\n+//         recognition.current.abort();\r\n+//       }\r\n+//     };\r\n+//   }, []);\r\n+\r\n+//   useEffect(() => {\r\n+//     const checkRecognition = () => {\r\n+//       if (isListening && !isSpeaking && !recognition.current.starting) {\r\n+//         console.log(\"Restarting recognition because it's not active.\");\r\n+//         recognition.current.starting = true;\r\n+//         recognition.current.start();\r\n+//         console.log(\"Restarted recognition.\");\r\n+//       }\r\n+//     };\r\n+\r\n+//     const recognitionCheckInterval = setInterval(checkRecognition, 100); // Check every 1 second\r\n+\r\n+//     return () => {\r\n+//       clearInterval(recognitionCheckInterval);\r\n+//     };\r\n+//   }, [isListening, isSpeaking]);\r\n+\r\n+//   const restartRecognition = () => {\r\n+//     if (recognition.current.starting) {\r\n+//       console.log(\"Recognition is already starting or running.\");\r\n+//       return;\r\n+//     }\r\n+\r\n+//     recognition.current.abort(); // Stop any existing recognition process\r\n+//     recognition.current.starting = true;\r\n+//     recognition.current.start();\r\n+//     console.log(\"Recognition restarted.\");\r\n+//   };\r\n+\r\n+//   const historyStack = useRef([]);\r\n+\r\n+//   useEffect(() => {\r\n+//     return () => {\r\n+//       // Clean up the listener when the component unmounts\r\n+//       window.removeEventListener(\"popstate\", handlePopState);\r\n+//     };\r\n+//   }, []);\r\n+\r\n+//   const handlePopState = () => {\r\n+//     // This needs to handle both back and forward browser actions\r\n+//     // Use some logic to determine whether it's a back or forward action\r\n+//     // For simplicity, assume it's always back\r\n+//     historyStack.current.pop();\r\n+//     forwardStack.current.length = 0; // Clear forward stack on manual navigation\r\n+//   };\r\n+  \r\n+\r\n+//   // Add a new entry to the stack whenever navigate is called\r\n+//   const customNavigate = (to, options) => {\r\n+//     historyStack.current.push(to);\r\n+//     navigate(to, options);\r\n+//   };\r\n+\r\n+//   // Listen to popstate events to update the history stack\r\n+//   useEffect(() => {\r\n+//     window.addEventListener(\"popstate\", handlePopState);\r\n+//   }, []);\r\n+\r\n+//   const forwardStack = useRef([]);\r\n+\r\n+//   const goBack = () => {\r\n+//     if (window.history.state && window.history.state.idx > 0) {\r\n+//       window.history.back();\r\n+//       speak(\"Going back\");\r\n+//     } else {\r\n+//       speak(\"Can't go back any further.\");\r\n+//     }\r\n+//   };\r\n+\r\n+//   const goForward = () => {\r\n+//     if (window.history.state && window.history.state.idx < window.history.length - 1) {\r\n+//       window.history.forward();\r\n+//       speak(\"Going forward\");\r\n+//     } else {\r\n+//       speak(\"No forward history available.\");\r\n+//     }\r\n+//   };\r\n+\r\n+//   const playVideo = () => {\r\n+//     if (videoRef.current) {\r\n+//       videoRef.current.play();\r\n+//       speak(\"Playing video.\");\r\n+//     } else {\r\n+//       speak(\"No video to play.\");\r\n+//     }\r\n+//   };\r\n+\r\n+//   const pauseVideo = () => {\r\n+//     if (videoRef.current) {\r\n+//       videoRef.current.pause();\r\n+//       speak(\"Video paused.\");\r\n+//     } else {\r\n+//       speak(\"No video to pause.\");\r\n+//     }\r\n+//   };\r\n+\r\n+//   const scrollAmount = window.innerHeight * 0.82;\r\n+\r\n+//   const scrollUp = () => {\r\n+//     if (window.pageYOffset === 0) {\r\n+//       speak(\"Already at the top of the page.\");\r\n+//     } else {\r\n+//       window.scrollBy(0, -scrollAmount);\r\n+//       speak(\"Scrolled up.\");\r\n+//     }\r\n+//   };\r\n+\r\n+//   const scrollDown = () => {\r\n+//     const maxScrollTop =\r\n+//       document.documentElement.scrollHeight - window.innerHeight;\r\n+//     if (window.pageYOffset >= maxScrollTop) {\r\n+//       speak(\"Already at the bottom of the page.\");\r\n+//     } else {\r\n+//       window.scrollBy(0, scrollAmount);\r\n+//       speak(\"Scrolled down.\");\r\n+//     }\r\n+//   };\r\n+\r\n+//   const scrollToTop = () => {\r\n+//     if (window.pageYOffset === 0) {\r\n+//       speak(\"Already at the top of the page.\");\r\n+//     } else {\r\n+//       window.scrollTo(0, 0);\r\n+//       speak(\"Scrolled to the top of the page.\");\r\n+//     }\r\n+//   };\r\n+\r\n+//   const scrollToBottom = () => {\r\n+//     const maxScrollTop =\r\n+//       document.documentElement.scrollHeight - window.innerHeight;\r\n+//     if (window.pageYOffset >= maxScrollTop) {\r\n+//       speak(\"Already at the bottom of the page.\");\r\n+//     } else {\r\n+//       window.scrollTo(0, document.body.scrollHeight);\r\n+//       speak(\"Scrolled to the bottom of the page.\");\r\n+//     }\r\n+//   };\r\n+\r\n+//   const speak = (message) => {\r\n+//     console.log(\"speak function called with message:\", message);\r\n+//     const utterance = new SpeechSynthesisUtterance(message);\r\n+//     utterance.onend = () => {\r\n+//       setIsSpeaking(false);\r\n+//       console.log(\"Speaking ended.\");\r\n+//       if (isListening && !recognition.current.starting) {\r\n+//         console.log(\"Restarting recognition after speaking.\");\r\n+//         recognition.current.starting = true;\r\n+//         recognition.current.start();\r\n+//         console.log(\"Restarted recognition after speaking.\");\r\n+//       }\r\n+//     };\r\n+\r\n+//     setIsSpeaking(true);\r\n+//     console.log(\"Speaking started.\");\r\n+//     recognition.current.stop(); // Ensure to stop recognition before speaking\r\n+//     speechSynthesis.current.speak(utterance);\r\n+//   };\r\n+\r\n+//   const onResult = (event) => {\r\n+//     const resultIndex = event.resultIndex;\r\n+//     const transcript = event.results[resultIndex][0].transcript\r\n+//       .trim()\r\n+//       .toLowerCase();\r\n+\r\n+//     if (event.results[resultIndex].isFinal) {\r\n+//       console.log(`Recognized text: ${transcript}`);\r\n+//       if (transcript.includes(\"brain\")) {\r\n+//         console.log(\"Wake word heard, processing command...\");\r\n+//         handleCommandWithFuse(transcript.replace(\"brain\", \"\"));\r\n+//       }\r\n+//     }\r\n+//   };\r\n+\r\n+//   const onRecognitionEnd = () => {\r\n+//     recognition.current.starting = false;\r\n+//     if (isListening && !isSpeaking) {\r\n+//       restartRecognition();\r\n+//     }\r\n+//   };\r\n+\r\n+//   useEffect(() => {\r\n+//     if (isListening) {\r\n+//       if (!hasGreeted) {\r\n+//         speak(\"Hello, I'm Brane. How can I help you today?\");\r\n+//         setHasGreeted(true);\r\n+//       } else {\r\n+//         speak(\"Listening.\");\r\n+//       }\r\n+//     }\r\n+//   }, [isListening, hasGreeted]);\r\n+\r\n+\r\n+//   const startListening = () => {\r\n+//     if (!recognition.current.starting) {\r\n+//       setIsListening(true);\r\n+//       restartRecognition();\r\n+//     }\r\n+//   };\r\n+\r\n+//   const stopListening = () => {\r\n+//     setIsListening(false);\r\n+//     recognition.current.abort();\r\n+//     if (speechSynthesis.current.speaking) {\r\n+//       speechSynthesis.current.cancel();\r\n+//     }\r\n+//   };\r\n+\r\n+//   const handleCommandWithFuse = (command) => {\r\n+//     const fuse = new Fuse(commands, { keys: [\"utterance\"], threshold: 0.4 });\r\n+//     const results = fuse.search(command);\r\n+//     const foundCommand = results.length ? results[0].item : null;\r\n+\r\n+//     if (foundCommand) {\r\n+//       console.log(\"Command found:\", foundCommand.utterance);\r\n+\r\n+//       if (foundCommand.action) {\r\n+//         foundCommand.action();\r\n+//       } else if (foundCommand.route) {\r\n+//         navigate(foundCommand.route);\r\n+//       }\r\n+\r\n+//       // Speak after performing the action or navigation\r\n+//       speak(foundCommand.response);\r\n+//     } else {\r\n+//       console.log(\"No command found.\");\r\n+//       speak(\"I'm not sure how to respond to that.\");\r\n+//     }\r\n+//   };\r\n+\r\n+//   const commands = [\r\n+//     {\r\n+//       utterance: \"Hello who are you ?\",\r\n+\r\n+//       response:\r\n+//         \"Hi! This is Brane! your Voice bot from Brane Education How can I Assist you Today ?\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"Hello\",\r\n+\r\n+//       response: \"Hi! How can I assist you today?\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"hello\",\r\n+\r\n+//       response: \"Hi! How can I assist you today?\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"Hi.\",\r\n+\r\n+//       response: \"Hello! How can I assist you today?\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"Hey there\",\r\n+\r\n+//       response: \"Hi! How can I assist you today?\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"Good morning Brane.\",\r\n+\r\n+//       response: \"Hey Hiii! Good morning  ! How can I help you?\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"Good afternoon Brane.\",\r\n+\r\n+//       response: \"Hey Hiii! Good after noon ! How can I help you?\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"Good evening Brane.\",\r\n+\r\n+//       response: \"Hey Hiii! Good evening ! How can I help you?\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"can you please take me to login page\",\r\n+\r\n+//       route: \"/login\",\r\n+\r\n+//       response: \"Here's the Login Page, Please Login\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"please take me to login page\",\r\n+\r\n+//       route: \"/login\",\r\n+\r\n+//       response: \"Here's the Login Page, Please Login\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"Go to login page\",\r\n+\r\n+//       route: \"/login\",\r\n+\r\n+//       response: \"Here's the Login Page, Please Login\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"open login page\",\r\n+\r\n+//       route: \"/login\",\r\n+\r\n+//       response: \"Here's the Login Page, Please Login\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"can you please take me to signup page\",\r\n+\r\n+//       route: \"/signup\",\r\n+\r\n+//       response: \"Here's the signup page. Please proceed With Registration.\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"take me to signup page\",\r\n+\r\n+//       route: \"/signup\",\r\n+\r\n+//       response: \"Here's the signup page. Please proceed With Registration.\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"Go to signup page\",\r\n+\r\n+//       route: \"/signup\",\r\n+\r\n+//       response: \"Here's the signup page. Please proceed With Registration.\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"open signup page\",\r\n+\r\n+//       route: \"/signup\",\r\n+\r\n+//       response: \"Here's the signup page. Please proceed With Registration.\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"Go to face id\",\r\n+\r\n+//       route: \"/login/faceid\",\r\n+\r\n+//       response: \"Here's Face ID Login. Please proceed.\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"Go to face id login\",\r\n+\r\n+//       route: \"/login/faceid\",\r\n+\r\n+//       response: \"Here's Face ID Login. Please proceed.\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"login with face id\",\r\n+\r\n+//       route: \"/login/faceid\",\r\n+\r\n+//       response: \"Here's Face ID Login. Please proceed.\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"login with face\",\r\n+\r\n+//       route: \"/login/faceid\",\r\n+\r\n+//       response: \"Here's Face ID Login. Please proceed.\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"i want to login with face\",\r\n+\r\n+//       route: \"/login/faceid\",\r\n+\r\n+//       response: \"Here's Face ID Login. Please proceed.\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"login with voice\",\r\n+\r\n+//       route: \"/login/voiceid\",\r\n+\r\n+//       response: \"Here's Voice Login. Please proceed.\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"i want to login with voice\",\r\n+\r\n+//       route: \"/login/voiceid\",\r\n+\r\n+//       response: \"Here's Voice Login. Please proceed.\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"go to voice login\",\r\n+\r\n+//       route: \"/login/voiceid\",\r\n+\r\n+//       response: \"Here's Voice Login. Please proceed.\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"login with voice\",\r\n+\r\n+//       route: \"/login/voiceid\",\r\n+\r\n+//       response: \"Here's Voice Login. Please proceed.\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"login with mobile\",\r\n+\r\n+//       route: \"/login/mobile\",\r\n+\r\n+//       response: \"Here's Mobile Login. Please proceed.\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"i want to login with mobile\",\r\n+\r\n+//       route: \"/login/mobile\",\r\n+\r\n+//       response: \"Here's Mobile Login. Please proceed.\",\r\n+//     },\r\n+//     {\r\n+//       utterance: \"go to mobile login\",\r\n+\r\n+//       route: \"/login/mobile\",\r\n+\r\n+//       response: \"Here's Mobile Login. Please proceed.\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"what are platform features\",\r\n+\r\n+//       response:\r\n+//         \"Dashboard, Dynamic time table, Learning Networks, Little Masters, Video Based Dictionary, General Search.\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"Features of platform\",\r\n+\r\n+//       response:\r\n+//         \"Dashboard, Dynamic time table, Learning Networks, Little Masters, Video Based Dictionary, General Search.\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"What does the platform offer\",\r\n+\r\n+//       response:\r\n+//         \"Dashboard, Dynamic time table, Learning Networks, Little Masters, Video Based Dictionary, General Search.\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"Say me the features of platform\",\r\n+\r\n+//       response:\r\n+//         \"Dashboard, Dynamic time table, Learning Networks, Little Masters, Video Based Dictionary, General Search.\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"Say me the services of platform\",\r\n+\r\n+//       response:\r\n+//         \"Dashboard, Dynamic time table, Learning Networks, Little Masters, Video Based Dictionary, General Search.\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"tell me the services offered by the platform\",\r\n+\r\n+//       response:\r\n+//         \"Dashboard, Dynamic time table, Learning Networks, Little Masters, Video Based Dictionary, General Search.\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"explain platform services\",\r\n+\r\n+//       response:\r\n+//         \"Dashboard, Dynamic time table, Learning Networks, Little Masters, Video Based Dictionary, General Search.\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"Give me the Parent voice of Julia Harris\",\r\n+\r\n+//       response:\r\n+//         \"Brane education has helped my son a lot in his studies. He improved a lot in his studies and is now able to score good marks in his exams\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"Play today's motivational video\",\r\n+\r\n+//       response: \"I am playing the video\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"Play today's video\",\r\n+\r\n+//       response: \"I am playing Motivational video\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"Leaders Voice\",\r\n+\r\n+//       response:\r\n+//         \"This Voice-interactive AI Platform is a game Changer. It revolutionizes education.\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"Curriculum Supported by Brane Education\",\r\n+\r\n+//       response:\r\n+//         \"we support multiple Boards let me say few Telangana State Board Andhra Pradesh Board Maharashtra Board Assam Board\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"Boards supported by the platform\",\r\n+\r\n+//       response:\r\n+//         \"we support multiple Boards let me say few Telangana State Board Andhra Pradesh Board Maharashtra Board Assam Board\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"Curriculum\",\r\n+\r\n+//       response:\r\n+//         \"we support multiple Boards let me say few Telangana State Board Andhra Pradesh Board Maharashtra Board Assam Board\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"Go to landing page\",\r\n+\r\n+//       response: \"Okay, I am taking you to the landing page.\",\r\n+\r\n+//       route: \"/childpage\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"take me to landing page\",\r\n+\r\n+//       response: \"Okay, I am taking you to the landing page.\",\r\n+\r\n+//       route: \"/childpage\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"move to landing page\",\r\n+\r\n+//       response: \"Okay, I am taking you to the landing page.\",\r\n+\r\n+//       route: \"/childpage\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"roll back to landing page\",\r\n+\r\n+//       response: \"Okay, I am taking you to the landing page.\",\r\n+\r\n+//       route: \"/childpage\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"move to landing page\",\r\n+\r\n+//       response: \"Okay, I am taking you to the landing page.\",\r\n+\r\n+//       route: \"/childpage\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"what is today's quote\",\r\n+\r\n+//       response:\r\n+//         \"Determination is the power that sees us through all our frustration and obstacles. It helps in building our willpower which is the very basis of success.\",\r\n+\r\n+//       route: \"/childpage\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"Today's Inspirational quote\",\r\n+\r\n+//       response:\r\n+//         \"Determination is the power that sees us through all our frustration and obstacles. It helps in building our willpower which is the very basis of success.\",\r\n+\r\n+//       route: \"/childpage\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"say me today's quote\",\r\n+\r\n+//       response:\r\n+//         \"Determination is the power that sees us through all our frustration and obstacles. It helps in building our willpower which is the very basis of success.\",\r\n+\r\n+//       route: \"/childpage\",\r\n+//     },\r\n+//     {\r\n+//       utterance: \"go back\",\r\n+//       response: \"\",\r\n+//       action: goBack, // Note the use of an action property\r\n+//     },\r\n+//     {\r\n+//       utterance: \"go forward\",\r\n+//       response: \"\",\r\n+//       action: goForward,\r\n+//     },\r\n+//     {\r\n+//       utterance: \"play video\",\r\n+//       // response: \"Playing video.\",\r\n+//       action: playVideo,\r\n+//     },\r\n+//     {\r\n+//       utterance: \"pause video\",\r\n+//       // response: \"Pausing video.\",\r\n+//       action: pauseVideo,\r\n+//     },\r\n+//     {\r\n+//       utterance: \"start video\",\r\n+//       // response: \"Playing video.\",\r\n+//       action: playVideo,\r\n+//     },\r\n+//     {\r\n+//       utterance: \"stop video\",\r\n+//       // response: \"Playing video.\",\r\n+//       action: pauseVideo,\r\n+//     },\r\n+//     {\r\n+//       utterance: \"scroll up\",\r\n+//       // response: \"Scrolling up.\",\r\n+//       action: scrollUp,\r\n+//     },\r\n+//     {\r\n+//       utterance: \"scroll down\",\r\n+//       // response: \"Scrolling down.\",\r\n+//       action: scrollDown,\r\n+//     },\r\n+//     {\r\n+//       utterance: \"go up\",\r\n+\r\n+//       // response: \"Scrolling up.\",\r\n+//       action: scrollUp,\r\n+//     },\r\n+//     {\r\n+//       utterance: \"go down\",\r\n+//       // response: \"Scrolling down.\",\r\n+//       action: scrollDown,\r\n+//     },\r\n+//     {\r\n+//       utterance: \"scroll to top\",\r\n+//       action: scrollToTop,\r\n+//     },\r\n+//     {\r\n+//       utterance: \"scroll to bottom\",\r\n+//       action: scrollToBottom,\r\n+//     },\r\n+//     {\r\n+//       utterance: \"brane stop\",\r\n+//       action: stopListening,\r\n+//     },\r\n+//     {\r\n+//       utterance: \"brane turn off\",\r\n+//       action: stopListening,\r\n+//     },\r\n+//     {\r\n+//       utterance: \"brane stop the bot\",\r\n+//       action: stopListening,\r\n+//     },\r\n+//   ];\r\n+\r\n+//   return (\r\n+//     <div className=\"speech-bot-container\">\r\n+//       <div\r\n+//         className={`button-container ${\r\n+//           isListening ? \"voicebotframeactive\" : \"voicebotframe\"\r\n+//         }`}\r\n+//       >\r\n+//         <button onClick={isListening ? stopListening : startListening}>\r\n+//           {isListening ? \"Stop\" : \"Start\"} Animation\r\n+//         </button>\r\n+//         {/* <button onClick={toggleBotActive}>\r\n+//         {isBotActive ? 'Deactivate Bot' : 'Activate Bot'}\r\n+//       </button> \r\n+//       </div>\r\n+//     </div>\r\n+//   );\r\n+// };\r\n+\r\n+// export default VoiceBot; */\r\n+}\r\n+\r\n+//iska v1\r\n+\r\n+// import React, { useState, useEffect, useRef } from \"react\";\r\n+// import { useNavigate, useLocation } from \"react-router-dom\";\r\n+// import Fuse from \"fuse.js\";\r\n+// import \"./VoiceBot.css\";\r\n+\r\n+// const VoiceBot = ({ videoRef}) => {\r\n+//   const [isListening, setIsListening] = useState(false);\r\n+//   const [isSpeaking, setIsSpeaking] = useState(false);\r\n+//   const recognition = useRef(null);\r\n+//   const speechSynthesis = useRef(window.speechSynthesis);\r\n+//   const [hasGreeted, setHasGreeted] = useState(false);\r\n+//   const navigate = useNavigate();\r\n+\r\n+//  // Initialize speech recognition\r\n+//  useEffect(() => {\r\n+//   recognition.current = new window.webkitSpeechRecognition();\r\n+//   recognition.current.continuous = true;\r\n+//   recognition.current.interimResults = false;\r\n+//   recognition.current.onresult = onResult;\r\n+//   recognition.current.onend = onRecognitionEnd;\r\n+//   recognition.current.starting = false;\r\n+\r\n+//   recognition.current.onerror = (event) => {\r\n+//     console.error(\"Recognition error:\", event.error);\r\n+//     if (isListening && !isSpeaking) {\r\n+//       restartRecognition();\r\n+//     }\r\n+//   };\r\n+\r\n+//   return () => {\r\n+//     if (recognition.current) {\r\n+//       recognition.current.abort();\r\n+//     }\r\n+//   };\r\n+// }, []);\r\n+\r\n+//   // useEffect(() => {\r\n+//   //   const checkRecognition = () => {\r\n+//   //     if (isListening && !isSpeaking && !recognition.current.starting) {\r\n+//   //       console.log(\"Restarting recognition because it's not active.\");\r\n+//   //       recognition.current.starting = true;\r\n+//   //       recognition.current.start();\r\n+//   //       console.log(\"Restarted recognition.\");\r\n+//   //     }\r\n+//   //   };\r\n+\r\n+//   //   const recognitionCheckInterval = setInterval(checkRecognition, 100); // Check every .5 second\r\n+\r\n+//   //   return () => {\r\n+//   //     clearInterval(recognitionCheckInterval);\r\n+//   //   };\r\n+//   // }, [isListening, isSpeaking]);\r\n+\r\n+//   const historyStack = useRef([]);\r\n+\r\n+//   useEffect(() => {\r\n+//     return () => {\r\n+//       // Clean up the listener when the component unmounts\r\n+//       window.removeEventListener(\"popstate\", handlePopState);\r\n+//     };\r\n+//   }, []);\r\n+\r\n+//   const handlePopState = () => {\r\n+//     // This needs to handle both back and forward browser actions\r\n+//     // Use some logic to determine whether it's a back or forward action\r\n+//     // For simplicity, assume it's always back\r\n+//     historyStack.current.pop();\r\n+//     forwardStack.current.length = 0; // Clear forward stack on manual navigation\r\n+//   };\r\n+\r\n+//   // Add a new entry to the stack whenever navigate is called\r\n+//   const customNavigate = (to, options) => {\r\n+//     historyStack.current.push(to);\r\n+//     navigate(to, options);\r\n+//   };\r\n+\r\n+//   // Listen to popstate events to update the history stack\r\n+//   useEffect(() => {\r\n+//     window.addEventListener(\"popstate\", handlePopState);\r\n+//   }, []);\r\n+\r\n+//   const forwardStack = useRef([]);\r\n+\r\n+//   const goBack = () => {\r\n+//     if (window.history.state && window.history.state.idx > 0) {\r\n+//       window.history.back();\r\n+//       speak(\"Going back\");\r\n+//     } else {\r\n+//       speak(\"Can't go back any further.\");\r\n+//     }\r\n+//   };\r\n+\r\n+//   const goForward = () => {\r\n+//     if (window.history.state && window.history.state.idx < window.history.length - 1) {\r\n+//       window.history.forward();\r\n+//       speak(\"Going forward\");\r\n+//     } else {\r\n+//       speak(\"No forward history available.\");\r\n+//     }\r\n+//   };\r\n+\r\n+//   const playVideo = () => {\r\n+//     if (videoRef.current) {\r\n+//       videoRef.current.play();\r\n+//       speak(\"Playing video.\");\r\n+//     } else {\r\n+//       speak(\"No video to play.\");\r\n+//     }\r\n+//   };\r\n+\r\n+//   const pauseVideo = () => {\r\n+//     if (videoRef.current) {\r\n+//       videoRef.current.pause();\r\n+//       speak(\"Video paused.\");\r\n+//     } else {\r\n+//       speak(\"No video to pause.\");\r\n+//     }\r\n+//   };\r\n+\r\n+//   const scrollAmount = window.innerHeight * 0.82;\r\n+\r\n+//   const scrollUp = () => {\r\n+//     if (window.pageYOffset === 0) {\r\n+//       speak(\"Already at the top of the page.\");\r\n+//     } else {\r\n+//       window.scrollBy(0, -scrollAmount);\r\n+//       speak(\"Scrolled up.\");\r\n+//     }\r\n+//   };\r\n+\r\n+//   const scrollDown = () => {\r\n+//     const maxScrollTop =\r\n+//       document.documentElement.scrollHeight - window.innerHeight;\r\n+//     if (window.pageYOffset >= maxScrollTop) {\r\n+//       speak(\"Already at the bottom of the page.\");\r\n+//     } else {\r\n+//       window.scrollBy(0, scrollAmount);\r\n+//       speak(\"Scrolled down.\");\r\n+//     }\r\n+//   };\r\n+\r\n+//   const scrollToTop = () => {\r\n+//     if (window.pageYOffset === 0) {\r\n+//       speak(\"Already at the top of the page.\");\r\n+//     } else {\r\n+//       window.scrollTo(0, 0);\r\n+//       speak(\"Scrolled to the top of the page.\");\r\n+//     }\r\n+//   };\r\n+\r\n+//   const scrollToBottom = () => {\r\n+//     const maxScrollTop =\r\n+//       document.documentElement.scrollHeight - window.innerHeight;\r\n+//     if (window.pageYOffset >= maxScrollTop) {\r\n+//       speak(\"Already at the bottom of the page.\");\r\n+//     } else {\r\n+//       window.scrollTo(0, document.body.scrollHeight);\r\n+//       speak(\"Scrolled to the bottom of the page.\");\r\n+//     }\r\n+//   };\r\n+\r\n+//   const speak = (message) => {\r\n+//     const utterance = new SpeechSynthesisUtterance(message);\r\n+//     utterance.onend = () => {\r\n+//       setIsSpeaking(false);\r\n+//       // Restart recognition after speaking has ended\r\n+//       if (isListening) {\r\n+//         restartRecognition();\r\n+//       }\r\n+//     };\r\n+\r\n+//     setIsSpeaking(true);\r\n+//     // Stop recognition when the bot starts speaking\r\n+//     if (recognition.current) {\r\n+//       recognition.current.abort();\r\n+//     }\r\n+//     speechSynthesis.current.speak(utterance);\r\n+//   };\r\n+\r\n+//   const restartRecognition = () => {\r\n+//     // Check if recognition is not already started and if the bot is set to listen\r\n+//     if (recognition.current && !recognition.current.starting && isListening && !isSpeaking) {\r\n+//       // Only start recognition if it's not already active\r\n+//       if (recognition.current.state !== 'active') {\r\n+//         recognition.current.abort(); // Ensure any ongoing recognition is stopped\r\n+//         recognition.current.starting = true;\r\n+//         recognition.current.start();\r\n+//       }\r\n+//     }\r\n+//   };\r\n+\r\n+//     // Restart recognition when bot finishes speaking and isListening is true\r\n+//     useEffect(() => {\r\n+//       if (!isSpeaking && isListening) {\r\n+//         restartRecognition();\r\n+//       }\r\n+//     }, [isSpeaking, isListening]);\r\n+\r\n+//   const onResult = (event) => {\r\n+//     const resultIndex = event.resultIndex;\r\n+//     const transcript = event.results[resultIndex][0].transcript\r\n+//       .trim()\r\n+//       .toLowerCase();\r\n+\r\n+//     if (event.results[resultIndex].isFinal) {\r\n+//       console.log(`Recognized text: ${transcript}`);\r\n+//       if (transcript.includes(\"brain\")) {\r\n+//         console.log(\"Wake word heard, processing command...\");\r\n+//         handleCommandWithFuse(transcript.replace(\"brain\", \"\"));\r\n+//       }\r\n+//     }\r\n+//   };\r\n+\r\n+//   const onRecognitionEnd = () => {\r\n+//     recognition.current.starting = false;\r\n+//     if (isListening && !isSpeaking) {\r\n+//       restartRecognition();\r\n+//     }\r\n+//   };\r\n+\r\n+//   useEffect(() => {\r\n+//     if (isListening && !hasGreeted) {\r\n+//       speak(\"Hello, I'm Brane. How can I help you today?\");\r\n+//       setHasGreeted(true);\r\n+//     }\r\n+//   }, [isListening, hasGreeted]);\r\n+\r\n+// // Updated startListening function\r\n+// const startListening = () => {\r\n+//   setIsListening(true);\r\n+//   if (recognition.current && !recognition.current.starting) {\r\n+//     recognition.current.start();\r\n+//   }\r\n+// };\r\n+\r\n+// // Updated stopListening function\r\n+// const stopListening = () => {\r\n+//   setIsListening(false);\r\n+//   setIsSpeaking(false); // Reset speaking state\r\n+//   setHasGreeted(false); // Reset greeting state if needed\r\n+//   if (recognition.current) {\r\n+//     recognition.current.abort(); // Stop any ongoing speech recognition\r\n+//   }\r\n+//   if (speechSynthesis.current.speaking) {\r\n+//     speechSynthesis.current.cancel(); // Stop any ongoing speech synthesis\r\n+//   }\r\n+// };\r\n+\r\n+//   const handleCommandWithFuse = (command) => {\r\n+//     const fuse = new Fuse(commands, { keys: [\"utterance\"], threshold: 0.4 });\r\n+//     const results = fuse.search(command);\r\n+//     const foundCommand = results.length ? results[0].item : null;\r\n+\r\n+//     if (foundCommand) {\r\n+//       console.log(\"Command found:\", foundCommand.utterance);\r\n+\r\n+//       if (foundCommand.action) {\r\n+//         foundCommand.action();\r\n+//       } else if (foundCommand.route) {\r\n+//         navigate(foundCommand.route);\r\n+//       }\r\n+\r\n+//       // Speak after performing the action or navigation\r\n+//       speak(foundCommand.response);\r\n+//     } else {\r\n+//       console.log(\"No command found.\");\r\n+//       speak(\"I'm not sure how to respond to that.\");\r\n+//     }\r\n+//   };\r\n+\r\n+//   const commands = [\r\n+//     {\r\n+//       utterance: \"Hello who are you ?\",\r\n+\r\n+//       response:\r\n+//         \"Hi! This is Brane! your Voice bot from Brane Education How can I Assist you Today ?\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"Hello\",\r\n+\r\n+//       response: \"Hi! How can I assist you today?\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"hello\",\r\n+\r\n+//       response: \"Hi! How can I assist you today?\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"Hi.\",\r\n+\r\n+//       response: \"Hello! How can I assist you today?\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"Hey there\",\r\n+\r\n+//       response: \"Hi! How can I assist you today?\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"Good morning Brane.\",\r\n+\r\n+//       response: \"Hey Hiii! Good morning  ! How can I help you?\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"Good afternoon Brane.\",\r\n+\r\n+//       response: \"Hey Hiii! Good after noon ! How can I help you?\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"Good evening Brane.\",\r\n+\r\n+//       response: \"Hey Hiii! Good evening ! How can I help you?\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"can you please take me to login page\",\r\n+\r\n+//       route: \"/login\",\r\n+\r\n+//       response: \"Here's the Login Page, Please Login\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"please take me to login page\",\r\n+\r\n+//       route: \"/login\",\r\n+\r\n+//       response: \"Here's the Login Page, Please Login\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"Go to login page\",\r\n+\r\n+//       route: \"/login\",\r\n+\r\n+//       response: \"Here's the Login Page, Please Login\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"open login page\",\r\n+\r\n+//       route: \"/login\",\r\n+\r\n+//       response: \"Here's the Login Page, Please Login\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"can you please take me to signup page\",\r\n+\r\n+//       route: \"/signup\",\r\n+\r\n+//       response: \"Here's the signup page. Please proceed With Registration.\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"take me to signup page\",\r\n+\r\n+//       route: \"/signup\",\r\n+\r\n+//       response: \"Here's the signup page. Please proceed With Registration.\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"Go to signup page\",\r\n+\r\n+//       route: \"/signup\",\r\n+\r\n+//       response: \"Here's the signup page. Please proceed With Registration.\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"open signup page\",\r\n+\r\n+//       route: \"/signup\",\r\n+\r\n+//       response: \"Here's the signup page. Please proceed With Registration.\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"Go to face id\",\r\n+\r\n+//       route: \"/login/faceid\",\r\n+\r\n+//       response: \"Here's Face ID Login. Please proceed.\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"Go to face id login\",\r\n+\r\n+//       route: \"/login/faceid\",\r\n+\r\n+//       response: \"Here's Face ID Login. Please proceed.\",\r\n+//     },\r\n+//     {\r\n+//       utterance: \"Go to face login\",\r\n+\r\n+//       route: \"/login/faceid\",\r\n+\r\n+//       response: \"Here's Face ID Login. Please proceed.\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"login with face id\",\r\n+\r\n+//       route: \"/login/faceid\",\r\n+\r\n+//       response: \"Here's Face ID Login. Please proceed.\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"login with face\",\r\n+\r\n+//       route: \"/login/faceid\",\r\n+\r\n+//       response: \"Here's Face ID Login. Please proceed.\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"i want to login with face\",\r\n+\r\n+//       route: \"/login/faceid\",\r\n+\r\n+//       response: \"Here's Face ID Login. Please proceed.\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"login with voice\",\r\n+\r\n+//       route: \"/login/voiceid\",\r\n+\r\n+//       response: \"Here's Voice Login. Please proceed.\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"i want to login with voice\",\r\n+\r\n+//       route: \"/login/voiceid\",\r\n+\r\n+//       response: \"Here's Voice Login. Please proceed.\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"go to voice login\",\r\n+\r\n+//       route: \"/login/voiceid\",\r\n+\r\n+//       response: \"Here's Voice Login. Please proceed.\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"login with voice\",\r\n+\r\n+//       route: \"/login/voiceid\",\r\n+\r\n+//       response: \"Here's Voice Login. Please proceed.\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"login with mobile\",\r\n+\r\n+//       route: \"/login/mobile\",\r\n+\r\n+//       response: \"Here's Mobile Login. Please proceed.\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"i want to login with mobile\",\r\n+\r\n+//       route: \"/login/mobile\",\r\n+\r\n+//       response: \"Here's Mobile Login. Please proceed.\",\r\n+//     },\r\n+//     {\r\n+//       utterance: \"go to mobile login\",\r\n+\r\n+//       route: \"/login/mobile\",\r\n+\r\n+//       response: \"Here's Mobile Login. Please proceed.\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"what are platform features\",\r\n+\r\n+//       response:\r\n+//         \"Dashboard, Dynamic time table, Learning Networks, Little Masters, Video Based Dictionary, General Search.\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"Features of platform\",\r\n+\r\n+//       response:\r\n+//         \"Dashboard, Dynamic time table, Learning Networks, Little Masters, Video Based Dictionary, General Search.\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"What does the platform offer\",\r\n+\r\n+//       response:\r\n+//         \"Dashboard, Dynamic time table, Learning Networks, Little Masters, Video Based Dictionary, General Search.\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"Say me the features of platform\",\r\n+\r\n+//       response:\r\n+//         \"Dashboard, Dynamic time table, Learning Networks, Little Masters, Video Based Dictionary, General Search.\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"Say me the services of platform\",\r\n+\r\n+//       response:\r\n+//         \"Dashboard, Dynamic time table, Learning Networks, Little Masters, Video Based Dictionary, General Search.\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"tell me the services offered by the platform\",\r\n+\r\n+//       response:\r\n+//         \"Dashboard, Dynamic time table, Learning Networks, Little Masters, Video Based Dictionary, General Search.\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"explain platform services\",\r\n+\r\n+//       response:\r\n+//         \"Dashboard, Dynamic time table, Learning Networks, Little Masters, Video Based Dictionary, General Search.\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"Give me the Parent voice of Julia Harris\",\r\n+\r\n+//       response:\r\n+//         \"Brane education has helped my son a lot in his studies. He improved a lot in his studies and is now able to score good marks in his exams\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"Play today's motivational video\",\r\n+\r\n+//       response: \"I am playing the video\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"Play today's video\",\r\n+\r\n+//       response: \"I am playing Motivational video\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"Leaders Voice\",\r\n+\r\n+//       response:\r\n+//         \"This Voice-interactive AI Platform is a game Changer. It revolutionizes education.\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"Curriculum Supported by Brane Education\",\r\n+\r\n+//       response:\r\n+//         \"we support multiple Boards let me say few Telangana State Board Andhra Pradesh Board Maharashtra Board Assam Board\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"Boards supported by the platform\",\r\n+\r\n+//       response:\r\n+//         \"we support multiple Boards let me say few Telangana State Board Andhra Pradesh Board Maharashtra Board Assam Board\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"Curriculum\",\r\n+\r\n+//       response:\r\n+//         \"we support multiple Boards let me say few Telangana State Board Andhra Pradesh Board Maharashtra Board Assam Board\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"Go to landing page\",\r\n+\r\n+//       response: \"Okay, I am taking you to the landing page.\",\r\n+\r\n+//       route: \"/childpage\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"take me to landing page\",\r\n+\r\n+//       response: \"Okay, I am taking you to the landing page.\",\r\n+\r\n+//       route: \"/childpage\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"move to landing page\",\r\n+\r\n+//       response: \"Okay, I am taking you to the landing page.\",\r\n+\r\n+//       route: \"/childpage\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"roll back to landing page\",\r\n+\r\n+//       response: \"Okay, I am taking you to the landing page.\",\r\n+\r\n+//       route: \"/childpage\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"move to landing page\",\r\n+\r\n+//       response: \"Okay, I am taking you to the landing page.\",\r\n+\r\n+//       route: \"/childpage\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"what is today's quote\",\r\n+\r\n+//       response:\r\n+//         \"Determination is the power that sees us through all our frustration and obstacles. It helps in building our willpower which is the very basis of success.\",\r\n+\r\n+//       route: \"/childpage\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"Today's Inspirational quote\",\r\n+\r\n+//       response:\r\n+//         \"Determination is the power that sees us through all our frustration and obstacles. It helps in building our willpower which is the very basis of success.\",\r\n+\r\n+//       route: \"/childpage\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"say me today's quote\",\r\n+\r\n+//       response:\r\n+//         \"Determination is the power that sees us through all our frustration and obstacles. It helps in building our willpower which is the very basis of success.\",\r\n+\r\n+//       route: \"/childpage\",\r\n+//     },\r\n+//     {\r\n+//       utterance: \"go back\",\r\n+//       response: \"\",\r\n+//       action: goBack, // Note the use of an action property\r\n+//     },\r\n+//     {\r\n+//       utterance: \"go forward\",\r\n+//       response: \"\",\r\n+//       action: goForward,\r\n+//     },\r\n+//     {\r\n+//       utterance: \"play video\",\r\n+//       // response: \"Playing video.\",\r\n+//       action: playVideo,\r\n+//     },\r\n+//     {\r\n+//       utterance: \"pause video\",\r\n+//       // response: \"Pausing video.\",\r\n+//       action: pauseVideo,\r\n+//     },\r\n+//     {\r\n+//       utterance: \"start video\",\r\n+//       // response: \"Playing video.\",\r\n+//       action: playVideo,\r\n+//     },\r\n+//     {\r\n+//       utterance: \"stop video\",\r\n+//       // response: \"Playing video.\",\r\n+//       action: pauseVideo,\r\n+//     },\r\n+//     {\r\n+//       utterance: \"scroll up\",\r\n+//       // response: \"Scrolling up.\",\r\n+//       action: scrollUp,\r\n+//     },\r\n+//     {\r\n+//       utterance: \"scroll down\",\r\n+//       // response: \"Scrolling down.\",\r\n+//       action: scrollDown,\r\n+//     },\r\n+//     {\r\n+//       utterance: \"go up\",\r\n+\r\n+//       // response: \"Scrolling up.\",\r\n+//       action: scrollUp,\r\n+//     },\r\n+//     {\r\n+//       utterance: \"go down\",\r\n+//       // response: \"Scrolling down.\",\r\n+//       action: scrollDown,\r\n+//     },\r\n+//     {\r\n+//       utterance: \"scroll to top\",\r\n+//       action: scrollToTop,\r\n+//     },\r\n+//     {\r\n+//       utterance: \"scroll to bottom\",\r\n+//       action: scrollToBottom,\r\n+//     },\r\n+//     {\r\n+//       utterance: \"brane stop\",\r\n+//       action: stopListening,\r\n+//     },\r\n+//     {\r\n+//       utterance: \"brane turn off\",\r\n+//       action: stopListening,\r\n+//     },\r\n+//     {\r\n+//       utterance: \"brane stop the bot\",\r\n+//       action: stopListening,\r\n+//     },\r\n+//   ];\r\n+\r\n+//   return (\r\n+//     <div className=\"speech-bot-container\">\r\n+//       <div\r\n+//         className={`button-container ${\r\n+//           isListening ? \"voicebotframeactive\" : \"voicebotframe\"\r\n+//         }`}\r\n+//       >\r\n+//         <button onClick={isListening ? stopListening : startListening}>\r\n+//           {isListening ? \"Stop\" : \"Start\"} Animation\r\n+//         </button>\r\n+//         {/* <button onClick={toggleBotActive}>\r\n+//         {isBotActive ? 'Deactivate Bot' : 'Activate Bot'}\r\n+//       </button> */}\r\n+//       </div>\r\n+//     </div>\r\n+//   );\r\n+// };\r\n+\r\n+// export default VoiceBot;\r\n+\r\n+//Bot Video added but some start issues\r\n+\r\n+// import React, { useState, useEffect, useRef } from \"react\";\r\n+// import { useNavigate, useLocation } from \"react-router-dom\";\r\n+// import Fuse from \"fuse.js\";\r\n+// import \"./VoiceBot.css\";\r\n+\r\n+// const VoiceBot = ({ videoRef }) => {\r\n+//   const [isListening, setIsListening] = useState(false);\r\n+//   const [isSpeaking, setIsSpeaking] = useState(false);\r\n+//   const recognition = useRef(null);\r\n+//   const speechSynthesis = useRef(window.speechSynthesis);\r\n+//   const hasGreeted = useRef(false);\r\n+//   const restartRecognitionTimeout = useRef(null);\r\n+//   const navigate = useNavigate();\r\n+//   const location = useLocation();\r\n+//   const [isRecognitionActive, setIsRecognitionActive] = useState(false); // New state to track recognition status\r\n+\r\n+//   useEffect(() => {\r\n+//     recognition.current = new window.webkitSpeechRecognition();\r\n+//     recognition.current.continuous = true;\r\n+//     recognition.current.interimResults = false;\r\n+//     recognition.current.onresult = onResult;\r\n+//     recognition.current.onend = () => {\r\n+//       console.log(\"Recognition ended.\");\r\n+//       if (isListening) {\r\n+//         startListening();\r\n+//       }\r\n+//     };\r\n+//     recognition.current.onerror = (event) => {\r\n+//       console.error(\"Recognition error:\", event.error);\r\n+//     };\r\n+\r\n+//     return () => {\r\n+//       recognition.current.abort();\r\n+//     };\r\n+//   }, []);\r\n+\r\n+//   // Update useEffect for managing the recognition state based on isListening and isRecognitionActive\r\n+//   useEffect(() => {\r\n+//     if (isListening && !isRecognitionActive) {\r\n+//       startListening();\r\n+//     } else if (!isListening && isRecognitionActive) {\r\n+//       stopListening();\r\n+//     }\r\n+//   }, [isListening, isRecognitionActive]);\r\n+\r\n+//   const goBack = () => {\r\n+//     if (window.history.length > 1) {\r\n+//       navigate(-1);\r\n+//     } else {\r\n+//       speak(\"Can't go back any further.\");\r\n+//     }\r\n+//   };\r\n+\r\n+//   const goForward = () => {\r\n+//     // Unfortunately, there's no direct way to check if you can go forward in the history.\r\n+//     // You might need to manage this state manually based on user navigation.\r\n+//     navigate(1);\r\n+//   };\r\n+\r\n+//   const playVideo = () => {\r\n+//     if (videoRef.current && !videoRef.current.paused) {\r\n+//       speak(\"Video is already playing.\");\r\n+//     } else if (videoRef.current) {\r\n+//       videoRef.current.play();\r\n+//       speak(\"Playing video.\");\r\n+//     } else {\r\n+//       speak(\"No video to play.\");\r\n+//     }\r\n+//   };\r\n+\r\n+//   const pauseVideo = () => {\r\n+//     if (videoRef.current && videoRef.current.paused) {\r\n+//       speak(\"Video is already paused.\");\r\n+//     } else if (videoRef.current) {\r\n+//       videoRef.current.pause();\r\n+//       speak(\"Video paused.\");\r\n+//     } else {\r\n+//       speak(\"No video to pause.\");\r\n+//     }\r\n+//   };\r\n+\r\n+//   const scrollAmount = window.innerHeight * 0.82;\r\n+\r\n+//   const scrollUp = () => {\r\n+//     if (window.pageYOffset === 0) {\r\n+//       speak(\"Already at the top of the page.\");\r\n+//     } else {\r\n+//       window.scrollBy(0, -scrollAmount);\r\n+//       speak(\"Scrolled up.\");\r\n+//     }\r\n+//   };\r\n+\r\n+//   const scrollDown = () => {\r\n+//     const maxScrollTop =\r\n+//       document.documentElement.scrollHeight - window.innerHeight;\r\n+//     if (window.pageYOffset >= maxScrollTop) {\r\n+//       speak(\"Already at the bottom of the page.\");\r\n+//     } else {\r\n+//       window.scrollBy(0, scrollAmount);\r\n+//       speak(\"Scrolled down.\");\r\n+//     }\r\n+//   };\r\n+\r\n+//   const scrollToTop = () => {\r\n+//     if (window.pageYOffset === 0) {\r\n+//       speak(\"Already at the top of the page.\");\r\n+//     } else {\r\n+//       window.scrollTo(0, 0);\r\n+//       speak(\"Scrolled to the top of the page.\");\r\n+//     }\r\n+//   };\r\n+\r\n+//   const scrollToBottom = () => {\r\n+//     const maxScrollTop =\r\n+//       document.documentElement.scrollHeight - window.innerHeight;\r\n+//     if (window.pageYOffset >= maxScrollTop) {\r\n+//       speak(\"Already at the bottom of the page.\");\r\n+//     } else {\r\n+//       window.scrollTo(0, document.body.scrollHeight);\r\n+//       speak(\"Scrolled to the bottom of the page.\");\r\n+//     }\r\n+//   };\r\n+\r\n+//   // const speak = (message) => {\r\n+//   //   const utterance = new SpeechSynthesisUtterance(message);\r\n+//   //   utterance.onend = () => {\r\n+//   //     setIsSpeaking(false);\r\n+//   //     console.log(\"Speaking ended.\");\r\n+//   //     // Only restart recognition if we're still supposed to be listening\r\n+//   //     // if (isListening) {\r\n+//   //     //   if (restartRecognitionTimeout.current) {\r\n+//   //     //     clearTimeout(restartRecognitionTimeout.current);\r\n+//   //     //   }\r\n+//   //     //   restartRecognitionTimeout.current = setTimeout(() => {\r\n+//   //     //     console.log(\"Recognition restarted.\");\r\n+//   //     //     recognition.current.start();\r\n+//   //     //   }, 100); // Delay to prevent immediate restart\r\n+//   //     // }\r\n+//   //     if (isListening && !recognition.current.starting) { // Check the flag before restarting\r\n+//   //       recognition.current.starting = true; // Set the flag when starting recognition\r\n+//   //       recognition.current.start();\r\n+//   //     }\r\n+//   //   };\r\n+\r\n+//   //   setIsSpeaking(true);\r\n+//   //   console.log(\"Speaking started.\");\r\n+//   //   recognition.current.stop(); // Stop recognition when the bot starts speaking\r\n+//   //   speechSynthesis.current.speak(utterance);\r\n+//   // };\r\n+\r\n+//   const speak = (message) => {\r\n+//     console.log(\"speak function called with message:\", message);\r\n+//     const utterance = new SpeechSynthesisUtterance(message);\r\n+//     utterance.onend = () => {\r\n+//       setIsSpeaking(false);\r\n+//       console.log(\"Speaking ended.\");\r\n+//       // Directly handle the restart of recognition here if needed\r\n+//       if (isListening) {\r\n+//         startListening();\r\n+//       }\r\n+//     };\r\n+\r\n+//     setIsSpeaking(true);\r\n+//     console.log(\"Speaking started.\");\r\n+//     recognition.current.stop(); // Ensure to stop recognition before speaking\r\n+//     speechSynthesis.current.speak(utterance);\r\n+//   };\r\n+\r\n+//   const onResult = (event) => {\r\n+//     const resultIndex = event.resultIndex;\r\n+//     const transcript = event.results[resultIndex][0].transcript\r\n+//       .trim()\r\n+//       .toLowerCase();\r\n+\r\n+//     if (event.results[resultIndex].isFinal) {\r\n+//       console.log(`Recognized text: ${transcript}`);\r\n+//       if (transcript.includes(\"brain\")) {\r\n+//         console.log(\"Wake word heard, processing command...\");\r\n+//         handleCommandWithFuse(transcript.replace(\"brain\", \"\"));\r\n+//       }\r\n+//     }\r\n+//   };\r\n+\r\n+//   // const onRecognitionEnd = () => {\r\n+//   //   console.log(\"Recognition ended.\");\r\n+//   //   setIsRecognitionActive(false); // Update state when recognition ends\r\n+//   //   recognition.current.starting = false; // Reset the flag when recognition ends\r\n+//   //   // We now check if the recognition is already running before starting it again\r\n+//   //   if (isListening && !isSpeaking && !recognition.current?.starting) {\r\n+//   //     console.log(\"Restarting recognition.\");\r\n+//   //     recognition.current.start();\r\n+//   //   }\r\n+//   // };\r\n+\r\n+//   // useEffect(() => {\r\n+//   //   if (isListening && !hasGreeted.current) {\r\n+//   //     speak(\"Hello, I'm Brane. How can I assist you today?\");\r\n+//   //     hasGreeted.current = true;\r\n+//   //   } else if (isListening && !isSpeaking) {\r\n+//   //     recognition.current.start();\r\n+//   //   }\r\n+//   // }, [isListening, isSpeaking]);\r\n+\r\n+//   useEffect(() => {\r\n+//     if (isListening && !hasGreeted.current) {\r\n+//       speak(\"Hello, I'm Brane. How can I assist you today?\");\r\n+//       hasGreeted.current = true;\r\n+//     } else if (isListening && !isSpeaking && !recognition.current.starting) {\r\n+//       // Check the flag before starting\r\n+//       recognition.current.starting = true; // Set the flag when starting recognition\r\n+//       recognition.current.start();\r\n+//     }\r\n+//   }, [isListening, isSpeaking]);\r\n+\r\n+//   // const startListening = () => {\r\n+//   //   console.log(\"Attempting to start listening.\");\r\n+//   //   if (recognition.current && !recognition.current.starting) {\r\n+//   //     setIsListening(true);\r\n+//   //     recognition.current.starting = true; // Set the flag when starting recognition\r\n+//   //     recognition.current.start();\r\n+//   //     console.log(\"Listening started.\");\r\n+//   //   }\r\n+//   // };\r\n+\r\n+//   // const stopListening = () => {\r\n+//   //   console.log(\"Stopping listening.\");\r\n+\r\n+//   //   setIsListening(false);\r\n+//   //   recognition.current.stop();\r\n+//   //   if (speechSynthesis.current.speaking) {\r\n+//   //     speechSynthesis.current.cancel();\r\n+//   //   }\r\n+//   //   if (restartRecognitionTimeout.current) {\r\n+//   //     clearTimeout(restartRecognitionTimeout.current);\r\n+//   //   }\r\n+//   //   console.log(\"Listening stopped.\");\r\n+//   // };\r\n+//   // Handle start and stop listening logic\r\n+//   const startListening = () => {\r\n+//     console.log(\"Attempting to start listening.\");\r\n+//     if (!recognition.current.starting) {\r\n+//       setIsListening(true);\r\n+//       recognition.current.starting = true;\r\n+//       recognition.current.start();\r\n+//       console.log(\"Listening started.\");\r\n+//     } else {\r\n+//       console.log(\"Recognition already active.\");\r\n+//     }\r\n+//   };\r\n+\r\n+//   const stopListening = () => {\r\n+//     console.log(\"Stopping listening.\");\r\n+//     if (recognition.current.starting) {\r\n+//       setIsListening(false);\r\n+//       recognition.current.starting = false;\r\n+//       recognition.current.stop();\r\n+//       console.log(\"Listening stopped.\");\r\n+//     } else {\r\n+//       console.log(\"Recognition already inactive.\");\r\n+//     }\r\n+//   };\r\n+\r\n+//   // const handleCommandWithFuse = (command) => {\r\n+//   //   const fuse = new Fuse(commands, { keys: [\"utterance\"], threshold: 0.4 });\r\n+//   //   const results = fuse.search(command);\r\n+//   //   const foundCommand = results.length ? results[0].item : null;\r\n+\r\n+//   //   if (foundCommand) {\r\n+//   //     console.log(\"Command found:\", foundCommand.utterance);\r\n+//   //     speak(foundCommand.response);\r\n+//   //     if (foundCommand.route) {\r\n+//   //       navigate(foundCommand.route); // Navigate to the route specified in the command\r\n+//   //     }\r\n+//   //   } else {\r\n+//   //     console.log(\"No command found.\");\r\n+//   //     speak(\"I'm not sure how to respond to that.\");\r\n+//   //   }\r\n+//   // };\r\n+\r\n+//   const handleCommandWithFuse = (command) => {\r\n+//     const fuse = new Fuse(commands, { keys: [\"utterance\"], threshold: 0.4 });\r\n+//     const results = fuse.search(command);\r\n+//     const foundCommand = results.length ? results[0].item : null;\r\n+\r\n+//     if (foundCommand) {\r\n+//       console.log(\"Command found:\", foundCommand.utterance);\r\n+\r\n+//       if (foundCommand.route) {\r\n+//         if (location.pathname !== foundCommand.route) {\r\n+//           navigate(foundCommand.route);\r\n+//           speak(\r\n+//             `Navigating to ${\r\n+//               foundCommand.routeDescription || \"requested page\"\r\n+//             }.`\r\n+//           );\r\n+//         } else {\r\n+//           speak(\r\n+//             `You are already on the ${\r\n+//               foundCommand.routeDescription || \"requested page\"\r\n+//             }.`\r\n+//           );\r\n+//         }\r\n+//       } else if (foundCommand.action) {\r\n+//         foundCommand.action();\r\n+//       }\r\n+\r\n+//       if (foundCommand.response) {\r\n+//         speak(foundCommand.response);\r\n+//       }\r\n+//     } else {\r\n+//       console.log(\"No command found.\");\r\n+//       speak(\"I'm not sure how to respond to that.\");\r\n+//     }\r\n+//   };\r\n+\r\n+//   const commands = [\r\n+//     {\r\n+//       utterance: \"Hello who are you ?\",\r\n+\r\n+//       response:\r\n+//         \"Hi! This is Brane! your Voice bot from Brane Education How can I Assist you Today ?\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"Hello\",\r\n+\r\n+//       response: \"Hi! How can I assist you today?\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"hello\",\r\n+\r\n+//       response: \"Hi! How can I assist you today?\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"Hi.\",\r\n+\r\n+//       response: \"Hello! How can I assist you today?\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"Hey there\",\r\n+\r\n+//       response: \"Hi! How can I assist you today?\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"Good morning Brane.\",\r\n+\r\n+//       response: \"Hey Hiii! Good morning  ! How can I help you?\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"Good afternoon Brane.\",\r\n+\r\n+//       response: \"Hey Hiii! Good after noon ! How can I help you?\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"Good evening Brane.\",\r\n+\r\n+//       response: \"Hey Hiii! Good evening ! How can I help you?\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"can you please take me to login page\",\r\n+//       route: \"/login\",\r\n+//       routeDescription: \"login page\",\r\n+//       response: \"Navigating to the login page.\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"go to login page\",\r\n+//       route: \"/login\",\r\n+//       routeDescription: \"login page\",\r\n+//       response: \"Navigating to the login page.\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"please take me to login page\",\r\n+//       route: \"/login\",\r\n+//       routeDescription: \"login page\",\r\n+//       response: \"Navigating to the login page.\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"Go to login page\",\r\n+//       route: \"/login\",\r\n+//       routeDescription: \"login page\",\r\n+//       response: \"Navigating to the login page.\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"open login page\",\r\n+//       route: \"/login\",\r\n+//       routeDescription: \"login page\",\r\n+//       response: \"Navigating to the login page.\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"can you please take me to signup page\",\r\n+//       route: \"/signup\",\r\n+//       routeDescription: \"signup page\",\r\n+//       response: \"Navigating to the signup page.\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"take me to signup page\",\r\n+//       route: \"/signup\",\r\n+//       routeDescription: \"signup page\",\r\n+//       response: \"Navigating to the signup page.\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"Go to signup page\",\r\n+//       route: \"/signup\",\r\n+//       routeDescription: \"signup page\",\r\n+//       response: \"Navigating to the signup page.\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"open signup page\",\r\n+//       route: \"/signup\",\r\n+//       routeDescription: \"signup page\",\r\n+//       response: \"Navigating to the signup page.\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"what are platform features\",\r\n+\r\n+//       response:\r\n+//         \"Dashboard, Dynamic time table, Learning Networks, Little Masters, Video Based Dictionary, General Search.\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"Features of platform\",\r\n+\r\n+//       response:\r\n+//         \"Dashboard, Dynamic time table, Learning Networks, Little Masters, Video Based Dictionary, General Search.\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"What does the platform offer\",\r\n+\r\n+//       response:\r\n+//         \"Dashboard, Dynamic time table, Learning Networks, Little Masters, Video Based Dictionary, General Search.\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"Say me the features of platform\",\r\n+\r\n+//       response:\r\n+//         \"Dashboard, Dynamic time table, Learning Networks, Little Masters, Video Based Dictionary, General Search.\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"Say me the services of platform\",\r\n+\r\n+//       response:\r\n+//         \"Dashboard, Dynamic time table, Learning Networks, Little Masters, Video Based Dictionary, General Search.\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"tell me the services offered by the platform\",\r\n+\r\n+//       response:\r\n+//         \"Dashboard, Dynamic time table, Learning Networks, Little Masters, Video Based Dictionary, General Search.\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"explain platform services\",\r\n+\r\n+//       response:\r\n+//         \"Dashboard, Dynamic time table, Learning Networks, Little Masters, Video Based Dictionary, General Search.\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"Give me the Parent voice of Julia Harris\",\r\n+\r\n+//       response:\r\n+//         \"Brane education has helped my son a lot in his studies. He improved a lot in his studies and is now able to score good marks in his exams\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"Play today's motivational video\",\r\n+\r\n+//       response: \"I am playing the video\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"Play today's video\",\r\n+\r\n+//       response: \"I am playing Motivational video\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"Leaders Voice\",\r\n+\r\n+//       response:\r\n+//         \"This Voice-interactive AI Platform is a game Changer. It revolutionizes education.\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"Curriculum Supported by Brane Education\",\r\n+\r\n+//       response:\r\n+//         \"we support multiple Boards let me say few Telangana State Board Andhra Pradesh Board Maharashtra Board Assam Board\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"Boards supported by the platform\",\r\n+\r\n+//       response:\r\n+//         \"we support multiple Boards let me say few Telangana State Board Andhra Pradesh Board Maharashtra Board Assam Board\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"Curriculum\",\r\n+\r\n+//       response:\r\n+//         \"we support multiple Boards let me say few Telangana State Board Andhra Pradesh Board Maharashtra Board Assam Board\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"Go to landing page\",\r\n+\r\n+//       response: \"Okay, I am taking you to the landing page.\",\r\n+\r\n+//       route: \"/childpage\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"take me to landing page\",\r\n+\r\n+//       response: \"Okay, I am taking you to the landing page.\",\r\n+\r\n+//       route: \"/childpage\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"move to landing page\",\r\n+\r\n+//       response: \"Okay, I am taking you to the landing page.\",\r\n+\r\n+//       route: \"/childpage\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"roll back to landing page\",\r\n+\r\n+//       response: \"Okay, I am taking you to the landing page.\",\r\n+\r\n+//       route: \"/childpage\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"move to landing page\",\r\n+\r\n+//       response: \"Okay, I am taking you to the landing page.\",\r\n+\r\n+//       route: \"/childpage\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"what is today's quote\",\r\n+\r\n+//       response:\r\n+//         \"Determination is the power that sees us through all our frustration and obstacles. It helps in building our willpower which is the very basis of success.\",\r\n+\r\n+//       // route: \"/childpage\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"Today's Inspirational quote\",\r\n+\r\n+//       response:\r\n+//         \"Determination is the power that sees us through all our frustration and obstacles. It helps in building our willpower which is the very basis of success.\",\r\n+\r\n+//       // route: \"/childpage\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"say me today's quote\",\r\n+\r\n+//       response:\r\n+//         \"Determination is the power that sees us through all our frustration and obstacles. It helps in building our willpower which is the very basis of success.\",\r\n+\r\n+//       // route: \"/childpage\",\r\n+//     },\r\n+//     {\r\n+//       utterance: \"go back\",\r\n+//       response: \"Going back.\",\r\n+//       action: goBack, // Note the use of an action property\r\n+//     },\r\n+//     {\r\n+//       utterance: \"go forward\",\r\n+//       response: \"Going forward.\",\r\n+//       action: goForward,\r\n+//     },\r\n+//     {\r\n+//       utterance: \"play video\",\r\n+//       // response: \"Playing video.\",\r\n+//       action: playVideo,\r\n+//     },\r\n+//     {\r\n+//       utterance: \"pause video\",\r\n+//       // response: \"Pausing video.\",\r\n+//       action: pauseVideo,\r\n+//     },\r\n+//     {\r\n+//       utterance: \"start video\",\r\n+//       // response: \"Playing video.\",\r\n+//       action: playVideo,\r\n+//     },\r\n+//     {\r\n+//       utterance: \"stop video\",\r\n+//       // response: \"Playing video.\",\r\n+//       action: pauseVideo,\r\n+//     },\r\n+//     {\r\n+//       utterance: \"scroll up\",\r\n+//       // response: \"Scrolling up.\",\r\n+//       action: scrollUp,\r\n+//     },\r\n+//     {\r\n+//       utterance: \"scroll down\",\r\n+//       // response: \"Scrolling down.\",\r\n+//       action: scrollDown,\r\n+//     },\r\n+//     {\r\n+//       utterance: \"go up\",\r\n+\r\n+//       // response: \"Scrolling up.\",\r\n+//       action: scrollUp,\r\n+//     },\r\n+//     {\r\n+//       utterance: \"go down\",\r\n+//       // response: \"Scrolling down.\",\r\n+//       action: scrollDown,\r\n+//     },\r\n+//     {\r\n+//       utterance: \"scroll to top\",\r\n+//       action: scrollToTop,\r\n+//     },\r\n+//     {\r\n+//       utterance: \"scroll to bottom\",\r\n+//       action: scrollToBottom,\r\n+//     },\r\n+//   ];\r\n+//   return (\r\n+//     <div className=\"speech-bot-container\">\r\n+//       <div\r\n+//         className={`button-container ${\r\n+//           isListening ? \"voicebotframeactive\" : \"voicebotframe\"\r\n+//         }`}\r\n+//       >\r\n+//         <div onClick={isListening ? stopListening : startListening}>\r\n+//           <iframe\r\n+//             src={\r\n+//               isListening\r\n+//                 ? \"https://lottie.host/?file=a89aca3f-5407-4052-82c3-2048afca7a9f/NpCdWzLSKD.json\"\r\n+//                 : \"https://lottie.host/?file=d2b6cc0e-fe95-4847-85b5-35365fca7e00/vTudpCuPZq.json\"\r\n+//             }\r\n+//             width=\"120\" // Set your desired width\r\n+//             height=\"120\" // Set your desired height\r\n+//             title={isListening ? \"Stop Animation\" : \"Start Animation\"}\r\n+//             className={isListening ? \"voicebotframeactive\" : \"voicebotframe\"}\r\n+//           ></iframe>\r\n+//           {isListening ? (\r\n+//             <div className=\"overlay\" onClick={stopListening}></div>\r\n+//           ) : (\r\n+//             <div className=\"overlay\" onClick={startListening}></div>\r\n+//           )}\r\n+//         </div>\r\n+//       </div>\r\n+//     </div>\r\n+//   );\r\n+// };\r\n+\r\n+// export default VoiceBot;\r\n+\r\n+// All functionalities but messed up\r\n+\r\n+// import React, { useState, useEffect, useRef } from \"react\";\r\n+// import { useNavigate, useLocation } from \"react-router-dom\";\r\n+// import Fuse from \"fuse.js\";\r\n+// import \"./VoiceBot.css\";\r\n+\r\n+// const VoiceBot = ({ videoRef, takeTestRef, goBackRef }) => {\r\n+//   const [isListening, setIsListening] = useState(false);\r\n+//   const [isSpeaking, setIsSpeaking] = useState(false);\r\n+//   const recognition = useRef(null);\r\n+//   const speechSynthesis = useRef(window.speechSynthesis);\r\n+//   const hasGreeted = useRef(false);\r\n+//   const navigate = useNavigate();\r\n+//   const location = useLocation();\r\n+//   const isRecognitionActive = useRef(false);\r\n+\r\n+//   useEffect(() => {\r\n+//     recognition.current = new window.webkitSpeechRecognition();\r\n+//     recognition.current.continuous = true;\r\n+//     recognition.current.interimResults = false;\r\n+//     recognition.current.onresult = onResult;\r\n+//     recognition.current.onend = onRecognitionEnd;\r\n+\r\n+//     return () => {\r\n+//       if (recognition.current) {\r\n+//         recognition.current.abort();\r\n+//       }\r\n+//     };\r\n+//   }, [location.pathname]);\r\n+\r\n+//   const onResult = (event) => {\r\n+//     const resultIndex = event.resultIndex;\r\n+//     const transcript = event.results[resultIndex][0].transcript\r\n+//       .trim()\r\n+//       .toLowerCase();\r\n+\r\n+//     if (event.results[resultIndex].isFinal) {\r\n+//       console.log(`Recognized text: ${transcript}`);\r\n+//       if (transcript.includes(\"brain\")) {\r\n+//         console.log(\"Wake word heard, processing command...\");\r\n+//         handleCommandWithFuse(transcript.replace(\"brain\", \"\"));\r\n+//       }\r\n+//     }\r\n+//   };\r\n+\r\n+//   const startListening = () => {\r\n+//     if (!isRecognitionActive.current) {\r\n+//       setIsListening(true);\r\n+//       recognition.current.start();\r\n+//       isRecognitionActive.current = true;\r\n+//     }\r\n+//   };\r\n+\r\n+//   const stopListening = () => {\r\n+//     if (isRecognitionActive.current) {\r\n+//       setIsListening(false);\r\n+//       recognition.current.stop();\r\n+//       isRecognitionActive.current = false;\r\n+//     }\r\n+//   };\r\n+\r\n+//   const onRecognitionEnd = () => {\r\n+//     isRecognitionActive.current = false;\r\n+//     if (isListening) {\r\n+//       startListening();\r\n+//     }\r\n+//   };\r\n+\r\n+//   const speak = (message) => {\r\n+//     const utterance = new SpeechSynthesisUtterance(message);\r\n+//     utterance.onend = () => {\r\n+//       setIsSpeaking(false);\r\n+//       if (isListening && !isRecognitionActive.current) {\r\n+//         startListening();\r\n+//       }\r\n+//     };\r\n+\r\n+//     setIsSpeaking(true);\r\n+//     if (isRecognitionActive.current) {\r\n+//       stopListening(); // Adjusted to use stopListening\r\n+//     }\r\n+//     speechSynthesis.current.speak(utterance);\r\n+//   };\r\n+\r\n+//   useEffect(() => {\r\n+//     if (isListening && !hasGreeted.current) {\r\n+//       speak(\"Hello, I'm Brane. How can I assist you today?\");\r\n+//       hasGreeted.current = true;\r\n+//     }\r\n+//   }, [isListening]);\r\n+\r\n+//   const goBack = () => {\r\n+//     if (window.history.length > 1) {\r\n+//       navigate(-1);\r\n+//     } else {\r\n+//       speak(\"Can't go back any further.\");\r\n+//     }\r\n+//   };\r\n+\r\n+//   const goForward = () => {\r\n+//     // Unfortunately, there's no direct way to check if you can go forward in the history.\r\n+//     // You might need to manage this state manually based on user navigation.\r\n+//     navigate(1);\r\n+//   };\r\n+\r\n+//   const playVideo = () => {\r\n+//     if (videoRef.current && !videoRef.current.paused) {\r\n+//       speak(\"Video is already playing.\");\r\n+//     } else if (videoRef.current) {\r\n+//       videoRef.current.play();\r\n+//       speak(\"Playing video.\");\r\n+//     } else {\r\n+//       speak(\"No video to play.\");\r\n+//     }\r\n+//   };\r\n+\r\n+//   const pauseVideo = () => {\r\n+//     if (videoRef.current && videoRef.current.paused) {\r\n+//       speak(\"Video is already paused.\");\r\n+//     } else if (videoRef.current) {\r\n+//       videoRef.current.pause();\r\n+//       speak(\"Video paused.\");\r\n+//     } else {\r\n+//       speak(\"No video to pause.\");\r\n+//     }\r\n+//   };\r\n+\r\n+//   const scrollAmount = window.innerHeight * 0.82;\r\n+\r\n+//   const scrollUp = () => {\r\n+//     if (window.pageYOffset === 0) {\r\n+//       speak(\"Already at the top of the page.\");\r\n+//     } else {\r\n+//       window.scrollBy(0, -scrollAmount);\r\n+//       speak(\"Scrolled up.\");\r\n+//     }\r\n+//   };\r\n+\r\n+//   const scrollDown = () => {\r\n+//     const maxScrollTop =\r\n+//       document.documentElement.scrollHeight - window.innerHeight;\r\n+//     if (window.pageYOffset >= maxScrollTop) {\r\n+//       speak(\"Already at the bottom of the page.\");\r\n+//     } else {\r\n+//       window.scrollBy(0, scrollAmount);\r\n+//       speak(\"Scrolled down.\");\r\n+//     }\r\n+//   };\r\n+\r\n+//   const scrollToTop = () => {\r\n+//     if (window.pageYOffset === 0) {\r\n+//       speak(\"Already at the top of the page.\");\r\n+//     } else {\r\n+//       window.scrollTo(0, 0);\r\n+//       speak(\"Scrolled to the top of the page.\");\r\n+//     }\r\n+//   };\r\n+\r\n+//   const scrollToBottom = () => {\r\n+//     const maxScrollTop =\r\n+//       document.documentElement.scrollHeight - window.innerHeight;\r\n+//     if (window.pageYOffset >= maxScrollTop) {\r\n+//       speak(\"Already at the bottom of the page.\");\r\n+//     } else {\r\n+//       window.scrollTo(0, document.body.scrollHeight);\r\n+//       speak(\"Scrolled to the bottom of the page.\");\r\n+//     }\r\n+//   };\r\n+\r\n+//   // const speak = (message) => {\r\n+//   //   const utterance = new SpeechSynthesisUtterance(message);\r\n+//   //   utterance.onend = () => {\r\n+//   //     setIsSpeaking(false);\r\n+//   //     console.log(\"Speaking ended.\");\r\n+//   //     // Only restart recognition if we're still supposed to be listening\r\n+//   //     // if (isListening) {\r\n+//   //     //   if (restartRecognitionTimeout.current) {\r\n+//   //     //     clearTimeout(restartRecognitionTimeout.current);\r\n+//   //     //   }\r\n+//   //     //   restartRecognitionTimeout.current = setTimeout(() => {\r\n+//   //     //     console.log(\"Recognition restarted.\");\r\n+//   //     //     recognition.current.start();\r\n+//   //     //   }, 100); // Delay to prevent immediate restart\r\n+//   //     // }\r\n+//   //     if (isListening && !recognition.current.starting) { // Check the flag before restarting\r\n+//   //       recognition.current.starting = true; // Set the flag when starting recognition\r\n+//   //       recognition.current.start();\r\n+//   //     }\r\n+//   //   };\r\n+\r\n+//   //   setIsSpeaking(true);\r\n+//   //   console.log(\"Speaking started.\");\r\n+//   //   recognition.current.stop(); // Stop recognition when the bot starts speaking\r\n+//   //   speechSynthesis.current.speak(utterance);\r\n+//   // };\r\n+\r\n+//   // const onRecognitionEnd = () => {\r\n+//   //   console.log(\"Recognition ended.\");\r\n+//   //   setIsRecognitionActive(false); // Update state when recognition ends\r\n+//   //   recognition.current.starting = false; // Reset the flag when recognition ends\r\n+//   //   // We now check if the recognition is already running before starting it again\r\n+//   //   if (isListening && !isSpeaking && !recognition.current?.starting) {\r\n+//   //     console.log(\"Restarting recognition.\");\r\n+//   //     recognition.current.start();\r\n+//   //   }\r\n+//   // };\r\n+\r\n+//   // useEffect(() => {\r\n+//   //   if (isListening && !hasGreeted.current) {\r\n+//   //     speak(\"Hello, I'm Brane. How can I assist you today?\");\r\n+//   //     hasGreeted.current = true;\r\n+//   //   } else if (isListening && !isSpeaking) {\r\n+//   //     recognition.current.start();\r\n+//   //   }\r\n+//   // }, [isListening, isSpeaking]);\r\n+\r\n+//   // const startListening = () => {\r\n+//   //   console.log(\"Attempting to start listening.\");\r\n+//   //   if (recognition.current && !recognition.current.starting) {\r\n+//   //     setIsListening(true);\r\n+//   //     recognition.current.starting = true; // Set the flag when starting recognition\r\n+//   //     recognition.current.start();\r\n+//   //     console.log(\"Listening started.\");\r\n+//   //   }\r\n+//   // };\r\n+\r\n+//   // const stopListening = () => {\r\n+//   //   console.log(\"Stopping listening.\");\r\n+\r\n+//   //   setIsListening(false);\r\n+//   //   recognition.current.stop();\r\n+//   //   if (speechSynthesis.current.speaking) {\r\n+//   //     speechSynthesis.current.cancel();\r\n+//   //   }\r\n+//   //   if (restartRecognitionTimeout.current) {\r\n+//   //     clearTimeout(restartRecognitionTimeout.current);\r\n+//   //   }\r\n+//   //   console.log(\"Listening stopped.\");\r\n+//   // };\r\n+//   // Handle start and stop listening logic\r\n+\r\n+//   useEffect(() => {\r\n+//     if (isListening && !hasGreeted.current) {\r\n+//       speak(\"Hello, I'm Brane. How can I assist you today?\");\r\n+//       hasGreeted.current = true;\r\n+//     }\r\n+//   }, [isListening]);\r\n+\r\n+//   // const handleCommandWithFuse = (command) => {\r\n+//   //   const fuse = new Fuse(commands, { keys: [\"utterance\"], threshold: 0.4 });\r\n+//   //   const results = fuse.search(command);\r\n+//   //   const foundCommand = results.length ? results[0].item : null;\r\n+\r\n+//   //   if (foundCommand) {\r\n+//   //     console.log(\"Command found:\", foundCommand.utterance);\r\n+//   //     speak(foundCommand.response);\r\n+//   //     if (foundCommand.route) {\r\n+//   //       navigate(foundCommand.route); // Navigate to the route specified in the command\r\n+//   //     }\r\n+//   //   } else {\r\n+//   //     console.log(\"No command found.\");\r\n+//   //     speak(\"I'm not sure how to respond to that.\");\r\n+//   //   }\r\n+//   // };\r\n+\r\n+//   const handleCommandWithFuse = (command) => {\r\n+//     const fuse = new Fuse(commands, { keys: [\"utterance\"], threshold: 0.4 });\r\n+//     const results = fuse.search(command);\r\n+//     const foundCommand = results.length ? results[0].item : null;\r\n+\r\n+//     if (foundCommand) {\r\n+//       console.log(\"Command found:\", foundCommand.utterance);\r\n+\r\n+//       if (foundCommand.action) {\r\n+//         foundCommand.action();\r\n+//       } else if (foundCommand.route) {\r\n+//         navigate(foundCommand.route);\r\n+//       }\r\n+\r\n+//       if (foundCommand.response) {\r\n+//         speak(foundCommand.response);\r\n+//       }\r\n+//     } else {\r\n+//       console.log(\"No command found.\");\r\n+//       speak(\"I'm not sure how to respond to that.\");\r\n+//     }\r\n+//   };\r\n+\r\n+//   const commands = [\r\n+//     {\r\n+//       utterance: \"Hello who are you ?\",\r\n+\r\n+//       response:\r\n+//         \"Hi! This is Brane! your Voice bot from Brane Education How can I Assist you Today ?\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"Hello\",\r\n+\r\n+//       response: \"Hi! How can I assist you today?\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"hello\",\r\n+\r\n+//       response: \"Hi! How can I assist you today?\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"Hi.\",\r\n+\r\n+//       response: \"Hello! How can I assist you today?\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"Hey there\",\r\n+\r\n+//       response: \"Hi! How can I assist you today?\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"Good morning Brane.\",\r\n+\r\n+//       response: \"Hey Hiii! Good morning  ! How can I help you?\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"Good afternoon Brane.\",\r\n+\r\n+//       response: \"Hey Hiii! Good after noon ! How can I help you?\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"Good evening Brane.\",\r\n+\r\n+//       response: \"Hey Hiii! Good evening ! How can I help you?\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"can you please take me to login page\",\r\n+//       route: \"/login\",\r\n+//       routeDescription: \"login page\",\r\n+//       response: \"Navigating to the login page.\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"go to login page\",\r\n+//       route: \"/login\",\r\n+//       routeDescription: \"login page\",\r\n+//       response: \"Navigating to the login page.\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"please take me to login page\",\r\n+//       route: \"/login\",\r\n+//       routeDescription: \"login page\",\r\n+//       response: \"Navigating to the login page.\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"Go to login page\",\r\n+//       route: \"/login\",\r\n+//       routeDescription: \"login page\",\r\n+//       response: \"Navigating to the login page.\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"open login page\",\r\n+//       route: \"/login\",\r\n+//       routeDescription: \"login page\",\r\n+//       response: \"Navigating to the login page.\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"can you please take me to signup page\",\r\n+//       route: \"/signup\",\r\n+//       routeDescription: \"signup page\",\r\n+//       response: \"Navigating to the signup page.\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"take me to signup page\",\r\n+//       route: \"/signup\",\r\n+//       routeDescription: \"signup page\",\r\n+//       response: \"Navigating to the signup page.\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"Go to signup page\",\r\n+//       route: \"/signup\",\r\n+//       routeDescription: \"signup page\",\r\n+//       response: \"Navigating to the signup page.\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"open signup page\",\r\n+//       route: \"/signup\",\r\n+//       routeDescription: \"signup page\",\r\n+//       response: \"Navigating to the signup page.\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"what are platform features\",\r\n+\r\n+//       response:\r\n+//         \"Dashboard, Dynamic time table, Learning Networks, Little Masters, Video Based Dictionary, General Search.\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"Features of platform\",\r\n+\r\n+//       response:\r\n+//         \"Dashboard, Dynamic time table, Learning Networks, Little Masters, Video Based Dictionary, General Search.\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"What does the platform offer\",\r\n+\r\n+//       response:\r\n+//         \"Dashboard, Dynamic time table, Learning Networks, Little Masters, Video Based Dictionary, General Search.\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"Say me the features of platform\",\r\n+\r\n+//       response:\r\n+//         \"Dashboard, Dynamic time table, Learning Networks, Little Masters, Video Based Dictionary, General Search.\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"Say me the services of platform\",\r\n+\r\n+//       response:\r\n+//         \"Dashboard, Dynamic time table, Learning Networks, Little Masters, Video Based Dictionary, General Search.\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"tell me the services offered by the platform\",\r\n+\r\n+//       response:\r\n+//         \"Dashboard, Dynamic time table, Learning Networks, Little Masters, Video Based Dictionary, General Search.\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"explain platform services\",\r\n+\r\n+//       response:\r\n+//         \"Dashboard, Dynamic time table, Learning Networks, Little Masters, Video Based Dictionary, General Search.\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"Give me the Parent voice of Julia Harris\",\r\n+\r\n+//       response:\r\n+//         \"Brane education has helped my son a lot in his studies. He improved a lot in his studies and is now able to score good marks in his exams\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"Play today's motivational video\",\r\n+\r\n+//       response: \"I am playing the video\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"Play today's video\",\r\n+\r\n+//       response: \"I am playing Motivational video\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"Leaders Voice\",\r\n+\r\n+//       response:\r\n+//         \"This Voice-interactive AI Platform is a game Changer. It revolutionizes education.\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"Curriculum Supported by Brane Education\",\r\n+\r\n+//       response:\r\n+//         \"we support multiple Boards let me say few Telangana State Board Andhra Pradesh Board Maharashtra Board Assam Board\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"Boards supported by the platform\",\r\n+\r\n+//       response:\r\n+//         \"we support multiple Boards let me say few Telangana State Board Andhra Pradesh Board Maharashtra Board Assam Board\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"Curriculum\",\r\n+\r\n+//       response:\r\n+//         \"we support multiple Boards let me say few Telangana State Board Andhra Pradesh Board Maharashtra Board Assam Board\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"Go to landing page\",\r\n+\r\n+//       response: \"Okay, I am taking you to the landing page.\",\r\n+\r\n+//       route: \"/childpage\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"take me to landing page\",\r\n+\r\n+//       response: \"Okay, I am taking you to the landing page.\",\r\n+\r\n+//       route: \"/childpage\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"move to landing page\",\r\n+\r\n+//       response: \"Okay, I am taking you to the landing page.\",\r\n+\r\n+//       route: \"/childpage\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"roll back to landing page\",\r\n+\r\n+//       response: \"Okay, I am taking you to the landing page.\",\r\n+\r\n+//       route: \"/childpage\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"move to landing page\",\r\n+\r\n+//       response: \"Okay, I am taking you to the landing page.\",\r\n+\r\n+//       route: \"/childpage\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"what is today's quote\",\r\n+\r\n+//       response:\r\n+//         \"Determination is the power that sees us through all our frustration and obstacles. It helps in building our willpower which is the very basis of success.\",\r\n+\r\n+//       // route: \"/childpage\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"Today's Inspirational quote\",\r\n+\r\n+//       response:\r\n+//         \"Determination is the power that sees us through all our frustration and obstacles. It helps in building our willpower which is the very basis of success.\",\r\n+\r\n+//       // route: \"/childpage\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"say me today's quote\",\r\n+\r\n+//       response:\r\n+//         \"Determination is the power that sees us through all our frustration and obstacles. It helps in building our willpower which is the very basis of success.\",\r\n+\r\n+//       // route: \"/childpage\",\r\n+//     },\r\n+//     {\r\n+//       utterance: \"go back\",\r\n+//       response: \"Going back.\",\r\n+//       action: goBack, // Note the use of an action property\r\n+//     },\r\n+//     {\r\n+//       utterance: \"go forward\",\r\n+//       response: \"Going forward.\",\r\n+//       action: goForward,\r\n+//     },\r\n+//     {\r\n+//       utterance: \"play video\",\r\n+//       // response: \"Playing video.\",\r\n+//       action: playVideo,\r\n+//     },\r\n+//     {\r\n+//       utterance: \"pause video\",\r\n+//       // response: \"Pausing video.\",\r\n+//       action: pauseVideo,\r\n+//     },\r\n+//     {\r\n+//       utterance: \"start video\",\r\n+//       // response: \"Playing video.\",\r\n+//       action: playVideo,\r\n+//     },\r\n+//     {\r\n+//       utterance: \"stop video\",\r\n+//       // response: \"Playing video.\",\r\n+//       action: pauseVideo,\r\n+//     },\r\n+//     {\r\n+//       utterance: \"scroll up\",\r\n+//       // response: \"Scrolling up.\",\r\n+//       action: scrollUp,\r\n+//     },\r\n+//     {\r\n+//       utterance: \"scroll down\",\r\n+//       // response: \"Scrolling down.\",\r\n+//       action: scrollDown,\r\n+//     },\r\n+//     {\r\n+//       utterance: \"go up\",\r\n+\r\n+//       // response: \"Scrolling up.\",\r\n+//       action: scrollUp,\r\n+//     },\r\n+//     {\r\n+//       utterance: \"go down\",\r\n+//       // response: \"Scrolling down.\",\r\n+//       action: scrollDown,\r\n+//     },\r\n+//     {\r\n+//       utterance: \"scroll to top\",\r\n+//       action: scrollToTop,\r\n+//     },\r\n+//     {\r\n+//       utterance: \"scroll to bottom\",\r\n+//       action: scrollToBottom,\r\n+//     },\r\n+//     {\r\n+//       utterance: \"go back\",\r\n+//       action: goBackRef?.current?.click, // Use goBackRef directly\r\n+//       response: \"Going back.\",\r\n+//     },\r\n+//     {\r\n+//       utterance: \"take test\",\r\n+//       action: takeTestRef?.current?.click, // Use takeTestRef directly\r\n+//       response: \"Starting the test.\",\r\n+//     },\r\n+//   ];\r\n+//   return (\r\n+//     <div className=\"speech-bot-container\">\r\n+//       <div\r\n+//         className={`button-container ${\r\n+//           isListening ? \"voicebotframeactive\" : \"voicebotframe\"\r\n+//         }`}\r\n+//       >\r\n+//         <div onClick={isListening ? stopListening : startListening}>\r\n+//           <iframe\r\n+//             src={\r\n+//               isListening\r\n+//                 ? \"https://lottie.host/?file=a89aca3f-5407-4052-82c3-2048afca7a9f/NpCdWzLSKD.json\"\r\n+//                 : \"https://lottie.host/?file=d2b6cc0e-fe95-4847-85b5-35365fca7e00/vTudpCuPZq.json\"\r\n+//             }\r\n+//             width=\"120\" // Set your desired width\r\n+//             height=\"120\" // Set your desired height\r\n+//             title={isListening ? \"Stop Animation\" : \"Start Animation\"}\r\n+//             className={isListening ? \"voicebotframeactive\" : \"voicebotframe\"}\r\n+//           ></iframe>\r\n+//           {isListening ? (\r\n+//             <div className=\"overlay\" onClick={stopListening}></div>\r\n+//           ) : (\r\n+//             <div className=\"overlay\" onClick={startListening}></div>\r\n+//           )}\r\n+//         </div>\r\n+//       </div>\r\n+//     </div>\r\n+//   );\r\n+// };\r\n+\r\n+// export default VoiceBot;\r\n"
                },
                {
                    "date": 1700655657843,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -3715,7440 +3715,4 @@\n //   );\r\n // };\r\n \r\n // export default VoiceBot;\r\n-import React, { useState, useEffect, useRef } from \"react\";\r\n-import { useNavigate, useLocation } from \"react-router-dom\";\r\n-import Fuse from \"fuse.js\";\r\n-import \"./VoiceBot.css\";\r\n-import chatbotimage from \"../../assets/chatbotgif.gif\";\r\n-\r\n-const VoiceBot = ({ videoRefs }) => {\r\n-  const [isListening, setIsListening] = useState(false);\r\n-  const [isSpeaking, setIsSpeaking] = useState(false);\r\n-  const recognition = useRef(null);\r\n-  const speechSynthesis = useRef(window.speechSynthesis);\r\n-  const [hasGreeted, setHasGreeted] = useState(false);\r\n-  const navigate = useNavigate();\r\n-\r\n-  // Initialize speech recognition\r\n-  useEffect(() => {\r\n-    recognition.current = new window.webkitSpeechRecognition();\r\n-    recognition.current.continuous = true;\r\n-    recognition.current.interimResults = false;\r\n-    recognition.current.onresult = onResult;\r\n-    recognition.current.onend = onRecognitionEnd;\r\n-    recognition.current.starting = false;\r\n-\r\n-    recognition.current.onerror = (event) => {\r\n-      console.error(\"Recognition error:\", event.error);\r\n-      if (isListening && !isSpeaking) {\r\n-        restartRecognition();\r\n-      }\r\n-    };\r\n-\r\n-    return () => {\r\n-      if (recognition.current) {\r\n-        recognition.current.abort();\r\n-      }\r\n-    };\r\n-  }, []);\r\n-\r\n-  useEffect(() => {\r\n-    const checkRecognition = () => {\r\n-      if (isListening && !isSpeaking && !recognition.current.starting) {\r\n-        console.log(\"Restarting recognition because it's not active.\");\r\n-        recognition.current.starting = true;\r\n-        recognition.current.start();\r\n-        console.log(\"Restarted recognition.\");\r\n-      }\r\n-    };\r\n-\r\n-    const recognitionCheckInterval = setInterval(checkRecognition, 500); // Check every .5 second\r\n-\r\n-    return () => {\r\n-      clearInterval(recognitionCheckInterval);\r\n-    };\r\n-  }, [isListening, isSpeaking]);\r\n-\r\n-  const historyStack = useRef([]);\r\n-\r\n-  useEffect(() => {\r\n-    return () => {\r\n-      // Clean up the listener when the component unmounts\r\n-      window.removeEventListener(\"popstate\", handlePopState);\r\n-    };\r\n-  }, []);\r\n-\r\n-  const handlePopState = () => {\r\n-    // This needs to handle both back and forward browser actions\r\n-    // Use some logic to determine whether it's a back or forward action\r\n-    // For simplicity, assume it's always back\r\n-    historyStack.current.pop();\r\n-    forwardStack.current.length = 0; // Clear forward stack on manual navigation\r\n-  };\r\n-\r\n-  // Listen to popstate events to update the history stack\r\n-  useEffect(() => {\r\n-    window.addEventListener(\"popstate\", handlePopState);\r\n-  }, []);\r\n-\r\n-  const forwardStack = useRef([]);\r\n-\r\n-  const goBack = () => {\r\n-    if (window.history.state && window.history.state.idx > 0) {\r\n-      window.history.back();\r\n-      speak(\"Going back\");\r\n-    } else {\r\n-      speak(\"Can't go back any further.\");\r\n-    }\r\n-  };\r\n-\r\n-  const goForward = () => {\r\n-    if (\r\n-      window.history.state &&\r\n-      window.history.state.idx < window.history.length - 1\r\n-    ) {\r\n-      window.history.forward();\r\n-      speak(\"Going forward\");\r\n-    } else {\r\n-      speak(\"No forward history available.\");\r\n-    }\r\n-  };\r\n-\r\n-  const scrollAmount = window.innerHeight * 0.82;\r\n-\r\n-  const scrollUp = () => {\r\n-    if (window.pageYOffset === 0) {\r\n-      speak(\"Already at the top of the page.\");\r\n-    } else {\r\n-      window.scrollBy(0, -scrollAmount);\r\n-      speak(\"Scrolled up.\");\r\n-    }\r\n-  };\r\n-\r\n-  const scrollDown = () => {\r\n-    const maxScrollTop =\r\n-      document.documentElement.scrollHeight - window.innerHeight;\r\n-    if (window.pageYOffset >= maxScrollTop) {\r\n-      speak(\"Already at the bottom of the page.\");\r\n-    } else {\r\n-      window.scrollBy(0, scrollAmount);\r\n-      speak(\"Scrolled down.\");\r\n-    }\r\n-  };\r\n-\r\n-  const scrollToTop = () => {\r\n-    if (window.pageYOffset === 0) {\r\n-      speak(\"Already at the top of the page.\");\r\n-    } else {\r\n-      window.scrollTo(0, 0);\r\n-      speak(\"Scrolled to the top of the page.\");\r\n-    }\r\n-  };\r\n-\r\n-  const scrollToBottom = () => {\r\n-    const maxScrollTop =\r\n-      document.documentElement.scrollHeight - window.innerHeight;\r\n-    if (window.pageYOffset >= maxScrollTop) {\r\n-      speak(\"Already at the bottom of the page.\");\r\n-    } else {\r\n-      window.scrollTo(0, document.body.scrollHeight);\r\n-      speak(\"Scrolled to the bottom of the page.\");\r\n-    }\r\n-  };\r\n-\r\n-\r\n-  const controlVideo = (videoId, action) => {\r\n-    const videoRef = videoRefs.current.get(videoId);\r\n-    if (videoRef && videoRef.current) {\r\n-      switch (action) {\r\n-        case 'play':\r\n-          videoRef.current.play();\r\n-          break;\r\n-        case 'pause':\r\n-          videoRef.current.pause();\r\n-          break;\r\n-        case 'mute':\r\n-          videoRef.current.muted = true;\r\n-          break;\r\n-        case 'unmute':\r\n-          videoRef.current.muted = false;\r\n-          break;\r\n-        case 'fullscreen':\r\n-          if (videoRef.current.requestFullscreen) {\r\n-            videoRef.current.requestFullscreen();\r\n-          } else if (videoRef.current.webkitRequestFullscreen) { // Safari\r\n-            videoRef.current.webkitRequestFullscreen();\r\n-          } else if (videoRef.current.msRequestFullscreen) { // IE11\r\n-            videoRef.current.msRequestFullscreen();\r\n-          }\r\n-          break;\r\n-        case 'exitFullscreen':\r\n-          if (document.exitFullscreen) {\r\n-            document.exitFullscreen();\r\n-          } else if (document.webkitExitFullscreen) { // Safari\r\n-            document.webkitExitFullscreen();\r\n-          } else if (document.msExitFullscreen) { // IE11\r\n-            document.msExitFullscreen();\r\n-          }\r\n-          break;\r\n-        case 'increaseVolume':\r\n-          if (videoRef.current.volume < 1) {\r\n-            videoRef.current.volume = Math.min(1, videoRef.current.volume + 0.1);\r\n-          }\r\n-          break;\r\n-        case 'decreaseVolume':\r\n-          if (videoRef.current.volume > 0) {\r\n-            videoRef.current.volume = Math.max(0, videoRef.current.volume - 0.1);\r\n-          }\r\n-          break;\r\n-        // Add other cases as needed\r\n-      }\r\n-      speak(`${action.charAt(0).toUpperCase() + action.slice(1).replace(/([A-Z])/g, ' $1').toLowerCase()}ing video.`);\r\n-    } else {\r\n-      speak(`Video not found.`);\r\n-    }\r\n-  };\r\n-\r\n-  const speak = (message) => {\r\n-    const utterance = new SpeechSynthesisUtterance(message);\r\n-    utterance.onend = () => {\r\n-      setIsSpeaking(false);\r\n-      // Restart recognition after speaking has ended\r\n-      if (isListening) {\r\n-        restartRecognition();\r\n-      }\r\n-    };\r\n-\r\n-    setIsSpeaking(true);\r\n-    // Stop recognition when the bot starts speaking\r\n-    if (recognition.current) {\r\n-      recognition.current.abort();\r\n-    }\r\n-    speechSynthesis.current.speak(utterance);\r\n-  };\r\n-\r\n-  const restartRecognition = () => {\r\n-    // Check if recognition is not already started and if the bot is set to listen\r\n-    if (\r\n-      recognition.current &&\r\n-      !recognition.current.starting &&\r\n-      isListening &&\r\n-      !isSpeaking\r\n-    ) {\r\n-      recognition.current.abort(); // Ensure any ongoing recognition is stopped\r\n-      recognition.current.starting = true;\r\n-      recognition.current.start();\r\n-    }\r\n-  };\r\n-\r\n-  // Restart recognition when bot finishes speaking and isListening is true\r\n-  useEffect(() => {\r\n-    if (!isSpeaking && isListening) {\r\n-      restartRecognition();\r\n-    }\r\n-  }, [isSpeaking, isListening]);\r\n-\r\n-  const onResult = (event) => {\r\n-    const resultIndex = event.resultIndex;\r\n-    const transcript = event.results[resultIndex][0].transcript\r\n-      .trim()\r\n-      .toLowerCase();\r\n-\r\n-    if (event.results[resultIndex].isFinal) {\r\n-      console.log(`Recognized text: ${transcript}`);\r\n-      if (transcript.includes(\"brain\")) {\r\n-        console.log(\"Wake word heard, processing command...\");\r\n-        handleCommandWithFuse(transcript.replace(\"brain\", \"\"));\r\n-      }\r\n-    }\r\n-  };\r\n-\r\n-  const onRecognitionEnd = () => {\r\n-    recognition.current.starting = false;\r\n-    if (isListening && !isSpeaking) {\r\n-      restartRecognition();\r\n-    }\r\n-  };\r\n-\r\n-  useEffect(() => {\r\n-    if (isListening && !hasGreeted) {\r\n-      speak(\"Hello, I'm Brane. How can I help you today?\");\r\n-      setHasGreeted(true);\r\n-    }\r\n-  }, [isListening, hasGreeted]);\r\n-\r\n-  // Updated startListening function\r\n-  const startListening = () => {\r\n-    setIsListening(true);\r\n-    if (!recognition.current.starting) {\r\n-      restartRecognition();\r\n-    }\r\n-  };\r\n-\r\n-  // Updated stopListening function\r\n-  const stopListening = () => {\r\n-    setIsListening(false);\r\n-    if (speechSynthesis.current.speaking) {\r\n-      speechSynthesis.current.cancel();\r\n-    }\r\n-    recognition.current.abort();\r\n-  };\r\n-\r\n-  const handleCommandWithFuse = (command) => {\r\n-    const fuse = new Fuse(commands, { keys: [\"utterance\"], threshold: 0.4 });\r\n-    const results = fuse.search(command);\r\n-    const foundCommand = results.length ? results[0].item : null;\r\n-\r\n-    if (foundCommand) {\r\n-      console.log(\"Command found:\", foundCommand.utterance);\r\n-\r\n-      if (foundCommand.action) {\r\n-        foundCommand.action();\r\n-      } else if (foundCommand.route) {\r\n-        navigate(foundCommand.route);\r\n-      }\r\n-\r\n-      // Speak after performing the action or navigation\r\n-      speak(foundCommand.response);\r\n-    } else {\r\n-      console.log(\"No command found.\");\r\n-      speak(\"I'm not sure how to respond to that.\");\r\n-    }\r\n-  };\r\n-\r\n-  const commands = [\r\n-    {\r\n-      utterance: \"Hello who are you ?\",\r\n-\r\n-      response:\r\n-        \"Hi! This is Brane! your Voice bot from Brane Education How can I Assist you Today ?\",\r\n-    },\r\n-\r\n-    {\r\n-      utterance: \"Hello\",\r\n-\r\n-      response: \"Hi! How can I assist you today?\",\r\n-    },\r\n-\r\n-    {\r\n-      utterance: \"hello\",\r\n-\r\n-      response: \"Hi! How can I assist you today?\",\r\n-    },\r\n-\r\n-    {\r\n-      utterance: \"Hi.\",\r\n-\r\n-      response: \"Hello! How can I assist you today?\",\r\n-    },\r\n-\r\n-    {\r\n-      utterance: \"Hey there\",\r\n-\r\n-      response: \"Hi! How can I assist you today?\",\r\n-    },\r\n-\r\n-    {\r\n-      utterance: \"Good morning Brane.\",\r\n-\r\n-      response: \"Hey Hiii! Good morning  ! How can I help you?\",\r\n-    },\r\n-\r\n-    {\r\n-      utterance: \"Good afternoon Brane.\",\r\n-\r\n-      response: \"Hey Hiii! Good after noon ! How can I help you?\",\r\n-    },\r\n-\r\n-    {\r\n-      utterance: \"Good evening Brane.\",\r\n-\r\n-      response: \"Hey Hiii! Good evening ! How can I help you?\",\r\n-    },\r\n-\r\n-    {\r\n-      utterance: \"take me to homepage\",\r\n-\r\n-      route: \"/\",\r\n-\r\n-      response: \"You're in Homepage now\",\r\n-    },\r\n-    {\r\n-      utterance: \"open homepage\",\r\n-\r\n-      route: \"/\",\r\n-\r\n-      response: \"You're in Homepage now\",\r\n-    },\r\n-    {\r\n-      utterance: \"go to homepage\",\r\n-\r\n-      route: \"/\",\r\n-\r\n-      response: \"You're in Homepage now\",\r\n-    },\r\n-    {\r\n-      utterance: \"go back to homepage\",\r\n-\r\n-      route: \"/\",\r\n-\r\n-      response: \"You're in Homepage now\",\r\n-    },\r\n-    {\r\n-      utterance: \"can you please take me to login page\",\r\n-\r\n-      route: \"/login\",\r\n-\r\n-      response: \"Here's the Login Page, Please Login\",\r\n-    },\r\n-\r\n-    {\r\n-      utterance: \"please take me to login page\",\r\n-\r\n-      route: \"/login\",\r\n-\r\n-      response: \"Here's the Login Page, Please Login\",\r\n-    },\r\n-\r\n-    {\r\n-      utterance: \"Go to login page\",\r\n-\r\n-      route: \"/login\",\r\n-\r\n-      response: \"Here's the Login Page, Please Login\",\r\n-    },\r\n-\r\n-    {\r\n-      utterance: \"open login page\",\r\n-\r\n-      route: \"/login\",\r\n-\r\n-      response: \"Here's the Login Page, Please Login\",\r\n-    },\r\n-\r\n-    {\r\n-      utterance: \"can you please take me to signup page\",\r\n-\r\n-      route: \"/signup\",\r\n-\r\n-      response: \"Here's the signup page. Please proceed With Registration.\",\r\n-    },\r\n-\r\n-    {\r\n-      utterance: \"take me to signup page\",\r\n-\r\n-      route: \"/signup\",\r\n-\r\n-      response: \"Here's the signup page. Please proceed With Registration.\",\r\n-    },\r\n-\r\n-    {\r\n-      utterance: \"Go to signup page\",\r\n-\r\n-      route: \"/signup\",\r\n-\r\n-      response: \"Here's the signup page. Please proceed With Registration.\",\r\n-    },\r\n-\r\n-    {\r\n-      utterance: \"open signup page\",\r\n-\r\n-      route: \"/signup\",\r\n-\r\n-      response: \"Here's the signup page. Please proceed With Registration.\",\r\n-    },\r\n-\r\n-    {\r\n-      utterance: \"Go to face id\",\r\n-\r\n-      route: \"/login/faceid\",\r\n-\r\n-      response: \"Here's Face ID Login. Please proceed.\",\r\n-    },\r\n-\r\n-    {\r\n-      utterance: \"Go to face id login\",\r\n-\r\n-      route: \"/login/faceid\",\r\n-\r\n-      response: \"Here's Face ID Login. Please proceed.\",\r\n-    },\r\n-    {\r\n-      utterance: \"Go to face login\",\r\n-\r\n-      route: \"/login/faceid\",\r\n-\r\n-      response: \"Here's Face ID Login. Please proceed.\",\r\n-    },\r\n-\r\n-    {\r\n-      utterance: \"login with face id\",\r\n-\r\n-      route: \"/login/faceid\",\r\n-\r\n-      response: \"Here's Face ID Login. Please proceed.\",\r\n-    },\r\n-\r\n-    {\r\n-      utterance: \"login with face\",\r\n-\r\n-      route: \"/login/faceid\",\r\n-\r\n-      response: \"Here's Face ID Login. Please proceed.\",\r\n-    },\r\n-\r\n-    {\r\n-      utterance: \"i want to login with face\",\r\n-\r\n-      route: \"/login/faceid\",\r\n-\r\n-      response: \"Here's Face ID Login. Please proceed.\",\r\n-    },\r\n-\r\n-    {\r\n-      utterance: \"login with voice\",\r\n-\r\n-      route: \"/login/voiceid\",\r\n-\r\n-      response: \"Here's Voice Login. Please proceed.\",\r\n-    },\r\n-\r\n-    {\r\n-      utterance: \"i want to login with voice\",\r\n-\r\n-      route: \"/login/voiceid\",\r\n-\r\n-      response: \"Here's Voice Login. Please proceed.\",\r\n-    },\r\n-\r\n-    {\r\n-      utterance: \"go to voice login\",\r\n-\r\n-      route: \"/login/voiceid\",\r\n-\r\n-      response: \"Here's Voice Login. Please proceed.\",\r\n-    },\r\n-\r\n-    {\r\n-      utterance: \"login with voice\",\r\n-\r\n-      route: \"/login/voiceid\",\r\n-\r\n-      response: \"Here's Voice Login. Please proceed.\",\r\n-    },\r\n-\r\n-    {\r\n-      utterance: \"login with mobile\",\r\n-\r\n-      route: \"/login/mobile\",\r\n-\r\n-      response: \"Here's Mobile Login. Please proceed.\",\r\n-    },\r\n-\r\n-    {\r\n-      utterance: \"i want to login with mobile\",\r\n-\r\n-      route: \"/login/mobile\",\r\n-\r\n-      response: \"Here's Mobile Login. Please proceed.\",\r\n-    },\r\n-    {\r\n-      utterance: \"go to mobile login\",\r\n-\r\n-      route: \"/login/mobile\",\r\n-\r\n-      response: \"Here's Mobile Login. Please proceed.\",\r\n-    },\r\n-    {\r\n-      utterance: \"go to about page\",\r\n-\r\n-      route: \"/aboutus\",\r\n-\r\n-      response: \"This is About us.\",\r\n-    },\r\n-    {\r\n-      utterance: \"go to about us page\",\r\n-\r\n-      route: \"/aboutus\",\r\n-\r\n-      response: \"This is About us.\",\r\n-    },\r\n-    {\r\n-      utterance: \"open about us page\",\r\n-\r\n-      route: \"/aboutus\",\r\n-\r\n-      response: \"This is About us.\",\r\n-    },\r\n-    {\r\n-      utterance: \"open about page\",\r\n-\r\n-      route: \"/aboutus\",\r\n-\r\n-      response: \"This is About us.\",\r\n-    },\r\n-    {\r\n-      utterance: \"take me to about page\",\r\n-\r\n-      route: \"/aboutus\",\r\n-\r\n-      response: \"This is About us.\",\r\n-    },\r\n-    {\r\n-      utterance: \"take me to about us page\",\r\n-\r\n-      route: \"/aboutus\",\r\n-\r\n-      response: \"This is About us.\",\r\n-    },\r\n-\r\n-    {\r\n-      utterance: \"go to contact page\",\r\n-\r\n-      route: \"/contactus\",\r\n-\r\n-      response: \"You can contact us from here\",\r\n-    },\r\n-    {\r\n-      utterance: \"go to contact us page\",\r\n-\r\n-      route: \"/contactus\",\r\n-\r\n-      response: \"You can contact us from here\",\r\n-    },\r\n-    {\r\n-      utterance: \"open contact us page\",\r\n-\r\n-      route: \"/contactus\",\r\n-\r\n-      response: \"You can contact us from here\",\r\n-    },\r\n-    {\r\n-      utterance: \"open contact page\",\r\n-\r\n-      route: \"/contactus\",\r\n-\r\n-      response: \"You can contact us from here\",\r\n-    },\r\n-    {\r\n-      utterance: \"take me to about page\",\r\n-\r\n-      route: \"/contactus\",\r\n-\r\n-      response: \"You can contact us from here\",\r\n-    },\r\n-    {\r\n-      utterance: \"take me to contact us page\",\r\n-\r\n-      route: \"/contactus\",\r\n-\r\n-      response: \"You can contact us from here\",\r\n-    },\r\n-\r\n-    {\r\n-      utterance: \"what are platform features\",\r\n-\r\n-      response:\r\n-        \"Dashboard, Dynamic time table, Learning Networks, Little Masters, Video Based Dictionary, General Search.\",\r\n-    },\r\n-\r\n-    {\r\n-      utterance: \"Features of platform\",\r\n-\r\n-      response:\r\n-        \"Dashboard, Dynamic time table, Learning Networks, Little Masters, Video Based Dictionary, General Search.\",\r\n-    },\r\n-\r\n-    {\r\n-      utterance: \"What does the platform offer\",\r\n-\r\n-      response:\r\n-        \"Dashboard, Dynamic time table, Learning Networks, Little Masters, Video Based Dictionary, General Search.\",\r\n-    },\r\n-\r\n-    {\r\n-      utterance: \"Say me the features of platform\",\r\n-\r\n-      response:\r\n-        \"Dashboard, Dynamic time table, Learning Networks, Little Masters, Video Based Dictionary, General Search.\",\r\n-    },\r\n-\r\n-    {\r\n-      utterance: \"Say me the services of platform\",\r\n-\r\n-      response:\r\n-        \"Dashboard, Dynamic time table, Learning Networks, Little Masters, Video Based Dictionary, General Search.\",\r\n-    },\r\n-\r\n-    {\r\n-      utterance: \"tell me the services offered by the platform\",\r\n-\r\n-      response:\r\n-        \"Dashboard, Dynamic time table, Learning Networks, Little Masters, Video Based Dictionary, General Search.\",\r\n-    },\r\n-\r\n-    {\r\n-      utterance: \"explain platform services\",\r\n-\r\n-      response:\r\n-        \"Dashboard, Dynamic time table, Learning Networks, Little Masters, Video Based Dictionary, General Search.\",\r\n-    },\r\n-\r\n-    {\r\n-      utterance: \"Give me the Parent voice of Julia Harris\",\r\n-\r\n-      response:\r\n-        \"Brane education has helped my son a lot in his studies. He improved a lot in his studies and is now able to score good marks in his exams\",\r\n-    },\r\n-\r\n-    {\r\n-      utterance: \"Leaders Voice\",\r\n-\r\n-      response:\r\n-        \"This Voice-interactive AI Platform is a game Changer. It revolutionizes education.\",\r\n-    },\r\n-\r\n-    {\r\n-      utterance: \"Curriculum Supported by Brane Education\",\r\n-\r\n-      response:\r\n-        \"we support multiple Boards let me say few Telangana State Board Andhra Pradesh Board Maharashtra Board Assam Board\",\r\n-    },\r\n-\r\n-    {\r\n-      utterance: \"Boards supported by the platform\",\r\n-\r\n-      response:\r\n-        \"we support multiple Boards let me say few Telangana State Board Andhra Pradesh Board Maharashtra Board Assam Board\",\r\n-    },\r\n-\r\n-    {\r\n-      utterance: \"Curriculum\",\r\n-\r\n-      response:\r\n-        \"we support multiple Boards let me say few Telangana State Board Andhra Pradesh Board Maharashtra Board Assam Board\",\r\n-    },\r\n-\r\n-    {\r\n-      utterance: \"what is today's quote\",\r\n-\r\n-      response:\r\n-        \"Determination is the power that sees us through all our frustration and obstacles. It helps in building our willpower which is the very basis of success.\",\r\n-\r\n-      route: \"/childpage\",\r\n-    },\r\n-\r\n-    {\r\n-      utterance: \"Today's Inspirational quote\",\r\n-\r\n-      response:\r\n-        \"Determination is the power that sees us through all our frustration and obstacles. It helps in building our willpower which is the very basis of success.\",\r\n-\r\n-      route: \"/childpage\",\r\n-    },\r\n-\r\n-    {\r\n-      utterance: \"say me today's quote\",\r\n-\r\n-      response:\r\n-        \"Determination is the power that sees us through all our frustration and obstacles. It helps in building our willpower which is the very basis of success.\",\r\n-\r\n-      route: \"/childpage\",\r\n-    },\r\n-    {\r\n-      utterance: \"go back\",\r\n-      response: \"\",\r\n-      action: goBack, // Note the use of an action property\r\n-    },\r\n-    {\r\n-      utterance: \"go forward\",\r\n-      response: \"\",\r\n-      action: goForward,\r\n-    },\r\n-    // {\r\n-    //   utterance: \"play video\",\r\n-    //   // response: \"Playing video.\",\r\n-    //   action: playVideo,\r\n-    // },\r\n-    // {\r\n-    //   utterance: \"pause video\",\r\n-    //   // response: \"Pausing video.\",\r\n-    //   action: pauseVideo,\r\n-    // },\r\n-    // {\r\n-    //   utterance: \"start video\",\r\n-    //   // response: \"Playing video.\",\r\n-    //   action: playVideo,\r\n-    // },\r\n-    // {\r\n-    //   utterance: \"stop video\",\r\n-    //   // response: \"Playing video.\",\r\n-    //   action: pauseVideo,\r\n-    // },\r\n-    {\r\n-      utterance: \"scroll up\",\r\n-      // response: \"Scrolling up.\",\r\n-      action: scrollUp,\r\n-    },\r\n-    {\r\n-      utterance: \"scroll down\",\r\n-      // response: \"Scrolling down.\",\r\n-      action: scrollDown,\r\n-    },\r\n-    {\r\n-      utterance: \"go up\",\r\n-\r\n-      // response: \"Scrolling up.\",\r\n-      action: scrollUp,\r\n-    },\r\n-    {\r\n-      utterance: \"go down\",\r\n-      // response: \"Scrolling down.\",\r\n-      action: scrollDown,\r\n-    },\r\n-    {\r\n-      utterance: \"scroll to top\",\r\n-      action: scrollToTop,\r\n-    },\r\n-    {\r\n-      utterance: \"scroll to bottom\",\r\n-      action: scrollToBottom,\r\n-    },\r\n-    {\r\n-      utterance: \"brane stop\",\r\n-      action: stopListening,\r\n-    },\r\n-    {\r\n-      utterance: \"brane turn off\",\r\n-      action: stopListening,\r\n-    },\r\n-    {\r\n-      utterance: \"brane stop the bot\",\r\n-      action: stopListening,\r\n-    },\r\n-    // {\r\n-    //   utterance: \"mute the video\",\r\n-    //   action: muteVideo,\r\n-    // },\r\n-    // {\r\n-    //   utterance: \"unmute the video\",\r\n-    //   action: unmuteVideo,\r\n-    // },\r\n-    // {\r\n-    //   utterance: \"stop the video sound\",\r\n-    //   action: muteVideo,\r\n-    // },\r\n-    // {\r\n-    //   utterance: \"play the video sound\",\r\n-    //   action: unmuteVideo,\r\n-    // },\r\n-    {\r\n-      utterance: \"play transforming education video\",\r\n-      action: () => controlVideo('ourProjectsVideo', 'play'),\r\n-    },\r\n-    {\r\n-      utterance: \"start transforming education using ai video\",\r\n-      action: () => controlVideo('ourProjectsVideo', 'play'),\r\n-    },\r\n-    {\r\n-      utterance: \"pause transforming education using ai video\",\r\n-      action: () => controlVideo('ourProjectsVideo', 'pause'),\r\n-    },\r\n-    {\r\n-      utterance: \"stop transforming education using ai video\",\r\n-      action: () => controlVideo('ourProjectsVideo', 'pause'),\r\n-    },\r\n-\r\n-    {\r\n-      utterance: \"mute transforming education using ai video\",\r\n-      action: () => controlVideo('ourProjectsVideo', 'mute'),\r\n-    },\r\n-    {\r\n-      utterance: \"unmute transforming education using ai video\",\r\n-      action: () => controlVideo('ourProjectsVideo', 'unmute'),\r\n-    },\r\n-    {\r\n-      utterance: \"fullscreen transforming education using ai video\",\r\n-      action: () => controlVideo('ourProjectsVideo', 'fullscreen'),\r\n-    },\r\n-    {\r\n-      utterance: \"exit fullscreen transforming education using ai video\",\r\n-      action: () => controlVideo('ourProjectsVideo', 'exitFullscreen'),\r\n-    },\r\n-    {\r\n-      utterance: \"increase volume transforming education using ai video\",\r\n-      action: () => controlVideo('ourProjectsVideo', 'increaseVolume'),\r\n-    },\r\n-    {\r\n-      utterance: \"decrease volume transforming education using ai video\",\r\n-      action: () => controlVideo('ourProjectsVideo', 'decreaseVolume'),\r\n-    },\r\n-  ];\r\n-\r\n-  return (\r\n-    <div className=\"speech-bot-container\">\r\n-      <div\r\n-        className={`button-container ${\r\n-          isListening ? \"voicebotframeactive\" : \"voicebotframe\"\r\n-        }`}\r\n-      >\r\n-        {/* <button onClick={isListening ? stopListening : startListening}>\r\n-          {isListening ? \"Stop\" : \"Start\"} Animation\r\n-        </button> */}\r\n-        <img\r\n-          className=\"botimage\"\r\n-          src={chatbotimage}\r\n-          alt=\"\"\r\n-          onClick={isListening ? stopListening : startListening}\r\n-        />\r\n-      </div>\r\n-    </div>\r\n-  );\r\n-};\r\n-\r\n-export default VoiceBot;\r\n-\r\n-{\r\n-  /* // import React, { useState, useEffect, useRef } from \"react\";\r\n-// import { useNavigate, useLocation } from \"react-router-dom\";\r\n-// import Fuse from \"fuse.js\";\r\n-// import \"./VoiceBot.css\";\r\n-\r\n-// const VoiceBot = ({ videoRef }) => {\r\n-//   const [isListening, setIsListening] = useState(false);\r\n-//   const [isSpeaking, setIsSpeaking] = useState(false);\r\n-//   const recognition = useRef(null);\r\n-//   const speechSynthesis = useRef(window.speechSynthesis);\r\n-//   const [hasGreeted, setHasGreeted] = useState(false);\r\n-//   const navigate = useNavigate();\r\n-\r\n-//   useEffect(() => {\r\n-//     recognition.current = new window.webkitSpeechRecognition();\r\n-//     recognition.current.continuous = true;\r\n-//     recognition.current.interimResults = false;\r\n-//     recognition.current.onresult = onResult;\r\n-//     recognition.current.onend = onRecognitionEnd;\r\n-//     recognition.current.starting = false;\r\n-\r\n-//     // Simplified error handling, removed specific handling for 'no-speech'\r\n-//     recognition.current.onerror = (event) => {\r\n-//       console.error(\"Recognition error:\", event.error);\r\n-//       // Check if listening is true and the bot isn't speaking\r\n-//       if (isListening && !isSpeaking) {\r\n-//         // Restart recognition\r\n-//         restartRecognition();\r\n-//       }\r\n-//     };\r\n-\r\n-//     return () => {\r\n-//       if (recognition.current) {\r\n-//         recognition.current.abort();\r\n-//       }\r\n-//     };\r\n-//   }, []);\r\n-\r\n-//   useEffect(() => {\r\n-//     const checkRecognition = () => {\r\n-//       if (isListening && !isSpeaking && !recognition.current.starting) {\r\n-//         console.log(\"Restarting recognition because it's not active.\");\r\n-//         recognition.current.starting = true;\r\n-//         recognition.current.start();\r\n-//         console.log(\"Restarted recognition.\");\r\n-//       }\r\n-//     };\r\n-\r\n-//     const recognitionCheckInterval = setInterval(checkRecognition, 100); // Check every 1 second\r\n-\r\n-//     return () => {\r\n-//       clearInterval(recognitionCheckInterval);\r\n-//     };\r\n-//   }, [isListening, isSpeaking]);\r\n-\r\n-//   const restartRecognition = () => {\r\n-//     if (recognition.current.starting) {\r\n-//       console.log(\"Recognition is already starting or running.\");\r\n-//       return;\r\n-//     }\r\n-\r\n-//     recognition.current.abort(); // Stop any existing recognition process\r\n-//     recognition.current.starting = true;\r\n-//     recognition.current.start();\r\n-//     console.log(\"Recognition restarted.\");\r\n-//   };\r\n-\r\n-//   const historyStack = useRef([]);\r\n-\r\n-//   useEffect(() => {\r\n-//     return () => {\r\n-//       // Clean up the listener when the component unmounts\r\n-//       window.removeEventListener(\"popstate\", handlePopState);\r\n-//     };\r\n-//   }, []);\r\n-\r\n-//   const handlePopState = () => {\r\n-//     // This needs to handle both back and forward browser actions\r\n-//     // Use some logic to determine whether it's a back or forward action\r\n-//     // For simplicity, assume it's always back\r\n-//     historyStack.current.pop();\r\n-//     forwardStack.current.length = 0; // Clear forward stack on manual navigation\r\n-//   };\r\n-  \r\n-\r\n-//   // Add a new entry to the stack whenever navigate is called\r\n-//   const customNavigate = (to, options) => {\r\n-//     historyStack.current.push(to);\r\n-//     navigate(to, options);\r\n-//   };\r\n-\r\n-//   // Listen to popstate events to update the history stack\r\n-//   useEffect(() => {\r\n-//     window.addEventListener(\"popstate\", handlePopState);\r\n-//   }, []);\r\n-\r\n-//   const forwardStack = useRef([]);\r\n-\r\n-//   const goBack = () => {\r\n-//     if (window.history.state && window.history.state.idx > 0) {\r\n-//       window.history.back();\r\n-//       speak(\"Going back\");\r\n-//     } else {\r\n-//       speak(\"Can't go back any further.\");\r\n-//     }\r\n-//   };\r\n-\r\n-//   const goForward = () => {\r\n-//     if (window.history.state && window.history.state.idx < window.history.length - 1) {\r\n-//       window.history.forward();\r\n-//       speak(\"Going forward\");\r\n-//     } else {\r\n-//       speak(\"No forward history available.\");\r\n-//     }\r\n-//   };\r\n-\r\n-//   const playVideo = () => {\r\n-//     if (videoRef.current) {\r\n-//       videoRef.current.play();\r\n-//       speak(\"Playing video.\");\r\n-//     } else {\r\n-//       speak(\"No video to play.\");\r\n-//     }\r\n-//   };\r\n-\r\n-//   const pauseVideo = () => {\r\n-//     if (videoRef.current) {\r\n-//       videoRef.current.pause();\r\n-//       speak(\"Video paused.\");\r\n-//     } else {\r\n-//       speak(\"No video to pause.\");\r\n-//     }\r\n-//   };\r\n-\r\n-//   const scrollAmount = window.innerHeight * 0.82;\r\n-\r\n-//   const scrollUp = () => {\r\n-//     if (window.pageYOffset === 0) {\r\n-//       speak(\"Already at the top of the page.\");\r\n-//     } else {\r\n-//       window.scrollBy(0, -scrollAmount);\r\n-//       speak(\"Scrolled up.\");\r\n-//     }\r\n-//   };\r\n-\r\n-//   const scrollDown = () => {\r\n-//     const maxScrollTop =\r\n-//       document.documentElement.scrollHeight - window.innerHeight;\r\n-//     if (window.pageYOffset >= maxScrollTop) {\r\n-//       speak(\"Already at the bottom of the page.\");\r\n-//     } else {\r\n-//       window.scrollBy(0, scrollAmount);\r\n-//       speak(\"Scrolled down.\");\r\n-//     }\r\n-//   };\r\n-\r\n-//   const scrollToTop = () => {\r\n-//     if (window.pageYOffset === 0) {\r\n-//       speak(\"Already at the top of the page.\");\r\n-//     } else {\r\n-//       window.scrollTo(0, 0);\r\n-//       speak(\"Scrolled to the top of the page.\");\r\n-//     }\r\n-//   };\r\n-\r\n-//   const scrollToBottom = () => {\r\n-//     const maxScrollTop =\r\n-//       document.documentElement.scrollHeight - window.innerHeight;\r\n-//     if (window.pageYOffset >= maxScrollTop) {\r\n-//       speak(\"Already at the bottom of the page.\");\r\n-//     } else {\r\n-//       window.scrollTo(0, document.body.scrollHeight);\r\n-//       speak(\"Scrolled to the bottom of the page.\");\r\n-//     }\r\n-//   };\r\n-\r\n-//   const speak = (message) => {\r\n-//     console.log(\"speak function called with message:\", message);\r\n-//     const utterance = new SpeechSynthesisUtterance(message);\r\n-//     utterance.onend = () => {\r\n-//       setIsSpeaking(false);\r\n-//       console.log(\"Speaking ended.\");\r\n-//       if (isListening && !recognition.current.starting) {\r\n-//         console.log(\"Restarting recognition after speaking.\");\r\n-//         recognition.current.starting = true;\r\n-//         recognition.current.start();\r\n-//         console.log(\"Restarted recognition after speaking.\");\r\n-//       }\r\n-//     };\r\n-\r\n-//     setIsSpeaking(true);\r\n-//     console.log(\"Speaking started.\");\r\n-//     recognition.current.stop(); // Ensure to stop recognition before speaking\r\n-//     speechSynthesis.current.speak(utterance);\r\n-//   };\r\n-\r\n-//   const onResult = (event) => {\r\n-//     const resultIndex = event.resultIndex;\r\n-//     const transcript = event.results[resultIndex][0].transcript\r\n-//       .trim()\r\n-//       .toLowerCase();\r\n-\r\n-//     if (event.results[resultIndex].isFinal) {\r\n-//       console.log(`Recognized text: ${transcript}`);\r\n-//       if (transcript.includes(\"brain\")) {\r\n-//         console.log(\"Wake word heard, processing command...\");\r\n-//         handleCommandWithFuse(transcript.replace(\"brain\", \"\"));\r\n-//       }\r\n-//     }\r\n-//   };\r\n-\r\n-//   const onRecognitionEnd = () => {\r\n-//     recognition.current.starting = false;\r\n-//     if (isListening && !isSpeaking) {\r\n-//       restartRecognition();\r\n-//     }\r\n-//   };\r\n-\r\n-//   useEffect(() => {\r\n-//     if (isListening) {\r\n-//       if (!hasGreeted) {\r\n-//         speak(\"Hello, I'm Brane. How can I help you today?\");\r\n-//         setHasGreeted(true);\r\n-//       } else {\r\n-//         speak(\"Listening.\");\r\n-//       }\r\n-//     }\r\n-//   }, [isListening, hasGreeted]);\r\n-\r\n-\r\n-//   const startListening = () => {\r\n-//     if (!recognition.current.starting) {\r\n-//       setIsListening(true);\r\n-//       restartRecognition();\r\n-//     }\r\n-//   };\r\n-\r\n-//   const stopListening = () => {\r\n-//     setIsListening(false);\r\n-//     recognition.current.abort();\r\n-//     if (speechSynthesis.current.speaking) {\r\n-//       speechSynthesis.current.cancel();\r\n-//     }\r\n-//   };\r\n-\r\n-//   const handleCommandWithFuse = (command) => {\r\n-//     const fuse = new Fuse(commands, { keys: [\"utterance\"], threshold: 0.4 });\r\n-//     const results = fuse.search(command);\r\n-//     const foundCommand = results.length ? results[0].item : null;\r\n-\r\n-//     if (foundCommand) {\r\n-//       console.log(\"Command found:\", foundCommand.utterance);\r\n-\r\n-//       if (foundCommand.action) {\r\n-//         foundCommand.action();\r\n-//       } else if (foundCommand.route) {\r\n-//         navigate(foundCommand.route);\r\n-//       }\r\n-\r\n-//       // Speak after performing the action or navigation\r\n-//       speak(foundCommand.response);\r\n-//     } else {\r\n-//       console.log(\"No command found.\");\r\n-//       speak(\"I'm not sure how to respond to that.\");\r\n-//     }\r\n-//   };\r\n-\r\n-//   const commands = [\r\n-//     {\r\n-//       utterance: \"Hello who are you ?\",\r\n-\r\n-//       response:\r\n-//         \"Hi! This is Brane! your Voice bot from Brane Education How can I Assist you Today ?\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"Hello\",\r\n-\r\n-//       response: \"Hi! How can I assist you today?\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"hello\",\r\n-\r\n-//       response: \"Hi! How can I assist you today?\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"Hi.\",\r\n-\r\n-//       response: \"Hello! How can I assist you today?\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"Hey there\",\r\n-\r\n-//       response: \"Hi! How can I assist you today?\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"Good morning Brane.\",\r\n-\r\n-//       response: \"Hey Hiii! Good morning  ! How can I help you?\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"Good afternoon Brane.\",\r\n-\r\n-//       response: \"Hey Hiii! Good after noon ! How can I help you?\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"Good evening Brane.\",\r\n-\r\n-//       response: \"Hey Hiii! Good evening ! How can I help you?\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"can you please take me to login page\",\r\n-\r\n-//       route: \"/login\",\r\n-\r\n-//       response: \"Here's the Login Page, Please Login\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"please take me to login page\",\r\n-\r\n-//       route: \"/login\",\r\n-\r\n-//       response: \"Here's the Login Page, Please Login\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"Go to login page\",\r\n-\r\n-//       route: \"/login\",\r\n-\r\n-//       response: \"Here's the Login Page, Please Login\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"open login page\",\r\n-\r\n-//       route: \"/login\",\r\n-\r\n-//       response: \"Here's the Login Page, Please Login\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"can you please take me to signup page\",\r\n-\r\n-//       route: \"/signup\",\r\n-\r\n-//       response: \"Here's the signup page. Please proceed With Registration.\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"take me to signup page\",\r\n-\r\n-//       route: \"/signup\",\r\n-\r\n-//       response: \"Here's the signup page. Please proceed With Registration.\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"Go to signup page\",\r\n-\r\n-//       route: \"/signup\",\r\n-\r\n-//       response: \"Here's the signup page. Please proceed With Registration.\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"open signup page\",\r\n-\r\n-//       route: \"/signup\",\r\n-\r\n-//       response: \"Here's the signup page. Please proceed With Registration.\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"Go to face id\",\r\n-\r\n-//       route: \"/login/faceid\",\r\n-\r\n-//       response: \"Here's Face ID Login. Please proceed.\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"Go to face id login\",\r\n-\r\n-//       route: \"/login/faceid\",\r\n-\r\n-//       response: \"Here's Face ID Login. Please proceed.\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"login with face id\",\r\n-\r\n-//       route: \"/login/faceid\",\r\n-\r\n-//       response: \"Here's Face ID Login. Please proceed.\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"login with face\",\r\n-\r\n-//       route: \"/login/faceid\",\r\n-\r\n-//       response: \"Here's Face ID Login. Please proceed.\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"i want to login with face\",\r\n-\r\n-//       route: \"/login/faceid\",\r\n-\r\n-//       response: \"Here's Face ID Login. Please proceed.\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"login with voice\",\r\n-\r\n-//       route: \"/login/voiceid\",\r\n-\r\n-//       response: \"Here's Voice Login. Please proceed.\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"i want to login with voice\",\r\n-\r\n-//       route: \"/login/voiceid\",\r\n-\r\n-//       response: \"Here's Voice Login. Please proceed.\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"go to voice login\",\r\n-\r\n-//       route: \"/login/voiceid\",\r\n-\r\n-//       response: \"Here's Voice Login. Please proceed.\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"login with voice\",\r\n-\r\n-//       route: \"/login/voiceid\",\r\n-\r\n-//       response: \"Here's Voice Login. Please proceed.\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"login with mobile\",\r\n-\r\n-//       route: \"/login/mobile\",\r\n-\r\n-//       response: \"Here's Mobile Login. Please proceed.\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"i want to login with mobile\",\r\n-\r\n-//       route: \"/login/mobile\",\r\n-\r\n-//       response: \"Here's Mobile Login. Please proceed.\",\r\n-//     },\r\n-//     {\r\n-//       utterance: \"go to mobile login\",\r\n-\r\n-//       route: \"/login/mobile\",\r\n-\r\n-//       response: \"Here's Mobile Login. Please proceed.\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"what are platform features\",\r\n-\r\n-//       response:\r\n-//         \"Dashboard, Dynamic time table, Learning Networks, Little Masters, Video Based Dictionary, General Search.\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"Features of platform\",\r\n-\r\n-//       response:\r\n-//         \"Dashboard, Dynamic time table, Learning Networks, Little Masters, Video Based Dictionary, General Search.\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"What does the platform offer\",\r\n-\r\n-//       response:\r\n-//         \"Dashboard, Dynamic time table, Learning Networks, Little Masters, Video Based Dictionary, General Search.\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"Say me the features of platform\",\r\n-\r\n-//       response:\r\n-//         \"Dashboard, Dynamic time table, Learning Networks, Little Masters, Video Based Dictionary, General Search.\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"Say me the services of platform\",\r\n-\r\n-//       response:\r\n-//         \"Dashboard, Dynamic time table, Learning Networks, Little Masters, Video Based Dictionary, General Search.\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"tell me the services offered by the platform\",\r\n-\r\n-//       response:\r\n-//         \"Dashboard, Dynamic time table, Learning Networks, Little Masters, Video Based Dictionary, General Search.\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"explain platform services\",\r\n-\r\n-//       response:\r\n-//         \"Dashboard, Dynamic time table, Learning Networks, Little Masters, Video Based Dictionary, General Search.\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"Give me the Parent voice of Julia Harris\",\r\n-\r\n-//       response:\r\n-//         \"Brane education has helped my son a lot in his studies. He improved a lot in his studies and is now able to score good marks in his exams\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"Play today's motivational video\",\r\n-\r\n-//       response: \"I am playing the video\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"Play today's video\",\r\n-\r\n-//       response: \"I am playing Motivational video\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"Leaders Voice\",\r\n-\r\n-//       response:\r\n-//         \"This Voice-interactive AI Platform is a game Changer. It revolutionizes education.\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"Curriculum Supported by Brane Education\",\r\n-\r\n-//       response:\r\n-//         \"we support multiple Boards let me say few Telangana State Board Andhra Pradesh Board Maharashtra Board Assam Board\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"Boards supported by the platform\",\r\n-\r\n-//       response:\r\n-//         \"we support multiple Boards let me say few Telangana State Board Andhra Pradesh Board Maharashtra Board Assam Board\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"Curriculum\",\r\n-\r\n-//       response:\r\n-//         \"we support multiple Boards let me say few Telangana State Board Andhra Pradesh Board Maharashtra Board Assam Board\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"Go to landing page\",\r\n-\r\n-//       response: \"Okay, I am taking you to the landing page.\",\r\n-\r\n-//       route: \"/childpage\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"take me to landing page\",\r\n-\r\n-//       response: \"Okay, I am taking you to the landing page.\",\r\n-\r\n-//       route: \"/childpage\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"move to landing page\",\r\n-\r\n-//       response: \"Okay, I am taking you to the landing page.\",\r\n-\r\n-//       route: \"/childpage\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"roll back to landing page\",\r\n-\r\n-//       response: \"Okay, I am taking you to the landing page.\",\r\n-\r\n-//       route: \"/childpage\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"move to landing page\",\r\n-\r\n-//       response: \"Okay, I am taking you to the landing page.\",\r\n-\r\n-//       route: \"/childpage\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"what is today's quote\",\r\n-\r\n-//       response:\r\n-//         \"Determination is the power that sees us through all our frustration and obstacles. It helps in building our willpower which is the very basis of success.\",\r\n-\r\n-//       route: \"/childpage\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"Today's Inspirational quote\",\r\n-\r\n-//       response:\r\n-//         \"Determination is the power that sees us through all our frustration and obstacles. It helps in building our willpower which is the very basis of success.\",\r\n-\r\n-//       route: \"/childpage\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"say me today's quote\",\r\n-\r\n-//       response:\r\n-//         \"Determination is the power that sees us through all our frustration and obstacles. It helps in building our willpower which is the very basis of success.\",\r\n-\r\n-//       route: \"/childpage\",\r\n-//     },\r\n-//     {\r\n-//       utterance: \"go back\",\r\n-//       response: \"\",\r\n-//       action: goBack, // Note the use of an action property\r\n-//     },\r\n-//     {\r\n-//       utterance: \"go forward\",\r\n-//       response: \"\",\r\n-//       action: goForward,\r\n-//     },\r\n-//     {\r\n-//       utterance: \"play video\",\r\n-//       // response: \"Playing video.\",\r\n-//       action: playVideo,\r\n-//     },\r\n-//     {\r\n-//       utterance: \"pause video\",\r\n-//       // response: \"Pausing video.\",\r\n-//       action: pauseVideo,\r\n-//     },\r\n-//     {\r\n-//       utterance: \"start video\",\r\n-//       // response: \"Playing video.\",\r\n-//       action: playVideo,\r\n-//     },\r\n-//     {\r\n-//       utterance: \"stop video\",\r\n-//       // response: \"Playing video.\",\r\n-//       action: pauseVideo,\r\n-//     },\r\n-//     {\r\n-//       utterance: \"scroll up\",\r\n-//       // response: \"Scrolling up.\",\r\n-//       action: scrollUp,\r\n-//     },\r\n-//     {\r\n-//       utterance: \"scroll down\",\r\n-//       // response: \"Scrolling down.\",\r\n-//       action: scrollDown,\r\n-//     },\r\n-//     {\r\n-//       utterance: \"go up\",\r\n-\r\n-//       // response: \"Scrolling up.\",\r\n-//       action: scrollUp,\r\n-//     },\r\n-//     {\r\n-//       utterance: \"go down\",\r\n-//       // response: \"Scrolling down.\",\r\n-//       action: scrollDown,\r\n-//     },\r\n-//     {\r\n-//       utterance: \"scroll to top\",\r\n-//       action: scrollToTop,\r\n-//     },\r\n-//     {\r\n-//       utterance: \"scroll to bottom\",\r\n-//       action: scrollToBottom,\r\n-//     },\r\n-//     {\r\n-//       utterance: \"brane stop\",\r\n-//       action: stopListening,\r\n-//     },\r\n-//     {\r\n-//       utterance: \"brane turn off\",\r\n-//       action: stopListening,\r\n-//     },\r\n-//     {\r\n-//       utterance: \"brane stop the bot\",\r\n-//       action: stopListening,\r\n-//     },\r\n-//   ];\r\n-\r\n-//   return (\r\n-//     <div className=\"speech-bot-container\">\r\n-//       <div\r\n-//         className={`button-container ${\r\n-//           isListening ? \"voicebotframeactive\" : \"voicebotframe\"\r\n-//         }`}\r\n-//       >\r\n-//         <button onClick={isListening ? stopListening : startListening}>\r\n-//           {isListening ? \"Stop\" : \"Start\"} Animation\r\n-//         </button>\r\n-//         {/* <button onClick={toggleBotActive}>\r\n-//         {isBotActive ? 'Deactivate Bot' : 'Activate Bot'}\r\n-//       </button> \r\n-//       </div>\r\n-//     </div>\r\n-//   );\r\n-// };\r\n-\r\n-// export default VoiceBot; */\r\n-}\r\n-\r\n-//iska v1\r\n-\r\n-// import React, { useState, useEffect, useRef } from \"react\";\r\n-// import { useNavigate, useLocation } from \"react-router-dom\";\r\n-// import Fuse from \"fuse.js\";\r\n-// import \"./VoiceBot.css\";\r\n-\r\n-// const VoiceBot = ({ videoRef}) => {\r\n-//   const [isListening, setIsListening] = useState(false);\r\n-//   const [isSpeaking, setIsSpeaking] = useState(false);\r\n-//   const recognition = useRef(null);\r\n-//   const speechSynthesis = useRef(window.speechSynthesis);\r\n-//   const [hasGreeted, setHasGreeted] = useState(false);\r\n-//   const navigate = useNavigate();\r\n-\r\n-//  // Initialize speech recognition\r\n-//  useEffect(() => {\r\n-//   recognition.current = new window.webkitSpeechRecognition();\r\n-//   recognition.current.continuous = true;\r\n-//   recognition.current.interimResults = false;\r\n-//   recognition.current.onresult = onResult;\r\n-//   recognition.current.onend = onRecognitionEnd;\r\n-//   recognition.current.starting = false;\r\n-\r\n-//   recognition.current.onerror = (event) => {\r\n-//     console.error(\"Recognition error:\", event.error);\r\n-//     if (isListening && !isSpeaking) {\r\n-//       restartRecognition();\r\n-//     }\r\n-//   };\r\n-\r\n-//   return () => {\r\n-//     if (recognition.current) {\r\n-//       recognition.current.abort();\r\n-//     }\r\n-//   };\r\n-// }, []);\r\n-\r\n-//   // useEffect(() => {\r\n-//   //   const checkRecognition = () => {\r\n-//   //     if (isListening && !isSpeaking && !recognition.current.starting) {\r\n-//   //       console.log(\"Restarting recognition because it's not active.\");\r\n-//   //       recognition.current.starting = true;\r\n-//   //       recognition.current.start();\r\n-//   //       console.log(\"Restarted recognition.\");\r\n-//   //     }\r\n-//   //   };\r\n-\r\n-//   //   const recognitionCheckInterval = setInterval(checkRecognition, 100); // Check every .5 second\r\n-\r\n-//   //   return () => {\r\n-//   //     clearInterval(recognitionCheckInterval);\r\n-//   //   };\r\n-//   // }, [isListening, isSpeaking]);\r\n-\r\n-//   const historyStack = useRef([]);\r\n-\r\n-//   useEffect(() => {\r\n-//     return () => {\r\n-//       // Clean up the listener when the component unmounts\r\n-//       window.removeEventListener(\"popstate\", handlePopState);\r\n-//     };\r\n-//   }, []);\r\n-\r\n-//   const handlePopState = () => {\r\n-//     // This needs to handle both back and forward browser actions\r\n-//     // Use some logic to determine whether it's a back or forward action\r\n-//     // For simplicity, assume it's always back\r\n-//     historyStack.current.pop();\r\n-//     forwardStack.current.length = 0; // Clear forward stack on manual navigation\r\n-//   };\r\n-\r\n-//   // Add a new entry to the stack whenever navigate is called\r\n-//   const customNavigate = (to, options) => {\r\n-//     historyStack.current.push(to);\r\n-//     navigate(to, options);\r\n-//   };\r\n-\r\n-//   // Listen to popstate events to update the history stack\r\n-//   useEffect(() => {\r\n-//     window.addEventListener(\"popstate\", handlePopState);\r\n-//   }, []);\r\n-\r\n-//   const forwardStack = useRef([]);\r\n-\r\n-//   const goBack = () => {\r\n-//     if (window.history.state && window.history.state.idx > 0) {\r\n-//       window.history.back();\r\n-//       speak(\"Going back\");\r\n-//     } else {\r\n-//       speak(\"Can't go back any further.\");\r\n-//     }\r\n-//   };\r\n-\r\n-//   const goForward = () => {\r\n-//     if (window.history.state && window.history.state.idx < window.history.length - 1) {\r\n-//       window.history.forward();\r\n-//       speak(\"Going forward\");\r\n-//     } else {\r\n-//       speak(\"No forward history available.\");\r\n-//     }\r\n-//   };\r\n-\r\n-//   const playVideo = () => {\r\n-//     if (videoRef.current) {\r\n-//       videoRef.current.play();\r\n-//       speak(\"Playing video.\");\r\n-//     } else {\r\n-//       speak(\"No video to play.\");\r\n-//     }\r\n-//   };\r\n-\r\n-//   const pauseVideo = () => {\r\n-//     if (videoRef.current) {\r\n-//       videoRef.current.pause();\r\n-//       speak(\"Video paused.\");\r\n-//     } else {\r\n-//       speak(\"No video to pause.\");\r\n-//     }\r\n-//   };\r\n-\r\n-//   const scrollAmount = window.innerHeight * 0.82;\r\n-\r\n-//   const scrollUp = () => {\r\n-//     if (window.pageYOffset === 0) {\r\n-//       speak(\"Already at the top of the page.\");\r\n-//     } else {\r\n-//       window.scrollBy(0, -scrollAmount);\r\n-//       speak(\"Scrolled up.\");\r\n-//     }\r\n-//   };\r\n-\r\n-//   const scrollDown = () => {\r\n-//     const maxScrollTop =\r\n-//       document.documentElement.scrollHeight - window.innerHeight;\r\n-//     if (window.pageYOffset >= maxScrollTop) {\r\n-//       speak(\"Already at the bottom of the page.\");\r\n-//     } else {\r\n-//       window.scrollBy(0, scrollAmount);\r\n-//       speak(\"Scrolled down.\");\r\n-//     }\r\n-//   };\r\n-\r\n-//   const scrollToTop = () => {\r\n-//     if (window.pageYOffset === 0) {\r\n-//       speak(\"Already at the top of the page.\");\r\n-//     } else {\r\n-//       window.scrollTo(0, 0);\r\n-//       speak(\"Scrolled to the top of the page.\");\r\n-//     }\r\n-//   };\r\n-\r\n-//   const scrollToBottom = () => {\r\n-//     const maxScrollTop =\r\n-//       document.documentElement.scrollHeight - window.innerHeight;\r\n-//     if (window.pageYOffset >= maxScrollTop) {\r\n-//       speak(\"Already at the bottom of the page.\");\r\n-//     } else {\r\n-//       window.scrollTo(0, document.body.scrollHeight);\r\n-//       speak(\"Scrolled to the bottom of the page.\");\r\n-//     }\r\n-//   };\r\n-\r\n-//   const speak = (message) => {\r\n-//     const utterance = new SpeechSynthesisUtterance(message);\r\n-//     utterance.onend = () => {\r\n-//       setIsSpeaking(false);\r\n-//       // Restart recognition after speaking has ended\r\n-//       if (isListening) {\r\n-//         restartRecognition();\r\n-//       }\r\n-//     };\r\n-\r\n-//     setIsSpeaking(true);\r\n-//     // Stop recognition when the bot starts speaking\r\n-//     if (recognition.current) {\r\n-//       recognition.current.abort();\r\n-//     }\r\n-//     speechSynthesis.current.speak(utterance);\r\n-//   };\r\n-\r\n-//   const restartRecognition = () => {\r\n-//     // Check if recognition is not already started and if the bot is set to listen\r\n-//     if (recognition.current && !recognition.current.starting && isListening && !isSpeaking) {\r\n-//       // Only start recognition if it's not already active\r\n-//       if (recognition.current.state !== 'active') {\r\n-//         recognition.current.abort(); // Ensure any ongoing recognition is stopped\r\n-//         recognition.current.starting = true;\r\n-//         recognition.current.start();\r\n-//       }\r\n-//     }\r\n-//   };\r\n-\r\n-//     // Restart recognition when bot finishes speaking and isListening is true\r\n-//     useEffect(() => {\r\n-//       if (!isSpeaking && isListening) {\r\n-//         restartRecognition();\r\n-//       }\r\n-//     }, [isSpeaking, isListening]);\r\n-\r\n-//   const onResult = (event) => {\r\n-//     const resultIndex = event.resultIndex;\r\n-//     const transcript = event.results[resultIndex][0].transcript\r\n-//       .trim()\r\n-//       .toLowerCase();\r\n-\r\n-//     if (event.results[resultIndex].isFinal) {\r\n-//       console.log(`Recognized text: ${transcript}`);\r\n-//       if (transcript.includes(\"brain\")) {\r\n-//         console.log(\"Wake word heard, processing command...\");\r\n-//         handleCommandWithFuse(transcript.replace(\"brain\", \"\"));\r\n-//       }\r\n-//     }\r\n-//   };\r\n-\r\n-//   const onRecognitionEnd = () => {\r\n-//     recognition.current.starting = false;\r\n-//     if (isListening && !isSpeaking) {\r\n-//       restartRecognition();\r\n-//     }\r\n-//   };\r\n-\r\n-//   useEffect(() => {\r\n-//     if (isListening && !hasGreeted) {\r\n-//       speak(\"Hello, I'm Brane. How can I help you today?\");\r\n-//       setHasGreeted(true);\r\n-//     }\r\n-//   }, [isListening, hasGreeted]);\r\n-\r\n-// // Updated startListening function\r\n-// const startListening = () => {\r\n-//   setIsListening(true);\r\n-//   if (recognition.current && !recognition.current.starting) {\r\n-//     recognition.current.start();\r\n-//   }\r\n-// };\r\n-\r\n-// // Updated stopListening function\r\n-// const stopListening = () => {\r\n-//   setIsListening(false);\r\n-//   setIsSpeaking(false); // Reset speaking state\r\n-//   setHasGreeted(false); // Reset greeting state if needed\r\n-//   if (recognition.current) {\r\n-//     recognition.current.abort(); // Stop any ongoing speech recognition\r\n-//   }\r\n-//   if (speechSynthesis.current.speaking) {\r\n-//     speechSynthesis.current.cancel(); // Stop any ongoing speech synthesis\r\n-//   }\r\n-// };\r\n-\r\n-//   const handleCommandWithFuse = (command) => {\r\n-//     const fuse = new Fuse(commands, { keys: [\"utterance\"], threshold: 0.4 });\r\n-//     const results = fuse.search(command);\r\n-//     const foundCommand = results.length ? results[0].item : null;\r\n-\r\n-//     if (foundCommand) {\r\n-//       console.log(\"Command found:\", foundCommand.utterance);\r\n-\r\n-//       if (foundCommand.action) {\r\n-//         foundCommand.action();\r\n-//       } else if (foundCommand.route) {\r\n-//         navigate(foundCommand.route);\r\n-//       }\r\n-\r\n-//       // Speak after performing the action or navigation\r\n-//       speak(foundCommand.response);\r\n-//     } else {\r\n-//       console.log(\"No command found.\");\r\n-//       speak(\"I'm not sure how to respond to that.\");\r\n-//     }\r\n-//   };\r\n-\r\n-//   const commands = [\r\n-//     {\r\n-//       utterance: \"Hello who are you ?\",\r\n-\r\n-//       response:\r\n-//         \"Hi! This is Brane! your Voice bot from Brane Education How can I Assist you Today ?\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"Hello\",\r\n-\r\n-//       response: \"Hi! How can I assist you today?\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"hello\",\r\n-\r\n-//       response: \"Hi! How can I assist you today?\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"Hi.\",\r\n-\r\n-//       response: \"Hello! How can I assist you today?\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"Hey there\",\r\n-\r\n-//       response: \"Hi! How can I assist you today?\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"Good morning Brane.\",\r\n-\r\n-//       response: \"Hey Hiii! Good morning  ! How can I help you?\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"Good afternoon Brane.\",\r\n-\r\n-//       response: \"Hey Hiii! Good after noon ! How can I help you?\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"Good evening Brane.\",\r\n-\r\n-//       response: \"Hey Hiii! Good evening ! How can I help you?\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"can you please take me to login page\",\r\n-\r\n-//       route: \"/login\",\r\n-\r\n-//       response: \"Here's the Login Page, Please Login\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"please take me to login page\",\r\n-\r\n-//       route: \"/login\",\r\n-\r\n-//       response: \"Here's the Login Page, Please Login\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"Go to login page\",\r\n-\r\n-//       route: \"/login\",\r\n-\r\n-//       response: \"Here's the Login Page, Please Login\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"open login page\",\r\n-\r\n-//       route: \"/login\",\r\n-\r\n-//       response: \"Here's the Login Page, Please Login\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"can you please take me to signup page\",\r\n-\r\n-//       route: \"/signup\",\r\n-\r\n-//       response: \"Here's the signup page. Please proceed With Registration.\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"take me to signup page\",\r\n-\r\n-//       route: \"/signup\",\r\n-\r\n-//       response: \"Here's the signup page. Please proceed With Registration.\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"Go to signup page\",\r\n-\r\n-//       route: \"/signup\",\r\n-\r\n-//       response: \"Here's the signup page. Please proceed With Registration.\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"open signup page\",\r\n-\r\n-//       route: \"/signup\",\r\n-\r\n-//       response: \"Here's the signup page. Please proceed With Registration.\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"Go to face id\",\r\n-\r\n-//       route: \"/login/faceid\",\r\n-\r\n-//       response: \"Here's Face ID Login. Please proceed.\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"Go to face id login\",\r\n-\r\n-//       route: \"/login/faceid\",\r\n-\r\n-//       response: \"Here's Face ID Login. Please proceed.\",\r\n-//     },\r\n-//     {\r\n-//       utterance: \"Go to face login\",\r\n-\r\n-//       route: \"/login/faceid\",\r\n-\r\n-//       response: \"Here's Face ID Login. Please proceed.\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"login with face id\",\r\n-\r\n-//       route: \"/login/faceid\",\r\n-\r\n-//       response: \"Here's Face ID Login. Please proceed.\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"login with face\",\r\n-\r\n-//       route: \"/login/faceid\",\r\n-\r\n-//       response: \"Here's Face ID Login. Please proceed.\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"i want to login with face\",\r\n-\r\n-//       route: \"/login/faceid\",\r\n-\r\n-//       response: \"Here's Face ID Login. Please proceed.\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"login with voice\",\r\n-\r\n-//       route: \"/login/voiceid\",\r\n-\r\n-//       response: \"Here's Voice Login. Please proceed.\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"i want to login with voice\",\r\n-\r\n-//       route: \"/login/voiceid\",\r\n-\r\n-//       response: \"Here's Voice Login. Please proceed.\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"go to voice login\",\r\n-\r\n-//       route: \"/login/voiceid\",\r\n-\r\n-//       response: \"Here's Voice Login. Please proceed.\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"login with voice\",\r\n-\r\n-//       route: \"/login/voiceid\",\r\n-\r\n-//       response: \"Here's Voice Login. Please proceed.\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"login with mobile\",\r\n-\r\n-//       route: \"/login/mobile\",\r\n-\r\n-//       response: \"Here's Mobile Login. Please proceed.\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"i want to login with mobile\",\r\n-\r\n-//       route: \"/login/mobile\",\r\n-\r\n-//       response: \"Here's Mobile Login. Please proceed.\",\r\n-//     },\r\n-//     {\r\n-//       utterance: \"go to mobile login\",\r\n-\r\n-//       route: \"/login/mobile\",\r\n-\r\n-//       response: \"Here's Mobile Login. Please proceed.\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"what are platform features\",\r\n-\r\n-//       response:\r\n-//         \"Dashboard, Dynamic time table, Learning Networks, Little Masters, Video Based Dictionary, General Search.\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"Features of platform\",\r\n-\r\n-//       response:\r\n-//         \"Dashboard, Dynamic time table, Learning Networks, Little Masters, Video Based Dictionary, General Search.\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"What does the platform offer\",\r\n-\r\n-//       response:\r\n-//         \"Dashboard, Dynamic time table, Learning Networks, Little Masters, Video Based Dictionary, General Search.\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"Say me the features of platform\",\r\n-\r\n-//       response:\r\n-//         \"Dashboard, Dynamic time table, Learning Networks, Little Masters, Video Based Dictionary, General Search.\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"Say me the services of platform\",\r\n-\r\n-//       response:\r\n-//         \"Dashboard, Dynamic time table, Learning Networks, Little Masters, Video Based Dictionary, General Search.\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"tell me the services offered by the platform\",\r\n-\r\n-//       response:\r\n-//         \"Dashboard, Dynamic time table, Learning Networks, Little Masters, Video Based Dictionary, General Search.\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"explain platform services\",\r\n-\r\n-//       response:\r\n-//         \"Dashboard, Dynamic time table, Learning Networks, Little Masters, Video Based Dictionary, General Search.\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"Give me the Parent voice of Julia Harris\",\r\n-\r\n-//       response:\r\n-//         \"Brane education has helped my son a lot in his studies. He improved a lot in his studies and is now able to score good marks in his exams\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"Play today's motivational video\",\r\n-\r\n-//       response: \"I am playing the video\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"Play today's video\",\r\n-\r\n-//       response: \"I am playing Motivational video\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"Leaders Voice\",\r\n-\r\n-//       response:\r\n-//         \"This Voice-interactive AI Platform is a game Changer. It revolutionizes education.\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"Curriculum Supported by Brane Education\",\r\n-\r\n-//       response:\r\n-//         \"we support multiple Boards let me say few Telangana State Board Andhra Pradesh Board Maharashtra Board Assam Board\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"Boards supported by the platform\",\r\n-\r\n-//       response:\r\n-//         \"we support multiple Boards let me say few Telangana State Board Andhra Pradesh Board Maharashtra Board Assam Board\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"Curriculum\",\r\n-\r\n-//       response:\r\n-//         \"we support multiple Boards let me say few Telangana State Board Andhra Pradesh Board Maharashtra Board Assam Board\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"Go to landing page\",\r\n-\r\n-//       response: \"Okay, I am taking you to the landing page.\",\r\n-\r\n-//       route: \"/childpage\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"take me to landing page\",\r\n-\r\n-//       response: \"Okay, I am taking you to the landing page.\",\r\n-\r\n-//       route: \"/childpage\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"move to landing page\",\r\n-\r\n-//       response: \"Okay, I am taking you to the landing page.\",\r\n-\r\n-//       route: \"/childpage\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"roll back to landing page\",\r\n-\r\n-//       response: \"Okay, I am taking you to the landing page.\",\r\n-\r\n-//       route: \"/childpage\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"move to landing page\",\r\n-\r\n-//       response: \"Okay, I am taking you to the landing page.\",\r\n-\r\n-//       route: \"/childpage\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"what is today's quote\",\r\n-\r\n-//       response:\r\n-//         \"Determination is the power that sees us through all our frustration and obstacles. It helps in building our willpower which is the very basis of success.\",\r\n-\r\n-//       route: \"/childpage\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"Today's Inspirational quote\",\r\n-\r\n-//       response:\r\n-//         \"Determination is the power that sees us through all our frustration and obstacles. It helps in building our willpower which is the very basis of success.\",\r\n-\r\n-//       route: \"/childpage\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"say me today's quote\",\r\n-\r\n-//       response:\r\n-//         \"Determination is the power that sees us through all our frustration and obstacles. It helps in building our willpower which is the very basis of success.\",\r\n-\r\n-//       route: \"/childpage\",\r\n-//     },\r\n-//     {\r\n-//       utterance: \"go back\",\r\n-//       response: \"\",\r\n-//       action: goBack, // Note the use of an action property\r\n-//     },\r\n-//     {\r\n-//       utterance: \"go forward\",\r\n-//       response: \"\",\r\n-//       action: goForward,\r\n-//     },\r\n-//     {\r\n-//       utterance: \"play video\",\r\n-//       // response: \"Playing video.\",\r\n-//       action: playVideo,\r\n-//     },\r\n-//     {\r\n-//       utterance: \"pause video\",\r\n-//       // response: \"Pausing video.\",\r\n-//       action: pauseVideo,\r\n-//     },\r\n-//     {\r\n-//       utterance: \"start video\",\r\n-//       // response: \"Playing video.\",\r\n-//       action: playVideo,\r\n-//     },\r\n-//     {\r\n-//       utterance: \"stop video\",\r\n-//       // response: \"Playing video.\",\r\n-//       action: pauseVideo,\r\n-//     },\r\n-//     {\r\n-//       utterance: \"scroll up\",\r\n-//       // response: \"Scrolling up.\",\r\n-//       action: scrollUp,\r\n-//     },\r\n-//     {\r\n-//       utterance: \"scroll down\",\r\n-//       // response: \"Scrolling down.\",\r\n-//       action: scrollDown,\r\n-//     },\r\n-//     {\r\n-//       utterance: \"go up\",\r\n-\r\n-//       // response: \"Scrolling up.\",\r\n-//       action: scrollUp,\r\n-//     },\r\n-//     {\r\n-//       utterance: \"go down\",\r\n-//       // response: \"Scrolling down.\",\r\n-//       action: scrollDown,\r\n-//     },\r\n-//     {\r\n-//       utterance: \"scroll to top\",\r\n-//       action: scrollToTop,\r\n-//     },\r\n-//     {\r\n-//       utterance: \"scroll to bottom\",\r\n-//       action: scrollToBottom,\r\n-//     },\r\n-//     {\r\n-//       utterance: \"brane stop\",\r\n-//       action: stopListening,\r\n-//     },\r\n-//     {\r\n-//       utterance: \"brane turn off\",\r\n-//       action: stopListening,\r\n-//     },\r\n-//     {\r\n-//       utterance: \"brane stop the bot\",\r\n-//       action: stopListening,\r\n-//     },\r\n-//   ];\r\n-\r\n-//   return (\r\n-//     <div className=\"speech-bot-container\">\r\n-//       <div\r\n-//         className={`button-container ${\r\n-//           isListening ? \"voicebotframeactive\" : \"voicebotframe\"\r\n-//         }`}\r\n-//       >\r\n-//         <button onClick={isListening ? stopListening : startListening}>\r\n-//           {isListening ? \"Stop\" : \"Start\"} Animation\r\n-//         </button>\r\n-//         {/* <button onClick={toggleBotActive}>\r\n-//         {isBotActive ? 'Deactivate Bot' : 'Activate Bot'}\r\n-//       </button> */}\r\n-//       </div>\r\n-//     </div>\r\n-//   );\r\n-// };\r\n-\r\n-// export default VoiceBot;\r\n-\r\n-//Bot Video added but some start issues\r\n-\r\n-// import React, { useState, useEffect, useRef } from \"react\";\r\n-// import { useNavigate, useLocation } from \"react-router-dom\";\r\n-// import Fuse from \"fuse.js\";\r\n-// import \"./VoiceBot.css\";\r\n-\r\n-// const VoiceBot = ({ videoRef }) => {\r\n-//   const [isListening, setIsListening] = useState(false);\r\n-//   const [isSpeaking, setIsSpeaking] = useState(false);\r\n-//   const recognition = useRef(null);\r\n-//   const speechSynthesis = useRef(window.speechSynthesis);\r\n-//   const hasGreeted = useRef(false);\r\n-//   const restartRecognitionTimeout = useRef(null);\r\n-//   const navigate = useNavigate();\r\n-//   const location = useLocation();\r\n-//   const [isRecognitionActive, setIsRecognitionActive] = useState(false); // New state to track recognition status\r\n-\r\n-//   useEffect(() => {\r\n-//     recognition.current = new window.webkitSpeechRecognition();\r\n-//     recognition.current.continuous = true;\r\n-//     recognition.current.interimResults = false;\r\n-//     recognition.current.onresult = onResult;\r\n-//     recognition.current.onend = () => {\r\n-//       console.log(\"Recognition ended.\");\r\n-//       if (isListening) {\r\n-//         startListening();\r\n-//       }\r\n-//     };\r\n-//     recognition.current.onerror = (event) => {\r\n-//       console.error(\"Recognition error:\", event.error);\r\n-//     };\r\n-\r\n-//     return () => {\r\n-//       recognition.current.abort();\r\n-//     };\r\n-//   }, []);\r\n-\r\n-//   // Update useEffect for managing the recognition state based on isListening and isRecognitionActive\r\n-//   useEffect(() => {\r\n-//     if (isListening && !isRecognitionActive) {\r\n-//       startListening();\r\n-//     } else if (!isListening && isRecognitionActive) {\r\n-//       stopListening();\r\n-//     }\r\n-//   }, [isListening, isRecognitionActive]);\r\n-\r\n-//   const goBack = () => {\r\n-//     if (window.history.length > 1) {\r\n-//       navigate(-1);\r\n-//     } else {\r\n-//       speak(\"Can't go back any further.\");\r\n-//     }\r\n-//   };\r\n-\r\n-//   const goForward = () => {\r\n-//     // Unfortunately, there's no direct way to check if you can go forward in the history.\r\n-//     // You might need to manage this state manually based on user navigation.\r\n-//     navigate(1);\r\n-//   };\r\n-\r\n-//   const playVideo = () => {\r\n-//     if (videoRef.current && !videoRef.current.paused) {\r\n-//       speak(\"Video is already playing.\");\r\n-//     } else if (videoRef.current) {\r\n-//       videoRef.current.play();\r\n-//       speak(\"Playing video.\");\r\n-//     } else {\r\n-//       speak(\"No video to play.\");\r\n-//     }\r\n-//   };\r\n-\r\n-//   const pauseVideo = () => {\r\n-//     if (videoRef.current && videoRef.current.paused) {\r\n-//       speak(\"Video is already paused.\");\r\n-//     } else if (videoRef.current) {\r\n-//       videoRef.current.pause();\r\n-//       speak(\"Video paused.\");\r\n-//     } else {\r\n-//       speak(\"No video to pause.\");\r\n-//     }\r\n-//   };\r\n-\r\n-//   const scrollAmount = window.innerHeight * 0.82;\r\n-\r\n-//   const scrollUp = () => {\r\n-//     if (window.pageYOffset === 0) {\r\n-//       speak(\"Already at the top of the page.\");\r\n-//     } else {\r\n-//       window.scrollBy(0, -scrollAmount);\r\n-//       speak(\"Scrolled up.\");\r\n-//     }\r\n-//   };\r\n-\r\n-//   const scrollDown = () => {\r\n-//     const maxScrollTop =\r\n-//       document.documentElement.scrollHeight - window.innerHeight;\r\n-//     if (window.pageYOffset >= maxScrollTop) {\r\n-//       speak(\"Already at the bottom of the page.\");\r\n-//     } else {\r\n-//       window.scrollBy(0, scrollAmount);\r\n-//       speak(\"Scrolled down.\");\r\n-//     }\r\n-//   };\r\n-\r\n-//   const scrollToTop = () => {\r\n-//     if (window.pageYOffset === 0) {\r\n-//       speak(\"Already at the top of the page.\");\r\n-//     } else {\r\n-//       window.scrollTo(0, 0);\r\n-//       speak(\"Scrolled to the top of the page.\");\r\n-//     }\r\n-//   };\r\n-\r\n-//   const scrollToBottom = () => {\r\n-//     const maxScrollTop =\r\n-//       document.documentElement.scrollHeight - window.innerHeight;\r\n-//     if (window.pageYOffset >= maxScrollTop) {\r\n-//       speak(\"Already at the bottom of the page.\");\r\n-//     } else {\r\n-//       window.scrollTo(0, document.body.scrollHeight);\r\n-//       speak(\"Scrolled to the bottom of the page.\");\r\n-//     }\r\n-//   };\r\n-\r\n-//   // const speak = (message) => {\r\n-//   //   const utterance = new SpeechSynthesisUtterance(message);\r\n-//   //   utterance.onend = () => {\r\n-//   //     setIsSpeaking(false);\r\n-//   //     console.log(\"Speaking ended.\");\r\n-//   //     // Only restart recognition if we're still supposed to be listening\r\n-//   //     // if (isListening) {\r\n-//   //     //   if (restartRecognitionTimeout.current) {\r\n-//   //     //     clearTimeout(restartRecognitionTimeout.current);\r\n-//   //     //   }\r\n-//   //     //   restartRecognitionTimeout.current = setTimeout(() => {\r\n-//   //     //     console.log(\"Recognition restarted.\");\r\n-//   //     //     recognition.current.start();\r\n-//   //     //   }, 100); // Delay to prevent immediate restart\r\n-//   //     // }\r\n-//   //     if (isListening && !recognition.current.starting) { // Check the flag before restarting\r\n-//   //       recognition.current.starting = true; // Set the flag when starting recognition\r\n-//   //       recognition.current.start();\r\n-//   //     }\r\n-//   //   };\r\n-\r\n-//   //   setIsSpeaking(true);\r\n-//   //   console.log(\"Speaking started.\");\r\n-//   //   recognition.current.stop(); // Stop recognition when the bot starts speaking\r\n-//   //   speechSynthesis.current.speak(utterance);\r\n-//   // };\r\n-\r\n-//   const speak = (message) => {\r\n-//     console.log(\"speak function called with message:\", message);\r\n-//     const utterance = new SpeechSynthesisUtterance(message);\r\n-//     utterance.onend = () => {\r\n-//       setIsSpeaking(false);\r\n-//       console.log(\"Speaking ended.\");\r\n-//       // Directly handle the restart of recognition here if needed\r\n-//       if (isListening) {\r\n-//         startListening();\r\n-//       }\r\n-//     };\r\n-\r\n-//     setIsSpeaking(true);\r\n-//     console.log(\"Speaking started.\");\r\n-//     recognition.current.stop(); // Ensure to stop recognition before speaking\r\n-//     speechSynthesis.current.speak(utterance);\r\n-//   };\r\n-\r\n-//   const onResult = (event) => {\r\n-//     const resultIndex = event.resultIndex;\r\n-//     const transcript = event.results[resultIndex][0].transcript\r\n-//       .trim()\r\n-//       .toLowerCase();\r\n-\r\n-//     if (event.results[resultIndex].isFinal) {\r\n-//       console.log(`Recognized text: ${transcript}`);\r\n-//       if (transcript.includes(\"brain\")) {\r\n-//         console.log(\"Wake word heard, processing command...\");\r\n-//         handleCommandWithFuse(transcript.replace(\"brain\", \"\"));\r\n-//       }\r\n-//     }\r\n-//   };\r\n-\r\n-//   // const onRecognitionEnd = () => {\r\n-//   //   console.log(\"Recognition ended.\");\r\n-//   //   setIsRecognitionActive(false); // Update state when recognition ends\r\n-//   //   recognition.current.starting = false; // Reset the flag when recognition ends\r\n-//   //   // We now check if the recognition is already running before starting it again\r\n-//   //   if (isListening && !isSpeaking && !recognition.current?.starting) {\r\n-//   //     console.log(\"Restarting recognition.\");\r\n-//   //     recognition.current.start();\r\n-//   //   }\r\n-//   // };\r\n-\r\n-//   // useEffect(() => {\r\n-//   //   if (isListening && !hasGreeted.current) {\r\n-//   //     speak(\"Hello, I'm Brane. How can I assist you today?\");\r\n-//   //     hasGreeted.current = true;\r\n-//   //   } else if (isListening && !isSpeaking) {\r\n-//   //     recognition.current.start();\r\n-//   //   }\r\n-//   // }, [isListening, isSpeaking]);\r\n-\r\n-//   useEffect(() => {\r\n-//     if (isListening && !hasGreeted.current) {\r\n-//       speak(\"Hello, I'm Brane. How can I assist you today?\");\r\n-//       hasGreeted.current = true;\r\n-//     } else if (isListening && !isSpeaking && !recognition.current.starting) {\r\n-//       // Check the flag before starting\r\n-//       recognition.current.starting = true; // Set the flag when starting recognition\r\n-//       recognition.current.start();\r\n-//     }\r\n-//   }, [isListening, isSpeaking]);\r\n-\r\n-//   // const startListening = () => {\r\n-//   //   console.log(\"Attempting to start listening.\");\r\n-//   //   if (recognition.current && !recognition.current.starting) {\r\n-//   //     setIsListening(true);\r\n-//   //     recognition.current.starting = true; // Set the flag when starting recognition\r\n-//   //     recognition.current.start();\r\n-//   //     console.log(\"Listening started.\");\r\n-//   //   }\r\n-//   // };\r\n-\r\n-//   // const stopListening = () => {\r\n-//   //   console.log(\"Stopping listening.\");\r\n-\r\n-//   //   setIsListening(false);\r\n-//   //   recognition.current.stop();\r\n-//   //   if (speechSynthesis.current.speaking) {\r\n-//   //     speechSynthesis.current.cancel();\r\n-//   //   }\r\n-//   //   if (restartRecognitionTimeout.current) {\r\n-//   //     clearTimeout(restartRecognitionTimeout.current);\r\n-//   //   }\r\n-//   //   console.log(\"Listening stopped.\");\r\n-//   // };\r\n-//   // Handle start and stop listening logic\r\n-//   const startListening = () => {\r\n-//     console.log(\"Attempting to start listening.\");\r\n-//     if (!recognition.current.starting) {\r\n-//       setIsListening(true);\r\n-//       recognition.current.starting = true;\r\n-//       recognition.current.start();\r\n-//       console.log(\"Listening started.\");\r\n-//     } else {\r\n-//       console.log(\"Recognition already active.\");\r\n-//     }\r\n-//   };\r\n-\r\n-//   const stopListening = () => {\r\n-//     console.log(\"Stopping listening.\");\r\n-//     if (recognition.current.starting) {\r\n-//       setIsListening(false);\r\n-//       recognition.current.starting = false;\r\n-//       recognition.current.stop();\r\n-//       console.log(\"Listening stopped.\");\r\n-//     } else {\r\n-//       console.log(\"Recognition already inactive.\");\r\n-//     }\r\n-//   };\r\n-\r\n-//   // const handleCommandWithFuse = (command) => {\r\n-//   //   const fuse = new Fuse(commands, { keys: [\"utterance\"], threshold: 0.4 });\r\n-//   //   const results = fuse.search(command);\r\n-//   //   const foundCommand = results.length ? results[0].item : null;\r\n-\r\n-//   //   if (foundCommand) {\r\n-//   //     console.log(\"Command found:\", foundCommand.utterance);\r\n-//   //     speak(foundCommand.response);\r\n-//   //     if (foundCommand.route) {\r\n-//   //       navigate(foundCommand.route); // Navigate to the route specified in the command\r\n-//   //     }\r\n-//   //   } else {\r\n-//   //     console.log(\"No command found.\");\r\n-//   //     speak(\"I'm not sure how to respond to that.\");\r\n-//   //   }\r\n-//   // };\r\n-\r\n-//   const handleCommandWithFuse = (command) => {\r\n-//     const fuse = new Fuse(commands, { keys: [\"utterance\"], threshold: 0.4 });\r\n-//     const results = fuse.search(command);\r\n-//     const foundCommand = results.length ? results[0].item : null;\r\n-\r\n-//     if (foundCommand) {\r\n-//       console.log(\"Command found:\", foundCommand.utterance);\r\n-\r\n-//       if (foundCommand.route) {\r\n-//         if (location.pathname !== foundCommand.route) {\r\n-//           navigate(foundCommand.route);\r\n-//           speak(\r\n-//             `Navigating to ${\r\n-//               foundCommand.routeDescription || \"requested page\"\r\n-//             }.`\r\n-//           );\r\n-//         } else {\r\n-//           speak(\r\n-//             `You are already on the ${\r\n-//               foundCommand.routeDescription || \"requested page\"\r\n-//             }.`\r\n-//           );\r\n-//         }\r\n-//       } else if (foundCommand.action) {\r\n-//         foundCommand.action();\r\n-//       }\r\n-\r\n-//       if (foundCommand.response) {\r\n-//         speak(foundCommand.response);\r\n-//       }\r\n-//     } else {\r\n-//       console.log(\"No command found.\");\r\n-//       speak(\"I'm not sure how to respond to that.\");\r\n-//     }\r\n-//   };\r\n-\r\n-//   const commands = [\r\n-//     {\r\n-//       utterance: \"Hello who are you ?\",\r\n-\r\n-//       response:\r\n-//         \"Hi! This is Brane! your Voice bot from Brane Education How can I Assist you Today ?\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"Hello\",\r\n-\r\n-//       response: \"Hi! How can I assist you today?\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"hello\",\r\n-\r\n-//       response: \"Hi! How can I assist you today?\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"Hi.\",\r\n-\r\n-//       response: \"Hello! How can I assist you today?\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"Hey there\",\r\n-\r\n-//       response: \"Hi! How can I assist you today?\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"Good morning Brane.\",\r\n-\r\n-//       response: \"Hey Hiii! Good morning  ! How can I help you?\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"Good afternoon Brane.\",\r\n-\r\n-//       response: \"Hey Hiii! Good after noon ! How can I help you?\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"Good evening Brane.\",\r\n-\r\n-//       response: \"Hey Hiii! Good evening ! How can I help you?\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"can you please take me to login page\",\r\n-//       route: \"/login\",\r\n-//       routeDescription: \"login page\",\r\n-//       response: \"Navigating to the login page.\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"go to login page\",\r\n-//       route: \"/login\",\r\n-//       routeDescription: \"login page\",\r\n-//       response: \"Navigating to the login page.\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"please take me to login page\",\r\n-//       route: \"/login\",\r\n-//       routeDescription: \"login page\",\r\n-//       response: \"Navigating to the login page.\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"Go to login page\",\r\n-//       route: \"/login\",\r\n-//       routeDescription: \"login page\",\r\n-//       response: \"Navigating to the login page.\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"open login page\",\r\n-//       route: \"/login\",\r\n-//       routeDescription: \"login page\",\r\n-//       response: \"Navigating to the login page.\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"can you please take me to signup page\",\r\n-//       route: \"/signup\",\r\n-//       routeDescription: \"signup page\",\r\n-//       response: \"Navigating to the signup page.\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"take me to signup page\",\r\n-//       route: \"/signup\",\r\n-//       routeDescription: \"signup page\",\r\n-//       response: \"Navigating to the signup page.\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"Go to signup page\",\r\n-//       route: \"/signup\",\r\n-//       routeDescription: \"signup page\",\r\n-//       response: \"Navigating to the signup page.\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"open signup page\",\r\n-//       route: \"/signup\",\r\n-//       routeDescription: \"signup page\",\r\n-//       response: \"Navigating to the signup page.\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"what are platform features\",\r\n-\r\n-//       response:\r\n-//         \"Dashboard, Dynamic time table, Learning Networks, Little Masters, Video Based Dictionary, General Search.\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"Features of platform\",\r\n-\r\n-//       response:\r\n-//         \"Dashboard, Dynamic time table, Learning Networks, Little Masters, Video Based Dictionary, General Search.\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"What does the platform offer\",\r\n-\r\n-//       response:\r\n-//         \"Dashboard, Dynamic time table, Learning Networks, Little Masters, Video Based Dictionary, General Search.\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"Say me the features of platform\",\r\n-\r\n-//       response:\r\n-//         \"Dashboard, Dynamic time table, Learning Networks, Little Masters, Video Based Dictionary, General Search.\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"Say me the services of platform\",\r\n-\r\n-//       response:\r\n-//         \"Dashboard, Dynamic time table, Learning Networks, Little Masters, Video Based Dictionary, General Search.\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"tell me the services offered by the platform\",\r\n-\r\n-//       response:\r\n-//         \"Dashboard, Dynamic time table, Learning Networks, Little Masters, Video Based Dictionary, General Search.\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"explain platform services\",\r\n-\r\n-//       response:\r\n-//         \"Dashboard, Dynamic time table, Learning Networks, Little Masters, Video Based Dictionary, General Search.\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"Give me the Parent voice of Julia Harris\",\r\n-\r\n-//       response:\r\n-//         \"Brane education has helped my son a lot in his studies. He improved a lot in his studies and is now able to score good marks in his exams\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"Play today's motivational video\",\r\n-\r\n-//       response: \"I am playing the video\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"Play today's video\",\r\n-\r\n-//       response: \"I am playing Motivational video\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"Leaders Voice\",\r\n-\r\n-//       response:\r\n-//         \"This Voice-interactive AI Platform is a game Changer. It revolutionizes education.\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"Curriculum Supported by Brane Education\",\r\n-\r\n-//       response:\r\n-//         \"we support multiple Boards let me say few Telangana State Board Andhra Pradesh Board Maharashtra Board Assam Board\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"Boards supported by the platform\",\r\n-\r\n-//       response:\r\n-//         \"we support multiple Boards let me say few Telangana State Board Andhra Pradesh Board Maharashtra Board Assam Board\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"Curriculum\",\r\n-\r\n-//       response:\r\n-//         \"we support multiple Boards let me say few Telangana State Board Andhra Pradesh Board Maharashtra Board Assam Board\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"Go to landing page\",\r\n-\r\n-//       response: \"Okay, I am taking you to the landing page.\",\r\n-\r\n-//       route: \"/childpage\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"take me to landing page\",\r\n-\r\n-//       response: \"Okay, I am taking you to the landing page.\",\r\n-\r\n-//       route: \"/childpage\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"move to landing page\",\r\n-\r\n-//       response: \"Okay, I am taking you to the landing page.\",\r\n-\r\n-//       route: \"/childpage\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"roll back to landing page\",\r\n-\r\n-//       response: \"Okay, I am taking you to the landing page.\",\r\n-\r\n-//       route: \"/childpage\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"move to landing page\",\r\n-\r\n-//       response: \"Okay, I am taking you to the landing page.\",\r\n-\r\n-//       route: \"/childpage\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"what is today's quote\",\r\n-\r\n-//       response:\r\n-//         \"Determination is the power that sees us through all our frustration and obstacles. It helps in building our willpower which is the very basis of success.\",\r\n-\r\n-//       // route: \"/childpage\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"Today's Inspirational quote\",\r\n-\r\n-//       response:\r\n-//         \"Determination is the power that sees us through all our frustration and obstacles. It helps in building our willpower which is the very basis of success.\",\r\n-\r\n-//       // route: \"/childpage\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"say me today's quote\",\r\n-\r\n-//       response:\r\n-//         \"Determination is the power that sees us through all our frustration and obstacles. It helps in building our willpower which is the very basis of success.\",\r\n-\r\n-//       // route: \"/childpage\",\r\n-//     },\r\n-//     {\r\n-//       utterance: \"go back\",\r\n-//       response: \"Going back.\",\r\n-//       action: goBack, // Note the use of an action property\r\n-//     },\r\n-//     {\r\n-//       utterance: \"go forward\",\r\n-//       response: \"Going forward.\",\r\n-//       action: goForward,\r\n-//     },\r\n-//     {\r\n-//       utterance: \"play video\",\r\n-//       // response: \"Playing video.\",\r\n-//       action: playVideo,\r\n-//     },\r\n-//     {\r\n-//       utterance: \"pause video\",\r\n-//       // response: \"Pausing video.\",\r\n-//       action: pauseVideo,\r\n-//     },\r\n-//     {\r\n-//       utterance: \"start video\",\r\n-//       // response: \"Playing video.\",\r\n-//       action: playVideo,\r\n-//     },\r\n-//     {\r\n-//       utterance: \"stop video\",\r\n-//       // response: \"Playing video.\",\r\n-//       action: pauseVideo,\r\n-//     },\r\n-//     {\r\n-//       utterance: \"scroll up\",\r\n-//       // response: \"Scrolling up.\",\r\n-//       action: scrollUp,\r\n-//     },\r\n-//     {\r\n-//       utterance: \"scroll down\",\r\n-//       // response: \"Scrolling down.\",\r\n-//       action: scrollDown,\r\n-//     },\r\n-//     {\r\n-//       utterance: \"go up\",\r\n-\r\n-//       // response: \"Scrolling up.\",\r\n-//       action: scrollUp,\r\n-//     },\r\n-//     {\r\n-//       utterance: \"go down\",\r\n-//       // response: \"Scrolling down.\",\r\n-//       action: scrollDown,\r\n-//     },\r\n-//     {\r\n-//       utterance: \"scroll to top\",\r\n-//       action: scrollToTop,\r\n-//     },\r\n-//     {\r\n-//       utterance: \"scroll to bottom\",\r\n-//       action: scrollToBottom,\r\n-//     },\r\n-//   ];\r\n-//   return (\r\n-//     <div className=\"speech-bot-container\">\r\n-//       <div\r\n-//         className={`button-container ${\r\n-//           isListening ? \"voicebotframeactive\" : \"voicebotframe\"\r\n-//         }`}\r\n-//       >\r\n-//         <div onClick={isListening ? stopListening : startListening}>\r\n-//           <iframe\r\n-//             src={\r\n-//               isListening\r\n-//                 ? \"https://lottie.host/?file=a89aca3f-5407-4052-82c3-2048afca7a9f/NpCdWzLSKD.json\"\r\n-//                 : \"https://lottie.host/?file=d2b6cc0e-fe95-4847-85b5-35365fca7e00/vTudpCuPZq.json\"\r\n-//             }\r\n-//             width=\"120\" // Set your desired width\r\n-//             height=\"120\" // Set your desired height\r\n-//             title={isListening ? \"Stop Animation\" : \"Start Animation\"}\r\n-//             className={isListening ? \"voicebotframeactive\" : \"voicebotframe\"}\r\n-//           ></iframe>\r\n-//           {isListening ? (\r\n-//             <div className=\"overlay\" onClick={stopListening}></div>\r\n-//           ) : (\r\n-//             <div className=\"overlay\" onClick={startListening}></div>\r\n-//           )}\r\n-//         </div>\r\n-//       </div>\r\n-//     </div>\r\n-//   );\r\n-// };\r\n-\r\n-// export default VoiceBot;\r\n-\r\n-// All functionalities but messed up\r\n-\r\n-// import React, { useState, useEffect, useRef } from \"react\";\r\n-// import { useNavigate, useLocation } from \"react-router-dom\";\r\n-// import Fuse from \"fuse.js\";\r\n-// import \"./VoiceBot.css\";\r\n-\r\n-// const VoiceBot = ({ videoRef, takeTestRef, goBackRef }) => {\r\n-//   const [isListening, setIsListening] = useState(false);\r\n-//   const [isSpeaking, setIsSpeaking] = useState(false);\r\n-//   const recognition = useRef(null);\r\n-//   const speechSynthesis = useRef(window.speechSynthesis);\r\n-//   const hasGreeted = useRef(false);\r\n-//   const navigate = useNavigate();\r\n-//   const location = useLocation();\r\n-//   const isRecognitionActive = useRef(false);\r\n-\r\n-//   useEffect(() => {\r\n-//     recognition.current = new window.webkitSpeechRecognition();\r\n-//     recognition.current.continuous = true;\r\n-//     recognition.current.interimResults = false;\r\n-//     recognition.current.onresult = onResult;\r\n-//     recognition.current.onend = onRecognitionEnd;\r\n-\r\n-//     return () => {\r\n-//       if (recognition.current) {\r\n-//         recognition.current.abort();\r\n-//       }\r\n-//     };\r\n-//   }, [location.pathname]);\r\n-\r\n-//   const onResult = (event) => {\r\n-//     const resultIndex = event.resultIndex;\r\n-//     const transcript = event.results[resultIndex][0].transcript\r\n-//       .trim()\r\n-//       .toLowerCase();\r\n-\r\n-//     if (event.results[resultIndex].isFinal) {\r\n-//       console.log(`Recognized text: ${transcript}`);\r\n-//       if (transcript.includes(\"brain\")) {\r\n-//         console.log(\"Wake word heard, processing command...\");\r\n-//         handleCommandWithFuse(transcript.replace(\"brain\", \"\"));\r\n-//       }\r\n-//     }\r\n-//   };\r\n-\r\n-//   const startListening = () => {\r\n-//     if (!isRecognitionActive.current) {\r\n-//       setIsListening(true);\r\n-//       recognition.current.start();\r\n-//       isRecognitionActive.current = true;\r\n-//     }\r\n-//   };\r\n-\r\n-//   const stopListening = () => {\r\n-//     if (isRecognitionActive.current) {\r\n-//       setIsListening(false);\r\n-//       recognition.current.stop();\r\n-//       isRecognitionActive.current = false;\r\n-//     }\r\n-//   };\r\n-\r\n-//   const onRecognitionEnd = () => {\r\n-//     isRecognitionActive.current = false;\r\n-//     if (isListening) {\r\n-//       startListening();\r\n-//     }\r\n-//   };\r\n-\r\n-//   const speak = (message) => {\r\n-//     const utterance = new SpeechSynthesisUtterance(message);\r\n-//     utterance.onend = () => {\r\n-//       setIsSpeaking(false);\r\n-//       if (isListening && !isRecognitionActive.current) {\r\n-//         startListening();\r\n-//       }\r\n-//     };\r\n-\r\n-//     setIsSpeaking(true);\r\n-//     if (isRecognitionActive.current) {\r\n-//       stopListening(); // Adjusted to use stopListening\r\n-//     }\r\n-//     speechSynthesis.current.speak(utterance);\r\n-//   };\r\n-\r\n-//   useEffect(() => {\r\n-//     if (isListening && !hasGreeted.current) {\r\n-//       speak(\"Hello, I'm Brane. How can I assist you today?\");\r\n-//       hasGreeted.current = true;\r\n-//     }\r\n-//   }, [isListening]);\r\n-\r\n-//   const goBack = () => {\r\n-//     if (window.history.length > 1) {\r\n-//       navigate(-1);\r\n-//     } else {\r\n-//       speak(\"Can't go back any further.\");\r\n-//     }\r\n-//   };\r\n-\r\n-//   const goForward = () => {\r\n-//     // Unfortunately, there's no direct way to check if you can go forward in the history.\r\n-//     // You might need to manage this state manually based on user navigation.\r\n-//     navigate(1);\r\n-//   };\r\n-\r\n-//   const playVideo = () => {\r\n-//     if (videoRef.current && !videoRef.current.paused) {\r\n-//       speak(\"Video is already playing.\");\r\n-//     } else if (videoRef.current) {\r\n-//       videoRef.current.play();\r\n-//       speak(\"Playing video.\");\r\n-//     } else {\r\n-//       speak(\"No video to play.\");\r\n-//     }\r\n-//   };\r\n-\r\n-//   const pauseVideo = () => {\r\n-//     if (videoRef.current && videoRef.current.paused) {\r\n-//       speak(\"Video is already paused.\");\r\n-//     } else if (videoRef.current) {\r\n-//       videoRef.current.pause();\r\n-//       speak(\"Video paused.\");\r\n-//     } else {\r\n-//       speak(\"No video to pause.\");\r\n-//     }\r\n-//   };\r\n-\r\n-//   const scrollAmount = window.innerHeight * 0.82;\r\n-\r\n-//   const scrollUp = () => {\r\n-//     if (window.pageYOffset === 0) {\r\n-//       speak(\"Already at the top of the page.\");\r\n-//     } else {\r\n-//       window.scrollBy(0, -scrollAmount);\r\n-//       speak(\"Scrolled up.\");\r\n-//     }\r\n-//   };\r\n-\r\n-//   const scrollDown = () => {\r\n-//     const maxScrollTop =\r\n-//       document.documentElement.scrollHeight - window.innerHeight;\r\n-//     if (window.pageYOffset >= maxScrollTop) {\r\n-//       speak(\"Already at the bottom of the page.\");\r\n-//     } else {\r\n-//       window.scrollBy(0, scrollAmount);\r\n-//       speak(\"Scrolled down.\");\r\n-//     }\r\n-//   };\r\n-\r\n-//   const scrollToTop = () => {\r\n-//     if (window.pageYOffset === 0) {\r\n-//       speak(\"Already at the top of the page.\");\r\n-//     } else {\r\n-//       window.scrollTo(0, 0);\r\n-//       speak(\"Scrolled to the top of the page.\");\r\n-//     }\r\n-//   };\r\n-\r\n-//   const scrollToBottom = () => {\r\n-//     const maxScrollTop =\r\n-//       document.documentElement.scrollHeight - window.innerHeight;\r\n-//     if (window.pageYOffset >= maxScrollTop) {\r\n-//       speak(\"Already at the bottom of the page.\");\r\n-//     } else {\r\n-//       window.scrollTo(0, document.body.scrollHeight);\r\n-//       speak(\"Scrolled to the bottom of the page.\");\r\n-//     }\r\n-//   };\r\n-\r\n-//   // const speak = (message) => {\r\n-//   //   const utterance = new SpeechSynthesisUtterance(message);\r\n-//   //   utterance.onend = () => {\r\n-//   //     setIsSpeaking(false);\r\n-//   //     console.log(\"Speaking ended.\");\r\n-//   //     // Only restart recognition if we're still supposed to be listening\r\n-//   //     // if (isListening) {\r\n-//   //     //   if (restartRecognitionTimeout.current) {\r\n-//   //     //     clearTimeout(restartRecognitionTimeout.current);\r\n-//   //     //   }\r\n-//   //     //   restartRecognitionTimeout.current = setTimeout(() => {\r\n-//   //     //     console.log(\"Recognition restarted.\");\r\n-//   //     //     recognition.current.start();\r\n-//   //     //   }, 100); // Delay to prevent immediate restart\r\n-//   //     // }\r\n-//   //     if (isListening && !recognition.current.starting) { // Check the flag before restarting\r\n-//   //       recognition.current.starting = true; // Set the flag when starting recognition\r\n-//   //       recognition.current.start();\r\n-//   //     }\r\n-//   //   };\r\n-\r\n-//   //   setIsSpeaking(true);\r\n-//   //   console.log(\"Speaking started.\");\r\n-//   //   recognition.current.stop(); // Stop recognition when the bot starts speaking\r\n-//   //   speechSynthesis.current.speak(utterance);\r\n-//   // };\r\n-\r\n-//   // const onRecognitionEnd = () => {\r\n-//   //   console.log(\"Recognition ended.\");\r\n-//   //   setIsRecognitionActive(false); // Update state when recognition ends\r\n-//   //   recognition.current.starting = false; // Reset the flag when recognition ends\r\n-//   //   // We now check if the recognition is already running before starting it again\r\n-//   //   if (isListening && !isSpeaking && !recognition.current?.starting) {\r\n-//   //     console.log(\"Restarting recognition.\");\r\n-//   //     recognition.current.start();\r\n-//   //   }\r\n-//   // };\r\n-\r\n-//   // useEffect(() => {\r\n-//   //   if (isListening && !hasGreeted.current) {\r\n-//   //     speak(\"Hello, I'm Brane. How can I assist you today?\");\r\n-//   //     hasGreeted.current = true;\r\n-//   //   } else if (isListening && !isSpeaking) {\r\n-//   //     recognition.current.start();\r\n-//   //   }\r\n-//   // }, [isListening, isSpeaking]);\r\n-\r\n-//   // const startListening = () => {\r\n-//   //   console.log(\"Attempting to start listening.\");\r\n-//   //   if (recognition.current && !recognition.current.starting) {\r\n-//   //     setIsListening(true);\r\n-//   //     recognition.current.starting = true; // Set the flag when starting recognition\r\n-//   //     recognition.current.start();\r\n-//   //     console.log(\"Listening started.\");\r\n-//   //   }\r\n-//   // };\r\n-\r\n-//   // const stopListening = () => {\r\n-//   //   console.log(\"Stopping listening.\");\r\n-\r\n-//   //   setIsListening(false);\r\n-//   //   recognition.current.stop();\r\n-//   //   if (speechSynthesis.current.speaking) {\r\n-//   //     speechSynthesis.current.cancel();\r\n-//   //   }\r\n-//   //   if (restartRecognitionTimeout.current) {\r\n-//   //     clearTimeout(restartRecognitionTimeout.current);\r\n-//   //   }\r\n-//   //   console.log(\"Listening stopped.\");\r\n-//   // };\r\n-//   // Handle start and stop listening logic\r\n-\r\n-//   useEffect(() => {\r\n-//     if (isListening && !hasGreeted.current) {\r\n-//       speak(\"Hello, I'm Brane. How can I assist you today?\");\r\n-//       hasGreeted.current = true;\r\n-//     }\r\n-//   }, [isListening]);\r\n-\r\n-//   // const handleCommandWithFuse = (command) => {\r\n-//   //   const fuse = new Fuse(commands, { keys: [\"utterance\"], threshold: 0.4 });\r\n-//   //   const results = fuse.search(command);\r\n-//   //   const foundCommand = results.length ? results[0].item : null;\r\n-\r\n-//   //   if (foundCommand) {\r\n-//   //     console.log(\"Command found:\", foundCommand.utterance);\r\n-//   //     speak(foundCommand.response);\r\n-//   //     if (foundCommand.route) {\r\n-//   //       navigate(foundCommand.route); // Navigate to the route specified in the command\r\n-//   //     }\r\n-//   //   } else {\r\n-//   //     console.log(\"No command found.\");\r\n-//   //     speak(\"I'm not sure how to respond to that.\");\r\n-//   //   }\r\n-//   // };\r\n-\r\n-//   const handleCommandWithFuse = (command) => {\r\n-//     const fuse = new Fuse(commands, { keys: [\"utterance\"], threshold: 0.4 });\r\n-//     const results = fuse.search(command);\r\n-//     const foundCommand = results.length ? results[0].item : null;\r\n-\r\n-//     if (foundCommand) {\r\n-//       console.log(\"Command found:\", foundCommand.utterance);\r\n-\r\n-//       if (foundCommand.action) {\r\n-//         foundCommand.action();\r\n-//       } else if (foundCommand.route) {\r\n-//         navigate(foundCommand.route);\r\n-//       }\r\n-\r\n-//       if (foundCommand.response) {\r\n-//         speak(foundCommand.response);\r\n-//       }\r\n-//     } else {\r\n-//       console.log(\"No command found.\");\r\n-//       speak(\"I'm not sure how to respond to that.\");\r\n-//     }\r\n-//   };\r\n-\r\n-//   const commands = [\r\n-//     {\r\n-//       utterance: \"Hello who are you ?\",\r\n-\r\n-//       response:\r\n-//         \"Hi! This is Brane! your Voice bot from Brane Education How can I Assist you Today ?\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"Hello\",\r\n-\r\n-//       response: \"Hi! How can I assist you today?\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"hello\",\r\n-\r\n-//       response: \"Hi! How can I assist you today?\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"Hi.\",\r\n-\r\n-//       response: \"Hello! How can I assist you today?\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"Hey there\",\r\n-\r\n-//       response: \"Hi! How can I assist you today?\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"Good morning Brane.\",\r\n-\r\n-//       response: \"Hey Hiii! Good morning  ! How can I help you?\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"Good afternoon Brane.\",\r\n-\r\n-//       response: \"Hey Hiii! Good after noon ! How can I help you?\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"Good evening Brane.\",\r\n-\r\n-//       response: \"Hey Hiii! Good evening ! How can I help you?\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"can you please take me to login page\",\r\n-//       route: \"/login\",\r\n-//       routeDescription: \"login page\",\r\n-//       response: \"Navigating to the login page.\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"go to login page\",\r\n-//       route: \"/login\",\r\n-//       routeDescription: \"login page\",\r\n-//       response: \"Navigating to the login page.\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"please take me to login page\",\r\n-//       route: \"/login\",\r\n-//       routeDescription: \"login page\",\r\n-//       response: \"Navigating to the login page.\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"Go to login page\",\r\n-//       route: \"/login\",\r\n-//       routeDescription: \"login page\",\r\n-//       response: \"Navigating to the login page.\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"open login page\",\r\n-//       route: \"/login\",\r\n-//       routeDescription: \"login page\",\r\n-//       response: \"Navigating to the login page.\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"can you please take me to signup page\",\r\n-//       route: \"/signup\",\r\n-//       routeDescription: \"signup page\",\r\n-//       response: \"Navigating to the signup page.\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"take me to signup page\",\r\n-//       route: \"/signup\",\r\n-//       routeDescription: \"signup page\",\r\n-//       response: \"Navigating to the signup page.\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"Go to signup page\",\r\n-//       route: \"/signup\",\r\n-//       routeDescription: \"signup page\",\r\n-//       response: \"Navigating to the signup page.\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"open signup page\",\r\n-//       route: \"/signup\",\r\n-//       routeDescription: \"signup page\",\r\n-//       response: \"Navigating to the signup page.\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"what are platform features\",\r\n-\r\n-//       response:\r\n-//         \"Dashboard, Dynamic time table, Learning Networks, Little Masters, Video Based Dictionary, General Search.\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"Features of platform\",\r\n-\r\n-//       response:\r\n-//         \"Dashboard, Dynamic time table, Learning Networks, Little Masters, Video Based Dictionary, General Search.\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"What does the platform offer\",\r\n-\r\n-//       response:\r\n-//         \"Dashboard, Dynamic time table, Learning Networks, Little Masters, Video Based Dictionary, General Search.\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"Say me the features of platform\",\r\n-\r\n-//       response:\r\n-//         \"Dashboard, Dynamic time table, Learning Networks, Little Masters, Video Based Dictionary, General Search.\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"Say me the services of platform\",\r\n-\r\n-//       response:\r\n-//         \"Dashboard, Dynamic time table, Learning Networks, Little Masters, Video Based Dictionary, General Search.\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"tell me the services offered by the platform\",\r\n-\r\n-//       response:\r\n-//         \"Dashboard, Dynamic time table, Learning Networks, Little Masters, Video Based Dictionary, General Search.\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"explain platform services\",\r\n-\r\n-//       response:\r\n-//         \"Dashboard, Dynamic time table, Learning Networks, Little Masters, Video Based Dictionary, General Search.\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"Give me the Parent voice of Julia Harris\",\r\n-\r\n-//       response:\r\n-//         \"Brane education has helped my son a lot in his studies. He improved a lot in his studies and is now able to score good marks in his exams\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"Play today's motivational video\",\r\n-\r\n-//       response: \"I am playing the video\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"Play today's video\",\r\n-\r\n-//       response: \"I am playing Motivational video\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"Leaders Voice\",\r\n-\r\n-//       response:\r\n-//         \"This Voice-interactive AI Platform is a game Changer. It revolutionizes education.\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"Curriculum Supported by Brane Education\",\r\n-\r\n-//       response:\r\n-//         \"we support multiple Boards let me say few Telangana State Board Andhra Pradesh Board Maharashtra Board Assam Board\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"Boards supported by the platform\",\r\n-\r\n-//       response:\r\n-//         \"we support multiple Boards let me say few Telangana State Board Andhra Pradesh Board Maharashtra Board Assam Board\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"Curriculum\",\r\n-\r\n-//       response:\r\n-//         \"we support multiple Boards let me say few Telangana State Board Andhra Pradesh Board Maharashtra Board Assam Board\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"Go to landing page\",\r\n-\r\n-//       response: \"Okay, I am taking you to the landing page.\",\r\n-\r\n-//       route: \"/childpage\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"take me to landing page\",\r\n-\r\n-//       response: \"Okay, I am taking you to the landing page.\",\r\n-\r\n-//       route: \"/childpage\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"move to landing page\",\r\n-\r\n-//       response: \"Okay, I am taking you to the landing page.\",\r\n-\r\n-//       route: \"/childpage\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"roll back to landing page\",\r\n-\r\n-//       response: \"Okay, I am taking you to the landing page.\",\r\n-\r\n-//       route: \"/childpage\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"move to landing page\",\r\n-\r\n-//       response: \"Okay, I am taking you to the landing page.\",\r\n-\r\n-//       route: \"/childpage\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"what is today's quote\",\r\n-\r\n-//       response:\r\n-//         \"Determination is the power that sees us through all our frustration and obstacles. It helps in building our willpower which is the very basis of success.\",\r\n-\r\n-//       // route: \"/childpage\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"Today's Inspirational quote\",\r\n-\r\n-//       response:\r\n-//         \"Determination is the power that sees us through all our frustration and obstacles. It helps in building our willpower which is the very basis of success.\",\r\n-\r\n-//       // route: \"/childpage\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"say me today's quote\",\r\n-\r\n-//       response:\r\n-//         \"Determination is the power that sees us through all our frustration and obstacles. It helps in building our willpower which is the very basis of success.\",\r\n-\r\n-//       // route: \"/childpage\",\r\n-//     },\r\n-//     {\r\n-//       utterance: \"go back\",\r\n-//       response: \"Going back.\",\r\n-//       action: goBack, // Note the use of an action property\r\n-//     },\r\n-//     {\r\n-//       utterance: \"go forward\",\r\n-//       response: \"Going forward.\",\r\n-//       action: goForward,\r\n-//     },\r\n-//     {\r\n-//       utterance: \"play video\",\r\n-//       // response: \"Playing video.\",\r\n-//       action: playVideo,\r\n-//     },\r\n-//     {\r\n-//       utterance: \"pause video\",\r\n-//       // response: \"Pausing video.\",\r\n-//       action: pauseVideo,\r\n-//     },\r\n-//     {\r\n-//       utterance: \"start video\",\r\n-//       // response: \"Playing video.\",\r\n-//       action: playVideo,\r\n-//     },\r\n-//     {\r\n-//       utterance: \"stop video\",\r\n-//       // response: \"Playing video.\",\r\n-//       action: pauseVideo,\r\n-//     },\r\n-//     {\r\n-//       utterance: \"scroll up\",\r\n-//       // response: \"Scrolling up.\",\r\n-//       action: scrollUp,\r\n-//     },\r\n-//     {\r\n-//       utterance: \"scroll down\",\r\n-//       // response: \"Scrolling down.\",\r\n-//       action: scrollDown,\r\n-//     },\r\n-//     {\r\n-//       utterance: \"go up\",\r\n-\r\n-//       // response: \"Scrolling up.\",\r\n-//       action: scrollUp,\r\n-//     },\r\n-//     {\r\n-//       utterance: \"go down\",\r\n-//       // response: \"Scrolling down.\",\r\n-//       action: scrollDown,\r\n-//     },\r\n-//     {\r\n-//       utterance: \"scroll to top\",\r\n-//       action: scrollToTop,\r\n-//     },\r\n-//     {\r\n-//       utterance: \"scroll to bottom\",\r\n-//       action: scrollToBottom,\r\n-//     },\r\n-//     {\r\n-//       utterance: \"go back\",\r\n-//       action: goBackRef?.current?.click, // Use goBackRef directly\r\n-//       response: \"Going back.\",\r\n-//     },\r\n-//     {\r\n-//       utterance: \"take test\",\r\n-//       action: takeTestRef?.current?.click, // Use takeTestRef directly\r\n-//       response: \"Starting the test.\",\r\n-//     },\r\n-//   ];\r\n-//   return (\r\n-//     <div className=\"speech-bot-container\">\r\n-//       <div\r\n-//         className={`button-container ${\r\n-//           isListening ? \"voicebotframeactive\" : \"voicebotframe\"\r\n-//         }`}\r\n-//       >\r\n-//         <div onClick={isListening ? stopListening : startListening}>\r\n-//           <iframe\r\n-//             src={\r\n-//               isListening\r\n-//                 ? \"https://lottie.host/?file=a89aca3f-5407-4052-82c3-2048afca7a9f/NpCdWzLSKD.json\"\r\n-//                 : \"https://lottie.host/?file=d2b6cc0e-fe95-4847-85b5-35365fca7e00/vTudpCuPZq.json\"\r\n-//             }\r\n-//             width=\"120\" // Set your desired width\r\n-//             height=\"120\" // Set your desired height\r\n-//             title={isListening ? \"Stop Animation\" : \"Start Animation\"}\r\n-//             className={isListening ? \"voicebotframeactive\" : \"voicebotframe\"}\r\n-//           ></iframe>\r\n-//           {isListening ? (\r\n-//             <div className=\"overlay\" onClick={stopListening}></div>\r\n-//           ) : (\r\n-//             <div className=\"overlay\" onClick={startListening}></div>\r\n-//           )}\r\n-//         </div>\r\n-//       </div>\r\n-//     </div>\r\n-//   );\r\n-// };\r\n-\r\n-// export default VoiceBot;\r\n-import React, { useState, useEffect, useRef } from \"react\";\r\n-import { useNavigate, useLocation } from \"react-router-dom\";\r\n-import Fuse from \"fuse.js\";\r\n-import \"./VoiceBot.css\";\r\n-import chatbotimage from \"../../assets/chatbotgif.gif\";\r\n-\r\n-const VoiceBot = ({ videoRefs }) => {\r\n-  const [isListening, setIsListening] = useState(false);\r\n-  const [isSpeaking, setIsSpeaking] = useState(false);\r\n-  const recognition = useRef(null);\r\n-  const speechSynthesis = useRef(window.speechSynthesis);\r\n-  const [hasGreeted, setHasGreeted] = useState(false);\r\n-  const navigate = useNavigate();\r\n-\r\n-  // Initialize speech recognition\r\n-  useEffect(() => {\r\n-    recognition.current = new window.webkitSpeechRecognition();\r\n-    recognition.current.continuous = true;\r\n-    recognition.current.interimResults = false;\r\n-    recognition.current.onresult = onResult;\r\n-    recognition.current.onend = onRecognitionEnd;\r\n-    recognition.current.starting = false;\r\n-\r\n-    recognition.current.onerror = (event) => {\r\n-      console.error(\"Recognition error:\", event.error);\r\n-      if (isListening && !isSpeaking) {\r\n-        restartRecognition();\r\n-      }\r\n-    };\r\n-\r\n-    return () => {\r\n-      if (recognition.current) {\r\n-        recognition.current.abort();\r\n-      }\r\n-    };\r\n-  }, []);\r\n-\r\n-  useEffect(() => {\r\n-    const checkRecognition = () => {\r\n-      if (isListening && !isSpeaking && !recognition.current.starting) {\r\n-        console.log(\"Restarting recognition because it's not active.\");\r\n-        recognition.current.starting = true;\r\n-        recognition.current.start();\r\n-        console.log(\"Restarted recognition.\");\r\n-      }\r\n-    };\r\n-\r\n-    const recognitionCheckInterval = setInterval(checkRecognition, 500); // Check every .5 second\r\n-\r\n-    return () => {\r\n-      clearInterval(recognitionCheckInterval);\r\n-    };\r\n-  }, [isListening, isSpeaking]);\r\n-\r\n-  const historyStack = useRef([]);\r\n-\r\n-  useEffect(() => {\r\n-    return () => {\r\n-      // Clean up the listener when the component unmounts\r\n-      window.removeEventListener(\"popstate\", handlePopState);\r\n-    };\r\n-  }, []);\r\n-\r\n-  const handlePopState = () => {\r\n-    // This needs to handle both back and forward browser actions\r\n-    // Use some logic to determine whether it's a back or forward action\r\n-    // For simplicity, assume it's always back\r\n-    historyStack.current.pop();\r\n-    forwardStack.current.length = 0; // Clear forward stack on manual navigation\r\n-  };\r\n-\r\n-  // Listen to popstate events to update the history stack\r\n-  useEffect(() => {\r\n-    window.addEventListener(\"popstate\", handlePopState);\r\n-  }, []);\r\n-\r\n-  const forwardStack = useRef([]);\r\n-\r\n-  const goBack = () => {\r\n-    if (window.history.state && window.history.state.idx > 0) {\r\n-      window.history.back();\r\n-      speak(\"Going back\");\r\n-    } else {\r\n-      speak(\"Can't go back any further.\");\r\n-    }\r\n-  };\r\n-\r\n-  const goForward = () => {\r\n-    if (\r\n-      window.history.state &&\r\n-      window.history.state.idx < window.history.length - 1\r\n-    ) {\r\n-      window.history.forward();\r\n-      speak(\"Going forward\");\r\n-    } else {\r\n-      speak(\"No forward history available.\");\r\n-    }\r\n-  };\r\n-\r\n-  const scrollAmount = window.innerHeight * 0.82;\r\n-\r\n-  const scrollUp = () => {\r\n-    if (window.pageYOffset === 0) {\r\n-      speak(\"Already at the top of the page.\");\r\n-    } else {\r\n-      window.scrollBy(0, -scrollAmount);\r\n-      speak(\"Scrolled up.\");\r\n-    }\r\n-  };\r\n-\r\n-  const scrollDown = () => {\r\n-    const maxScrollTop =\r\n-      document.documentElement.scrollHeight - window.innerHeight;\r\n-    if (window.pageYOffset >= maxScrollTop) {\r\n-      speak(\"Already at the bottom of the page.\");\r\n-    } else {\r\n-      window.scrollBy(0, scrollAmount);\r\n-      speak(\"Scrolled down.\");\r\n-    }\r\n-  };\r\n-\r\n-  const scrollToTop = () => {\r\n-    if (window.pageYOffset === 0) {\r\n-      speak(\"Already at the top of the page.\");\r\n-    } else {\r\n-      window.scrollTo(0, 0);\r\n-      speak(\"Scrolled to the top of the page.\");\r\n-    }\r\n-  };\r\n-\r\n-  const scrollToBottom = () => {\r\n-    const maxScrollTop =\r\n-      document.documentElement.scrollHeight - window.innerHeight;\r\n-    if (window.pageYOffset >= maxScrollTop) {\r\n-      speak(\"Already at the bottom of the page.\");\r\n-    } else {\r\n-      window.scrollTo(0, document.body.scrollHeight);\r\n-      speak(\"Scrolled to the bottom of the page.\");\r\n-    }\r\n-  };\r\n-\r\n-\r\n-  const controlVideo = (videoId, action) => {\r\n-    const videoRef = videoRefs.current.get(videoId);\r\n-    if (videoRef && videoRef.current) {\r\n-      switch (action) {\r\n-        case 'play':\r\n-          videoRef.current.play();\r\n-          break;\r\n-        case 'pause':\r\n-          videoRef.current.pause();\r\n-          break;\r\n-        case 'mute':\r\n-          videoRef.current.muted = true;\r\n-          break;\r\n-        case 'unmute':\r\n-          videoRef.current.muted = false;\r\n-          break;\r\n-        case 'fullscreen':\r\n-          if (videoRef.current.requestFullscreen) {\r\n-            videoRef.current.requestFullscreen();\r\n-          } else if (videoRef.current.webkitRequestFullscreen) { // Safari\r\n-            videoRef.current.webkitRequestFullscreen();\r\n-          } else if (videoRef.current.msRequestFullscreen) { // IE11\r\n-            videoRef.current.msRequestFullscreen();\r\n-          }\r\n-          break;\r\n-        case 'exitFullscreen':\r\n-          if (document.exitFullscreen) {\r\n-            document.exitFullscreen();\r\n-          } else if (document.webkitExitFullscreen) { // Safari\r\n-            document.webkitExitFullscreen();\r\n-          } else if (document.msExitFullscreen) { // IE11\r\n-            document.msExitFullscreen();\r\n-          }\r\n-          break;\r\n-        case 'increaseVolume':\r\n-          if (videoRef.current.volume < 1) {\r\n-            videoRef.current.volume = Math.min(1, videoRef.current.volume + 0.1);\r\n-          }\r\n-          break;\r\n-        case 'decreaseVolume':\r\n-          if (videoRef.current.volume > 0) {\r\n-            videoRef.current.volume = Math.max(0, videoRef.current.volume - 0.1);\r\n-          }\r\n-          break;\r\n-        // Add other cases as needed\r\n-      }\r\n-      speak(`${action.charAt(0).toUpperCase() + action.slice(1).replace(/([A-Z])/g, ' $1').toLowerCase()}ing video.`);\r\n-    } else {\r\n-      speak(`Video not found.`);\r\n-    }\r\n-  };\r\n-\r\n-  const speak = (message) => {\r\n-    const utterance = new SpeechSynthesisUtterance(message);\r\n-    utterance.onend = () => {\r\n-      setIsSpeaking(false);\r\n-      // Restart recognition after speaking has ended\r\n-      if (isListening) {\r\n-        restartRecognition();\r\n-      }\r\n-    };\r\n-\r\n-    setIsSpeaking(true);\r\n-    // Stop recognition when the bot starts speaking\r\n-    if (recognition.current) {\r\n-      recognition.current.abort();\r\n-    }\r\n-    speechSynthesis.current.speak(utterance);\r\n-  };\r\n-\r\n-  const restartRecognition = () => {\r\n-    // Check if recognition is not already started and if the bot is set to listen\r\n-    if (\r\n-      recognition.current &&\r\n-      !recognition.current.starting &&\r\n-      isListening &&\r\n-      !isSpeaking\r\n-    ) {\r\n-      recognition.current.abort(); // Ensure any ongoing recognition is stopped\r\n-      recognition.current.starting = true;\r\n-      recognition.current.start();\r\n-    }\r\n-  };\r\n-\r\n-  // Restart recognition when bot finishes speaking and isListening is true\r\n-  useEffect(() => {\r\n-    if (!isSpeaking && isListening) {\r\n-      restartRecognition();\r\n-    }\r\n-  }, [isSpeaking, isListening]);\r\n-\r\n-  const onResult = (event) => {\r\n-    const resultIndex = event.resultIndex;\r\n-    const transcript = event.results[resultIndex][0].transcript\r\n-      .trim()\r\n-      .toLowerCase();\r\n-\r\n-    if (event.results[resultIndex].isFinal) {\r\n-      console.log(`Recognized text: ${transcript}`);\r\n-      if (transcript.includes(\"brain\")) {\r\n-        console.log(\"Wake word heard, processing command...\");\r\n-        handleCommandWithFuse(transcript.replace(\"brain\", \"\"));\r\n-      }\r\n-    }\r\n-  };\r\n-\r\n-  const onRecognitionEnd = () => {\r\n-    recognition.current.starting = false;\r\n-    if (isListening && !isSpeaking) {\r\n-      restartRecognition();\r\n-    }\r\n-  };\r\n-\r\n-  useEffect(() => {\r\n-    if (isListening && !hasGreeted) {\r\n-      speak(\"Hello, I'm Brane. How can I help you today?\");\r\n-      setHasGreeted(true);\r\n-    }\r\n-  }, [isListening, hasGreeted]);\r\n-\r\n-  // Updated startListening function\r\n-  const startListening = () => {\r\n-    setIsListening(true);\r\n-    if (!recognition.current.starting) {\r\n-      restartRecognition();\r\n-    }\r\n-  };\r\n-\r\n-  // Updated stopListening function\r\n-  const stopListening = () => {\r\n-    setIsListening(false);\r\n-    if (speechSynthesis.current.speaking) {\r\n-      speechSynthesis.current.cancel();\r\n-    }\r\n-    recognition.current.abort();\r\n-  };\r\n-\r\n-  const handleCommandWithFuse = (command) => {\r\n-    const fuse = new Fuse(commands, { keys: [\"utterance\"], threshold: 0.4 });\r\n-    const results = fuse.search(command);\r\n-    const foundCommand = results.length ? results[0].item : null;\r\n-\r\n-    if (foundCommand) {\r\n-      console.log(\"Command found:\", foundCommand.utterance);\r\n-\r\n-      if (foundCommand.action) {\r\n-        foundCommand.action();\r\n-      } else if (foundCommand.route) {\r\n-        navigate(foundCommand.route);\r\n-      }\r\n-\r\n-      // Speak after performing the action or navigation\r\n-      speak(foundCommand.response);\r\n-    } else {\r\n-      console.log(\"No command found.\");\r\n-      speak(\"I'm not sure how to respond to that.\");\r\n-    }\r\n-  };\r\n-\r\n-  const commands = [\r\n-    {\r\n-      utterance: \"Hello who are you ?\",\r\n-\r\n-      response:\r\n-        \"Hi! This is Brane! your Voice bot from Brane Education How can I Assist you Today ?\",\r\n-    },\r\n-\r\n-    {\r\n-      utterance: \"Hello\",\r\n-\r\n-      response: \"Hi! How can I assist you today?\",\r\n-    },\r\n-\r\n-    {\r\n-      utterance: \"hello\",\r\n-\r\n-      response: \"Hi! How can I assist you today?\",\r\n-    },\r\n-\r\n-    {\r\n-      utterance: \"Hi.\",\r\n-\r\n-      response: \"Hello! How can I assist you today?\",\r\n-    },\r\n-\r\n-    {\r\n-      utterance: \"Hey there\",\r\n-\r\n-      response: \"Hi! How can I assist you today?\",\r\n-    },\r\n-\r\n-    {\r\n-      utterance: \"Good morning Brane.\",\r\n-\r\n-      response: \"Hey Hiii! Good morning  ! How can I help you?\",\r\n-    },\r\n-\r\n-    {\r\n-      utterance: \"Good afternoon Brane.\",\r\n-\r\n-      response: \"Hey Hiii! Good after noon ! How can I help you?\",\r\n-    },\r\n-\r\n-    {\r\n-      utterance: \"Good evening Brane.\",\r\n-\r\n-      response: \"Hey Hiii! Good evening ! How can I help you?\",\r\n-    },\r\n-\r\n-    {\r\n-      utterance: \"take me to homepage\",\r\n-\r\n-      route: \"/\",\r\n-\r\n-      response: \"You're in Homepage now\",\r\n-    },\r\n-    {\r\n-      utterance: \"open homepage\",\r\n-\r\n-      route: \"/\",\r\n-\r\n-      response: \"You're in Homepage now\",\r\n-    },\r\n-    {\r\n-      utterance: \"go to homepage\",\r\n-\r\n-      route: \"/\",\r\n-\r\n-      response: \"You're in Homepage now\",\r\n-    },\r\n-    {\r\n-      utterance: \"go back to homepage\",\r\n-\r\n-      route: \"/\",\r\n-\r\n-      response: \"You're in Homepage now\",\r\n-    },\r\n-    {\r\n-      utterance: \"can you please take me to login page\",\r\n-\r\n-      route: \"/login\",\r\n-\r\n-      response: \"Here's the Login Page, Please Login\",\r\n-    },\r\n-\r\n-    {\r\n-      utterance: \"please take me to login page\",\r\n-\r\n-      route: \"/login\",\r\n-\r\n-      response: \"Here's the Login Page, Please Login\",\r\n-    },\r\n-\r\n-    {\r\n-      utterance: \"Go to login page\",\r\n-\r\n-      route: \"/login\",\r\n-\r\n-      response: \"Here's the Login Page, Please Login\",\r\n-    },\r\n-\r\n-    {\r\n-      utterance: \"open login page\",\r\n-\r\n-      route: \"/login\",\r\n-\r\n-      response: \"Here's the Login Page, Please Login\",\r\n-    },\r\n-\r\n-    {\r\n-      utterance: \"can you please take me to signup page\",\r\n-\r\n-      route: \"/signup\",\r\n-\r\n-      response: \"Here's the signup page. Please proceed With Registration.\",\r\n-    },\r\n-\r\n-    {\r\n-      utterance: \"take me to signup page\",\r\n-\r\n-      route: \"/signup\",\r\n-\r\n-      response: \"Here's the signup page. Please proceed With Registration.\",\r\n-    },\r\n-\r\n-    {\r\n-      utterance: \"Go to signup page\",\r\n-\r\n-      route: \"/signup\",\r\n-\r\n-      response: \"Here's the signup page. Please proceed With Registration.\",\r\n-    },\r\n-\r\n-    {\r\n-      utterance: \"open signup page\",\r\n-\r\n-      route: \"/signup\",\r\n-\r\n-      response: \"Here's the signup page. Please proceed With Registration.\",\r\n-    },\r\n-\r\n-    {\r\n-      utterance: \"Go to face id\",\r\n-\r\n-      route: \"/login/faceid\",\r\n-\r\n-      response: \"Here's Face ID Login. Please proceed.\",\r\n-    },\r\n-\r\n-    {\r\n-      utterance: \"Go to face id login\",\r\n-\r\n-      route: \"/login/faceid\",\r\n-\r\n-      response: \"Here's Face ID Login. Please proceed.\",\r\n-    },\r\n-    {\r\n-      utterance: \"Go to face login\",\r\n-\r\n-      route: \"/login/faceid\",\r\n-\r\n-      response: \"Here's Face ID Login. Please proceed.\",\r\n-    },\r\n-\r\n-    {\r\n-      utterance: \"login with face id\",\r\n-\r\n-      route: \"/login/faceid\",\r\n-\r\n-      response: \"Here's Face ID Login. Please proceed.\",\r\n-    },\r\n-\r\n-    {\r\n-      utterance: \"login with face\",\r\n-\r\n-      route: \"/login/faceid\",\r\n-\r\n-      response: \"Here's Face ID Login. Please proceed.\",\r\n-    },\r\n-\r\n-    {\r\n-      utterance: \"i want to login with face\",\r\n-\r\n-      route: \"/login/faceid\",\r\n-\r\n-      response: \"Here's Face ID Login. Please proceed.\",\r\n-    },\r\n-\r\n-    {\r\n-      utterance: \"login with voice\",\r\n-\r\n-      route: \"/login/voiceid\",\r\n-\r\n-      response: \"Here's Voice Login. Please proceed.\",\r\n-    },\r\n-\r\n-    {\r\n-      utterance: \"i want to login with voice\",\r\n-\r\n-      route: \"/login/voiceid\",\r\n-\r\n-      response: \"Here's Voice Login. Please proceed.\",\r\n-    },\r\n-\r\n-    {\r\n-      utterance: \"go to voice login\",\r\n-\r\n-      route: \"/login/voiceid\",\r\n-\r\n-      response: \"Here's Voice Login. Please proceed.\",\r\n-    },\r\n-\r\n-    {\r\n-      utterance: \"login with voice\",\r\n-\r\n-      route: \"/login/voiceid\",\r\n-\r\n-      response: \"Here's Voice Login. Please proceed.\",\r\n-    },\r\n-\r\n-    {\r\n-      utterance: \"login with mobile\",\r\n-\r\n-      route: \"/login/mobile\",\r\n-\r\n-      response: \"Here's Mobile Login. Please proceed.\",\r\n-    },\r\n-\r\n-    {\r\n-      utterance: \"i want to login with mobile\",\r\n-\r\n-      route: \"/login/mobile\",\r\n-\r\n-      response: \"Here's Mobile Login. Please proceed.\",\r\n-    },\r\n-    {\r\n-      utterance: \"go to mobile login\",\r\n-\r\n-      route: \"/login/mobile\",\r\n-\r\n-      response: \"Here's Mobile Login. Please proceed.\",\r\n-    },\r\n-    {\r\n-      utterance: \"go to about page\",\r\n-\r\n-      route: \"/aboutus\",\r\n-\r\n-      response: \"This is About us.\",\r\n-    },\r\n-    {\r\n-      utterance: \"go to about us page\",\r\n-\r\n-      route: \"/aboutus\",\r\n-\r\n-      response: \"This is About us.\",\r\n-    },\r\n-    {\r\n-      utterance: \"open about us page\",\r\n-\r\n-      route: \"/aboutus\",\r\n-\r\n-      response: \"This is About us.\",\r\n-    },\r\n-    {\r\n-      utterance: \"open about page\",\r\n-\r\n-      route: \"/aboutus\",\r\n-\r\n-      response: \"This is About us.\",\r\n-    },\r\n-    {\r\n-      utterance: \"take me to about page\",\r\n-\r\n-      route: \"/aboutus\",\r\n-\r\n-      response: \"This is About us.\",\r\n-    },\r\n-    {\r\n-      utterance: \"take me to about us page\",\r\n-\r\n-      route: \"/aboutus\",\r\n-\r\n-      response: \"This is About us.\",\r\n-    },\r\n-\r\n-    {\r\n-      utterance: \"go to contact page\",\r\n-\r\n-      route: \"/contactus\",\r\n-\r\n-      response: \"You can contact us from here\",\r\n-    },\r\n-    {\r\n-      utterance: \"go to contact us page\",\r\n-\r\n-      route: \"/contactus\",\r\n-\r\n-      response: \"You can contact us from here\",\r\n-    },\r\n-    {\r\n-      utterance: \"open contact us page\",\r\n-\r\n-      route: \"/contactus\",\r\n-\r\n-      response: \"You can contact us from here\",\r\n-    },\r\n-    {\r\n-      utterance: \"open contact page\",\r\n-\r\n-      route: \"/contactus\",\r\n-\r\n-      response: \"You can contact us from here\",\r\n-    },\r\n-    {\r\n-      utterance: \"take me to about page\",\r\n-\r\n-      route: \"/contactus\",\r\n-\r\n-      response: \"You can contact us from here\",\r\n-    },\r\n-    {\r\n-      utterance: \"take me to contact us page\",\r\n-\r\n-      route: \"/contactus\",\r\n-\r\n-      response: \"You can contact us from here\",\r\n-    },\r\n-\r\n-    {\r\n-      utterance: \"what are platform features\",\r\n-\r\n-      response:\r\n-        \"Dashboard, Dynamic time table, Learning Networks, Little Masters, Video Based Dictionary, General Search.\",\r\n-    },\r\n-\r\n-    {\r\n-      utterance: \"Features of platform\",\r\n-\r\n-      response:\r\n-        \"Dashboard, Dynamic time table, Learning Networks, Little Masters, Video Based Dictionary, General Search.\",\r\n-    },\r\n-\r\n-    {\r\n-      utterance: \"What does the platform offer\",\r\n-\r\n-      response:\r\n-        \"Dashboard, Dynamic time table, Learning Networks, Little Masters, Video Based Dictionary, General Search.\",\r\n-    },\r\n-\r\n-    {\r\n-      utterance: \"Say me the features of platform\",\r\n-\r\n-      response:\r\n-        \"Dashboard, Dynamic time table, Learning Networks, Little Masters, Video Based Dictionary, General Search.\",\r\n-    },\r\n-\r\n-    {\r\n-      utterance: \"Say me the services of platform\",\r\n-\r\n-      response:\r\n-        \"Dashboard, Dynamic time table, Learning Networks, Little Masters, Video Based Dictionary, General Search.\",\r\n-    },\r\n-\r\n-    {\r\n-      utterance: \"tell me the services offered by the platform\",\r\n-\r\n-      response:\r\n-        \"Dashboard, Dynamic time table, Learning Networks, Little Masters, Video Based Dictionary, General Search.\",\r\n-    },\r\n-\r\n-    {\r\n-      utterance: \"explain platform services\",\r\n-\r\n-      response:\r\n-        \"Dashboard, Dynamic time table, Learning Networks, Little Masters, Video Based Dictionary, General Search.\",\r\n-    },\r\n-\r\n-    {\r\n-      utterance: \"Give me the Parent voice of Julia Harris\",\r\n-\r\n-      response:\r\n-        \"Brane education has helped my son a lot in his studies. He improved a lot in his studies and is now able to score good marks in his exams\",\r\n-    },\r\n-\r\n-    {\r\n-      utterance: \"Leaders Voice\",\r\n-\r\n-      response:\r\n-        \"This Voice-interactive AI Platform is a game Changer. It revolutionizes education.\",\r\n-    },\r\n-\r\n-    {\r\n-      utterance: \"Curriculum Supported by Brane Education\",\r\n-\r\n-      response:\r\n-        \"we support multiple Boards let me say few Telangana State Board Andhra Pradesh Board Maharashtra Board Assam Board\",\r\n-    },\r\n-\r\n-    {\r\n-      utterance: \"Boards supported by the platform\",\r\n-\r\n-      response:\r\n-        \"we support multiple Boards let me say few Telangana State Board Andhra Pradesh Board Maharashtra Board Assam Board\",\r\n-    },\r\n-\r\n-    {\r\n-      utterance: \"Curriculum\",\r\n-\r\n-      response:\r\n-        \"we support multiple Boards let me say few Telangana State Board Andhra Pradesh Board Maharashtra Board Assam Board\",\r\n-    },\r\n-\r\n-    {\r\n-      utterance: \"what is today's quote\",\r\n-\r\n-      response:\r\n-        \"Determination is the power that sees us through all our frustration and obstacles. It helps in building our willpower which is the very basis of success.\",\r\n-\r\n-      route: \"/childpage\",\r\n-    },\r\n-\r\n-    {\r\n-      utterance: \"Today's Inspirational quote\",\r\n-\r\n-      response:\r\n-        \"Determination is the power that sees us through all our frustration and obstacles. It helps in building our willpower which is the very basis of success.\",\r\n-\r\n-      route: \"/childpage\",\r\n-    },\r\n-\r\n-    {\r\n-      utterance: \"say me today's quote\",\r\n-\r\n-      response:\r\n-        \"Determination is the power that sees us through all our frustration and obstacles. It helps in building our willpower which is the very basis of success.\",\r\n-\r\n-      route: \"/childpage\",\r\n-    },\r\n-    {\r\n-      utterance: \"go back\",\r\n-      response: \"\",\r\n-      action: goBack, // Note the use of an action property\r\n-    },\r\n-    {\r\n-      utterance: \"go forward\",\r\n-      response: \"\",\r\n-      action: goForward,\r\n-    },\r\n-    // {\r\n-    //   utterance: \"play video\",\r\n-    //   // response: \"Playing video.\",\r\n-    //   action: playVideo,\r\n-    // },\r\n-    // {\r\n-    //   utterance: \"pause video\",\r\n-    //   // response: \"Pausing video.\",\r\n-    //   action: pauseVideo,\r\n-    // },\r\n-    // {\r\n-    //   utterance: \"start video\",\r\n-    //   // response: \"Playing video.\",\r\n-    //   action: playVideo,\r\n-    // },\r\n-    // {\r\n-    //   utterance: \"stop video\",\r\n-    //   // response: \"Playing video.\",\r\n-    //   action: pauseVideo,\r\n-    // },\r\n-    {\r\n-      utterance: \"scroll up\",\r\n-      // response: \"Scrolling up.\",\r\n-      action: scrollUp,\r\n-    },\r\n-    {\r\n-      utterance: \"scroll down\",\r\n-      // response: \"Scrolling down.\",\r\n-      action: scrollDown,\r\n-    },\r\n-    {\r\n-      utterance: \"go up\",\r\n-\r\n-      // response: \"Scrolling up.\",\r\n-      action: scrollUp,\r\n-    },\r\n-    {\r\n-      utterance: \"go down\",\r\n-      // response: \"Scrolling down.\",\r\n-      action: scrollDown,\r\n-    },\r\n-    {\r\n-      utterance: \"scroll to top\",\r\n-      action: scrollToTop,\r\n-    },\r\n-    {\r\n-      utterance: \"scroll to bottom\",\r\n-      action: scrollToBottom,\r\n-    },\r\n-    {\r\n-      utterance: \"brane stop\",\r\n-      action: stopListening,\r\n-    },\r\n-    {\r\n-      utterance: \"brane turn off\",\r\n-      action: stopListening,\r\n-    },\r\n-    {\r\n-      utterance: \"brane stop the bot\",\r\n-      action: stopListening,\r\n-    },\r\n-    // {\r\n-    //   utterance: \"mute the video\",\r\n-    //   action: muteVideo,\r\n-    // },\r\n-    // {\r\n-    //   utterance: \"unmute the video\",\r\n-    //   action: unmuteVideo,\r\n-    // },\r\n-    // {\r\n-    //   utterance: \"stop the video sound\",\r\n-    //   action: muteVideo,\r\n-    // },\r\n-    // {\r\n-    //   utterance: \"play the video sound\",\r\n-    //   action: unmuteVideo,\r\n-    // },\r\n-    {\r\n-      utterance: \"play transform education using ai video\",\r\n-      action: () => controlVideo('ourProjectsVideo', 'play'),\r\n-    },\r\n-    {\r\n-      utterance: \"start transform education using ai video\",\r\n-      action: () => controlVideo('ourProjectsVideo', 'play'),\r\n-    },\r\n-    {\r\n-      utterance: \"pause transform education using ai video\",\r\n-      action: () => controlVideo('ourProjectsVideo', 'pause'),\r\n-    },\r\n-    {\r\n-      utterance: \"stop transform education using ai video\",\r\n-      action: () => controlVideo('ourProjectsVideo', 'pause'),\r\n-    },\r\n-\r\n-    {\r\n-      utterance: \"mute transform education using ai video\",\r\n-      action: () => controlVideo('ourProjectsVideo', 'mute'),\r\n-    },\r\n-    {\r\n-      utterance: \"unmute transform education using ai video\",\r\n-      action: () => controlVideo('ourProjectsVideo', 'unmute'),\r\n-    },\r\n-    {\r\n-      utterance: \"fullscreen transform education using ai video\",\r\n-      action: () => controlVideo('ourProjectsVideo', 'fullscreen'),\r\n-    },\r\n-    {\r\n-      utterance: \"exit fullscreen transform education using ai video\",\r\n-      action: () => controlVideo('ourProjectsVideo', 'exitFullscreen'),\r\n-    },\r\n-    {\r\n-      utterance: \"increase volume transform education using ai video\",\r\n-      action: () => controlVideo('ourProjectsVideo', 'increaseVolume'),\r\n-    },\r\n-    {\r\n-      utterance: \"decrease volume transform education using ai video\",\r\n-      action: () => controlVideo('ourProjectsVideo', 'decreaseVolume'),\r\n-    },\r\n-  ];\r\n-\r\n-  return (\r\n-    <div className=\"speech-bot-container\">\r\n-      <div\r\n-        className={`button-container ${\r\n-          isListening ? \"voicebotframeactive\" : \"voicebotframe\"\r\n-        }`}\r\n-      >\r\n-        {/* <button onClick={isListening ? stopListening : startListening}>\r\n-          {isListening ? \"Stop\" : \"Start\"} Animation\r\n-        </button> */}\r\n-        <img\r\n-          className=\"botimage\"\r\n-          src={chatbotimage}\r\n-          alt=\"\"\r\n-          onClick={isListening ? stopListening : startListening}\r\n-        />\r\n-      </div>\r\n-    </div>\r\n-  );\r\n-};\r\n-\r\n-export default VoiceBot;\r\n-\r\n-{\r\n-  /* // import React, { useState, useEffect, useRef } from \"react\";\r\n-// import { useNavigate, useLocation } from \"react-router-dom\";\r\n-// import Fuse from \"fuse.js\";\r\n-// import \"./VoiceBot.css\";\r\n-\r\n-// const VoiceBot = ({ videoRef }) => {\r\n-//   const [isListening, setIsListening] = useState(false);\r\n-//   const [isSpeaking, setIsSpeaking] = useState(false);\r\n-//   const recognition = useRef(null);\r\n-//   const speechSynthesis = useRef(window.speechSynthesis);\r\n-//   const [hasGreeted, setHasGreeted] = useState(false);\r\n-//   const navigate = useNavigate();\r\n-\r\n-//   useEffect(() => {\r\n-//     recognition.current = new window.webkitSpeechRecognition();\r\n-//     recognition.current.continuous = true;\r\n-//     recognition.current.interimResults = false;\r\n-//     recognition.current.onresult = onResult;\r\n-//     recognition.current.onend = onRecognitionEnd;\r\n-//     recognition.current.starting = false;\r\n-\r\n-//     // Simplified error handling, removed specific handling for 'no-speech'\r\n-//     recognition.current.onerror = (event) => {\r\n-//       console.error(\"Recognition error:\", event.error);\r\n-//       // Check if listening is true and the bot isn't speaking\r\n-//       if (isListening && !isSpeaking) {\r\n-//         // Restart recognition\r\n-//         restartRecognition();\r\n-//       }\r\n-//     };\r\n-\r\n-//     return () => {\r\n-//       if (recognition.current) {\r\n-//         recognition.current.abort();\r\n-//       }\r\n-//     };\r\n-//   }, []);\r\n-\r\n-//   useEffect(() => {\r\n-//     const checkRecognition = () => {\r\n-//       if (isListening && !isSpeaking && !recognition.current.starting) {\r\n-//         console.log(\"Restarting recognition because it's not active.\");\r\n-//         recognition.current.starting = true;\r\n-//         recognition.current.start();\r\n-//         console.log(\"Restarted recognition.\");\r\n-//       }\r\n-//     };\r\n-\r\n-//     const recognitionCheckInterval = setInterval(checkRecognition, 100); // Check every 1 second\r\n-\r\n-//     return () => {\r\n-//       clearInterval(recognitionCheckInterval);\r\n-//     };\r\n-//   }, [isListening, isSpeaking]);\r\n-\r\n-//   const restartRecognition = () => {\r\n-//     if (recognition.current.starting) {\r\n-//       console.log(\"Recognition is already starting or running.\");\r\n-//       return;\r\n-//     }\r\n-\r\n-//     recognition.current.abort(); // Stop any existing recognition process\r\n-//     recognition.current.starting = true;\r\n-//     recognition.current.start();\r\n-//     console.log(\"Recognition restarted.\");\r\n-//   };\r\n-\r\n-//   const historyStack = useRef([]);\r\n-\r\n-//   useEffect(() => {\r\n-//     return () => {\r\n-//       // Clean up the listener when the component unmounts\r\n-//       window.removeEventListener(\"popstate\", handlePopState);\r\n-//     };\r\n-//   }, []);\r\n-\r\n-//   const handlePopState = () => {\r\n-//     // This needs to handle both back and forward browser actions\r\n-//     // Use some logic to determine whether it's a back or forward action\r\n-//     // For simplicity, assume it's always back\r\n-//     historyStack.current.pop();\r\n-//     forwardStack.current.length = 0; // Clear forward stack on manual navigation\r\n-//   };\r\n-  \r\n-\r\n-//   // Add a new entry to the stack whenever navigate is called\r\n-//   const customNavigate = (to, options) => {\r\n-//     historyStack.current.push(to);\r\n-//     navigate(to, options);\r\n-//   };\r\n-\r\n-//   // Listen to popstate events to update the history stack\r\n-//   useEffect(() => {\r\n-//     window.addEventListener(\"popstate\", handlePopState);\r\n-//   }, []);\r\n-\r\n-//   const forwardStack = useRef([]);\r\n-\r\n-//   const goBack = () => {\r\n-//     if (window.history.state && window.history.state.idx > 0) {\r\n-//       window.history.back();\r\n-//       speak(\"Going back\");\r\n-//     } else {\r\n-//       speak(\"Can't go back any further.\");\r\n-//     }\r\n-//   };\r\n-\r\n-//   const goForward = () => {\r\n-//     if (window.history.state && window.history.state.idx < window.history.length - 1) {\r\n-//       window.history.forward();\r\n-//       speak(\"Going forward\");\r\n-//     } else {\r\n-//       speak(\"No forward history available.\");\r\n-//     }\r\n-//   };\r\n-\r\n-//   const playVideo = () => {\r\n-//     if (videoRef.current) {\r\n-//       videoRef.current.play();\r\n-//       speak(\"Playing video.\");\r\n-//     } else {\r\n-//       speak(\"No video to play.\");\r\n-//     }\r\n-//   };\r\n-\r\n-//   const pauseVideo = () => {\r\n-//     if (videoRef.current) {\r\n-//       videoRef.current.pause();\r\n-//       speak(\"Video paused.\");\r\n-//     } else {\r\n-//       speak(\"No video to pause.\");\r\n-//     }\r\n-//   };\r\n-\r\n-//   const scrollAmount = window.innerHeight * 0.82;\r\n-\r\n-//   const scrollUp = () => {\r\n-//     if (window.pageYOffset === 0) {\r\n-//       speak(\"Already at the top of the page.\");\r\n-//     } else {\r\n-//       window.scrollBy(0, -scrollAmount);\r\n-//       speak(\"Scrolled up.\");\r\n-//     }\r\n-//   };\r\n-\r\n-//   const scrollDown = () => {\r\n-//     const maxScrollTop =\r\n-//       document.documentElement.scrollHeight - window.innerHeight;\r\n-//     if (window.pageYOffset >= maxScrollTop) {\r\n-//       speak(\"Already at the bottom of the page.\");\r\n-//     } else {\r\n-//       window.scrollBy(0, scrollAmount);\r\n-//       speak(\"Scrolled down.\");\r\n-//     }\r\n-//   };\r\n-\r\n-//   const scrollToTop = () => {\r\n-//     if (window.pageYOffset === 0) {\r\n-//       speak(\"Already at the top of the page.\");\r\n-//     } else {\r\n-//       window.scrollTo(0, 0);\r\n-//       speak(\"Scrolled to the top of the page.\");\r\n-//     }\r\n-//   };\r\n-\r\n-//   const scrollToBottom = () => {\r\n-//     const maxScrollTop =\r\n-//       document.documentElement.scrollHeight - window.innerHeight;\r\n-//     if (window.pageYOffset >= maxScrollTop) {\r\n-//       speak(\"Already at the bottom of the page.\");\r\n-//     } else {\r\n-//       window.scrollTo(0, document.body.scrollHeight);\r\n-//       speak(\"Scrolled to the bottom of the page.\");\r\n-//     }\r\n-//   };\r\n-\r\n-//   const speak = (message) => {\r\n-//     console.log(\"speak function called with message:\", message);\r\n-//     const utterance = new SpeechSynthesisUtterance(message);\r\n-//     utterance.onend = () => {\r\n-//       setIsSpeaking(false);\r\n-//       console.log(\"Speaking ended.\");\r\n-//       if (isListening && !recognition.current.starting) {\r\n-//         console.log(\"Restarting recognition after speaking.\");\r\n-//         recognition.current.starting = true;\r\n-//         recognition.current.start();\r\n-//         console.log(\"Restarted recognition after speaking.\");\r\n-//       }\r\n-//     };\r\n-\r\n-//     setIsSpeaking(true);\r\n-//     console.log(\"Speaking started.\");\r\n-//     recognition.current.stop(); // Ensure to stop recognition before speaking\r\n-//     speechSynthesis.current.speak(utterance);\r\n-//   };\r\n-\r\n-//   const onResult = (event) => {\r\n-//     const resultIndex = event.resultIndex;\r\n-//     const transcript = event.results[resultIndex][0].transcript\r\n-//       .trim()\r\n-//       .toLowerCase();\r\n-\r\n-//     if (event.results[resultIndex].isFinal) {\r\n-//       console.log(`Recognized text: ${transcript}`);\r\n-//       if (transcript.includes(\"brain\")) {\r\n-//         console.log(\"Wake word heard, processing command...\");\r\n-//         handleCommandWithFuse(transcript.replace(\"brain\", \"\"));\r\n-//       }\r\n-//     }\r\n-//   };\r\n-\r\n-//   const onRecognitionEnd = () => {\r\n-//     recognition.current.starting = false;\r\n-//     if (isListening && !isSpeaking) {\r\n-//       restartRecognition();\r\n-//     }\r\n-//   };\r\n-\r\n-//   useEffect(() => {\r\n-//     if (isListening) {\r\n-//       if (!hasGreeted) {\r\n-//         speak(\"Hello, I'm Brane. How can I help you today?\");\r\n-//         setHasGreeted(true);\r\n-//       } else {\r\n-//         speak(\"Listening.\");\r\n-//       }\r\n-//     }\r\n-//   }, [isListening, hasGreeted]);\r\n-\r\n-\r\n-//   const startListening = () => {\r\n-//     if (!recognition.current.starting) {\r\n-//       setIsListening(true);\r\n-//       restartRecognition();\r\n-//     }\r\n-//   };\r\n-\r\n-//   const stopListening = () => {\r\n-//     setIsListening(false);\r\n-//     recognition.current.abort();\r\n-//     if (speechSynthesis.current.speaking) {\r\n-//       speechSynthesis.current.cancel();\r\n-//     }\r\n-//   };\r\n-\r\n-//   const handleCommandWithFuse = (command) => {\r\n-//     const fuse = new Fuse(commands, { keys: [\"utterance\"], threshold: 0.4 });\r\n-//     const results = fuse.search(command);\r\n-//     const foundCommand = results.length ? results[0].item : null;\r\n-\r\n-//     if (foundCommand) {\r\n-//       console.log(\"Command found:\", foundCommand.utterance);\r\n-\r\n-//       if (foundCommand.action) {\r\n-//         foundCommand.action();\r\n-//       } else if (foundCommand.route) {\r\n-//         navigate(foundCommand.route);\r\n-//       }\r\n-\r\n-//       // Speak after performing the action or navigation\r\n-//       speak(foundCommand.response);\r\n-//     } else {\r\n-//       console.log(\"No command found.\");\r\n-//       speak(\"I'm not sure how to respond to that.\");\r\n-//     }\r\n-//   };\r\n-\r\n-//   const commands = [\r\n-//     {\r\n-//       utterance: \"Hello who are you ?\",\r\n-\r\n-//       response:\r\n-//         \"Hi! This is Brane! your Voice bot from Brane Education How can I Assist you Today ?\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"Hello\",\r\n-\r\n-//       response: \"Hi! How can I assist you today?\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"hello\",\r\n-\r\n-//       response: \"Hi! How can I assist you today?\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"Hi.\",\r\n-\r\n-//       response: \"Hello! How can I assist you today?\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"Hey there\",\r\n-\r\n-//       response: \"Hi! How can I assist you today?\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"Good morning Brane.\",\r\n-\r\n-//       response: \"Hey Hiii! Good morning  ! How can I help you?\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"Good afternoon Brane.\",\r\n-\r\n-//       response: \"Hey Hiii! Good after noon ! How can I help you?\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"Good evening Brane.\",\r\n-\r\n-//       response: \"Hey Hiii! Good evening ! How can I help you?\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"can you please take me to login page\",\r\n-\r\n-//       route: \"/login\",\r\n-\r\n-//       response: \"Here's the Login Page, Please Login\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"please take me to login page\",\r\n-\r\n-//       route: \"/login\",\r\n-\r\n-//       response: \"Here's the Login Page, Please Login\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"Go to login page\",\r\n-\r\n-//       route: \"/login\",\r\n-\r\n-//       response: \"Here's the Login Page, Please Login\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"open login page\",\r\n-\r\n-//       route: \"/login\",\r\n-\r\n-//       response: \"Here's the Login Page, Please Login\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"can you please take me to signup page\",\r\n-\r\n-//       route: \"/signup\",\r\n-\r\n-//       response: \"Here's the signup page. Please proceed With Registration.\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"take me to signup page\",\r\n-\r\n-//       route: \"/signup\",\r\n-\r\n-//       response: \"Here's the signup page. Please proceed With Registration.\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"Go to signup page\",\r\n-\r\n-//       route: \"/signup\",\r\n-\r\n-//       response: \"Here's the signup page. Please proceed With Registration.\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"open signup page\",\r\n-\r\n-//       route: \"/signup\",\r\n-\r\n-//       response: \"Here's the signup page. Please proceed With Registration.\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"Go to face id\",\r\n-\r\n-//       route: \"/login/faceid\",\r\n-\r\n-//       response: \"Here's Face ID Login. Please proceed.\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"Go to face id login\",\r\n-\r\n-//       route: \"/login/faceid\",\r\n-\r\n-//       response: \"Here's Face ID Login. Please proceed.\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"login with face id\",\r\n-\r\n-//       route: \"/login/faceid\",\r\n-\r\n-//       response: \"Here's Face ID Login. Please proceed.\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"login with face\",\r\n-\r\n-//       route: \"/login/faceid\",\r\n-\r\n-//       response: \"Here's Face ID Login. Please proceed.\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"i want to login with face\",\r\n-\r\n-//       route: \"/login/faceid\",\r\n-\r\n-//       response: \"Here's Face ID Login. Please proceed.\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"login with voice\",\r\n-\r\n-//       route: \"/login/voiceid\",\r\n-\r\n-//       response: \"Here's Voice Login. Please proceed.\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"i want to login with voice\",\r\n-\r\n-//       route: \"/login/voiceid\",\r\n-\r\n-//       response: \"Here's Voice Login. Please proceed.\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"go to voice login\",\r\n-\r\n-//       route: \"/login/voiceid\",\r\n-\r\n-//       response: \"Here's Voice Login. Please proceed.\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"login with voice\",\r\n-\r\n-//       route: \"/login/voiceid\",\r\n-\r\n-//       response: \"Here's Voice Login. Please proceed.\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"login with mobile\",\r\n-\r\n-//       route: \"/login/mobile\",\r\n-\r\n-//       response: \"Here's Mobile Login. Please proceed.\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"i want to login with mobile\",\r\n-\r\n-//       route: \"/login/mobile\",\r\n-\r\n-//       response: \"Here's Mobile Login. Please proceed.\",\r\n-//     },\r\n-//     {\r\n-//       utterance: \"go to mobile login\",\r\n-\r\n-//       route: \"/login/mobile\",\r\n-\r\n-//       response: \"Here's Mobile Login. Please proceed.\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"what are platform features\",\r\n-\r\n-//       response:\r\n-//         \"Dashboard, Dynamic time table, Learning Networks, Little Masters, Video Based Dictionary, General Search.\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"Features of platform\",\r\n-\r\n-//       response:\r\n-//         \"Dashboard, Dynamic time table, Learning Networks, Little Masters, Video Based Dictionary, General Search.\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"What does the platform offer\",\r\n-\r\n-//       response:\r\n-//         \"Dashboard, Dynamic time table, Learning Networks, Little Masters, Video Based Dictionary, General Search.\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"Say me the features of platform\",\r\n-\r\n-//       response:\r\n-//         \"Dashboard, Dynamic time table, Learning Networks, Little Masters, Video Based Dictionary, General Search.\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"Say me the services of platform\",\r\n-\r\n-//       response:\r\n-//         \"Dashboard, Dynamic time table, Learning Networks, Little Masters, Video Based Dictionary, General Search.\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"tell me the services offered by the platform\",\r\n-\r\n-//       response:\r\n-//         \"Dashboard, Dynamic time table, Learning Networks, Little Masters, Video Based Dictionary, General Search.\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"explain platform services\",\r\n-\r\n-//       response:\r\n-//         \"Dashboard, Dynamic time table, Learning Networks, Little Masters, Video Based Dictionary, General Search.\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"Give me the Parent voice of Julia Harris\",\r\n-\r\n-//       response:\r\n-//         \"Brane education has helped my son a lot in his studies. He improved a lot in his studies and is now able to score good marks in his exams\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"Play today's motivational video\",\r\n-\r\n-//       response: \"I am playing the video\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"Play today's video\",\r\n-\r\n-//       response: \"I am playing Motivational video\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"Leaders Voice\",\r\n-\r\n-//       response:\r\n-//         \"This Voice-interactive AI Platform is a game Changer. It revolutionizes education.\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"Curriculum Supported by Brane Education\",\r\n-\r\n-//       response:\r\n-//         \"we support multiple Boards let me say few Telangana State Board Andhra Pradesh Board Maharashtra Board Assam Board\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"Boards supported by the platform\",\r\n-\r\n-//       response:\r\n-//         \"we support multiple Boards let me say few Telangana State Board Andhra Pradesh Board Maharashtra Board Assam Board\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"Curriculum\",\r\n-\r\n-//       response:\r\n-//         \"we support multiple Boards let me say few Telangana State Board Andhra Pradesh Board Maharashtra Board Assam Board\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"Go to landing page\",\r\n-\r\n-//       response: \"Okay, I am taking you to the landing page.\",\r\n-\r\n-//       route: \"/childpage\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"take me to landing page\",\r\n-\r\n-//       response: \"Okay, I am taking you to the landing page.\",\r\n-\r\n-//       route: \"/childpage\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"move to landing page\",\r\n-\r\n-//       response: \"Okay, I am taking you to the landing page.\",\r\n-\r\n-//       route: \"/childpage\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"roll back to landing page\",\r\n-\r\n-//       response: \"Okay, I am taking you to the landing page.\",\r\n-\r\n-//       route: \"/childpage\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"move to landing page\",\r\n-\r\n-//       response: \"Okay, I am taking you to the landing page.\",\r\n-\r\n-//       route: \"/childpage\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"what is today's quote\",\r\n-\r\n-//       response:\r\n-//         \"Determination is the power that sees us through all our frustration and obstacles. It helps in building our willpower which is the very basis of success.\",\r\n-\r\n-//       route: \"/childpage\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"Today's Inspirational quote\",\r\n-\r\n-//       response:\r\n-//         \"Determination is the power that sees us through all our frustration and obstacles. It helps in building our willpower which is the very basis of success.\",\r\n-\r\n-//       route: \"/childpage\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"say me today's quote\",\r\n-\r\n-//       response:\r\n-//         \"Determination is the power that sees us through all our frustration and obstacles. It helps in building our willpower which is the very basis of success.\",\r\n-\r\n-//       route: \"/childpage\",\r\n-//     },\r\n-//     {\r\n-//       utterance: \"go back\",\r\n-//       response: \"\",\r\n-//       action: goBack, // Note the use of an action property\r\n-//     },\r\n-//     {\r\n-//       utterance: \"go forward\",\r\n-//       response: \"\",\r\n-//       action: goForward,\r\n-//     },\r\n-//     {\r\n-//       utterance: \"play video\",\r\n-//       // response: \"Playing video.\",\r\n-//       action: playVideo,\r\n-//     },\r\n-//     {\r\n-//       utterance: \"pause video\",\r\n-//       // response: \"Pausing video.\",\r\n-//       action: pauseVideo,\r\n-//     },\r\n-//     {\r\n-//       utterance: \"start video\",\r\n-//       // response: \"Playing video.\",\r\n-//       action: playVideo,\r\n-//     },\r\n-//     {\r\n-//       utterance: \"stop video\",\r\n-//       // response: \"Playing video.\",\r\n-//       action: pauseVideo,\r\n-//     },\r\n-//     {\r\n-//       utterance: \"scroll up\",\r\n-//       // response: \"Scrolling up.\",\r\n-//       action: scrollUp,\r\n-//     },\r\n-//     {\r\n-//       utterance: \"scroll down\",\r\n-//       // response: \"Scrolling down.\",\r\n-//       action: scrollDown,\r\n-//     },\r\n-//     {\r\n-//       utterance: \"go up\",\r\n-\r\n-//       // response: \"Scrolling up.\",\r\n-//       action: scrollUp,\r\n-//     },\r\n-//     {\r\n-//       utterance: \"go down\",\r\n-//       // response: \"Scrolling down.\",\r\n-//       action: scrollDown,\r\n-//     },\r\n-//     {\r\n-//       utterance: \"scroll to top\",\r\n-//       action: scrollToTop,\r\n-//     },\r\n-//     {\r\n-//       utterance: \"scroll to bottom\",\r\n-//       action: scrollToBottom,\r\n-//     },\r\n-//     {\r\n-//       utterance: \"brane stop\",\r\n-//       action: stopListening,\r\n-//     },\r\n-//     {\r\n-//       utterance: \"brane turn off\",\r\n-//       action: stopListening,\r\n-//     },\r\n-//     {\r\n-//       utterance: \"brane stop the bot\",\r\n-//       action: stopListening,\r\n-//     },\r\n-//   ];\r\n-\r\n-//   return (\r\n-//     <div className=\"speech-bot-container\">\r\n-//       <div\r\n-//         className={`button-container ${\r\n-//           isListening ? \"voicebotframeactive\" : \"voicebotframe\"\r\n-//         }`}\r\n-//       >\r\n-//         <button onClick={isListening ? stopListening : startListening}>\r\n-//           {isListening ? \"Stop\" : \"Start\"} Animation\r\n-//         </button>\r\n-//         {/* <button onClick={toggleBotActive}>\r\n-//         {isBotActive ? 'Deactivate Bot' : 'Activate Bot'}\r\n-//       </button> \r\n-//       </div>\r\n-//     </div>\r\n-//   );\r\n-// };\r\n-\r\n-// export default VoiceBot; */\r\n-}\r\n-\r\n-//iska v1\r\n-\r\n-// import React, { useState, useEffect, useRef } from \"react\";\r\n-// import { useNavigate, useLocation } from \"react-router-dom\";\r\n-// import Fuse from \"fuse.js\";\r\n-// import \"./VoiceBot.css\";\r\n-\r\n-// const VoiceBot = ({ videoRef}) => {\r\n-//   const [isListening, setIsListening] = useState(false);\r\n-//   const [isSpeaking, setIsSpeaking] = useState(false);\r\n-//   const recognition = useRef(null);\r\n-//   const speechSynthesis = useRef(window.speechSynthesis);\r\n-//   const [hasGreeted, setHasGreeted] = useState(false);\r\n-//   const navigate = useNavigate();\r\n-\r\n-//  // Initialize speech recognition\r\n-//  useEffect(() => {\r\n-//   recognition.current = new window.webkitSpeechRecognition();\r\n-//   recognition.current.continuous = true;\r\n-//   recognition.current.interimResults = false;\r\n-//   recognition.current.onresult = onResult;\r\n-//   recognition.current.onend = onRecognitionEnd;\r\n-//   recognition.current.starting = false;\r\n-\r\n-//   recognition.current.onerror = (event) => {\r\n-//     console.error(\"Recognition error:\", event.error);\r\n-//     if (isListening && !isSpeaking) {\r\n-//       restartRecognition();\r\n-//     }\r\n-//   };\r\n-\r\n-//   return () => {\r\n-//     if (recognition.current) {\r\n-//       recognition.current.abort();\r\n-//     }\r\n-//   };\r\n-// }, []);\r\n-\r\n-//   // useEffect(() => {\r\n-//   //   const checkRecognition = () => {\r\n-//   //     if (isListening && !isSpeaking && !recognition.current.starting) {\r\n-//   //       console.log(\"Restarting recognition because it's not active.\");\r\n-//   //       recognition.current.starting = true;\r\n-//   //       recognition.current.start();\r\n-//   //       console.log(\"Restarted recognition.\");\r\n-//   //     }\r\n-//   //   };\r\n-\r\n-//   //   const recognitionCheckInterval = setInterval(checkRecognition, 100); // Check every .5 second\r\n-\r\n-//   //   return () => {\r\n-//   //     clearInterval(recognitionCheckInterval);\r\n-//   //   };\r\n-//   // }, [isListening, isSpeaking]);\r\n-\r\n-//   const historyStack = useRef([]);\r\n-\r\n-//   useEffect(() => {\r\n-//     return () => {\r\n-//       // Clean up the listener when the component unmounts\r\n-//       window.removeEventListener(\"popstate\", handlePopState);\r\n-//     };\r\n-//   }, []);\r\n-\r\n-//   const handlePopState = () => {\r\n-//     // This needs to handle both back and forward browser actions\r\n-//     // Use some logic to determine whether it's a back or forward action\r\n-//     // For simplicity, assume it's always back\r\n-//     historyStack.current.pop();\r\n-//     forwardStack.current.length = 0; // Clear forward stack on manual navigation\r\n-//   };\r\n-\r\n-//   // Add a new entry to the stack whenever navigate is called\r\n-//   const customNavigate = (to, options) => {\r\n-//     historyStack.current.push(to);\r\n-//     navigate(to, options);\r\n-//   };\r\n-\r\n-//   // Listen to popstate events to update the history stack\r\n-//   useEffect(() => {\r\n-//     window.addEventListener(\"popstate\", handlePopState);\r\n-//   }, []);\r\n-\r\n-//   const forwardStack = useRef([]);\r\n-\r\n-//   const goBack = () => {\r\n-//     if (window.history.state && window.history.state.idx > 0) {\r\n-//       window.history.back();\r\n-//       speak(\"Going back\");\r\n-//     } else {\r\n-//       speak(\"Can't go back any further.\");\r\n-//     }\r\n-//   };\r\n-\r\n-//   const goForward = () => {\r\n-//     if (window.history.state && window.history.state.idx < window.history.length - 1) {\r\n-//       window.history.forward();\r\n-//       speak(\"Going forward\");\r\n-//     } else {\r\n-//       speak(\"No forward history available.\");\r\n-//     }\r\n-//   };\r\n-\r\n-//   const playVideo = () => {\r\n-//     if (videoRef.current) {\r\n-//       videoRef.current.play();\r\n-//       speak(\"Playing video.\");\r\n-//     } else {\r\n-//       speak(\"No video to play.\");\r\n-//     }\r\n-//   };\r\n-\r\n-//   const pauseVideo = () => {\r\n-//     if (videoRef.current) {\r\n-//       videoRef.current.pause();\r\n-//       speak(\"Video paused.\");\r\n-//     } else {\r\n-//       speak(\"No video to pause.\");\r\n-//     }\r\n-//   };\r\n-\r\n-//   const scrollAmount = window.innerHeight * 0.82;\r\n-\r\n-//   const scrollUp = () => {\r\n-//     if (window.pageYOffset === 0) {\r\n-//       speak(\"Already at the top of the page.\");\r\n-//     } else {\r\n-//       window.scrollBy(0, -scrollAmount);\r\n-//       speak(\"Scrolled up.\");\r\n-//     }\r\n-//   };\r\n-\r\n-//   const scrollDown = () => {\r\n-//     const maxScrollTop =\r\n-//       document.documentElement.scrollHeight - window.innerHeight;\r\n-//     if (window.pageYOffset >= maxScrollTop) {\r\n-//       speak(\"Already at the bottom of the page.\");\r\n-//     } else {\r\n-//       window.scrollBy(0, scrollAmount);\r\n-//       speak(\"Scrolled down.\");\r\n-//     }\r\n-//   };\r\n-\r\n-//   const scrollToTop = () => {\r\n-//     if (window.pageYOffset === 0) {\r\n-//       speak(\"Already at the top of the page.\");\r\n-//     } else {\r\n-//       window.scrollTo(0, 0);\r\n-//       speak(\"Scrolled to the top of the page.\");\r\n-//     }\r\n-//   };\r\n-\r\n-//   const scrollToBottom = () => {\r\n-//     const maxScrollTop =\r\n-//       document.documentElement.scrollHeight - window.innerHeight;\r\n-//     if (window.pageYOffset >= maxScrollTop) {\r\n-//       speak(\"Already at the bottom of the page.\");\r\n-//     } else {\r\n-//       window.scrollTo(0, document.body.scrollHeight);\r\n-//       speak(\"Scrolled to the bottom of the page.\");\r\n-//     }\r\n-//   };\r\n-\r\n-//   const speak = (message) => {\r\n-//     const utterance = new SpeechSynthesisUtterance(message);\r\n-//     utterance.onend = () => {\r\n-//       setIsSpeaking(false);\r\n-//       // Restart recognition after speaking has ended\r\n-//       if (isListening) {\r\n-//         restartRecognition();\r\n-//       }\r\n-//     };\r\n-\r\n-//     setIsSpeaking(true);\r\n-//     // Stop recognition when the bot starts speaking\r\n-//     if (recognition.current) {\r\n-//       recognition.current.abort();\r\n-//     }\r\n-//     speechSynthesis.current.speak(utterance);\r\n-//   };\r\n-\r\n-//   const restartRecognition = () => {\r\n-//     // Check if recognition is not already started and if the bot is set to listen\r\n-//     if (recognition.current && !recognition.current.starting && isListening && !isSpeaking) {\r\n-//       // Only start recognition if it's not already active\r\n-//       if (recognition.current.state !== 'active') {\r\n-//         recognition.current.abort(); // Ensure any ongoing recognition is stopped\r\n-//         recognition.current.starting = true;\r\n-//         recognition.current.start();\r\n-//       }\r\n-//     }\r\n-//   };\r\n-\r\n-//     // Restart recognition when bot finishes speaking and isListening is true\r\n-//     useEffect(() => {\r\n-//       if (!isSpeaking && isListening) {\r\n-//         restartRecognition();\r\n-//       }\r\n-//     }, [isSpeaking, isListening]);\r\n-\r\n-//   const onResult = (event) => {\r\n-//     const resultIndex = event.resultIndex;\r\n-//     const transcript = event.results[resultIndex][0].transcript\r\n-//       .trim()\r\n-//       .toLowerCase();\r\n-\r\n-//     if (event.results[resultIndex].isFinal) {\r\n-//       console.log(`Recognized text: ${transcript}`);\r\n-//       if (transcript.includes(\"brain\")) {\r\n-//         console.log(\"Wake word heard, processing command...\");\r\n-//         handleCommandWithFuse(transcript.replace(\"brain\", \"\"));\r\n-//       }\r\n-//     }\r\n-//   };\r\n-\r\n-//   const onRecognitionEnd = () => {\r\n-//     recognition.current.starting = false;\r\n-//     if (isListening && !isSpeaking) {\r\n-//       restartRecognition();\r\n-//     }\r\n-//   };\r\n-\r\n-//   useEffect(() => {\r\n-//     if (isListening && !hasGreeted) {\r\n-//       speak(\"Hello, I'm Brane. How can I help you today?\");\r\n-//       setHasGreeted(true);\r\n-//     }\r\n-//   }, [isListening, hasGreeted]);\r\n-\r\n-// // Updated startListening function\r\n-// const startListening = () => {\r\n-//   setIsListening(true);\r\n-//   if (recognition.current && !recognition.current.starting) {\r\n-//     recognition.current.start();\r\n-//   }\r\n-// };\r\n-\r\n-// // Updated stopListening function\r\n-// const stopListening = () => {\r\n-//   setIsListening(false);\r\n-//   setIsSpeaking(false); // Reset speaking state\r\n-//   setHasGreeted(false); // Reset greeting state if needed\r\n-//   if (recognition.current) {\r\n-//     recognition.current.abort(); // Stop any ongoing speech recognition\r\n-//   }\r\n-//   if (speechSynthesis.current.speaking) {\r\n-//     speechSynthesis.current.cancel(); // Stop any ongoing speech synthesis\r\n-//   }\r\n-// };\r\n-\r\n-//   const handleCommandWithFuse = (command) => {\r\n-//     const fuse = new Fuse(commands, { keys: [\"utterance\"], threshold: 0.4 });\r\n-//     const results = fuse.search(command);\r\n-//     const foundCommand = results.length ? results[0].item : null;\r\n-\r\n-//     if (foundCommand) {\r\n-//       console.log(\"Command found:\", foundCommand.utterance);\r\n-\r\n-//       if (foundCommand.action) {\r\n-//         foundCommand.action();\r\n-//       } else if (foundCommand.route) {\r\n-//         navigate(foundCommand.route);\r\n-//       }\r\n-\r\n-//       // Speak after performing the action or navigation\r\n-//       speak(foundCommand.response);\r\n-//     } else {\r\n-//       console.log(\"No command found.\");\r\n-//       speak(\"I'm not sure how to respond to that.\");\r\n-//     }\r\n-//   };\r\n-\r\n-//   const commands = [\r\n-//     {\r\n-//       utterance: \"Hello who are you ?\",\r\n-\r\n-//       response:\r\n-//         \"Hi! This is Brane! your Voice bot from Brane Education How can I Assist you Today ?\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"Hello\",\r\n-\r\n-//       response: \"Hi! How can I assist you today?\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"hello\",\r\n-\r\n-//       response: \"Hi! How can I assist you today?\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"Hi.\",\r\n-\r\n-//       response: \"Hello! How can I assist you today?\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"Hey there\",\r\n-\r\n-//       response: \"Hi! How can I assist you today?\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"Good morning Brane.\",\r\n-\r\n-//       response: \"Hey Hiii! Good morning  ! How can I help you?\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"Good afternoon Brane.\",\r\n-\r\n-//       response: \"Hey Hiii! Good after noon ! How can I help you?\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"Good evening Brane.\",\r\n-\r\n-//       response: \"Hey Hiii! Good evening ! How can I help you?\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"can you please take me to login page\",\r\n-\r\n-//       route: \"/login\",\r\n-\r\n-//       response: \"Here's the Login Page, Please Login\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"please take me to login page\",\r\n-\r\n-//       route: \"/login\",\r\n-\r\n-//       response: \"Here's the Login Page, Please Login\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"Go to login page\",\r\n-\r\n-//       route: \"/login\",\r\n-\r\n-//       response: \"Here's the Login Page, Please Login\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"open login page\",\r\n-\r\n-//       route: \"/login\",\r\n-\r\n-//       response: \"Here's the Login Page, Please Login\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"can you please take me to signup page\",\r\n-\r\n-//       route: \"/signup\",\r\n-\r\n-//       response: \"Here's the signup page. Please proceed With Registration.\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"take me to signup page\",\r\n-\r\n-//       route: \"/signup\",\r\n-\r\n-//       response: \"Here's the signup page. Please proceed With Registration.\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"Go to signup page\",\r\n-\r\n-//       route: \"/signup\",\r\n-\r\n-//       response: \"Here's the signup page. Please proceed With Registration.\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"open signup page\",\r\n-\r\n-//       route: \"/signup\",\r\n-\r\n-//       response: \"Here's the signup page. Please proceed With Registration.\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"Go to face id\",\r\n-\r\n-//       route: \"/login/faceid\",\r\n-\r\n-//       response: \"Here's Face ID Login. Please proceed.\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"Go to face id login\",\r\n-\r\n-//       route: \"/login/faceid\",\r\n-\r\n-//       response: \"Here's Face ID Login. Please proceed.\",\r\n-//     },\r\n-//     {\r\n-//       utterance: \"Go to face login\",\r\n-\r\n-//       route: \"/login/faceid\",\r\n-\r\n-//       response: \"Here's Face ID Login. Please proceed.\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"login with face id\",\r\n-\r\n-//       route: \"/login/faceid\",\r\n-\r\n-//       response: \"Here's Face ID Login. Please proceed.\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"login with face\",\r\n-\r\n-//       route: \"/login/faceid\",\r\n-\r\n-//       response: \"Here's Face ID Login. Please proceed.\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"i want to login with face\",\r\n-\r\n-//       route: \"/login/faceid\",\r\n-\r\n-//       response: \"Here's Face ID Login. Please proceed.\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"login with voice\",\r\n-\r\n-//       route: \"/login/voiceid\",\r\n-\r\n-//       response: \"Here's Voice Login. Please proceed.\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"i want to login with voice\",\r\n-\r\n-//       route: \"/login/voiceid\",\r\n-\r\n-//       response: \"Here's Voice Login. Please proceed.\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"go to voice login\",\r\n-\r\n-//       route: \"/login/voiceid\",\r\n-\r\n-//       response: \"Here's Voice Login. Please proceed.\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"login with voice\",\r\n-\r\n-//       route: \"/login/voiceid\",\r\n-\r\n-//       response: \"Here's Voice Login. Please proceed.\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"login with mobile\",\r\n-\r\n-//       route: \"/login/mobile\",\r\n-\r\n-//       response: \"Here's Mobile Login. Please proceed.\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"i want to login with mobile\",\r\n-\r\n-//       route: \"/login/mobile\",\r\n-\r\n-//       response: \"Here's Mobile Login. Please proceed.\",\r\n-//     },\r\n-//     {\r\n-//       utterance: \"go to mobile login\",\r\n-\r\n-//       route: \"/login/mobile\",\r\n-\r\n-//       response: \"Here's Mobile Login. Please proceed.\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"what are platform features\",\r\n-\r\n-//       response:\r\n-//         \"Dashboard, Dynamic time table, Learning Networks, Little Masters, Video Based Dictionary, General Search.\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"Features of platform\",\r\n-\r\n-//       response:\r\n-//         \"Dashboard, Dynamic time table, Learning Networks, Little Masters, Video Based Dictionary, General Search.\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"What does the platform offer\",\r\n-\r\n-//       response:\r\n-//         \"Dashboard, Dynamic time table, Learning Networks, Little Masters, Video Based Dictionary, General Search.\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"Say me the features of platform\",\r\n-\r\n-//       response:\r\n-//         \"Dashboard, Dynamic time table, Learning Networks, Little Masters, Video Based Dictionary, General Search.\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"Say me the services of platform\",\r\n-\r\n-//       response:\r\n-//         \"Dashboard, Dynamic time table, Learning Networks, Little Masters, Video Based Dictionary, General Search.\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"tell me the services offered by the platform\",\r\n-\r\n-//       response:\r\n-//         \"Dashboard, Dynamic time table, Learning Networks, Little Masters, Video Based Dictionary, General Search.\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"explain platform services\",\r\n-\r\n-//       response:\r\n-//         \"Dashboard, Dynamic time table, Learning Networks, Little Masters, Video Based Dictionary, General Search.\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"Give me the Parent voice of Julia Harris\",\r\n-\r\n-//       response:\r\n-//         \"Brane education has helped my son a lot in his studies. He improved a lot in his studies and is now able to score good marks in his exams\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"Play today's motivational video\",\r\n-\r\n-//       response: \"I am playing the video\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"Play today's video\",\r\n-\r\n-//       response: \"I am playing Motivational video\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"Leaders Voice\",\r\n-\r\n-//       response:\r\n-//         \"This Voice-interactive AI Platform is a game Changer. It revolutionizes education.\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"Curriculum Supported by Brane Education\",\r\n-\r\n-//       response:\r\n-//         \"we support multiple Boards let me say few Telangana State Board Andhra Pradesh Board Maharashtra Board Assam Board\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"Boards supported by the platform\",\r\n-\r\n-//       response:\r\n-//         \"we support multiple Boards let me say few Telangana State Board Andhra Pradesh Board Maharashtra Board Assam Board\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"Curriculum\",\r\n-\r\n-//       response:\r\n-//         \"we support multiple Boards let me say few Telangana State Board Andhra Pradesh Board Maharashtra Board Assam Board\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"Go to landing page\",\r\n-\r\n-//       response: \"Okay, I am taking you to the landing page.\",\r\n-\r\n-//       route: \"/childpage\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"take me to landing page\",\r\n-\r\n-//       response: \"Okay, I am taking you to the landing page.\",\r\n-\r\n-//       route: \"/childpage\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"move to landing page\",\r\n-\r\n-//       response: \"Okay, I am taking you to the landing page.\",\r\n-\r\n-//       route: \"/childpage\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"roll back to landing page\",\r\n-\r\n-//       response: \"Okay, I am taking you to the landing page.\",\r\n-\r\n-//       route: \"/childpage\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"move to landing page\",\r\n-\r\n-//       response: \"Okay, I am taking you to the landing page.\",\r\n-\r\n-//       route: \"/childpage\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"what is today's quote\",\r\n-\r\n-//       response:\r\n-//         \"Determination is the power that sees us through all our frustration and obstacles. It helps in building our willpower which is the very basis of success.\",\r\n-\r\n-//       route: \"/childpage\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"Today's Inspirational quote\",\r\n-\r\n-//       response:\r\n-//         \"Determination is the power that sees us through all our frustration and obstacles. It helps in building our willpower which is the very basis of success.\",\r\n-\r\n-//       route: \"/childpage\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"say me today's quote\",\r\n-\r\n-//       response:\r\n-//         \"Determination is the power that sees us through all our frustration and obstacles. It helps in building our willpower which is the very basis of success.\",\r\n-\r\n-//       route: \"/childpage\",\r\n-//     },\r\n-//     {\r\n-//       utterance: \"go back\",\r\n-//       response: \"\",\r\n-//       action: goBack, // Note the use of an action property\r\n-//     },\r\n-//     {\r\n-//       utterance: \"go forward\",\r\n-//       response: \"\",\r\n-//       action: goForward,\r\n-//     },\r\n-//     {\r\n-//       utterance: \"play video\",\r\n-//       // response: \"Playing video.\",\r\n-//       action: playVideo,\r\n-//     },\r\n-//     {\r\n-//       utterance: \"pause video\",\r\n-//       // response: \"Pausing video.\",\r\n-//       action: pauseVideo,\r\n-//     },\r\n-//     {\r\n-//       utterance: \"start video\",\r\n-//       // response: \"Playing video.\",\r\n-//       action: playVideo,\r\n-//     },\r\n-//     {\r\n-//       utterance: \"stop video\",\r\n-//       // response: \"Playing video.\",\r\n-//       action: pauseVideo,\r\n-//     },\r\n-//     {\r\n-//       utterance: \"scroll up\",\r\n-//       // response: \"Scrolling up.\",\r\n-//       action: scrollUp,\r\n-//     },\r\n-//     {\r\n-//       utterance: \"scroll down\",\r\n-//       // response: \"Scrolling down.\",\r\n-//       action: scrollDown,\r\n-//     },\r\n-//     {\r\n-//       utterance: \"go up\",\r\n-\r\n-//       // response: \"Scrolling up.\",\r\n-//       action: scrollUp,\r\n-//     },\r\n-//     {\r\n-//       utterance: \"go down\",\r\n-//       // response: \"Scrolling down.\",\r\n-//       action: scrollDown,\r\n-//     },\r\n-//     {\r\n-//       utterance: \"scroll to top\",\r\n-//       action: scrollToTop,\r\n-//     },\r\n-//     {\r\n-//       utterance: \"scroll to bottom\",\r\n-//       action: scrollToBottom,\r\n-//     },\r\n-//     {\r\n-//       utterance: \"brane stop\",\r\n-//       action: stopListening,\r\n-//     },\r\n-//     {\r\n-//       utterance: \"brane turn off\",\r\n-//       action: stopListening,\r\n-//     },\r\n-//     {\r\n-//       utterance: \"brane stop the bot\",\r\n-//       action: stopListening,\r\n-//     },\r\n-//   ];\r\n-\r\n-//   return (\r\n-//     <div className=\"speech-bot-container\">\r\n-//       <div\r\n-//         className={`button-container ${\r\n-//           isListening ? \"voicebotframeactive\" : \"voicebotframe\"\r\n-//         }`}\r\n-//       >\r\n-//         <button onClick={isListening ? stopListening : startListening}>\r\n-//           {isListening ? \"Stop\" : \"Start\"} Animation\r\n-//         </button>\r\n-//         {/* <button onClick={toggleBotActive}>\r\n-//         {isBotActive ? 'Deactivate Bot' : 'Activate Bot'}\r\n-//       </button> */}\r\n-//       </div>\r\n-//     </div>\r\n-//   );\r\n-// };\r\n-\r\n-// export default VoiceBot;\r\n-\r\n-//Bot Video added but some start issues\r\n-\r\n-// import React, { useState, useEffect, useRef } from \"react\";\r\n-// import { useNavigate, useLocation } from \"react-router-dom\";\r\n-// import Fuse from \"fuse.js\";\r\n-// import \"./VoiceBot.css\";\r\n-\r\n-// const VoiceBot = ({ videoRef }) => {\r\n-//   const [isListening, setIsListening] = useState(false);\r\n-//   const [isSpeaking, setIsSpeaking] = useState(false);\r\n-//   const recognition = useRef(null);\r\n-//   const speechSynthesis = useRef(window.speechSynthesis);\r\n-//   const hasGreeted = useRef(false);\r\n-//   const restartRecognitionTimeout = useRef(null);\r\n-//   const navigate = useNavigate();\r\n-//   const location = useLocation();\r\n-//   const [isRecognitionActive, setIsRecognitionActive] = useState(false); // New state to track recognition status\r\n-\r\n-//   useEffect(() => {\r\n-//     recognition.current = new window.webkitSpeechRecognition();\r\n-//     recognition.current.continuous = true;\r\n-//     recognition.current.interimResults = false;\r\n-//     recognition.current.onresult = onResult;\r\n-//     recognition.current.onend = () => {\r\n-//       console.log(\"Recognition ended.\");\r\n-//       if (isListening) {\r\n-//         startListening();\r\n-//       }\r\n-//     };\r\n-//     recognition.current.onerror = (event) => {\r\n-//       console.error(\"Recognition error:\", event.error);\r\n-//     };\r\n-\r\n-//     return () => {\r\n-//       recognition.current.abort();\r\n-//     };\r\n-//   }, []);\r\n-\r\n-//   // Update useEffect for managing the recognition state based on isListening and isRecognitionActive\r\n-//   useEffect(() => {\r\n-//     if (isListening && !isRecognitionActive) {\r\n-//       startListening();\r\n-//     } else if (!isListening && isRecognitionActive) {\r\n-//       stopListening();\r\n-//     }\r\n-//   }, [isListening, isRecognitionActive]);\r\n-\r\n-//   const goBack = () => {\r\n-//     if (window.history.length > 1) {\r\n-//       navigate(-1);\r\n-//     } else {\r\n-//       speak(\"Can't go back any further.\");\r\n-//     }\r\n-//   };\r\n-\r\n-//   const goForward = () => {\r\n-//     // Unfortunately, there's no direct way to check if you can go forward in the history.\r\n-//     // You might need to manage this state manually based on user navigation.\r\n-//     navigate(1);\r\n-//   };\r\n-\r\n-//   const playVideo = () => {\r\n-//     if (videoRef.current && !videoRef.current.paused) {\r\n-//       speak(\"Video is already playing.\");\r\n-//     } else if (videoRef.current) {\r\n-//       videoRef.current.play();\r\n-//       speak(\"Playing video.\");\r\n-//     } else {\r\n-//       speak(\"No video to play.\");\r\n-//     }\r\n-//   };\r\n-\r\n-//   const pauseVideo = () => {\r\n-//     if (videoRef.current && videoRef.current.paused) {\r\n-//       speak(\"Video is already paused.\");\r\n-//     } else if (videoRef.current) {\r\n-//       videoRef.current.pause();\r\n-//       speak(\"Video paused.\");\r\n-//     } else {\r\n-//       speak(\"No video to pause.\");\r\n-//     }\r\n-//   };\r\n-\r\n-//   const scrollAmount = window.innerHeight * 0.82;\r\n-\r\n-//   const scrollUp = () => {\r\n-//     if (window.pageYOffset === 0) {\r\n-//       speak(\"Already at the top of the page.\");\r\n-//     } else {\r\n-//       window.scrollBy(0, -scrollAmount);\r\n-//       speak(\"Scrolled up.\");\r\n-//     }\r\n-//   };\r\n-\r\n-//   const scrollDown = () => {\r\n-//     const maxScrollTop =\r\n-//       document.documentElement.scrollHeight - window.innerHeight;\r\n-//     if (window.pageYOffset >= maxScrollTop) {\r\n-//       speak(\"Already at the bottom of the page.\");\r\n-//     } else {\r\n-//       window.scrollBy(0, scrollAmount);\r\n-//       speak(\"Scrolled down.\");\r\n-//     }\r\n-//   };\r\n-\r\n-//   const scrollToTop = () => {\r\n-//     if (window.pageYOffset === 0) {\r\n-//       speak(\"Already at the top of the page.\");\r\n-//     } else {\r\n-//       window.scrollTo(0, 0);\r\n-//       speak(\"Scrolled to the top of the page.\");\r\n-//     }\r\n-//   };\r\n-\r\n-//   const scrollToBottom = () => {\r\n-//     const maxScrollTop =\r\n-//       document.documentElement.scrollHeight - window.innerHeight;\r\n-//     if (window.pageYOffset >= maxScrollTop) {\r\n-//       speak(\"Already at the bottom of the page.\");\r\n-//     } else {\r\n-//       window.scrollTo(0, document.body.scrollHeight);\r\n-//       speak(\"Scrolled to the bottom of the page.\");\r\n-//     }\r\n-//   };\r\n-\r\n-//   // const speak = (message) => {\r\n-//   //   const utterance = new SpeechSynthesisUtterance(message);\r\n-//   //   utterance.onend = () => {\r\n-//   //     setIsSpeaking(false);\r\n-//   //     console.log(\"Speaking ended.\");\r\n-//   //     // Only restart recognition if we're still supposed to be listening\r\n-//   //     // if (isListening) {\r\n-//   //     //   if (restartRecognitionTimeout.current) {\r\n-//   //     //     clearTimeout(restartRecognitionTimeout.current);\r\n-//   //     //   }\r\n-//   //     //   restartRecognitionTimeout.current = setTimeout(() => {\r\n-//   //     //     console.log(\"Recognition restarted.\");\r\n-//   //     //     recognition.current.start();\r\n-//   //     //   }, 100); // Delay to prevent immediate restart\r\n-//   //     // }\r\n-//   //     if (isListening && !recognition.current.starting) { // Check the flag before restarting\r\n-//   //       recognition.current.starting = true; // Set the flag when starting recognition\r\n-//   //       recognition.current.start();\r\n-//   //     }\r\n-//   //   };\r\n-\r\n-//   //   setIsSpeaking(true);\r\n-//   //   console.log(\"Speaking started.\");\r\n-//   //   recognition.current.stop(); // Stop recognition when the bot starts speaking\r\n-//   //   speechSynthesis.current.speak(utterance);\r\n-//   // };\r\n-\r\n-//   const speak = (message) => {\r\n-//     console.log(\"speak function called with message:\", message);\r\n-//     const utterance = new SpeechSynthesisUtterance(message);\r\n-//     utterance.onend = () => {\r\n-//       setIsSpeaking(false);\r\n-//       console.log(\"Speaking ended.\");\r\n-//       // Directly handle the restart of recognition here if needed\r\n-//       if (isListening) {\r\n-//         startListening();\r\n-//       }\r\n-//     };\r\n-\r\n-//     setIsSpeaking(true);\r\n-//     console.log(\"Speaking started.\");\r\n-//     recognition.current.stop(); // Ensure to stop recognition before speaking\r\n-//     speechSynthesis.current.speak(utterance);\r\n-//   };\r\n-\r\n-//   const onResult = (event) => {\r\n-//     const resultIndex = event.resultIndex;\r\n-//     const transcript = event.results[resultIndex][0].transcript\r\n-//       .trim()\r\n-//       .toLowerCase();\r\n-\r\n-//     if (event.results[resultIndex].isFinal) {\r\n-//       console.log(`Recognized text: ${transcript}`);\r\n-//       if (transcript.includes(\"brain\")) {\r\n-//         console.log(\"Wake word heard, processing command...\");\r\n-//         handleCommandWithFuse(transcript.replace(\"brain\", \"\"));\r\n-//       }\r\n-//     }\r\n-//   };\r\n-\r\n-//   // const onRecognitionEnd = () => {\r\n-//   //   console.log(\"Recognition ended.\");\r\n-//   //   setIsRecognitionActive(false); // Update state when recognition ends\r\n-//   //   recognition.current.starting = false; // Reset the flag when recognition ends\r\n-//   //   // We now check if the recognition is already running before starting it again\r\n-//   //   if (isListening && !isSpeaking && !recognition.current?.starting) {\r\n-//   //     console.log(\"Restarting recognition.\");\r\n-//   //     recognition.current.start();\r\n-//   //   }\r\n-//   // };\r\n-\r\n-//   // useEffect(() => {\r\n-//   //   if (isListening && !hasGreeted.current) {\r\n-//   //     speak(\"Hello, I'm Brane. How can I assist you today?\");\r\n-//   //     hasGreeted.current = true;\r\n-//   //   } else if (isListening && !isSpeaking) {\r\n-//   //     recognition.current.start();\r\n-//   //   }\r\n-//   // }, [isListening, isSpeaking]);\r\n-\r\n-//   useEffect(() => {\r\n-//     if (isListening && !hasGreeted.current) {\r\n-//       speak(\"Hello, I'm Brane. How can I assist you today?\");\r\n-//       hasGreeted.current = true;\r\n-//     } else if (isListening && !isSpeaking && !recognition.current.starting) {\r\n-//       // Check the flag before starting\r\n-//       recognition.current.starting = true; // Set the flag when starting recognition\r\n-//       recognition.current.start();\r\n-//     }\r\n-//   }, [isListening, isSpeaking]);\r\n-\r\n-//   // const startListening = () => {\r\n-//   //   console.log(\"Attempting to start listening.\");\r\n-//   //   if (recognition.current && !recognition.current.starting) {\r\n-//   //     setIsListening(true);\r\n-//   //     recognition.current.starting = true; // Set the flag when starting recognition\r\n-//   //     recognition.current.start();\r\n-//   //     console.log(\"Listening started.\");\r\n-//   //   }\r\n-//   // };\r\n-\r\n-//   // const stopListening = () => {\r\n-//   //   console.log(\"Stopping listening.\");\r\n-\r\n-//   //   setIsListening(false);\r\n-//   //   recognition.current.stop();\r\n-//   //   if (speechSynthesis.current.speaking) {\r\n-//   //     speechSynthesis.current.cancel();\r\n-//   //   }\r\n-//   //   if (restartRecognitionTimeout.current) {\r\n-//   //     clearTimeout(restartRecognitionTimeout.current);\r\n-//   //   }\r\n-//   //   console.log(\"Listening stopped.\");\r\n-//   // };\r\n-//   // Handle start and stop listening logic\r\n-//   const startListening = () => {\r\n-//     console.log(\"Attempting to start listening.\");\r\n-//     if (!recognition.current.starting) {\r\n-//       setIsListening(true);\r\n-//       recognition.current.starting = true;\r\n-//       recognition.current.start();\r\n-//       console.log(\"Listening started.\");\r\n-//     } else {\r\n-//       console.log(\"Recognition already active.\");\r\n-//     }\r\n-//   };\r\n-\r\n-//   const stopListening = () => {\r\n-//     console.log(\"Stopping listening.\");\r\n-//     if (recognition.current.starting) {\r\n-//       setIsListening(false);\r\n-//       recognition.current.starting = false;\r\n-//       recognition.current.stop();\r\n-//       console.log(\"Listening stopped.\");\r\n-//     } else {\r\n-//       console.log(\"Recognition already inactive.\");\r\n-//     }\r\n-//   };\r\n-\r\n-//   // const handleCommandWithFuse = (command) => {\r\n-//   //   const fuse = new Fuse(commands, { keys: [\"utterance\"], threshold: 0.4 });\r\n-//   //   const results = fuse.search(command);\r\n-//   //   const foundCommand = results.length ? results[0].item : null;\r\n-\r\n-//   //   if (foundCommand) {\r\n-//   //     console.log(\"Command found:\", foundCommand.utterance);\r\n-//   //     speak(foundCommand.response);\r\n-//   //     if (foundCommand.route) {\r\n-//   //       navigate(foundCommand.route); // Navigate to the route specified in the command\r\n-//   //     }\r\n-//   //   } else {\r\n-//   //     console.log(\"No command found.\");\r\n-//   //     speak(\"I'm not sure how to respond to that.\");\r\n-//   //   }\r\n-//   // };\r\n-\r\n-//   const handleCommandWithFuse = (command) => {\r\n-//     const fuse = new Fuse(commands, { keys: [\"utterance\"], threshold: 0.4 });\r\n-//     const results = fuse.search(command);\r\n-//     const foundCommand = results.length ? results[0].item : null;\r\n-\r\n-//     if (foundCommand) {\r\n-//       console.log(\"Command found:\", foundCommand.utterance);\r\n-\r\n-//       if (foundCommand.route) {\r\n-//         if (location.pathname !== foundCommand.route) {\r\n-//           navigate(foundCommand.route);\r\n-//           speak(\r\n-//             `Navigating to ${\r\n-//               foundCommand.routeDescription || \"requested page\"\r\n-//             }.`\r\n-//           );\r\n-//         } else {\r\n-//           speak(\r\n-//             `You are already on the ${\r\n-//               foundCommand.routeDescription || \"requested page\"\r\n-//             }.`\r\n-//           );\r\n-//         }\r\n-//       } else if (foundCommand.action) {\r\n-//         foundCommand.action();\r\n-//       }\r\n-\r\n-//       if (foundCommand.response) {\r\n-//         speak(foundCommand.response);\r\n-//       }\r\n-//     } else {\r\n-//       console.log(\"No command found.\");\r\n-//       speak(\"I'm not sure how to respond to that.\");\r\n-//     }\r\n-//   };\r\n-\r\n-//   const commands = [\r\n-//     {\r\n-//       utterance: \"Hello who are you ?\",\r\n-\r\n-//       response:\r\n-//         \"Hi! This is Brane! your Voice bot from Brane Education How can I Assist you Today ?\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"Hello\",\r\n-\r\n-//       response: \"Hi! How can I assist you today?\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"hello\",\r\n-\r\n-//       response: \"Hi! How can I assist you today?\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"Hi.\",\r\n-\r\n-//       response: \"Hello! How can I assist you today?\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"Hey there\",\r\n-\r\n-//       response: \"Hi! How can I assist you today?\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"Good morning Brane.\",\r\n-\r\n-//       response: \"Hey Hiii! Good morning  ! How can I help you?\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"Good afternoon Brane.\",\r\n-\r\n-//       response: \"Hey Hiii! Good after noon ! How can I help you?\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"Good evening Brane.\",\r\n-\r\n-//       response: \"Hey Hiii! Good evening ! How can I help you?\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"can you please take me to login page\",\r\n-//       route: \"/login\",\r\n-//       routeDescription: \"login page\",\r\n-//       response: \"Navigating to the login page.\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"go to login page\",\r\n-//       route: \"/login\",\r\n-//       routeDescription: \"login page\",\r\n-//       response: \"Navigating to the login page.\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"please take me to login page\",\r\n-//       route: \"/login\",\r\n-//       routeDescription: \"login page\",\r\n-//       response: \"Navigating to the login page.\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"Go to login page\",\r\n-//       route: \"/login\",\r\n-//       routeDescription: \"login page\",\r\n-//       response: \"Navigating to the login page.\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"open login page\",\r\n-//       route: \"/login\",\r\n-//       routeDescription: \"login page\",\r\n-//       response: \"Navigating to the login page.\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"can you please take me to signup page\",\r\n-//       route: \"/signup\",\r\n-//       routeDescription: \"signup page\",\r\n-//       response: \"Navigating to the signup page.\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"take me to signup page\",\r\n-//       route: \"/signup\",\r\n-//       routeDescription: \"signup page\",\r\n-//       response: \"Navigating to the signup page.\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"Go to signup page\",\r\n-//       route: \"/signup\",\r\n-//       routeDescription: \"signup page\",\r\n-//       response: \"Navigating to the signup page.\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"open signup page\",\r\n-//       route: \"/signup\",\r\n-//       routeDescription: \"signup page\",\r\n-//       response: \"Navigating to the signup page.\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"what are platform features\",\r\n-\r\n-//       response:\r\n-//         \"Dashboard, Dynamic time table, Learning Networks, Little Masters, Video Based Dictionary, General Search.\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"Features of platform\",\r\n-\r\n-//       response:\r\n-//         \"Dashboard, Dynamic time table, Learning Networks, Little Masters, Video Based Dictionary, General Search.\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"What does the platform offer\",\r\n-\r\n-//       response:\r\n-//         \"Dashboard, Dynamic time table, Learning Networks, Little Masters, Video Based Dictionary, General Search.\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"Say me the features of platform\",\r\n-\r\n-//       response:\r\n-//         \"Dashboard, Dynamic time table, Learning Networks, Little Masters, Video Based Dictionary, General Search.\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"Say me the services of platform\",\r\n-\r\n-//       response:\r\n-//         \"Dashboard, Dynamic time table, Learning Networks, Little Masters, Video Based Dictionary, General Search.\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"tell me the services offered by the platform\",\r\n-\r\n-//       response:\r\n-//         \"Dashboard, Dynamic time table, Learning Networks, Little Masters, Video Based Dictionary, General Search.\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"explain platform services\",\r\n-\r\n-//       response:\r\n-//         \"Dashboard, Dynamic time table, Learning Networks, Little Masters, Video Based Dictionary, General Search.\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"Give me the Parent voice of Julia Harris\",\r\n-\r\n-//       response:\r\n-//         \"Brane education has helped my son a lot in his studies. He improved a lot in his studies and is now able to score good marks in his exams\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"Play today's motivational video\",\r\n-\r\n-//       response: \"I am playing the video\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"Play today's video\",\r\n-\r\n-//       response: \"I am playing Motivational video\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"Leaders Voice\",\r\n-\r\n-//       response:\r\n-//         \"This Voice-interactive AI Platform is a game Changer. It revolutionizes education.\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"Curriculum Supported by Brane Education\",\r\n-\r\n-//       response:\r\n-//         \"we support multiple Boards let me say few Telangana State Board Andhra Pradesh Board Maharashtra Board Assam Board\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"Boards supported by the platform\",\r\n-\r\n-//       response:\r\n-//         \"we support multiple Boards let me say few Telangana State Board Andhra Pradesh Board Maharashtra Board Assam Board\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"Curriculum\",\r\n-\r\n-//       response:\r\n-//         \"we support multiple Boards let me say few Telangana State Board Andhra Pradesh Board Maharashtra Board Assam Board\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"Go to landing page\",\r\n-\r\n-//       response: \"Okay, I am taking you to the landing page.\",\r\n-\r\n-//       route: \"/childpage\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"take me to landing page\",\r\n-\r\n-//       response: \"Okay, I am taking you to the landing page.\",\r\n-\r\n-//       route: \"/childpage\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"move to landing page\",\r\n-\r\n-//       response: \"Okay, I am taking you to the landing page.\",\r\n-\r\n-//       route: \"/childpage\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"roll back to landing page\",\r\n-\r\n-//       response: \"Okay, I am taking you to the landing page.\",\r\n-\r\n-//       route: \"/childpage\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"move to landing page\",\r\n-\r\n-//       response: \"Okay, I am taking you to the landing page.\",\r\n-\r\n-//       route: \"/childpage\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"what is today's quote\",\r\n-\r\n-//       response:\r\n-//         \"Determination is the power that sees us through all our frustration and obstacles. It helps in building our willpower which is the very basis of success.\",\r\n-\r\n-//       // route: \"/childpage\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"Today's Inspirational quote\",\r\n-\r\n-//       response:\r\n-//         \"Determination is the power that sees us through all our frustration and obstacles. It helps in building our willpower which is the very basis of success.\",\r\n-\r\n-//       // route: \"/childpage\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"say me today's quote\",\r\n-\r\n-//       response:\r\n-//         \"Determination is the power that sees us through all our frustration and obstacles. It helps in building our willpower which is the very basis of success.\",\r\n-\r\n-//       // route: \"/childpage\",\r\n-//     },\r\n-//     {\r\n-//       utterance: \"go back\",\r\n-//       response: \"Going back.\",\r\n-//       action: goBack, // Note the use of an action property\r\n-//     },\r\n-//     {\r\n-//       utterance: \"go forward\",\r\n-//       response: \"Going forward.\",\r\n-//       action: goForward,\r\n-//     },\r\n-//     {\r\n-//       utterance: \"play video\",\r\n-//       // response: \"Playing video.\",\r\n-//       action: playVideo,\r\n-//     },\r\n-//     {\r\n-//       utterance: \"pause video\",\r\n-//       // response: \"Pausing video.\",\r\n-//       action: pauseVideo,\r\n-//     },\r\n-//     {\r\n-//       utterance: \"start video\",\r\n-//       // response: \"Playing video.\",\r\n-//       action: playVideo,\r\n-//     },\r\n-//     {\r\n-//       utterance: \"stop video\",\r\n-//       // response: \"Playing video.\",\r\n-//       action: pauseVideo,\r\n-//     },\r\n-//     {\r\n-//       utterance: \"scroll up\",\r\n-//       // response: \"Scrolling up.\",\r\n-//       action: scrollUp,\r\n-//     },\r\n-//     {\r\n-//       utterance: \"scroll down\",\r\n-//       // response: \"Scrolling down.\",\r\n-//       action: scrollDown,\r\n-//     },\r\n-//     {\r\n-//       utterance: \"go up\",\r\n-\r\n-//       // response: \"Scrolling up.\",\r\n-//       action: scrollUp,\r\n-//     },\r\n-//     {\r\n-//       utterance: \"go down\",\r\n-//       // response: \"Scrolling down.\",\r\n-//       action: scrollDown,\r\n-//     },\r\n-//     {\r\n-//       utterance: \"scroll to top\",\r\n-//       action: scrollToTop,\r\n-//     },\r\n-//     {\r\n-//       utterance: \"scroll to bottom\",\r\n-//       action: scrollToBottom,\r\n-//     },\r\n-//   ];\r\n-//   return (\r\n-//     <div className=\"speech-bot-container\">\r\n-//       <div\r\n-//         className={`button-container ${\r\n-//           isListening ? \"voicebotframeactive\" : \"voicebotframe\"\r\n-//         }`}\r\n-//       >\r\n-//         <div onClick={isListening ? stopListening : startListening}>\r\n-//           <iframe\r\n-//             src={\r\n-//               isListening\r\n-//                 ? \"https://lottie.host/?file=a89aca3f-5407-4052-82c3-2048afca7a9f/NpCdWzLSKD.json\"\r\n-//                 : \"https://lottie.host/?file=d2b6cc0e-fe95-4847-85b5-35365fca7e00/vTudpCuPZq.json\"\r\n-//             }\r\n-//             width=\"120\" // Set your desired width\r\n-//             height=\"120\" // Set your desired height\r\n-//             title={isListening ? \"Stop Animation\" : \"Start Animation\"}\r\n-//             className={isListening ? \"voicebotframeactive\" : \"voicebotframe\"}\r\n-//           ></iframe>\r\n-//           {isListening ? (\r\n-//             <div className=\"overlay\" onClick={stopListening}></div>\r\n-//           ) : (\r\n-//             <div className=\"overlay\" onClick={startListening}></div>\r\n-//           )}\r\n-//         </div>\r\n-//       </div>\r\n-//     </div>\r\n-//   );\r\n-// };\r\n-\r\n-// export default VoiceBot;\r\n-\r\n-// All functionalities but messed up\r\n-\r\n-// import React, { useState, useEffect, useRef } from \"react\";\r\n-// import { useNavigate, useLocation } from \"react-router-dom\";\r\n-// import Fuse from \"fuse.js\";\r\n-// import \"./VoiceBot.css\";\r\n-\r\n-// const VoiceBot = ({ videoRef, takeTestRef, goBackRef }) => {\r\n-//   const [isListening, setIsListening] = useState(false);\r\n-//   const [isSpeaking, setIsSpeaking] = useState(false);\r\n-//   const recognition = useRef(null);\r\n-//   const speechSynthesis = useRef(window.speechSynthesis);\r\n-//   const hasGreeted = useRef(false);\r\n-//   const navigate = useNavigate();\r\n-//   const location = useLocation();\r\n-//   const isRecognitionActive = useRef(false);\r\n-\r\n-//   useEffect(() => {\r\n-//     recognition.current = new window.webkitSpeechRecognition();\r\n-//     recognition.current.continuous = true;\r\n-//     recognition.current.interimResults = false;\r\n-//     recognition.current.onresult = onResult;\r\n-//     recognition.current.onend = onRecognitionEnd;\r\n-\r\n-//     return () => {\r\n-//       if (recognition.current) {\r\n-//         recognition.current.abort();\r\n-//       }\r\n-//     };\r\n-//   }, [location.pathname]);\r\n-\r\n-//   const onResult = (event) => {\r\n-//     const resultIndex = event.resultIndex;\r\n-//     const transcript = event.results[resultIndex][0].transcript\r\n-//       .trim()\r\n-//       .toLowerCase();\r\n-\r\n-//     if (event.results[resultIndex].isFinal) {\r\n-//       console.log(`Recognized text: ${transcript}`);\r\n-//       if (transcript.includes(\"brain\")) {\r\n-//         console.log(\"Wake word heard, processing command...\");\r\n-//         handleCommandWithFuse(transcript.replace(\"brain\", \"\"));\r\n-//       }\r\n-//     }\r\n-//   };\r\n-\r\n-//   const startListening = () => {\r\n-//     if (!isRecognitionActive.current) {\r\n-//       setIsListening(true);\r\n-//       recognition.current.start();\r\n-//       isRecognitionActive.current = true;\r\n-//     }\r\n-//   };\r\n-\r\n-//   const stopListening = () => {\r\n-//     if (isRecognitionActive.current) {\r\n-//       setIsListening(false);\r\n-//       recognition.current.stop();\r\n-//       isRecognitionActive.current = false;\r\n-//     }\r\n-//   };\r\n-\r\n-//   const onRecognitionEnd = () => {\r\n-//     isRecognitionActive.current = false;\r\n-//     if (isListening) {\r\n-//       startListening();\r\n-//     }\r\n-//   };\r\n-\r\n-//   const speak = (message) => {\r\n-//     const utterance = new SpeechSynthesisUtterance(message);\r\n-//     utterance.onend = () => {\r\n-//       setIsSpeaking(false);\r\n-//       if (isListening && !isRecognitionActive.current) {\r\n-//         startListening();\r\n-//       }\r\n-//     };\r\n-\r\n-//     setIsSpeaking(true);\r\n-//     if (isRecognitionActive.current) {\r\n-//       stopListening(); // Adjusted to use stopListening\r\n-//     }\r\n-//     speechSynthesis.current.speak(utterance);\r\n-//   };\r\n-\r\n-//   useEffect(() => {\r\n-//     if (isListening && !hasGreeted.current) {\r\n-//       speak(\"Hello, I'm Brane. How can I assist you today?\");\r\n-//       hasGreeted.current = true;\r\n-//     }\r\n-//   }, [isListening]);\r\n-\r\n-//   const goBack = () => {\r\n-//     if (window.history.length > 1) {\r\n-//       navigate(-1);\r\n-//     } else {\r\n-//       speak(\"Can't go back any further.\");\r\n-//     }\r\n-//   };\r\n-\r\n-//   const goForward = () => {\r\n-//     // Unfortunately, there's no direct way to check if you can go forward in the history.\r\n-//     // You might need to manage this state manually based on user navigation.\r\n-//     navigate(1);\r\n-//   };\r\n-\r\n-//   const playVideo = () => {\r\n-//     if (videoRef.current && !videoRef.current.paused) {\r\n-//       speak(\"Video is already playing.\");\r\n-//     } else if (videoRef.current) {\r\n-//       videoRef.current.play();\r\n-//       speak(\"Playing video.\");\r\n-//     } else {\r\n-//       speak(\"No video to play.\");\r\n-//     }\r\n-//   };\r\n-\r\n-//   const pauseVideo = () => {\r\n-//     if (videoRef.current && videoRef.current.paused) {\r\n-//       speak(\"Video is already paused.\");\r\n-//     } else if (videoRef.current) {\r\n-//       videoRef.current.pause();\r\n-//       speak(\"Video paused.\");\r\n-//     } else {\r\n-//       speak(\"No video to pause.\");\r\n-//     }\r\n-//   };\r\n-\r\n-//   const scrollAmount = window.innerHeight * 0.82;\r\n-\r\n-//   const scrollUp = () => {\r\n-//     if (window.pageYOffset === 0) {\r\n-//       speak(\"Already at the top of the page.\");\r\n-//     } else {\r\n-//       window.scrollBy(0, -scrollAmount);\r\n-//       speak(\"Scrolled up.\");\r\n-//     }\r\n-//   };\r\n-\r\n-//   const scrollDown = () => {\r\n-//     const maxScrollTop =\r\n-//       document.documentElement.scrollHeight - window.innerHeight;\r\n-//     if (window.pageYOffset >= maxScrollTop) {\r\n-//       speak(\"Already at the bottom of the page.\");\r\n-//     } else {\r\n-//       window.scrollBy(0, scrollAmount);\r\n-//       speak(\"Scrolled down.\");\r\n-//     }\r\n-//   };\r\n-\r\n-//   const scrollToTop = () => {\r\n-//     if (window.pageYOffset === 0) {\r\n-//       speak(\"Already at the top of the page.\");\r\n-//     } else {\r\n-//       window.scrollTo(0, 0);\r\n-//       speak(\"Scrolled to the top of the page.\");\r\n-//     }\r\n-//   };\r\n-\r\n-//   const scrollToBottom = () => {\r\n-//     const maxScrollTop =\r\n-//       document.documentElement.scrollHeight - window.innerHeight;\r\n-//     if (window.pageYOffset >= maxScrollTop) {\r\n-//       speak(\"Already at the bottom of the page.\");\r\n-//     } else {\r\n-//       window.scrollTo(0, document.body.scrollHeight);\r\n-//       speak(\"Scrolled to the bottom of the page.\");\r\n-//     }\r\n-//   };\r\n-\r\n-//   // const speak = (message) => {\r\n-//   //   const utterance = new SpeechSynthesisUtterance(message);\r\n-//   //   utterance.onend = () => {\r\n-//   //     setIsSpeaking(false);\r\n-//   //     console.log(\"Speaking ended.\");\r\n-//   //     // Only restart recognition if we're still supposed to be listening\r\n-//   //     // if (isListening) {\r\n-//   //     //   if (restartRecognitionTimeout.current) {\r\n-//   //     //     clearTimeout(restartRecognitionTimeout.current);\r\n-//   //     //   }\r\n-//   //     //   restartRecognitionTimeout.current = setTimeout(() => {\r\n-//   //     //     console.log(\"Recognition restarted.\");\r\n-//   //     //     recognition.current.start();\r\n-//   //     //   }, 100); // Delay to prevent immediate restart\r\n-//   //     // }\r\n-//   //     if (isListening && !recognition.current.starting) { // Check the flag before restarting\r\n-//   //       recognition.current.starting = true; // Set the flag when starting recognition\r\n-//   //       recognition.current.start();\r\n-//   //     }\r\n-//   //   };\r\n-\r\n-//   //   setIsSpeaking(true);\r\n-//   //   console.log(\"Speaking started.\");\r\n-//   //   recognition.current.stop(); // Stop recognition when the bot starts speaking\r\n-//   //   speechSynthesis.current.speak(utterance);\r\n-//   // };\r\n-\r\n-//   // const onRecognitionEnd = () => {\r\n-//   //   console.log(\"Recognition ended.\");\r\n-//   //   setIsRecognitionActive(false); // Update state when recognition ends\r\n-//   //   recognition.current.starting = false; // Reset the flag when recognition ends\r\n-//   //   // We now check if the recognition is already running before starting it again\r\n-//   //   if (isListening && !isSpeaking && !recognition.current?.starting) {\r\n-//   //     console.log(\"Restarting recognition.\");\r\n-//   //     recognition.current.start();\r\n-//   //   }\r\n-//   // };\r\n-\r\n-//   // useEffect(() => {\r\n-//   //   if (isListening && !hasGreeted.current) {\r\n-//   //     speak(\"Hello, I'm Brane. How can I assist you today?\");\r\n-//   //     hasGreeted.current = true;\r\n-//   //   } else if (isListening && !isSpeaking) {\r\n-//   //     recognition.current.start();\r\n-//   //   }\r\n-//   // }, [isListening, isSpeaking]);\r\n-\r\n-//   // const startListening = () => {\r\n-//   //   console.log(\"Attempting to start listening.\");\r\n-//   //   if (recognition.current && !recognition.current.starting) {\r\n-//   //     setIsListening(true);\r\n-//   //     recognition.current.starting = true; // Set the flag when starting recognition\r\n-//   //     recognition.current.start();\r\n-//   //     console.log(\"Listening started.\");\r\n-//   //   }\r\n-//   // };\r\n-\r\n-//   // const stopListening = () => {\r\n-//   //   console.log(\"Stopping listening.\");\r\n-\r\n-//   //   setIsListening(false);\r\n-//   //   recognition.current.stop();\r\n-//   //   if (speechSynthesis.current.speaking) {\r\n-//   //     speechSynthesis.current.cancel();\r\n-//   //   }\r\n-//   //   if (restartRecognitionTimeout.current) {\r\n-//   //     clearTimeout(restartRecognitionTimeout.current);\r\n-//   //   }\r\n-//   //   console.log(\"Listening stopped.\");\r\n-//   // };\r\n-//   // Handle start and stop listening logic\r\n-\r\n-//   useEffect(() => {\r\n-//     if (isListening && !hasGreeted.current) {\r\n-//       speak(\"Hello, I'm Brane. How can I assist you today?\");\r\n-//       hasGreeted.current = true;\r\n-//     }\r\n-//   }, [isListening]);\r\n-\r\n-//   // const handleCommandWithFuse = (command) => {\r\n-//   //   const fuse = new Fuse(commands, { keys: [\"utterance\"], threshold: 0.4 });\r\n-//   //   const results = fuse.search(command);\r\n-//   //   const foundCommand = results.length ? results[0].item : null;\r\n-\r\n-//   //   if (foundCommand) {\r\n-//   //     console.log(\"Command found:\", foundCommand.utterance);\r\n-//   //     speak(foundCommand.response);\r\n-//   //     if (foundCommand.route) {\r\n-//   //       navigate(foundCommand.route); // Navigate to the route specified in the command\r\n-//   //     }\r\n-//   //   } else {\r\n-//   //     console.log(\"No command found.\");\r\n-//   //     speak(\"I'm not sure how to respond to that.\");\r\n-//   //   }\r\n-//   // };\r\n-\r\n-//   const handleCommandWithFuse = (command) => {\r\n-//     const fuse = new Fuse(commands, { keys: [\"utterance\"], threshold: 0.4 });\r\n-//     const results = fuse.search(command);\r\n-//     const foundCommand = results.length ? results[0].item : null;\r\n-\r\n-//     if (foundCommand) {\r\n-//       console.log(\"Command found:\", foundCommand.utterance);\r\n-\r\n-//       if (foundCommand.action) {\r\n-//         foundCommand.action();\r\n-//       } else if (foundCommand.route) {\r\n-//         navigate(foundCommand.route);\r\n-//       }\r\n-\r\n-//       if (foundCommand.response) {\r\n-//         speak(foundCommand.response);\r\n-//       }\r\n-//     } else {\r\n-//       console.log(\"No command found.\");\r\n-//       speak(\"I'm not sure how to respond to that.\");\r\n-//     }\r\n-//   };\r\n-\r\n-//   const commands = [\r\n-//     {\r\n-//       utterance: \"Hello who are you ?\",\r\n-\r\n-//       response:\r\n-//         \"Hi! This is Brane! your Voice bot from Brane Education How can I Assist you Today ?\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"Hello\",\r\n-\r\n-//       response: \"Hi! How can I assist you today?\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"hello\",\r\n-\r\n-//       response: \"Hi! How can I assist you today?\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"Hi.\",\r\n-\r\n-//       response: \"Hello! How can I assist you today?\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"Hey there\",\r\n-\r\n-//       response: \"Hi! How can I assist you today?\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"Good morning Brane.\",\r\n-\r\n-//       response: \"Hey Hiii! Good morning  ! How can I help you?\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"Good afternoon Brane.\",\r\n-\r\n-//       response: \"Hey Hiii! Good after noon ! How can I help you?\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"Good evening Brane.\",\r\n-\r\n-//       response: \"Hey Hiii! Good evening ! How can I help you?\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"can you please take me to login page\",\r\n-//       route: \"/login\",\r\n-//       routeDescription: \"login page\",\r\n-//       response: \"Navigating to the login page.\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"go to login page\",\r\n-//       route: \"/login\",\r\n-//       routeDescription: \"login page\",\r\n-//       response: \"Navigating to the login page.\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"please take me to login page\",\r\n-//       route: \"/login\",\r\n-//       routeDescription: \"login page\",\r\n-//       response: \"Navigating to the login page.\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"Go to login page\",\r\n-//       route: \"/login\",\r\n-//       routeDescription: \"login page\",\r\n-//       response: \"Navigating to the login page.\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"open login page\",\r\n-//       route: \"/login\",\r\n-//       routeDescription: \"login page\",\r\n-//       response: \"Navigating to the login page.\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"can you please take me to signup page\",\r\n-//       route: \"/signup\",\r\n-//       routeDescription: \"signup page\",\r\n-//       response: \"Navigating to the signup page.\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"take me to signup page\",\r\n-//       route: \"/signup\",\r\n-//       routeDescription: \"signup page\",\r\n-//       response: \"Navigating to the signup page.\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"Go to signup page\",\r\n-//       route: \"/signup\",\r\n-//       routeDescription: \"signup page\",\r\n-//       response: \"Navigating to the signup page.\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"open signup page\",\r\n-//       route: \"/signup\",\r\n-//       routeDescription: \"signup page\",\r\n-//       response: \"Navigating to the signup page.\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"what are platform features\",\r\n-\r\n-//       response:\r\n-//         \"Dashboard, Dynamic time table, Learning Networks, Little Masters, Video Based Dictionary, General Search.\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"Features of platform\",\r\n-\r\n-//       response:\r\n-//         \"Dashboard, Dynamic time table, Learning Networks, Little Masters, Video Based Dictionary, General Search.\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"What does the platform offer\",\r\n-\r\n-//       response:\r\n-//         \"Dashboard, Dynamic time table, Learning Networks, Little Masters, Video Based Dictionary, General Search.\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"Say me the features of platform\",\r\n-\r\n-//       response:\r\n-//         \"Dashboard, Dynamic time table, Learning Networks, Little Masters, Video Based Dictionary, General Search.\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"Say me the services of platform\",\r\n-\r\n-//       response:\r\n-//         \"Dashboard, Dynamic time table, Learning Networks, Little Masters, Video Based Dictionary, General Search.\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"tell me the services offered by the platform\",\r\n-\r\n-//       response:\r\n-//         \"Dashboard, Dynamic time table, Learning Networks, Little Masters, Video Based Dictionary, General Search.\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"explain platform services\",\r\n-\r\n-//       response:\r\n-//         \"Dashboard, Dynamic time table, Learning Networks, Little Masters, Video Based Dictionary, General Search.\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"Give me the Parent voice of Julia Harris\",\r\n-\r\n-//       response:\r\n-//         \"Brane education has helped my son a lot in his studies. He improved a lot in his studies and is now able to score good marks in his exams\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"Play today's motivational video\",\r\n-\r\n-//       response: \"I am playing the video\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"Play today's video\",\r\n-\r\n-//       response: \"I am playing Motivational video\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"Leaders Voice\",\r\n-\r\n-//       response:\r\n-//         \"This Voice-interactive AI Platform is a game Changer. It revolutionizes education.\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"Curriculum Supported by Brane Education\",\r\n-\r\n-//       response:\r\n-//         \"we support multiple Boards let me say few Telangana State Board Andhra Pradesh Board Maharashtra Board Assam Board\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"Boards supported by the platform\",\r\n-\r\n-//       response:\r\n-//         \"we support multiple Boards let me say few Telangana State Board Andhra Pradesh Board Maharashtra Board Assam Board\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"Curriculum\",\r\n-\r\n-//       response:\r\n-//         \"we support multiple Boards let me say few Telangana State Board Andhra Pradesh Board Maharashtra Board Assam Board\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"Go to landing page\",\r\n-\r\n-//       response: \"Okay, I am taking you to the landing page.\",\r\n-\r\n-//       route: \"/childpage\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"take me to landing page\",\r\n-\r\n-//       response: \"Okay, I am taking you to the landing page.\",\r\n-\r\n-//       route: \"/childpage\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"move to landing page\",\r\n-\r\n-//       response: \"Okay, I am taking you to the landing page.\",\r\n-\r\n-//       route: \"/childpage\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"roll back to landing page\",\r\n-\r\n-//       response: \"Okay, I am taking you to the landing page.\",\r\n-\r\n-//       route: \"/childpage\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"move to landing page\",\r\n-\r\n-//       response: \"Okay, I am taking you to the landing page.\",\r\n-\r\n-//       route: \"/childpage\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"what is today's quote\",\r\n-\r\n-//       response:\r\n-//         \"Determination is the power that sees us through all our frustration and obstacles. It helps in building our willpower which is the very basis of success.\",\r\n-\r\n-//       // route: \"/childpage\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"Today's Inspirational quote\",\r\n-\r\n-//       response:\r\n-//         \"Determination is the power that sees us through all our frustration and obstacles. It helps in building our willpower which is the very basis of success.\",\r\n-\r\n-//       // route: \"/childpage\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"say me today's quote\",\r\n-\r\n-//       response:\r\n-//         \"Determination is the power that sees us through all our frustration and obstacles. It helps in building our willpower which is the very basis of success.\",\r\n-\r\n-//       // route: \"/childpage\",\r\n-//     },\r\n-//     {\r\n-//       utterance: \"go back\",\r\n-//       response: \"Going back.\",\r\n-//       action: goBack, // Note the use of an action property\r\n-//     },\r\n-//     {\r\n-//       utterance: \"go forward\",\r\n-//       response: \"Going forward.\",\r\n-//       action: goForward,\r\n-//     },\r\n-//     {\r\n-//       utterance: \"play video\",\r\n-//       // response: \"Playing video.\",\r\n-//       action: playVideo,\r\n-//     },\r\n-//     {\r\n-//       utterance: \"pause video\",\r\n-//       // response: \"Pausing video.\",\r\n-//       action: pauseVideo,\r\n-//     },\r\n-//     {\r\n-//       utterance: \"start video\",\r\n-//       // response: \"Playing video.\",\r\n-//       action: playVideo,\r\n-//     },\r\n-//     {\r\n-//       utterance: \"stop video\",\r\n-//       // response: \"Playing video.\",\r\n-//       action: pauseVideo,\r\n-//     },\r\n-//     {\r\n-//       utterance: \"scroll up\",\r\n-//       // response: \"Scrolling up.\",\r\n-//       action: scrollUp,\r\n-//     },\r\n-//     {\r\n-//       utterance: \"scroll down\",\r\n-//       // response: \"Scrolling down.\",\r\n-//       action: scrollDown,\r\n-//     },\r\n-//     {\r\n-//       utterance: \"go up\",\r\n-\r\n-//       // response: \"Scrolling up.\",\r\n-//       action: scrollUp,\r\n-//     },\r\n-//     {\r\n-//       utterance: \"go down\",\r\n-//       // response: \"Scrolling down.\",\r\n-//       action: scrollDown,\r\n-//     },\r\n-//     {\r\n-//       utterance: \"scroll to top\",\r\n-//       action: scrollToTop,\r\n-//     },\r\n-//     {\r\n-//       utterance: \"scroll to bottom\",\r\n-//       action: scrollToBottom,\r\n-//     },\r\n-//     {\r\n-//       utterance: \"go back\",\r\n-//       action: goBackRef?.current?.click, // Use goBackRef directly\r\n-//       response: \"Going back.\",\r\n-//     },\r\n-//     {\r\n-//       utterance: \"take test\",\r\n-//       action: takeTestRef?.current?.click, // Use takeTestRef directly\r\n-//       response: \"Starting the test.\",\r\n-//     },\r\n-//   ];\r\n-//   return (\r\n-//     <div className=\"speech-bot-container\">\r\n-//       <div\r\n-//         className={`button-container ${\r\n-//           isListening ? \"voicebotframeactive\" : \"voicebotframe\"\r\n-//         }`}\r\n-//       >\r\n-//         <div onClick={isListening ? stopListening : startListening}>\r\n-//           <iframe\r\n-//             src={\r\n-//               isListening\r\n-//                 ? \"https://lottie.host/?file=a89aca3f-5407-4052-82c3-2048afca7a9f/NpCdWzLSKD.json\"\r\n-//                 : \"https://lottie.host/?file=d2b6cc0e-fe95-4847-85b5-35365fca7e00/vTudpCuPZq.json\"\r\n-//             }\r\n-//             width=\"120\" // Set your desired width\r\n-//             height=\"120\" // Set your desired height\r\n-//             title={isListening ? \"Stop Animation\" : \"Start Animation\"}\r\n-//             className={isListening ? \"voicebotframeactive\" : \"voicebotframe\"}\r\n-//           ></iframe>\r\n-//           {isListening ? (\r\n-//             <div className=\"overlay\" onClick={stopListening}></div>\r\n-//           ) : (\r\n-//             <div className=\"overlay\" onClick={startListening}></div>\r\n-//           )}\r\n-//         </div>\r\n-//       </div>\r\n-//     </div>\r\n-//   );\r\n-// };\r\n-\r\n-// export default VoiceBot;\r\n"
                },
                {
                    "date": 1700656385010,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,3759 @@\n+import React, { useState, useEffect, useRef } from \"react\";\r\n+import { useNavigate, useLocation } from \"react-router-dom\";\r\n+import Fuse from \"fuse.js\";\r\n+import \"./VoiceBot.css\";\r\n+import chatbotimage from \"../../assets/chatbotgif.gif\";\r\n+\r\n+const VoiceBot = ({ videoRefs }) => {\r\n+  const [isListening, setIsListening] = useState(false);\r\n+  const [isSpeaking, setIsSpeaking] = useState(false);\r\n+  const recognition = useRef(null);\r\n+  const speechSynthesis = useRef(window.speechSynthesis);\r\n+  const [hasGreeted, setHasGreeted] = useState(false);\r\n+  const navigate = useNavigate();\r\n+\r\n+  // Initialize speech recognition\r\n+  useEffect(() => {\r\n+    recognition.current = new window.webkitSpeechRecognition();\r\n+    recognition.current.continuous = true;\r\n+    recognition.current.interimResults = false;\r\n+    recognition.current.onresult = onResult;\r\n+    recognition.current.onend = onRecognitionEnd;\r\n+    recognition.current.starting = false;\r\n+\r\n+    recognition.current.onerror = (event) => {\r\n+      console.error(\"Recognition error:\", event.error);\r\n+      if (isListening && !isSpeaking) {\r\n+        restartRecognition();\r\n+      }\r\n+    };\r\n+\r\n+    return () => {\r\n+      if (recognition.current) {\r\n+        recognition.current.abort();\r\n+      }\r\n+    };\r\n+  }, []);\r\n+\r\n+  useEffect(() => {\r\n+    const checkRecognition = () => {\r\n+      if (isListening && !isSpeaking && !recognition.current.starting) {\r\n+        console.log(\"Restarting recognition because it's not active.\");\r\n+        recognition.current.starting = true;\r\n+        recognition.current.start();\r\n+        console.log(\"Restarted recognition.\");\r\n+      }\r\n+    };\r\n+\r\n+    const recognitionCheckInterval = setInterval(checkRecognition, 500); // Check every .5 second\r\n+\r\n+    return () => {\r\n+      clearInterval(recognitionCheckInterval);\r\n+    };\r\n+  }, [isListening, isSpeaking]);\r\n+\r\n+  const historyStack = useRef([]);\r\n+\r\n+  useEffect(() => {\r\n+    return () => {\r\n+      // Clean up the listener when the component unmounts\r\n+      window.removeEventListener(\"popstate\", handlePopState);\r\n+    };\r\n+  }, []);\r\n+\r\n+  const handlePopState = () => {\r\n+    // This needs to handle both back and forward browser actions\r\n+    // Use some logic to determine whether it's a back or forward action\r\n+    // For simplicity, assume it's always back\r\n+    historyStack.current.pop();\r\n+    forwardStack.current.length = 0; // Clear forward stack on manual navigation\r\n+  };\r\n+\r\n+  // Listen to popstate events to update the history stack\r\n+  useEffect(() => {\r\n+    window.addEventListener(\"popstate\", handlePopState);\r\n+  }, []);\r\n+\r\n+  const forwardStack = useRef([]);\r\n+\r\n+  const goBack = () => {\r\n+    if (window.history.state && window.history.state.idx > 0) {\r\n+      window.history.back();\r\n+      speak(\"Going back\");\r\n+    } else {\r\n+      speak(\"Can't go back any further.\");\r\n+    }\r\n+  };\r\n+\r\n+  const goForward = () => {\r\n+    if (\r\n+      window.history.state &&\r\n+      window.history.state.idx < window.history.length - 1\r\n+    ) {\r\n+      window.history.forward();\r\n+      speak(\"Going forward\");\r\n+    } else {\r\n+      speak(\"No forward history available.\");\r\n+    }\r\n+  };\r\n+\r\n+  const scrollAmount = window.innerHeight * 0.82;\r\n+\r\n+  const scrollUp = () => {\r\n+    if (window.pageYOffset === 0) {\r\n+      speak(\"Already at the top of the page.\");\r\n+    } else {\r\n+      window.scrollBy(0, -scrollAmount);\r\n+      speak(\"Scrolled up.\");\r\n+    }\r\n+  };\r\n+\r\n+  const scrollDown = () => {\r\n+    const maxScrollTop =\r\n+      document.documentElement.scrollHeight - window.innerHeight;\r\n+    if (window.pageYOffset >= maxScrollTop) {\r\n+      speak(\"Already at the bottom of the page.\");\r\n+    } else {\r\n+      window.scrollBy(0, scrollAmount);\r\n+      speak(\"Scrolled down.\");\r\n+    }\r\n+  };\r\n+\r\n+  const scrollToTop = () => {\r\n+    if (window.pageYOffset === 0) {\r\n+      speak(\"Already at the top of the page.\");\r\n+    } else {\r\n+      window.scrollTo(0, 0);\r\n+      speak(\"Scrolled to the top of the page.\");\r\n+    }\r\n+  };\r\n+\r\n+  const scrollToBottom = () => {\r\n+    const maxScrollTop =\r\n+      document.documentElement.scrollHeight - window.innerHeight;\r\n+    if (window.pageYOffset >= maxScrollTop) {\r\n+      speak(\"Already at the bottom of the page.\");\r\n+    } else {\r\n+      window.scrollTo(0, document.body.scrollHeight);\r\n+      speak(\"Scrolled to the bottom of the page.\");\r\n+    }\r\n+  };\r\n+\r\n+\r\n+  const controlVideo = (videoId, action) => {\r\n+    const videoRef = videoRefs.current.get(videoId);\r\n+    if (videoRef && videoRef.current) {\r\n+      switch (action) {\r\n+        case 'play':\r\n+          videoRef.current.play();\r\n+          break;\r\n+        case 'pause':\r\n+          videoRef.current.pause();\r\n+          break;\r\n+        case 'mute':\r\n+          videoRef.current.muted = true;\r\n+          break;\r\n+        case 'unmute':\r\n+          videoRef.current.muted = false;\r\n+          break;\r\n+        case 'fullscreen':\r\n+          if (videoRef.current.requestFullscreen) {\r\n+            videoRef.current.requestFullscreen();\r\n+          } else if (videoRef.current.webkitRequestFullscreen) { // Safari\r\n+            videoRef.current.webkitRequestFullscreen();\r\n+          } else if (videoRef.current.msRequestFullscreen) { // IE11\r\n+            videoRef.current.msRequestFullscreen();\r\n+          }\r\n+          break;\r\n+        case 'exitFullscreen':\r\n+          if (document.exitFullscreen) {\r\n+            document.exitFullscreen();\r\n+          } else if (document.webkitExitFullscreen) { // Safari\r\n+            document.webkitExitFullscreen();\r\n+          } else if (document.msExitFullscreen) { // IE11\r\n+            document.msExitFullscreen();\r\n+          }\r\n+          break;\r\n+        case 'increaseVolume':\r\n+          if (videoRef.current.volume < 1) {\r\n+            videoRef.current.volume = Math.min(1, videoRef.current.volume + 0.1);\r\n+          }\r\n+          break;\r\n+        case 'decreaseVolume':\r\n+          if (videoRef.current.volume > 0) {\r\n+            videoRef.current.volume = Math.max(0, videoRef.current.volume - 0.1);\r\n+          }\r\n+          break;\r\n+        // Add other cases as needed\r\n+      }\r\n+      speak(`${action.charAt(0).toUpperCase() + action.slice(1).replace(/([A-Z])/g, ' $1').toLowerCase()}ing video.`);\r\n+    } else {\r\n+      speak(`Video not found.`);\r\n+    }\r\n+  };\r\n+\r\n+  const speak = (message) => {\r\n+    const utterance = new SpeechSynthesisUtterance(message);\r\n+    utterance.onend = () => {\r\n+      setIsSpeaking(false);\r\n+      // Restart recognition after speaking has ended\r\n+      if (isListening) {\r\n+        restartRecognition();\r\n+      }\r\n+    };\r\n+\r\n+    setIsSpeaking(true);\r\n+    // Stop recognition when the bot starts speaking\r\n+    if (recognition.current) {\r\n+      recognition.current.abort();\r\n+    }\r\n+    speechSynthesis.current.speak(utterance);\r\n+  };\r\n+\r\n+  const restartRecognition = () => {\r\n+    // Check if recognition is not already started and if the bot is set to listen\r\n+    if (\r\n+      recognition.current &&\r\n+      !recognition.current.starting &&\r\n+      isListening &&\r\n+      !isSpeaking\r\n+    ) {\r\n+      recognition.current.abort(); // Ensure any ongoing recognition is stopped\r\n+      recognition.current.starting = true;\r\n+      recognition.current.start();\r\n+    }\r\n+  };\r\n+\r\n+  // Restart recognition when bot finishes speaking and isListening is true\r\n+  useEffect(() => {\r\n+    if (!isSpeaking && isListening) {\r\n+      restartRecognition();\r\n+    }\r\n+  }, [isSpeaking, isListening]);\r\n+\r\n+  const onResult = (event) => {\r\n+    const resultIndex = event.resultIndex;\r\n+    const transcript = event.results[resultIndex][0].transcript\r\n+      .trim()\r\n+      .toLowerCase();\r\n+\r\n+    if (event.results[resultIndex].isFinal) {\r\n+      console.log(`Recognized text: ${transcript}`);\r\n+      if (transcript.includes(\"brain\")) {\r\n+        console.log(\"Wake word heard, processing command...\");\r\n+        handleCommandWithFuse(transcript.replace(\"brain\", \"\"));\r\n+      }\r\n+    }\r\n+  };\r\n+\r\n+  const onRecognitionEnd = () => {\r\n+    recognition.current.starting = false;\r\n+    if (isListening && !isSpeaking) {\r\n+      restartRecognition();\r\n+    }\r\n+  };\r\n+\r\n+  useEffect(() => {\r\n+    if (isListening && !hasGreeted) {\r\n+      speak(\"Hello, I'm Brane. How can I help you today?\");\r\n+      setHasGreeted(true);\r\n+    }\r\n+  }, [isListening, hasGreeted]);\r\n+\r\n+  // Updated startListening function\r\n+  const startListening = () => {\r\n+    setIsListening(true);\r\n+    if (!recognition.current.starting) {\r\n+      restartRecognition();\r\n+    }\r\n+  };\r\n+\r\n+  // Updated stopListening function\r\n+  const stopListening = () => {\r\n+    setIsListening(false);\r\n+    if (speechSynthesis.current.speaking) {\r\n+      speechSynthesis.current.cancel();\r\n+    }\r\n+    recognition.current.abort();\r\n+  };\r\n+\r\n+  const handleCommandWithFuse = (command) => {\r\n+    const fuse = new Fuse(commands, { keys: [\"utterance\"], threshold: 0.4 });\r\n+    const results = fuse.search(command);\r\n+    const foundCommand = results.length ? results[0].item : null;\r\n+\r\n+    if (foundCommand) {\r\n+      console.log(\"Command found:\", foundCommand.utterance);\r\n+\r\n+      if (foundCommand.action) {\r\n+        foundCommand.action();\r\n+      } else if (foundCommand.route) {\r\n+        navigate(foundCommand.route);\r\n+      }\r\n+\r\n+      // Speak after performing the action or navigation\r\n+      speak(foundCommand.response);\r\n+    } else {\r\n+      console.log(\"No command found.\");\r\n+      speak(\"I'm not sure how to respond to that.\");\r\n+    }\r\n+  };\r\n+\r\n+  const commands = [\r\n+    {\r\n+      utterance: \"Hello who are you ?\",\r\n+\r\n+      response:\r\n+        \"Hi! This is Brane! your Voice bot from Brane Education How can I Assist you Today ?\",\r\n+    },\r\n+\r\n+    {\r\n+      utterance: \"Hello\",\r\n+\r\n+      response: \"Hi! How can I assist you today?\",\r\n+    },\r\n+\r\n+    {\r\n+      utterance: \"hello\",\r\n+\r\n+      response: \"Hi! How can I assist you today?\",\r\n+    },\r\n+\r\n+    {\r\n+      utterance: \"Hi.\",\r\n+\r\n+      response: \"Hello! How can I assist you today?\",\r\n+    },\r\n+\r\n+    {\r\n+      utterance: \"Hey there\",\r\n+\r\n+      response: \"Hi! How can I assist you today?\",\r\n+    },\r\n+\r\n+    {\r\n+      utterance: \"Good morning Brane.\",\r\n+\r\n+      response: \"Hey Hiii! Good morning  ! How can I help you?\",\r\n+    },\r\n+\r\n+    {\r\n+      utterance: \"Good afternoon Brane.\",\r\n+\r\n+      response: \"Hey Hiii! Good after noon ! How can I help you?\",\r\n+    },\r\n+\r\n+    {\r\n+      utterance: \"Good evening Brane.\",\r\n+\r\n+      response: \"Hey Hiii! Good evening ! How can I help you?\",\r\n+    },\r\n+\r\n+    {\r\n+      utterance: \"take me to homepage\",\r\n+\r\n+      route: \"/\",\r\n+\r\n+      response: \"You're in Homepage now\",\r\n+    },\r\n+    {\r\n+      utterance: \"open homepage\",\r\n+\r\n+      route: \"/\",\r\n+\r\n+      response: \"You're in Homepage now\",\r\n+    },\r\n+    {\r\n+      utterance: \"go to homepage\",\r\n+\r\n+      route: \"/\",\r\n+\r\n+      response: \"You're in Homepage now\",\r\n+    },\r\n+    {\r\n+      utterance: \"go back to homepage\",\r\n+\r\n+      route: \"/\",\r\n+\r\n+      response: \"You're in Homepage now\",\r\n+    },\r\n+    {\r\n+      utterance: \"can you please take me to login page\",\r\n+\r\n+      route: \"/login\",\r\n+\r\n+      response: \"Here's the Login Page, Please Login\",\r\n+    },\r\n+\r\n+    {\r\n+      utterance: \"please take me to login page\",\r\n+\r\n+      route: \"/login\",\r\n+\r\n+      response: \"Here's the Login Page, Please Login\",\r\n+    },\r\n+\r\n+    {\r\n+      utterance: \"Go to login page\",\r\n+\r\n+      route: \"/login\",\r\n+\r\n+      response: \"Here's the Login Page, Please Login\",\r\n+    },\r\n+\r\n+    {\r\n+      utterance: \"open login page\",\r\n+\r\n+      route: \"/login\",\r\n+\r\n+      response: \"Here's the Login Page, Please Login\",\r\n+    },\r\n+\r\n+    {\r\n+      utterance: \"can you please take me to signup page\",\r\n+\r\n+      route: \"/signup\",\r\n+\r\n+      response: \"Here's the signup page. Please proceed With Registration.\",\r\n+    },\r\n+\r\n+    {\r\n+      utterance: \"take me to signup page\",\r\n+\r\n+      route: \"/signup\",\r\n+\r\n+      response: \"Here's the signup page. Please proceed With Registration.\",\r\n+    },\r\n+\r\n+    {\r\n+      utterance: \"Go to signup page\",\r\n+\r\n+      route: \"/signup\",\r\n+\r\n+      response: \"Here's the signup page. Please proceed With Registration.\",\r\n+    },\r\n+\r\n+    {\r\n+      utterance: \"open signup page\",\r\n+\r\n+      route: \"/signup\",\r\n+\r\n+      response: \"Here's the signup page. Please proceed With Registration.\",\r\n+    },\r\n+\r\n+    {\r\n+      utterance: \"Go to face id\",\r\n+\r\n+      route: \"/login/faceid\",\r\n+\r\n+      response: \"Here's Face ID Login. Please proceed.\",\r\n+    },\r\n+\r\n+    {\r\n+      utterance: \"Go to face id login\",\r\n+\r\n+      route: \"/login/faceid\",\r\n+\r\n+      response: \"Here's Face ID Login. Please proceed.\",\r\n+    },\r\n+    {\r\n+      utterance: \"Go to face login\",\r\n+\r\n+      route: \"/login/faceid\",\r\n+\r\n+      response: \"Here's Face ID Login. Please proceed.\",\r\n+    },\r\n+\r\n+    {\r\n+      utterance: \"login with face id\",\r\n+\r\n+      route: \"/login/faceid\",\r\n+\r\n+      response: \"Here's Face ID Login. Please proceed.\",\r\n+    },\r\n+\r\n+    {\r\n+      utterance: \"login with face\",\r\n+\r\n+      route: \"/login/faceid\",\r\n+\r\n+      response: \"Here's Face ID Login. Please proceed.\",\r\n+    },\r\n+\r\n+    {\r\n+      utterance: \"i want to login with face\",\r\n+\r\n+      route: \"/login/faceid\",\r\n+\r\n+      response: \"Here's Face ID Login. Please proceed.\",\r\n+    },\r\n+\r\n+    {\r\n+      utterance: \"login with voice\",\r\n+\r\n+      route: \"/login/voiceid\",\r\n+\r\n+      response: \"Here's Voice Login. Please proceed.\",\r\n+    },\r\n+\r\n+    {\r\n+      utterance: \"i want to login with voice\",\r\n+\r\n+      route: \"/login/voiceid\",\r\n+\r\n+      response: \"Here's Voice Login. Please proceed.\",\r\n+    },\r\n+\r\n+    {\r\n+      utterance: \"go to voice login\",\r\n+\r\n+      route: \"/login/voiceid\",\r\n+\r\n+      response: \"Here's Voice Login. Please proceed.\",\r\n+    },\r\n+\r\n+    {\r\n+      utterance: \"login with voice\",\r\n+\r\n+      route: \"/login/voiceid\",\r\n+\r\n+      response: \"Here's Voice Login. Please proceed.\",\r\n+    },\r\n+\r\n+    {\r\n+      utterance: \"login with mobile\",\r\n+\r\n+      route: \"/login/mobile\",\r\n+\r\n+      response: \"Here's Mobile Login. Please proceed.\",\r\n+    },\r\n+\r\n+    {\r\n+      utterance: \"i want to login with mobile\",\r\n+\r\n+      route: \"/login/mobile\",\r\n+\r\n+      response: \"Here's Mobile Login. Please proceed.\",\r\n+    },\r\n+    {\r\n+      utterance: \"go to mobile login\",\r\n+\r\n+      route: \"/login/mobile\",\r\n+\r\n+      response: \"Here's Mobile Login. Please proceed.\",\r\n+    },\r\n+    {\r\n+      utterance: \"go to about page\",\r\n+\r\n+      route: \"/aboutus\",\r\n+\r\n+      response: \"This is About us.\",\r\n+    },\r\n+    {\r\n+      utterance: \"go to about us page\",\r\n+\r\n+      route: \"/aboutus\",\r\n+\r\n+      response: \"This is About us.\",\r\n+    },\r\n+    {\r\n+      utterance: \"open about us page\",\r\n+\r\n+      route: \"/aboutus\",\r\n+\r\n+      response: \"This is About us.\",\r\n+    },\r\n+    {\r\n+      utterance: \"open about page\",\r\n+\r\n+      route: \"/aboutus\",\r\n+\r\n+      response: \"This is About us.\",\r\n+    },\r\n+    {\r\n+      utterance: \"take me to about page\",\r\n+\r\n+      route: \"/aboutus\",\r\n+\r\n+      response: \"This is About us.\",\r\n+    },\r\n+    {\r\n+      utterance: \"take me to about us page\",\r\n+\r\n+      route: \"/aboutus\",\r\n+\r\n+      response: \"This is About us.\",\r\n+    },\r\n+\r\n+    {\r\n+      utterance: \"go to contact page\",\r\n+\r\n+      route: \"/contactus\",\r\n+\r\n+      response: \"You can contact us from here\",\r\n+    },\r\n+    {\r\n+      utterance: \"go to contact us page\",\r\n+\r\n+      route: \"/contactus\",\r\n+\r\n+      response: \"You can contact us from here\",\r\n+    },\r\n+    {\r\n+      utterance: \"open contact us page\",\r\n+\r\n+      route: \"/contactus\",\r\n+\r\n+      response: \"You can contact us from here\",\r\n+    },\r\n+    {\r\n+      utterance: \"open contact page\",\r\n+\r\n+      route: \"/contactus\",\r\n+\r\n+      response: \"You can contact us from here\",\r\n+    },\r\n+    {\r\n+      utterance: \"take me to about page\",\r\n+\r\n+      route: \"/contactus\",\r\n+\r\n+      response: \"You can contact us from here\",\r\n+    },\r\n+    {\r\n+      utterance: \"take me to contact us page\",\r\n+\r\n+      route: \"/contactus\",\r\n+\r\n+      response: \"You can contact us from here\",\r\n+    },\r\n+\r\n+    {\r\n+      utterance: \"what are platform features\",\r\n+\r\n+      response:\r\n+        \"Dashboard, Dynamic time table, Learning Networks, Little Masters, Video Based Dictionary, General Search.\",\r\n+    },\r\n+\r\n+    {\r\n+      utterance: \"Features of platform\",\r\n+\r\n+      response:\r\n+        \"Dashboard, Dynamic time table, Learning Networks, Little Masters, Video Based Dictionary, General Search.\",\r\n+    },\r\n+\r\n+    {\r\n+      utterance: \"What does the platform offer\",\r\n+\r\n+      response:\r\n+        \"Dashboard, Dynamic time table, Learning Networks, Little Masters, Video Based Dictionary, General Search.\",\r\n+    },\r\n+\r\n+    {\r\n+      utterance: \"Say me the features of platform\",\r\n+\r\n+      response:\r\n+        \"Dashboard, Dynamic time table, Learning Networks, Little Masters, Video Based Dictionary, General Search.\",\r\n+    },\r\n+\r\n+    {\r\n+      utterance: \"Say me the services of platform\",\r\n+\r\n+      response:\r\n+        \"Dashboard, Dynamic time table, Learning Networks, Little Masters, Video Based Dictionary, General Search.\",\r\n+    },\r\n+\r\n+    {\r\n+      utterance: \"tell me the services offered by the platform\",\r\n+\r\n+      response:\r\n+        \"Dashboard, Dynamic time table, Learning Networks, Little Masters, Video Based Dictionary, General Search.\",\r\n+    },\r\n+\r\n+    {\r\n+      utterance: \"explain platform services\",\r\n+\r\n+      response:\r\n+        \"Dashboard, Dynamic time table, Learning Networks, Little Masters, Video Based Dictionary, General Search.\",\r\n+    },\r\n+\r\n+    {\r\n+      utterance: \"Give me the Parent voice of Julia Harris\",\r\n+\r\n+      response:\r\n+        \"Brane education has helped my son a lot in his studies. He improved a lot in his studies and is now able to score good marks in his exams\",\r\n+    },\r\n+\r\n+    {\r\n+      utterance: \"Leaders Voice\",\r\n+\r\n+      response:\r\n+        \"This Voice-interactive AI Platform is a game Changer. It revolutionizes education.\",\r\n+    },\r\n+\r\n+    {\r\n+      utterance: \"Curriculum Supported by Brane Education\",\r\n+\r\n+      response:\r\n+        \"we support multiple Boards let me say few Telangana State Board Andhra Pradesh Board Maharashtra Board Assam Board\",\r\n+    },\r\n+\r\n+    {\r\n+      utterance: \"Boards supported by the platform\",\r\n+\r\n+      response:\r\n+        \"we support multiple Boards let me say few Telangana State Board Andhra Pradesh Board Maharashtra Board Assam Board\",\r\n+    },\r\n+\r\n+    {\r\n+      utterance: \"Curriculum\",\r\n+\r\n+      response:\r\n+        \"we support multiple Boards let me say few Telangana State Board Andhra Pradesh Board Maharashtra Board Assam Board\",\r\n+    },\r\n+\r\n+    {\r\n+      utterance: \"what is today's quote\",\r\n+\r\n+      response:\r\n+        \"Determination is the power that sees us through all our frustration and obstacles. It helps in building our willpower which is the very basis of success.\",\r\n+\r\n+      route: \"/childpage\",\r\n+    },\r\n+\r\n+    {\r\n+      utterance: \"Today's Inspirational quote\",\r\n+\r\n+      response:\r\n+        \"Determination is the power that sees us through all our frustration and obstacles. It helps in building our willpower which is the very basis of success.\",\r\n+\r\n+      route: \"/childpage\",\r\n+    },\r\n+\r\n+    {\r\n+      utterance: \"say me today's quote\",\r\n+\r\n+      response:\r\n+        \"Determination is the power that sees us through all our frustration and obstacles. It helps in building our willpower which is the very basis of success.\",\r\n+\r\n+      route: \"/childpage\",\r\n+    },\r\n+    {\r\n+      utterance: \"go back\",\r\n+      response: \"\",\r\n+      action: goBack, // Note the use of an action property\r\n+    },\r\n+    {\r\n+      utterance: \"go forward\",\r\n+      response: \"\",\r\n+      action: goForward,\r\n+    },\r\n+    // {\r\n+    //   utterance: \"play video\",\r\n+    //   // response: \"Playing video.\",\r\n+    //   action: playVideo,\r\n+    // },\r\n+    // {\r\n+    //   utterance: \"pause video\",\r\n+    //   // response: \"Pausing video.\",\r\n+    //   action: pauseVideo,\r\n+    // },\r\n+    // {\r\n+    //   utterance: \"start video\",\r\n+    //   // response: \"Playing video.\",\r\n+    //   action: playVideo,\r\n+    // },\r\n+    // {\r\n+    //   utterance: \"stop video\",\r\n+    //   // response: \"Playing video.\",\r\n+    //   action: pauseVideo,\r\n+    // },\r\n+    {\r\n+      utterance: \"scroll up\",\r\n+      // response: \"Scrolling up.\",\r\n+      action: scrollUp,\r\n+    },\r\n+    {\r\n+      utterance: \"scroll down\",\r\n+      // response: \"Scrolling down.\",\r\n+      action: scrollDown,\r\n+    },\r\n+    {\r\n+      utterance: \"go up\",\r\n+\r\n+      // response: \"Scrolling up.\",\r\n+      action: scrollUp,\r\n+    },\r\n+    {\r\n+      utterance: \"go down\",\r\n+      // response: \"Scrolling down.\",\r\n+      action: scrollDown,\r\n+    },\r\n+    {\r\n+      utterance: \"scroll to top\",\r\n+      action: scrollToTop,\r\n+    },\r\n+    {\r\n+      utterance: \"scroll to bottom\",\r\n+      action: scrollToBottom,\r\n+    },\r\n+    {\r\n+      utterance: \"brane stop\",\r\n+      action: stopListening,\r\n+    },\r\n+    {\r\n+      utterance: \"brane turn off\",\r\n+      action: stopListening,\r\n+    },\r\n+    {\r\n+      utterance: \"brane stop the bot\",\r\n+      action: stopListening,\r\n+    },\r\n+    // {\r\n+    //   utterance: \"mute the video\",\r\n+    //   action: muteVideo,\r\n+    // },\r\n+    // {\r\n+    //   utterance: \"unmute the video\",\r\n+    //   action: unmuteVideo,\r\n+    // },\r\n+    // {\r\n+    //   utterance: \"stop the video sound\",\r\n+    //   action: muteVideo,\r\n+    // },\r\n+    // {\r\n+    //   utterance: \"play the video sound\",\r\n+    //   action: unmuteVideo,\r\n+    // },\r\n+    {\r\n+      utterance: \"play transforming education video\",\r\n+      action: () => controlVideo('ourProjectsVideo', 'play'),\r\n+    },\r\n+    {\r\n+      utterance: \"start transforming education video\",\r\n+      action: () => controlVideo('ourProjectsVideo', 'play'),\r\n+    },\r\n+    {\r\n+      utterance: \"pause transforming education video\",\r\n+      action: () => controlVideo('ourProjectsVideo', 'pause'),\r\n+    },\r\n+    {\r\n+      utterance: \"stop transforming education video\",\r\n+      action: () => controlVideo('ourProjectsVideo', 'pause'),\r\n+    },\r\n+\r\n+    {\r\n+      utterance: \"mute transforming education video\",\r\n+      action: () => controlVideo('ourProjectsVideo', 'mute'),\r\n+    },\r\n+    {\r\n+      utterance: \"unmute transforming education video\",\r\n+      action: () => controlVideo('ourProjectsVideo', 'unmute'),\r\n+    },\r\n+    {\r\n+      utterance: \"fullscreen transforming education video\",\r\n+      action: () => controlVideo('ourProjectsVideo', 'fullscreen'),\r\n+    },\r\n+    {\r\n+      utterance: \"exit fullscreen transforming education video\",\r\n+      action: () => controlVideo('ourProjectsVideo', 'exitFullscreen'),\r\n+    },\r\n+    {\r\n+      utterance: \"increase volume transforming education video\",\r\n+      action: () => controlVideo('ourProjectsVideo', 'increaseVolume'),\r\n+    },\r\n+    {\r\n+      utterance: \"decrease volume transforming education video\",\r\n+      action: () => controlVideo('ourProjectsVideo', 'decreaseVolume'),\r\n+    },\r\n+    {\r\n+      utterance: \"play leaders voice video\",\r\n+      action: () => controlVideo('leadersVoiceVideo', 'play'),\r\n+    },\r\n+    {\r\n+      utterance: \"start leaders voice video\",\r\n+      action: () => controlVideo('leadersVoiceVideo', 'play'),\r\n+    },\r\n+    {\r\n+      utterance: \"pause leaders voice video\",\r\n+      action: () => controlVideo('leadersVoiceVideo', 'pause'),\r\n+    },\r\n+    {\r\n+      utterance: \"stop leaders voice video\",\r\n+      action: () => controlVideo('leadersVoiceVideo', 'pause'),\r\n+    },\r\n+    {\r\n+      utterance: \"mute leaders voice video\",\r\n+      action: () => controlVideo('leadersVoiceVideo', 'mute'),\r\n+    },\r\n+    {\r\n+      utterance: \"unmute leaders voice video\",\r\n+      action: () => controlVideo('leadersVoiceVideo', 'unmute'),\r\n+    },\r\n+    {\r\n+      utterance: \"fullscreen leaders voice video\",\r\n+      action: () => controlVideo('leadersVoiceVideo', 'fullscreen'),\r\n+    },\r\n+    {\r\n+      utterance: \"exit fullscreen leaders voice video\",\r\n+      action: () => controlVideo('leadersVoiceVideo', 'exitFullscreen'),\r\n+    },\r\n+    {\r\n+      utterance: \"increase volume leaders voice video\",\r\n+      action: () => controlVideo('leadersVoiceVideo', 'increaseVolume'),\r\n+    },\r\n+    {\r\n+      utterance: \"decrease volume leaders voice video\",\r\n+      action: () => controlVideo('leadersVoiceVideo', 'decreaseVolume'),\r\n+    },\r\n+    \r\n+  ];\r\n+\r\n+  return (\r\n+    <div className=\"speech-bot-container\">\r\n+      <div\r\n+        className={`button-container ${\r\n+          isListening ? \"voicebotframeactive\" : \"voicebotframe\"\r\n+        }`}\r\n+      >\r\n+        {/* <button onClick={isListening ? stopListening : startListening}>\r\n+          {isListening ? \"Stop\" : \"Start\"} Animation\r\n+        </button> */}\r\n+        <img\r\n+          className=\"botimage\"\r\n+          src={chatbotimage}\r\n+          alt=\"\"\r\n+          onClick={isListening ? stopListening : startListening}\r\n+        />\r\n+      </div>\r\n+    </div>\r\n+  );\r\n+};\r\n+\r\n+export default VoiceBot;\r\n+\r\n+{\r\n+  /* // import React, { useState, useEffect, useRef } from \"react\";\r\n+// import { useNavigate, useLocation } from \"react-router-dom\";\r\n+// import Fuse from \"fuse.js\";\r\n+// import \"./VoiceBot.css\";\r\n+\r\n+// const VoiceBot = ({ videoRef }) => {\r\n+//   const [isListening, setIsListening] = useState(false);\r\n+//   const [isSpeaking, setIsSpeaking] = useState(false);\r\n+//   const recognition = useRef(null);\r\n+//   const speechSynthesis = useRef(window.speechSynthesis);\r\n+//   const [hasGreeted, setHasGreeted] = useState(false);\r\n+//   const navigate = useNavigate();\r\n+\r\n+//   useEffect(() => {\r\n+//     recognition.current = new window.webkitSpeechRecognition();\r\n+//     recognition.current.continuous = true;\r\n+//     recognition.current.interimResults = false;\r\n+//     recognition.current.onresult = onResult;\r\n+//     recognition.current.onend = onRecognitionEnd;\r\n+//     recognition.current.starting = false;\r\n+\r\n+//     // Simplified error handling, removed specific handling for 'no-speech'\r\n+//     recognition.current.onerror = (event) => {\r\n+//       console.error(\"Recognition error:\", event.error);\r\n+//       // Check if listening is true and the bot isn't speaking\r\n+//       if (isListening && !isSpeaking) {\r\n+//         // Restart recognition\r\n+//         restartRecognition();\r\n+//       }\r\n+//     };\r\n+\r\n+//     return () => {\r\n+//       if (recognition.current) {\r\n+//         recognition.current.abort();\r\n+//       }\r\n+//     };\r\n+//   }, []);\r\n+\r\n+//   useEffect(() => {\r\n+//     const checkRecognition = () => {\r\n+//       if (isListening && !isSpeaking && !recognition.current.starting) {\r\n+//         console.log(\"Restarting recognition because it's not active.\");\r\n+//         recognition.current.starting = true;\r\n+//         recognition.current.start();\r\n+//         console.log(\"Restarted recognition.\");\r\n+//       }\r\n+//     };\r\n+\r\n+//     const recognitionCheckInterval = setInterval(checkRecognition, 100); // Check every 1 second\r\n+\r\n+//     return () => {\r\n+//       clearInterval(recognitionCheckInterval);\r\n+//     };\r\n+//   }, [isListening, isSpeaking]);\r\n+\r\n+//   const restartRecognition = () => {\r\n+//     if (recognition.current.starting) {\r\n+//       console.log(\"Recognition is already starting or running.\");\r\n+//       return;\r\n+//     }\r\n+\r\n+//     recognition.current.abort(); // Stop any existing recognition process\r\n+//     recognition.current.starting = true;\r\n+//     recognition.current.start();\r\n+//     console.log(\"Recognition restarted.\");\r\n+//   };\r\n+\r\n+//   const historyStack = useRef([]);\r\n+\r\n+//   useEffect(() => {\r\n+//     return () => {\r\n+//       // Clean up the listener when the component unmounts\r\n+//       window.removeEventListener(\"popstate\", handlePopState);\r\n+//     };\r\n+//   }, []);\r\n+\r\n+//   const handlePopState = () => {\r\n+//     // This needs to handle both back and forward browser actions\r\n+//     // Use some logic to determine whether it's a back or forward action\r\n+//     // For simplicity, assume it's always back\r\n+//     historyStack.current.pop();\r\n+//     forwardStack.current.length = 0; // Clear forward stack on manual navigation\r\n+//   };\r\n+  \r\n+\r\n+//   // Add a new entry to the stack whenever navigate is called\r\n+//   const customNavigate = (to, options) => {\r\n+//     historyStack.current.push(to);\r\n+//     navigate(to, options);\r\n+//   };\r\n+\r\n+//   // Listen to popstate events to update the history stack\r\n+//   useEffect(() => {\r\n+//     window.addEventListener(\"popstate\", handlePopState);\r\n+//   }, []);\r\n+\r\n+//   const forwardStack = useRef([]);\r\n+\r\n+//   const goBack = () => {\r\n+//     if (window.history.state && window.history.state.idx > 0) {\r\n+//       window.history.back();\r\n+//       speak(\"Going back\");\r\n+//     } else {\r\n+//       speak(\"Can't go back any further.\");\r\n+//     }\r\n+//   };\r\n+\r\n+//   const goForward = () => {\r\n+//     if (window.history.state && window.history.state.idx < window.history.length - 1) {\r\n+//       window.history.forward();\r\n+//       speak(\"Going forward\");\r\n+//     } else {\r\n+//       speak(\"No forward history available.\");\r\n+//     }\r\n+//   };\r\n+\r\n+//   const playVideo = () => {\r\n+//     if (videoRef.current) {\r\n+//       videoRef.current.play();\r\n+//       speak(\"Playing video.\");\r\n+//     } else {\r\n+//       speak(\"No video to play.\");\r\n+//     }\r\n+//   };\r\n+\r\n+//   const pauseVideo = () => {\r\n+//     if (videoRef.current) {\r\n+//       videoRef.current.pause();\r\n+//       speak(\"Video paused.\");\r\n+//     } else {\r\n+//       speak(\"No video to pause.\");\r\n+//     }\r\n+//   };\r\n+\r\n+//   const scrollAmount = window.innerHeight * 0.82;\r\n+\r\n+//   const scrollUp = () => {\r\n+//     if (window.pageYOffset === 0) {\r\n+//       speak(\"Already at the top of the page.\");\r\n+//     } else {\r\n+//       window.scrollBy(0, -scrollAmount);\r\n+//       speak(\"Scrolled up.\");\r\n+//     }\r\n+//   };\r\n+\r\n+//   const scrollDown = () => {\r\n+//     const maxScrollTop =\r\n+//       document.documentElement.scrollHeight - window.innerHeight;\r\n+//     if (window.pageYOffset >= maxScrollTop) {\r\n+//       speak(\"Already at the bottom of the page.\");\r\n+//     } else {\r\n+//       window.scrollBy(0, scrollAmount);\r\n+//       speak(\"Scrolled down.\");\r\n+//     }\r\n+//   };\r\n+\r\n+//   const scrollToTop = () => {\r\n+//     if (window.pageYOffset === 0) {\r\n+//       speak(\"Already at the top of the page.\");\r\n+//     } else {\r\n+//       window.scrollTo(0, 0);\r\n+//       speak(\"Scrolled to the top of the page.\");\r\n+//     }\r\n+//   };\r\n+\r\n+//   const scrollToBottom = () => {\r\n+//     const maxScrollTop =\r\n+//       document.documentElement.scrollHeight - window.innerHeight;\r\n+//     if (window.pageYOffset >= maxScrollTop) {\r\n+//       speak(\"Already at the bottom of the page.\");\r\n+//     } else {\r\n+//       window.scrollTo(0, document.body.scrollHeight);\r\n+//       speak(\"Scrolled to the bottom of the page.\");\r\n+//     }\r\n+//   };\r\n+\r\n+//   const speak = (message) => {\r\n+//     console.log(\"speak function called with message:\", message);\r\n+//     const utterance = new SpeechSynthesisUtterance(message);\r\n+//     utterance.onend = () => {\r\n+//       setIsSpeaking(false);\r\n+//       console.log(\"Speaking ended.\");\r\n+//       if (isListening && !recognition.current.starting) {\r\n+//         console.log(\"Restarting recognition after speaking.\");\r\n+//         recognition.current.starting = true;\r\n+//         recognition.current.start();\r\n+//         console.log(\"Restarted recognition after speaking.\");\r\n+//       }\r\n+//     };\r\n+\r\n+//     setIsSpeaking(true);\r\n+//     console.log(\"Speaking started.\");\r\n+//     recognition.current.stop(); // Ensure to stop recognition before speaking\r\n+//     speechSynthesis.current.speak(utterance);\r\n+//   };\r\n+\r\n+//   const onResult = (event) => {\r\n+//     const resultIndex = event.resultIndex;\r\n+//     const transcript = event.results[resultIndex][0].transcript\r\n+//       .trim()\r\n+//       .toLowerCase();\r\n+\r\n+//     if (event.results[resultIndex].isFinal) {\r\n+//       console.log(`Recognized text: ${transcript}`);\r\n+//       if (transcript.includes(\"brain\")) {\r\n+//         console.log(\"Wake word heard, processing command...\");\r\n+//         handleCommandWithFuse(transcript.replace(\"brain\", \"\"));\r\n+//       }\r\n+//     }\r\n+//   };\r\n+\r\n+//   const onRecognitionEnd = () => {\r\n+//     recognition.current.starting = false;\r\n+//     if (isListening && !isSpeaking) {\r\n+//       restartRecognition();\r\n+//     }\r\n+//   };\r\n+\r\n+//   useEffect(() => {\r\n+//     if (isListening) {\r\n+//       if (!hasGreeted) {\r\n+//         speak(\"Hello, I'm Brane. How can I help you today?\");\r\n+//         setHasGreeted(true);\r\n+//       } else {\r\n+//         speak(\"Listening.\");\r\n+//       }\r\n+//     }\r\n+//   }, [isListening, hasGreeted]);\r\n+\r\n+\r\n+//   const startListening = () => {\r\n+//     if (!recognition.current.starting) {\r\n+//       setIsListening(true);\r\n+//       restartRecognition();\r\n+//     }\r\n+//   };\r\n+\r\n+//   const stopListening = () => {\r\n+//     setIsListening(false);\r\n+//     recognition.current.abort();\r\n+//     if (speechSynthesis.current.speaking) {\r\n+//       speechSynthesis.current.cancel();\r\n+//     }\r\n+//   };\r\n+\r\n+//   const handleCommandWithFuse = (command) => {\r\n+//     const fuse = new Fuse(commands, { keys: [\"utterance\"], threshold: 0.4 });\r\n+//     const results = fuse.search(command);\r\n+//     const foundCommand = results.length ? results[0].item : null;\r\n+\r\n+//     if (foundCommand) {\r\n+//       console.log(\"Command found:\", foundCommand.utterance);\r\n+\r\n+//       if (foundCommand.action) {\r\n+//         foundCommand.action();\r\n+//       } else if (foundCommand.route) {\r\n+//         navigate(foundCommand.route);\r\n+//       }\r\n+\r\n+//       // Speak after performing the action or navigation\r\n+//       speak(foundCommand.response);\r\n+//     } else {\r\n+//       console.log(\"No command found.\");\r\n+//       speak(\"I'm not sure how to respond to that.\");\r\n+//     }\r\n+//   };\r\n+\r\n+//   const commands = [\r\n+//     {\r\n+//       utterance: \"Hello who are you ?\",\r\n+\r\n+//       response:\r\n+//         \"Hi! This is Brane! your Voice bot from Brane Education How can I Assist you Today ?\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"Hello\",\r\n+\r\n+//       response: \"Hi! How can I assist you today?\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"hello\",\r\n+\r\n+//       response: \"Hi! How can I assist you today?\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"Hi.\",\r\n+\r\n+//       response: \"Hello! How can I assist you today?\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"Hey there\",\r\n+\r\n+//       response: \"Hi! How can I assist you today?\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"Good morning Brane.\",\r\n+\r\n+//       response: \"Hey Hiii! Good morning  ! How can I help you?\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"Good afternoon Brane.\",\r\n+\r\n+//       response: \"Hey Hiii! Good after noon ! How can I help you?\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"Good evening Brane.\",\r\n+\r\n+//       response: \"Hey Hiii! Good evening ! How can I help you?\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"can you please take me to login page\",\r\n+\r\n+//       route: \"/login\",\r\n+\r\n+//       response: \"Here's the Login Page, Please Login\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"please take me to login page\",\r\n+\r\n+//       route: \"/login\",\r\n+\r\n+//       response: \"Here's the Login Page, Please Login\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"Go to login page\",\r\n+\r\n+//       route: \"/login\",\r\n+\r\n+//       response: \"Here's the Login Page, Please Login\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"open login page\",\r\n+\r\n+//       route: \"/login\",\r\n+\r\n+//       response: \"Here's the Login Page, Please Login\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"can you please take me to signup page\",\r\n+\r\n+//       route: \"/signup\",\r\n+\r\n+//       response: \"Here's the signup page. Please proceed With Registration.\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"take me to signup page\",\r\n+\r\n+//       route: \"/signup\",\r\n+\r\n+//       response: \"Here's the signup page. Please proceed With Registration.\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"Go to signup page\",\r\n+\r\n+//       route: \"/signup\",\r\n+\r\n+//       response: \"Here's the signup page. Please proceed With Registration.\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"open signup page\",\r\n+\r\n+//       route: \"/signup\",\r\n+\r\n+//       response: \"Here's the signup page. Please proceed With Registration.\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"Go to face id\",\r\n+\r\n+//       route: \"/login/faceid\",\r\n+\r\n+//       response: \"Here's Face ID Login. Please proceed.\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"Go to face id login\",\r\n+\r\n+//       route: \"/login/faceid\",\r\n+\r\n+//       response: \"Here's Face ID Login. Please proceed.\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"login with face id\",\r\n+\r\n+//       route: \"/login/faceid\",\r\n+\r\n+//       response: \"Here's Face ID Login. Please proceed.\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"login with face\",\r\n+\r\n+//       route: \"/login/faceid\",\r\n+\r\n+//       response: \"Here's Face ID Login. Please proceed.\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"i want to login with face\",\r\n+\r\n+//       route: \"/login/faceid\",\r\n+\r\n+//       response: \"Here's Face ID Login. Please proceed.\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"login with voice\",\r\n+\r\n+//       route: \"/login/voiceid\",\r\n+\r\n+//       response: \"Here's Voice Login. Please proceed.\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"i want to login with voice\",\r\n+\r\n+//       route: \"/login/voiceid\",\r\n+\r\n+//       response: \"Here's Voice Login. Please proceed.\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"go to voice login\",\r\n+\r\n+//       route: \"/login/voiceid\",\r\n+\r\n+//       response: \"Here's Voice Login. Please proceed.\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"login with voice\",\r\n+\r\n+//       route: \"/login/voiceid\",\r\n+\r\n+//       response: \"Here's Voice Login. Please proceed.\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"login with mobile\",\r\n+\r\n+//       route: \"/login/mobile\",\r\n+\r\n+//       response: \"Here's Mobile Login. Please proceed.\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"i want to login with mobile\",\r\n+\r\n+//       route: \"/login/mobile\",\r\n+\r\n+//       response: \"Here's Mobile Login. Please proceed.\",\r\n+//     },\r\n+//     {\r\n+//       utterance: \"go to mobile login\",\r\n+\r\n+//       route: \"/login/mobile\",\r\n+\r\n+//       response: \"Here's Mobile Login. Please proceed.\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"what are platform features\",\r\n+\r\n+//       response:\r\n+//         \"Dashboard, Dynamic time table, Learning Networks, Little Masters, Video Based Dictionary, General Search.\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"Features of platform\",\r\n+\r\n+//       response:\r\n+//         \"Dashboard, Dynamic time table, Learning Networks, Little Masters, Video Based Dictionary, General Search.\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"What does the platform offer\",\r\n+\r\n+//       response:\r\n+//         \"Dashboard, Dynamic time table, Learning Networks, Little Masters, Video Based Dictionary, General Search.\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"Say me the features of platform\",\r\n+\r\n+//       response:\r\n+//         \"Dashboard, Dynamic time table, Learning Networks, Little Masters, Video Based Dictionary, General Search.\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"Say me the services of platform\",\r\n+\r\n+//       response:\r\n+//         \"Dashboard, Dynamic time table, Learning Networks, Little Masters, Video Based Dictionary, General Search.\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"tell me the services offered by the platform\",\r\n+\r\n+//       response:\r\n+//         \"Dashboard, Dynamic time table, Learning Networks, Little Masters, Video Based Dictionary, General Search.\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"explain platform services\",\r\n+\r\n+//       response:\r\n+//         \"Dashboard, Dynamic time table, Learning Networks, Little Masters, Video Based Dictionary, General Search.\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"Give me the Parent voice of Julia Harris\",\r\n+\r\n+//       response:\r\n+//         \"Brane education has helped my son a lot in his studies. He improved a lot in his studies and is now able to score good marks in his exams\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"Play today's motivational video\",\r\n+\r\n+//       response: \"I am playing the video\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"Play today's video\",\r\n+\r\n+//       response: \"I am playing Motivational video\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"Leaders Voice\",\r\n+\r\n+//       response:\r\n+//         \"This Voice-interactive AI Platform is a game Changer. It revolutionizes education.\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"Curriculum Supported by Brane Education\",\r\n+\r\n+//       response:\r\n+//         \"we support multiple Boards let me say few Telangana State Board Andhra Pradesh Board Maharashtra Board Assam Board\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"Boards supported by the platform\",\r\n+\r\n+//       response:\r\n+//         \"we support multiple Boards let me say few Telangana State Board Andhra Pradesh Board Maharashtra Board Assam Board\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"Curriculum\",\r\n+\r\n+//       response:\r\n+//         \"we support multiple Boards let me say few Telangana State Board Andhra Pradesh Board Maharashtra Board Assam Board\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"Go to landing page\",\r\n+\r\n+//       response: \"Okay, I am taking you to the landing page.\",\r\n+\r\n+//       route: \"/childpage\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"take me to landing page\",\r\n+\r\n+//       response: \"Okay, I am taking you to the landing page.\",\r\n+\r\n+//       route: \"/childpage\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"move to landing page\",\r\n+\r\n+//       response: \"Okay, I am taking you to the landing page.\",\r\n+\r\n+//       route: \"/childpage\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"roll back to landing page\",\r\n+\r\n+//       response: \"Okay, I am taking you to the landing page.\",\r\n+\r\n+//       route: \"/childpage\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"move to landing page\",\r\n+\r\n+//       response: \"Okay, I am taking you to the landing page.\",\r\n+\r\n+//       route: \"/childpage\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"what is today's quote\",\r\n+\r\n+//       response:\r\n+//         \"Determination is the power that sees us through all our frustration and obstacles. It helps in building our willpower which is the very basis of success.\",\r\n+\r\n+//       route: \"/childpage\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"Today's Inspirational quote\",\r\n+\r\n+//       response:\r\n+//         \"Determination is the power that sees us through all our frustration and obstacles. It helps in building our willpower which is the very basis of success.\",\r\n+\r\n+//       route: \"/childpage\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"say me today's quote\",\r\n+\r\n+//       response:\r\n+//         \"Determination is the power that sees us through all our frustration and obstacles. It helps in building our willpower which is the very basis of success.\",\r\n+\r\n+//       route: \"/childpage\",\r\n+//     },\r\n+//     {\r\n+//       utterance: \"go back\",\r\n+//       response: \"\",\r\n+//       action: goBack, // Note the use of an action property\r\n+//     },\r\n+//     {\r\n+//       utterance: \"go forward\",\r\n+//       response: \"\",\r\n+//       action: goForward,\r\n+//     },\r\n+//     {\r\n+//       utterance: \"play video\",\r\n+//       // response: \"Playing video.\",\r\n+//       action: playVideo,\r\n+//     },\r\n+//     {\r\n+//       utterance: \"pause video\",\r\n+//       // response: \"Pausing video.\",\r\n+//       action: pauseVideo,\r\n+//     },\r\n+//     {\r\n+//       utterance: \"start video\",\r\n+//       // response: \"Playing video.\",\r\n+//       action: playVideo,\r\n+//     },\r\n+//     {\r\n+//       utterance: \"stop video\",\r\n+//       // response: \"Playing video.\",\r\n+//       action: pauseVideo,\r\n+//     },\r\n+//     {\r\n+//       utterance: \"scroll up\",\r\n+//       // response: \"Scrolling up.\",\r\n+//       action: scrollUp,\r\n+//     },\r\n+//     {\r\n+//       utterance: \"scroll down\",\r\n+//       // response: \"Scrolling down.\",\r\n+//       action: scrollDown,\r\n+//     },\r\n+//     {\r\n+//       utterance: \"go up\",\r\n+\r\n+//       // response: \"Scrolling up.\",\r\n+//       action: scrollUp,\r\n+//     },\r\n+//     {\r\n+//       utterance: \"go down\",\r\n+//       // response: \"Scrolling down.\",\r\n+//       action: scrollDown,\r\n+//     },\r\n+//     {\r\n+//       utterance: \"scroll to top\",\r\n+//       action: scrollToTop,\r\n+//     },\r\n+//     {\r\n+//       utterance: \"scroll to bottom\",\r\n+//       action: scrollToBottom,\r\n+//     },\r\n+//     {\r\n+//       utterance: \"brane stop\",\r\n+//       action: stopListening,\r\n+//     },\r\n+//     {\r\n+//       utterance: \"brane turn off\",\r\n+//       action: stopListening,\r\n+//     },\r\n+//     {\r\n+//       utterance: \"brane stop the bot\",\r\n+//       action: stopListening,\r\n+//     },\r\n+//   ];\r\n+\r\n+//   return (\r\n+//     <div className=\"speech-bot-container\">\r\n+//       <div\r\n+//         className={`button-container ${\r\n+//           isListening ? \"voicebotframeactive\" : \"voicebotframe\"\r\n+//         }`}\r\n+//       >\r\n+//         <button onClick={isListening ? stopListening : startListening}>\r\n+//           {isListening ? \"Stop\" : \"Start\"} Animation\r\n+//         </button>\r\n+//         {/* <button onClick={toggleBotActive}>\r\n+//         {isBotActive ? 'Deactivate Bot' : 'Activate Bot'}\r\n+//       </button> \r\n+//       </div>\r\n+//     </div>\r\n+//   );\r\n+// };\r\n+\r\n+// export default VoiceBot; */\r\n+}\r\n+\r\n+//iska v1\r\n+\r\n+// import React, { useState, useEffect, useRef } from \"react\";\r\n+// import { useNavigate, useLocation } from \"react-router-dom\";\r\n+// import Fuse from \"fuse.js\";\r\n+// import \"./VoiceBot.css\";\r\n+\r\n+// const VoiceBot = ({ videoRef}) => {\r\n+//   const [isListening, setIsListening] = useState(false);\r\n+//   const [isSpeaking, setIsSpeaking] = useState(false);\r\n+//   const recognition = useRef(null);\r\n+//   const speechSynthesis = useRef(window.speechSynthesis);\r\n+//   const [hasGreeted, setHasGreeted] = useState(false);\r\n+//   const navigate = useNavigate();\r\n+\r\n+//  // Initialize speech recognition\r\n+//  useEffect(() => {\r\n+//   recognition.current = new window.webkitSpeechRecognition();\r\n+//   recognition.current.continuous = true;\r\n+//   recognition.current.interimResults = false;\r\n+//   recognition.current.onresult = onResult;\r\n+//   recognition.current.onend = onRecognitionEnd;\r\n+//   recognition.current.starting = false;\r\n+\r\n+//   recognition.current.onerror = (event) => {\r\n+//     console.error(\"Recognition error:\", event.error);\r\n+//     if (isListening && !isSpeaking) {\r\n+//       restartRecognition();\r\n+//     }\r\n+//   };\r\n+\r\n+//   return () => {\r\n+//     if (recognition.current) {\r\n+//       recognition.current.abort();\r\n+//     }\r\n+//   };\r\n+// }, []);\r\n+\r\n+//   // useEffect(() => {\r\n+//   //   const checkRecognition = () => {\r\n+//   //     if (isListening && !isSpeaking && !recognition.current.starting) {\r\n+//   //       console.log(\"Restarting recognition because it's not active.\");\r\n+//   //       recognition.current.starting = true;\r\n+//   //       recognition.current.start();\r\n+//   //       console.log(\"Restarted recognition.\");\r\n+//   //     }\r\n+//   //   };\r\n+\r\n+//   //   const recognitionCheckInterval = setInterval(checkRecognition, 100); // Check every .5 second\r\n+\r\n+//   //   return () => {\r\n+//   //     clearInterval(recognitionCheckInterval);\r\n+//   //   };\r\n+//   // }, [isListening, isSpeaking]);\r\n+\r\n+//   const historyStack = useRef([]);\r\n+\r\n+//   useEffect(() => {\r\n+//     return () => {\r\n+//       // Clean up the listener when the component unmounts\r\n+//       window.removeEventListener(\"popstate\", handlePopState);\r\n+//     };\r\n+//   }, []);\r\n+\r\n+//   const handlePopState = () => {\r\n+//     // This needs to handle both back and forward browser actions\r\n+//     // Use some logic to determine whether it's a back or forward action\r\n+//     // For simplicity, assume it's always back\r\n+//     historyStack.current.pop();\r\n+//     forwardStack.current.length = 0; // Clear forward stack on manual navigation\r\n+//   };\r\n+\r\n+//   // Add a new entry to the stack whenever navigate is called\r\n+//   const customNavigate = (to, options) => {\r\n+//     historyStack.current.push(to);\r\n+//     navigate(to, options);\r\n+//   };\r\n+\r\n+//   // Listen to popstate events to update the history stack\r\n+//   useEffect(() => {\r\n+//     window.addEventListener(\"popstate\", handlePopState);\r\n+//   }, []);\r\n+\r\n+//   const forwardStack = useRef([]);\r\n+\r\n+//   const goBack = () => {\r\n+//     if (window.history.state && window.history.state.idx > 0) {\r\n+//       window.history.back();\r\n+//       speak(\"Going back\");\r\n+//     } else {\r\n+//       speak(\"Can't go back any further.\");\r\n+//     }\r\n+//   };\r\n+\r\n+//   const goForward = () => {\r\n+//     if (window.history.state && window.history.state.idx < window.history.length - 1) {\r\n+//       window.history.forward();\r\n+//       speak(\"Going forward\");\r\n+//     } else {\r\n+//       speak(\"No forward history available.\");\r\n+//     }\r\n+//   };\r\n+\r\n+//   const playVideo = () => {\r\n+//     if (videoRef.current) {\r\n+//       videoRef.current.play();\r\n+//       speak(\"Playing video.\");\r\n+//     } else {\r\n+//       speak(\"No video to play.\");\r\n+//     }\r\n+//   };\r\n+\r\n+//   const pauseVideo = () => {\r\n+//     if (videoRef.current) {\r\n+//       videoRef.current.pause();\r\n+//       speak(\"Video paused.\");\r\n+//     } else {\r\n+//       speak(\"No video to pause.\");\r\n+//     }\r\n+//   };\r\n+\r\n+//   const scrollAmount = window.innerHeight * 0.82;\r\n+\r\n+//   const scrollUp = () => {\r\n+//     if (window.pageYOffset === 0) {\r\n+//       speak(\"Already at the top of the page.\");\r\n+//     } else {\r\n+//       window.scrollBy(0, -scrollAmount);\r\n+//       speak(\"Scrolled up.\");\r\n+//     }\r\n+//   };\r\n+\r\n+//   const scrollDown = () => {\r\n+//     const maxScrollTop =\r\n+//       document.documentElement.scrollHeight - window.innerHeight;\r\n+//     if (window.pageYOffset >= maxScrollTop) {\r\n+//       speak(\"Already at the bottom of the page.\");\r\n+//     } else {\r\n+//       window.scrollBy(0, scrollAmount);\r\n+//       speak(\"Scrolled down.\");\r\n+//     }\r\n+//   };\r\n+\r\n+//   const scrollToTop = () => {\r\n+//     if (window.pageYOffset === 0) {\r\n+//       speak(\"Already at the top of the page.\");\r\n+//     } else {\r\n+//       window.scrollTo(0, 0);\r\n+//       speak(\"Scrolled to the top of the page.\");\r\n+//     }\r\n+//   };\r\n+\r\n+//   const scrollToBottom = () => {\r\n+//     const maxScrollTop =\r\n+//       document.documentElement.scrollHeight - window.innerHeight;\r\n+//     if (window.pageYOffset >= maxScrollTop) {\r\n+//       speak(\"Already at the bottom of the page.\");\r\n+//     } else {\r\n+//       window.scrollTo(0, document.body.scrollHeight);\r\n+//       speak(\"Scrolled to the bottom of the page.\");\r\n+//     }\r\n+//   };\r\n+\r\n+//   const speak = (message) => {\r\n+//     const utterance = new SpeechSynthesisUtterance(message);\r\n+//     utterance.onend = () => {\r\n+//       setIsSpeaking(false);\r\n+//       // Restart recognition after speaking has ended\r\n+//       if (isListening) {\r\n+//         restartRecognition();\r\n+//       }\r\n+//     };\r\n+\r\n+//     setIsSpeaking(true);\r\n+//     // Stop recognition when the bot starts speaking\r\n+//     if (recognition.current) {\r\n+//       recognition.current.abort();\r\n+//     }\r\n+//     speechSynthesis.current.speak(utterance);\r\n+//   };\r\n+\r\n+//   const restartRecognition = () => {\r\n+//     // Check if recognition is not already started and if the bot is set to listen\r\n+//     if (recognition.current && !recognition.current.starting && isListening && !isSpeaking) {\r\n+//       // Only start recognition if it's not already active\r\n+//       if (recognition.current.state !== 'active') {\r\n+//         recognition.current.abort(); // Ensure any ongoing recognition is stopped\r\n+//         recognition.current.starting = true;\r\n+//         recognition.current.start();\r\n+//       }\r\n+//     }\r\n+//   };\r\n+\r\n+//     // Restart recognition when bot finishes speaking and isListening is true\r\n+//     useEffect(() => {\r\n+//       if (!isSpeaking && isListening) {\r\n+//         restartRecognition();\r\n+//       }\r\n+//     }, [isSpeaking, isListening]);\r\n+\r\n+//   const onResult = (event) => {\r\n+//     const resultIndex = event.resultIndex;\r\n+//     const transcript = event.results[resultIndex][0].transcript\r\n+//       .trim()\r\n+//       .toLowerCase();\r\n+\r\n+//     if (event.results[resultIndex].isFinal) {\r\n+//       console.log(`Recognized text: ${transcript}`);\r\n+//       if (transcript.includes(\"brain\")) {\r\n+//         console.log(\"Wake word heard, processing command...\");\r\n+//         handleCommandWithFuse(transcript.replace(\"brain\", \"\"));\r\n+//       }\r\n+//     }\r\n+//   };\r\n+\r\n+//   const onRecognitionEnd = () => {\r\n+//     recognition.current.starting = false;\r\n+//     if (isListening && !isSpeaking) {\r\n+//       restartRecognition();\r\n+//     }\r\n+//   };\r\n+\r\n+//   useEffect(() => {\r\n+//     if (isListening && !hasGreeted) {\r\n+//       speak(\"Hello, I'm Brane. How can I help you today?\");\r\n+//       setHasGreeted(true);\r\n+//     }\r\n+//   }, [isListening, hasGreeted]);\r\n+\r\n+// // Updated startListening function\r\n+// const startListening = () => {\r\n+//   setIsListening(true);\r\n+//   if (recognition.current && !recognition.current.starting) {\r\n+//     recognition.current.start();\r\n+//   }\r\n+// };\r\n+\r\n+// // Updated stopListening function\r\n+// const stopListening = () => {\r\n+//   setIsListening(false);\r\n+//   setIsSpeaking(false); // Reset speaking state\r\n+//   setHasGreeted(false); // Reset greeting state if needed\r\n+//   if (recognition.current) {\r\n+//     recognition.current.abort(); // Stop any ongoing speech recognition\r\n+//   }\r\n+//   if (speechSynthesis.current.speaking) {\r\n+//     speechSynthesis.current.cancel(); // Stop any ongoing speech synthesis\r\n+//   }\r\n+// };\r\n+\r\n+//   const handleCommandWithFuse = (command) => {\r\n+//     const fuse = new Fuse(commands, { keys: [\"utterance\"], threshold: 0.4 });\r\n+//     const results = fuse.search(command);\r\n+//     const foundCommand = results.length ? results[0].item : null;\r\n+\r\n+//     if (foundCommand) {\r\n+//       console.log(\"Command found:\", foundCommand.utterance);\r\n+\r\n+//       if (foundCommand.action) {\r\n+//         foundCommand.action();\r\n+//       } else if (foundCommand.route) {\r\n+//         navigate(foundCommand.route);\r\n+//       }\r\n+\r\n+//       // Speak after performing the action or navigation\r\n+//       speak(foundCommand.response);\r\n+//     } else {\r\n+//       console.log(\"No command found.\");\r\n+//       speak(\"I'm not sure how to respond to that.\");\r\n+//     }\r\n+//   };\r\n+\r\n+//   const commands = [\r\n+//     {\r\n+//       utterance: \"Hello who are you ?\",\r\n+\r\n+//       response:\r\n+//         \"Hi! This is Brane! your Voice bot from Brane Education How can I Assist you Today ?\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"Hello\",\r\n+\r\n+//       response: \"Hi! How can I assist you today?\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"hello\",\r\n+\r\n+//       response: \"Hi! How can I assist you today?\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"Hi.\",\r\n+\r\n+//       response: \"Hello! How can I assist you today?\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"Hey there\",\r\n+\r\n+//       response: \"Hi! How can I assist you today?\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"Good morning Brane.\",\r\n+\r\n+//       response: \"Hey Hiii! Good morning  ! How can I help you?\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"Good afternoon Brane.\",\r\n+\r\n+//       response: \"Hey Hiii! Good after noon ! How can I help you?\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"Good evening Brane.\",\r\n+\r\n+//       response: \"Hey Hiii! Good evening ! How can I help you?\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"can you please take me to login page\",\r\n+\r\n+//       route: \"/login\",\r\n+\r\n+//       response: \"Here's the Login Page, Please Login\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"please take me to login page\",\r\n+\r\n+//       route: \"/login\",\r\n+\r\n+//       response: \"Here's the Login Page, Please Login\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"Go to login page\",\r\n+\r\n+//       route: \"/login\",\r\n+\r\n+//       response: \"Here's the Login Page, Please Login\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"open login page\",\r\n+\r\n+//       route: \"/login\",\r\n+\r\n+//       response: \"Here's the Login Page, Please Login\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"can you please take me to signup page\",\r\n+\r\n+//       route: \"/signup\",\r\n+\r\n+//       response: \"Here's the signup page. Please proceed With Registration.\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"take me to signup page\",\r\n+\r\n+//       route: \"/signup\",\r\n+\r\n+//       response: \"Here's the signup page. Please proceed With Registration.\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"Go to signup page\",\r\n+\r\n+//       route: \"/signup\",\r\n+\r\n+//       response: \"Here's the signup page. Please proceed With Registration.\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"open signup page\",\r\n+\r\n+//       route: \"/signup\",\r\n+\r\n+//       response: \"Here's the signup page. Please proceed With Registration.\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"Go to face id\",\r\n+\r\n+//       route: \"/login/faceid\",\r\n+\r\n+//       response: \"Here's Face ID Login. Please proceed.\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"Go to face id login\",\r\n+\r\n+//       route: \"/login/faceid\",\r\n+\r\n+//       response: \"Here's Face ID Login. Please proceed.\",\r\n+//     },\r\n+//     {\r\n+//       utterance: \"Go to face login\",\r\n+\r\n+//       route: \"/login/faceid\",\r\n+\r\n+//       response: \"Here's Face ID Login. Please proceed.\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"login with face id\",\r\n+\r\n+//       route: \"/login/faceid\",\r\n+\r\n+//       response: \"Here's Face ID Login. Please proceed.\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"login with face\",\r\n+\r\n+//       route: \"/login/faceid\",\r\n+\r\n+//       response: \"Here's Face ID Login. Please proceed.\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"i want to login with face\",\r\n+\r\n+//       route: \"/login/faceid\",\r\n+\r\n+//       response: \"Here's Face ID Login. Please proceed.\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"login with voice\",\r\n+\r\n+//       route: \"/login/voiceid\",\r\n+\r\n+//       response: \"Here's Voice Login. Please proceed.\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"i want to login with voice\",\r\n+\r\n+//       route: \"/login/voiceid\",\r\n+\r\n+//       response: \"Here's Voice Login. Please proceed.\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"go to voice login\",\r\n+\r\n+//       route: \"/login/voiceid\",\r\n+\r\n+//       response: \"Here's Voice Login. Please proceed.\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"login with voice\",\r\n+\r\n+//       route: \"/login/voiceid\",\r\n+\r\n+//       response: \"Here's Voice Login. Please proceed.\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"login with mobile\",\r\n+\r\n+//       route: \"/login/mobile\",\r\n+\r\n+//       response: \"Here's Mobile Login. Please proceed.\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"i want to login with mobile\",\r\n+\r\n+//       route: \"/login/mobile\",\r\n+\r\n+//       response: \"Here's Mobile Login. Please proceed.\",\r\n+//     },\r\n+//     {\r\n+//       utterance: \"go to mobile login\",\r\n+\r\n+//       route: \"/login/mobile\",\r\n+\r\n+//       response: \"Here's Mobile Login. Please proceed.\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"what are platform features\",\r\n+\r\n+//       response:\r\n+//         \"Dashboard, Dynamic time table, Learning Networks, Little Masters, Video Based Dictionary, General Search.\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"Features of platform\",\r\n+\r\n+//       response:\r\n+//         \"Dashboard, Dynamic time table, Learning Networks, Little Masters, Video Based Dictionary, General Search.\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"What does the platform offer\",\r\n+\r\n+//       response:\r\n+//         \"Dashboard, Dynamic time table, Learning Networks, Little Masters, Video Based Dictionary, General Search.\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"Say me the features of platform\",\r\n+\r\n+//       response:\r\n+//         \"Dashboard, Dynamic time table, Learning Networks, Little Masters, Video Based Dictionary, General Search.\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"Say me the services of platform\",\r\n+\r\n+//       response:\r\n+//         \"Dashboard, Dynamic time table, Learning Networks, Little Masters, Video Based Dictionary, General Search.\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"tell me the services offered by the platform\",\r\n+\r\n+//       response:\r\n+//         \"Dashboard, Dynamic time table, Learning Networks, Little Masters, Video Based Dictionary, General Search.\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"explain platform services\",\r\n+\r\n+//       response:\r\n+//         \"Dashboard, Dynamic time table, Learning Networks, Little Masters, Video Based Dictionary, General Search.\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"Give me the Parent voice of Julia Harris\",\r\n+\r\n+//       response:\r\n+//         \"Brane education has helped my son a lot in his studies. He improved a lot in his studies and is now able to score good marks in his exams\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"Play today's motivational video\",\r\n+\r\n+//       response: \"I am playing the video\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"Play today's video\",\r\n+\r\n+//       response: \"I am playing Motivational video\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"Leaders Voice\",\r\n+\r\n+//       response:\r\n+//         \"This Voice-interactive AI Platform is a game Changer. It revolutionizes education.\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"Curriculum Supported by Brane Education\",\r\n+\r\n+//       response:\r\n+//         \"we support multiple Boards let me say few Telangana State Board Andhra Pradesh Board Maharashtra Board Assam Board\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"Boards supported by the platform\",\r\n+\r\n+//       response:\r\n+//         \"we support multiple Boards let me say few Telangana State Board Andhra Pradesh Board Maharashtra Board Assam Board\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"Curriculum\",\r\n+\r\n+//       response:\r\n+//         \"we support multiple Boards let me say few Telangana State Board Andhra Pradesh Board Maharashtra Board Assam Board\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"Go to landing page\",\r\n+\r\n+//       response: \"Okay, I am taking you to the landing page.\",\r\n+\r\n+//       route: \"/childpage\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"take me to landing page\",\r\n+\r\n+//       response: \"Okay, I am taking you to the landing page.\",\r\n+\r\n+//       route: \"/childpage\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"move to landing page\",\r\n+\r\n+//       response: \"Okay, I am taking you to the landing page.\",\r\n+\r\n+//       route: \"/childpage\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"roll back to landing page\",\r\n+\r\n+//       response: \"Okay, I am taking you to the landing page.\",\r\n+\r\n+//       route: \"/childpage\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"move to landing page\",\r\n+\r\n+//       response: \"Okay, I am taking you to the landing page.\",\r\n+\r\n+//       route: \"/childpage\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"what is today's quote\",\r\n+\r\n+//       response:\r\n+//         \"Determination is the power that sees us through all our frustration and obstacles. It helps in building our willpower which is the very basis of success.\",\r\n+\r\n+//       route: \"/childpage\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"Today's Inspirational quote\",\r\n+\r\n+//       response:\r\n+//         \"Determination is the power that sees us through all our frustration and obstacles. It helps in building our willpower which is the very basis of success.\",\r\n+\r\n+//       route: \"/childpage\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"say me today's quote\",\r\n+\r\n+//       response:\r\n+//         \"Determination is the power that sees us through all our frustration and obstacles. It helps in building our willpower which is the very basis of success.\",\r\n+\r\n+//       route: \"/childpage\",\r\n+//     },\r\n+//     {\r\n+//       utterance: \"go back\",\r\n+//       response: \"\",\r\n+//       action: goBack, // Note the use of an action property\r\n+//     },\r\n+//     {\r\n+//       utterance: \"go forward\",\r\n+//       response: \"\",\r\n+//       action: goForward,\r\n+//     },\r\n+//     {\r\n+//       utterance: \"play video\",\r\n+//       // response: \"Playing video.\",\r\n+//       action: playVideo,\r\n+//     },\r\n+//     {\r\n+//       utterance: \"pause video\",\r\n+//       // response: \"Pausing video.\",\r\n+//       action: pauseVideo,\r\n+//     },\r\n+//     {\r\n+//       utterance: \"start video\",\r\n+//       // response: \"Playing video.\",\r\n+//       action: playVideo,\r\n+//     },\r\n+//     {\r\n+//       utterance: \"stop video\",\r\n+//       // response: \"Playing video.\",\r\n+//       action: pauseVideo,\r\n+//     },\r\n+//     {\r\n+//       utterance: \"scroll up\",\r\n+//       // response: \"Scrolling up.\",\r\n+//       action: scrollUp,\r\n+//     },\r\n+//     {\r\n+//       utterance: \"scroll down\",\r\n+//       // response: \"Scrolling down.\",\r\n+//       action: scrollDown,\r\n+//     },\r\n+//     {\r\n+//       utterance: \"go up\",\r\n+\r\n+//       // response: \"Scrolling up.\",\r\n+//       action: scrollUp,\r\n+//     },\r\n+//     {\r\n+//       utterance: \"go down\",\r\n+//       // response: \"Scrolling down.\",\r\n+//       action: scrollDown,\r\n+//     },\r\n+//     {\r\n+//       utterance: \"scroll to top\",\r\n+//       action: scrollToTop,\r\n+//     },\r\n+//     {\r\n+//       utterance: \"scroll to bottom\",\r\n+//       action: scrollToBottom,\r\n+//     },\r\n+//     {\r\n+//       utterance: \"brane stop\",\r\n+//       action: stopListening,\r\n+//     },\r\n+//     {\r\n+//       utterance: \"brane turn off\",\r\n+//       action: stopListening,\r\n+//     },\r\n+//     {\r\n+//       utterance: \"brane stop the bot\",\r\n+//       action: stopListening,\r\n+//     },\r\n+//   ];\r\n+\r\n+//   return (\r\n+//     <div className=\"speech-bot-container\">\r\n+//       <div\r\n+//         className={`button-container ${\r\n+//           isListening ? \"voicebotframeactive\" : \"voicebotframe\"\r\n+//         }`}\r\n+//       >\r\n+//         <button onClick={isListening ? stopListening : startListening}>\r\n+//           {isListening ? \"Stop\" : \"Start\"} Animation\r\n+//         </button>\r\n+//         {/* <button onClick={toggleBotActive}>\r\n+//         {isBotActive ? 'Deactivate Bot' : 'Activate Bot'}\r\n+//       </button> */}\r\n+//       </div>\r\n+//     </div>\r\n+//   );\r\n+// };\r\n+\r\n+// export default VoiceBot;\r\n+\r\n+//Bot Video added but some start issues\r\n+\r\n+// import React, { useState, useEffect, useRef } from \"react\";\r\n+// import { useNavigate, useLocation } from \"react-router-dom\";\r\n+// import Fuse from \"fuse.js\";\r\n+// import \"./VoiceBot.css\";\r\n+\r\n+// const VoiceBot = ({ videoRef }) => {\r\n+//   const [isListening, setIsListening] = useState(false);\r\n+//   const [isSpeaking, setIsSpeaking] = useState(false);\r\n+//   const recognition = useRef(null);\r\n+//   const speechSynthesis = useRef(window.speechSynthesis);\r\n+//   const hasGreeted = useRef(false);\r\n+//   const restartRecognitionTimeout = useRef(null);\r\n+//   const navigate = useNavigate();\r\n+//   const location = useLocation();\r\n+//   const [isRecognitionActive, setIsRecognitionActive] = useState(false); // New state to track recognition status\r\n+\r\n+//   useEffect(() => {\r\n+//     recognition.current = new window.webkitSpeechRecognition();\r\n+//     recognition.current.continuous = true;\r\n+//     recognition.current.interimResults = false;\r\n+//     recognition.current.onresult = onResult;\r\n+//     recognition.current.onend = () => {\r\n+//       console.log(\"Recognition ended.\");\r\n+//       if (isListening) {\r\n+//         startListening();\r\n+//       }\r\n+//     };\r\n+//     recognition.current.onerror = (event) => {\r\n+//       console.error(\"Recognition error:\", event.error);\r\n+//     };\r\n+\r\n+//     return () => {\r\n+//       recognition.current.abort();\r\n+//     };\r\n+//   }, []);\r\n+\r\n+//   // Update useEffect for managing the recognition state based on isListening and isRecognitionActive\r\n+//   useEffect(() => {\r\n+//     if (isListening && !isRecognitionActive) {\r\n+//       startListening();\r\n+//     } else if (!isListening && isRecognitionActive) {\r\n+//       stopListening();\r\n+//     }\r\n+//   }, [isListening, isRecognitionActive]);\r\n+\r\n+//   const goBack = () => {\r\n+//     if (window.history.length > 1) {\r\n+//       navigate(-1);\r\n+//     } else {\r\n+//       speak(\"Can't go back any further.\");\r\n+//     }\r\n+//   };\r\n+\r\n+//   const goForward = () => {\r\n+//     // Unfortunately, there's no direct way to check if you can go forward in the history.\r\n+//     // You might need to manage this state manually based on user navigation.\r\n+//     navigate(1);\r\n+//   };\r\n+\r\n+//   const playVideo = () => {\r\n+//     if (videoRef.current && !videoRef.current.paused) {\r\n+//       speak(\"Video is already playing.\");\r\n+//     } else if (videoRef.current) {\r\n+//       videoRef.current.play();\r\n+//       speak(\"Playing video.\");\r\n+//     } else {\r\n+//       speak(\"No video to play.\");\r\n+//     }\r\n+//   };\r\n+\r\n+//   const pauseVideo = () => {\r\n+//     if (videoRef.current && videoRef.current.paused) {\r\n+//       speak(\"Video is already paused.\");\r\n+//     } else if (videoRef.current) {\r\n+//       videoRef.current.pause();\r\n+//       speak(\"Video paused.\");\r\n+//     } else {\r\n+//       speak(\"No video to pause.\");\r\n+//     }\r\n+//   };\r\n+\r\n+//   const scrollAmount = window.innerHeight * 0.82;\r\n+\r\n+//   const scrollUp = () => {\r\n+//     if (window.pageYOffset === 0) {\r\n+//       speak(\"Already at the top of the page.\");\r\n+//     } else {\r\n+//       window.scrollBy(0, -scrollAmount);\r\n+//       speak(\"Scrolled up.\");\r\n+//     }\r\n+//   };\r\n+\r\n+//   const scrollDown = () => {\r\n+//     const maxScrollTop =\r\n+//       document.documentElement.scrollHeight - window.innerHeight;\r\n+//     if (window.pageYOffset >= maxScrollTop) {\r\n+//       speak(\"Already at the bottom of the page.\");\r\n+//     } else {\r\n+//       window.scrollBy(0, scrollAmount);\r\n+//       speak(\"Scrolled down.\");\r\n+//     }\r\n+//   };\r\n+\r\n+//   const scrollToTop = () => {\r\n+//     if (window.pageYOffset === 0) {\r\n+//       speak(\"Already at the top of the page.\");\r\n+//     } else {\r\n+//       window.scrollTo(0, 0);\r\n+//       speak(\"Scrolled to the top of the page.\");\r\n+//     }\r\n+//   };\r\n+\r\n+//   const scrollToBottom = () => {\r\n+//     const maxScrollTop =\r\n+//       document.documentElement.scrollHeight - window.innerHeight;\r\n+//     if (window.pageYOffset >= maxScrollTop) {\r\n+//       speak(\"Already at the bottom of the page.\");\r\n+//     } else {\r\n+//       window.scrollTo(0, document.body.scrollHeight);\r\n+//       speak(\"Scrolled to the bottom of the page.\");\r\n+//     }\r\n+//   };\r\n+\r\n+//   // const speak = (message) => {\r\n+//   //   const utterance = new SpeechSynthesisUtterance(message);\r\n+//   //   utterance.onend = () => {\r\n+//   //     setIsSpeaking(false);\r\n+//   //     console.log(\"Speaking ended.\");\r\n+//   //     // Only restart recognition if we're still supposed to be listening\r\n+//   //     // if (isListening) {\r\n+//   //     //   if (restartRecognitionTimeout.current) {\r\n+//   //     //     clearTimeout(restartRecognitionTimeout.current);\r\n+//   //     //   }\r\n+//   //     //   restartRecognitionTimeout.current = setTimeout(() => {\r\n+//   //     //     console.log(\"Recognition restarted.\");\r\n+//   //     //     recognition.current.start();\r\n+//   //     //   }, 100); // Delay to prevent immediate restart\r\n+//   //     // }\r\n+//   //     if (isListening && !recognition.current.starting) { // Check the flag before restarting\r\n+//   //       recognition.current.starting = true; // Set the flag when starting recognition\r\n+//   //       recognition.current.start();\r\n+//   //     }\r\n+//   //   };\r\n+\r\n+//   //   setIsSpeaking(true);\r\n+//   //   console.log(\"Speaking started.\");\r\n+//   //   recognition.current.stop(); // Stop recognition when the bot starts speaking\r\n+//   //   speechSynthesis.current.speak(utterance);\r\n+//   // };\r\n+\r\n+//   const speak = (message) => {\r\n+//     console.log(\"speak function called with message:\", message);\r\n+//     const utterance = new SpeechSynthesisUtterance(message);\r\n+//     utterance.onend = () => {\r\n+//       setIsSpeaking(false);\r\n+//       console.log(\"Speaking ended.\");\r\n+//       // Directly handle the restart of recognition here if needed\r\n+//       if (isListening) {\r\n+//         startListening();\r\n+//       }\r\n+//     };\r\n+\r\n+//     setIsSpeaking(true);\r\n+//     console.log(\"Speaking started.\");\r\n+//     recognition.current.stop(); // Ensure to stop recognition before speaking\r\n+//     speechSynthesis.current.speak(utterance);\r\n+//   };\r\n+\r\n+//   const onResult = (event) => {\r\n+//     const resultIndex = event.resultIndex;\r\n+//     const transcript = event.results[resultIndex][0].transcript\r\n+//       .trim()\r\n+//       .toLowerCase();\r\n+\r\n+//     if (event.results[resultIndex].isFinal) {\r\n+//       console.log(`Recognized text: ${transcript}`);\r\n+//       if (transcript.includes(\"brain\")) {\r\n+//         console.log(\"Wake word heard, processing command...\");\r\n+//         handleCommandWithFuse(transcript.replace(\"brain\", \"\"));\r\n+//       }\r\n+//     }\r\n+//   };\r\n+\r\n+//   // const onRecognitionEnd = () => {\r\n+//   //   console.log(\"Recognition ended.\");\r\n+//   //   setIsRecognitionActive(false); // Update state when recognition ends\r\n+//   //   recognition.current.starting = false; // Reset the flag when recognition ends\r\n+//   //   // We now check if the recognition is already running before starting it again\r\n+//   //   if (isListening && !isSpeaking && !recognition.current?.starting) {\r\n+//   //     console.log(\"Restarting recognition.\");\r\n+//   //     recognition.current.start();\r\n+//   //   }\r\n+//   // };\r\n+\r\n+//   // useEffect(() => {\r\n+//   //   if (isListening && !hasGreeted.current) {\r\n+//   //     speak(\"Hello, I'm Brane. How can I assist you today?\");\r\n+//   //     hasGreeted.current = true;\r\n+//   //   } else if (isListening && !isSpeaking) {\r\n+//   //     recognition.current.start();\r\n+//   //   }\r\n+//   // }, [isListening, isSpeaking]);\r\n+\r\n+//   useEffect(() => {\r\n+//     if (isListening && !hasGreeted.current) {\r\n+//       speak(\"Hello, I'm Brane. How can I assist you today?\");\r\n+//       hasGreeted.current = true;\r\n+//     } else if (isListening && !isSpeaking && !recognition.current.starting) {\r\n+//       // Check the flag before starting\r\n+//       recognition.current.starting = true; // Set the flag when starting recognition\r\n+//       recognition.current.start();\r\n+//     }\r\n+//   }, [isListening, isSpeaking]);\r\n+\r\n+//   // const startListening = () => {\r\n+//   //   console.log(\"Attempting to start listening.\");\r\n+//   //   if (recognition.current && !recognition.current.starting) {\r\n+//   //     setIsListening(true);\r\n+//   //     recognition.current.starting = true; // Set the flag when starting recognition\r\n+//   //     recognition.current.start();\r\n+//   //     console.log(\"Listening started.\");\r\n+//   //   }\r\n+//   // };\r\n+\r\n+//   // const stopListening = () => {\r\n+//   //   console.log(\"Stopping listening.\");\r\n+\r\n+//   //   setIsListening(false);\r\n+//   //   recognition.current.stop();\r\n+//   //   if (speechSynthesis.current.speaking) {\r\n+//   //     speechSynthesis.current.cancel();\r\n+//   //   }\r\n+//   //   if (restartRecognitionTimeout.current) {\r\n+//   //     clearTimeout(restartRecognitionTimeout.current);\r\n+//   //   }\r\n+//   //   console.log(\"Listening stopped.\");\r\n+//   // };\r\n+//   // Handle start and stop listening logic\r\n+//   const startListening = () => {\r\n+//     console.log(\"Attempting to start listening.\");\r\n+//     if (!recognition.current.starting) {\r\n+//       setIsListening(true);\r\n+//       recognition.current.starting = true;\r\n+//       recognition.current.start();\r\n+//       console.log(\"Listening started.\");\r\n+//     } else {\r\n+//       console.log(\"Recognition already active.\");\r\n+//     }\r\n+//   };\r\n+\r\n+//   const stopListening = () => {\r\n+//     console.log(\"Stopping listening.\");\r\n+//     if (recognition.current.starting) {\r\n+//       setIsListening(false);\r\n+//       recognition.current.starting = false;\r\n+//       recognition.current.stop();\r\n+//       console.log(\"Listening stopped.\");\r\n+//     } else {\r\n+//       console.log(\"Recognition already inactive.\");\r\n+//     }\r\n+//   };\r\n+\r\n+//   // const handleCommandWithFuse = (command) => {\r\n+//   //   const fuse = new Fuse(commands, { keys: [\"utterance\"], threshold: 0.4 });\r\n+//   //   const results = fuse.search(command);\r\n+//   //   const foundCommand = results.length ? results[0].item : null;\r\n+\r\n+//   //   if (foundCommand) {\r\n+//   //     console.log(\"Command found:\", foundCommand.utterance);\r\n+//   //     speak(foundCommand.response);\r\n+//   //     if (foundCommand.route) {\r\n+//   //       navigate(foundCommand.route); // Navigate to the route specified in the command\r\n+//   //     }\r\n+//   //   } else {\r\n+//   //     console.log(\"No command found.\");\r\n+//   //     speak(\"I'm not sure how to respond to that.\");\r\n+//   //   }\r\n+//   // };\r\n+\r\n+//   const handleCommandWithFuse = (command) => {\r\n+//     const fuse = new Fuse(commands, { keys: [\"utterance\"], threshold: 0.4 });\r\n+//     const results = fuse.search(command);\r\n+//     const foundCommand = results.length ? results[0].item : null;\r\n+\r\n+//     if (foundCommand) {\r\n+//       console.log(\"Command found:\", foundCommand.utterance);\r\n+\r\n+//       if (foundCommand.route) {\r\n+//         if (location.pathname !== foundCommand.route) {\r\n+//           navigate(foundCommand.route);\r\n+//           speak(\r\n+//             `Navigating to ${\r\n+//               foundCommand.routeDescription || \"requested page\"\r\n+//             }.`\r\n+//           );\r\n+//         } else {\r\n+//           speak(\r\n+//             `You are already on the ${\r\n+//               foundCommand.routeDescription || \"requested page\"\r\n+//             }.`\r\n+//           );\r\n+//         }\r\n+//       } else if (foundCommand.action) {\r\n+//         foundCommand.action();\r\n+//       }\r\n+\r\n+//       if (foundCommand.response) {\r\n+//         speak(foundCommand.response);\r\n+//       }\r\n+//     } else {\r\n+//       console.log(\"No command found.\");\r\n+//       speak(\"I'm not sure how to respond to that.\");\r\n+//     }\r\n+//   };\r\n+\r\n+//   const commands = [\r\n+//     {\r\n+//       utterance: \"Hello who are you ?\",\r\n+\r\n+//       response:\r\n+//         \"Hi! This is Brane! your Voice bot from Brane Education How can I Assist you Today ?\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"Hello\",\r\n+\r\n+//       response: \"Hi! How can I assist you today?\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"hello\",\r\n+\r\n+//       response: \"Hi! How can I assist you today?\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"Hi.\",\r\n+\r\n+//       response: \"Hello! How can I assist you today?\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"Hey there\",\r\n+\r\n+//       response: \"Hi! How can I assist you today?\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"Good morning Brane.\",\r\n+\r\n+//       response: \"Hey Hiii! Good morning  ! How can I help you?\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"Good afternoon Brane.\",\r\n+\r\n+//       response: \"Hey Hiii! Good after noon ! How can I help you?\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"Good evening Brane.\",\r\n+\r\n+//       response: \"Hey Hiii! Good evening ! How can I help you?\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"can you please take me to login page\",\r\n+//       route: \"/login\",\r\n+//       routeDescription: \"login page\",\r\n+//       response: \"Navigating to the login page.\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"go to login page\",\r\n+//       route: \"/login\",\r\n+//       routeDescription: \"login page\",\r\n+//       response: \"Navigating to the login page.\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"please take me to login page\",\r\n+//       route: \"/login\",\r\n+//       routeDescription: \"login page\",\r\n+//       response: \"Navigating to the login page.\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"Go to login page\",\r\n+//       route: \"/login\",\r\n+//       routeDescription: \"login page\",\r\n+//       response: \"Navigating to the login page.\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"open login page\",\r\n+//       route: \"/login\",\r\n+//       routeDescription: \"login page\",\r\n+//       response: \"Navigating to the login page.\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"can you please take me to signup page\",\r\n+//       route: \"/signup\",\r\n+//       routeDescription: \"signup page\",\r\n+//       response: \"Navigating to the signup page.\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"take me to signup page\",\r\n+//       route: \"/signup\",\r\n+//       routeDescription: \"signup page\",\r\n+//       response: \"Navigating to the signup page.\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"Go to signup page\",\r\n+//       route: \"/signup\",\r\n+//       routeDescription: \"signup page\",\r\n+//       response: \"Navigating to the signup page.\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"open signup page\",\r\n+//       route: \"/signup\",\r\n+//       routeDescription: \"signup page\",\r\n+//       response: \"Navigating to the signup page.\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"what are platform features\",\r\n+\r\n+//       response:\r\n+//         \"Dashboard, Dynamic time table, Learning Networks, Little Masters, Video Based Dictionary, General Search.\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"Features of platform\",\r\n+\r\n+//       response:\r\n+//         \"Dashboard, Dynamic time table, Learning Networks, Little Masters, Video Based Dictionary, General Search.\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"What does the platform offer\",\r\n+\r\n+//       response:\r\n+//         \"Dashboard, Dynamic time table, Learning Networks, Little Masters, Video Based Dictionary, General Search.\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"Say me the features of platform\",\r\n+\r\n+//       response:\r\n+//         \"Dashboard, Dynamic time table, Learning Networks, Little Masters, Video Based Dictionary, General Search.\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"Say me the services of platform\",\r\n+\r\n+//       response:\r\n+//         \"Dashboard, Dynamic time table, Learning Networks, Little Masters, Video Based Dictionary, General Search.\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"tell me the services offered by the platform\",\r\n+\r\n+//       response:\r\n+//         \"Dashboard, Dynamic time table, Learning Networks, Little Masters, Video Based Dictionary, General Search.\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"explain platform services\",\r\n+\r\n+//       response:\r\n+//         \"Dashboard, Dynamic time table, Learning Networks, Little Masters, Video Based Dictionary, General Search.\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"Give me the Parent voice of Julia Harris\",\r\n+\r\n+//       response:\r\n+//         \"Brane education has helped my son a lot in his studies. He improved a lot in his studies and is now able to score good marks in his exams\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"Play today's motivational video\",\r\n+\r\n+//       response: \"I am playing the video\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"Play today's video\",\r\n+\r\n+//       response: \"I am playing Motivational video\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"Leaders Voice\",\r\n+\r\n+//       response:\r\n+//         \"This Voice-interactive AI Platform is a game Changer. It revolutionizes education.\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"Curriculum Supported by Brane Education\",\r\n+\r\n+//       response:\r\n+//         \"we support multiple Boards let me say few Telangana State Board Andhra Pradesh Board Maharashtra Board Assam Board\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"Boards supported by the platform\",\r\n+\r\n+//       response:\r\n+//         \"we support multiple Boards let me say few Telangana State Board Andhra Pradesh Board Maharashtra Board Assam Board\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"Curriculum\",\r\n+\r\n+//       response:\r\n+//         \"we support multiple Boards let me say few Telangana State Board Andhra Pradesh Board Maharashtra Board Assam Board\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"Go to landing page\",\r\n+\r\n+//       response: \"Okay, I am taking you to the landing page.\",\r\n+\r\n+//       route: \"/childpage\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"take me to landing page\",\r\n+\r\n+//       response: \"Okay, I am taking you to the landing page.\",\r\n+\r\n+//       route: \"/childpage\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"move to landing page\",\r\n+\r\n+//       response: \"Okay, I am taking you to the landing page.\",\r\n+\r\n+//       route: \"/childpage\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"roll back to landing page\",\r\n+\r\n+//       response: \"Okay, I am taking you to the landing page.\",\r\n+\r\n+//       route: \"/childpage\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"move to landing page\",\r\n+\r\n+//       response: \"Okay, I am taking you to the landing page.\",\r\n+\r\n+//       route: \"/childpage\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"what is today's quote\",\r\n+\r\n+//       response:\r\n+//         \"Determination is the power that sees us through all our frustration and obstacles. It helps in building our willpower which is the very basis of success.\",\r\n+\r\n+//       // route: \"/childpage\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"Today's Inspirational quote\",\r\n+\r\n+//       response:\r\n+//         \"Determination is the power that sees us through all our frustration and obstacles. It helps in building our willpower which is the very basis of success.\",\r\n+\r\n+//       // route: \"/childpage\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"say me today's quote\",\r\n+\r\n+//       response:\r\n+//         \"Determination is the power that sees us through all our frustration and obstacles. It helps in building our willpower which is the very basis of success.\",\r\n+\r\n+//       // route: \"/childpage\",\r\n+//     },\r\n+//     {\r\n+//       utterance: \"go back\",\r\n+//       response: \"Going back.\",\r\n+//       action: goBack, // Note the use of an action property\r\n+//     },\r\n+//     {\r\n+//       utterance: \"go forward\",\r\n+//       response: \"Going forward.\",\r\n+//       action: goForward,\r\n+//     },\r\n+//     {\r\n+//       utterance: \"play video\",\r\n+//       // response: \"Playing video.\",\r\n+//       action: playVideo,\r\n+//     },\r\n+//     {\r\n+//       utterance: \"pause video\",\r\n+//       // response: \"Pausing video.\",\r\n+//       action: pauseVideo,\r\n+//     },\r\n+//     {\r\n+//       utterance: \"start video\",\r\n+//       // response: \"Playing video.\",\r\n+//       action: playVideo,\r\n+//     },\r\n+//     {\r\n+//       utterance: \"stop video\",\r\n+//       // response: \"Playing video.\",\r\n+//       action: pauseVideo,\r\n+//     },\r\n+//     {\r\n+//       utterance: \"scroll up\",\r\n+//       // response: \"Scrolling up.\",\r\n+//       action: scrollUp,\r\n+//     },\r\n+//     {\r\n+//       utterance: \"scroll down\",\r\n+//       // response: \"Scrolling down.\",\r\n+//       action: scrollDown,\r\n+//     },\r\n+//     {\r\n+//       utterance: \"go up\",\r\n+\r\n+//       // response: \"Scrolling up.\",\r\n+//       action: scrollUp,\r\n+//     },\r\n+//     {\r\n+//       utterance: \"go down\",\r\n+//       // response: \"Scrolling down.\",\r\n+//       action: scrollDown,\r\n+//     },\r\n+//     {\r\n+//       utterance: \"scroll to top\",\r\n+//       action: scrollToTop,\r\n+//     },\r\n+//     {\r\n+//       utterance: \"scroll to bottom\",\r\n+//       action: scrollToBottom,\r\n+//     },\r\n+//   ];\r\n+//   return (\r\n+//     <div className=\"speech-bot-container\">\r\n+//       <div\r\n+//         className={`button-container ${\r\n+//           isListening ? \"voicebotframeactive\" : \"voicebotframe\"\r\n+//         }`}\r\n+//       >\r\n+//         <div onClick={isListening ? stopListening : startListening}>\r\n+//           <iframe\r\n+//             src={\r\n+//               isListening\r\n+//                 ? \"https://lottie.host/?file=a89aca3f-5407-4052-82c3-2048afca7a9f/NpCdWzLSKD.json\"\r\n+//                 : \"https://lottie.host/?file=d2b6cc0e-fe95-4847-85b5-35365fca7e00/vTudpCuPZq.json\"\r\n+//             }\r\n+//             width=\"120\" // Set your desired width\r\n+//             height=\"120\" // Set your desired height\r\n+//             title={isListening ? \"Stop Animation\" : \"Start Animation\"}\r\n+//             className={isListening ? \"voicebotframeactive\" : \"voicebotframe\"}\r\n+//           ></iframe>\r\n+//           {isListening ? (\r\n+//             <div className=\"overlay\" onClick={stopListening}></div>\r\n+//           ) : (\r\n+//             <div className=\"overlay\" onClick={startListening}></div>\r\n+//           )}\r\n+//         </div>\r\n+//       </div>\r\n+//     </div>\r\n+//   );\r\n+// };\r\n+\r\n+// export default VoiceBot;\r\n+\r\n+// All functionalities but messed up\r\n+\r\n+// import React, { useState, useEffect, useRef } from \"react\";\r\n+// import { useNavigate, useLocation } from \"react-router-dom\";\r\n+// import Fuse from \"fuse.js\";\r\n+// import \"./VoiceBot.css\";\r\n+\r\n+// const VoiceBot = ({ videoRef, takeTestRef, goBackRef }) => {\r\n+//   const [isListening, setIsListening] = useState(false);\r\n+//   const [isSpeaking, setIsSpeaking] = useState(false);\r\n+//   const recognition = useRef(null);\r\n+//   const speechSynthesis = useRef(window.speechSynthesis);\r\n+//   const hasGreeted = useRef(false);\r\n+//   const navigate = useNavigate();\r\n+//   const location = useLocation();\r\n+//   const isRecognitionActive = useRef(false);\r\n+\r\n+//   useEffect(() => {\r\n+//     recognition.current = new window.webkitSpeechRecognition();\r\n+//     recognition.current.continuous = true;\r\n+//     recognition.current.interimResults = false;\r\n+//     recognition.current.onresult = onResult;\r\n+//     recognition.current.onend = onRecognitionEnd;\r\n+\r\n+//     return () => {\r\n+//       if (recognition.current) {\r\n+//         recognition.current.abort();\r\n+//       }\r\n+//     };\r\n+//   }, [location.pathname]);\r\n+\r\n+//   const onResult = (event) => {\r\n+//     const resultIndex = event.resultIndex;\r\n+//     const transcript = event.results[resultIndex][0].transcript\r\n+//       .trim()\r\n+//       .toLowerCase();\r\n+\r\n+//     if (event.results[resultIndex].isFinal) {\r\n+//       console.log(`Recognized text: ${transcript}`);\r\n+//       if (transcript.includes(\"brain\")) {\r\n+//         console.log(\"Wake word heard, processing command...\");\r\n+//         handleCommandWithFuse(transcript.replace(\"brain\", \"\"));\r\n+//       }\r\n+//     }\r\n+//   };\r\n+\r\n+//   const startListening = () => {\r\n+//     if (!isRecognitionActive.current) {\r\n+//       setIsListening(true);\r\n+//       recognition.current.start();\r\n+//       isRecognitionActive.current = true;\r\n+//     }\r\n+//   };\r\n+\r\n+//   const stopListening = () => {\r\n+//     if (isRecognitionActive.current) {\r\n+//       setIsListening(false);\r\n+//       recognition.current.stop();\r\n+//       isRecognitionActive.current = false;\r\n+//     }\r\n+//   };\r\n+\r\n+//   const onRecognitionEnd = () => {\r\n+//     isRecognitionActive.current = false;\r\n+//     if (isListening) {\r\n+//       startListening();\r\n+//     }\r\n+//   };\r\n+\r\n+//   const speak = (message) => {\r\n+//     const utterance = new SpeechSynthesisUtterance(message);\r\n+//     utterance.onend = () => {\r\n+//       setIsSpeaking(false);\r\n+//       if (isListening && !isRecognitionActive.current) {\r\n+//         startListening();\r\n+//       }\r\n+//     };\r\n+\r\n+//     setIsSpeaking(true);\r\n+//     if (isRecognitionActive.current) {\r\n+//       stopListening(); // Adjusted to use stopListening\r\n+//     }\r\n+//     speechSynthesis.current.speak(utterance);\r\n+//   };\r\n+\r\n+//   useEffect(() => {\r\n+//     if (isListening && !hasGreeted.current) {\r\n+//       speak(\"Hello, I'm Brane. How can I assist you today?\");\r\n+//       hasGreeted.current = true;\r\n+//     }\r\n+//   }, [isListening]);\r\n+\r\n+//   const goBack = () => {\r\n+//     if (window.history.length > 1) {\r\n+//       navigate(-1);\r\n+//     } else {\r\n+//       speak(\"Can't go back any further.\");\r\n+//     }\r\n+//   };\r\n+\r\n+//   const goForward = () => {\r\n+//     // Unfortunately, there's no direct way to check if you can go forward in the history.\r\n+//     // You might need to manage this state manually based on user navigation.\r\n+//     navigate(1);\r\n+//   };\r\n+\r\n+//   const playVideo = () => {\r\n+//     if (videoRef.current && !videoRef.current.paused) {\r\n+//       speak(\"Video is already playing.\");\r\n+//     } else if (videoRef.current) {\r\n+//       videoRef.current.play();\r\n+//       speak(\"Playing video.\");\r\n+//     } else {\r\n+//       speak(\"No video to play.\");\r\n+//     }\r\n+//   };\r\n+\r\n+//   const pauseVideo = () => {\r\n+//     if (videoRef.current && videoRef.current.paused) {\r\n+//       speak(\"Video is already paused.\");\r\n+//     } else if (videoRef.current) {\r\n+//       videoRef.current.pause();\r\n+//       speak(\"Video paused.\");\r\n+//     } else {\r\n+//       speak(\"No video to pause.\");\r\n+//     }\r\n+//   };\r\n+\r\n+//   const scrollAmount = window.innerHeight * 0.82;\r\n+\r\n+//   const scrollUp = () => {\r\n+//     if (window.pageYOffset === 0) {\r\n+//       speak(\"Already at the top of the page.\");\r\n+//     } else {\r\n+//       window.scrollBy(0, -scrollAmount);\r\n+//       speak(\"Scrolled up.\");\r\n+//     }\r\n+//   };\r\n+\r\n+//   const scrollDown = () => {\r\n+//     const maxScrollTop =\r\n+//       document.documentElement.scrollHeight - window.innerHeight;\r\n+//     if (window.pageYOffset >= maxScrollTop) {\r\n+//       speak(\"Already at the bottom of the page.\");\r\n+//     } else {\r\n+//       window.scrollBy(0, scrollAmount);\r\n+//       speak(\"Scrolled down.\");\r\n+//     }\r\n+//   };\r\n+\r\n+//   const scrollToTop = () => {\r\n+//     if (window.pageYOffset === 0) {\r\n+//       speak(\"Already at the top of the page.\");\r\n+//     } else {\r\n+//       window.scrollTo(0, 0);\r\n+//       speak(\"Scrolled to the top of the page.\");\r\n+//     }\r\n+//   };\r\n+\r\n+//   const scrollToBottom = () => {\r\n+//     const maxScrollTop =\r\n+//       document.documentElement.scrollHeight - window.innerHeight;\r\n+//     if (window.pageYOffset >= maxScrollTop) {\r\n+//       speak(\"Already at the bottom of the page.\");\r\n+//     } else {\r\n+//       window.scrollTo(0, document.body.scrollHeight);\r\n+//       speak(\"Scrolled to the bottom of the page.\");\r\n+//     }\r\n+//   };\r\n+\r\n+//   // const speak = (message) => {\r\n+//   //   const utterance = new SpeechSynthesisUtterance(message);\r\n+//   //   utterance.onend = () => {\r\n+//   //     setIsSpeaking(false);\r\n+//   //     console.log(\"Speaking ended.\");\r\n+//   //     // Only restart recognition if we're still supposed to be listening\r\n+//   //     // if (isListening) {\r\n+//   //     //   if (restartRecognitionTimeout.current) {\r\n+//   //     //     clearTimeout(restartRecognitionTimeout.current);\r\n+//   //     //   }\r\n+//   //     //   restartRecognitionTimeout.current = setTimeout(() => {\r\n+//   //     //     console.log(\"Recognition restarted.\");\r\n+//   //     //     recognition.current.start();\r\n+//   //     //   }, 100); // Delay to prevent immediate restart\r\n+//   //     // }\r\n+//   //     if (isListening && !recognition.current.starting) { // Check the flag before restarting\r\n+//   //       recognition.current.starting = true; // Set the flag when starting recognition\r\n+//   //       recognition.current.start();\r\n+//   //     }\r\n+//   //   };\r\n+\r\n+//   //   setIsSpeaking(true);\r\n+//   //   console.log(\"Speaking started.\");\r\n+//   //   recognition.current.stop(); // Stop recognition when the bot starts speaking\r\n+//   //   speechSynthesis.current.speak(utterance);\r\n+//   // };\r\n+\r\n+//   // const onRecognitionEnd = () => {\r\n+//   //   console.log(\"Recognition ended.\");\r\n+//   //   setIsRecognitionActive(false); // Update state when recognition ends\r\n+//   //   recognition.current.starting = false; // Reset the flag when recognition ends\r\n+//   //   // We now check if the recognition is already running before starting it again\r\n+//   //   if (isListening && !isSpeaking && !recognition.current?.starting) {\r\n+//   //     console.log(\"Restarting recognition.\");\r\n+//   //     recognition.current.start();\r\n+//   //   }\r\n+//   // };\r\n+\r\n+//   // useEffect(() => {\r\n+//   //   if (isListening && !hasGreeted.current) {\r\n+//   //     speak(\"Hello, I'm Brane. How can I assist you today?\");\r\n+//   //     hasGreeted.current = true;\r\n+//   //   } else if (isListening && !isSpeaking) {\r\n+//   //     recognition.current.start();\r\n+//   //   }\r\n+//   // }, [isListening, isSpeaking]);\r\n+\r\n+//   // const startListening = () => {\r\n+//   //   console.log(\"Attempting to start listening.\");\r\n+//   //   if (recognition.current && !recognition.current.starting) {\r\n+//   //     setIsListening(true);\r\n+//   //     recognition.current.starting = true; // Set the flag when starting recognition\r\n+//   //     recognition.current.start();\r\n+//   //     console.log(\"Listening started.\");\r\n+//   //   }\r\n+//   // };\r\n+\r\n+//   // const stopListening = () => {\r\n+//   //   console.log(\"Stopping listening.\");\r\n+\r\n+//   //   setIsListening(false);\r\n+//   //   recognition.current.stop();\r\n+//   //   if (speechSynthesis.current.speaking) {\r\n+//   //     speechSynthesis.current.cancel();\r\n+//   //   }\r\n+//   //   if (restartRecognitionTimeout.current) {\r\n+//   //     clearTimeout(restartRecognitionTimeout.current);\r\n+//   //   }\r\n+//   //   console.log(\"Listening stopped.\");\r\n+//   // };\r\n+//   // Handle start and stop listening logic\r\n+\r\n+//   useEffect(() => {\r\n+//     if (isListening && !hasGreeted.current) {\r\n+//       speak(\"Hello, I'm Brane. How can I assist you today?\");\r\n+//       hasGreeted.current = true;\r\n+//     }\r\n+//   }, [isListening]);\r\n+\r\n+//   // const handleCommandWithFuse = (command) => {\r\n+//   //   const fuse = new Fuse(commands, { keys: [\"utterance\"], threshold: 0.4 });\r\n+//   //   const results = fuse.search(command);\r\n+//   //   const foundCommand = results.length ? results[0].item : null;\r\n+\r\n+//   //   if (foundCommand) {\r\n+//   //     console.log(\"Command found:\", foundCommand.utterance);\r\n+//   //     speak(foundCommand.response);\r\n+//   //     if (foundCommand.route) {\r\n+//   //       navigate(foundCommand.route); // Navigate to the route specified in the command\r\n+//   //     }\r\n+//   //   } else {\r\n+//   //     console.log(\"No command found.\");\r\n+//   //     speak(\"I'm not sure how to respond to that.\");\r\n+//   //   }\r\n+//   // };\r\n+\r\n+//   const handleCommandWithFuse = (command) => {\r\n+//     const fuse = new Fuse(commands, { keys: [\"utterance\"], threshold: 0.4 });\r\n+//     const results = fuse.search(command);\r\n+//     const foundCommand = results.length ? results[0].item : null;\r\n+\r\n+//     if (foundCommand) {\r\n+//       console.log(\"Command found:\", foundCommand.utterance);\r\n+\r\n+//       if (foundCommand.action) {\r\n+//         foundCommand.action();\r\n+//       } else if (foundCommand.route) {\r\n+//         navigate(foundCommand.route);\r\n+//       }\r\n+\r\n+//       if (foundCommand.response) {\r\n+//         speak(foundCommand.response);\r\n+//       }\r\n+//     } else {\r\n+//       console.log(\"No command found.\");\r\n+//       speak(\"I'm not sure how to respond to that.\");\r\n+//     }\r\n+//   };\r\n+\r\n+//   const commands = [\r\n+//     {\r\n+//       utterance: \"Hello who are you ?\",\r\n+\r\n+//       response:\r\n+//         \"Hi! This is Brane! your Voice bot from Brane Education How can I Assist you Today ?\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"Hello\",\r\n+\r\n+//       response: \"Hi! How can I assist you today?\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"hello\",\r\n+\r\n+//       response: \"Hi! How can I assist you today?\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"Hi.\",\r\n+\r\n+//       response: \"Hello! How can I assist you today?\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"Hey there\",\r\n+\r\n+//       response: \"Hi! How can I assist you today?\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"Good morning Brane.\",\r\n+\r\n+//       response: \"Hey Hiii! Good morning  ! How can I help you?\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"Good afternoon Brane.\",\r\n+\r\n+//       response: \"Hey Hiii! Good after noon ! How can I help you?\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"Good evening Brane.\",\r\n+\r\n+//       response: \"Hey Hiii! Good evening ! How can I help you?\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"can you please take me to login page\",\r\n+//       route: \"/login\",\r\n+//       routeDescription: \"login page\",\r\n+//       response: \"Navigating to the login page.\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"go to login page\",\r\n+//       route: \"/login\",\r\n+//       routeDescription: \"login page\",\r\n+//       response: \"Navigating to the login page.\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"please take me to login page\",\r\n+//       route: \"/login\",\r\n+//       routeDescription: \"login page\",\r\n+//       response: \"Navigating to the login page.\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"Go to login page\",\r\n+//       route: \"/login\",\r\n+//       routeDescription: \"login page\",\r\n+//       response: \"Navigating to the login page.\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"open login page\",\r\n+//       route: \"/login\",\r\n+//       routeDescription: \"login page\",\r\n+//       response: \"Navigating to the login page.\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"can you please take me to signup page\",\r\n+//       route: \"/signup\",\r\n+//       routeDescription: \"signup page\",\r\n+//       response: \"Navigating to the signup page.\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"take me to signup page\",\r\n+//       route: \"/signup\",\r\n+//       routeDescription: \"signup page\",\r\n+//       response: \"Navigating to the signup page.\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"Go to signup page\",\r\n+//       route: \"/signup\",\r\n+//       routeDescription: \"signup page\",\r\n+//       response: \"Navigating to the signup page.\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"open signup page\",\r\n+//       route: \"/signup\",\r\n+//       routeDescription: \"signup page\",\r\n+//       response: \"Navigating to the signup page.\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"what are platform features\",\r\n+\r\n+//       response:\r\n+//         \"Dashboard, Dynamic time table, Learning Networks, Little Masters, Video Based Dictionary, General Search.\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"Features of platform\",\r\n+\r\n+//       response:\r\n+//         \"Dashboard, Dynamic time table, Learning Networks, Little Masters, Video Based Dictionary, General Search.\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"What does the platform offer\",\r\n+\r\n+//       response:\r\n+//         \"Dashboard, Dynamic time table, Learning Networks, Little Masters, Video Based Dictionary, General Search.\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"Say me the features of platform\",\r\n+\r\n+//       response:\r\n+//         \"Dashboard, Dynamic time table, Learning Networks, Little Masters, Video Based Dictionary, General Search.\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"Say me the services of platform\",\r\n+\r\n+//       response:\r\n+//         \"Dashboard, Dynamic time table, Learning Networks, Little Masters, Video Based Dictionary, General Search.\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"tell me the services offered by the platform\",\r\n+\r\n+//       response:\r\n+//         \"Dashboard, Dynamic time table, Learning Networks, Little Masters, Video Based Dictionary, General Search.\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"explain platform services\",\r\n+\r\n+//       response:\r\n+//         \"Dashboard, Dynamic time table, Learning Networks, Little Masters, Video Based Dictionary, General Search.\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"Give me the Parent voice of Julia Harris\",\r\n+\r\n+//       response:\r\n+//         \"Brane education has helped my son a lot in his studies. He improved a lot in his studies and is now able to score good marks in his exams\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"Play today's motivational video\",\r\n+\r\n+//       response: \"I am playing the video\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"Play today's video\",\r\n+\r\n+//       response: \"I am playing Motivational video\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"Leaders Voice\",\r\n+\r\n+//       response:\r\n+//         \"This Voice-interactive AI Platform is a game Changer. It revolutionizes education.\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"Curriculum Supported by Brane Education\",\r\n+\r\n+//       response:\r\n+//         \"we support multiple Boards let me say few Telangana State Board Andhra Pradesh Board Maharashtra Board Assam Board\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"Boards supported by the platform\",\r\n+\r\n+//       response:\r\n+//         \"we support multiple Boards let me say few Telangana State Board Andhra Pradesh Board Maharashtra Board Assam Board\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"Curriculum\",\r\n+\r\n+//       response:\r\n+//         \"we support multiple Boards let me say few Telangana State Board Andhra Pradesh Board Maharashtra Board Assam Board\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"Go to landing page\",\r\n+\r\n+//       response: \"Okay, I am taking you to the landing page.\",\r\n+\r\n+//       route: \"/childpage\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"take me to landing page\",\r\n+\r\n+//       response: \"Okay, I am taking you to the landing page.\",\r\n+\r\n+//       route: \"/childpage\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"move to landing page\",\r\n+\r\n+//       response: \"Okay, I am taking you to the landing page.\",\r\n+\r\n+//       route: \"/childpage\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"roll back to landing page\",\r\n+\r\n+//       response: \"Okay, I am taking you to the landing page.\",\r\n+\r\n+//       route: \"/childpage\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"move to landing page\",\r\n+\r\n+//       response: \"Okay, I am taking you to the landing page.\",\r\n+\r\n+//       route: \"/childpage\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"what is today's quote\",\r\n+\r\n+//       response:\r\n+//         \"Determination is the power that sees us through all our frustration and obstacles. It helps in building our willpower which is the very basis of success.\",\r\n+\r\n+//       // route: \"/childpage\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"Today's Inspirational quote\",\r\n+\r\n+//       response:\r\n+//         \"Determination is the power that sees us through all our frustration and obstacles. It helps in building our willpower which is the very basis of success.\",\r\n+\r\n+//       // route: \"/childpage\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"say me today's quote\",\r\n+\r\n+//       response:\r\n+//         \"Determination is the power that sees us through all our frustration and obstacles. It helps in building our willpower which is the very basis of success.\",\r\n+\r\n+//       // route: \"/childpage\",\r\n+//     },\r\n+//     {\r\n+//       utterance: \"go back\",\r\n+//       response: \"Going back.\",\r\n+//       action: goBack, // Note the use of an action property\r\n+//     },\r\n+//     {\r\n+//       utterance: \"go forward\",\r\n+//       response: \"Going forward.\",\r\n+//       action: goForward,\r\n+//     },\r\n+//     {\r\n+//       utterance: \"play video\",\r\n+//       // response: \"Playing video.\",\r\n+//       action: playVideo,\r\n+//     },\r\n+//     {\r\n+//       utterance: \"pause video\",\r\n+//       // response: \"Pausing video.\",\r\n+//       action: pauseVideo,\r\n+//     },\r\n+//     {\r\n+//       utterance: \"start video\",\r\n+//       // response: \"Playing video.\",\r\n+//       action: playVideo,\r\n+//     },\r\n+//     {\r\n+//       utterance: \"stop video\",\r\n+//       // response: \"Playing video.\",\r\n+//       action: pauseVideo,\r\n+//     },\r\n+//     {\r\n+//       utterance: \"scroll up\",\r\n+//       // response: \"Scrolling up.\",\r\n+//       action: scrollUp,\r\n+//     },\r\n+//     {\r\n+//       utterance: \"scroll down\",\r\n+//       // response: \"Scrolling down.\",\r\n+//       action: scrollDown,\r\n+//     },\r\n+//     {\r\n+//       utterance: \"go up\",\r\n+\r\n+//       // response: \"Scrolling up.\",\r\n+//       action: scrollUp,\r\n+//     },\r\n+//     {\r\n+//       utterance: \"go down\",\r\n+//       // response: \"Scrolling down.\",\r\n+//       action: scrollDown,\r\n+//     },\r\n+//     {\r\n+//       utterance: \"scroll to top\",\r\n+//       action: scrollToTop,\r\n+//     },\r\n+//     {\r\n+//       utterance: \"scroll to bottom\",\r\n+//       action: scrollToBottom,\r\n+//     },\r\n+//     {\r\n+//       utterance: \"go back\",\r\n+//       action: goBackRef?.current?.click, // Use goBackRef directly\r\n+//       response: \"Going back.\",\r\n+//     },\r\n+//     {\r\n+//       utterance: \"take test\",\r\n+//       action: takeTestRef?.current?.click, // Use takeTestRef directly\r\n+//       response: \"Starting the test.\",\r\n+//     },\r\n+//   ];\r\n+//   return (\r\n+//     <div className=\"speech-bot-container\">\r\n+//       <div\r\n+//         className={`button-container ${\r\n+//           isListening ? \"voicebotframeactive\" : \"voicebotframe\"\r\n+//         }`}\r\n+//       >\r\n+//         <div onClick={isListening ? stopListening : startListening}>\r\n+//           <iframe\r\n+//             src={\r\n+//               isListening\r\n+//                 ? \"https://lottie.host/?file=a89aca3f-5407-4052-82c3-2048afca7a9f/NpCdWzLSKD.json\"\r\n+//                 : \"https://lottie.host/?file=d2b6cc0e-fe95-4847-85b5-35365fca7e00/vTudpCuPZq.json\"\r\n+//             }\r\n+//             width=\"120\" // Set your desired width\r\n+//             height=\"120\" // Set your desired height\r\n+//             title={isListening ? \"Stop Animation\" : \"Start Animation\"}\r\n+//             className={isListening ? \"voicebotframeactive\" : \"voicebotframe\"}\r\n+//           ></iframe>\r\n+//           {isListening ? (\r\n+//             <div className=\"overlay\" onClick={stopListening}></div>\r\n+//           ) : (\r\n+//             <div className=\"overlay\" onClick={startListening}></div>\r\n+//           )}\r\n+//         </div>\r\n+//       </div>\r\n+//     </div>\r\n+//   );\r\n+// };\r\n+\r\n+// export default VoiceBot;\r\n"
                },
                {
                    "date": 1700733098298,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -3756,3722 +3756,4 @@\n //   );\r\n // };\r\n \r\n // export default VoiceBot;\r\n-import React, { useState, useEffect, useRef } from \"react\";\r\n-import { useNavigate, useLocation } from \"react-router-dom\";\r\n-import Fuse from \"fuse.js\";\r\n-import \"./VoiceBot.css\";\r\n-import chatbotimage from \"../../assets/chatbotgif.gif\";\r\n-\r\n-const VoiceBot = ({ videoRefs }) => {\r\n-  const [isListening, setIsListening] = useState(false);\r\n-  const [isSpeaking, setIsSpeaking] = useState(false);\r\n-  const recognition = useRef(null);\r\n-  const speechSynthesis = useRef(window.speechSynthesis);\r\n-  const [hasGreeted, setHasGreeted] = useState(false);\r\n-  const navigate = useNavigate();\r\n-\r\n-  // Initialize speech recognition\r\n-  useEffect(() => {\r\n-    recognition.current = new window.webkitSpeechRecognition();\r\n-    recognition.current.continuous = true;\r\n-    recognition.current.interimResults = false;\r\n-    recognition.current.onresult = onResult;\r\n-    recognition.current.onend = onRecognitionEnd;\r\n-    recognition.current.starting = false;\r\n-\r\n-    recognition.current.onerror = (event) => {\r\n-      console.error(\"Recognition error:\", event.error);\r\n-      if (isListening && !isSpeaking) {\r\n-        restartRecognition();\r\n-      }\r\n-    };\r\n-\r\n-    return () => {\r\n-      if (recognition.current) {\r\n-        recognition.current.abort();\r\n-      }\r\n-    };\r\n-  }, []);\r\n-\r\n-  useEffect(() => {\r\n-    const checkRecognition = () => {\r\n-      if (isListening && !isSpeaking && !recognition.current.starting) {\r\n-        console.log(\"Restarting recognition because it's not active.\");\r\n-        recognition.current.starting = true;\r\n-        recognition.current.start();\r\n-        console.log(\"Restarted recognition.\");\r\n-      }\r\n-    };\r\n-\r\n-    const recognitionCheckInterval = setInterval(checkRecognition, 500); // Check every .5 second\r\n-\r\n-    return () => {\r\n-      clearInterval(recognitionCheckInterval);\r\n-    };\r\n-  }, [isListening, isSpeaking]);\r\n-\r\n-  const historyStack = useRef([]);\r\n-\r\n-  useEffect(() => {\r\n-    return () => {\r\n-      // Clean up the listener when the component unmounts\r\n-      window.removeEventListener(\"popstate\", handlePopState);\r\n-    };\r\n-  }, []);\r\n-\r\n-  const handlePopState = () => {\r\n-    // This needs to handle both back and forward browser actions\r\n-    // Use some logic to determine whether it's a back or forward action\r\n-    // For simplicity, assume it's always back\r\n-    historyStack.current.pop();\r\n-    forwardStack.current.length = 0; // Clear forward stack on manual navigation\r\n-  };\r\n-\r\n-  // Listen to popstate events to update the history stack\r\n-  useEffect(() => {\r\n-    window.addEventListener(\"popstate\", handlePopState);\r\n-  }, []);\r\n-\r\n-  const forwardStack = useRef([]);\r\n-\r\n-  const goBack = () => {\r\n-    if (window.history.state && window.history.state.idx > 0) {\r\n-      window.history.back();\r\n-      speak(\"Going back\");\r\n-    } else {\r\n-      speak(\"Can't go back any further.\");\r\n-    }\r\n-  };\r\n-\r\n-  const goForward = () => {\r\n-    if (\r\n-      window.history.state &&\r\n-      window.history.state.idx < window.history.length - 1\r\n-    ) {\r\n-      window.history.forward();\r\n-      speak(\"Going forward\");\r\n-    } else {\r\n-      speak(\"No forward history available.\");\r\n-    }\r\n-  };\r\n-\r\n-  const scrollAmount = window.innerHeight * 0.82;\r\n-\r\n-  const scrollUp = () => {\r\n-    if (window.pageYOffset === 0) {\r\n-      speak(\"Already at the top of the page.\");\r\n-    } else {\r\n-      window.scrollBy(0, -scrollAmount);\r\n-      speak(\"Scrolled up.\");\r\n-    }\r\n-  };\r\n-\r\n-  const scrollDown = () => {\r\n-    const maxScrollTop =\r\n-      document.documentElement.scrollHeight - window.innerHeight;\r\n-    if (window.pageYOffset >= maxScrollTop) {\r\n-      speak(\"Already at the bottom of the page.\");\r\n-    } else {\r\n-      window.scrollBy(0, scrollAmount);\r\n-      speak(\"Scrolled down.\");\r\n-    }\r\n-  };\r\n-\r\n-  const scrollToTop = () => {\r\n-    if (window.pageYOffset === 0) {\r\n-      speak(\"Already at the top of the page.\");\r\n-    } else {\r\n-      window.scrollTo(0, 0);\r\n-      speak(\"Scrolled to the top of the page.\");\r\n-    }\r\n-  };\r\n-\r\n-  const scrollToBottom = () => {\r\n-    const maxScrollTop =\r\n-      document.documentElement.scrollHeight - window.innerHeight;\r\n-    if (window.pageYOffset >= maxScrollTop) {\r\n-      speak(\"Already at the bottom of the page.\");\r\n-    } else {\r\n-      window.scrollTo(0, document.body.scrollHeight);\r\n-      speak(\"Scrolled to the bottom of the page.\");\r\n-    }\r\n-  };\r\n-\r\n-\r\n-  const controlVideo = (videoId, action) => {\r\n-    const videoRef = videoRefs.current.get(videoId);\r\n-    if (videoRef && videoRef.current) {\r\n-      switch (action) {\r\n-        case 'play':\r\n-          videoRef.current.play();\r\n-          break;\r\n-        case 'pause':\r\n-          videoRef.current.pause();\r\n-          break;\r\n-        case 'mute':\r\n-          videoRef.current.muted = true;\r\n-          break;\r\n-        case 'unmute':\r\n-          videoRef.current.muted = false;\r\n-          break;\r\n-        case 'fullscreen':\r\n-          if (videoRef.current.requestFullscreen) {\r\n-            videoRef.current.requestFullscreen();\r\n-          } else if (videoRef.current.webkitRequestFullscreen) { // Safari\r\n-            videoRef.current.webkitRequestFullscreen();\r\n-          } else if (videoRef.current.msRequestFullscreen) { // IE11\r\n-            videoRef.current.msRequestFullscreen();\r\n-          }\r\n-          break;\r\n-        case 'exitFullscreen':\r\n-          if (document.exitFullscreen) {\r\n-            document.exitFullscreen();\r\n-          } else if (document.webkitExitFullscreen) { // Safari\r\n-            document.webkitExitFullscreen();\r\n-          } else if (document.msExitFullscreen) { // IE11\r\n-            document.msExitFullscreen();\r\n-          }\r\n-          break;\r\n-        case 'increaseVolume':\r\n-          if (videoRef.current.volume < 1) {\r\n-            videoRef.current.volume = Math.min(1, videoRef.current.volume + 0.1);\r\n-          }\r\n-          break;\r\n-        case 'decreaseVolume':\r\n-          if (videoRef.current.volume > 0) {\r\n-            videoRef.current.volume = Math.max(0, videoRef.current.volume - 0.1);\r\n-          }\r\n-          break;\r\n-        // Add other cases as needed\r\n-      }\r\n-      speak(`${action.charAt(0).toUpperCase() + action.slice(1).replace(/([A-Z])/g, ' $1').toLowerCase()}ing video.`);\r\n-    } else {\r\n-      speak(`Video not found.`);\r\n-    }\r\n-  };\r\n-\r\n-  const speak = (message) => {\r\n-    const utterance = new SpeechSynthesisUtterance(message);\r\n-    utterance.onend = () => {\r\n-      setIsSpeaking(false);\r\n-      // Restart recognition after speaking has ended\r\n-      if (isListening) {\r\n-        restartRecognition();\r\n-      }\r\n-    };\r\n-\r\n-    setIsSpeaking(true);\r\n-    // Stop recognition when the bot starts speaking\r\n-    if (recognition.current) {\r\n-      recognition.current.abort();\r\n-    }\r\n-    speechSynthesis.current.speak(utterance);\r\n-  };\r\n-\r\n-  const restartRecognition = () => {\r\n-    // Check if recognition is not already started and if the bot is set to listen\r\n-    if (\r\n-      recognition.current &&\r\n-      !recognition.current.starting &&\r\n-      isListening &&\r\n-      !isSpeaking\r\n-    ) {\r\n-      recognition.current.abort(); // Ensure any ongoing recognition is stopped\r\n-      recognition.current.starting = true;\r\n-      recognition.current.start();\r\n-    }\r\n-  };\r\n-\r\n-  // Restart recognition when bot finishes speaking and isListening is true\r\n-  useEffect(() => {\r\n-    if (!isSpeaking && isListening) {\r\n-      restartRecognition();\r\n-    }\r\n-  }, [isSpeaking, isListening]);\r\n-\r\n-  const onResult = (event) => {\r\n-    const resultIndex = event.resultIndex;\r\n-    const transcript = event.results[resultIndex][0].transcript\r\n-      .trim()\r\n-      .toLowerCase();\r\n-\r\n-    if (event.results[resultIndex].isFinal) {\r\n-      console.log(`Recognized text: ${transcript}`);\r\n-      if (transcript.includes(\"brain\")) {\r\n-        console.log(\"Wake word heard, processing command...\");\r\n-        handleCommandWithFuse(transcript.replace(\"brain\", \"\"));\r\n-      }\r\n-    }\r\n-  };\r\n-\r\n-  const onRecognitionEnd = () => {\r\n-    recognition.current.starting = false;\r\n-    if (isListening && !isSpeaking) {\r\n-      restartRecognition();\r\n-    }\r\n-  };\r\n-\r\n-  useEffect(() => {\r\n-    if (isListening && !hasGreeted) {\r\n-      speak(\"Hello, I'm Brane. How can I help you today?\");\r\n-      setHasGreeted(true);\r\n-    }\r\n-  }, [isListening, hasGreeted]);\r\n-\r\n-  // Updated startListening function\r\n-  const startListening = () => {\r\n-    setIsListening(true);\r\n-    if (!recognition.current.starting) {\r\n-      restartRecognition();\r\n-    }\r\n-  };\r\n-\r\n-  // Updated stopListening function\r\n-  const stopListening = () => {\r\n-    setIsListening(false);\r\n-    if (speechSynthesis.current.speaking) {\r\n-      speechSynthesis.current.cancel();\r\n-    }\r\n-    recognition.current.abort();\r\n-  };\r\n-\r\n-  const handleCommandWithFuse = (command) => {\r\n-    const fuse = new Fuse(commands, { keys: [\"utterance\"], threshold: 0.4 });\r\n-    const results = fuse.search(command);\r\n-    const foundCommand = results.length ? results[0].item : null;\r\n-\r\n-    if (foundCommand) {\r\n-      console.log(\"Command found:\", foundCommand.utterance);\r\n-\r\n-      if (foundCommand.action) {\r\n-        foundCommand.action();\r\n-      } else if (foundCommand.route) {\r\n-        navigate(foundCommand.route);\r\n-      }\r\n-\r\n-      // Speak after performing the action or navigation\r\n-      speak(foundCommand.response);\r\n-    } else {\r\n-      console.log(\"No command found.\");\r\n-      speak(\"I'm not sure how to respond to that.\");\r\n-    }\r\n-  };\r\n-\r\n-  const commands = [\r\n-    {\r\n-      utterance: \"Hello who are you ?\",\r\n-\r\n-      response:\r\n-        \"Hi! This is Brane! your Voice bot from Brane Education How can I Assist you Today ?\",\r\n-    },\r\n-\r\n-    {\r\n-      utterance: \"Hello\",\r\n-\r\n-      response: \"Hi! How can I assist you today?\",\r\n-    },\r\n-\r\n-    {\r\n-      utterance: \"hello\",\r\n-\r\n-      response: \"Hi! How can I assist you today?\",\r\n-    },\r\n-\r\n-    {\r\n-      utterance: \"Hi.\",\r\n-\r\n-      response: \"Hello! How can I assist you today?\",\r\n-    },\r\n-\r\n-    {\r\n-      utterance: \"Hey there\",\r\n-\r\n-      response: \"Hi! How can I assist you today?\",\r\n-    },\r\n-\r\n-    {\r\n-      utterance: \"Good morning Brane.\",\r\n-\r\n-      response: \"Hey Hiii! Good morning  ! How can I help you?\",\r\n-    },\r\n-\r\n-    {\r\n-      utterance: \"Good afternoon Brane.\",\r\n-\r\n-      response: \"Hey Hiii! Good after noon ! How can I help you?\",\r\n-    },\r\n-\r\n-    {\r\n-      utterance: \"Good evening Brane.\",\r\n-\r\n-      response: \"Hey Hiii! Good evening ! How can I help you?\",\r\n-    },\r\n-\r\n-    {\r\n-      utterance: \"take me to homepage\",\r\n-\r\n-      route: \"/\",\r\n-\r\n-      response: \"You're in Homepage now\",\r\n-    },\r\n-    {\r\n-      utterance: \"open homepage\",\r\n-\r\n-      route: \"/\",\r\n-\r\n-      response: \"You're in Homepage now\",\r\n-    },\r\n-    {\r\n-      utterance: \"go to homepage\",\r\n-\r\n-      route: \"/\",\r\n-\r\n-      response: \"You're in Homepage now\",\r\n-    },\r\n-    {\r\n-      utterance: \"go back to homepage\",\r\n-\r\n-      route: \"/\",\r\n-\r\n-      response: \"You're in Homepage now\",\r\n-    },\r\n-    {\r\n-      utterance: \"can you please take me to login page\",\r\n-\r\n-      route: \"/login\",\r\n-\r\n-      response: \"Here's the Login Page, Please Login\",\r\n-    },\r\n-\r\n-    {\r\n-      utterance: \"please take me to login page\",\r\n-\r\n-      route: \"/login\",\r\n-\r\n-      response: \"Here's the Login Page, Please Login\",\r\n-    },\r\n-\r\n-    {\r\n-      utterance: \"Go to login page\",\r\n-\r\n-      route: \"/login\",\r\n-\r\n-      response: \"Here's the Login Page, Please Login\",\r\n-    },\r\n-\r\n-    {\r\n-      utterance: \"open login page\",\r\n-\r\n-      route: \"/login\",\r\n-\r\n-      response: \"Here's the Login Page, Please Login\",\r\n-    },\r\n-\r\n-    {\r\n-      utterance: \"can you please take me to signup page\",\r\n-\r\n-      route: \"/signup\",\r\n-\r\n-      response: \"Here's the signup page. Please proceed With Registration.\",\r\n-    },\r\n-\r\n-    {\r\n-      utterance: \"take me to signup page\",\r\n-\r\n-      route: \"/signup\",\r\n-\r\n-      response: \"Here's the signup page. Please proceed With Registration.\",\r\n-    },\r\n-\r\n-    {\r\n-      utterance: \"Go to signup page\",\r\n-\r\n-      route: \"/signup\",\r\n-\r\n-      response: \"Here's the signup page. Please proceed With Registration.\",\r\n-    },\r\n-\r\n-    {\r\n-      utterance: \"open signup page\",\r\n-\r\n-      route: \"/signup\",\r\n-\r\n-      response: \"Here's the signup page. Please proceed With Registration.\",\r\n-    },\r\n-\r\n-    {\r\n-      utterance: \"Go to face id\",\r\n-\r\n-      route: \"/login/faceid\",\r\n-\r\n-      response: \"Here's Face ID Login. Please proceed.\",\r\n-    },\r\n-\r\n-    {\r\n-      utterance: \"Go to face id login\",\r\n-\r\n-      route: \"/login/faceid\",\r\n-\r\n-      response: \"Here's Face ID Login. Please proceed.\",\r\n-    },\r\n-    {\r\n-      utterance: \"Go to face login\",\r\n-\r\n-      route: \"/login/faceid\",\r\n-\r\n-      response: \"Here's Face ID Login. Please proceed.\",\r\n-    },\r\n-\r\n-    {\r\n-      utterance: \"login with face id\",\r\n-\r\n-      route: \"/login/faceid\",\r\n-\r\n-      response: \"Here's Face ID Login. Please proceed.\",\r\n-    },\r\n-\r\n-    {\r\n-      utterance: \"login with face\",\r\n-\r\n-      route: \"/login/faceid\",\r\n-\r\n-      response: \"Here's Face ID Login. Please proceed.\",\r\n-    },\r\n-\r\n-    {\r\n-      utterance: \"i want to login with face\",\r\n-\r\n-      route: \"/login/faceid\",\r\n-\r\n-      response: \"Here's Face ID Login. Please proceed.\",\r\n-    },\r\n-\r\n-    {\r\n-      utterance: \"login with voice\",\r\n-\r\n-      route: \"/login/voiceid\",\r\n-\r\n-      response: \"Here's Voice Login. Please proceed.\",\r\n-    },\r\n-\r\n-    {\r\n-      utterance: \"i want to login with voice\",\r\n-\r\n-      route: \"/login/voiceid\",\r\n-\r\n-      response: \"Here's Voice Login. Please proceed.\",\r\n-    },\r\n-\r\n-    {\r\n-      utterance: \"go to voice login\",\r\n-\r\n-      route: \"/login/voiceid\",\r\n-\r\n-      response: \"Here's Voice Login. Please proceed.\",\r\n-    },\r\n-\r\n-    {\r\n-      utterance: \"login with voice\",\r\n-\r\n-      route: \"/login/voiceid\",\r\n-\r\n-      response: \"Here's Voice Login. Please proceed.\",\r\n-    },\r\n-\r\n-    {\r\n-      utterance: \"login with mobile\",\r\n-\r\n-      route: \"/login/mobile\",\r\n-\r\n-      response: \"Here's Mobile Login. Please proceed.\",\r\n-    },\r\n-\r\n-    {\r\n-      utterance: \"i want to login with mobile\",\r\n-\r\n-      route: \"/login/mobile\",\r\n-\r\n-      response: \"Here's Mobile Login. Please proceed.\",\r\n-    },\r\n-    {\r\n-      utterance: \"go to mobile login\",\r\n-\r\n-      route: \"/login/mobile\",\r\n-\r\n-      response: \"Here's Mobile Login. Please proceed.\",\r\n-    },\r\n-    {\r\n-      utterance: \"go to about page\",\r\n-\r\n-      route: \"/aboutus\",\r\n-\r\n-      response: \"This is About us.\",\r\n-    },\r\n-    {\r\n-      utterance: \"go to about us page\",\r\n-\r\n-      route: \"/aboutus\",\r\n-\r\n-      response: \"This is About us.\",\r\n-    },\r\n-    {\r\n-      utterance: \"open about us page\",\r\n-\r\n-      route: \"/aboutus\",\r\n-\r\n-      response: \"This is About us.\",\r\n-    },\r\n-    {\r\n-      utterance: \"open about page\",\r\n-\r\n-      route: \"/aboutus\",\r\n-\r\n-      response: \"This is About us.\",\r\n-    },\r\n-    {\r\n-      utterance: \"take me to about page\",\r\n-\r\n-      route: \"/aboutus\",\r\n-\r\n-      response: \"This is About us.\",\r\n-    },\r\n-    {\r\n-      utterance: \"take me to about us page\",\r\n-\r\n-      route: \"/aboutus\",\r\n-\r\n-      response: \"This is About us.\",\r\n-    },\r\n-\r\n-    {\r\n-      utterance: \"go to contact page\",\r\n-\r\n-      route: \"/contactus\",\r\n-\r\n-      response: \"You can contact us from here\",\r\n-    },\r\n-    {\r\n-      utterance: \"go to contact us page\",\r\n-\r\n-      route: \"/contactus\",\r\n-\r\n-      response: \"You can contact us from here\",\r\n-    },\r\n-    {\r\n-      utterance: \"open contact us page\",\r\n-\r\n-      route: \"/contactus\",\r\n-\r\n-      response: \"You can contact us from here\",\r\n-    },\r\n-    {\r\n-      utterance: \"open contact page\",\r\n-\r\n-      route: \"/contactus\",\r\n-\r\n-      response: \"You can contact us from here\",\r\n-    },\r\n-    {\r\n-      utterance: \"take me to about page\",\r\n-\r\n-      route: \"/contactus\",\r\n-\r\n-      response: \"You can contact us from here\",\r\n-    },\r\n-    {\r\n-      utterance: \"take me to contact us page\",\r\n-\r\n-      route: \"/contactus\",\r\n-\r\n-      response: \"You can contact us from here\",\r\n-    },\r\n-\r\n-    {\r\n-      utterance: \"what are platform features\",\r\n-\r\n-      response:\r\n-        \"Dashboard, Dynamic time table, Learning Networks, Little Masters, Video Based Dictionary, General Search.\",\r\n-    },\r\n-\r\n-    {\r\n-      utterance: \"Features of platform\",\r\n-\r\n-      response:\r\n-        \"Dashboard, Dynamic time table, Learning Networks, Little Masters, Video Based Dictionary, General Search.\",\r\n-    },\r\n-\r\n-    {\r\n-      utterance: \"What does the platform offer\",\r\n-\r\n-      response:\r\n-        \"Dashboard, Dynamic time table, Learning Networks, Little Masters, Video Based Dictionary, General Search.\",\r\n-    },\r\n-\r\n-    {\r\n-      utterance: \"Say me the features of platform\",\r\n-\r\n-      response:\r\n-        \"Dashboard, Dynamic time table, Learning Networks, Little Masters, Video Based Dictionary, General Search.\",\r\n-    },\r\n-\r\n-    {\r\n-      utterance: \"Say me the services of platform\",\r\n-\r\n-      response:\r\n-        \"Dashboard, Dynamic time table, Learning Networks, Little Masters, Video Based Dictionary, General Search.\",\r\n-    },\r\n-\r\n-    {\r\n-      utterance: \"tell me the services offered by the platform\",\r\n-\r\n-      response:\r\n-        \"Dashboard, Dynamic time table, Learning Networks, Little Masters, Video Based Dictionary, General Search.\",\r\n-    },\r\n-\r\n-    {\r\n-      utterance: \"explain platform services\",\r\n-\r\n-      response:\r\n-        \"Dashboard, Dynamic time table, Learning Networks, Little Masters, Video Based Dictionary, General Search.\",\r\n-    },\r\n-\r\n-    {\r\n-      utterance: \"Give me the Parent voice of Julia Harris\",\r\n-\r\n-      response:\r\n-        \"Brane education has helped my son a lot in his studies. He improved a lot in his studies and is now able to score good marks in his exams\",\r\n-    },\r\n-\r\n-    {\r\n-      utterance: \"Leaders Voice\",\r\n-\r\n-      response:\r\n-        \"This Voice-interactive AI Platform is a game Changer. It revolutionizes education.\",\r\n-    },\r\n-\r\n-    {\r\n-      utterance: \"Curriculum Supported by Brane Education\",\r\n-\r\n-      response:\r\n-        \"we support multiple Boards let me say few Telangana State Board Andhra Pradesh Board Maharashtra Board Assam Board\",\r\n-    },\r\n-\r\n-    {\r\n-      utterance: \"Boards supported by the platform\",\r\n-\r\n-      response:\r\n-        \"we support multiple Boards let me say few Telangana State Board Andhra Pradesh Board Maharashtra Board Assam Board\",\r\n-    },\r\n-\r\n-    {\r\n-      utterance: \"Curriculum\",\r\n-\r\n-      response:\r\n-        \"we support multiple Boards let me say few Telangana State Board Andhra Pradesh Board Maharashtra Board Assam Board\",\r\n-    },\r\n-\r\n-    {\r\n-      utterance: \"what is today's quote\",\r\n-\r\n-      response:\r\n-        \"Determination is the power that sees us through all our frustration and obstacles. It helps in building our willpower which is the very basis of success.\",\r\n-\r\n-      route: \"/childpage\",\r\n-    },\r\n-\r\n-    {\r\n-      utterance: \"Today's Inspirational quote\",\r\n-\r\n-      response:\r\n-        \"Determination is the power that sees us through all our frustration and obstacles. It helps in building our willpower which is the very basis of success.\",\r\n-\r\n-      route: \"/childpage\",\r\n-    },\r\n-\r\n-    {\r\n-      utterance: \"say me today's quote\",\r\n-\r\n-      response:\r\n-        \"Determination is the power that sees us through all our frustration and obstacles. It helps in building our willpower which is the very basis of success.\",\r\n-\r\n-      route: \"/childpage\",\r\n-    },\r\n-    {\r\n-      utterance: \"go back\",\r\n-      response: \"\",\r\n-      action: goBack, // Note the use of an action property\r\n-    },\r\n-    {\r\n-      utterance: \"go forward\",\r\n-      response: \"\",\r\n-      action: goForward,\r\n-    },\r\n-    // {\r\n-    //   utterance: \"play video\",\r\n-    //   // response: \"Playing video.\",\r\n-    //   action: playVideo,\r\n-    // },\r\n-    // {\r\n-    //   utterance: \"pause video\",\r\n-    //   // response: \"Pausing video.\",\r\n-    //   action: pauseVideo,\r\n-    // },\r\n-    // {\r\n-    //   utterance: \"start video\",\r\n-    //   // response: \"Playing video.\",\r\n-    //   action: playVideo,\r\n-    // },\r\n-    // {\r\n-    //   utterance: \"stop video\",\r\n-    //   // response: \"Playing video.\",\r\n-    //   action: pauseVideo,\r\n-    // },\r\n-    {\r\n-      utterance: \"scroll up\",\r\n-      // response: \"Scrolling up.\",\r\n-      action: scrollUp,\r\n-    },\r\n-    {\r\n-      utterance: \"scroll down\",\r\n-      // response: \"Scrolling down.\",\r\n-      action: scrollDown,\r\n-    },\r\n-    {\r\n-      utterance: \"go up\",\r\n-\r\n-      // response: \"Scrolling up.\",\r\n-      action: scrollUp,\r\n-    },\r\n-    {\r\n-      utterance: \"go down\",\r\n-      // response: \"Scrolling down.\",\r\n-      action: scrollDown,\r\n-    },\r\n-    {\r\n-      utterance: \"scroll to top\",\r\n-      action: scrollToTop,\r\n-    },\r\n-    {\r\n-      utterance: \"scroll to bottom\",\r\n-      action: scrollToBottom,\r\n-    },\r\n-    {\r\n-      utterance: \"brane stop\",\r\n-      action: stopListening,\r\n-    },\r\n-    {\r\n-      utterance: \"brane turn off\",\r\n-      action: stopListening,\r\n-    },\r\n-    {\r\n-      utterance: \"brane stop the bot\",\r\n-      action: stopListening,\r\n-    },\r\n-    // {\r\n-    //   utterance: \"mute the video\",\r\n-    //   action: muteVideo,\r\n-    // },\r\n-    // {\r\n-    //   utterance: \"unmute the video\",\r\n-    //   action: unmuteVideo,\r\n-    // },\r\n-    // {\r\n-    //   utterance: \"stop the video sound\",\r\n-    //   action: muteVideo,\r\n-    // },\r\n-    // {\r\n-    //   utterance: \"play the video sound\",\r\n-    //   action: unmuteVideo,\r\n-    // },\r\n-    {\r\n-      utterance: \"play transforming education video\",\r\n-      action: () => controlVideo('ourProjectsVideo', 'play'),\r\n-    },\r\n-    {\r\n-      utterance: \"start transforming education video\",\r\n-      action: () => controlVideo('ourProjectsVideo', 'play'),\r\n-    },\r\n-    {\r\n-      utterance: \"pause transforming education video\",\r\n-      action: () => controlVideo('ourProjectsVideo', 'pause'),\r\n-    },\r\n-    {\r\n-      utterance: \"stop transforming education video\",\r\n-      action: () => controlVideo('ourProjectsVideo', 'pause'),\r\n-    },\r\n-\r\n-    {\r\n-      utterance: \"mute transforming education video\",\r\n-      action: () => controlVideo('ourProjectsVideo', 'mute'),\r\n-    },\r\n-    {\r\n-      utterance: \"unmute transforming education video\",\r\n-      action: () => controlVideo('ourProjectsVideo', 'unmute'),\r\n-    },\r\n-    {\r\n-      utterance: \"fullscreen transforming education video\",\r\n-      action: () => controlVideo('ourProjectsVideo', 'fullscreen'),\r\n-    },\r\n-    {\r\n-      utterance: \"exit fullscreen transforming education video\",\r\n-      action: () => controlVideo('ourProjectsVideo', 'exitFullscreen'),\r\n-    },\r\n-    {\r\n-      utterance: \"increase volume transforming education video\",\r\n-      action: () => controlVideo('ourProjectsVideo', 'increaseVolume'),\r\n-    },\r\n-    {\r\n-      utterance: \"decrease volume transforming education video\",\r\n-      action: () => controlVideo('ourProjectsVideo', 'decreaseVolume'),\r\n-    },\r\n-  ];\r\n-\r\n-  return (\r\n-    <div className=\"speech-bot-container\">\r\n-      <div\r\n-        className={`button-container ${\r\n-          isListening ? \"voicebotframeactive\" : \"voicebotframe\"\r\n-        }`}\r\n-      >\r\n-        {/* <button onClick={isListening ? stopListening : startListening}>\r\n-          {isListening ? \"Stop\" : \"Start\"} Animation\r\n-        </button> */}\r\n-        <img\r\n-          className=\"botimage\"\r\n-          src={chatbotimage}\r\n-          alt=\"\"\r\n-          onClick={isListening ? stopListening : startListening}\r\n-        />\r\n-      </div>\r\n-    </div>\r\n-  );\r\n-};\r\n-\r\n-export default VoiceBot;\r\n-\r\n-{\r\n-  /* // import React, { useState, useEffect, useRef } from \"react\";\r\n-// import { useNavigate, useLocation } from \"react-router-dom\";\r\n-// import Fuse from \"fuse.js\";\r\n-// import \"./VoiceBot.css\";\r\n-\r\n-// const VoiceBot = ({ videoRef }) => {\r\n-//   const [isListening, setIsListening] = useState(false);\r\n-//   const [isSpeaking, setIsSpeaking] = useState(false);\r\n-//   const recognition = useRef(null);\r\n-//   const speechSynthesis = useRef(window.speechSynthesis);\r\n-//   const [hasGreeted, setHasGreeted] = useState(false);\r\n-//   const navigate = useNavigate();\r\n-\r\n-//   useEffect(() => {\r\n-//     recognition.current = new window.webkitSpeechRecognition();\r\n-//     recognition.current.continuous = true;\r\n-//     recognition.current.interimResults = false;\r\n-//     recognition.current.onresult = onResult;\r\n-//     recognition.current.onend = onRecognitionEnd;\r\n-//     recognition.current.starting = false;\r\n-\r\n-//     // Simplified error handling, removed specific handling for 'no-speech'\r\n-//     recognition.current.onerror = (event) => {\r\n-//       console.error(\"Recognition error:\", event.error);\r\n-//       // Check if listening is true and the bot isn't speaking\r\n-//       if (isListening && !isSpeaking) {\r\n-//         // Restart recognition\r\n-//         restartRecognition();\r\n-//       }\r\n-//     };\r\n-\r\n-//     return () => {\r\n-//       if (recognition.current) {\r\n-//         recognition.current.abort();\r\n-//       }\r\n-//     };\r\n-//   }, []);\r\n-\r\n-//   useEffect(() => {\r\n-//     const checkRecognition = () => {\r\n-//       if (isListening && !isSpeaking && !recognition.current.starting) {\r\n-//         console.log(\"Restarting recognition because it's not active.\");\r\n-//         recognition.current.starting = true;\r\n-//         recognition.current.start();\r\n-//         console.log(\"Restarted recognition.\");\r\n-//       }\r\n-//     };\r\n-\r\n-//     const recognitionCheckInterval = setInterval(checkRecognition, 100); // Check every 1 second\r\n-\r\n-//     return () => {\r\n-//       clearInterval(recognitionCheckInterval);\r\n-//     };\r\n-//   }, [isListening, isSpeaking]);\r\n-\r\n-//   const restartRecognition = () => {\r\n-//     if (recognition.current.starting) {\r\n-//       console.log(\"Recognition is already starting or running.\");\r\n-//       return;\r\n-//     }\r\n-\r\n-//     recognition.current.abort(); // Stop any existing recognition process\r\n-//     recognition.current.starting = true;\r\n-//     recognition.current.start();\r\n-//     console.log(\"Recognition restarted.\");\r\n-//   };\r\n-\r\n-//   const historyStack = useRef([]);\r\n-\r\n-//   useEffect(() => {\r\n-//     return () => {\r\n-//       // Clean up the listener when the component unmounts\r\n-//       window.removeEventListener(\"popstate\", handlePopState);\r\n-//     };\r\n-//   }, []);\r\n-\r\n-//   const handlePopState = () => {\r\n-//     // This needs to handle both back and forward browser actions\r\n-//     // Use some logic to determine whether it's a back or forward action\r\n-//     // For simplicity, assume it's always back\r\n-//     historyStack.current.pop();\r\n-//     forwardStack.current.length = 0; // Clear forward stack on manual navigation\r\n-//   };\r\n-  \r\n-\r\n-//   // Add a new entry to the stack whenever navigate is called\r\n-//   const customNavigate = (to, options) => {\r\n-//     historyStack.current.push(to);\r\n-//     navigate(to, options);\r\n-//   };\r\n-\r\n-//   // Listen to popstate events to update the history stack\r\n-//   useEffect(() => {\r\n-//     window.addEventListener(\"popstate\", handlePopState);\r\n-//   }, []);\r\n-\r\n-//   const forwardStack = useRef([]);\r\n-\r\n-//   const goBack = () => {\r\n-//     if (window.history.state && window.history.state.idx > 0) {\r\n-//       window.history.back();\r\n-//       speak(\"Going back\");\r\n-//     } else {\r\n-//       speak(\"Can't go back any further.\");\r\n-//     }\r\n-//   };\r\n-\r\n-//   const goForward = () => {\r\n-//     if (window.history.state && window.history.state.idx < window.history.length - 1) {\r\n-//       window.history.forward();\r\n-//       speak(\"Going forward\");\r\n-//     } else {\r\n-//       speak(\"No forward history available.\");\r\n-//     }\r\n-//   };\r\n-\r\n-//   const playVideo = () => {\r\n-//     if (videoRef.current) {\r\n-//       videoRef.current.play();\r\n-//       speak(\"Playing video.\");\r\n-//     } else {\r\n-//       speak(\"No video to play.\");\r\n-//     }\r\n-//   };\r\n-\r\n-//   const pauseVideo = () => {\r\n-//     if (videoRef.current) {\r\n-//       videoRef.current.pause();\r\n-//       speak(\"Video paused.\");\r\n-//     } else {\r\n-//       speak(\"No video to pause.\");\r\n-//     }\r\n-//   };\r\n-\r\n-//   const scrollAmount = window.innerHeight * 0.82;\r\n-\r\n-//   const scrollUp = () => {\r\n-//     if (window.pageYOffset === 0) {\r\n-//       speak(\"Already at the top of the page.\");\r\n-//     } else {\r\n-//       window.scrollBy(0, -scrollAmount);\r\n-//       speak(\"Scrolled up.\");\r\n-//     }\r\n-//   };\r\n-\r\n-//   const scrollDown = () => {\r\n-//     const maxScrollTop =\r\n-//       document.documentElement.scrollHeight - window.innerHeight;\r\n-//     if (window.pageYOffset >= maxScrollTop) {\r\n-//       speak(\"Already at the bottom of the page.\");\r\n-//     } else {\r\n-//       window.scrollBy(0, scrollAmount);\r\n-//       speak(\"Scrolled down.\");\r\n-//     }\r\n-//   };\r\n-\r\n-//   const scrollToTop = () => {\r\n-//     if (window.pageYOffset === 0) {\r\n-//       speak(\"Already at the top of the page.\");\r\n-//     } else {\r\n-//       window.scrollTo(0, 0);\r\n-//       speak(\"Scrolled to the top of the page.\");\r\n-//     }\r\n-//   };\r\n-\r\n-//   const scrollToBottom = () => {\r\n-//     const maxScrollTop =\r\n-//       document.documentElement.scrollHeight - window.innerHeight;\r\n-//     if (window.pageYOffset >= maxScrollTop) {\r\n-//       speak(\"Already at the bottom of the page.\");\r\n-//     } else {\r\n-//       window.scrollTo(0, document.body.scrollHeight);\r\n-//       speak(\"Scrolled to the bottom of the page.\");\r\n-//     }\r\n-//   };\r\n-\r\n-//   const speak = (message) => {\r\n-//     console.log(\"speak function called with message:\", message);\r\n-//     const utterance = new SpeechSynthesisUtterance(message);\r\n-//     utterance.onend = () => {\r\n-//       setIsSpeaking(false);\r\n-//       console.log(\"Speaking ended.\");\r\n-//       if (isListening && !recognition.current.starting) {\r\n-//         console.log(\"Restarting recognition after speaking.\");\r\n-//         recognition.current.starting = true;\r\n-//         recognition.current.start();\r\n-//         console.log(\"Restarted recognition after speaking.\");\r\n-//       }\r\n-//     };\r\n-\r\n-//     setIsSpeaking(true);\r\n-//     console.log(\"Speaking started.\");\r\n-//     recognition.current.stop(); // Ensure to stop recognition before speaking\r\n-//     speechSynthesis.current.speak(utterance);\r\n-//   };\r\n-\r\n-//   const onResult = (event) => {\r\n-//     const resultIndex = event.resultIndex;\r\n-//     const transcript = event.results[resultIndex][0].transcript\r\n-//       .trim()\r\n-//       .toLowerCase();\r\n-\r\n-//     if (event.results[resultIndex].isFinal) {\r\n-//       console.log(`Recognized text: ${transcript}`);\r\n-//       if (transcript.includes(\"brain\")) {\r\n-//         console.log(\"Wake word heard, processing command...\");\r\n-//         handleCommandWithFuse(transcript.replace(\"brain\", \"\"));\r\n-//       }\r\n-//     }\r\n-//   };\r\n-\r\n-//   const onRecognitionEnd = () => {\r\n-//     recognition.current.starting = false;\r\n-//     if (isListening && !isSpeaking) {\r\n-//       restartRecognition();\r\n-//     }\r\n-//   };\r\n-\r\n-//   useEffect(() => {\r\n-//     if (isListening) {\r\n-//       if (!hasGreeted) {\r\n-//         speak(\"Hello, I'm Brane. How can I help you today?\");\r\n-//         setHasGreeted(true);\r\n-//       } else {\r\n-//         speak(\"Listening.\");\r\n-//       }\r\n-//     }\r\n-//   }, [isListening, hasGreeted]);\r\n-\r\n-\r\n-//   const startListening = () => {\r\n-//     if (!recognition.current.starting) {\r\n-//       setIsListening(true);\r\n-//       restartRecognition();\r\n-//     }\r\n-//   };\r\n-\r\n-//   const stopListening = () => {\r\n-//     setIsListening(false);\r\n-//     recognition.current.abort();\r\n-//     if (speechSynthesis.current.speaking) {\r\n-//       speechSynthesis.current.cancel();\r\n-//     }\r\n-//   };\r\n-\r\n-//   const handleCommandWithFuse = (command) => {\r\n-//     const fuse = new Fuse(commands, { keys: [\"utterance\"], threshold: 0.4 });\r\n-//     const results = fuse.search(command);\r\n-//     const foundCommand = results.length ? results[0].item : null;\r\n-\r\n-//     if (foundCommand) {\r\n-//       console.log(\"Command found:\", foundCommand.utterance);\r\n-\r\n-//       if (foundCommand.action) {\r\n-//         foundCommand.action();\r\n-//       } else if (foundCommand.route) {\r\n-//         navigate(foundCommand.route);\r\n-//       }\r\n-\r\n-//       // Speak after performing the action or navigation\r\n-//       speak(foundCommand.response);\r\n-//     } else {\r\n-//       console.log(\"No command found.\");\r\n-//       speak(\"I'm not sure how to respond to that.\");\r\n-//     }\r\n-//   };\r\n-\r\n-//   const commands = [\r\n-//     {\r\n-//       utterance: \"Hello who are you ?\",\r\n-\r\n-//       response:\r\n-//         \"Hi! This is Brane! your Voice bot from Brane Education How can I Assist you Today ?\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"Hello\",\r\n-\r\n-//       response: \"Hi! How can I assist you today?\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"hello\",\r\n-\r\n-//       response: \"Hi! How can I assist you today?\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"Hi.\",\r\n-\r\n-//       response: \"Hello! How can I assist you today?\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"Hey there\",\r\n-\r\n-//       response: \"Hi! How can I assist you today?\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"Good morning Brane.\",\r\n-\r\n-//       response: \"Hey Hiii! Good morning  ! How can I help you?\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"Good afternoon Brane.\",\r\n-\r\n-//       response: \"Hey Hiii! Good after noon ! How can I help you?\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"Good evening Brane.\",\r\n-\r\n-//       response: \"Hey Hiii! Good evening ! How can I help you?\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"can you please take me to login page\",\r\n-\r\n-//       route: \"/login\",\r\n-\r\n-//       response: \"Here's the Login Page, Please Login\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"please take me to login page\",\r\n-\r\n-//       route: \"/login\",\r\n-\r\n-//       response: \"Here's the Login Page, Please Login\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"Go to login page\",\r\n-\r\n-//       route: \"/login\",\r\n-\r\n-//       response: \"Here's the Login Page, Please Login\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"open login page\",\r\n-\r\n-//       route: \"/login\",\r\n-\r\n-//       response: \"Here's the Login Page, Please Login\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"can you please take me to signup page\",\r\n-\r\n-//       route: \"/signup\",\r\n-\r\n-//       response: \"Here's the signup page. Please proceed With Registration.\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"take me to signup page\",\r\n-\r\n-//       route: \"/signup\",\r\n-\r\n-//       response: \"Here's the signup page. Please proceed With Registration.\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"Go to signup page\",\r\n-\r\n-//       route: \"/signup\",\r\n-\r\n-//       response: \"Here's the signup page. Please proceed With Registration.\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"open signup page\",\r\n-\r\n-//       route: \"/signup\",\r\n-\r\n-//       response: \"Here's the signup page. Please proceed With Registration.\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"Go to face id\",\r\n-\r\n-//       route: \"/login/faceid\",\r\n-\r\n-//       response: \"Here's Face ID Login. Please proceed.\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"Go to face id login\",\r\n-\r\n-//       route: \"/login/faceid\",\r\n-\r\n-//       response: \"Here's Face ID Login. Please proceed.\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"login with face id\",\r\n-\r\n-//       route: \"/login/faceid\",\r\n-\r\n-//       response: \"Here's Face ID Login. Please proceed.\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"login with face\",\r\n-\r\n-//       route: \"/login/faceid\",\r\n-\r\n-//       response: \"Here's Face ID Login. Please proceed.\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"i want to login with face\",\r\n-\r\n-//       route: \"/login/faceid\",\r\n-\r\n-//       response: \"Here's Face ID Login. Please proceed.\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"login with voice\",\r\n-\r\n-//       route: \"/login/voiceid\",\r\n-\r\n-//       response: \"Here's Voice Login. Please proceed.\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"i want to login with voice\",\r\n-\r\n-//       route: \"/login/voiceid\",\r\n-\r\n-//       response: \"Here's Voice Login. Please proceed.\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"go to voice login\",\r\n-\r\n-//       route: \"/login/voiceid\",\r\n-\r\n-//       response: \"Here's Voice Login. Please proceed.\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"login with voice\",\r\n-\r\n-//       route: \"/login/voiceid\",\r\n-\r\n-//       response: \"Here's Voice Login. Please proceed.\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"login with mobile\",\r\n-\r\n-//       route: \"/login/mobile\",\r\n-\r\n-//       response: \"Here's Mobile Login. Please proceed.\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"i want to login with mobile\",\r\n-\r\n-//       route: \"/login/mobile\",\r\n-\r\n-//       response: \"Here's Mobile Login. Please proceed.\",\r\n-//     },\r\n-//     {\r\n-//       utterance: \"go to mobile login\",\r\n-\r\n-//       route: \"/login/mobile\",\r\n-\r\n-//       response: \"Here's Mobile Login. Please proceed.\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"what are platform features\",\r\n-\r\n-//       response:\r\n-//         \"Dashboard, Dynamic time table, Learning Networks, Little Masters, Video Based Dictionary, General Search.\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"Features of platform\",\r\n-\r\n-//       response:\r\n-//         \"Dashboard, Dynamic time table, Learning Networks, Little Masters, Video Based Dictionary, General Search.\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"What does the platform offer\",\r\n-\r\n-//       response:\r\n-//         \"Dashboard, Dynamic time table, Learning Networks, Little Masters, Video Based Dictionary, General Search.\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"Say me the features of platform\",\r\n-\r\n-//       response:\r\n-//         \"Dashboard, Dynamic time table, Learning Networks, Little Masters, Video Based Dictionary, General Search.\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"Say me the services of platform\",\r\n-\r\n-//       response:\r\n-//         \"Dashboard, Dynamic time table, Learning Networks, Little Masters, Video Based Dictionary, General Search.\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"tell me the services offered by the platform\",\r\n-\r\n-//       response:\r\n-//         \"Dashboard, Dynamic time table, Learning Networks, Little Masters, Video Based Dictionary, General Search.\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"explain platform services\",\r\n-\r\n-//       response:\r\n-//         \"Dashboard, Dynamic time table, Learning Networks, Little Masters, Video Based Dictionary, General Search.\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"Give me the Parent voice of Julia Harris\",\r\n-\r\n-//       response:\r\n-//         \"Brane education has helped my son a lot in his studies. He improved a lot in his studies and is now able to score good marks in his exams\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"Play today's motivational video\",\r\n-\r\n-//       response: \"I am playing the video\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"Play today's video\",\r\n-\r\n-//       response: \"I am playing Motivational video\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"Leaders Voice\",\r\n-\r\n-//       response:\r\n-//         \"This Voice-interactive AI Platform is a game Changer. It revolutionizes education.\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"Curriculum Supported by Brane Education\",\r\n-\r\n-//       response:\r\n-//         \"we support multiple Boards let me say few Telangana State Board Andhra Pradesh Board Maharashtra Board Assam Board\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"Boards supported by the platform\",\r\n-\r\n-//       response:\r\n-//         \"we support multiple Boards let me say few Telangana State Board Andhra Pradesh Board Maharashtra Board Assam Board\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"Curriculum\",\r\n-\r\n-//       response:\r\n-//         \"we support multiple Boards let me say few Telangana State Board Andhra Pradesh Board Maharashtra Board Assam Board\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"Go to landing page\",\r\n-\r\n-//       response: \"Okay, I am taking you to the landing page.\",\r\n-\r\n-//       route: \"/childpage\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"take me to landing page\",\r\n-\r\n-//       response: \"Okay, I am taking you to the landing page.\",\r\n-\r\n-//       route: \"/childpage\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"move to landing page\",\r\n-\r\n-//       response: \"Okay, I am taking you to the landing page.\",\r\n-\r\n-//       route: \"/childpage\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"roll back to landing page\",\r\n-\r\n-//       response: \"Okay, I am taking you to the landing page.\",\r\n-\r\n-//       route: \"/childpage\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"move to landing page\",\r\n-\r\n-//       response: \"Okay, I am taking you to the landing page.\",\r\n-\r\n-//       route: \"/childpage\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"what is today's quote\",\r\n-\r\n-//       response:\r\n-//         \"Determination is the power that sees us through all our frustration and obstacles. It helps in building our willpower which is the very basis of success.\",\r\n-\r\n-//       route: \"/childpage\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"Today's Inspirational quote\",\r\n-\r\n-//       response:\r\n-//         \"Determination is the power that sees us through all our frustration and obstacles. It helps in building our willpower which is the very basis of success.\",\r\n-\r\n-//       route: \"/childpage\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"say me today's quote\",\r\n-\r\n-//       response:\r\n-//         \"Determination is the power that sees us through all our frustration and obstacles. It helps in building our willpower which is the very basis of success.\",\r\n-\r\n-//       route: \"/childpage\",\r\n-//     },\r\n-//     {\r\n-//       utterance: \"go back\",\r\n-//       response: \"\",\r\n-//       action: goBack, // Note the use of an action property\r\n-//     },\r\n-//     {\r\n-//       utterance: \"go forward\",\r\n-//       response: \"\",\r\n-//       action: goForward,\r\n-//     },\r\n-//     {\r\n-//       utterance: \"play video\",\r\n-//       // response: \"Playing video.\",\r\n-//       action: playVideo,\r\n-//     },\r\n-//     {\r\n-//       utterance: \"pause video\",\r\n-//       // response: \"Pausing video.\",\r\n-//       action: pauseVideo,\r\n-//     },\r\n-//     {\r\n-//       utterance: \"start video\",\r\n-//       // response: \"Playing video.\",\r\n-//       action: playVideo,\r\n-//     },\r\n-//     {\r\n-//       utterance: \"stop video\",\r\n-//       // response: \"Playing video.\",\r\n-//       action: pauseVideo,\r\n-//     },\r\n-//     {\r\n-//       utterance: \"scroll up\",\r\n-//       // response: \"Scrolling up.\",\r\n-//       action: scrollUp,\r\n-//     },\r\n-//     {\r\n-//       utterance: \"scroll down\",\r\n-//       // response: \"Scrolling down.\",\r\n-//       action: scrollDown,\r\n-//     },\r\n-//     {\r\n-//       utterance: \"go up\",\r\n-\r\n-//       // response: \"Scrolling up.\",\r\n-//       action: scrollUp,\r\n-//     },\r\n-//     {\r\n-//       utterance: \"go down\",\r\n-//       // response: \"Scrolling down.\",\r\n-//       action: scrollDown,\r\n-//     },\r\n-//     {\r\n-//       utterance: \"scroll to top\",\r\n-//       action: scrollToTop,\r\n-//     },\r\n-//     {\r\n-//       utterance: \"scroll to bottom\",\r\n-//       action: scrollToBottom,\r\n-//     },\r\n-//     {\r\n-//       utterance: \"brane stop\",\r\n-//       action: stopListening,\r\n-//     },\r\n-//     {\r\n-//       utterance: \"brane turn off\",\r\n-//       action: stopListening,\r\n-//     },\r\n-//     {\r\n-//       utterance: \"brane stop the bot\",\r\n-//       action: stopListening,\r\n-//     },\r\n-//   ];\r\n-\r\n-//   return (\r\n-//     <div className=\"speech-bot-container\">\r\n-//       <div\r\n-//         className={`button-container ${\r\n-//           isListening ? \"voicebotframeactive\" : \"voicebotframe\"\r\n-//         }`}\r\n-//       >\r\n-//         <button onClick={isListening ? stopListening : startListening}>\r\n-//           {isListening ? \"Stop\" : \"Start\"} Animation\r\n-//         </button>\r\n-//         {/* <button onClick={toggleBotActive}>\r\n-//         {isBotActive ? 'Deactivate Bot' : 'Activate Bot'}\r\n-//       </button> \r\n-//       </div>\r\n-//     </div>\r\n-//   );\r\n-// };\r\n-\r\n-// export default VoiceBot; */\r\n-}\r\n-\r\n-//iska v1\r\n-\r\n-// import React, { useState, useEffect, useRef } from \"react\";\r\n-// import { useNavigate, useLocation } from \"react-router-dom\";\r\n-// import Fuse from \"fuse.js\";\r\n-// import \"./VoiceBot.css\";\r\n-\r\n-// const VoiceBot = ({ videoRef}) => {\r\n-//   const [isListening, setIsListening] = useState(false);\r\n-//   const [isSpeaking, setIsSpeaking] = useState(false);\r\n-//   const recognition = useRef(null);\r\n-//   const speechSynthesis = useRef(window.speechSynthesis);\r\n-//   const [hasGreeted, setHasGreeted] = useState(false);\r\n-//   const navigate = useNavigate();\r\n-\r\n-//  // Initialize speech recognition\r\n-//  useEffect(() => {\r\n-//   recognition.current = new window.webkitSpeechRecognition();\r\n-//   recognition.current.continuous = true;\r\n-//   recognition.current.interimResults = false;\r\n-//   recognition.current.onresult = onResult;\r\n-//   recognition.current.onend = onRecognitionEnd;\r\n-//   recognition.current.starting = false;\r\n-\r\n-//   recognition.current.onerror = (event) => {\r\n-//     console.error(\"Recognition error:\", event.error);\r\n-//     if (isListening && !isSpeaking) {\r\n-//       restartRecognition();\r\n-//     }\r\n-//   };\r\n-\r\n-//   return () => {\r\n-//     if (recognition.current) {\r\n-//       recognition.current.abort();\r\n-//     }\r\n-//   };\r\n-// }, []);\r\n-\r\n-//   // useEffect(() => {\r\n-//   //   const checkRecognition = () => {\r\n-//   //     if (isListening && !isSpeaking && !recognition.current.starting) {\r\n-//   //       console.log(\"Restarting recognition because it's not active.\");\r\n-//   //       recognition.current.starting = true;\r\n-//   //       recognition.current.start();\r\n-//   //       console.log(\"Restarted recognition.\");\r\n-//   //     }\r\n-//   //   };\r\n-\r\n-//   //   const recognitionCheckInterval = setInterval(checkRecognition, 100); // Check every .5 second\r\n-\r\n-//   //   return () => {\r\n-//   //     clearInterval(recognitionCheckInterval);\r\n-//   //   };\r\n-//   // }, [isListening, isSpeaking]);\r\n-\r\n-//   const historyStack = useRef([]);\r\n-\r\n-//   useEffect(() => {\r\n-//     return () => {\r\n-//       // Clean up the listener when the component unmounts\r\n-//       window.removeEventListener(\"popstate\", handlePopState);\r\n-//     };\r\n-//   }, []);\r\n-\r\n-//   const handlePopState = () => {\r\n-//     // This needs to handle both back and forward browser actions\r\n-//     // Use some logic to determine whether it's a back or forward action\r\n-//     // For simplicity, assume it's always back\r\n-//     historyStack.current.pop();\r\n-//     forwardStack.current.length = 0; // Clear forward stack on manual navigation\r\n-//   };\r\n-\r\n-//   // Add a new entry to the stack whenever navigate is called\r\n-//   const customNavigate = (to, options) => {\r\n-//     historyStack.current.push(to);\r\n-//     navigate(to, options);\r\n-//   };\r\n-\r\n-//   // Listen to popstate events to update the history stack\r\n-//   useEffect(() => {\r\n-//     window.addEventListener(\"popstate\", handlePopState);\r\n-//   }, []);\r\n-\r\n-//   const forwardStack = useRef([]);\r\n-\r\n-//   const goBack = () => {\r\n-//     if (window.history.state && window.history.state.idx > 0) {\r\n-//       window.history.back();\r\n-//       speak(\"Going back\");\r\n-//     } else {\r\n-//       speak(\"Can't go back any further.\");\r\n-//     }\r\n-//   };\r\n-\r\n-//   const goForward = () => {\r\n-//     if (window.history.state && window.history.state.idx < window.history.length - 1) {\r\n-//       window.history.forward();\r\n-//       speak(\"Going forward\");\r\n-//     } else {\r\n-//       speak(\"No forward history available.\");\r\n-//     }\r\n-//   };\r\n-\r\n-//   const playVideo = () => {\r\n-//     if (videoRef.current) {\r\n-//       videoRef.current.play();\r\n-//       speak(\"Playing video.\");\r\n-//     } else {\r\n-//       speak(\"No video to play.\");\r\n-//     }\r\n-//   };\r\n-\r\n-//   const pauseVideo = () => {\r\n-//     if (videoRef.current) {\r\n-//       videoRef.current.pause();\r\n-//       speak(\"Video paused.\");\r\n-//     } else {\r\n-//       speak(\"No video to pause.\");\r\n-//     }\r\n-//   };\r\n-\r\n-//   const scrollAmount = window.innerHeight * 0.82;\r\n-\r\n-//   const scrollUp = () => {\r\n-//     if (window.pageYOffset === 0) {\r\n-//       speak(\"Already at the top of the page.\");\r\n-//     } else {\r\n-//       window.scrollBy(0, -scrollAmount);\r\n-//       speak(\"Scrolled up.\");\r\n-//     }\r\n-//   };\r\n-\r\n-//   const scrollDown = () => {\r\n-//     const maxScrollTop =\r\n-//       document.documentElement.scrollHeight - window.innerHeight;\r\n-//     if (window.pageYOffset >= maxScrollTop) {\r\n-//       speak(\"Already at the bottom of the page.\");\r\n-//     } else {\r\n-//       window.scrollBy(0, scrollAmount);\r\n-//       speak(\"Scrolled down.\");\r\n-//     }\r\n-//   };\r\n-\r\n-//   const scrollToTop = () => {\r\n-//     if (window.pageYOffset === 0) {\r\n-//       speak(\"Already at the top of the page.\");\r\n-//     } else {\r\n-//       window.scrollTo(0, 0);\r\n-//       speak(\"Scrolled to the top of the page.\");\r\n-//     }\r\n-//   };\r\n-\r\n-//   const scrollToBottom = () => {\r\n-//     const maxScrollTop =\r\n-//       document.documentElement.scrollHeight - window.innerHeight;\r\n-//     if (window.pageYOffset >= maxScrollTop) {\r\n-//       speak(\"Already at the bottom of the page.\");\r\n-//     } else {\r\n-//       window.scrollTo(0, document.body.scrollHeight);\r\n-//       speak(\"Scrolled to the bottom of the page.\");\r\n-//     }\r\n-//   };\r\n-\r\n-//   const speak = (message) => {\r\n-//     const utterance = new SpeechSynthesisUtterance(message);\r\n-//     utterance.onend = () => {\r\n-//       setIsSpeaking(false);\r\n-//       // Restart recognition after speaking has ended\r\n-//       if (isListening) {\r\n-//         restartRecognition();\r\n-//       }\r\n-//     };\r\n-\r\n-//     setIsSpeaking(true);\r\n-//     // Stop recognition when the bot starts speaking\r\n-//     if (recognition.current) {\r\n-//       recognition.current.abort();\r\n-//     }\r\n-//     speechSynthesis.current.speak(utterance);\r\n-//   };\r\n-\r\n-//   const restartRecognition = () => {\r\n-//     // Check if recognition is not already started and if the bot is set to listen\r\n-//     if (recognition.current && !recognition.current.starting && isListening && !isSpeaking) {\r\n-//       // Only start recognition if it's not already active\r\n-//       if (recognition.current.state !== 'active') {\r\n-//         recognition.current.abort(); // Ensure any ongoing recognition is stopped\r\n-//         recognition.current.starting = true;\r\n-//         recognition.current.start();\r\n-//       }\r\n-//     }\r\n-//   };\r\n-\r\n-//     // Restart recognition when bot finishes speaking and isListening is true\r\n-//     useEffect(() => {\r\n-//       if (!isSpeaking && isListening) {\r\n-//         restartRecognition();\r\n-//       }\r\n-//     }, [isSpeaking, isListening]);\r\n-\r\n-//   const onResult = (event) => {\r\n-//     const resultIndex = event.resultIndex;\r\n-//     const transcript = event.results[resultIndex][0].transcript\r\n-//       .trim()\r\n-//       .toLowerCase();\r\n-\r\n-//     if (event.results[resultIndex].isFinal) {\r\n-//       console.log(`Recognized text: ${transcript}`);\r\n-//       if (transcript.includes(\"brain\")) {\r\n-//         console.log(\"Wake word heard, processing command...\");\r\n-//         handleCommandWithFuse(transcript.replace(\"brain\", \"\"));\r\n-//       }\r\n-//     }\r\n-//   };\r\n-\r\n-//   const onRecognitionEnd = () => {\r\n-//     recognition.current.starting = false;\r\n-//     if (isListening && !isSpeaking) {\r\n-//       restartRecognition();\r\n-//     }\r\n-//   };\r\n-\r\n-//   useEffect(() => {\r\n-//     if (isListening && !hasGreeted) {\r\n-//       speak(\"Hello, I'm Brane. How can I help you today?\");\r\n-//       setHasGreeted(true);\r\n-//     }\r\n-//   }, [isListening, hasGreeted]);\r\n-\r\n-// // Updated startListening function\r\n-// const startListening = () => {\r\n-//   setIsListening(true);\r\n-//   if (recognition.current && !recognition.current.starting) {\r\n-//     recognition.current.start();\r\n-//   }\r\n-// };\r\n-\r\n-// // Updated stopListening function\r\n-// const stopListening = () => {\r\n-//   setIsListening(false);\r\n-//   setIsSpeaking(false); // Reset speaking state\r\n-//   setHasGreeted(false); // Reset greeting state if needed\r\n-//   if (recognition.current) {\r\n-//     recognition.current.abort(); // Stop any ongoing speech recognition\r\n-//   }\r\n-//   if (speechSynthesis.current.speaking) {\r\n-//     speechSynthesis.current.cancel(); // Stop any ongoing speech synthesis\r\n-//   }\r\n-// };\r\n-\r\n-//   const handleCommandWithFuse = (command) => {\r\n-//     const fuse = new Fuse(commands, { keys: [\"utterance\"], threshold: 0.4 });\r\n-//     const results = fuse.search(command);\r\n-//     const foundCommand = results.length ? results[0].item : null;\r\n-\r\n-//     if (foundCommand) {\r\n-//       console.log(\"Command found:\", foundCommand.utterance);\r\n-\r\n-//       if (foundCommand.action) {\r\n-//         foundCommand.action();\r\n-//       } else if (foundCommand.route) {\r\n-//         navigate(foundCommand.route);\r\n-//       }\r\n-\r\n-//       // Speak after performing the action or navigation\r\n-//       speak(foundCommand.response);\r\n-//     } else {\r\n-//       console.log(\"No command found.\");\r\n-//       speak(\"I'm not sure how to respond to that.\");\r\n-//     }\r\n-//   };\r\n-\r\n-//   const commands = [\r\n-//     {\r\n-//       utterance: \"Hello who are you ?\",\r\n-\r\n-//       response:\r\n-//         \"Hi! This is Brane! your Voice bot from Brane Education How can I Assist you Today ?\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"Hello\",\r\n-\r\n-//       response: \"Hi! How can I assist you today?\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"hello\",\r\n-\r\n-//       response: \"Hi! How can I assist you today?\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"Hi.\",\r\n-\r\n-//       response: \"Hello! How can I assist you today?\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"Hey there\",\r\n-\r\n-//       response: \"Hi! How can I assist you today?\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"Good morning Brane.\",\r\n-\r\n-//       response: \"Hey Hiii! Good morning  ! How can I help you?\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"Good afternoon Brane.\",\r\n-\r\n-//       response: \"Hey Hiii! Good after noon ! How can I help you?\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"Good evening Brane.\",\r\n-\r\n-//       response: \"Hey Hiii! Good evening ! How can I help you?\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"can you please take me to login page\",\r\n-\r\n-//       route: \"/login\",\r\n-\r\n-//       response: \"Here's the Login Page, Please Login\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"please take me to login page\",\r\n-\r\n-//       route: \"/login\",\r\n-\r\n-//       response: \"Here's the Login Page, Please Login\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"Go to login page\",\r\n-\r\n-//       route: \"/login\",\r\n-\r\n-//       response: \"Here's the Login Page, Please Login\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"open login page\",\r\n-\r\n-//       route: \"/login\",\r\n-\r\n-//       response: \"Here's the Login Page, Please Login\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"can you please take me to signup page\",\r\n-\r\n-//       route: \"/signup\",\r\n-\r\n-//       response: \"Here's the signup page. Please proceed With Registration.\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"take me to signup page\",\r\n-\r\n-//       route: \"/signup\",\r\n-\r\n-//       response: \"Here's the signup page. Please proceed With Registration.\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"Go to signup page\",\r\n-\r\n-//       route: \"/signup\",\r\n-\r\n-//       response: \"Here's the signup page. Please proceed With Registration.\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"open signup page\",\r\n-\r\n-//       route: \"/signup\",\r\n-\r\n-//       response: \"Here's the signup page. Please proceed With Registration.\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"Go to face id\",\r\n-\r\n-//       route: \"/login/faceid\",\r\n-\r\n-//       response: \"Here's Face ID Login. Please proceed.\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"Go to face id login\",\r\n-\r\n-//       route: \"/login/faceid\",\r\n-\r\n-//       response: \"Here's Face ID Login. Please proceed.\",\r\n-//     },\r\n-//     {\r\n-//       utterance: \"Go to face login\",\r\n-\r\n-//       route: \"/login/faceid\",\r\n-\r\n-//       response: \"Here's Face ID Login. Please proceed.\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"login with face id\",\r\n-\r\n-//       route: \"/login/faceid\",\r\n-\r\n-//       response: \"Here's Face ID Login. Please proceed.\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"login with face\",\r\n-\r\n-//       route: \"/login/faceid\",\r\n-\r\n-//       response: \"Here's Face ID Login. Please proceed.\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"i want to login with face\",\r\n-\r\n-//       route: \"/login/faceid\",\r\n-\r\n-//       response: \"Here's Face ID Login. Please proceed.\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"login with voice\",\r\n-\r\n-//       route: \"/login/voiceid\",\r\n-\r\n-//       response: \"Here's Voice Login. Please proceed.\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"i want to login with voice\",\r\n-\r\n-//       route: \"/login/voiceid\",\r\n-\r\n-//       response: \"Here's Voice Login. Please proceed.\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"go to voice login\",\r\n-\r\n-//       route: \"/login/voiceid\",\r\n-\r\n-//       response: \"Here's Voice Login. Please proceed.\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"login with voice\",\r\n-\r\n-//       route: \"/login/voiceid\",\r\n-\r\n-//       response: \"Here's Voice Login. Please proceed.\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"login with mobile\",\r\n-\r\n-//       route: \"/login/mobile\",\r\n-\r\n-//       response: \"Here's Mobile Login. Please proceed.\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"i want to login with mobile\",\r\n-\r\n-//       route: \"/login/mobile\",\r\n-\r\n-//       response: \"Here's Mobile Login. Please proceed.\",\r\n-//     },\r\n-//     {\r\n-//       utterance: \"go to mobile login\",\r\n-\r\n-//       route: \"/login/mobile\",\r\n-\r\n-//       response: \"Here's Mobile Login. Please proceed.\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"what are platform features\",\r\n-\r\n-//       response:\r\n-//         \"Dashboard, Dynamic time table, Learning Networks, Little Masters, Video Based Dictionary, General Search.\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"Features of platform\",\r\n-\r\n-//       response:\r\n-//         \"Dashboard, Dynamic time table, Learning Networks, Little Masters, Video Based Dictionary, General Search.\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"What does the platform offer\",\r\n-\r\n-//       response:\r\n-//         \"Dashboard, Dynamic time table, Learning Networks, Little Masters, Video Based Dictionary, General Search.\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"Say me the features of platform\",\r\n-\r\n-//       response:\r\n-//         \"Dashboard, Dynamic time table, Learning Networks, Little Masters, Video Based Dictionary, General Search.\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"Say me the services of platform\",\r\n-\r\n-//       response:\r\n-//         \"Dashboard, Dynamic time table, Learning Networks, Little Masters, Video Based Dictionary, General Search.\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"tell me the services offered by the platform\",\r\n-\r\n-//       response:\r\n-//         \"Dashboard, Dynamic time table, Learning Networks, Little Masters, Video Based Dictionary, General Search.\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"explain platform services\",\r\n-\r\n-//       response:\r\n-//         \"Dashboard, Dynamic time table, Learning Networks, Little Masters, Video Based Dictionary, General Search.\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"Give me the Parent voice of Julia Harris\",\r\n-\r\n-//       response:\r\n-//         \"Brane education has helped my son a lot in his studies. He improved a lot in his studies and is now able to score good marks in his exams\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"Play today's motivational video\",\r\n-\r\n-//       response: \"I am playing the video\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"Play today's video\",\r\n-\r\n-//       response: \"I am playing Motivational video\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"Leaders Voice\",\r\n-\r\n-//       response:\r\n-//         \"This Voice-interactive AI Platform is a game Changer. It revolutionizes education.\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"Curriculum Supported by Brane Education\",\r\n-\r\n-//       response:\r\n-//         \"we support multiple Boards let me say few Telangana State Board Andhra Pradesh Board Maharashtra Board Assam Board\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"Boards supported by the platform\",\r\n-\r\n-//       response:\r\n-//         \"we support multiple Boards let me say few Telangana State Board Andhra Pradesh Board Maharashtra Board Assam Board\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"Curriculum\",\r\n-\r\n-//       response:\r\n-//         \"we support multiple Boards let me say few Telangana State Board Andhra Pradesh Board Maharashtra Board Assam Board\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"Go to landing page\",\r\n-\r\n-//       response: \"Okay, I am taking you to the landing page.\",\r\n-\r\n-//       route: \"/childpage\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"take me to landing page\",\r\n-\r\n-//       response: \"Okay, I am taking you to the landing page.\",\r\n-\r\n-//       route: \"/childpage\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"move to landing page\",\r\n-\r\n-//       response: \"Okay, I am taking you to the landing page.\",\r\n-\r\n-//       route: \"/childpage\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"roll back to landing page\",\r\n-\r\n-//       response: \"Okay, I am taking you to the landing page.\",\r\n-\r\n-//       route: \"/childpage\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"move to landing page\",\r\n-\r\n-//       response: \"Okay, I am taking you to the landing page.\",\r\n-\r\n-//       route: \"/childpage\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"what is today's quote\",\r\n-\r\n-//       response:\r\n-//         \"Determination is the power that sees us through all our frustration and obstacles. It helps in building our willpower which is the very basis of success.\",\r\n-\r\n-//       route: \"/childpage\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"Today's Inspirational quote\",\r\n-\r\n-//       response:\r\n-//         \"Determination is the power that sees us through all our frustration and obstacles. It helps in building our willpower which is the very basis of success.\",\r\n-\r\n-//       route: \"/childpage\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"say me today's quote\",\r\n-\r\n-//       response:\r\n-//         \"Determination is the power that sees us through all our frustration and obstacles. It helps in building our willpower which is the very basis of success.\",\r\n-\r\n-//       route: \"/childpage\",\r\n-//     },\r\n-//     {\r\n-//       utterance: \"go back\",\r\n-//       response: \"\",\r\n-//       action: goBack, // Note the use of an action property\r\n-//     },\r\n-//     {\r\n-//       utterance: \"go forward\",\r\n-//       response: \"\",\r\n-//       action: goForward,\r\n-//     },\r\n-//     {\r\n-//       utterance: \"play video\",\r\n-//       // response: \"Playing video.\",\r\n-//       action: playVideo,\r\n-//     },\r\n-//     {\r\n-//       utterance: \"pause video\",\r\n-//       // response: \"Pausing video.\",\r\n-//       action: pauseVideo,\r\n-//     },\r\n-//     {\r\n-//       utterance: \"start video\",\r\n-//       // response: \"Playing video.\",\r\n-//       action: playVideo,\r\n-//     },\r\n-//     {\r\n-//       utterance: \"stop video\",\r\n-//       // response: \"Playing video.\",\r\n-//       action: pauseVideo,\r\n-//     },\r\n-//     {\r\n-//       utterance: \"scroll up\",\r\n-//       // response: \"Scrolling up.\",\r\n-//       action: scrollUp,\r\n-//     },\r\n-//     {\r\n-//       utterance: \"scroll down\",\r\n-//       // response: \"Scrolling down.\",\r\n-//       action: scrollDown,\r\n-//     },\r\n-//     {\r\n-//       utterance: \"go up\",\r\n-\r\n-//       // response: \"Scrolling up.\",\r\n-//       action: scrollUp,\r\n-//     },\r\n-//     {\r\n-//       utterance: \"go down\",\r\n-//       // response: \"Scrolling down.\",\r\n-//       action: scrollDown,\r\n-//     },\r\n-//     {\r\n-//       utterance: \"scroll to top\",\r\n-//       action: scrollToTop,\r\n-//     },\r\n-//     {\r\n-//       utterance: \"scroll to bottom\",\r\n-//       action: scrollToBottom,\r\n-//     },\r\n-//     {\r\n-//       utterance: \"brane stop\",\r\n-//       action: stopListening,\r\n-//     },\r\n-//     {\r\n-//       utterance: \"brane turn off\",\r\n-//       action: stopListening,\r\n-//     },\r\n-//     {\r\n-//       utterance: \"brane stop the bot\",\r\n-//       action: stopListening,\r\n-//     },\r\n-//   ];\r\n-\r\n-//   return (\r\n-//     <div className=\"speech-bot-container\">\r\n-//       <div\r\n-//         className={`button-container ${\r\n-//           isListening ? \"voicebotframeactive\" : \"voicebotframe\"\r\n-//         }`}\r\n-//       >\r\n-//         <button onClick={isListening ? stopListening : startListening}>\r\n-//           {isListening ? \"Stop\" : \"Start\"} Animation\r\n-//         </button>\r\n-//         {/* <button onClick={toggleBotActive}>\r\n-//         {isBotActive ? 'Deactivate Bot' : 'Activate Bot'}\r\n-//       </button> */}\r\n-//       </div>\r\n-//     </div>\r\n-//   );\r\n-// };\r\n-\r\n-// export default VoiceBot;\r\n-\r\n-//Bot Video added but some start issues\r\n-\r\n-// import React, { useState, useEffect, useRef } from \"react\";\r\n-// import { useNavigate, useLocation } from \"react-router-dom\";\r\n-// import Fuse from \"fuse.js\";\r\n-// import \"./VoiceBot.css\";\r\n-\r\n-// const VoiceBot = ({ videoRef }) => {\r\n-//   const [isListening, setIsListening] = useState(false);\r\n-//   const [isSpeaking, setIsSpeaking] = useState(false);\r\n-//   const recognition = useRef(null);\r\n-//   const speechSynthesis = useRef(window.speechSynthesis);\r\n-//   const hasGreeted = useRef(false);\r\n-//   const restartRecognitionTimeout = useRef(null);\r\n-//   const navigate = useNavigate();\r\n-//   const location = useLocation();\r\n-//   const [isRecognitionActive, setIsRecognitionActive] = useState(false); // New state to track recognition status\r\n-\r\n-//   useEffect(() => {\r\n-//     recognition.current = new window.webkitSpeechRecognition();\r\n-//     recognition.current.continuous = true;\r\n-//     recognition.current.interimResults = false;\r\n-//     recognition.current.onresult = onResult;\r\n-//     recognition.current.onend = () => {\r\n-//       console.log(\"Recognition ended.\");\r\n-//       if (isListening) {\r\n-//         startListening();\r\n-//       }\r\n-//     };\r\n-//     recognition.current.onerror = (event) => {\r\n-//       console.error(\"Recognition error:\", event.error);\r\n-//     };\r\n-\r\n-//     return () => {\r\n-//       recognition.current.abort();\r\n-//     };\r\n-//   }, []);\r\n-\r\n-//   // Update useEffect for managing the recognition state based on isListening and isRecognitionActive\r\n-//   useEffect(() => {\r\n-//     if (isListening && !isRecognitionActive) {\r\n-//       startListening();\r\n-//     } else if (!isListening && isRecognitionActive) {\r\n-//       stopListening();\r\n-//     }\r\n-//   }, [isListening, isRecognitionActive]);\r\n-\r\n-//   const goBack = () => {\r\n-//     if (window.history.length > 1) {\r\n-//       navigate(-1);\r\n-//     } else {\r\n-//       speak(\"Can't go back any further.\");\r\n-//     }\r\n-//   };\r\n-\r\n-//   const goForward = () => {\r\n-//     // Unfortunately, there's no direct way to check if you can go forward in the history.\r\n-//     // You might need to manage this state manually based on user navigation.\r\n-//     navigate(1);\r\n-//   };\r\n-\r\n-//   const playVideo = () => {\r\n-//     if (videoRef.current && !videoRef.current.paused) {\r\n-//       speak(\"Video is already playing.\");\r\n-//     } else if (videoRef.current) {\r\n-//       videoRef.current.play();\r\n-//       speak(\"Playing video.\");\r\n-//     } else {\r\n-//       speak(\"No video to play.\");\r\n-//     }\r\n-//   };\r\n-\r\n-//   const pauseVideo = () => {\r\n-//     if (videoRef.current && videoRef.current.paused) {\r\n-//       speak(\"Video is already paused.\");\r\n-//     } else if (videoRef.current) {\r\n-//       videoRef.current.pause();\r\n-//       speak(\"Video paused.\");\r\n-//     } else {\r\n-//       speak(\"No video to pause.\");\r\n-//     }\r\n-//   };\r\n-\r\n-//   const scrollAmount = window.innerHeight * 0.82;\r\n-\r\n-//   const scrollUp = () => {\r\n-//     if (window.pageYOffset === 0) {\r\n-//       speak(\"Already at the top of the page.\");\r\n-//     } else {\r\n-//       window.scrollBy(0, -scrollAmount);\r\n-//       speak(\"Scrolled up.\");\r\n-//     }\r\n-//   };\r\n-\r\n-//   const scrollDown = () => {\r\n-//     const maxScrollTop =\r\n-//       document.documentElement.scrollHeight - window.innerHeight;\r\n-//     if (window.pageYOffset >= maxScrollTop) {\r\n-//       speak(\"Already at the bottom of the page.\");\r\n-//     } else {\r\n-//       window.scrollBy(0, scrollAmount);\r\n-//       speak(\"Scrolled down.\");\r\n-//     }\r\n-//   };\r\n-\r\n-//   const scrollToTop = () => {\r\n-//     if (window.pageYOffset === 0) {\r\n-//       speak(\"Already at the top of the page.\");\r\n-//     } else {\r\n-//       window.scrollTo(0, 0);\r\n-//       speak(\"Scrolled to the top of the page.\");\r\n-//     }\r\n-//   };\r\n-\r\n-//   const scrollToBottom = () => {\r\n-//     const maxScrollTop =\r\n-//       document.documentElement.scrollHeight - window.innerHeight;\r\n-//     if (window.pageYOffset >= maxScrollTop) {\r\n-//       speak(\"Already at the bottom of the page.\");\r\n-//     } else {\r\n-//       window.scrollTo(0, document.body.scrollHeight);\r\n-//       speak(\"Scrolled to the bottom of the page.\");\r\n-//     }\r\n-//   };\r\n-\r\n-//   // const speak = (message) => {\r\n-//   //   const utterance = new SpeechSynthesisUtterance(message);\r\n-//   //   utterance.onend = () => {\r\n-//   //     setIsSpeaking(false);\r\n-//   //     console.log(\"Speaking ended.\");\r\n-//   //     // Only restart recognition if we're still supposed to be listening\r\n-//   //     // if (isListening) {\r\n-//   //     //   if (restartRecognitionTimeout.current) {\r\n-//   //     //     clearTimeout(restartRecognitionTimeout.current);\r\n-//   //     //   }\r\n-//   //     //   restartRecognitionTimeout.current = setTimeout(() => {\r\n-//   //     //     console.log(\"Recognition restarted.\");\r\n-//   //     //     recognition.current.start();\r\n-//   //     //   }, 100); // Delay to prevent immediate restart\r\n-//   //     // }\r\n-//   //     if (isListening && !recognition.current.starting) { // Check the flag before restarting\r\n-//   //       recognition.current.starting = true; // Set the flag when starting recognition\r\n-//   //       recognition.current.start();\r\n-//   //     }\r\n-//   //   };\r\n-\r\n-//   //   setIsSpeaking(true);\r\n-//   //   console.log(\"Speaking started.\");\r\n-//   //   recognition.current.stop(); // Stop recognition when the bot starts speaking\r\n-//   //   speechSynthesis.current.speak(utterance);\r\n-//   // };\r\n-\r\n-//   const speak = (message) => {\r\n-//     console.log(\"speak function called with message:\", message);\r\n-//     const utterance = new SpeechSynthesisUtterance(message);\r\n-//     utterance.onend = () => {\r\n-//       setIsSpeaking(false);\r\n-//       console.log(\"Speaking ended.\");\r\n-//       // Directly handle the restart of recognition here if needed\r\n-//       if (isListening) {\r\n-//         startListening();\r\n-//       }\r\n-//     };\r\n-\r\n-//     setIsSpeaking(true);\r\n-//     console.log(\"Speaking started.\");\r\n-//     recognition.current.stop(); // Ensure to stop recognition before speaking\r\n-//     speechSynthesis.current.speak(utterance);\r\n-//   };\r\n-\r\n-//   const onResult = (event) => {\r\n-//     const resultIndex = event.resultIndex;\r\n-//     const transcript = event.results[resultIndex][0].transcript\r\n-//       .trim()\r\n-//       .toLowerCase();\r\n-\r\n-//     if (event.results[resultIndex].isFinal) {\r\n-//       console.log(`Recognized text: ${transcript}`);\r\n-//       if (transcript.includes(\"brain\")) {\r\n-//         console.log(\"Wake word heard, processing command...\");\r\n-//         handleCommandWithFuse(transcript.replace(\"brain\", \"\"));\r\n-//       }\r\n-//     }\r\n-//   };\r\n-\r\n-//   // const onRecognitionEnd = () => {\r\n-//   //   console.log(\"Recognition ended.\");\r\n-//   //   setIsRecognitionActive(false); // Update state when recognition ends\r\n-//   //   recognition.current.starting = false; // Reset the flag when recognition ends\r\n-//   //   // We now check if the recognition is already running before starting it again\r\n-//   //   if (isListening && !isSpeaking && !recognition.current?.starting) {\r\n-//   //     console.log(\"Restarting recognition.\");\r\n-//   //     recognition.current.start();\r\n-//   //   }\r\n-//   // };\r\n-\r\n-//   // useEffect(() => {\r\n-//   //   if (isListening && !hasGreeted.current) {\r\n-//   //     speak(\"Hello, I'm Brane. How can I assist you today?\");\r\n-//   //     hasGreeted.current = true;\r\n-//   //   } else if (isListening && !isSpeaking) {\r\n-//   //     recognition.current.start();\r\n-//   //   }\r\n-//   // }, [isListening, isSpeaking]);\r\n-\r\n-//   useEffect(() => {\r\n-//     if (isListening && !hasGreeted.current) {\r\n-//       speak(\"Hello, I'm Brane. How can I assist you today?\");\r\n-//       hasGreeted.current = true;\r\n-//     } else if (isListening && !isSpeaking && !recognition.current.starting) {\r\n-//       // Check the flag before starting\r\n-//       recognition.current.starting = true; // Set the flag when starting recognition\r\n-//       recognition.current.start();\r\n-//     }\r\n-//   }, [isListening, isSpeaking]);\r\n-\r\n-//   // const startListening = () => {\r\n-//   //   console.log(\"Attempting to start listening.\");\r\n-//   //   if (recognition.current && !recognition.current.starting) {\r\n-//   //     setIsListening(true);\r\n-//   //     recognition.current.starting = true; // Set the flag when starting recognition\r\n-//   //     recognition.current.start();\r\n-//   //     console.log(\"Listening started.\");\r\n-//   //   }\r\n-//   // };\r\n-\r\n-//   // const stopListening = () => {\r\n-//   //   console.log(\"Stopping listening.\");\r\n-\r\n-//   //   setIsListening(false);\r\n-//   //   recognition.current.stop();\r\n-//   //   if (speechSynthesis.current.speaking) {\r\n-//   //     speechSynthesis.current.cancel();\r\n-//   //   }\r\n-//   //   if (restartRecognitionTimeout.current) {\r\n-//   //     clearTimeout(restartRecognitionTimeout.current);\r\n-//   //   }\r\n-//   //   console.log(\"Listening stopped.\");\r\n-//   // };\r\n-//   // Handle start and stop listening logic\r\n-//   const startListening = () => {\r\n-//     console.log(\"Attempting to start listening.\");\r\n-//     if (!recognition.current.starting) {\r\n-//       setIsListening(true);\r\n-//       recognition.current.starting = true;\r\n-//       recognition.current.start();\r\n-//       console.log(\"Listening started.\");\r\n-//     } else {\r\n-//       console.log(\"Recognition already active.\");\r\n-//     }\r\n-//   };\r\n-\r\n-//   const stopListening = () => {\r\n-//     console.log(\"Stopping listening.\");\r\n-//     if (recognition.current.starting) {\r\n-//       setIsListening(false);\r\n-//       recognition.current.starting = false;\r\n-//       recognition.current.stop();\r\n-//       console.log(\"Listening stopped.\");\r\n-//     } else {\r\n-//       console.log(\"Recognition already inactive.\");\r\n-//     }\r\n-//   };\r\n-\r\n-//   // const handleCommandWithFuse = (command) => {\r\n-//   //   const fuse = new Fuse(commands, { keys: [\"utterance\"], threshold: 0.4 });\r\n-//   //   const results = fuse.search(command);\r\n-//   //   const foundCommand = results.length ? results[0].item : null;\r\n-\r\n-//   //   if (foundCommand) {\r\n-//   //     console.log(\"Command found:\", foundCommand.utterance);\r\n-//   //     speak(foundCommand.response);\r\n-//   //     if (foundCommand.route) {\r\n-//   //       navigate(foundCommand.route); // Navigate to the route specified in the command\r\n-//   //     }\r\n-//   //   } else {\r\n-//   //     console.log(\"No command found.\");\r\n-//   //     speak(\"I'm not sure how to respond to that.\");\r\n-//   //   }\r\n-//   // };\r\n-\r\n-//   const handleCommandWithFuse = (command) => {\r\n-//     const fuse = new Fuse(commands, { keys: [\"utterance\"], threshold: 0.4 });\r\n-//     const results = fuse.search(command);\r\n-//     const foundCommand = results.length ? results[0].item : null;\r\n-\r\n-//     if (foundCommand) {\r\n-//       console.log(\"Command found:\", foundCommand.utterance);\r\n-\r\n-//       if (foundCommand.route) {\r\n-//         if (location.pathname !== foundCommand.route) {\r\n-//           navigate(foundCommand.route);\r\n-//           speak(\r\n-//             `Navigating to ${\r\n-//               foundCommand.routeDescription || \"requested page\"\r\n-//             }.`\r\n-//           );\r\n-//         } else {\r\n-//           speak(\r\n-//             `You are already on the ${\r\n-//               foundCommand.routeDescription || \"requested page\"\r\n-//             }.`\r\n-//           );\r\n-//         }\r\n-//       } else if (foundCommand.action) {\r\n-//         foundCommand.action();\r\n-//       }\r\n-\r\n-//       if (foundCommand.response) {\r\n-//         speak(foundCommand.response);\r\n-//       }\r\n-//     } else {\r\n-//       console.log(\"No command found.\");\r\n-//       speak(\"I'm not sure how to respond to that.\");\r\n-//     }\r\n-//   };\r\n-\r\n-//   const commands = [\r\n-//     {\r\n-//       utterance: \"Hello who are you ?\",\r\n-\r\n-//       response:\r\n-//         \"Hi! This is Brane! your Voice bot from Brane Education How can I Assist you Today ?\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"Hello\",\r\n-\r\n-//       response: \"Hi! How can I assist you today?\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"hello\",\r\n-\r\n-//       response: \"Hi! How can I assist you today?\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"Hi.\",\r\n-\r\n-//       response: \"Hello! How can I assist you today?\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"Hey there\",\r\n-\r\n-//       response: \"Hi! How can I assist you today?\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"Good morning Brane.\",\r\n-\r\n-//       response: \"Hey Hiii! Good morning  ! How can I help you?\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"Good afternoon Brane.\",\r\n-\r\n-//       response: \"Hey Hiii! Good after noon ! How can I help you?\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"Good evening Brane.\",\r\n-\r\n-//       response: \"Hey Hiii! Good evening ! How can I help you?\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"can you please take me to login page\",\r\n-//       route: \"/login\",\r\n-//       routeDescription: \"login page\",\r\n-//       response: \"Navigating to the login page.\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"go to login page\",\r\n-//       route: \"/login\",\r\n-//       routeDescription: \"login page\",\r\n-//       response: \"Navigating to the login page.\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"please take me to login page\",\r\n-//       route: \"/login\",\r\n-//       routeDescription: \"login page\",\r\n-//       response: \"Navigating to the login page.\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"Go to login page\",\r\n-//       route: \"/login\",\r\n-//       routeDescription: \"login page\",\r\n-//       response: \"Navigating to the login page.\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"open login page\",\r\n-//       route: \"/login\",\r\n-//       routeDescription: \"login page\",\r\n-//       response: \"Navigating to the login page.\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"can you please take me to signup page\",\r\n-//       route: \"/signup\",\r\n-//       routeDescription: \"signup page\",\r\n-//       response: \"Navigating to the signup page.\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"take me to signup page\",\r\n-//       route: \"/signup\",\r\n-//       routeDescription: \"signup page\",\r\n-//       response: \"Navigating to the signup page.\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"Go to signup page\",\r\n-//       route: \"/signup\",\r\n-//       routeDescription: \"signup page\",\r\n-//       response: \"Navigating to the signup page.\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"open signup page\",\r\n-//       route: \"/signup\",\r\n-//       routeDescription: \"signup page\",\r\n-//       response: \"Navigating to the signup page.\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"what are platform features\",\r\n-\r\n-//       response:\r\n-//         \"Dashboard, Dynamic time table, Learning Networks, Little Masters, Video Based Dictionary, General Search.\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"Features of platform\",\r\n-\r\n-//       response:\r\n-//         \"Dashboard, Dynamic time table, Learning Networks, Little Masters, Video Based Dictionary, General Search.\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"What does the platform offer\",\r\n-\r\n-//       response:\r\n-//         \"Dashboard, Dynamic time table, Learning Networks, Little Masters, Video Based Dictionary, General Search.\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"Say me the features of platform\",\r\n-\r\n-//       response:\r\n-//         \"Dashboard, Dynamic time table, Learning Networks, Little Masters, Video Based Dictionary, General Search.\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"Say me the services of platform\",\r\n-\r\n-//       response:\r\n-//         \"Dashboard, Dynamic time table, Learning Networks, Little Masters, Video Based Dictionary, General Search.\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"tell me the services offered by the platform\",\r\n-\r\n-//       response:\r\n-//         \"Dashboard, Dynamic time table, Learning Networks, Little Masters, Video Based Dictionary, General Search.\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"explain platform services\",\r\n-\r\n-//       response:\r\n-//         \"Dashboard, Dynamic time table, Learning Networks, Little Masters, Video Based Dictionary, General Search.\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"Give me the Parent voice of Julia Harris\",\r\n-\r\n-//       response:\r\n-//         \"Brane education has helped my son a lot in his studies. He improved a lot in his studies and is now able to score good marks in his exams\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"Play today's motivational video\",\r\n-\r\n-//       response: \"I am playing the video\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"Play today's video\",\r\n-\r\n-//       response: \"I am playing Motivational video\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"Leaders Voice\",\r\n-\r\n-//       response:\r\n-//         \"This Voice-interactive AI Platform is a game Changer. It revolutionizes education.\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"Curriculum Supported by Brane Education\",\r\n-\r\n-//       response:\r\n-//         \"we support multiple Boards let me say few Telangana State Board Andhra Pradesh Board Maharashtra Board Assam Board\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"Boards supported by the platform\",\r\n-\r\n-//       response:\r\n-//         \"we support multiple Boards let me say few Telangana State Board Andhra Pradesh Board Maharashtra Board Assam Board\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"Curriculum\",\r\n-\r\n-//       response:\r\n-//         \"we support multiple Boards let me say few Telangana State Board Andhra Pradesh Board Maharashtra Board Assam Board\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"Go to landing page\",\r\n-\r\n-//       response: \"Okay, I am taking you to the landing page.\",\r\n-\r\n-//       route: \"/childpage\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"take me to landing page\",\r\n-\r\n-//       response: \"Okay, I am taking you to the landing page.\",\r\n-\r\n-//       route: \"/childpage\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"move to landing page\",\r\n-\r\n-//       response: \"Okay, I am taking you to the landing page.\",\r\n-\r\n-//       route: \"/childpage\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"roll back to landing page\",\r\n-\r\n-//       response: \"Okay, I am taking you to the landing page.\",\r\n-\r\n-//       route: \"/childpage\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"move to landing page\",\r\n-\r\n-//       response: \"Okay, I am taking you to the landing page.\",\r\n-\r\n-//       route: \"/childpage\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"what is today's quote\",\r\n-\r\n-//       response:\r\n-//         \"Determination is the power that sees us through all our frustration and obstacles. It helps in building our willpower which is the very basis of success.\",\r\n-\r\n-//       // route: \"/childpage\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"Today's Inspirational quote\",\r\n-\r\n-//       response:\r\n-//         \"Determination is the power that sees us through all our frustration and obstacles. It helps in building our willpower which is the very basis of success.\",\r\n-\r\n-//       // route: \"/childpage\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"say me today's quote\",\r\n-\r\n-//       response:\r\n-//         \"Determination is the power that sees us through all our frustration and obstacles. It helps in building our willpower which is the very basis of success.\",\r\n-\r\n-//       // route: \"/childpage\",\r\n-//     },\r\n-//     {\r\n-//       utterance: \"go back\",\r\n-//       response: \"Going back.\",\r\n-//       action: goBack, // Note the use of an action property\r\n-//     },\r\n-//     {\r\n-//       utterance: \"go forward\",\r\n-//       response: \"Going forward.\",\r\n-//       action: goForward,\r\n-//     },\r\n-//     {\r\n-//       utterance: \"play video\",\r\n-//       // response: \"Playing video.\",\r\n-//       action: playVideo,\r\n-//     },\r\n-//     {\r\n-//       utterance: \"pause video\",\r\n-//       // response: \"Pausing video.\",\r\n-//       action: pauseVideo,\r\n-//     },\r\n-//     {\r\n-//       utterance: \"start video\",\r\n-//       // response: \"Playing video.\",\r\n-//       action: playVideo,\r\n-//     },\r\n-//     {\r\n-//       utterance: \"stop video\",\r\n-//       // response: \"Playing video.\",\r\n-//       action: pauseVideo,\r\n-//     },\r\n-//     {\r\n-//       utterance: \"scroll up\",\r\n-//       // response: \"Scrolling up.\",\r\n-//       action: scrollUp,\r\n-//     },\r\n-//     {\r\n-//       utterance: \"scroll down\",\r\n-//       // response: \"Scrolling down.\",\r\n-//       action: scrollDown,\r\n-//     },\r\n-//     {\r\n-//       utterance: \"go up\",\r\n-\r\n-//       // response: \"Scrolling up.\",\r\n-//       action: scrollUp,\r\n-//     },\r\n-//     {\r\n-//       utterance: \"go down\",\r\n-//       // response: \"Scrolling down.\",\r\n-//       action: scrollDown,\r\n-//     },\r\n-//     {\r\n-//       utterance: \"scroll to top\",\r\n-//       action: scrollToTop,\r\n-//     },\r\n-//     {\r\n-//       utterance: \"scroll to bottom\",\r\n-//       action: scrollToBottom,\r\n-//     },\r\n-//   ];\r\n-//   return (\r\n-//     <div className=\"speech-bot-container\">\r\n-//       <div\r\n-//         className={`button-container ${\r\n-//           isListening ? \"voicebotframeactive\" : \"voicebotframe\"\r\n-//         }`}\r\n-//       >\r\n-//         <div onClick={isListening ? stopListening : startListening}>\r\n-//           <iframe\r\n-//             src={\r\n-//               isListening\r\n-//                 ? \"https://lottie.host/?file=a89aca3f-5407-4052-82c3-2048afca7a9f/NpCdWzLSKD.json\"\r\n-//                 : \"https://lottie.host/?file=d2b6cc0e-fe95-4847-85b5-35365fca7e00/vTudpCuPZq.json\"\r\n-//             }\r\n-//             width=\"120\" // Set your desired width\r\n-//             height=\"120\" // Set your desired height\r\n-//             title={isListening ? \"Stop Animation\" : \"Start Animation\"}\r\n-//             className={isListening ? \"voicebotframeactive\" : \"voicebotframe\"}\r\n-//           ></iframe>\r\n-//           {isListening ? (\r\n-//             <div className=\"overlay\" onClick={stopListening}></div>\r\n-//           ) : (\r\n-//             <div className=\"overlay\" onClick={startListening}></div>\r\n-//           )}\r\n-//         </div>\r\n-//       </div>\r\n-//     </div>\r\n-//   );\r\n-// };\r\n-\r\n-// export default VoiceBot;\r\n-\r\n-// All functionalities but messed up\r\n-\r\n-// import React, { useState, useEffect, useRef } from \"react\";\r\n-// import { useNavigate, useLocation } from \"react-router-dom\";\r\n-// import Fuse from \"fuse.js\";\r\n-// import \"./VoiceBot.css\";\r\n-\r\n-// const VoiceBot = ({ videoRef, takeTestRef, goBackRef }) => {\r\n-//   const [isListening, setIsListening] = useState(false);\r\n-//   const [isSpeaking, setIsSpeaking] = useState(false);\r\n-//   const recognition = useRef(null);\r\n-//   const speechSynthesis = useRef(window.speechSynthesis);\r\n-//   const hasGreeted = useRef(false);\r\n-//   const navigate = useNavigate();\r\n-//   const location = useLocation();\r\n-//   const isRecognitionActive = useRef(false);\r\n-\r\n-//   useEffect(() => {\r\n-//     recognition.current = new window.webkitSpeechRecognition();\r\n-//     recognition.current.continuous = true;\r\n-//     recognition.current.interimResults = false;\r\n-//     recognition.current.onresult = onResult;\r\n-//     recognition.current.onend = onRecognitionEnd;\r\n-\r\n-//     return () => {\r\n-//       if (recognition.current) {\r\n-//         recognition.current.abort();\r\n-//       }\r\n-//     };\r\n-//   }, [location.pathname]);\r\n-\r\n-//   const onResult = (event) => {\r\n-//     const resultIndex = event.resultIndex;\r\n-//     const transcript = event.results[resultIndex][0].transcript\r\n-//       .trim()\r\n-//       .toLowerCase();\r\n-\r\n-//     if (event.results[resultIndex].isFinal) {\r\n-//       console.log(`Recognized text: ${transcript}`);\r\n-//       if (transcript.includes(\"brain\")) {\r\n-//         console.log(\"Wake word heard, processing command...\");\r\n-//         handleCommandWithFuse(transcript.replace(\"brain\", \"\"));\r\n-//       }\r\n-//     }\r\n-//   };\r\n-\r\n-//   const startListening = () => {\r\n-//     if (!isRecognitionActive.current) {\r\n-//       setIsListening(true);\r\n-//       recognition.current.start();\r\n-//       isRecognitionActive.current = true;\r\n-//     }\r\n-//   };\r\n-\r\n-//   const stopListening = () => {\r\n-//     if (isRecognitionActive.current) {\r\n-//       setIsListening(false);\r\n-//       recognition.current.stop();\r\n-//       isRecognitionActive.current = false;\r\n-//     }\r\n-//   };\r\n-\r\n-//   const onRecognitionEnd = () => {\r\n-//     isRecognitionActive.current = false;\r\n-//     if (isListening) {\r\n-//       startListening();\r\n-//     }\r\n-//   };\r\n-\r\n-//   const speak = (message) => {\r\n-//     const utterance = new SpeechSynthesisUtterance(message);\r\n-//     utterance.onend = () => {\r\n-//       setIsSpeaking(false);\r\n-//       if (isListening && !isRecognitionActive.current) {\r\n-//         startListening();\r\n-//       }\r\n-//     };\r\n-\r\n-//     setIsSpeaking(true);\r\n-//     if (isRecognitionActive.current) {\r\n-//       stopListening(); // Adjusted to use stopListening\r\n-//     }\r\n-//     speechSynthesis.current.speak(utterance);\r\n-//   };\r\n-\r\n-//   useEffect(() => {\r\n-//     if (isListening && !hasGreeted.current) {\r\n-//       speak(\"Hello, I'm Brane. How can I assist you today?\");\r\n-//       hasGreeted.current = true;\r\n-//     }\r\n-//   }, [isListening]);\r\n-\r\n-//   const goBack = () => {\r\n-//     if (window.history.length > 1) {\r\n-//       navigate(-1);\r\n-//     } else {\r\n-//       speak(\"Can't go back any further.\");\r\n-//     }\r\n-//   };\r\n-\r\n-//   const goForward = () => {\r\n-//     // Unfortunately, there's no direct way to check if you can go forward in the history.\r\n-//     // You might need to manage this state manually based on user navigation.\r\n-//     navigate(1);\r\n-//   };\r\n-\r\n-//   const playVideo = () => {\r\n-//     if (videoRef.current && !videoRef.current.paused) {\r\n-//       speak(\"Video is already playing.\");\r\n-//     } else if (videoRef.current) {\r\n-//       videoRef.current.play();\r\n-//       speak(\"Playing video.\");\r\n-//     } else {\r\n-//       speak(\"No video to play.\");\r\n-//     }\r\n-//   };\r\n-\r\n-//   const pauseVideo = () => {\r\n-//     if (videoRef.current && videoRef.current.paused) {\r\n-//       speak(\"Video is already paused.\");\r\n-//     } else if (videoRef.current) {\r\n-//       videoRef.current.pause();\r\n-//       speak(\"Video paused.\");\r\n-//     } else {\r\n-//       speak(\"No video to pause.\");\r\n-//     }\r\n-//   };\r\n-\r\n-//   const scrollAmount = window.innerHeight * 0.82;\r\n-\r\n-//   const scrollUp = () => {\r\n-//     if (window.pageYOffset === 0) {\r\n-//       speak(\"Already at the top of the page.\");\r\n-//     } else {\r\n-//       window.scrollBy(0, -scrollAmount);\r\n-//       speak(\"Scrolled up.\");\r\n-//     }\r\n-//   };\r\n-\r\n-//   const scrollDown = () => {\r\n-//     const maxScrollTop =\r\n-//       document.documentElement.scrollHeight - window.innerHeight;\r\n-//     if (window.pageYOffset >= maxScrollTop) {\r\n-//       speak(\"Already at the bottom of the page.\");\r\n-//     } else {\r\n-//       window.scrollBy(0, scrollAmount);\r\n-//       speak(\"Scrolled down.\");\r\n-//     }\r\n-//   };\r\n-\r\n-//   const scrollToTop = () => {\r\n-//     if (window.pageYOffset === 0) {\r\n-//       speak(\"Already at the top of the page.\");\r\n-//     } else {\r\n-//       window.scrollTo(0, 0);\r\n-//       speak(\"Scrolled to the top of the page.\");\r\n-//     }\r\n-//   };\r\n-\r\n-//   const scrollToBottom = () => {\r\n-//     const maxScrollTop =\r\n-//       document.documentElement.scrollHeight - window.innerHeight;\r\n-//     if (window.pageYOffset >= maxScrollTop) {\r\n-//       speak(\"Already at the bottom of the page.\");\r\n-//     } else {\r\n-//       window.scrollTo(0, document.body.scrollHeight);\r\n-//       speak(\"Scrolled to the bottom of the page.\");\r\n-//     }\r\n-//   };\r\n-\r\n-//   // const speak = (message) => {\r\n-//   //   const utterance = new SpeechSynthesisUtterance(message);\r\n-//   //   utterance.onend = () => {\r\n-//   //     setIsSpeaking(false);\r\n-//   //     console.log(\"Speaking ended.\");\r\n-//   //     // Only restart recognition if we're still supposed to be listening\r\n-//   //     // if (isListening) {\r\n-//   //     //   if (restartRecognitionTimeout.current) {\r\n-//   //     //     clearTimeout(restartRecognitionTimeout.current);\r\n-//   //     //   }\r\n-//   //     //   restartRecognitionTimeout.current = setTimeout(() => {\r\n-//   //     //     console.log(\"Recognition restarted.\");\r\n-//   //     //     recognition.current.start();\r\n-//   //     //   }, 100); // Delay to prevent immediate restart\r\n-//   //     // }\r\n-//   //     if (isListening && !recognition.current.starting) { // Check the flag before restarting\r\n-//   //       recognition.current.starting = true; // Set the flag when starting recognition\r\n-//   //       recognition.current.start();\r\n-//   //     }\r\n-//   //   };\r\n-\r\n-//   //   setIsSpeaking(true);\r\n-//   //   console.log(\"Speaking started.\");\r\n-//   //   recognition.current.stop(); // Stop recognition when the bot starts speaking\r\n-//   //   speechSynthesis.current.speak(utterance);\r\n-//   // };\r\n-\r\n-//   // const onRecognitionEnd = () => {\r\n-//   //   console.log(\"Recognition ended.\");\r\n-//   //   setIsRecognitionActive(false); // Update state when recognition ends\r\n-//   //   recognition.current.starting = false; // Reset the flag when recognition ends\r\n-//   //   // We now check if the recognition is already running before starting it again\r\n-//   //   if (isListening && !isSpeaking && !recognition.current?.starting) {\r\n-//   //     console.log(\"Restarting recognition.\");\r\n-//   //     recognition.current.start();\r\n-//   //   }\r\n-//   // };\r\n-\r\n-//   // useEffect(() => {\r\n-//   //   if (isListening && !hasGreeted.current) {\r\n-//   //     speak(\"Hello, I'm Brane. How can I assist you today?\");\r\n-//   //     hasGreeted.current = true;\r\n-//   //   } else if (isListening && !isSpeaking) {\r\n-//   //     recognition.current.start();\r\n-//   //   }\r\n-//   // }, [isListening, isSpeaking]);\r\n-\r\n-//   // const startListening = () => {\r\n-//   //   console.log(\"Attempting to start listening.\");\r\n-//   //   if (recognition.current && !recognition.current.starting) {\r\n-//   //     setIsListening(true);\r\n-//   //     recognition.current.starting = true; // Set the flag when starting recognition\r\n-//   //     recognition.current.start();\r\n-//   //     console.log(\"Listening started.\");\r\n-//   //   }\r\n-//   // };\r\n-\r\n-//   // const stopListening = () => {\r\n-//   //   console.log(\"Stopping listening.\");\r\n-\r\n-//   //   setIsListening(false);\r\n-//   //   recognition.current.stop();\r\n-//   //   if (speechSynthesis.current.speaking) {\r\n-//   //     speechSynthesis.current.cancel();\r\n-//   //   }\r\n-//   //   if (restartRecognitionTimeout.current) {\r\n-//   //     clearTimeout(restartRecognitionTimeout.current);\r\n-//   //   }\r\n-//   //   console.log(\"Listening stopped.\");\r\n-//   // };\r\n-//   // Handle start and stop listening logic\r\n-\r\n-//   useEffect(() => {\r\n-//     if (isListening && !hasGreeted.current) {\r\n-//       speak(\"Hello, I'm Brane. How can I assist you today?\");\r\n-//       hasGreeted.current = true;\r\n-//     }\r\n-//   }, [isListening]);\r\n-\r\n-//   // const handleCommandWithFuse = (command) => {\r\n-//   //   const fuse = new Fuse(commands, { keys: [\"utterance\"], threshold: 0.4 });\r\n-//   //   const results = fuse.search(command);\r\n-//   //   const foundCommand = results.length ? results[0].item : null;\r\n-\r\n-//   //   if (foundCommand) {\r\n-//   //     console.log(\"Command found:\", foundCommand.utterance);\r\n-//   //     speak(foundCommand.response);\r\n-//   //     if (foundCommand.route) {\r\n-//   //       navigate(foundCommand.route); // Navigate to the route specified in the command\r\n-//   //     }\r\n-//   //   } else {\r\n-//   //     console.log(\"No command found.\");\r\n-//   //     speak(\"I'm not sure how to respond to that.\");\r\n-//   //   }\r\n-//   // };\r\n-\r\n-//   const handleCommandWithFuse = (command) => {\r\n-//     const fuse = new Fuse(commands, { keys: [\"utterance\"], threshold: 0.4 });\r\n-//     const results = fuse.search(command);\r\n-//     const foundCommand = results.length ? results[0].item : null;\r\n-\r\n-//     if (foundCommand) {\r\n-//       console.log(\"Command found:\", foundCommand.utterance);\r\n-\r\n-//       if (foundCommand.action) {\r\n-//         foundCommand.action();\r\n-//       } else if (foundCommand.route) {\r\n-//         navigate(foundCommand.route);\r\n-//       }\r\n-\r\n-//       if (foundCommand.response) {\r\n-//         speak(foundCommand.response);\r\n-//       }\r\n-//     } else {\r\n-//       console.log(\"No command found.\");\r\n-//       speak(\"I'm not sure how to respond to that.\");\r\n-//     }\r\n-//   };\r\n-\r\n-//   const commands = [\r\n-//     {\r\n-//       utterance: \"Hello who are you ?\",\r\n-\r\n-//       response:\r\n-//         \"Hi! This is Brane! your Voice bot from Brane Education How can I Assist you Today ?\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"Hello\",\r\n-\r\n-//       response: \"Hi! How can I assist you today?\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"hello\",\r\n-\r\n-//       response: \"Hi! How can I assist you today?\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"Hi.\",\r\n-\r\n-//       response: \"Hello! How can I assist you today?\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"Hey there\",\r\n-\r\n-//       response: \"Hi! How can I assist you today?\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"Good morning Brane.\",\r\n-\r\n-//       response: \"Hey Hiii! Good morning  ! How can I help you?\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"Good afternoon Brane.\",\r\n-\r\n-//       response: \"Hey Hiii! Good after noon ! How can I help you?\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"Good evening Brane.\",\r\n-\r\n-//       response: \"Hey Hiii! Good evening ! How can I help you?\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"can you please take me to login page\",\r\n-//       route: \"/login\",\r\n-//       routeDescription: \"login page\",\r\n-//       response: \"Navigating to the login page.\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"go to login page\",\r\n-//       route: \"/login\",\r\n-//       routeDescription: \"login page\",\r\n-//       response: \"Navigating to the login page.\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"please take me to login page\",\r\n-//       route: \"/login\",\r\n-//       routeDescription: \"login page\",\r\n-//       response: \"Navigating to the login page.\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"Go to login page\",\r\n-//       route: \"/login\",\r\n-//       routeDescription: \"login page\",\r\n-//       response: \"Navigating to the login page.\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"open login page\",\r\n-//       route: \"/login\",\r\n-//       routeDescription: \"login page\",\r\n-//       response: \"Navigating to the login page.\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"can you please take me to signup page\",\r\n-//       route: \"/signup\",\r\n-//       routeDescription: \"signup page\",\r\n-//       response: \"Navigating to the signup page.\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"take me to signup page\",\r\n-//       route: \"/signup\",\r\n-//       routeDescription: \"signup page\",\r\n-//       response: \"Navigating to the signup page.\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"Go to signup page\",\r\n-//       route: \"/signup\",\r\n-//       routeDescription: \"signup page\",\r\n-//       response: \"Navigating to the signup page.\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"open signup page\",\r\n-//       route: \"/signup\",\r\n-//       routeDescription: \"signup page\",\r\n-//       response: \"Navigating to the signup page.\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"what are platform features\",\r\n-\r\n-//       response:\r\n-//         \"Dashboard, Dynamic time table, Learning Networks, Little Masters, Video Based Dictionary, General Search.\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"Features of platform\",\r\n-\r\n-//       response:\r\n-//         \"Dashboard, Dynamic time table, Learning Networks, Little Masters, Video Based Dictionary, General Search.\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"What does the platform offer\",\r\n-\r\n-//       response:\r\n-//         \"Dashboard, Dynamic time table, Learning Networks, Little Masters, Video Based Dictionary, General Search.\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"Say me the features of platform\",\r\n-\r\n-//       response:\r\n-//         \"Dashboard, Dynamic time table, Learning Networks, Little Masters, Video Based Dictionary, General Search.\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"Say me the services of platform\",\r\n-\r\n-//       response:\r\n-//         \"Dashboard, Dynamic time table, Learning Networks, Little Masters, Video Based Dictionary, General Search.\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"tell me the services offered by the platform\",\r\n-\r\n-//       response:\r\n-//         \"Dashboard, Dynamic time table, Learning Networks, Little Masters, Video Based Dictionary, General Search.\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"explain platform services\",\r\n-\r\n-//       response:\r\n-//         \"Dashboard, Dynamic time table, Learning Networks, Little Masters, Video Based Dictionary, General Search.\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"Give me the Parent voice of Julia Harris\",\r\n-\r\n-//       response:\r\n-//         \"Brane education has helped my son a lot in his studies. He improved a lot in his studies and is now able to score good marks in his exams\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"Play today's motivational video\",\r\n-\r\n-//       response: \"I am playing the video\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"Play today's video\",\r\n-\r\n-//       response: \"I am playing Motivational video\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"Leaders Voice\",\r\n-\r\n-//       response:\r\n-//         \"This Voice-interactive AI Platform is a game Changer. It revolutionizes education.\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"Curriculum Supported by Brane Education\",\r\n-\r\n-//       response:\r\n-//         \"we support multiple Boards let me say few Telangana State Board Andhra Pradesh Board Maharashtra Board Assam Board\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"Boards supported by the platform\",\r\n-\r\n-//       response:\r\n-//         \"we support multiple Boards let me say few Telangana State Board Andhra Pradesh Board Maharashtra Board Assam Board\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"Curriculum\",\r\n-\r\n-//       response:\r\n-//         \"we support multiple Boards let me say few Telangana State Board Andhra Pradesh Board Maharashtra Board Assam Board\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"Go to landing page\",\r\n-\r\n-//       response: \"Okay, I am taking you to the landing page.\",\r\n-\r\n-//       route: \"/childpage\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"take me to landing page\",\r\n-\r\n-//       response: \"Okay, I am taking you to the landing page.\",\r\n-\r\n-//       route: \"/childpage\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"move to landing page\",\r\n-\r\n-//       response: \"Okay, I am taking you to the landing page.\",\r\n-\r\n-//       route: \"/childpage\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"roll back to landing page\",\r\n-\r\n-//       response: \"Okay, I am taking you to the landing page.\",\r\n-\r\n-//       route: \"/childpage\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"move to landing page\",\r\n-\r\n-//       response: \"Okay, I am taking you to the landing page.\",\r\n-\r\n-//       route: \"/childpage\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"what is today's quote\",\r\n-\r\n-//       response:\r\n-//         \"Determination is the power that sees us through all our frustration and obstacles. It helps in building our willpower which is the very basis of success.\",\r\n-\r\n-//       // route: \"/childpage\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"Today's Inspirational quote\",\r\n-\r\n-//       response:\r\n-//         \"Determination is the power that sees us through all our frustration and obstacles. It helps in building our willpower which is the very basis of success.\",\r\n-\r\n-//       // route: \"/childpage\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"say me today's quote\",\r\n-\r\n-//       response:\r\n-//         \"Determination is the power that sees us through all our frustration and obstacles. It helps in building our willpower which is the very basis of success.\",\r\n-\r\n-//       // route: \"/childpage\",\r\n-//     },\r\n-//     {\r\n-//       utterance: \"go back\",\r\n-//       response: \"Going back.\",\r\n-//       action: goBack, // Note the use of an action property\r\n-//     },\r\n-//     {\r\n-//       utterance: \"go forward\",\r\n-//       response: \"Going forward.\",\r\n-//       action: goForward,\r\n-//     },\r\n-//     {\r\n-//       utterance: \"play video\",\r\n-//       // response: \"Playing video.\",\r\n-//       action: playVideo,\r\n-//     },\r\n-//     {\r\n-//       utterance: \"pause video\",\r\n-//       // response: \"Pausing video.\",\r\n-//       action: pauseVideo,\r\n-//     },\r\n-//     {\r\n-//       utterance: \"start video\",\r\n-//       // response: \"Playing video.\",\r\n-//       action: playVideo,\r\n-//     },\r\n-//     {\r\n-//       utterance: \"stop video\",\r\n-//       // response: \"Playing video.\",\r\n-//       action: pauseVideo,\r\n-//     },\r\n-//     {\r\n-//       utterance: \"scroll up\",\r\n-//       // response: \"Scrolling up.\",\r\n-//       action: scrollUp,\r\n-//     },\r\n-//     {\r\n-//       utterance: \"scroll down\",\r\n-//       // response: \"Scrolling down.\",\r\n-//       action: scrollDown,\r\n-//     },\r\n-//     {\r\n-//       utterance: \"go up\",\r\n-\r\n-//       // response: \"Scrolling up.\",\r\n-//       action: scrollUp,\r\n-//     },\r\n-//     {\r\n-//       utterance: \"go down\",\r\n-//       // response: \"Scrolling down.\",\r\n-//       action: scrollDown,\r\n-//     },\r\n-//     {\r\n-//       utterance: \"scroll to top\",\r\n-//       action: scrollToTop,\r\n-//     },\r\n-//     {\r\n-//       utterance: \"scroll to bottom\",\r\n-//       action: scrollToBottom,\r\n-//     },\r\n-//     {\r\n-//       utterance: \"go back\",\r\n-//       action: goBackRef?.current?.click, // Use goBackRef directly\r\n-//       response: \"Going back.\",\r\n-//     },\r\n-//     {\r\n-//       utterance: \"take test\",\r\n-//       action: takeTestRef?.current?.click, // Use takeTestRef directly\r\n-//       response: \"Starting the test.\",\r\n-//     },\r\n-//   ];\r\n-//   return (\r\n-//     <div className=\"speech-bot-container\">\r\n-//       <div\r\n-//         className={`button-container ${\r\n-//           isListening ? \"voicebotframeactive\" : \"voicebotframe\"\r\n-//         }`}\r\n-//       >\r\n-//         <div onClick={isListening ? stopListening : startListening}>\r\n-//           <iframe\r\n-//             src={\r\n-//               isListening\r\n-//                 ? \"https://lottie.host/?file=a89aca3f-5407-4052-82c3-2048afca7a9f/NpCdWzLSKD.json\"\r\n-//                 : \"https://lottie.host/?file=d2b6cc0e-fe95-4847-85b5-35365fca7e00/vTudpCuPZq.json\"\r\n-//             }\r\n-//             width=\"120\" // Set your desired width\r\n-//             height=\"120\" // Set your desired height\r\n-//             title={isListening ? \"Stop Animation\" : \"Start Animation\"}\r\n-//             className={isListening ? \"voicebotframeactive\" : \"voicebotframe\"}\r\n-//           ></iframe>\r\n-//           {isListening ? (\r\n-//             <div className=\"overlay\" onClick={stopListening}></div>\r\n-//           ) : (\r\n-//             <div className=\"overlay\" onClick={startListening}></div>\r\n-//           )}\r\n-//         </div>\r\n-//       </div>\r\n-//     </div>\r\n-//   );\r\n-// };\r\n-\r\n-// export default VoiceBot;\r\n"
                },
                {
                    "date": 1700733166272,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,3759 @@\n+import React, { useState, useEffect, useRef } from \"react\";\r\n+import { useNavigate, useLocation } from \"react-router-dom\";\r\n+import Fuse from \"fuse.js\";\r\n+import \"./VoiceBot.css\";\r\n+import chatbotimage from \"../../assets/chatbotgif.gif\";\r\n+\r\n+const VoiceBot = ({ videoRefs }) => {\r\n+  const [isListening, setIsListening] = useState(false);\r\n+  const [isSpeaking, setIsSpeaking] = useState(false);\r\n+  const recognition = useRef(null);\r\n+  const speechSynthesis = useRef(window.speechSynthesis);\r\n+  const [hasGreeted, setHasGreeted] = useState(false);\r\n+  const navigate = useNavigate();\r\n+\r\n+  // Initialize speech recognition\r\n+  useEffect(() => {\r\n+    recognition.current = new window.webkitSpeechRecognition();\r\n+    recognition.current.continuous = true;\r\n+    recognition.current.interimResults = false;\r\n+    recognition.current.onresult = onResult;\r\n+    recognition.current.onend = onRecognitionEnd;\r\n+    recognition.current.starting = false;\r\n+\r\n+    recognition.current.onerror = (event) => {\r\n+      console.error(\"Recognition error:\", event.error);\r\n+      if (isListening && !isSpeaking) {\r\n+        restartRecognition();\r\n+      }\r\n+    };\r\n+\r\n+    return () => {\r\n+      if (recognition.current) {\r\n+        recognition.current.abort();\r\n+      }\r\n+    };\r\n+  }, []);\r\n+\r\n+  useEffect(() => {\r\n+    const checkRecognition = () => {\r\n+      if (isListening && !isSpeaking && !recognition.current.starting) {\r\n+        console.log(\"Restarting recognition because it's not active.\");\r\n+        recognition.current.starting = true;\r\n+        recognition.current.start();\r\n+        console.log(\"Restarted recognition.\");\r\n+      }\r\n+    };\r\n+\r\n+    const recognitionCheckInterval = setInterval(checkRecognition, 500); // Check every .5 second\r\n+\r\n+    return () => {\r\n+      clearInterval(recognitionCheckInterval);\r\n+    };\r\n+  }, [isListening, isSpeaking]);\r\n+\r\n+  const historyStack = useRef([]);\r\n+\r\n+  useEffect(() => {\r\n+    return () => {\r\n+      // Clean up the listener when the component unmounts\r\n+      window.removeEventListener(\"popstate\", handlePopState);\r\n+    };\r\n+  }, []);\r\n+\r\n+  const handlePopState = () => {\r\n+    // This needs to handle both back and forward browser actions\r\n+    // Use some logic to determine whether it's a back or forward action\r\n+    // For simplicity, assume it's always back\r\n+    historyStack.current.pop();\r\n+    forwardStack.current.length = 0; // Clear forward stack on manual navigation\r\n+  };\r\n+\r\n+  // Listen to popstate events to update the history stack\r\n+  useEffect(() => {\r\n+    window.addEventListener(\"popstate\", handlePopState);\r\n+  }, []);\r\n+\r\n+  const forwardStack = useRef([]);\r\n+\r\n+  const goBack = () => {\r\n+    if (window.history.state && window.history.state.idx > 0) {\r\n+      window.history.back();\r\n+      speak(\"Going back\");\r\n+    } else {\r\n+      speak(\"Can't go back any further.\");\r\n+    }\r\n+  };\r\n+\r\n+  const goForward = () => {\r\n+    if (\r\n+      window.history.state &&\r\n+      window.history.state.idx < window.history.length - 1\r\n+    ) {\r\n+      window.history.forward();\r\n+      speak(\"Going forward\");\r\n+    } else {\r\n+      speak(\"No forward history available.\");\r\n+    }\r\n+  };\r\n+\r\n+  const scrollAmount = window.innerHeight * 0.82;\r\n+\r\n+  const scrollUp = () => {\r\n+    if (window.pageYOffset === 0) {\r\n+      speak(\"Already at the top of the page.\");\r\n+    } else {\r\n+      window.scrollBy(0, -scrollAmount);\r\n+      speak(\"Scrolled up.\");\r\n+    }\r\n+  };\r\n+\r\n+  const scrollDown = () => {\r\n+    const maxScrollTop =\r\n+      document.documentElement.scrollHeight - window.innerHeight;\r\n+    if (window.pageYOffset >= maxScrollTop) {\r\n+      speak(\"Already at the bottom of the page.\");\r\n+    } else {\r\n+      window.scrollBy(0, scrollAmount);\r\n+      speak(\"Scrolled down.\");\r\n+    }\r\n+  };\r\n+\r\n+  const scrollToTop = () => {\r\n+    if (window.pageYOffset === 0) {\r\n+      speak(\"Already at the top of the page.\");\r\n+    } else {\r\n+      window.scrollTo(0, 0);\r\n+      speak(\"Scrolled to the top of the page.\");\r\n+    }\r\n+  };\r\n+\r\n+  const scrollToBottom = () => {\r\n+    const maxScrollTop =\r\n+      document.documentElement.scrollHeight - window.innerHeight;\r\n+    if (window.pageYOffset >= maxScrollTop) {\r\n+      speak(\"Already at the bottom of the page.\");\r\n+    } else {\r\n+      window.scrollTo(0, document.body.scrollHeight);\r\n+      speak(\"Scrolled to the bottom of the page.\");\r\n+    }\r\n+  };\r\n+\r\n+\r\n+  const controlVideo = (videoId, action) => {\r\n+    const videoRef = videoRefs.current.get(videoId);\r\n+    if (videoRef && videoRef.current) {\r\n+      switch (action) {\r\n+        case 'play':\r\n+          videoRef.current.play();\r\n+          break;\r\n+        case 'pause':\r\n+          videoRef.current.pause();\r\n+          break;\r\n+        case 'mute':\r\n+          videoRef.current.muted = true;\r\n+          break;\r\n+        case 'unmute':\r\n+          videoRef.current.muted = false;\r\n+          break;\r\n+        case 'fullscreen':\r\n+          if (videoRef.current.requestFullscreen) {\r\n+            videoRef.current.requestFullscreen();\r\n+          } else if (videoRef.current.webkitRequestFullscreen) { // Safari\r\n+            videoRef.current.webkitRequestFullscreen();\r\n+          } else if (videoRef.current.msRequestFullscreen) { // IE11\r\n+            videoRef.current.msRequestFullscreen();\r\n+          }\r\n+          break;\r\n+        case 'exitFullscreen':\r\n+          if (document.exitFullscreen) {\r\n+            document.exitFullscreen();\r\n+          } else if (document.webkitExitFullscreen) { // Safari\r\n+            document.webkitExitFullscreen();\r\n+          } else if (document.msExitFullscreen) { // IE11\r\n+            document.msExitFullscreen();\r\n+          }\r\n+          break;\r\n+        case 'increaseVolume':\r\n+          if (videoRef.current.volume < 1) {\r\n+            videoRef.current.volume = Math.min(1, videoRef.current.volume + 0.1);\r\n+          }\r\n+          break;\r\n+        case 'decreaseVolume':\r\n+          if (videoRef.current.volume > 0) {\r\n+            videoRef.current.volume = Math.max(0, videoRef.current.volume - 0.1);\r\n+          }\r\n+          break;\r\n+        // Add other cases as needed\r\n+      }\r\n+      speak(`${action.charAt(0).toUpperCase() + action.slice(1).replace(/([A-Z])/g, ' $1').toLowerCase()}ing video.`);\r\n+    } else {\r\n+      speak(`Video not found.`);\r\n+    }\r\n+  };\r\n+\r\n+  const speak = (message) => {\r\n+    const utterance = new SpeechSynthesisUtterance(message);\r\n+    utterance.onend = () => {\r\n+      setIsSpeaking(false);\r\n+      // Restart recognition after speaking has ended\r\n+      if (isListening) {\r\n+        restartRecognition();\r\n+      }\r\n+    };\r\n+\r\n+    setIsSpeaking(true);\r\n+    // Stop recognition when the bot starts speaking\r\n+    if (recognition.current) {\r\n+      recognition.current.abort();\r\n+    }\r\n+    speechSynthesis.current.speak(utterance);\r\n+  };\r\n+\r\n+  const restartRecognition = () => {\r\n+    // Check if recognition is not already started and if the bot is set to listen\r\n+    if (\r\n+      recognition.current &&\r\n+      !recognition.current.starting &&\r\n+      isListening &&\r\n+      !isSpeaking\r\n+    ) {\r\n+      recognition.current.abort(); // Ensure any ongoing recognition is stopped\r\n+      recognition.current.starting = true;\r\n+      recognition.current.start();\r\n+    }\r\n+  };\r\n+\r\n+  // Restart recognition when bot finishes speaking and isListening is true\r\n+  useEffect(() => {\r\n+    if (!isSpeaking && isListening) {\r\n+      restartRecognition();\r\n+    }\r\n+  }, [isSpeaking, isListening]);\r\n+\r\n+  const onResult = (event) => {\r\n+    const resultIndex = event.resultIndex;\r\n+    const transcript = event.results[resultIndex][0].transcript\r\n+      .trim()\r\n+      .toLowerCase();\r\n+\r\n+    if (event.results[resultIndex].isFinal) {\r\n+      console.log(`Recognized text: ${transcript}`);\r\n+      if (transcript.includes(\"brain\")) {\r\n+        console.log(\"Wake word heard, processing command...\");\r\n+        handleCommandWithFuse(transcript.replace(\"brain\", \"\"));\r\n+      }\r\n+    }\r\n+  };\r\n+\r\n+  const onRecognitionEnd = () => {\r\n+    recognition.current.starting = false;\r\n+    if (isListening && !isSpeaking) {\r\n+      restartRecognition();\r\n+    }\r\n+  };\r\n+\r\n+  useEffect(() => {\r\n+    if (isListening && !hasGreeted) {\r\n+      speak(\"Hello, I'm Brane. How can I help you today?\");\r\n+      setHasGreeted(true);\r\n+    }\r\n+  }, [isListening, hasGreeted]);\r\n+\r\n+  // Updated startListening function\r\n+  const startListening = () => {\r\n+    setIsListening(true);\r\n+    if (!recognition.current.starting) {\r\n+      restartRecognition();\r\n+    }\r\n+  };\r\n+\r\n+  // Updated stopListening function\r\n+  const stopListening = () => {\r\n+    setIsListening(false);\r\n+    if (speechSynthesis.current.speaking) {\r\n+      speechSynthesis.current.cancel();\r\n+    }\r\n+    recognition.current.abort();\r\n+  };\r\n+\r\n+  const handleCommandWithFuse = (command) => {\r\n+    const fuse = new Fuse(commands, { keys: [\"utterance\"], threshold: 0.4 });\r\n+    const results = fuse.search(command);\r\n+    const foundCommand = results.length ? results[0].item : null;\r\n+\r\n+    if (foundCommand) {\r\n+      console.log(\"Command found:\", foundCommand.utterance);\r\n+\r\n+      if (foundCommand.action) {\r\n+        foundCommand.action();\r\n+      } else if (foundCommand.route) {\r\n+        navigate(foundCommand.route);\r\n+      }\r\n+\r\n+      // Speak after performing the action or navigation\r\n+      speak(foundCommand.response);\r\n+    } else {\r\n+      console.log(\"No command found.\");\r\n+      speak(\"I'm not sure how to respond to that.\");\r\n+    }\r\n+  };\r\n+\r\n+  const commands = [\r\n+    {\r\n+      utterance: \"Hello who are you ?\",\r\n+\r\n+      response:\r\n+        \"Hi! This is Brane! your Voice bot from Brane Education How can I Assist you Today ?\",\r\n+    },\r\n+\r\n+    {\r\n+      utterance: \"Hello\",\r\n+\r\n+      response: \"Hi! How can I assist you today?\",\r\n+    },\r\n+\r\n+    {\r\n+      utterance: \"hello\",\r\n+\r\n+      response: \"Hi! How can I assist you today?\",\r\n+    },\r\n+\r\n+    {\r\n+      utterance: \"Hi.\",\r\n+\r\n+      response: \"Hello! How can I assist you today?\",\r\n+    },\r\n+\r\n+    {\r\n+      utterance: \"Hey there\",\r\n+\r\n+      response: \"Hi! How can I assist you today?\",\r\n+    },\r\n+\r\n+    {\r\n+      utterance: \"Good morning Brane.\",\r\n+\r\n+      response: \"Hey Hiii! Good morning  ! How can I help you?\",\r\n+    },\r\n+\r\n+    {\r\n+      utterance: \"Good afternoon Brane.\",\r\n+\r\n+      response: \"Hey Hiii! Good after noon ! How can I help you?\",\r\n+    },\r\n+\r\n+    {\r\n+      utterance: \"Good evening Brane.\",\r\n+\r\n+      response: \"Hey Hiii! Good evening ! How can I help you?\",\r\n+    },\r\n+\r\n+    {\r\n+      utterance: \"take me to homepage\",\r\n+\r\n+      route: \"/\",\r\n+\r\n+      response: \"You're in Homepage now\",\r\n+    },\r\n+    {\r\n+      utterance: \"open homepage\",\r\n+\r\n+      route: \"/\",\r\n+\r\n+      response: \"You're in Homepage now\",\r\n+    },\r\n+    {\r\n+      utterance: \"go to homepage\",\r\n+\r\n+      route: \"/\",\r\n+\r\n+      response: \"You're in Homepage now\",\r\n+    },\r\n+    {\r\n+      utterance: \"go back to homepage\",\r\n+\r\n+      route: \"/\",\r\n+\r\n+      response: \"You're in Homepage now\",\r\n+    },\r\n+    {\r\n+      utterance: \"can you please take me to login page\",\r\n+\r\n+      route: \"/login\",\r\n+\r\n+      response: \"Here's the Login Page, Please Login\",\r\n+    },\r\n+\r\n+    {\r\n+      utterance: \"please take me to login page\",\r\n+\r\n+      route: \"/login\",\r\n+\r\n+      response: \"Here's the Login Page, Please Login\",\r\n+    },\r\n+\r\n+    {\r\n+      utterance: \"Go to login page\",\r\n+\r\n+      route: \"/login\",\r\n+\r\n+      response: \"Here's the Login Page, Please Login\",\r\n+    },\r\n+\r\n+    {\r\n+      utterance: \"open login page\",\r\n+\r\n+      route: \"/login\",\r\n+\r\n+      response: \"Here's the Login Page, Please Login\",\r\n+    },\r\n+\r\n+    {\r\n+      utterance: \"can you please take me to signup page\",\r\n+\r\n+      route: \"/signup\",\r\n+\r\n+      response: \"Here's the signup page. Please proceed With Registration.\",\r\n+    },\r\n+\r\n+    {\r\n+      utterance: \"take me to signup page\",\r\n+\r\n+      route: \"/signup\",\r\n+\r\n+      response: \"Here's the signup page. Please proceed With Registration.\",\r\n+    },\r\n+\r\n+    {\r\n+      utterance: \"Go to signup page\",\r\n+\r\n+      route: \"/signup\",\r\n+\r\n+      response: \"Here's the signup page. Please proceed With Registration.\",\r\n+    },\r\n+\r\n+    {\r\n+      utterance: \"open signup page\",\r\n+\r\n+      route: \"/signup\",\r\n+\r\n+      response: \"Here's the signup page. Please proceed With Registration.\",\r\n+    },\r\n+\r\n+    {\r\n+      utterance: \"Go to face id\",\r\n+\r\n+      route: \"/login/faceid\",\r\n+\r\n+      response: \"Here's Face ID Login. Please proceed.\",\r\n+    },\r\n+\r\n+    {\r\n+      utterance: \"Go to face id login\",\r\n+\r\n+      route: \"/login/faceid\",\r\n+\r\n+      response: \"Here's Face ID Login. Please proceed.\",\r\n+    },\r\n+    {\r\n+      utterance: \"Go to face login\",\r\n+\r\n+      route: \"/login/faceid\",\r\n+\r\n+      response: \"Here's Face ID Login. Please proceed.\",\r\n+    },\r\n+\r\n+    {\r\n+      utterance: \"login with face id\",\r\n+\r\n+      route: \"/login/faceid\",\r\n+\r\n+      response: \"Here's Face ID Login. Please proceed.\",\r\n+    },\r\n+\r\n+    {\r\n+      utterance: \"login with face\",\r\n+\r\n+      route: \"/login/faceid\",\r\n+\r\n+      response: \"Here's Face ID Login. Please proceed.\",\r\n+    },\r\n+\r\n+    {\r\n+      utterance: \"i want to login with face\",\r\n+\r\n+      route: \"/login/faceid\",\r\n+\r\n+      response: \"Here's Face ID Login. Please proceed.\",\r\n+    },\r\n+\r\n+    {\r\n+      utterance: \"login with voice\",\r\n+\r\n+      route: \"/login/voiceid\",\r\n+\r\n+      response: \"Here's Voice Login. Please proceed.\",\r\n+    },\r\n+\r\n+    {\r\n+      utterance: \"i want to login with voice\",\r\n+\r\n+      route: \"/login/voiceid\",\r\n+\r\n+      response: \"Here's Voice Login. Please proceed.\",\r\n+    },\r\n+\r\n+    {\r\n+      utterance: \"go to voice login\",\r\n+\r\n+      route: \"/login/voiceid\",\r\n+\r\n+      response: \"Here's Voice Login. Please proceed.\",\r\n+    },\r\n+\r\n+    {\r\n+      utterance: \"login with voice\",\r\n+\r\n+      route: \"/login/voiceid\",\r\n+\r\n+      response: \"Here's Voice Login. Please proceed.\",\r\n+    },\r\n+\r\n+    {\r\n+      utterance: \"login with mobile\",\r\n+\r\n+      route: \"/login/mobile\",\r\n+\r\n+      response: \"Here's Mobile Login. Please proceed.\",\r\n+    },\r\n+\r\n+    {\r\n+      utterance: \"i want to login with mobile\",\r\n+\r\n+      route: \"/login/mobile\",\r\n+\r\n+      response: \"Here's Mobile Login. Please proceed.\",\r\n+    },\r\n+    {\r\n+      utterance: \"go to mobile login\",\r\n+\r\n+      route: \"/login/mobile\",\r\n+\r\n+      response: \"Here's Mobile Login. Please proceed.\",\r\n+    },\r\n+    {\r\n+      utterance: \"go to about page\",\r\n+\r\n+      route: \"/aboutus\",\r\n+\r\n+      response: \"This is About us.\",\r\n+    },\r\n+    {\r\n+      utterance: \"go to about us page\",\r\n+\r\n+      route: \"/aboutus\",\r\n+\r\n+      response: \"This is About us.\",\r\n+    },\r\n+    {\r\n+      utterance: \"open about us page\",\r\n+\r\n+      route: \"/aboutus\",\r\n+\r\n+      response: \"This is About us.\",\r\n+    },\r\n+    {\r\n+      utterance: \"open about page\",\r\n+\r\n+      route: \"/aboutus\",\r\n+\r\n+      response: \"This is About us.\",\r\n+    },\r\n+    {\r\n+      utterance: \"take me to about page\",\r\n+\r\n+      route: \"/aboutus\",\r\n+\r\n+      response: \"This is About us.\",\r\n+    },\r\n+    {\r\n+      utterance: \"take me to about us page\",\r\n+\r\n+      route: \"/aboutus\",\r\n+\r\n+      response: \"This is About us.\",\r\n+    },\r\n+\r\n+    {\r\n+      utterance: \"go to contact page\",\r\n+\r\n+      route: \"/contactus\",\r\n+\r\n+      response: \"You can contact us from here\",\r\n+    },\r\n+    {\r\n+      utterance: \"go to contact us page\",\r\n+\r\n+      route: \"/contactus\",\r\n+\r\n+      response: \"You can contact us from here\",\r\n+    },\r\n+    {\r\n+      utterance: \"open contact us page\",\r\n+\r\n+      route: \"/contactus\",\r\n+\r\n+      response: \"You can contact us from here\",\r\n+    },\r\n+    {\r\n+      utterance: \"open contact page\",\r\n+\r\n+      route: \"/contactus\",\r\n+\r\n+      response: \"You can contact us from here\",\r\n+    },\r\n+    {\r\n+      utterance: \"take me to about page\",\r\n+\r\n+      route: \"/contactus\",\r\n+\r\n+      response: \"You can contact us from here\",\r\n+    },\r\n+    {\r\n+      utterance: \"take me to contact us page\",\r\n+\r\n+      route: \"/contactus\",\r\n+\r\n+      response: \"You can contact us from here\",\r\n+    },\r\n+\r\n+    {\r\n+      utterance: \"what are platform features\",\r\n+\r\n+      response:\r\n+        \"Dashboard, Dynamic time table, Learning Networks, Little Masters, Video Based Dictionary, General Search.\",\r\n+    },\r\n+\r\n+    {\r\n+      utterance: \"Features of platform\",\r\n+\r\n+      response:\r\n+        \"Dashboard, Dynamic time table, Learning Networks, Little Masters, Video Based Dictionary, General Search.\",\r\n+    },\r\n+\r\n+    {\r\n+      utterance: \"What does the platform offer\",\r\n+\r\n+      response:\r\n+        \"Dashboard, Dynamic time table, Learning Networks, Little Masters, Video Based Dictionary, General Search.\",\r\n+    },\r\n+\r\n+    {\r\n+      utterance: \"Say me the features of platform\",\r\n+\r\n+      response:\r\n+        \"Dashboard, Dynamic time table, Learning Networks, Little Masters, Video Based Dictionary, General Search.\",\r\n+    },\r\n+\r\n+    {\r\n+      utterance: \"Say me the services of platform\",\r\n+\r\n+      response:\r\n+        \"Dashboard, Dynamic time table, Learning Networks, Little Masters, Video Based Dictionary, General Search.\",\r\n+    },\r\n+\r\n+    {\r\n+      utterance: \"tell me the services offered by the platform\",\r\n+\r\n+      response:\r\n+        \"Dashboard, Dynamic time table, Learning Networks, Little Masters, Video Based Dictionary, General Search.\",\r\n+    },\r\n+\r\n+    {\r\n+      utterance: \"explain platform services\",\r\n+\r\n+      response:\r\n+        \"Dashboard, Dynamic time table, Learning Networks, Little Masters, Video Based Dictionary, General Search.\",\r\n+    },\r\n+\r\n+    {\r\n+      utterance: \"Give me the Parent voice of Julia Harris\",\r\n+\r\n+      response:\r\n+        \"Brane education has helped my son a lot in his studies. He improved a lot in his studies and is now able to score good marks in his exams\",\r\n+    },\r\n+\r\n+    {\r\n+      utterance: \"Leaders Voice\",\r\n+\r\n+      response:\r\n+        \"This Voice-interactive AI Platform is a game Changer. It revolutionizes education.\",\r\n+    },\r\n+\r\n+    {\r\n+      utterance: \"Curriculum Supported by Brane Education\",\r\n+\r\n+      response:\r\n+        \"we support multiple Boards let me say few Telangana State Board Andhra Pradesh Board Maharashtra Board Assam Board\",\r\n+    },\r\n+\r\n+    {\r\n+      utterance: \"Boards supported by the platform\",\r\n+\r\n+      response:\r\n+        \"we support multiple Boards let me say few Telangana State Board Andhra Pradesh Board Maharashtra Board Assam Board\",\r\n+    },\r\n+\r\n+    {\r\n+      utterance: \"Curriculum\",\r\n+\r\n+      response:\r\n+        \"we support multiple Boards let me say few Telangana State Board Andhra Pradesh Board Maharashtra Board Assam Board\",\r\n+    },\r\n+\r\n+    {\r\n+      utterance: \"what is today's quote\",\r\n+\r\n+      response:\r\n+        \"Determination is the power that sees us through all our frustration and obstacles. It helps in building our willpower which is the very basis of success.\",\r\n+\r\n+      route: \"/childpage\",\r\n+    },\r\n+\r\n+    {\r\n+      utterance: \"Today's Inspirational quote\",\r\n+\r\n+      response:\r\n+        \"Determination is the power that sees us through all our frustration and obstacles. It helps in building our willpower which is the very basis of success.\",\r\n+\r\n+      route: \"/childpage\",\r\n+    },\r\n+\r\n+    {\r\n+      utterance: \"say me today's quote\",\r\n+\r\n+      response:\r\n+        \"Determination is the power that sees us through all our frustration and obstacles. It helps in building our willpower which is the very basis of success.\",\r\n+\r\n+      route: \"/childpage\",\r\n+    },\r\n+    {\r\n+      utterance: \"go back\",\r\n+      response: \"\",\r\n+      action: goBack, // Note the use of an action property\r\n+    },\r\n+    {\r\n+      utterance: \"go forward\",\r\n+      response: \"\",\r\n+      action: goForward,\r\n+    },\r\n+    // {\r\n+    //   utterance: \"play video\",\r\n+    //   // response: \"Playing video.\",\r\n+    //   action: playVideo,\r\n+    // },\r\n+    // {\r\n+    //   utterance: \"pause video\",\r\n+    //   // response: \"Pausing video.\",\r\n+    //   action: pauseVideo,\r\n+    // },\r\n+    // {\r\n+    //   utterance: \"start video\",\r\n+    //   // response: \"Playing video.\",\r\n+    //   action: playVideo,\r\n+    // },\r\n+    // {\r\n+    //   utterance: \"stop video\",\r\n+    //   // response: \"Playing video.\",\r\n+    //   action: pauseVideo,\r\n+    // },\r\n+    {\r\n+      utterance: \"scroll up\",\r\n+      // response: \"Scrolling up.\",\r\n+      action: scrollUp,\r\n+    },\r\n+    {\r\n+      utterance: \"scroll down\",\r\n+      // response: \"Scrolling down.\",\r\n+      action: scrollDown,\r\n+    },\r\n+    {\r\n+      utterance: \"go up\",\r\n+\r\n+      // response: \"Scrolling up.\",\r\n+      action: scrollUp,\r\n+    },\r\n+    {\r\n+      utterance: \"go down\",\r\n+      // response: \"Scrolling down.\",\r\n+      action: scrollDown,\r\n+    },\r\n+    {\r\n+      utterance: \"scroll to top\",\r\n+      action: scrollToTop,\r\n+    },\r\n+    {\r\n+      utterance: \"scroll to bottom\",\r\n+      action: scrollToBottom,\r\n+    },\r\n+    {\r\n+      utterance: \"brane stop\",\r\n+      action: stopListening,\r\n+    },\r\n+    {\r\n+      utterance: \"brane turn off\",\r\n+      action: stopListening,\r\n+    },\r\n+    {\r\n+      utterance: \"brane stop the bot\",\r\n+      action: stopListening,\r\n+    },\r\n+    // {\r\n+    //   utterance: \"mute the video\",\r\n+    //   action: muteVideo,\r\n+    // },\r\n+    // {\r\n+    //   utterance: \"unmute the video\",\r\n+    //   action: unmuteVideo,\r\n+    // },\r\n+    // {\r\n+    //   utterance: \"stop the video sound\",\r\n+    //   action: muteVideo,\r\n+    // },\r\n+    // {\r\n+    //   utterance: \"play the video sound\",\r\n+    //   action: unmuteVideo,\r\n+    // },\r\n+    {\r\n+      utterance: \"play transforming education video\",\r\n+      action: () => controlVideo('ourProjectsVideo', 'play'),\r\n+    },\r\n+    {\r\n+      utterance: \"start transforming education video\",\r\n+      action: () => controlVideo('ourProjectsVideo', 'play'),\r\n+    },\r\n+    {\r\n+      utterance: \"pause transforming education video\",\r\n+      action: () => controlVideo('ourProjectsVideo', 'pause'),\r\n+    },\r\n+    {\r\n+      utterance: \"stop transforming education video\",\r\n+      action: () => controlVideo('ourProjectsVideo', 'pause'),\r\n+    },\r\n+\r\n+    {\r\n+      utterance: \"mute transforming education video\",\r\n+      action: () => controlVideo('ourProjectsVideo', 'mute'),\r\n+    },\r\n+    {\r\n+      utterance: \"unmute transforming education video\",\r\n+      action: () => controlVideo('ourProjectsVideo', 'unmute'),\r\n+    },\r\n+    {\r\n+      utterance: \"fullscreen transforming education video\",\r\n+      action: () => controlVideo('ourProjectsVideo', 'fullscreen'),\r\n+    },\r\n+    {\r\n+      utterance: \"exit fullscreen transforming education video\",\r\n+      action: () => controlVideo('ourProjectsVideo', 'exitFullscreen'),\r\n+    },\r\n+    {\r\n+      utterance: \"increase volume transforming education video\",\r\n+      action: () => controlVideo('ourProjectsVideo', 'increaseVolume'),\r\n+    },\r\n+    {\r\n+      utterance: \"decrease volume transforming education video\",\r\n+      action: () => controlVideo('ourProjectsVideo', 'decreaseVolume'),\r\n+    },\r\n+    {\r\n+      utterance: \"play leaders voice video\",\r\n+      action: () => controlVideo('leadersVoiceVideo', 'play'),\r\n+    },\r\n+    {\r\n+      utterance: \"start leaders voice video\",\r\n+      action: () => controlVideo('leadersVoiceVideo', 'play'),\r\n+    },\r\n+    {\r\n+      utterance: \"pause leaders voice video\",\r\n+      action: () => controlVideo('leadersVoiceVideo', 'pause'),\r\n+    },\r\n+    {\r\n+      utterance: \"stop leaders voice video\",\r\n+      action: () => controlVideo('leadersVoiceVideo', 'pause'),\r\n+    },\r\n+    {\r\n+      utterance: \"mute leaders voice video\",\r\n+      action: () => controlVideo('leadersVoiceVideo', 'mute'),\r\n+    },\r\n+    {\r\n+      utterance: \"unmute leaders voice video\",\r\n+      action: () => controlVideo('leadersVoiceVideo', 'unmute'),\r\n+    },\r\n+    {\r\n+      utterance: \"fullscreen leaders voice video\",\r\n+      action: () => controlVideo('leadersVoiceVideo', 'fullscreen'),\r\n+    },\r\n+    {\r\n+      utterance: \"exit fullscreen leaders voice video\",\r\n+      action: () => controlVideo('leadersVoiceVideo', 'exitFullscreen'),\r\n+    },\r\n+    {\r\n+      utterance: \"increase volume leaders voice video\",\r\n+      action: () => controlVideo('leadersVoiceVideo', 'increaseVolume'),\r\n+    },\r\n+    {\r\n+      utterance: \"decrease volume leaders voice video\",\r\n+      action: () => controlVideo('leadersVoiceVideo', 'decreaseVolume'),\r\n+    },\r\n+    \r\n+  ];\r\n+\r\n+  return (\r\n+    <div className=\"speech-bot-container\">\r\n+      <div\r\n+        className={`button-container ${\r\n+          isListening ? \"voicebotframeactive\" : \"voicebotframe\"\r\n+        }`}\r\n+      >\r\n+        {/* <button onClick={isListening ? stopListening : startListening}>\r\n+          {isListening ? \"Stop\" : \"Start\"} Animation\r\n+        </button> */}\r\n+        <img\r\n+          className=\"botimage\"\r\n+          src={chatbotimage}\r\n+          alt=\"\"\r\n+          onClick={isListening ? stopListening : startListening}\r\n+        />\r\n+      </div>\r\n+    </div>\r\n+  );\r\n+};\r\n+\r\n+export default VoiceBot;\r\n+\r\n+{\r\n+  /* // import React, { useState, useEffect, useRef } from \"react\";\r\n+// import { useNavigate, useLocation } from \"react-router-dom\";\r\n+// import Fuse from \"fuse.js\";\r\n+// import \"./VoiceBot.css\";\r\n+\r\n+// const VoiceBot = ({ videoRef }) => {\r\n+//   const [isListening, setIsListening] = useState(false);\r\n+//   const [isSpeaking, setIsSpeaking] = useState(false);\r\n+//   const recognition = useRef(null);\r\n+//   const speechSynthesis = useRef(window.speechSynthesis);\r\n+//   const [hasGreeted, setHasGreeted] = useState(false);\r\n+//   const navigate = useNavigate();\r\n+\r\n+//   useEffect(() => {\r\n+//     recognition.current = new window.webkitSpeechRecognition();\r\n+//     recognition.current.continuous = true;\r\n+//     recognition.current.interimResults = false;\r\n+//     recognition.current.onresult = onResult;\r\n+//     recognition.current.onend = onRecognitionEnd;\r\n+//     recognition.current.starting = false;\r\n+\r\n+//     // Simplified error handling, removed specific handling for 'no-speech'\r\n+//     recognition.current.onerror = (event) => {\r\n+//       console.error(\"Recognition error:\", event.error);\r\n+//       // Check if listening is true and the bot isn't speaking\r\n+//       if (isListening && !isSpeaking) {\r\n+//         // Restart recognition\r\n+//         restartRecognition();\r\n+//       }\r\n+//     };\r\n+\r\n+//     return () => {\r\n+//       if (recognition.current) {\r\n+//         recognition.current.abort();\r\n+//       }\r\n+//     };\r\n+//   }, []);\r\n+\r\n+//   useEffect(() => {\r\n+//     const checkRecognition = () => {\r\n+//       if (isListening && !isSpeaking && !recognition.current.starting) {\r\n+//         console.log(\"Restarting recognition because it's not active.\");\r\n+//         recognition.current.starting = true;\r\n+//         recognition.current.start();\r\n+//         console.log(\"Restarted recognition.\");\r\n+//       }\r\n+//     };\r\n+\r\n+//     const recognitionCheckInterval = setInterval(checkRecognition, 100); // Check every 1 second\r\n+\r\n+//     return () => {\r\n+//       clearInterval(recognitionCheckInterval);\r\n+//     };\r\n+//   }, [isListening, isSpeaking]);\r\n+\r\n+//   const restartRecognition = () => {\r\n+//     if (recognition.current.starting) {\r\n+//       console.log(\"Recognition is already starting or running.\");\r\n+//       return;\r\n+//     }\r\n+\r\n+//     recognition.current.abort(); // Stop any existing recognition process\r\n+//     recognition.current.starting = true;\r\n+//     recognition.current.start();\r\n+//     console.log(\"Recognition restarted.\");\r\n+//   };\r\n+\r\n+//   const historyStack = useRef([]);\r\n+\r\n+//   useEffect(() => {\r\n+//     return () => {\r\n+//       // Clean up the listener when the component unmounts\r\n+//       window.removeEventListener(\"popstate\", handlePopState);\r\n+//     };\r\n+//   }, []);\r\n+\r\n+//   const handlePopState = () => {\r\n+//     // This needs to handle both back and forward browser actions\r\n+//     // Use some logic to determine whether it's a back or forward action\r\n+//     // For simplicity, assume it's always back\r\n+//     historyStack.current.pop();\r\n+//     forwardStack.current.length = 0; // Clear forward stack on manual navigation\r\n+//   };\r\n+  \r\n+\r\n+//   // Add a new entry to the stack whenever navigate is called\r\n+//   const customNavigate = (to, options) => {\r\n+//     historyStack.current.push(to);\r\n+//     navigate(to, options);\r\n+//   };\r\n+\r\n+//   // Listen to popstate events to update the history stack\r\n+//   useEffect(() => {\r\n+//     window.addEventListener(\"popstate\", handlePopState);\r\n+//   }, []);\r\n+\r\n+//   const forwardStack = useRef([]);\r\n+\r\n+//   const goBack = () => {\r\n+//     if (window.history.state && window.history.state.idx > 0) {\r\n+//       window.history.back();\r\n+//       speak(\"Going back\");\r\n+//     } else {\r\n+//       speak(\"Can't go back any further.\");\r\n+//     }\r\n+//   };\r\n+\r\n+//   const goForward = () => {\r\n+//     if (window.history.state && window.history.state.idx < window.history.length - 1) {\r\n+//       window.history.forward();\r\n+//       speak(\"Going forward\");\r\n+//     } else {\r\n+//       speak(\"No forward history available.\");\r\n+//     }\r\n+//   };\r\n+\r\n+//   const playVideo = () => {\r\n+//     if (videoRef.current) {\r\n+//       videoRef.current.play();\r\n+//       speak(\"Playing video.\");\r\n+//     } else {\r\n+//       speak(\"No video to play.\");\r\n+//     }\r\n+//   };\r\n+\r\n+//   const pauseVideo = () => {\r\n+//     if (videoRef.current) {\r\n+//       videoRef.current.pause();\r\n+//       speak(\"Video paused.\");\r\n+//     } else {\r\n+//       speak(\"No video to pause.\");\r\n+//     }\r\n+//   };\r\n+\r\n+//   const scrollAmount = window.innerHeight * 0.82;\r\n+\r\n+//   const scrollUp = () => {\r\n+//     if (window.pageYOffset === 0) {\r\n+//       speak(\"Already at the top of the page.\");\r\n+//     } else {\r\n+//       window.scrollBy(0, -scrollAmount);\r\n+//       speak(\"Scrolled up.\");\r\n+//     }\r\n+//   };\r\n+\r\n+//   const scrollDown = () => {\r\n+//     const maxScrollTop =\r\n+//       document.documentElement.scrollHeight - window.innerHeight;\r\n+//     if (window.pageYOffset >= maxScrollTop) {\r\n+//       speak(\"Already at the bottom of the page.\");\r\n+//     } else {\r\n+//       window.scrollBy(0, scrollAmount);\r\n+//       speak(\"Scrolled down.\");\r\n+//     }\r\n+//   };\r\n+\r\n+//   const scrollToTop = () => {\r\n+//     if (window.pageYOffset === 0) {\r\n+//       speak(\"Already at the top of the page.\");\r\n+//     } else {\r\n+//       window.scrollTo(0, 0);\r\n+//       speak(\"Scrolled to the top of the page.\");\r\n+//     }\r\n+//   };\r\n+\r\n+//   const scrollToBottom = () => {\r\n+//     const maxScrollTop =\r\n+//       document.documentElement.scrollHeight - window.innerHeight;\r\n+//     if (window.pageYOffset >= maxScrollTop) {\r\n+//       speak(\"Already at the bottom of the page.\");\r\n+//     } else {\r\n+//       window.scrollTo(0, document.body.scrollHeight);\r\n+//       speak(\"Scrolled to the bottom of the page.\");\r\n+//     }\r\n+//   };\r\n+\r\n+//   const speak = (message) => {\r\n+//     console.log(\"speak function called with message:\", message);\r\n+//     const utterance = new SpeechSynthesisUtterance(message);\r\n+//     utterance.onend = () => {\r\n+//       setIsSpeaking(false);\r\n+//       console.log(\"Speaking ended.\");\r\n+//       if (isListening && !recognition.current.starting) {\r\n+//         console.log(\"Restarting recognition after speaking.\");\r\n+//         recognition.current.starting = true;\r\n+//         recognition.current.start();\r\n+//         console.log(\"Restarted recognition after speaking.\");\r\n+//       }\r\n+//     };\r\n+\r\n+//     setIsSpeaking(true);\r\n+//     console.log(\"Speaking started.\");\r\n+//     recognition.current.stop(); // Ensure to stop recognition before speaking\r\n+//     speechSynthesis.current.speak(utterance);\r\n+//   };\r\n+\r\n+//   const onResult = (event) => {\r\n+//     const resultIndex = event.resultIndex;\r\n+//     const transcript = event.results[resultIndex][0].transcript\r\n+//       .trim()\r\n+//       .toLowerCase();\r\n+\r\n+//     if (event.results[resultIndex].isFinal) {\r\n+//       console.log(`Recognized text: ${transcript}`);\r\n+//       if (transcript.includes(\"brain\")) {\r\n+//         console.log(\"Wake word heard, processing command...\");\r\n+//         handleCommandWithFuse(transcript.replace(\"brain\", \"\"));\r\n+//       }\r\n+//     }\r\n+//   };\r\n+\r\n+//   const onRecognitionEnd = () => {\r\n+//     recognition.current.starting = false;\r\n+//     if (isListening && !isSpeaking) {\r\n+//       restartRecognition();\r\n+//     }\r\n+//   };\r\n+\r\n+//   useEffect(() => {\r\n+//     if (isListening) {\r\n+//       if (!hasGreeted) {\r\n+//         speak(\"Hello, I'm Brane. How can I help you today?\");\r\n+//         setHasGreeted(true);\r\n+//       } else {\r\n+//         speak(\"Listening.\");\r\n+//       }\r\n+//     }\r\n+//   }, [isListening, hasGreeted]);\r\n+\r\n+\r\n+//   const startListening = () => {\r\n+//     if (!recognition.current.starting) {\r\n+//       setIsListening(true);\r\n+//       restartRecognition();\r\n+//     }\r\n+//   };\r\n+\r\n+//   const stopListening = () => {\r\n+//     setIsListening(false);\r\n+//     recognition.current.abort();\r\n+//     if (speechSynthesis.current.speaking) {\r\n+//       speechSynthesis.current.cancel();\r\n+//     }\r\n+//   };\r\n+\r\n+//   const handleCommandWithFuse = (command) => {\r\n+//     const fuse = new Fuse(commands, { keys: [\"utterance\"], threshold: 0.4 });\r\n+//     const results = fuse.search(command);\r\n+//     const foundCommand = results.length ? results[0].item : null;\r\n+\r\n+//     if (foundCommand) {\r\n+//       console.log(\"Command found:\", foundCommand.utterance);\r\n+\r\n+//       if (foundCommand.action) {\r\n+//         foundCommand.action();\r\n+//       } else if (foundCommand.route) {\r\n+//         navigate(foundCommand.route);\r\n+//       }\r\n+\r\n+//       // Speak after performing the action or navigation\r\n+//       speak(foundCommand.response);\r\n+//     } else {\r\n+//       console.log(\"No command found.\");\r\n+//       speak(\"I'm not sure how to respond to that.\");\r\n+//     }\r\n+//   };\r\n+\r\n+//   const commands = [\r\n+//     {\r\n+//       utterance: \"Hello who are you ?\",\r\n+\r\n+//       response:\r\n+//         \"Hi! This is Brane! your Voice bot from Brane Education How can I Assist you Today ?\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"Hello\",\r\n+\r\n+//       response: \"Hi! How can I assist you today?\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"hello\",\r\n+\r\n+//       response: \"Hi! How can I assist you today?\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"Hi.\",\r\n+\r\n+//       response: \"Hello! How can I assist you today?\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"Hey there\",\r\n+\r\n+//       response: \"Hi! How can I assist you today?\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"Good morning Brane.\",\r\n+\r\n+//       response: \"Hey Hiii! Good morning  ! How can I help you?\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"Good afternoon Brane.\",\r\n+\r\n+//       response: \"Hey Hiii! Good after noon ! How can I help you?\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"Good evening Brane.\",\r\n+\r\n+//       response: \"Hey Hiii! Good evening ! How can I help you?\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"can you please take me to login page\",\r\n+\r\n+//       route: \"/login\",\r\n+\r\n+//       response: \"Here's the Login Page, Please Login\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"please take me to login page\",\r\n+\r\n+//       route: \"/login\",\r\n+\r\n+//       response: \"Here's the Login Page, Please Login\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"Go to login page\",\r\n+\r\n+//       route: \"/login\",\r\n+\r\n+//       response: \"Here's the Login Page, Please Login\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"open login page\",\r\n+\r\n+//       route: \"/login\",\r\n+\r\n+//       response: \"Here's the Login Page, Please Login\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"can you please take me to signup page\",\r\n+\r\n+//       route: \"/signup\",\r\n+\r\n+//       response: \"Here's the signup page. Please proceed With Registration.\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"take me to signup page\",\r\n+\r\n+//       route: \"/signup\",\r\n+\r\n+//       response: \"Here's the signup page. Please proceed With Registration.\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"Go to signup page\",\r\n+\r\n+//       route: \"/signup\",\r\n+\r\n+//       response: \"Here's the signup page. Please proceed With Registration.\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"open signup page\",\r\n+\r\n+//       route: \"/signup\",\r\n+\r\n+//       response: \"Here's the signup page. Please proceed With Registration.\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"Go to face id\",\r\n+\r\n+//       route: \"/login/faceid\",\r\n+\r\n+//       response: \"Here's Face ID Login. Please proceed.\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"Go to face id login\",\r\n+\r\n+//       route: \"/login/faceid\",\r\n+\r\n+//       response: \"Here's Face ID Login. Please proceed.\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"login with face id\",\r\n+\r\n+//       route: \"/login/faceid\",\r\n+\r\n+//       response: \"Here's Face ID Login. Please proceed.\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"login with face\",\r\n+\r\n+//       route: \"/login/faceid\",\r\n+\r\n+//       response: \"Here's Face ID Login. Please proceed.\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"i want to login with face\",\r\n+\r\n+//       route: \"/login/faceid\",\r\n+\r\n+//       response: \"Here's Face ID Login. Please proceed.\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"login with voice\",\r\n+\r\n+//       route: \"/login/voiceid\",\r\n+\r\n+//       response: \"Here's Voice Login. Please proceed.\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"i want to login with voice\",\r\n+\r\n+//       route: \"/login/voiceid\",\r\n+\r\n+//       response: \"Here's Voice Login. Please proceed.\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"go to voice login\",\r\n+\r\n+//       route: \"/login/voiceid\",\r\n+\r\n+//       response: \"Here's Voice Login. Please proceed.\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"login with voice\",\r\n+\r\n+//       route: \"/login/voiceid\",\r\n+\r\n+//       response: \"Here's Voice Login. Please proceed.\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"login with mobile\",\r\n+\r\n+//       route: \"/login/mobile\",\r\n+\r\n+//       response: \"Here's Mobile Login. Please proceed.\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"i want to login with mobile\",\r\n+\r\n+//       route: \"/login/mobile\",\r\n+\r\n+//       response: \"Here's Mobile Login. Please proceed.\",\r\n+//     },\r\n+//     {\r\n+//       utterance: \"go to mobile login\",\r\n+\r\n+//       route: \"/login/mobile\",\r\n+\r\n+//       response: \"Here's Mobile Login. Please proceed.\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"what are platform features\",\r\n+\r\n+//       response:\r\n+//         \"Dashboard, Dynamic time table, Learning Networks, Little Masters, Video Based Dictionary, General Search.\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"Features of platform\",\r\n+\r\n+//       response:\r\n+//         \"Dashboard, Dynamic time table, Learning Networks, Little Masters, Video Based Dictionary, General Search.\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"What does the platform offer\",\r\n+\r\n+//       response:\r\n+//         \"Dashboard, Dynamic time table, Learning Networks, Little Masters, Video Based Dictionary, General Search.\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"Say me the features of platform\",\r\n+\r\n+//       response:\r\n+//         \"Dashboard, Dynamic time table, Learning Networks, Little Masters, Video Based Dictionary, General Search.\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"Say me the services of platform\",\r\n+\r\n+//       response:\r\n+//         \"Dashboard, Dynamic time table, Learning Networks, Little Masters, Video Based Dictionary, General Search.\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"tell me the services offered by the platform\",\r\n+\r\n+//       response:\r\n+//         \"Dashboard, Dynamic time table, Learning Networks, Little Masters, Video Based Dictionary, General Search.\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"explain platform services\",\r\n+\r\n+//       response:\r\n+//         \"Dashboard, Dynamic time table, Learning Networks, Little Masters, Video Based Dictionary, General Search.\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"Give me the Parent voice of Julia Harris\",\r\n+\r\n+//       response:\r\n+//         \"Brane education has helped my son a lot in his studies. He improved a lot in his studies and is now able to score good marks in his exams\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"Play today's motivational video\",\r\n+\r\n+//       response: \"I am playing the video\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"Play today's video\",\r\n+\r\n+//       response: \"I am playing Motivational video\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"Leaders Voice\",\r\n+\r\n+//       response:\r\n+//         \"This Voice-interactive AI Platform is a game Changer. It revolutionizes education.\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"Curriculum Supported by Brane Education\",\r\n+\r\n+//       response:\r\n+//         \"we support multiple Boards let me say few Telangana State Board Andhra Pradesh Board Maharashtra Board Assam Board\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"Boards supported by the platform\",\r\n+\r\n+//       response:\r\n+//         \"we support multiple Boards let me say few Telangana State Board Andhra Pradesh Board Maharashtra Board Assam Board\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"Curriculum\",\r\n+\r\n+//       response:\r\n+//         \"we support multiple Boards let me say few Telangana State Board Andhra Pradesh Board Maharashtra Board Assam Board\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"Go to landing page\",\r\n+\r\n+//       response: \"Okay, I am taking you to the landing page.\",\r\n+\r\n+//       route: \"/childpage\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"take me to landing page\",\r\n+\r\n+//       response: \"Okay, I am taking you to the landing page.\",\r\n+\r\n+//       route: \"/childpage\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"move to landing page\",\r\n+\r\n+//       response: \"Okay, I am taking you to the landing page.\",\r\n+\r\n+//       route: \"/childpage\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"roll back to landing page\",\r\n+\r\n+//       response: \"Okay, I am taking you to the landing page.\",\r\n+\r\n+//       route: \"/childpage\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"move to landing page\",\r\n+\r\n+//       response: \"Okay, I am taking you to the landing page.\",\r\n+\r\n+//       route: \"/childpage\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"what is today's quote\",\r\n+\r\n+//       response:\r\n+//         \"Determination is the power that sees us through all our frustration and obstacles. It helps in building our willpower which is the very basis of success.\",\r\n+\r\n+//       route: \"/childpage\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"Today's Inspirational quote\",\r\n+\r\n+//       response:\r\n+//         \"Determination is the power that sees us through all our frustration and obstacles. It helps in building our willpower which is the very basis of success.\",\r\n+\r\n+//       route: \"/childpage\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"say me today's quote\",\r\n+\r\n+//       response:\r\n+//         \"Determination is the power that sees us through all our frustration and obstacles. It helps in building our willpower which is the very basis of success.\",\r\n+\r\n+//       route: \"/childpage\",\r\n+//     },\r\n+//     {\r\n+//       utterance: \"go back\",\r\n+//       response: \"\",\r\n+//       action: goBack, // Note the use of an action property\r\n+//     },\r\n+//     {\r\n+//       utterance: \"go forward\",\r\n+//       response: \"\",\r\n+//       action: goForward,\r\n+//     },\r\n+//     {\r\n+//       utterance: \"play video\",\r\n+//       // response: \"Playing video.\",\r\n+//       action: playVideo,\r\n+//     },\r\n+//     {\r\n+//       utterance: \"pause video\",\r\n+//       // response: \"Pausing video.\",\r\n+//       action: pauseVideo,\r\n+//     },\r\n+//     {\r\n+//       utterance: \"start video\",\r\n+//       // response: \"Playing video.\",\r\n+//       action: playVideo,\r\n+//     },\r\n+//     {\r\n+//       utterance: \"stop video\",\r\n+//       // response: \"Playing video.\",\r\n+//       action: pauseVideo,\r\n+//     },\r\n+//     {\r\n+//       utterance: \"scroll up\",\r\n+//       // response: \"Scrolling up.\",\r\n+//       action: scrollUp,\r\n+//     },\r\n+//     {\r\n+//       utterance: \"scroll down\",\r\n+//       // response: \"Scrolling down.\",\r\n+//       action: scrollDown,\r\n+//     },\r\n+//     {\r\n+//       utterance: \"go up\",\r\n+\r\n+//       // response: \"Scrolling up.\",\r\n+//       action: scrollUp,\r\n+//     },\r\n+//     {\r\n+//       utterance: \"go down\",\r\n+//       // response: \"Scrolling down.\",\r\n+//       action: scrollDown,\r\n+//     },\r\n+//     {\r\n+//       utterance: \"scroll to top\",\r\n+//       action: scrollToTop,\r\n+//     },\r\n+//     {\r\n+//       utterance: \"scroll to bottom\",\r\n+//       action: scrollToBottom,\r\n+//     },\r\n+//     {\r\n+//       utterance: \"brane stop\",\r\n+//       action: stopListening,\r\n+//     },\r\n+//     {\r\n+//       utterance: \"brane turn off\",\r\n+//       action: stopListening,\r\n+//     },\r\n+//     {\r\n+//       utterance: \"brane stop the bot\",\r\n+//       action: stopListening,\r\n+//     },\r\n+//   ];\r\n+\r\n+//   return (\r\n+//     <div className=\"speech-bot-container\">\r\n+//       <div\r\n+//         className={`button-container ${\r\n+//           isListening ? \"voicebotframeactive\" : \"voicebotframe\"\r\n+//         }`}\r\n+//       >\r\n+//         <button onClick={isListening ? stopListening : startListening}>\r\n+//           {isListening ? \"Stop\" : \"Start\"} Animation\r\n+//         </button>\r\n+//         {/* <button onClick={toggleBotActive}>\r\n+//         {isBotActive ? 'Deactivate Bot' : 'Activate Bot'}\r\n+//       </button> \r\n+//       </div>\r\n+//     </div>\r\n+//   );\r\n+// };\r\n+\r\n+// export default VoiceBot; */\r\n+}\r\n+\r\n+//iska v1\r\n+\r\n+// import React, { useState, useEffect, useRef } from \"react\";\r\n+// import { useNavigate, useLocation } from \"react-router-dom\";\r\n+// import Fuse from \"fuse.js\";\r\n+// import \"./VoiceBot.css\";\r\n+\r\n+// const VoiceBot = ({ videoRef}) => {\r\n+//   const [isListening, setIsListening] = useState(false);\r\n+//   const [isSpeaking, setIsSpeaking] = useState(false);\r\n+//   const recognition = useRef(null);\r\n+//   const speechSynthesis = useRef(window.speechSynthesis);\r\n+//   const [hasGreeted, setHasGreeted] = useState(false);\r\n+//   const navigate = useNavigate();\r\n+\r\n+//  // Initialize speech recognition\r\n+//  useEffect(() => {\r\n+//   recognition.current = new window.webkitSpeechRecognition();\r\n+//   recognition.current.continuous = true;\r\n+//   recognition.current.interimResults = false;\r\n+//   recognition.current.onresult = onResult;\r\n+//   recognition.current.onend = onRecognitionEnd;\r\n+//   recognition.current.starting = false;\r\n+\r\n+//   recognition.current.onerror = (event) => {\r\n+//     console.error(\"Recognition error:\", event.error);\r\n+//     if (isListening && !isSpeaking) {\r\n+//       restartRecognition();\r\n+//     }\r\n+//   };\r\n+\r\n+//   return () => {\r\n+//     if (recognition.current) {\r\n+//       recognition.current.abort();\r\n+//     }\r\n+//   };\r\n+// }, []);\r\n+\r\n+//   // useEffect(() => {\r\n+//   //   const checkRecognition = () => {\r\n+//   //     if (isListening && !isSpeaking && !recognition.current.starting) {\r\n+//   //       console.log(\"Restarting recognition because it's not active.\");\r\n+//   //       recognition.current.starting = true;\r\n+//   //       recognition.current.start();\r\n+//   //       console.log(\"Restarted recognition.\");\r\n+//   //     }\r\n+//   //   };\r\n+\r\n+//   //   const recognitionCheckInterval = setInterval(checkRecognition, 100); // Check every .5 second\r\n+\r\n+//   //   return () => {\r\n+//   //     clearInterval(recognitionCheckInterval);\r\n+//   //   };\r\n+//   // }, [isListening, isSpeaking]);\r\n+\r\n+//   const historyStack = useRef([]);\r\n+\r\n+//   useEffect(() => {\r\n+//     return () => {\r\n+//       // Clean up the listener when the component unmounts\r\n+//       window.removeEventListener(\"popstate\", handlePopState);\r\n+//     };\r\n+//   }, []);\r\n+\r\n+//   const handlePopState = () => {\r\n+//     // This needs to handle both back and forward browser actions\r\n+//     // Use some logic to determine whether it's a back or forward action\r\n+//     // For simplicity, assume it's always back\r\n+//     historyStack.current.pop();\r\n+//     forwardStack.current.length = 0; // Clear forward stack on manual navigation\r\n+//   };\r\n+\r\n+//   // Add a new entry to the stack whenever navigate is called\r\n+//   const customNavigate = (to, options) => {\r\n+//     historyStack.current.push(to);\r\n+//     navigate(to, options);\r\n+//   };\r\n+\r\n+//   // Listen to popstate events to update the history stack\r\n+//   useEffect(() => {\r\n+//     window.addEventListener(\"popstate\", handlePopState);\r\n+//   }, []);\r\n+\r\n+//   const forwardStack = useRef([]);\r\n+\r\n+//   const goBack = () => {\r\n+//     if (window.history.state && window.history.state.idx > 0) {\r\n+//       window.history.back();\r\n+//       speak(\"Going back\");\r\n+//     } else {\r\n+//       speak(\"Can't go back any further.\");\r\n+//     }\r\n+//   };\r\n+\r\n+//   const goForward = () => {\r\n+//     if (window.history.state && window.history.state.idx < window.history.length - 1) {\r\n+//       window.history.forward();\r\n+//       speak(\"Going forward\");\r\n+//     } else {\r\n+//       speak(\"No forward history available.\");\r\n+//     }\r\n+//   };\r\n+\r\n+//   const playVideo = () => {\r\n+//     if (videoRef.current) {\r\n+//       videoRef.current.play();\r\n+//       speak(\"Playing video.\");\r\n+//     } else {\r\n+//       speak(\"No video to play.\");\r\n+//     }\r\n+//   };\r\n+\r\n+//   const pauseVideo = () => {\r\n+//     if (videoRef.current) {\r\n+//       videoRef.current.pause();\r\n+//       speak(\"Video paused.\");\r\n+//     } else {\r\n+//       speak(\"No video to pause.\");\r\n+//     }\r\n+//   };\r\n+\r\n+//   const scrollAmount = window.innerHeight * 0.82;\r\n+\r\n+//   const scrollUp = () => {\r\n+//     if (window.pageYOffset === 0) {\r\n+//       speak(\"Already at the top of the page.\");\r\n+//     } else {\r\n+//       window.scrollBy(0, -scrollAmount);\r\n+//       speak(\"Scrolled up.\");\r\n+//     }\r\n+//   };\r\n+\r\n+//   const scrollDown = () => {\r\n+//     const maxScrollTop =\r\n+//       document.documentElement.scrollHeight - window.innerHeight;\r\n+//     if (window.pageYOffset >= maxScrollTop) {\r\n+//       speak(\"Already at the bottom of the page.\");\r\n+//     } else {\r\n+//       window.scrollBy(0, scrollAmount);\r\n+//       speak(\"Scrolled down.\");\r\n+//     }\r\n+//   };\r\n+\r\n+//   const scrollToTop = () => {\r\n+//     if (window.pageYOffset === 0) {\r\n+//       speak(\"Already at the top of the page.\");\r\n+//     } else {\r\n+//       window.scrollTo(0, 0);\r\n+//       speak(\"Scrolled to the top of the page.\");\r\n+//     }\r\n+//   };\r\n+\r\n+//   const scrollToBottom = () => {\r\n+//     const maxScrollTop =\r\n+//       document.documentElement.scrollHeight - window.innerHeight;\r\n+//     if (window.pageYOffset >= maxScrollTop) {\r\n+//       speak(\"Already at the bottom of the page.\");\r\n+//     } else {\r\n+//       window.scrollTo(0, document.body.scrollHeight);\r\n+//       speak(\"Scrolled to the bottom of the page.\");\r\n+//     }\r\n+//   };\r\n+\r\n+//   const speak = (message) => {\r\n+//     const utterance = new SpeechSynthesisUtterance(message);\r\n+//     utterance.onend = () => {\r\n+//       setIsSpeaking(false);\r\n+//       // Restart recognition after speaking has ended\r\n+//       if (isListening) {\r\n+//         restartRecognition();\r\n+//       }\r\n+//     };\r\n+\r\n+//     setIsSpeaking(true);\r\n+//     // Stop recognition when the bot starts speaking\r\n+//     if (recognition.current) {\r\n+//       recognition.current.abort();\r\n+//     }\r\n+//     speechSynthesis.current.speak(utterance);\r\n+//   };\r\n+\r\n+//   const restartRecognition = () => {\r\n+//     // Check if recognition is not already started and if the bot is set to listen\r\n+//     if (recognition.current && !recognition.current.starting && isListening && !isSpeaking) {\r\n+//       // Only start recognition if it's not already active\r\n+//       if (recognition.current.state !== 'active') {\r\n+//         recognition.current.abort(); // Ensure any ongoing recognition is stopped\r\n+//         recognition.current.starting = true;\r\n+//         recognition.current.start();\r\n+//       }\r\n+//     }\r\n+//   };\r\n+\r\n+//     // Restart recognition when bot finishes speaking and isListening is true\r\n+//     useEffect(() => {\r\n+//       if (!isSpeaking && isListening) {\r\n+//         restartRecognition();\r\n+//       }\r\n+//     }, [isSpeaking, isListening]);\r\n+\r\n+//   const onResult = (event) => {\r\n+//     const resultIndex = event.resultIndex;\r\n+//     const transcript = event.results[resultIndex][0].transcript\r\n+//       .trim()\r\n+//       .toLowerCase();\r\n+\r\n+//     if (event.results[resultIndex].isFinal) {\r\n+//       console.log(`Recognized text: ${transcript}`);\r\n+//       if (transcript.includes(\"brain\")) {\r\n+//         console.log(\"Wake word heard, processing command...\");\r\n+//         handleCommandWithFuse(transcript.replace(\"brain\", \"\"));\r\n+//       }\r\n+//     }\r\n+//   };\r\n+\r\n+//   const onRecognitionEnd = () => {\r\n+//     recognition.current.starting = false;\r\n+//     if (isListening && !isSpeaking) {\r\n+//       restartRecognition();\r\n+//     }\r\n+//   };\r\n+\r\n+//   useEffect(() => {\r\n+//     if (isListening && !hasGreeted) {\r\n+//       speak(\"Hello, I'm Brane. How can I help you today?\");\r\n+//       setHasGreeted(true);\r\n+//     }\r\n+//   }, [isListening, hasGreeted]);\r\n+\r\n+// // Updated startListening function\r\n+// const startListening = () => {\r\n+//   setIsListening(true);\r\n+//   if (recognition.current && !recognition.current.starting) {\r\n+//     recognition.current.start();\r\n+//   }\r\n+// };\r\n+\r\n+// // Updated stopListening function\r\n+// const stopListening = () => {\r\n+//   setIsListening(false);\r\n+//   setIsSpeaking(false); // Reset speaking state\r\n+//   setHasGreeted(false); // Reset greeting state if needed\r\n+//   if (recognition.current) {\r\n+//     recognition.current.abort(); // Stop any ongoing speech recognition\r\n+//   }\r\n+//   if (speechSynthesis.current.speaking) {\r\n+//     speechSynthesis.current.cancel(); // Stop any ongoing speech synthesis\r\n+//   }\r\n+// };\r\n+\r\n+//   const handleCommandWithFuse = (command) => {\r\n+//     const fuse = new Fuse(commands, { keys: [\"utterance\"], threshold: 0.4 });\r\n+//     const results = fuse.search(command);\r\n+//     const foundCommand = results.length ? results[0].item : null;\r\n+\r\n+//     if (foundCommand) {\r\n+//       console.log(\"Command found:\", foundCommand.utterance);\r\n+\r\n+//       if (foundCommand.action) {\r\n+//         foundCommand.action();\r\n+//       } else if (foundCommand.route) {\r\n+//         navigate(foundCommand.route);\r\n+//       }\r\n+\r\n+//       // Speak after performing the action or navigation\r\n+//       speak(foundCommand.response);\r\n+//     } else {\r\n+//       console.log(\"No command found.\");\r\n+//       speak(\"I'm not sure how to respond to that.\");\r\n+//     }\r\n+//   };\r\n+\r\n+//   const commands = [\r\n+//     {\r\n+//       utterance: \"Hello who are you ?\",\r\n+\r\n+//       response:\r\n+//         \"Hi! This is Brane! your Voice bot from Brane Education How can I Assist you Today ?\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"Hello\",\r\n+\r\n+//       response: \"Hi! How can I assist you today?\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"hello\",\r\n+\r\n+//       response: \"Hi! How can I assist you today?\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"Hi.\",\r\n+\r\n+//       response: \"Hello! How can I assist you today?\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"Hey there\",\r\n+\r\n+//       response: \"Hi! How can I assist you today?\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"Good morning Brane.\",\r\n+\r\n+//       response: \"Hey Hiii! Good morning  ! How can I help you?\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"Good afternoon Brane.\",\r\n+\r\n+//       response: \"Hey Hiii! Good after noon ! How can I help you?\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"Good evening Brane.\",\r\n+\r\n+//       response: \"Hey Hiii! Good evening ! How can I help you?\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"can you please take me to login page\",\r\n+\r\n+//       route: \"/login\",\r\n+\r\n+//       response: \"Here's the Login Page, Please Login\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"please take me to login page\",\r\n+\r\n+//       route: \"/login\",\r\n+\r\n+//       response: \"Here's the Login Page, Please Login\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"Go to login page\",\r\n+\r\n+//       route: \"/login\",\r\n+\r\n+//       response: \"Here's the Login Page, Please Login\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"open login page\",\r\n+\r\n+//       route: \"/login\",\r\n+\r\n+//       response: \"Here's the Login Page, Please Login\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"can you please take me to signup page\",\r\n+\r\n+//       route: \"/signup\",\r\n+\r\n+//       response: \"Here's the signup page. Please proceed With Registration.\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"take me to signup page\",\r\n+\r\n+//       route: \"/signup\",\r\n+\r\n+//       response: \"Here's the signup page. Please proceed With Registration.\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"Go to signup page\",\r\n+\r\n+//       route: \"/signup\",\r\n+\r\n+//       response: \"Here's the signup page. Please proceed With Registration.\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"open signup page\",\r\n+\r\n+//       route: \"/signup\",\r\n+\r\n+//       response: \"Here's the signup page. Please proceed With Registration.\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"Go to face id\",\r\n+\r\n+//       route: \"/login/faceid\",\r\n+\r\n+//       response: \"Here's Face ID Login. Please proceed.\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"Go to face id login\",\r\n+\r\n+//       route: \"/login/faceid\",\r\n+\r\n+//       response: \"Here's Face ID Login. Please proceed.\",\r\n+//     },\r\n+//     {\r\n+//       utterance: \"Go to face login\",\r\n+\r\n+//       route: \"/login/faceid\",\r\n+\r\n+//       response: \"Here's Face ID Login. Please proceed.\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"login with face id\",\r\n+\r\n+//       route: \"/login/faceid\",\r\n+\r\n+//       response: \"Here's Face ID Login. Please proceed.\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"login with face\",\r\n+\r\n+//       route: \"/login/faceid\",\r\n+\r\n+//       response: \"Here's Face ID Login. Please proceed.\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"i want to login with face\",\r\n+\r\n+//       route: \"/login/faceid\",\r\n+\r\n+//       response: \"Here's Face ID Login. Please proceed.\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"login with voice\",\r\n+\r\n+//       route: \"/login/voiceid\",\r\n+\r\n+//       response: \"Here's Voice Login. Please proceed.\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"i want to login with voice\",\r\n+\r\n+//       route: \"/login/voiceid\",\r\n+\r\n+//       response: \"Here's Voice Login. Please proceed.\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"go to voice login\",\r\n+\r\n+//       route: \"/login/voiceid\",\r\n+\r\n+//       response: \"Here's Voice Login. Please proceed.\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"login with voice\",\r\n+\r\n+//       route: \"/login/voiceid\",\r\n+\r\n+//       response: \"Here's Voice Login. Please proceed.\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"login with mobile\",\r\n+\r\n+//       route: \"/login/mobile\",\r\n+\r\n+//       response: \"Here's Mobile Login. Please proceed.\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"i want to login with mobile\",\r\n+\r\n+//       route: \"/login/mobile\",\r\n+\r\n+//       response: \"Here's Mobile Login. Please proceed.\",\r\n+//     },\r\n+//     {\r\n+//       utterance: \"go to mobile login\",\r\n+\r\n+//       route: \"/login/mobile\",\r\n+\r\n+//       response: \"Here's Mobile Login. Please proceed.\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"what are platform features\",\r\n+\r\n+//       response:\r\n+//         \"Dashboard, Dynamic time table, Learning Networks, Little Masters, Video Based Dictionary, General Search.\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"Features of platform\",\r\n+\r\n+//       response:\r\n+//         \"Dashboard, Dynamic time table, Learning Networks, Little Masters, Video Based Dictionary, General Search.\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"What does the platform offer\",\r\n+\r\n+//       response:\r\n+//         \"Dashboard, Dynamic time table, Learning Networks, Little Masters, Video Based Dictionary, General Search.\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"Say me the features of platform\",\r\n+\r\n+//       response:\r\n+//         \"Dashboard, Dynamic time table, Learning Networks, Little Masters, Video Based Dictionary, General Search.\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"Say me the services of platform\",\r\n+\r\n+//       response:\r\n+//         \"Dashboard, Dynamic time table, Learning Networks, Little Masters, Video Based Dictionary, General Search.\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"tell me the services offered by the platform\",\r\n+\r\n+//       response:\r\n+//         \"Dashboard, Dynamic time table, Learning Networks, Little Masters, Video Based Dictionary, General Search.\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"explain platform services\",\r\n+\r\n+//       response:\r\n+//         \"Dashboard, Dynamic time table, Learning Networks, Little Masters, Video Based Dictionary, General Search.\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"Give me the Parent voice of Julia Harris\",\r\n+\r\n+//       response:\r\n+//         \"Brane education has helped my son a lot in his studies. He improved a lot in his studies and is now able to score good marks in his exams\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"Play today's motivational video\",\r\n+\r\n+//       response: \"I am playing the video\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"Play today's video\",\r\n+\r\n+//       response: \"I am playing Motivational video\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"Leaders Voice\",\r\n+\r\n+//       response:\r\n+//         \"This Voice-interactive AI Platform is a game Changer. It revolutionizes education.\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"Curriculum Supported by Brane Education\",\r\n+\r\n+//       response:\r\n+//         \"we support multiple Boards let me say few Telangana State Board Andhra Pradesh Board Maharashtra Board Assam Board\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"Boards supported by the platform\",\r\n+\r\n+//       response:\r\n+//         \"we support multiple Boards let me say few Telangana State Board Andhra Pradesh Board Maharashtra Board Assam Board\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"Curriculum\",\r\n+\r\n+//       response:\r\n+//         \"we support multiple Boards let me say few Telangana State Board Andhra Pradesh Board Maharashtra Board Assam Board\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"Go to landing page\",\r\n+\r\n+//       response: \"Okay, I am taking you to the landing page.\",\r\n+\r\n+//       route: \"/childpage\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"take me to landing page\",\r\n+\r\n+//       response: \"Okay, I am taking you to the landing page.\",\r\n+\r\n+//       route: \"/childpage\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"move to landing page\",\r\n+\r\n+//       response: \"Okay, I am taking you to the landing page.\",\r\n+\r\n+//       route: \"/childpage\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"roll back to landing page\",\r\n+\r\n+//       response: \"Okay, I am taking you to the landing page.\",\r\n+\r\n+//       route: \"/childpage\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"move to landing page\",\r\n+\r\n+//       response: \"Okay, I am taking you to the landing page.\",\r\n+\r\n+//       route: \"/childpage\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"what is today's quote\",\r\n+\r\n+//       response:\r\n+//         \"Determination is the power that sees us through all our frustration and obstacles. It helps in building our willpower which is the very basis of success.\",\r\n+\r\n+//       route: \"/childpage\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"Today's Inspirational quote\",\r\n+\r\n+//       response:\r\n+//         \"Determination is the power that sees us through all our frustration and obstacles. It helps in building our willpower which is the very basis of success.\",\r\n+\r\n+//       route: \"/childpage\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"say me today's quote\",\r\n+\r\n+//       response:\r\n+//         \"Determination is the power that sees us through all our frustration and obstacles. It helps in building our willpower which is the very basis of success.\",\r\n+\r\n+//       route: \"/childpage\",\r\n+//     },\r\n+//     {\r\n+//       utterance: \"go back\",\r\n+//       response: \"\",\r\n+//       action: goBack, // Note the use of an action property\r\n+//     },\r\n+//     {\r\n+//       utterance: \"go forward\",\r\n+//       response: \"\",\r\n+//       action: goForward,\r\n+//     },\r\n+//     {\r\n+//       utterance: \"play video\",\r\n+//       // response: \"Playing video.\",\r\n+//       action: playVideo,\r\n+//     },\r\n+//     {\r\n+//       utterance: \"pause video\",\r\n+//       // response: \"Pausing video.\",\r\n+//       action: pauseVideo,\r\n+//     },\r\n+//     {\r\n+//       utterance: \"start video\",\r\n+//       // response: \"Playing video.\",\r\n+//       action: playVideo,\r\n+//     },\r\n+//     {\r\n+//       utterance: \"stop video\",\r\n+//       // response: \"Playing video.\",\r\n+//       action: pauseVideo,\r\n+//     },\r\n+//     {\r\n+//       utterance: \"scroll up\",\r\n+//       // response: \"Scrolling up.\",\r\n+//       action: scrollUp,\r\n+//     },\r\n+//     {\r\n+//       utterance: \"scroll down\",\r\n+//       // response: \"Scrolling down.\",\r\n+//       action: scrollDown,\r\n+//     },\r\n+//     {\r\n+//       utterance: \"go up\",\r\n+\r\n+//       // response: \"Scrolling up.\",\r\n+//       action: scrollUp,\r\n+//     },\r\n+//     {\r\n+//       utterance: \"go down\",\r\n+//       // response: \"Scrolling down.\",\r\n+//       action: scrollDown,\r\n+//     },\r\n+//     {\r\n+//       utterance: \"scroll to top\",\r\n+//       action: scrollToTop,\r\n+//     },\r\n+//     {\r\n+//       utterance: \"scroll to bottom\",\r\n+//       action: scrollToBottom,\r\n+//     },\r\n+//     {\r\n+//       utterance: \"brane stop\",\r\n+//       action: stopListening,\r\n+//     },\r\n+//     {\r\n+//       utterance: \"brane turn off\",\r\n+//       action: stopListening,\r\n+//     },\r\n+//     {\r\n+//       utterance: \"brane stop the bot\",\r\n+//       action: stopListening,\r\n+//     },\r\n+//   ];\r\n+\r\n+//   return (\r\n+//     <div className=\"speech-bot-container\">\r\n+//       <div\r\n+//         className={`button-container ${\r\n+//           isListening ? \"voicebotframeactive\" : \"voicebotframe\"\r\n+//         }`}\r\n+//       >\r\n+//         <button onClick={isListening ? stopListening : startListening}>\r\n+//           {isListening ? \"Stop\" : \"Start\"} Animation\r\n+//         </button>\r\n+//         {/* <button onClick={toggleBotActive}>\r\n+//         {isBotActive ? 'Deactivate Bot' : 'Activate Bot'}\r\n+//       </button> */}\r\n+//       </div>\r\n+//     </div>\r\n+//   );\r\n+// };\r\n+\r\n+// export default VoiceBot;\r\n+\r\n+//Bot Video added but some start issues\r\n+\r\n+// import React, { useState, useEffect, useRef } from \"react\";\r\n+// import { useNavigate, useLocation } from \"react-router-dom\";\r\n+// import Fuse from \"fuse.js\";\r\n+// import \"./VoiceBot.css\";\r\n+\r\n+// const VoiceBot = ({ videoRef }) => {\r\n+//   const [isListening, setIsListening] = useState(false);\r\n+//   const [isSpeaking, setIsSpeaking] = useState(false);\r\n+//   const recognition = useRef(null);\r\n+//   const speechSynthesis = useRef(window.speechSynthesis);\r\n+//   const hasGreeted = useRef(false);\r\n+//   const restartRecognitionTimeout = useRef(null);\r\n+//   const navigate = useNavigate();\r\n+//   const location = useLocation();\r\n+//   const [isRecognitionActive, setIsRecognitionActive] = useState(false); // New state to track recognition status\r\n+\r\n+//   useEffect(() => {\r\n+//     recognition.current = new window.webkitSpeechRecognition();\r\n+//     recognition.current.continuous = true;\r\n+//     recognition.current.interimResults = false;\r\n+//     recognition.current.onresult = onResult;\r\n+//     recognition.current.onend = () => {\r\n+//       console.log(\"Recognition ended.\");\r\n+//       if (isListening) {\r\n+//         startListening();\r\n+//       }\r\n+//     };\r\n+//     recognition.current.onerror = (event) => {\r\n+//       console.error(\"Recognition error:\", event.error);\r\n+//     };\r\n+\r\n+//     return () => {\r\n+//       recognition.current.abort();\r\n+//     };\r\n+//   }, []);\r\n+\r\n+//   // Update useEffect for managing the recognition state based on isListening and isRecognitionActive\r\n+//   useEffect(() => {\r\n+//     if (isListening && !isRecognitionActive) {\r\n+//       startListening();\r\n+//     } else if (!isListening && isRecognitionActive) {\r\n+//       stopListening();\r\n+//     }\r\n+//   }, [isListening, isRecognitionActive]);\r\n+\r\n+//   const goBack = () => {\r\n+//     if (window.history.length > 1) {\r\n+//       navigate(-1);\r\n+//     } else {\r\n+//       speak(\"Can't go back any further.\");\r\n+//     }\r\n+//   };\r\n+\r\n+//   const goForward = () => {\r\n+//     // Unfortunately, there's no direct way to check if you can go forward in the history.\r\n+//     // You might need to manage this state manually based on user navigation.\r\n+//     navigate(1);\r\n+//   };\r\n+\r\n+//   const playVideo = () => {\r\n+//     if (videoRef.current && !videoRef.current.paused) {\r\n+//       speak(\"Video is already playing.\");\r\n+//     } else if (videoRef.current) {\r\n+//       videoRef.current.play();\r\n+//       speak(\"Playing video.\");\r\n+//     } else {\r\n+//       speak(\"No video to play.\");\r\n+//     }\r\n+//   };\r\n+\r\n+//   const pauseVideo = () => {\r\n+//     if (videoRef.current && videoRef.current.paused) {\r\n+//       speak(\"Video is already paused.\");\r\n+//     } else if (videoRef.current) {\r\n+//       videoRef.current.pause();\r\n+//       speak(\"Video paused.\");\r\n+//     } else {\r\n+//       speak(\"No video to pause.\");\r\n+//     }\r\n+//   };\r\n+\r\n+//   const scrollAmount = window.innerHeight * 0.82;\r\n+\r\n+//   const scrollUp = () => {\r\n+//     if (window.pageYOffset === 0) {\r\n+//       speak(\"Already at the top of the page.\");\r\n+//     } else {\r\n+//       window.scrollBy(0, -scrollAmount);\r\n+//       speak(\"Scrolled up.\");\r\n+//     }\r\n+//   };\r\n+\r\n+//   const scrollDown = () => {\r\n+//     const maxScrollTop =\r\n+//       document.documentElement.scrollHeight - window.innerHeight;\r\n+//     if (window.pageYOffset >= maxScrollTop) {\r\n+//       speak(\"Already at the bottom of the page.\");\r\n+//     } else {\r\n+//       window.scrollBy(0, scrollAmount);\r\n+//       speak(\"Scrolled down.\");\r\n+//     }\r\n+//   };\r\n+\r\n+//   const scrollToTop = () => {\r\n+//     if (window.pageYOffset === 0) {\r\n+//       speak(\"Already at the top of the page.\");\r\n+//     } else {\r\n+//       window.scrollTo(0, 0);\r\n+//       speak(\"Scrolled to the top of the page.\");\r\n+//     }\r\n+//   };\r\n+\r\n+//   const scrollToBottom = () => {\r\n+//     const maxScrollTop =\r\n+//       document.documentElement.scrollHeight - window.innerHeight;\r\n+//     if (window.pageYOffset >= maxScrollTop) {\r\n+//       speak(\"Already at the bottom of the page.\");\r\n+//     } else {\r\n+//       window.scrollTo(0, document.body.scrollHeight);\r\n+//       speak(\"Scrolled to the bottom of the page.\");\r\n+//     }\r\n+//   };\r\n+\r\n+//   // const speak = (message) => {\r\n+//   //   const utterance = new SpeechSynthesisUtterance(message);\r\n+//   //   utterance.onend = () => {\r\n+//   //     setIsSpeaking(false);\r\n+//   //     console.log(\"Speaking ended.\");\r\n+//   //     // Only restart recognition if we're still supposed to be listening\r\n+//   //     // if (isListening) {\r\n+//   //     //   if (restartRecognitionTimeout.current) {\r\n+//   //     //     clearTimeout(restartRecognitionTimeout.current);\r\n+//   //     //   }\r\n+//   //     //   restartRecognitionTimeout.current = setTimeout(() => {\r\n+//   //     //     console.log(\"Recognition restarted.\");\r\n+//   //     //     recognition.current.start();\r\n+//   //     //   }, 100); // Delay to prevent immediate restart\r\n+//   //     // }\r\n+//   //     if (isListening && !recognition.current.starting) { // Check the flag before restarting\r\n+//   //       recognition.current.starting = true; // Set the flag when starting recognition\r\n+//   //       recognition.current.start();\r\n+//   //     }\r\n+//   //   };\r\n+\r\n+//   //   setIsSpeaking(true);\r\n+//   //   console.log(\"Speaking started.\");\r\n+//   //   recognition.current.stop(); // Stop recognition when the bot starts speaking\r\n+//   //   speechSynthesis.current.speak(utterance);\r\n+//   // };\r\n+\r\n+//   const speak = (message) => {\r\n+//     console.log(\"speak function called with message:\", message);\r\n+//     const utterance = new SpeechSynthesisUtterance(message);\r\n+//     utterance.onend = () => {\r\n+//       setIsSpeaking(false);\r\n+//       console.log(\"Speaking ended.\");\r\n+//       // Directly handle the restart of recognition here if needed\r\n+//       if (isListening) {\r\n+//         startListening();\r\n+//       }\r\n+//     };\r\n+\r\n+//     setIsSpeaking(true);\r\n+//     console.log(\"Speaking started.\");\r\n+//     recognition.current.stop(); // Ensure to stop recognition before speaking\r\n+//     speechSynthesis.current.speak(utterance);\r\n+//   };\r\n+\r\n+//   const onResult = (event) => {\r\n+//     const resultIndex = event.resultIndex;\r\n+//     const transcript = event.results[resultIndex][0].transcript\r\n+//       .trim()\r\n+//       .toLowerCase();\r\n+\r\n+//     if (event.results[resultIndex].isFinal) {\r\n+//       console.log(`Recognized text: ${transcript}`);\r\n+//       if (transcript.includes(\"brain\")) {\r\n+//         console.log(\"Wake word heard, processing command...\");\r\n+//         handleCommandWithFuse(transcript.replace(\"brain\", \"\"));\r\n+//       }\r\n+//     }\r\n+//   };\r\n+\r\n+//   // const onRecognitionEnd = () => {\r\n+//   //   console.log(\"Recognition ended.\");\r\n+//   //   setIsRecognitionActive(false); // Update state when recognition ends\r\n+//   //   recognition.current.starting = false; // Reset the flag when recognition ends\r\n+//   //   // We now check if the recognition is already running before starting it again\r\n+//   //   if (isListening && !isSpeaking && !recognition.current?.starting) {\r\n+//   //     console.log(\"Restarting recognition.\");\r\n+//   //     recognition.current.start();\r\n+//   //   }\r\n+//   // };\r\n+\r\n+//   // useEffect(() => {\r\n+//   //   if (isListening && !hasGreeted.current) {\r\n+//   //     speak(\"Hello, I'm Brane. How can I assist you today?\");\r\n+//   //     hasGreeted.current = true;\r\n+//   //   } else if (isListening && !isSpeaking) {\r\n+//   //     recognition.current.start();\r\n+//   //   }\r\n+//   // }, [isListening, isSpeaking]);\r\n+\r\n+//   useEffect(() => {\r\n+//     if (isListening && !hasGreeted.current) {\r\n+//       speak(\"Hello, I'm Brane. How can I assist you today?\");\r\n+//       hasGreeted.current = true;\r\n+//     } else if (isListening && !isSpeaking && !recognition.current.starting) {\r\n+//       // Check the flag before starting\r\n+//       recognition.current.starting = true; // Set the flag when starting recognition\r\n+//       recognition.current.start();\r\n+//     }\r\n+//   }, [isListening, isSpeaking]);\r\n+\r\n+//   // const startListening = () => {\r\n+//   //   console.log(\"Attempting to start listening.\");\r\n+//   //   if (recognition.current && !recognition.current.starting) {\r\n+//   //     setIsListening(true);\r\n+//   //     recognition.current.starting = true; // Set the flag when starting recognition\r\n+//   //     recognition.current.start();\r\n+//   //     console.log(\"Listening started.\");\r\n+//   //   }\r\n+//   // };\r\n+\r\n+//   // const stopListening = () => {\r\n+//   //   console.log(\"Stopping listening.\");\r\n+\r\n+//   //   setIsListening(false);\r\n+//   //   recognition.current.stop();\r\n+//   //   if (speechSynthesis.current.speaking) {\r\n+//   //     speechSynthesis.current.cancel();\r\n+//   //   }\r\n+//   //   if (restartRecognitionTimeout.current) {\r\n+//   //     clearTimeout(restartRecognitionTimeout.current);\r\n+//   //   }\r\n+//   //   console.log(\"Listening stopped.\");\r\n+//   // };\r\n+//   // Handle start and stop listening logic\r\n+//   const startListening = () => {\r\n+//     console.log(\"Attempting to start listening.\");\r\n+//     if (!recognition.current.starting) {\r\n+//       setIsListening(true);\r\n+//       recognition.current.starting = true;\r\n+//       recognition.current.start();\r\n+//       console.log(\"Listening started.\");\r\n+//     } else {\r\n+//       console.log(\"Recognition already active.\");\r\n+//     }\r\n+//   };\r\n+\r\n+//   const stopListening = () => {\r\n+//     console.log(\"Stopping listening.\");\r\n+//     if (recognition.current.starting) {\r\n+//       setIsListening(false);\r\n+//       recognition.current.starting = false;\r\n+//       recognition.current.stop();\r\n+//       console.log(\"Listening stopped.\");\r\n+//     } else {\r\n+//       console.log(\"Recognition already inactive.\");\r\n+//     }\r\n+//   };\r\n+\r\n+//   // const handleCommandWithFuse = (command) => {\r\n+//   //   const fuse = new Fuse(commands, { keys: [\"utterance\"], threshold: 0.4 });\r\n+//   //   const results = fuse.search(command);\r\n+//   //   const foundCommand = results.length ? results[0].item : null;\r\n+\r\n+//   //   if (foundCommand) {\r\n+//   //     console.log(\"Command found:\", foundCommand.utterance);\r\n+//   //     speak(foundCommand.response);\r\n+//   //     if (foundCommand.route) {\r\n+//   //       navigate(foundCommand.route); // Navigate to the route specified in the command\r\n+//   //     }\r\n+//   //   } else {\r\n+//   //     console.log(\"No command found.\");\r\n+//   //     speak(\"I'm not sure how to respond to that.\");\r\n+//   //   }\r\n+//   // };\r\n+\r\n+//   const handleCommandWithFuse = (command) => {\r\n+//     const fuse = new Fuse(commands, { keys: [\"utterance\"], threshold: 0.4 });\r\n+//     const results = fuse.search(command);\r\n+//     const foundCommand = results.length ? results[0].item : null;\r\n+\r\n+//     if (foundCommand) {\r\n+//       console.log(\"Command found:\", foundCommand.utterance);\r\n+\r\n+//       if (foundCommand.route) {\r\n+//         if (location.pathname !== foundCommand.route) {\r\n+//           navigate(foundCommand.route);\r\n+//           speak(\r\n+//             `Navigating to ${\r\n+//               foundCommand.routeDescription || \"requested page\"\r\n+//             }.`\r\n+//           );\r\n+//         } else {\r\n+//           speak(\r\n+//             `You are already on the ${\r\n+//               foundCommand.routeDescription || \"requested page\"\r\n+//             }.`\r\n+//           );\r\n+//         }\r\n+//       } else if (foundCommand.action) {\r\n+//         foundCommand.action();\r\n+//       }\r\n+\r\n+//       if (foundCommand.response) {\r\n+//         speak(foundCommand.response);\r\n+//       }\r\n+//     } else {\r\n+//       console.log(\"No command found.\");\r\n+//       speak(\"I'm not sure how to respond to that.\");\r\n+//     }\r\n+//   };\r\n+\r\n+//   const commands = [\r\n+//     {\r\n+//       utterance: \"Hello who are you ?\",\r\n+\r\n+//       response:\r\n+//         \"Hi! This is Brane! your Voice bot from Brane Education How can I Assist you Today ?\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"Hello\",\r\n+\r\n+//       response: \"Hi! How can I assist you today?\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"hello\",\r\n+\r\n+//       response: \"Hi! How can I assist you today?\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"Hi.\",\r\n+\r\n+//       response: \"Hello! How can I assist you today?\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"Hey there\",\r\n+\r\n+//       response: \"Hi! How can I assist you today?\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"Good morning Brane.\",\r\n+\r\n+//       response: \"Hey Hiii! Good morning  ! How can I help you?\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"Good afternoon Brane.\",\r\n+\r\n+//       response: \"Hey Hiii! Good after noon ! How can I help you?\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"Good evening Brane.\",\r\n+\r\n+//       response: \"Hey Hiii! Good evening ! How can I help you?\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"can you please take me to login page\",\r\n+//       route: \"/login\",\r\n+//       routeDescription: \"login page\",\r\n+//       response: \"Navigating to the login page.\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"go to login page\",\r\n+//       route: \"/login\",\r\n+//       routeDescription: \"login page\",\r\n+//       response: \"Navigating to the login page.\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"please take me to login page\",\r\n+//       route: \"/login\",\r\n+//       routeDescription: \"login page\",\r\n+//       response: \"Navigating to the login page.\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"Go to login page\",\r\n+//       route: \"/login\",\r\n+//       routeDescription: \"login page\",\r\n+//       response: \"Navigating to the login page.\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"open login page\",\r\n+//       route: \"/login\",\r\n+//       routeDescription: \"login page\",\r\n+//       response: \"Navigating to the login page.\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"can you please take me to signup page\",\r\n+//       route: \"/signup\",\r\n+//       routeDescription: \"signup page\",\r\n+//       response: \"Navigating to the signup page.\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"take me to signup page\",\r\n+//       route: \"/signup\",\r\n+//       routeDescription: \"signup page\",\r\n+//       response: \"Navigating to the signup page.\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"Go to signup page\",\r\n+//       route: \"/signup\",\r\n+//       routeDescription: \"signup page\",\r\n+//       response: \"Navigating to the signup page.\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"open signup page\",\r\n+//       route: \"/signup\",\r\n+//       routeDescription: \"signup page\",\r\n+//       response: \"Navigating to the signup page.\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"what are platform features\",\r\n+\r\n+//       response:\r\n+//         \"Dashboard, Dynamic time table, Learning Networks, Little Masters, Video Based Dictionary, General Search.\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"Features of platform\",\r\n+\r\n+//       response:\r\n+//         \"Dashboard, Dynamic time table, Learning Networks, Little Masters, Video Based Dictionary, General Search.\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"What does the platform offer\",\r\n+\r\n+//       response:\r\n+//         \"Dashboard, Dynamic time table, Learning Networks, Little Masters, Video Based Dictionary, General Search.\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"Say me the features of platform\",\r\n+\r\n+//       response:\r\n+//         \"Dashboard, Dynamic time table, Learning Networks, Little Masters, Video Based Dictionary, General Search.\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"Say me the services of platform\",\r\n+\r\n+//       response:\r\n+//         \"Dashboard, Dynamic time table, Learning Networks, Little Masters, Video Based Dictionary, General Search.\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"tell me the services offered by the platform\",\r\n+\r\n+//       response:\r\n+//         \"Dashboard, Dynamic time table, Learning Networks, Little Masters, Video Based Dictionary, General Search.\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"explain platform services\",\r\n+\r\n+//       response:\r\n+//         \"Dashboard, Dynamic time table, Learning Networks, Little Masters, Video Based Dictionary, General Search.\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"Give me the Parent voice of Julia Harris\",\r\n+\r\n+//       response:\r\n+//         \"Brane education has helped my son a lot in his studies. He improved a lot in his studies and is now able to score good marks in his exams\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"Play today's motivational video\",\r\n+\r\n+//       response: \"I am playing the video\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"Play today's video\",\r\n+\r\n+//       response: \"I am playing Motivational video\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"Leaders Voice\",\r\n+\r\n+//       response:\r\n+//         \"This Voice-interactive AI Platform is a game Changer. It revolutionizes education.\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"Curriculum Supported by Brane Education\",\r\n+\r\n+//       response:\r\n+//         \"we support multiple Boards let me say few Telangana State Board Andhra Pradesh Board Maharashtra Board Assam Board\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"Boards supported by the platform\",\r\n+\r\n+//       response:\r\n+//         \"we support multiple Boards let me say few Telangana State Board Andhra Pradesh Board Maharashtra Board Assam Board\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"Curriculum\",\r\n+\r\n+//       response:\r\n+//         \"we support multiple Boards let me say few Telangana State Board Andhra Pradesh Board Maharashtra Board Assam Board\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"Go to landing page\",\r\n+\r\n+//       response: \"Okay, I am taking you to the landing page.\",\r\n+\r\n+//       route: \"/childpage\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"take me to landing page\",\r\n+\r\n+//       response: \"Okay, I am taking you to the landing page.\",\r\n+\r\n+//       route: \"/childpage\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"move to landing page\",\r\n+\r\n+//       response: \"Okay, I am taking you to the landing page.\",\r\n+\r\n+//       route: \"/childpage\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"roll back to landing page\",\r\n+\r\n+//       response: \"Okay, I am taking you to the landing page.\",\r\n+\r\n+//       route: \"/childpage\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"move to landing page\",\r\n+\r\n+//       response: \"Okay, I am taking you to the landing page.\",\r\n+\r\n+//       route: \"/childpage\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"what is today's quote\",\r\n+\r\n+//       response:\r\n+//         \"Determination is the power that sees us through all our frustration and obstacles. It helps in building our willpower which is the very basis of success.\",\r\n+\r\n+//       // route: \"/childpage\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"Today's Inspirational quote\",\r\n+\r\n+//       response:\r\n+//         \"Determination is the power that sees us through all our frustration and obstacles. It helps in building our willpower which is the very basis of success.\",\r\n+\r\n+//       // route: \"/childpage\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"say me today's quote\",\r\n+\r\n+//       response:\r\n+//         \"Determination is the power that sees us through all our frustration and obstacles. It helps in building our willpower which is the very basis of success.\",\r\n+\r\n+//       // route: \"/childpage\",\r\n+//     },\r\n+//     {\r\n+//       utterance: \"go back\",\r\n+//       response: \"Going back.\",\r\n+//       action: goBack, // Note the use of an action property\r\n+//     },\r\n+//     {\r\n+//       utterance: \"go forward\",\r\n+//       response: \"Going forward.\",\r\n+//       action: goForward,\r\n+//     },\r\n+//     {\r\n+//       utterance: \"play video\",\r\n+//       // response: \"Playing video.\",\r\n+//       action: playVideo,\r\n+//     },\r\n+//     {\r\n+//       utterance: \"pause video\",\r\n+//       // response: \"Pausing video.\",\r\n+//       action: pauseVideo,\r\n+//     },\r\n+//     {\r\n+//       utterance: \"start video\",\r\n+//       // response: \"Playing video.\",\r\n+//       action: playVideo,\r\n+//     },\r\n+//     {\r\n+//       utterance: \"stop video\",\r\n+//       // response: \"Playing video.\",\r\n+//       action: pauseVideo,\r\n+//     },\r\n+//     {\r\n+//       utterance: \"scroll up\",\r\n+//       // response: \"Scrolling up.\",\r\n+//       action: scrollUp,\r\n+//     },\r\n+//     {\r\n+//       utterance: \"scroll down\",\r\n+//       // response: \"Scrolling down.\",\r\n+//       action: scrollDown,\r\n+//     },\r\n+//     {\r\n+//       utterance: \"go up\",\r\n+\r\n+//       // response: \"Scrolling up.\",\r\n+//       action: scrollUp,\r\n+//     },\r\n+//     {\r\n+//       utterance: \"go down\",\r\n+//       // response: \"Scrolling down.\",\r\n+//       action: scrollDown,\r\n+//     },\r\n+//     {\r\n+//       utterance: \"scroll to top\",\r\n+//       action: scrollToTop,\r\n+//     },\r\n+//     {\r\n+//       utterance: \"scroll to bottom\",\r\n+//       action: scrollToBottom,\r\n+//     },\r\n+//   ];\r\n+//   return (\r\n+//     <div className=\"speech-bot-container\">\r\n+//       <div\r\n+//         className={`button-container ${\r\n+//           isListening ? \"voicebotframeactive\" : \"voicebotframe\"\r\n+//         }`}\r\n+//       >\r\n+//         <div onClick={isListening ? stopListening : startListening}>\r\n+//           <iframe\r\n+//             src={\r\n+//               isListening\r\n+//                 ? \"https://lottie.host/?file=a89aca3f-5407-4052-82c3-2048afca7a9f/NpCdWzLSKD.json\"\r\n+//                 : \"https://lottie.host/?file=d2b6cc0e-fe95-4847-85b5-35365fca7e00/vTudpCuPZq.json\"\r\n+//             }\r\n+//             width=\"120\" // Set your desired width\r\n+//             height=\"120\" // Set your desired height\r\n+//             title={isListening ? \"Stop Animation\" : \"Start Animation\"}\r\n+//             className={isListening ? \"voicebotframeactive\" : \"voicebotframe\"}\r\n+//           ></iframe>\r\n+//           {isListening ? (\r\n+//             <div className=\"overlay\" onClick={stopListening}></div>\r\n+//           ) : (\r\n+//             <div className=\"overlay\" onClick={startListening}></div>\r\n+//           )}\r\n+//         </div>\r\n+//       </div>\r\n+//     </div>\r\n+//   );\r\n+// };\r\n+\r\n+// export default VoiceBot;\r\n+\r\n+// All functionalities but messed up\r\n+\r\n+// import React, { useState, useEffect, useRef } from \"react\";\r\n+// import { useNavigate, useLocation } from \"react-router-dom\";\r\n+// import Fuse from \"fuse.js\";\r\n+// import \"./VoiceBot.css\";\r\n+\r\n+// const VoiceBot = ({ videoRef, takeTestRef, goBackRef }) => {\r\n+//   const [isListening, setIsListening] = useState(false);\r\n+//   const [isSpeaking, setIsSpeaking] = useState(false);\r\n+//   const recognition = useRef(null);\r\n+//   const speechSynthesis = useRef(window.speechSynthesis);\r\n+//   const hasGreeted = useRef(false);\r\n+//   const navigate = useNavigate();\r\n+//   const location = useLocation();\r\n+//   const isRecognitionActive = useRef(false);\r\n+\r\n+//   useEffect(() => {\r\n+//     recognition.current = new window.webkitSpeechRecognition();\r\n+//     recognition.current.continuous = true;\r\n+//     recognition.current.interimResults = false;\r\n+//     recognition.current.onresult = onResult;\r\n+//     recognition.current.onend = onRecognitionEnd;\r\n+\r\n+//     return () => {\r\n+//       if (recognition.current) {\r\n+//         recognition.current.abort();\r\n+//       }\r\n+//     };\r\n+//   }, [location.pathname]);\r\n+\r\n+//   const onResult = (event) => {\r\n+//     const resultIndex = event.resultIndex;\r\n+//     const transcript = event.results[resultIndex][0].transcript\r\n+//       .trim()\r\n+//       .toLowerCase();\r\n+\r\n+//     if (event.results[resultIndex].isFinal) {\r\n+//       console.log(`Recognized text: ${transcript}`);\r\n+//       if (transcript.includes(\"brain\")) {\r\n+//         console.log(\"Wake word heard, processing command...\");\r\n+//         handleCommandWithFuse(transcript.replace(\"brain\", \"\"));\r\n+//       }\r\n+//     }\r\n+//   };\r\n+\r\n+//   const startListening = () => {\r\n+//     if (!isRecognitionActive.current) {\r\n+//       setIsListening(true);\r\n+//       recognition.current.start();\r\n+//       isRecognitionActive.current = true;\r\n+//     }\r\n+//   };\r\n+\r\n+//   const stopListening = () => {\r\n+//     if (isRecognitionActive.current) {\r\n+//       setIsListening(false);\r\n+//       recognition.current.stop();\r\n+//       isRecognitionActive.current = false;\r\n+//     }\r\n+//   };\r\n+\r\n+//   const onRecognitionEnd = () => {\r\n+//     isRecognitionActive.current = false;\r\n+//     if (isListening) {\r\n+//       startListening();\r\n+//     }\r\n+//   };\r\n+\r\n+//   const speak = (message) => {\r\n+//     const utterance = new SpeechSynthesisUtterance(message);\r\n+//     utterance.onend = () => {\r\n+//       setIsSpeaking(false);\r\n+//       if (isListening && !isRecognitionActive.current) {\r\n+//         startListening();\r\n+//       }\r\n+//     };\r\n+\r\n+//     setIsSpeaking(true);\r\n+//     if (isRecognitionActive.current) {\r\n+//       stopListening(); // Adjusted to use stopListening\r\n+//     }\r\n+//     speechSynthesis.current.speak(utterance);\r\n+//   };\r\n+\r\n+//   useEffect(() => {\r\n+//     if (isListening && !hasGreeted.current) {\r\n+//       speak(\"Hello, I'm Brane. How can I assist you today?\");\r\n+//       hasGreeted.current = true;\r\n+//     }\r\n+//   }, [isListening]);\r\n+\r\n+//   const goBack = () => {\r\n+//     if (window.history.length > 1) {\r\n+//       navigate(-1);\r\n+//     } else {\r\n+//       speak(\"Can't go back any further.\");\r\n+//     }\r\n+//   };\r\n+\r\n+//   const goForward = () => {\r\n+//     // Unfortunately, there's no direct way to check if you can go forward in the history.\r\n+//     // You might need to manage this state manually based on user navigation.\r\n+//     navigate(1);\r\n+//   };\r\n+\r\n+//   const playVideo = () => {\r\n+//     if (videoRef.current && !videoRef.current.paused) {\r\n+//       speak(\"Video is already playing.\");\r\n+//     } else if (videoRef.current) {\r\n+//       videoRef.current.play();\r\n+//       speak(\"Playing video.\");\r\n+//     } else {\r\n+//       speak(\"No video to play.\");\r\n+//     }\r\n+//   };\r\n+\r\n+//   const pauseVideo = () => {\r\n+//     if (videoRef.current && videoRef.current.paused) {\r\n+//       speak(\"Video is already paused.\");\r\n+//     } else if (videoRef.current) {\r\n+//       videoRef.current.pause();\r\n+//       speak(\"Video paused.\");\r\n+//     } else {\r\n+//       speak(\"No video to pause.\");\r\n+//     }\r\n+//   };\r\n+\r\n+//   const scrollAmount = window.innerHeight * 0.82;\r\n+\r\n+//   const scrollUp = () => {\r\n+//     if (window.pageYOffset === 0) {\r\n+//       speak(\"Already at the top of the page.\");\r\n+//     } else {\r\n+//       window.scrollBy(0, -scrollAmount);\r\n+//       speak(\"Scrolled up.\");\r\n+//     }\r\n+//   };\r\n+\r\n+//   const scrollDown = () => {\r\n+//     const maxScrollTop =\r\n+//       document.documentElement.scrollHeight - window.innerHeight;\r\n+//     if (window.pageYOffset >= maxScrollTop) {\r\n+//       speak(\"Already at the bottom of the page.\");\r\n+//     } else {\r\n+//       window.scrollBy(0, scrollAmount);\r\n+//       speak(\"Scrolled down.\");\r\n+//     }\r\n+//   };\r\n+\r\n+//   const scrollToTop = () => {\r\n+//     if (window.pageYOffset === 0) {\r\n+//       speak(\"Already at the top of the page.\");\r\n+//     } else {\r\n+//       window.scrollTo(0, 0);\r\n+//       speak(\"Scrolled to the top of the page.\");\r\n+//     }\r\n+//   };\r\n+\r\n+//   const scrollToBottom = () => {\r\n+//     const maxScrollTop =\r\n+//       document.documentElement.scrollHeight - window.innerHeight;\r\n+//     if (window.pageYOffset >= maxScrollTop) {\r\n+//       speak(\"Already at the bottom of the page.\");\r\n+//     } else {\r\n+//       window.scrollTo(0, document.body.scrollHeight);\r\n+//       speak(\"Scrolled to the bottom of the page.\");\r\n+//     }\r\n+//   };\r\n+\r\n+//   // const speak = (message) => {\r\n+//   //   const utterance = new SpeechSynthesisUtterance(message);\r\n+//   //   utterance.onend = () => {\r\n+//   //     setIsSpeaking(false);\r\n+//   //     console.log(\"Speaking ended.\");\r\n+//   //     // Only restart recognition if we're still supposed to be listening\r\n+//   //     // if (isListening) {\r\n+//   //     //   if (restartRecognitionTimeout.current) {\r\n+//   //     //     clearTimeout(restartRecognitionTimeout.current);\r\n+//   //     //   }\r\n+//   //     //   restartRecognitionTimeout.current = setTimeout(() => {\r\n+//   //     //     console.log(\"Recognition restarted.\");\r\n+//   //     //     recognition.current.start();\r\n+//   //     //   }, 100); // Delay to prevent immediate restart\r\n+//   //     // }\r\n+//   //     if (isListening && !recognition.current.starting) { // Check the flag before restarting\r\n+//   //       recognition.current.starting = true; // Set the flag when starting recognition\r\n+//   //       recognition.current.start();\r\n+//   //     }\r\n+//   //   };\r\n+\r\n+//   //   setIsSpeaking(true);\r\n+//   //   console.log(\"Speaking started.\");\r\n+//   //   recognition.current.stop(); // Stop recognition when the bot starts speaking\r\n+//   //   speechSynthesis.current.speak(utterance);\r\n+//   // };\r\n+\r\n+//   // const onRecognitionEnd = () => {\r\n+//   //   console.log(\"Recognition ended.\");\r\n+//   //   setIsRecognitionActive(false); // Update state when recognition ends\r\n+//   //   recognition.current.starting = false; // Reset the flag when recognition ends\r\n+//   //   // We now check if the recognition is already running before starting it again\r\n+//   //   if (isListening && !isSpeaking && !recognition.current?.starting) {\r\n+//   //     console.log(\"Restarting recognition.\");\r\n+//   //     recognition.current.start();\r\n+//   //   }\r\n+//   // };\r\n+\r\n+//   // useEffect(() => {\r\n+//   //   if (isListening && !hasGreeted.current) {\r\n+//   //     speak(\"Hello, I'm Brane. How can I assist you today?\");\r\n+//   //     hasGreeted.current = true;\r\n+//   //   } else if (isListening && !isSpeaking) {\r\n+//   //     recognition.current.start();\r\n+//   //   }\r\n+//   // }, [isListening, isSpeaking]);\r\n+\r\n+//   // const startListening = () => {\r\n+//   //   console.log(\"Attempting to start listening.\");\r\n+//   //   if (recognition.current && !recognition.current.starting) {\r\n+//   //     setIsListening(true);\r\n+//   //     recognition.current.starting = true; // Set the flag when starting recognition\r\n+//   //     recognition.current.start();\r\n+//   //     console.log(\"Listening started.\");\r\n+//   //   }\r\n+//   // };\r\n+\r\n+//   // const stopListening = () => {\r\n+//   //   console.log(\"Stopping listening.\");\r\n+\r\n+//   //   setIsListening(false);\r\n+//   //   recognition.current.stop();\r\n+//   //   if (speechSynthesis.current.speaking) {\r\n+//   //     speechSynthesis.current.cancel();\r\n+//   //   }\r\n+//   //   if (restartRecognitionTimeout.current) {\r\n+//   //     clearTimeout(restartRecognitionTimeout.current);\r\n+//   //   }\r\n+//   //   console.log(\"Listening stopped.\");\r\n+//   // };\r\n+//   // Handle start and stop listening logic\r\n+\r\n+//   useEffect(() => {\r\n+//     if (isListening && !hasGreeted.current) {\r\n+//       speak(\"Hello, I'm Brane. How can I assist you today?\");\r\n+//       hasGreeted.current = true;\r\n+//     }\r\n+//   }, [isListening]);\r\n+\r\n+//   // const handleCommandWithFuse = (command) => {\r\n+//   //   const fuse = new Fuse(commands, { keys: [\"utterance\"], threshold: 0.4 });\r\n+//   //   const results = fuse.search(command);\r\n+//   //   const foundCommand = results.length ? results[0].item : null;\r\n+\r\n+//   //   if (foundCommand) {\r\n+//   //     console.log(\"Command found:\", foundCommand.utterance);\r\n+//   //     speak(foundCommand.response);\r\n+//   //     if (foundCommand.route) {\r\n+//   //       navigate(foundCommand.route); // Navigate to the route specified in the command\r\n+//   //     }\r\n+//   //   } else {\r\n+//   //     console.log(\"No command found.\");\r\n+//   //     speak(\"I'm not sure how to respond to that.\");\r\n+//   //   }\r\n+//   // };\r\n+\r\n+//   const handleCommandWithFuse = (command) => {\r\n+//     const fuse = new Fuse(commands, { keys: [\"utterance\"], threshold: 0.4 });\r\n+//     const results = fuse.search(command);\r\n+//     const foundCommand = results.length ? results[0].item : null;\r\n+\r\n+//     if (foundCommand) {\r\n+//       console.log(\"Command found:\", foundCommand.utterance);\r\n+\r\n+//       if (foundCommand.action) {\r\n+//         foundCommand.action();\r\n+//       } else if (foundCommand.route) {\r\n+//         navigate(foundCommand.route);\r\n+//       }\r\n+\r\n+//       if (foundCommand.response) {\r\n+//         speak(foundCommand.response);\r\n+//       }\r\n+//     } else {\r\n+//       console.log(\"No command found.\");\r\n+//       speak(\"I'm not sure how to respond to that.\");\r\n+//     }\r\n+//   };\r\n+\r\n+//   const commands = [\r\n+//     {\r\n+//       utterance: \"Hello who are you ?\",\r\n+\r\n+//       response:\r\n+//         \"Hi! This is Brane! your Voice bot from Brane Education How can I Assist you Today ?\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"Hello\",\r\n+\r\n+//       response: \"Hi! How can I assist you today?\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"hello\",\r\n+\r\n+//       response: \"Hi! How can I assist you today?\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"Hi.\",\r\n+\r\n+//       response: \"Hello! How can I assist you today?\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"Hey there\",\r\n+\r\n+//       response: \"Hi! How can I assist you today?\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"Good morning Brane.\",\r\n+\r\n+//       response: \"Hey Hiii! Good morning  ! How can I help you?\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"Good afternoon Brane.\",\r\n+\r\n+//       response: \"Hey Hiii! Good after noon ! How can I help you?\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"Good evening Brane.\",\r\n+\r\n+//       response: \"Hey Hiii! Good evening ! How can I help you?\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"can you please take me to login page\",\r\n+//       route: \"/login\",\r\n+//       routeDescription: \"login page\",\r\n+//       response: \"Navigating to the login page.\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"go to login page\",\r\n+//       route: \"/login\",\r\n+//       routeDescription: \"login page\",\r\n+//       response: \"Navigating to the login page.\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"please take me to login page\",\r\n+//       route: \"/login\",\r\n+//       routeDescription: \"login page\",\r\n+//       response: \"Navigating to the login page.\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"Go to login page\",\r\n+//       route: \"/login\",\r\n+//       routeDescription: \"login page\",\r\n+//       response: \"Navigating to the login page.\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"open login page\",\r\n+//       route: \"/login\",\r\n+//       routeDescription: \"login page\",\r\n+//       response: \"Navigating to the login page.\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"can you please take me to signup page\",\r\n+//       route: \"/signup\",\r\n+//       routeDescription: \"signup page\",\r\n+//       response: \"Navigating to the signup page.\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"take me to signup page\",\r\n+//       route: \"/signup\",\r\n+//       routeDescription: \"signup page\",\r\n+//       response: \"Navigating to the signup page.\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"Go to signup page\",\r\n+//       route: \"/signup\",\r\n+//       routeDescription: \"signup page\",\r\n+//       response: \"Navigating to the signup page.\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"open signup page\",\r\n+//       route: \"/signup\",\r\n+//       routeDescription: \"signup page\",\r\n+//       response: \"Navigating to the signup page.\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"what are platform features\",\r\n+\r\n+//       response:\r\n+//         \"Dashboard, Dynamic time table, Learning Networks, Little Masters, Video Based Dictionary, General Search.\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"Features of platform\",\r\n+\r\n+//       response:\r\n+//         \"Dashboard, Dynamic time table, Learning Networks, Little Masters, Video Based Dictionary, General Search.\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"What does the platform offer\",\r\n+\r\n+//       response:\r\n+//         \"Dashboard, Dynamic time table, Learning Networks, Little Masters, Video Based Dictionary, General Search.\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"Say me the features of platform\",\r\n+\r\n+//       response:\r\n+//         \"Dashboard, Dynamic time table, Learning Networks, Little Masters, Video Based Dictionary, General Search.\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"Say me the services of platform\",\r\n+\r\n+//       response:\r\n+//         \"Dashboard, Dynamic time table, Learning Networks, Little Masters, Video Based Dictionary, General Search.\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"tell me the services offered by the platform\",\r\n+\r\n+//       response:\r\n+//         \"Dashboard, Dynamic time table, Learning Networks, Little Masters, Video Based Dictionary, General Search.\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"explain platform services\",\r\n+\r\n+//       response:\r\n+//         \"Dashboard, Dynamic time table, Learning Networks, Little Masters, Video Based Dictionary, General Search.\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"Give me the Parent voice of Julia Harris\",\r\n+\r\n+//       response:\r\n+//         \"Brane education has helped my son a lot in his studies. He improved a lot in his studies and is now able to score good marks in his exams\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"Play today's motivational video\",\r\n+\r\n+//       response: \"I am playing the video\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"Play today's video\",\r\n+\r\n+//       response: \"I am playing Motivational video\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"Leaders Voice\",\r\n+\r\n+//       response:\r\n+//         \"This Voice-interactive AI Platform is a game Changer. It revolutionizes education.\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"Curriculum Supported by Brane Education\",\r\n+\r\n+//       response:\r\n+//         \"we support multiple Boards let me say few Telangana State Board Andhra Pradesh Board Maharashtra Board Assam Board\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"Boards supported by the platform\",\r\n+\r\n+//       response:\r\n+//         \"we support multiple Boards let me say few Telangana State Board Andhra Pradesh Board Maharashtra Board Assam Board\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"Curriculum\",\r\n+\r\n+//       response:\r\n+//         \"we support multiple Boards let me say few Telangana State Board Andhra Pradesh Board Maharashtra Board Assam Board\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"Go to landing page\",\r\n+\r\n+//       response: \"Okay, I am taking you to the landing page.\",\r\n+\r\n+//       route: \"/childpage\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"take me to landing page\",\r\n+\r\n+//       response: \"Okay, I am taking you to the landing page.\",\r\n+\r\n+//       route: \"/childpage\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"move to landing page\",\r\n+\r\n+//       response: \"Okay, I am taking you to the landing page.\",\r\n+\r\n+//       route: \"/childpage\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"roll back to landing page\",\r\n+\r\n+//       response: \"Okay, I am taking you to the landing page.\",\r\n+\r\n+//       route: \"/childpage\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"move to landing page\",\r\n+\r\n+//       response: \"Okay, I am taking you to the landing page.\",\r\n+\r\n+//       route: \"/childpage\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"what is today's quote\",\r\n+\r\n+//       response:\r\n+//         \"Determination is the power that sees us through all our frustration and obstacles. It helps in building our willpower which is the very basis of success.\",\r\n+\r\n+//       // route: \"/childpage\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"Today's Inspirational quote\",\r\n+\r\n+//       response:\r\n+//         \"Determination is the power that sees us through all our frustration and obstacles. It helps in building our willpower which is the very basis of success.\",\r\n+\r\n+//       // route: \"/childpage\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"say me today's quote\",\r\n+\r\n+//       response:\r\n+//         \"Determination is the power that sees us through all our frustration and obstacles. It helps in building our willpower which is the very basis of success.\",\r\n+\r\n+//       // route: \"/childpage\",\r\n+//     },\r\n+//     {\r\n+//       utterance: \"go back\",\r\n+//       response: \"Going back.\",\r\n+//       action: goBack, // Note the use of an action property\r\n+//     },\r\n+//     {\r\n+//       utterance: \"go forward\",\r\n+//       response: \"Going forward.\",\r\n+//       action: goForward,\r\n+//     },\r\n+//     {\r\n+//       utterance: \"play video\",\r\n+//       // response: \"Playing video.\",\r\n+//       action: playVideo,\r\n+//     },\r\n+//     {\r\n+//       utterance: \"pause video\",\r\n+//       // response: \"Pausing video.\",\r\n+//       action: pauseVideo,\r\n+//     },\r\n+//     {\r\n+//       utterance: \"start video\",\r\n+//       // response: \"Playing video.\",\r\n+//       action: playVideo,\r\n+//     },\r\n+//     {\r\n+//       utterance: \"stop video\",\r\n+//       // response: \"Playing video.\",\r\n+//       action: pauseVideo,\r\n+//     },\r\n+//     {\r\n+//       utterance: \"scroll up\",\r\n+//       // response: \"Scrolling up.\",\r\n+//       action: scrollUp,\r\n+//     },\r\n+//     {\r\n+//       utterance: \"scroll down\",\r\n+//       // response: \"Scrolling down.\",\r\n+//       action: scrollDown,\r\n+//     },\r\n+//     {\r\n+//       utterance: \"go up\",\r\n+\r\n+//       // response: \"Scrolling up.\",\r\n+//       action: scrollUp,\r\n+//     },\r\n+//     {\r\n+//       utterance: \"go down\",\r\n+//       // response: \"Scrolling down.\",\r\n+//       action: scrollDown,\r\n+//     },\r\n+//     {\r\n+//       utterance: \"scroll to top\",\r\n+//       action: scrollToTop,\r\n+//     },\r\n+//     {\r\n+//       utterance: \"scroll to bottom\",\r\n+//       action: scrollToBottom,\r\n+//     },\r\n+//     {\r\n+//       utterance: \"go back\",\r\n+//       action: goBackRef?.current?.click, // Use goBackRef directly\r\n+//       response: \"Going back.\",\r\n+//     },\r\n+//     {\r\n+//       utterance: \"take test\",\r\n+//       action: takeTestRef?.current?.click, // Use takeTestRef directly\r\n+//       response: \"Starting the test.\",\r\n+//     },\r\n+//   ];\r\n+//   return (\r\n+//     <div className=\"speech-bot-container\">\r\n+//       <div\r\n+//         className={`button-container ${\r\n+//           isListening ? \"voicebotframeactive\" : \"voicebotframe\"\r\n+//         }`}\r\n+//       >\r\n+//         <div onClick={isListening ? stopListening : startListening}>\r\n+//           <iframe\r\n+//             src={\r\n+//               isListening\r\n+//                 ? \"https://lottie.host/?file=a89aca3f-5407-4052-82c3-2048afca7a9f/NpCdWzLSKD.json\"\r\n+//                 : \"https://lottie.host/?file=d2b6cc0e-fe95-4847-85b5-35365fca7e00/vTudpCuPZq.json\"\r\n+//             }\r\n+//             width=\"120\" // Set your desired width\r\n+//             height=\"120\" // Set your desired height\r\n+//             title={isListening ? \"Stop Animation\" : \"Start Animation\"}\r\n+//             className={isListening ? \"voicebotframeactive\" : \"voicebotframe\"}\r\n+//           ></iframe>\r\n+//           {isListening ? (\r\n+//             <div className=\"overlay\" onClick={stopListening}></div>\r\n+//           ) : (\r\n+//             <div className=\"overlay\" onClick={startListening}></div>\r\n+//           )}\r\n+//         </div>\r\n+//       </div>\r\n+//     </div>\r\n+//   );\r\n+// };\r\n+\r\n+// export default VoiceBot;\r\n"
                },
                {
                    "date": 1700733400156,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,3799 @@\n+import React, { useState, useEffect, useRef } from \"react\";\r\n+import { useNavigate, useLocation } from \"react-router-dom\";\r\n+import Fuse from \"fuse.js\";\r\n+import \"./VoiceBot.css\";\r\n+import chatbotimage from \"../../assets/chatbotgif.gif\";\r\n+\r\n+const VoiceBot = ({ videoRefs }) => {\r\n+  const [isListening, setIsListening] = useState(false);\r\n+  const [isSpeaking, setIsSpeaking] = useState(false);\r\n+  const recognition = useRef(null);\r\n+  const speechSynthesis = useRef(window.speechSynthesis);\r\n+  const [hasGreeted, setHasGreeted] = useState(false);\r\n+  const navigate = useNavigate();\r\n+\r\n+  // Initialize speech recognition\r\n+  useEffect(() => {\r\n+    recognition.current = new window.webkitSpeechRecognition();\r\n+    recognition.current.continuous = true;\r\n+    recognition.current.interimResults = false;\r\n+    recognition.current.onresult = onResult;\r\n+    recognition.current.onend = onRecognitionEnd;\r\n+    recognition.current.starting = false;\r\n+\r\n+    recognition.current.onerror = (event) => {\r\n+      console.error(\"Recognition error:\", event.error);\r\n+      if (isListening && !isSpeaking) {\r\n+        restartRecognition();\r\n+      }\r\n+    };\r\n+\r\n+    return () => {\r\n+      if (recognition.current) {\r\n+        recognition.current.abort();\r\n+      }\r\n+    };\r\n+  }, []);\r\n+\r\n+  useEffect(() => {\r\n+    const checkRecognition = () => {\r\n+      if (isListening && !isSpeaking && !recognition.current.starting) {\r\n+        console.log(\"Restarting recognition because it's not active.\");\r\n+        recognition.current.starting = true;\r\n+        recognition.current.start();\r\n+        console.log(\"Restarted recognition.\");\r\n+      }\r\n+    };\r\n+\r\n+    const recognitionCheckInterval = setInterval(checkRecognition, 500); // Check every .5 second\r\n+\r\n+    return () => {\r\n+      clearInterval(recognitionCheckInterval);\r\n+    };\r\n+  }, [isListening, isSpeaking]);\r\n+\r\n+  const historyStack = useRef([]);\r\n+\r\n+  useEffect(() => {\r\n+    return () => {\r\n+      // Clean up the listener when the component unmounts\r\n+      window.removeEventListener(\"popstate\", handlePopState);\r\n+    };\r\n+  }, []);\r\n+\r\n+  const handlePopState = () => {\r\n+    // This needs to handle both back and forward browser actions\r\n+    // Use some logic to determine whether it's a back or forward action\r\n+    // For simplicity, assume it's always back\r\n+    historyStack.current.pop();\r\n+    forwardStack.current.length = 0; // Clear forward stack on manual navigation\r\n+  };\r\n+\r\n+  // Listen to popstate events to update the history stack\r\n+  useEffect(() => {\r\n+    window.addEventListener(\"popstate\", handlePopState);\r\n+  }, []);\r\n+\r\n+  const forwardStack = useRef([]);\r\n+\r\n+  const goBack = () => {\r\n+    if (window.history.state && window.history.state.idx > 0) {\r\n+      window.history.back();\r\n+      speak(\"Going back\");\r\n+    } else {\r\n+      speak(\"Can't go back any further.\");\r\n+    }\r\n+  };\r\n+\r\n+  const goForward = () => {\r\n+    if (\r\n+      window.history.state &&\r\n+      window.history.state.idx < window.history.length - 1\r\n+    ) {\r\n+      window.history.forward();\r\n+      speak(\"Going forward\");\r\n+    } else {\r\n+      speak(\"No forward history available.\");\r\n+    }\r\n+  };\r\n+\r\n+  const scrollAmount = window.innerHeight * 0.82;\r\n+\r\n+  const scrollUp = () => {\r\n+    if (window.pageYOffset === 0) {\r\n+      speak(\"Already at the top of the page.\");\r\n+    } else {\r\n+      window.scrollBy(0, -scrollAmount);\r\n+      speak(\"Scrolled up.\");\r\n+    }\r\n+  };\r\n+\r\n+  const scrollDown = () => {\r\n+    const maxScrollTop =\r\n+      document.documentElement.scrollHeight - window.innerHeight;\r\n+    if (window.pageYOffset >= maxScrollTop) {\r\n+      speak(\"Already at the bottom of the page.\");\r\n+    } else {\r\n+      window.scrollBy(0, scrollAmount);\r\n+      speak(\"Scrolled down.\");\r\n+    }\r\n+  };\r\n+\r\n+  const scrollToTop = () => {\r\n+    if (window.pageYOffset === 0) {\r\n+      speak(\"Already at the top of the page.\");\r\n+    } else {\r\n+      window.scrollTo(0, 0);\r\n+      speak(\"Scrolled to the top of the page.\");\r\n+    }\r\n+  };\r\n+\r\n+  const scrollToBottom = () => {\r\n+    const maxScrollTop =\r\n+      document.documentElement.scrollHeight - window.innerHeight;\r\n+    if (window.pageYOffset >= maxScrollTop) {\r\n+      speak(\"Already at the bottom of the page.\");\r\n+    } else {\r\n+      window.scrollTo(0, document.body.scrollHeight);\r\n+      speak(\"Scrolled to the bottom of the page.\");\r\n+    }\r\n+  };\r\n+\r\n+\r\n+  const controlVideo = (videoId, action) => {\r\n+    const videoRef = videoRefs.current.get(videoId);\r\n+    if (videoRef && videoRef.current) {\r\n+      switch (action) {\r\n+        case 'play':\r\n+          videoRef.current.play();\r\n+          break;\r\n+        case 'pause':\r\n+          videoRef.current.pause();\r\n+          break;\r\n+        case 'mute':\r\n+          videoRef.current.muted = true;\r\n+          break;\r\n+        case 'unmute':\r\n+          videoRef.current.muted = false;\r\n+          break;\r\n+        case 'fullscreen':\r\n+          if (videoRef.current.requestFullscreen) {\r\n+            videoRef.current.requestFullscreen();\r\n+          } else if (videoRef.current.webkitRequestFullscreen) { // Safari\r\n+            videoRef.current.webkitRequestFullscreen();\r\n+          } else if (videoRef.current.msRequestFullscreen) { // IE11\r\n+            videoRef.current.msRequestFullscreen();\r\n+          }\r\n+          break;\r\n+        case 'exitFullscreen':\r\n+          if (document.exitFullscreen) {\r\n+            document.exitFullscreen();\r\n+          } else if (document.webkitExitFullscreen) { // Safari\r\n+            document.webkitExitFullscreen();\r\n+          } else if (document.msExitFullscreen) { // IE11\r\n+            document.msExitFullscreen();\r\n+          }\r\n+          break;\r\n+        case 'increaseVolume':\r\n+          if (videoRef.current.volume < 1) {\r\n+            videoRef.current.volume = Math.min(1, videoRef.current.volume + 0.1);\r\n+          }\r\n+          break;\r\n+        case 'decreaseVolume':\r\n+          if (videoRef.current.volume > 0) {\r\n+            videoRef.current.volume = Math.max(0, videoRef.current.volume - 0.1);\r\n+          }\r\n+          break;\r\n+        // Add other cases as needed\r\n+      }\r\n+      speak(`${action.charAt(0).toUpperCase() + action.slice(1).replace(/([A-Z])/g, ' $1').toLowerCase()}ing video.`);\r\n+    } else {\r\n+      speak(`Video not found.`);\r\n+    }\r\n+  };\r\n+\r\n+  const speak = (message) => {\r\n+    const utterance = new SpeechSynthesisUtterance(message);\r\n+    utterance.onend = () => {\r\n+      setIsSpeaking(false);\r\n+      // Restart recognition after speaking has ended\r\n+      if (isListening) {\r\n+        restartRecognition();\r\n+      }\r\n+    };\r\n+\r\n+    setIsSpeaking(true);\r\n+    // Stop recognition when the bot starts speaking\r\n+    if (recognition.current) {\r\n+      recognition.current.abort();\r\n+    }\r\n+    speechSynthesis.current.speak(utterance);\r\n+  };\r\n+\r\n+  const restartRecognition = () => {\r\n+    // Check if recognition is not already started and if the bot is set to listen\r\n+    if (\r\n+      recognition.current &&\r\n+      !recognition.current.starting &&\r\n+      isListening &&\r\n+      !isSpeaking\r\n+    ) {\r\n+      recognition.current.abort(); // Ensure any ongoing recognition is stopped\r\n+      recognition.current.starting = true;\r\n+      recognition.current.start();\r\n+    }\r\n+  };\r\n+\r\n+  // Restart recognition when bot finishes speaking and isListening is true\r\n+  useEffect(() => {\r\n+    if (!isSpeaking && isListening) {\r\n+      restartRecognition();\r\n+    }\r\n+  }, [isSpeaking, isListening]);\r\n+\r\n+  const onResult = (event) => {\r\n+    const resultIndex = event.resultIndex;\r\n+    const transcript = event.results[resultIndex][0].transcript\r\n+      .trim()\r\n+      .toLowerCase();\r\n+\r\n+    if (event.results[resultIndex].isFinal) {\r\n+      console.log(`Recognized text: ${transcript}`);\r\n+      if (transcript.includes(\"brain\")) {\r\n+        console.log(\"Wake word heard, processing command...\");\r\n+        handleCommandWithFuse(transcript.replace(\"brain\", \"\"));\r\n+      }\r\n+    }\r\n+  };\r\n+\r\n+  const onRecognitionEnd = () => {\r\n+    recognition.current.starting = false;\r\n+    if (isListening && !isSpeaking) {\r\n+      restartRecognition();\r\n+    }\r\n+  };\r\n+\r\n+  useEffect(() => {\r\n+    if (isListening && !hasGreeted) {\r\n+      speak(\"Hello, I'm Brane. How can I help you today?\");\r\n+      setHasGreeted(true);\r\n+    }\r\n+  }, [isListening, hasGreeted]);\r\n+\r\n+  // Updated startListening function\r\n+  const startListening = () => {\r\n+    setIsListening(true);\r\n+    if (!recognition.current.starting) {\r\n+      restartRecognition();\r\n+    }\r\n+  };\r\n+\r\n+  // Updated stopListening function\r\n+  const stopListening = () => {\r\n+    setIsListening(false);\r\n+    if (speechSynthesis.current.speaking) {\r\n+      speechSynthesis.current.cancel();\r\n+    }\r\n+    recognition.current.abort();\r\n+  };\r\n+\r\n+  const handleCommandWithFuse = (command) => {\r\n+    const fuse = new Fuse(commands, { keys: [\"utterance\"], threshold: 0.4 });\r\n+    const results = fuse.search(command);\r\n+    const foundCommand = results.length ? results[0].item : null;\r\n+\r\n+    if (foundCommand) {\r\n+      console.log(\"Command found:\", foundCommand.utterance);\r\n+\r\n+      if (foundCommand.action) {\r\n+        foundCommand.action();\r\n+      } else if (foundCommand.route) {\r\n+        navigate(foundCommand.route);\r\n+      }\r\n+\r\n+      // Speak after performing the action or navigation\r\n+      speak(foundCommand.response);\r\n+    } else {\r\n+      console.log(\"No command found.\");\r\n+      speak(\"I'm not sure how to respond to that.\");\r\n+    }\r\n+  };\r\n+\r\n+  const commands = [\r\n+    {\r\n+      utterance: \"Hello who are you ?\",\r\n+\r\n+      response:\r\n+        \"Hi! This is Brane! your Voice bot from Brane Education How can I Assist you Today ?\",\r\n+    },\r\n+\r\n+    {\r\n+      utterance: \"Hello\",\r\n+\r\n+      response: \"Hi! How can I assist you today?\",\r\n+    },\r\n+\r\n+    {\r\n+      utterance: \"hello\",\r\n+\r\n+      response: \"Hi! How can I assist you today?\",\r\n+    },\r\n+\r\n+    {\r\n+      utterance: \"Hi.\",\r\n+\r\n+      response: \"Hello! How can I assist you today?\",\r\n+    },\r\n+\r\n+    {\r\n+      utterance: \"Hey there\",\r\n+\r\n+      response: \"Hi! How can I assist you today?\",\r\n+    },\r\n+\r\n+    {\r\n+      utterance: \"Good morning Brane.\",\r\n+\r\n+      response: \"Hey Hiii! Good morning  ! How can I help you?\",\r\n+    },\r\n+\r\n+    {\r\n+      utterance: \"Good afternoon Brane.\",\r\n+\r\n+      response: \"Hey Hiii! Good after noon ! How can I help you?\",\r\n+    },\r\n+\r\n+    {\r\n+      utterance: \"Good evening Brane.\",\r\n+\r\n+      response: \"Hey Hiii! Good evening ! How can I help you?\",\r\n+    },\r\n+\r\n+    {\r\n+      utterance: \"take me to homepage\",\r\n+\r\n+      route: \"/\",\r\n+\r\n+      response: \"You're in Homepage now\",\r\n+    },\r\n+    {\r\n+      utterance: \"open homepage\",\r\n+\r\n+      route: \"/\",\r\n+\r\n+      response: \"You're in Homepage now\",\r\n+    },\r\n+    {\r\n+      utterance: \"go to homepage\",\r\n+\r\n+      route: \"/\",\r\n+\r\n+      response: \"You're in Homepage now\",\r\n+    },\r\n+    {\r\n+      utterance: \"go back to homepage\",\r\n+\r\n+      route: \"/\",\r\n+\r\n+      response: \"You're in Homepage now\",\r\n+    },\r\n+    {\r\n+      utterance: \"can you please take me to login page\",\r\n+\r\n+      route: \"/login\",\r\n+\r\n+      response: \"Here's the Login Page, Please Login\",\r\n+    },\r\n+\r\n+    {\r\n+      utterance: \"please take me to login page\",\r\n+\r\n+      route: \"/login\",\r\n+\r\n+      response: \"Here's the Login Page, Please Login\",\r\n+    },\r\n+\r\n+    {\r\n+      utterance: \"Go to login page\",\r\n+\r\n+      route: \"/login\",\r\n+\r\n+      response: \"Here's the Login Page, Please Login\",\r\n+    },\r\n+\r\n+    {\r\n+      utterance: \"open login page\",\r\n+\r\n+      route: \"/login\",\r\n+\r\n+      response: \"Here's the Login Page, Please Login\",\r\n+    },\r\n+\r\n+    {\r\n+      utterance: \"can you please take me to signup page\",\r\n+\r\n+      route: \"/signup\",\r\n+\r\n+      response: \"Here's the signup page. Please proceed With Registration.\",\r\n+    },\r\n+\r\n+    {\r\n+      utterance: \"take me to signup page\",\r\n+\r\n+      route: \"/signup\",\r\n+\r\n+      response: \"Here's the signup page. Please proceed With Registration.\",\r\n+    },\r\n+\r\n+    {\r\n+      utterance: \"Go to signup page\",\r\n+\r\n+      route: \"/signup\",\r\n+\r\n+      response: \"Here's the signup page. Please proceed With Registration.\",\r\n+    },\r\n+\r\n+    {\r\n+      utterance: \"open signup page\",\r\n+\r\n+      route: \"/signup\",\r\n+\r\n+      response: \"Here's the signup page. Please proceed With Registration.\",\r\n+    },\r\n+\r\n+    {\r\n+      utterance: \"Go to face id\",\r\n+\r\n+      route: \"/login/faceid\",\r\n+\r\n+      response: \"Here's Face ID Login. Please proceed.\",\r\n+    },\r\n+\r\n+    {\r\n+      utterance: \"Go to face id login\",\r\n+\r\n+      route: \"/login/faceid\",\r\n+\r\n+      response: \"Here's Face ID Login. Please proceed.\",\r\n+    },\r\n+    {\r\n+      utterance: \"Go to face login\",\r\n+\r\n+      route: \"/login/faceid\",\r\n+\r\n+      response: \"Here's Face ID Login. Please proceed.\",\r\n+    },\r\n+\r\n+    {\r\n+      utterance: \"login with face id\",\r\n+\r\n+      route: \"/login/faceid\",\r\n+\r\n+      response: \"Here's Face ID Login. Please proceed.\",\r\n+    },\r\n+\r\n+    {\r\n+      utterance: \"login with face\",\r\n+\r\n+      route: \"/login/faceid\",\r\n+\r\n+      response: \"Here's Face ID Login. Please proceed.\",\r\n+    },\r\n+\r\n+    {\r\n+      utterance: \"i want to login with face\",\r\n+\r\n+      route: \"/login/faceid\",\r\n+\r\n+      response: \"Here's Face ID Login. Please proceed.\",\r\n+    },\r\n+\r\n+    {\r\n+      utterance: \"login with voice\",\r\n+\r\n+      route: \"/login/voiceid\",\r\n+\r\n+      response: \"Here's Voice Login. Please proceed.\",\r\n+    },\r\n+\r\n+    {\r\n+      utterance: \"i want to login with voice\",\r\n+\r\n+      route: \"/login/voiceid\",\r\n+\r\n+      response: \"Here's Voice Login. Please proceed.\",\r\n+    },\r\n+\r\n+    {\r\n+      utterance: \"go to voice login\",\r\n+\r\n+      route: \"/login/voiceid\",\r\n+\r\n+      response: \"Here's Voice Login. Please proceed.\",\r\n+    },\r\n+\r\n+    {\r\n+      utterance: \"login with voice\",\r\n+\r\n+      route: \"/login/voiceid\",\r\n+\r\n+      response: \"Here's Voice Login. Please proceed.\",\r\n+    },\r\n+\r\n+    {\r\n+      utterance: \"login with mobile\",\r\n+\r\n+      route: \"/login/mobile\",\r\n+\r\n+      response: \"Here's Mobile Login. Please proceed.\",\r\n+    },\r\n+\r\n+    {\r\n+      utterance: \"i want to login with mobile\",\r\n+\r\n+      route: \"/login/mobile\",\r\n+\r\n+      response: \"Here's Mobile Login. Please proceed.\",\r\n+    },\r\n+    {\r\n+      utterance: \"go to mobile login\",\r\n+\r\n+      route: \"/login/mobile\",\r\n+\r\n+      response: \"Here's Mobile Login. Please proceed.\",\r\n+    },\r\n+    {\r\n+      utterance: \"go to about page\",\r\n+\r\n+      route: \"/aboutus\",\r\n+\r\n+      response: \"This is About us.\",\r\n+    },\r\n+    {\r\n+      utterance: \"go to about us page\",\r\n+\r\n+      route: \"/aboutus\",\r\n+\r\n+      response: \"This is About us.\",\r\n+    },\r\n+    {\r\n+      utterance: \"open about us page\",\r\n+\r\n+      route: \"/aboutus\",\r\n+\r\n+      response: \"This is About us.\",\r\n+    },\r\n+    {\r\n+      utterance: \"open about page\",\r\n+\r\n+      route: \"/aboutus\",\r\n+\r\n+      response: \"This is About us.\",\r\n+    },\r\n+    {\r\n+      utterance: \"take me to about page\",\r\n+\r\n+      route: \"/aboutus\",\r\n+\r\n+      response: \"This is About us.\",\r\n+    },\r\n+    {\r\n+      utterance: \"take me to about us page\",\r\n+\r\n+      route: \"/aboutus\",\r\n+\r\n+      response: \"This is About us.\",\r\n+    },\r\n+\r\n+    {\r\n+      utterance: \"go to contact page\",\r\n+\r\n+      route: \"/contactus\",\r\n+\r\n+      response: \"You can contact us from here\",\r\n+    },\r\n+    {\r\n+      utterance: \"go to contact us page\",\r\n+\r\n+      route: \"/contactus\",\r\n+\r\n+      response: \"You can contact us from here\",\r\n+    },\r\n+    {\r\n+      utterance: \"open contact us page\",\r\n+\r\n+      route: \"/contactus\",\r\n+\r\n+      response: \"You can contact us from here\",\r\n+    },\r\n+    {\r\n+      utterance: \"open contact page\",\r\n+\r\n+      route: \"/contactus\",\r\n+\r\n+      response: \"You can contact us from here\",\r\n+    },\r\n+    {\r\n+      utterance: \"take me to about page\",\r\n+\r\n+      route: \"/contactus\",\r\n+\r\n+      response: \"You can contact us from here\",\r\n+    },\r\n+    {\r\n+      utterance: \"take me to contact us page\",\r\n+\r\n+      route: \"/contactus\",\r\n+\r\n+      response: \"You can contact us from here\",\r\n+    },\r\n+\r\n+    {\r\n+      utterance: \"what are platform features\",\r\n+\r\n+      response:\r\n+        \"Dashboard, Dynamic time table, Learning Networks, Little Masters, Video Based Dictionary, General Search.\",\r\n+    },\r\n+\r\n+    {\r\n+      utterance: \"Features of platform\",\r\n+\r\n+      response:\r\n+        \"Dashboard, Dynamic time table, Learning Networks, Little Masters, Video Based Dictionary, General Search.\",\r\n+    },\r\n+\r\n+    {\r\n+      utterance: \"What does the platform offer\",\r\n+\r\n+      response:\r\n+        \"Dashboard, Dynamic time table, Learning Networks, Little Masters, Video Based Dictionary, General Search.\",\r\n+    },\r\n+\r\n+    {\r\n+      utterance: \"Say me the features of platform\",\r\n+\r\n+      response:\r\n+        \"Dashboard, Dynamic time table, Learning Networks, Little Masters, Video Based Dictionary, General Search.\",\r\n+    },\r\n+\r\n+    {\r\n+      utterance: \"Say me the services of platform\",\r\n+\r\n+      response:\r\n+        \"Dashboard, Dynamic time table, Learning Networks, Little Masters, Video Based Dictionary, General Search.\",\r\n+    },\r\n+\r\n+    {\r\n+      utterance: \"tell me the services offered by the platform\",\r\n+\r\n+      response:\r\n+        \"Dashboard, Dynamic time table, Learning Networks, Little Masters, Video Based Dictionary, General Search.\",\r\n+    },\r\n+\r\n+    {\r\n+      utterance: \"explain platform services\",\r\n+\r\n+      response:\r\n+        \"Dashboard, Dynamic time table, Learning Networks, Little Masters, Video Based Dictionary, General Search.\",\r\n+    },\r\n+\r\n+    {\r\n+      utterance: \"Give me the Parent voice of Julia Harris\",\r\n+\r\n+      response:\r\n+        \"Brane education has helped my son a lot in his studies. He improved a lot in his studies and is now able to score good marks in his exams\",\r\n+    },\r\n+\r\n+    {\r\n+      utterance: \"Leaders Voice\",\r\n+\r\n+      response:\r\n+        \"This Voice-interactive AI Platform is a game Changer. It revolutionizes education.\",\r\n+    },\r\n+\r\n+    {\r\n+      utterance: \"Curriculum Supported by Brane Education\",\r\n+\r\n+      response:\r\n+        \"we support multiple Boards let me say few Telangana State Board Andhra Pradesh Board Maharashtra Board Assam Board\",\r\n+    },\r\n+\r\n+    {\r\n+      utterance: \"Boards supported by the platform\",\r\n+\r\n+      response:\r\n+        \"we support multiple Boards let me say few Telangana State Board Andhra Pradesh Board Maharashtra Board Assam Board\",\r\n+    },\r\n+\r\n+    {\r\n+      utterance: \"Curriculum\",\r\n+\r\n+      response:\r\n+        \"we support multiple Boards let me say few Telangana State Board Andhra Pradesh Board Maharashtra Board Assam Board\",\r\n+    },\r\n+\r\n+    {\r\n+      utterance: \"what is today's quote\",\r\n+\r\n+      response:\r\n+        \"Determination is the power that sees us through all our frustration and obstacles. It helps in building our willpower which is the very basis of success.\",\r\n+\r\n+      route: \"/childpage\",\r\n+    },\r\n+\r\n+    {\r\n+      utterance: \"Today's Inspirational quote\",\r\n+\r\n+      response:\r\n+        \"Determination is the power that sees us through all our frustration and obstacles. It helps in building our willpower which is the very basis of success.\",\r\n+\r\n+      route: \"/childpage\",\r\n+    },\r\n+\r\n+    {\r\n+      utterance: \"say me today's quote\",\r\n+\r\n+      response:\r\n+        \"Determination is the power that sees us through all our frustration and obstacles. It helps in building our willpower which is the very basis of success.\",\r\n+\r\n+      route: \"/childpage\",\r\n+    },\r\n+    {\r\n+      utterance: \"go back\",\r\n+      response: \"\",\r\n+      action: goBack, // Note the use of an action property\r\n+    },\r\n+    {\r\n+      utterance: \"go forward\",\r\n+      response: \"\",\r\n+      action: goForward,\r\n+    },\r\n+    // {\r\n+    //   utterance: \"play video\",\r\n+    //   // response: \"Playing video.\",\r\n+    //   action: playVideo,\r\n+    // },\r\n+    // {\r\n+    //   utterance: \"pause video\",\r\n+    //   // response: \"Pausing video.\",\r\n+    //   action: pauseVideo,\r\n+    // },\r\n+    // {\r\n+    //   utterance: \"start video\",\r\n+    //   // response: \"Playing video.\",\r\n+    //   action: playVideo,\r\n+    // },\r\n+    // {\r\n+    //   utterance: \"stop video\",\r\n+    //   // response: \"Playing video.\",\r\n+    //   action: pauseVideo,\r\n+    // },\r\n+    {\r\n+      utterance: \"scroll up\",\r\n+      // response: \"Scrolling up.\",\r\n+      action: scrollUp,\r\n+    },\r\n+    {\r\n+      utterance: \"scroll down\",\r\n+      // response: \"Scrolling down.\",\r\n+      action: scrollDown,\r\n+    },\r\n+    {\r\n+      utterance: \"go up\",\r\n+\r\n+      // response: \"Scrolling up.\",\r\n+      action: scrollUp,\r\n+    },\r\n+    {\r\n+      utterance: \"go down\",\r\n+      // response: \"Scrolling down.\",\r\n+      action: scrollDown,\r\n+    },\r\n+    {\r\n+      utterance: \"scroll to top\",\r\n+      action: scrollToTop,\r\n+    },\r\n+    {\r\n+      utterance: \"scroll to bottom\",\r\n+      action: scrollToBottom,\r\n+    },\r\n+    {\r\n+      utterance: \"brane stop\",\r\n+      action: stopListening,\r\n+    },\r\n+    {\r\n+      utterance: \"brane turn off\",\r\n+      action: stopListening,\r\n+    },\r\n+    {\r\n+      utterance: \"brane stop the bot\",\r\n+      action: stopListening,\r\n+    },\r\n+    // {\r\n+    //   utterance: \"mute the video\",\r\n+    //   action: muteVideo,\r\n+    // },\r\n+    // {\r\n+    //   utterance: \"unmute the video\",\r\n+    //   action: unmuteVideo,\r\n+    // },\r\n+    // {\r\n+    //   utterance: \"stop the video sound\",\r\n+    //   action: muteVideo,\r\n+    // },\r\n+    // {\r\n+    //   utterance: \"play the video sound\",\r\n+    //   action: unmuteVideo,\r\n+    // },\r\n+    {\r\n+      utterance: \"play transforming education video\",\r\n+      action: () => controlVideo('ourProjectsVideo', 'play'),\r\n+    },\r\n+    {\r\n+      utterance: \"start transforming education video\",\r\n+      action: () => controlVideo('ourProjectsVideo', 'play'),\r\n+    },\r\n+    {\r\n+      utterance: \"pause transforming education video\",\r\n+      action: () => controlVideo('ourProjectsVideo', 'pause'),\r\n+    },\r\n+    {\r\n+      utterance: \"stop transforming education video\",\r\n+      action: () => controlVideo('ourProjectsVideo', 'pause'),\r\n+    },\r\n+    {\r\n+      utterance: \"mute transforming education video\",\r\n+      action: () => controlVideo('ourProjectsVideo', 'mute'),\r\n+    },\r\n+    {\r\n+      utterance: \"unmute transforming education video\",\r\n+      action: () => controlVideo('ourProjectsVideo', 'unmute'),\r\n+    },\r\n+    {\r\n+      utterance: \"fullscreen transforming education video\",\r\n+      action: () => controlVideo('ourProjectsVideo', 'fullscreen'),\r\n+    },\r\n+    {\r\n+      utterance: \"exit fullscreen transforming education video\",\r\n+      action: () => controlVideo('ourProjectsVideo', 'exitFullscreen'),\r\n+    },\r\n+    {\r\n+      utterance: \"increase volume transforming education video\",\r\n+      action: () => controlVideo('ourProjectsVideo', 'increaseVolume'),\r\n+    },\r\n+    {\r\n+      utterance: \"decrease volume transforming education video\",\r\n+      action: () => controlVideo('ourProjectsVideo', 'decreaseVolume'),\r\n+    },\r\n+    {\r\n+      utterance: \"play the video about transforming education\",\r\n+      action: () => controlVideo('ourProjectsVideo', 'play'),\r\n+    },\r\n+    {\r\n+      utterance: \"start the transforming education video\",\r\n+      action: () => controlVideo('ourProjectsVideo', 'play'),\r\n+    },\r\n+    {\r\n+      utterance: \"can you pause the video on transforming education\",\r\n+      action: () => controlVideo('ourProjectsVideo', 'pause'),\r\n+    },\r\n+    {\r\n+      utterance: \"stop the video about transforming education\",\r\n+      action: () => controlVideo('ourProjectsVideo', 'pause'),\r\n+    },\r\n+    {\r\n+      utterance: \"mute the transforming education video\",\r\n+      action: () => controlVideo('ourProjectsVideo', 'mute'),\r\n+    },\r\n+    {\r\n+      utterance: \"unmute the video on transforming education\",\r\n+      action: () => controlVideo('ourProjectsVideo', 'unmute'),\r\n+    },\r\n+    {\r\n+      utterance: \"make the transforming education video fullscreen\",\r\n+      action: () => controlVideo('ourProjectsVideo', 'fullscreen'),\r\n+    },\r\n+    {\r\n+      utterance: \"exit fullscreen on the transforming education video\",\r\n+      action: () => controlVideo('ourProjectsVideo', 'exitFullscreen'),\r\n+    },\r\n+    {\r\n+      utterance: \"increase the volume of the transforming education video\",\r\n+      action: () => controlVideo('ourProjectsVideo', 'increaseVolume'),\r\n+    },\r\n+    {\r\n+      utterance: \"decrease the volume of the transforming education video\",\r\n+      action: () => controlVideo('ourProjectsVideo', 'decreaseVolume'),\r\n+    },\r\n+    \r\n+    {\r\n+      utterance: \"play leaders voice video\",\r\n+      action: () => controlVideo('leadersVoiceVideo', 'play'),\r\n+    },\r\n+    {\r\n+      utterance: \"start leaders voice video\",\r\n+      action: () => controlVideo('leadersVoiceVideo', 'play'),\r\n+    },\r\n+    {\r\n+      utterance: \"pause leaders voice video\",\r\n+      action: () => controlVideo('leadersVoiceVideo', 'pause'),\r\n+    },\r\n+    {\r\n+      utterance: \"stop leaders voice video\",\r\n+      action: () => controlVideo('leadersVoiceVideo', 'pause'),\r\n+    },\r\n+    {\r\n+      utterance: \"mute leaders voice video\",\r\n+      action: () => controlVideo('leadersVoiceVideo', 'mute'),\r\n+    },\r\n+    {\r\n+      utterance: \"unmute leaders voice video\",\r\n+      action: () => controlVideo('leadersVoiceVideo', 'unmute'),\r\n+    },\r\n+    {\r\n+      utterance: \"fullscreen leaders voice video\",\r\n+      action: () => controlVideo('leadersVoiceVideo', 'fullscreen'),\r\n+    },\r\n+    {\r\n+      utterance: \"exit fullscreen leaders voice video\",\r\n+      action: () => controlVideo('leadersVoiceVideo', 'exitFullscreen'),\r\n+    },\r\n+    {\r\n+      utterance: \"increase volume leaders voice video\",\r\n+      action: () => controlVideo('leadersVoiceVideo', 'increaseVolume'),\r\n+    },\r\n+    {\r\n+      utterance: \"decrease volume leaders voice video\",\r\n+      action: () => controlVideo('leadersVoiceVideo', 'decreaseVolume'),\r\n+    },\r\n+    \r\n+  ];\r\n+\r\n+  return (\r\n+    <div className=\"speech-bot-container\">\r\n+      <div\r\n+        className={`button-container ${\r\n+          isListening ? \"voicebotframeactive\" : \"voicebotframe\"\r\n+        }`}\r\n+      >\r\n+        {/* <button onClick={isListening ? stopListening : startListening}>\r\n+          {isListening ? \"Stop\" : \"Start\"} Animation\r\n+        </button> */}\r\n+        <img\r\n+          className=\"botimage\"\r\n+          src={chatbotimage}\r\n+          alt=\"\"\r\n+          onClick={isListening ? stopListening : startListening}\r\n+        />\r\n+      </div>\r\n+    </div>\r\n+  );\r\n+};\r\n+\r\n+export default VoiceBot;\r\n+\r\n+{\r\n+  /* // import React, { useState, useEffect, useRef } from \"react\";\r\n+// import { useNavigate, useLocation } from \"react-router-dom\";\r\n+// import Fuse from \"fuse.js\";\r\n+// import \"./VoiceBot.css\";\r\n+\r\n+// const VoiceBot = ({ videoRef }) => {\r\n+//   const [isListening, setIsListening] = useState(false);\r\n+//   const [isSpeaking, setIsSpeaking] = useState(false);\r\n+//   const recognition = useRef(null);\r\n+//   const speechSynthesis = useRef(window.speechSynthesis);\r\n+//   const [hasGreeted, setHasGreeted] = useState(false);\r\n+//   const navigate = useNavigate();\r\n+\r\n+//   useEffect(() => {\r\n+//     recognition.current = new window.webkitSpeechRecognition();\r\n+//     recognition.current.continuous = true;\r\n+//     recognition.current.interimResults = false;\r\n+//     recognition.current.onresult = onResult;\r\n+//     recognition.current.onend = onRecognitionEnd;\r\n+//     recognition.current.starting = false;\r\n+\r\n+//     // Simplified error handling, removed specific handling for 'no-speech'\r\n+//     recognition.current.onerror = (event) => {\r\n+//       console.error(\"Recognition error:\", event.error);\r\n+//       // Check if listening is true and the bot isn't speaking\r\n+//       if (isListening && !isSpeaking) {\r\n+//         // Restart recognition\r\n+//         restartRecognition();\r\n+//       }\r\n+//     };\r\n+\r\n+//     return () => {\r\n+//       if (recognition.current) {\r\n+//         recognition.current.abort();\r\n+//       }\r\n+//     };\r\n+//   }, []);\r\n+\r\n+//   useEffect(() => {\r\n+//     const checkRecognition = () => {\r\n+//       if (isListening && !isSpeaking && !recognition.current.starting) {\r\n+//         console.log(\"Restarting recognition because it's not active.\");\r\n+//         recognition.current.starting = true;\r\n+//         recognition.current.start();\r\n+//         console.log(\"Restarted recognition.\");\r\n+//       }\r\n+//     };\r\n+\r\n+//     const recognitionCheckInterval = setInterval(checkRecognition, 100); // Check every 1 second\r\n+\r\n+//     return () => {\r\n+//       clearInterval(recognitionCheckInterval);\r\n+//     };\r\n+//   }, [isListening, isSpeaking]);\r\n+\r\n+//   const restartRecognition = () => {\r\n+//     if (recognition.current.starting) {\r\n+//       console.log(\"Recognition is already starting or running.\");\r\n+//       return;\r\n+//     }\r\n+\r\n+//     recognition.current.abort(); // Stop any existing recognition process\r\n+//     recognition.current.starting = true;\r\n+//     recognition.current.start();\r\n+//     console.log(\"Recognition restarted.\");\r\n+//   };\r\n+\r\n+//   const historyStack = useRef([]);\r\n+\r\n+//   useEffect(() => {\r\n+//     return () => {\r\n+//       // Clean up the listener when the component unmounts\r\n+//       window.removeEventListener(\"popstate\", handlePopState);\r\n+//     };\r\n+//   }, []);\r\n+\r\n+//   const handlePopState = () => {\r\n+//     // This needs to handle both back and forward browser actions\r\n+//     // Use some logic to determine whether it's a back or forward action\r\n+//     // For simplicity, assume it's always back\r\n+//     historyStack.current.pop();\r\n+//     forwardStack.current.length = 0; // Clear forward stack on manual navigation\r\n+//   };\r\n+  \r\n+\r\n+//   // Add a new entry to the stack whenever navigate is called\r\n+//   const customNavigate = (to, options) => {\r\n+//     historyStack.current.push(to);\r\n+//     navigate(to, options);\r\n+//   };\r\n+\r\n+//   // Listen to popstate events to update the history stack\r\n+//   useEffect(() => {\r\n+//     window.addEventListener(\"popstate\", handlePopState);\r\n+//   }, []);\r\n+\r\n+//   const forwardStack = useRef([]);\r\n+\r\n+//   const goBack = () => {\r\n+//     if (window.history.state && window.history.state.idx > 0) {\r\n+//       window.history.back();\r\n+//       speak(\"Going back\");\r\n+//     } else {\r\n+//       speak(\"Can't go back any further.\");\r\n+//     }\r\n+//   };\r\n+\r\n+//   const goForward = () => {\r\n+//     if (window.history.state && window.history.state.idx < window.history.length - 1) {\r\n+//       window.history.forward();\r\n+//       speak(\"Going forward\");\r\n+//     } else {\r\n+//       speak(\"No forward history available.\");\r\n+//     }\r\n+//   };\r\n+\r\n+//   const playVideo = () => {\r\n+//     if (videoRef.current) {\r\n+//       videoRef.current.play();\r\n+//       speak(\"Playing video.\");\r\n+//     } else {\r\n+//       speak(\"No video to play.\");\r\n+//     }\r\n+//   };\r\n+\r\n+//   const pauseVideo = () => {\r\n+//     if (videoRef.current) {\r\n+//       videoRef.current.pause();\r\n+//       speak(\"Video paused.\");\r\n+//     } else {\r\n+//       speak(\"No video to pause.\");\r\n+//     }\r\n+//   };\r\n+\r\n+//   const scrollAmount = window.innerHeight * 0.82;\r\n+\r\n+//   const scrollUp = () => {\r\n+//     if (window.pageYOffset === 0) {\r\n+//       speak(\"Already at the top of the page.\");\r\n+//     } else {\r\n+//       window.scrollBy(0, -scrollAmount);\r\n+//       speak(\"Scrolled up.\");\r\n+//     }\r\n+//   };\r\n+\r\n+//   const scrollDown = () => {\r\n+//     const maxScrollTop =\r\n+//       document.documentElement.scrollHeight - window.innerHeight;\r\n+//     if (window.pageYOffset >= maxScrollTop) {\r\n+//       speak(\"Already at the bottom of the page.\");\r\n+//     } else {\r\n+//       window.scrollBy(0, scrollAmount);\r\n+//       speak(\"Scrolled down.\");\r\n+//     }\r\n+//   };\r\n+\r\n+//   const scrollToTop = () => {\r\n+//     if (window.pageYOffset === 0) {\r\n+//       speak(\"Already at the top of the page.\");\r\n+//     } else {\r\n+//       window.scrollTo(0, 0);\r\n+//       speak(\"Scrolled to the top of the page.\");\r\n+//     }\r\n+//   };\r\n+\r\n+//   const scrollToBottom = () => {\r\n+//     const maxScrollTop =\r\n+//       document.documentElement.scrollHeight - window.innerHeight;\r\n+//     if (window.pageYOffset >= maxScrollTop) {\r\n+//       speak(\"Already at the bottom of the page.\");\r\n+//     } else {\r\n+//       window.scrollTo(0, document.body.scrollHeight);\r\n+//       speak(\"Scrolled to the bottom of the page.\");\r\n+//     }\r\n+//   };\r\n+\r\n+//   const speak = (message) => {\r\n+//     console.log(\"speak function called with message:\", message);\r\n+//     const utterance = new SpeechSynthesisUtterance(message);\r\n+//     utterance.onend = () => {\r\n+//       setIsSpeaking(false);\r\n+//       console.log(\"Speaking ended.\");\r\n+//       if (isListening && !recognition.current.starting) {\r\n+//         console.log(\"Restarting recognition after speaking.\");\r\n+//         recognition.current.starting = true;\r\n+//         recognition.current.start();\r\n+//         console.log(\"Restarted recognition after speaking.\");\r\n+//       }\r\n+//     };\r\n+\r\n+//     setIsSpeaking(true);\r\n+//     console.log(\"Speaking started.\");\r\n+//     recognition.current.stop(); // Ensure to stop recognition before speaking\r\n+//     speechSynthesis.current.speak(utterance);\r\n+//   };\r\n+\r\n+//   const onResult = (event) => {\r\n+//     const resultIndex = event.resultIndex;\r\n+//     const transcript = event.results[resultIndex][0].transcript\r\n+//       .trim()\r\n+//       .toLowerCase();\r\n+\r\n+//     if (event.results[resultIndex].isFinal) {\r\n+//       console.log(`Recognized text: ${transcript}`);\r\n+//       if (transcript.includes(\"brain\")) {\r\n+//         console.log(\"Wake word heard, processing command...\");\r\n+//         handleCommandWithFuse(transcript.replace(\"brain\", \"\"));\r\n+//       }\r\n+//     }\r\n+//   };\r\n+\r\n+//   const onRecognitionEnd = () => {\r\n+//     recognition.current.starting = false;\r\n+//     if (isListening && !isSpeaking) {\r\n+//       restartRecognition();\r\n+//     }\r\n+//   };\r\n+\r\n+//   useEffect(() => {\r\n+//     if (isListening) {\r\n+//       if (!hasGreeted) {\r\n+//         speak(\"Hello, I'm Brane. How can I help you today?\");\r\n+//         setHasGreeted(true);\r\n+//       } else {\r\n+//         speak(\"Listening.\");\r\n+//       }\r\n+//     }\r\n+//   }, [isListening, hasGreeted]);\r\n+\r\n+\r\n+//   const startListening = () => {\r\n+//     if (!recognition.current.starting) {\r\n+//       setIsListening(true);\r\n+//       restartRecognition();\r\n+//     }\r\n+//   };\r\n+\r\n+//   const stopListening = () => {\r\n+//     setIsListening(false);\r\n+//     recognition.current.abort();\r\n+//     if (speechSynthesis.current.speaking) {\r\n+//       speechSynthesis.current.cancel();\r\n+//     }\r\n+//   };\r\n+\r\n+//   const handleCommandWithFuse = (command) => {\r\n+//     const fuse = new Fuse(commands, { keys: [\"utterance\"], threshold: 0.4 });\r\n+//     const results = fuse.search(command);\r\n+//     const foundCommand = results.length ? results[0].item : null;\r\n+\r\n+//     if (foundCommand) {\r\n+//       console.log(\"Command found:\", foundCommand.utterance);\r\n+\r\n+//       if (foundCommand.action) {\r\n+//         foundCommand.action();\r\n+//       } else if (foundCommand.route) {\r\n+//         navigate(foundCommand.route);\r\n+//       }\r\n+\r\n+//       // Speak after performing the action or navigation\r\n+//       speak(foundCommand.response);\r\n+//     } else {\r\n+//       console.log(\"No command found.\");\r\n+//       speak(\"I'm not sure how to respond to that.\");\r\n+//     }\r\n+//   };\r\n+\r\n+//   const commands = [\r\n+//     {\r\n+//       utterance: \"Hello who are you ?\",\r\n+\r\n+//       response:\r\n+//         \"Hi! This is Brane! your Voice bot from Brane Education How can I Assist you Today ?\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"Hello\",\r\n+\r\n+//       response: \"Hi! How can I assist you today?\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"hello\",\r\n+\r\n+//       response: \"Hi! How can I assist you today?\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"Hi.\",\r\n+\r\n+//       response: \"Hello! How can I assist you today?\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"Hey there\",\r\n+\r\n+//       response: \"Hi! How can I assist you today?\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"Good morning Brane.\",\r\n+\r\n+//       response: \"Hey Hiii! Good morning  ! How can I help you?\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"Good afternoon Brane.\",\r\n+\r\n+//       response: \"Hey Hiii! Good after noon ! How can I help you?\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"Good evening Brane.\",\r\n+\r\n+//       response: \"Hey Hiii! Good evening ! How can I help you?\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"can you please take me to login page\",\r\n+\r\n+//       route: \"/login\",\r\n+\r\n+//       response: \"Here's the Login Page, Please Login\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"please take me to login page\",\r\n+\r\n+//       route: \"/login\",\r\n+\r\n+//       response: \"Here's the Login Page, Please Login\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"Go to login page\",\r\n+\r\n+//       route: \"/login\",\r\n+\r\n+//       response: \"Here's the Login Page, Please Login\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"open login page\",\r\n+\r\n+//       route: \"/login\",\r\n+\r\n+//       response: \"Here's the Login Page, Please Login\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"can you please take me to signup page\",\r\n+\r\n+//       route: \"/signup\",\r\n+\r\n+//       response: \"Here's the signup page. Please proceed With Registration.\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"take me to signup page\",\r\n+\r\n+//       route: \"/signup\",\r\n+\r\n+//       response: \"Here's the signup page. Please proceed With Registration.\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"Go to signup page\",\r\n+\r\n+//       route: \"/signup\",\r\n+\r\n+//       response: \"Here's the signup page. Please proceed With Registration.\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"open signup page\",\r\n+\r\n+//       route: \"/signup\",\r\n+\r\n+//       response: \"Here's the signup page. Please proceed With Registration.\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"Go to face id\",\r\n+\r\n+//       route: \"/login/faceid\",\r\n+\r\n+//       response: \"Here's Face ID Login. Please proceed.\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"Go to face id login\",\r\n+\r\n+//       route: \"/login/faceid\",\r\n+\r\n+//       response: \"Here's Face ID Login. Please proceed.\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"login with face id\",\r\n+\r\n+//       route: \"/login/faceid\",\r\n+\r\n+//       response: \"Here's Face ID Login. Please proceed.\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"login with face\",\r\n+\r\n+//       route: \"/login/faceid\",\r\n+\r\n+//       response: \"Here's Face ID Login. Please proceed.\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"i want to login with face\",\r\n+\r\n+//       route: \"/login/faceid\",\r\n+\r\n+//       response: \"Here's Face ID Login. Please proceed.\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"login with voice\",\r\n+\r\n+//       route: \"/login/voiceid\",\r\n+\r\n+//       response: \"Here's Voice Login. Please proceed.\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"i want to login with voice\",\r\n+\r\n+//       route: \"/login/voiceid\",\r\n+\r\n+//       response: \"Here's Voice Login. Please proceed.\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"go to voice login\",\r\n+\r\n+//       route: \"/login/voiceid\",\r\n+\r\n+//       response: \"Here's Voice Login. Please proceed.\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"login with voice\",\r\n+\r\n+//       route: \"/login/voiceid\",\r\n+\r\n+//       response: \"Here's Voice Login. Please proceed.\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"login with mobile\",\r\n+\r\n+//       route: \"/login/mobile\",\r\n+\r\n+//       response: \"Here's Mobile Login. Please proceed.\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"i want to login with mobile\",\r\n+\r\n+//       route: \"/login/mobile\",\r\n+\r\n+//       response: \"Here's Mobile Login. Please proceed.\",\r\n+//     },\r\n+//     {\r\n+//       utterance: \"go to mobile login\",\r\n+\r\n+//       route: \"/login/mobile\",\r\n+\r\n+//       response: \"Here's Mobile Login. Please proceed.\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"what are platform features\",\r\n+\r\n+//       response:\r\n+//         \"Dashboard, Dynamic time table, Learning Networks, Little Masters, Video Based Dictionary, General Search.\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"Features of platform\",\r\n+\r\n+//       response:\r\n+//         \"Dashboard, Dynamic time table, Learning Networks, Little Masters, Video Based Dictionary, General Search.\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"What does the platform offer\",\r\n+\r\n+//       response:\r\n+//         \"Dashboard, Dynamic time table, Learning Networks, Little Masters, Video Based Dictionary, General Search.\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"Say me the features of platform\",\r\n+\r\n+//       response:\r\n+//         \"Dashboard, Dynamic time table, Learning Networks, Little Masters, Video Based Dictionary, General Search.\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"Say me the services of platform\",\r\n+\r\n+//       response:\r\n+//         \"Dashboard, Dynamic time table, Learning Networks, Little Masters, Video Based Dictionary, General Search.\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"tell me the services offered by the platform\",\r\n+\r\n+//       response:\r\n+//         \"Dashboard, Dynamic time table, Learning Networks, Little Masters, Video Based Dictionary, General Search.\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"explain platform services\",\r\n+\r\n+//       response:\r\n+//         \"Dashboard, Dynamic time table, Learning Networks, Little Masters, Video Based Dictionary, General Search.\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"Give me the Parent voice of Julia Harris\",\r\n+\r\n+//       response:\r\n+//         \"Brane education has helped my son a lot in his studies. He improved a lot in his studies and is now able to score good marks in his exams\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"Play today's motivational video\",\r\n+\r\n+//       response: \"I am playing the video\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"Play today's video\",\r\n+\r\n+//       response: \"I am playing Motivational video\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"Leaders Voice\",\r\n+\r\n+//       response:\r\n+//         \"This Voice-interactive AI Platform is a game Changer. It revolutionizes education.\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"Curriculum Supported by Brane Education\",\r\n+\r\n+//       response:\r\n+//         \"we support multiple Boards let me say few Telangana State Board Andhra Pradesh Board Maharashtra Board Assam Board\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"Boards supported by the platform\",\r\n+\r\n+//       response:\r\n+//         \"we support multiple Boards let me say few Telangana State Board Andhra Pradesh Board Maharashtra Board Assam Board\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"Curriculum\",\r\n+\r\n+//       response:\r\n+//         \"we support multiple Boards let me say few Telangana State Board Andhra Pradesh Board Maharashtra Board Assam Board\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"Go to landing page\",\r\n+\r\n+//       response: \"Okay, I am taking you to the landing page.\",\r\n+\r\n+//       route: \"/childpage\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"take me to landing page\",\r\n+\r\n+//       response: \"Okay, I am taking you to the landing page.\",\r\n+\r\n+//       route: \"/childpage\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"move to landing page\",\r\n+\r\n+//       response: \"Okay, I am taking you to the landing page.\",\r\n+\r\n+//       route: \"/childpage\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"roll back to landing page\",\r\n+\r\n+//       response: \"Okay, I am taking you to the landing page.\",\r\n+\r\n+//       route: \"/childpage\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"move to landing page\",\r\n+\r\n+//       response: \"Okay, I am taking you to the landing page.\",\r\n+\r\n+//       route: \"/childpage\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"what is today's quote\",\r\n+\r\n+//       response:\r\n+//         \"Determination is the power that sees us through all our frustration and obstacles. It helps in building our willpower which is the very basis of success.\",\r\n+\r\n+//       route: \"/childpage\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"Today's Inspirational quote\",\r\n+\r\n+//       response:\r\n+//         \"Determination is the power that sees us through all our frustration and obstacles. It helps in building our willpower which is the very basis of success.\",\r\n+\r\n+//       route: \"/childpage\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"say me today's quote\",\r\n+\r\n+//       response:\r\n+//         \"Determination is the power that sees us through all our frustration and obstacles. It helps in building our willpower which is the very basis of success.\",\r\n+\r\n+//       route: \"/childpage\",\r\n+//     },\r\n+//     {\r\n+//       utterance: \"go back\",\r\n+//       response: \"\",\r\n+//       action: goBack, // Note the use of an action property\r\n+//     },\r\n+//     {\r\n+//       utterance: \"go forward\",\r\n+//       response: \"\",\r\n+//       action: goForward,\r\n+//     },\r\n+//     {\r\n+//       utterance: \"play video\",\r\n+//       // response: \"Playing video.\",\r\n+//       action: playVideo,\r\n+//     },\r\n+//     {\r\n+//       utterance: \"pause video\",\r\n+//       // response: \"Pausing video.\",\r\n+//       action: pauseVideo,\r\n+//     },\r\n+//     {\r\n+//       utterance: \"start video\",\r\n+//       // response: \"Playing video.\",\r\n+//       action: playVideo,\r\n+//     },\r\n+//     {\r\n+//       utterance: \"stop video\",\r\n+//       // response: \"Playing video.\",\r\n+//       action: pauseVideo,\r\n+//     },\r\n+//     {\r\n+//       utterance: \"scroll up\",\r\n+//       // response: \"Scrolling up.\",\r\n+//       action: scrollUp,\r\n+//     },\r\n+//     {\r\n+//       utterance: \"scroll down\",\r\n+//       // response: \"Scrolling down.\",\r\n+//       action: scrollDown,\r\n+//     },\r\n+//     {\r\n+//       utterance: \"go up\",\r\n+\r\n+//       // response: \"Scrolling up.\",\r\n+//       action: scrollUp,\r\n+//     },\r\n+//     {\r\n+//       utterance: \"go down\",\r\n+//       // response: \"Scrolling down.\",\r\n+//       action: scrollDown,\r\n+//     },\r\n+//     {\r\n+//       utterance: \"scroll to top\",\r\n+//       action: scrollToTop,\r\n+//     },\r\n+//     {\r\n+//       utterance: \"scroll to bottom\",\r\n+//       action: scrollToBottom,\r\n+//     },\r\n+//     {\r\n+//       utterance: \"brane stop\",\r\n+//       action: stopListening,\r\n+//     },\r\n+//     {\r\n+//       utterance: \"brane turn off\",\r\n+//       action: stopListening,\r\n+//     },\r\n+//     {\r\n+//       utterance: \"brane stop the bot\",\r\n+//       action: stopListening,\r\n+//     },\r\n+//   ];\r\n+\r\n+//   return (\r\n+//     <div className=\"speech-bot-container\">\r\n+//       <div\r\n+//         className={`button-container ${\r\n+//           isListening ? \"voicebotframeactive\" : \"voicebotframe\"\r\n+//         }`}\r\n+//       >\r\n+//         <button onClick={isListening ? stopListening : startListening}>\r\n+//           {isListening ? \"Stop\" : \"Start\"} Animation\r\n+//         </button>\r\n+//         {/* <button onClick={toggleBotActive}>\r\n+//         {isBotActive ? 'Deactivate Bot' : 'Activate Bot'}\r\n+//       </button> \r\n+//       </div>\r\n+//     </div>\r\n+//   );\r\n+// };\r\n+\r\n+// export default VoiceBot; */\r\n+}\r\n+\r\n+//iska v1\r\n+\r\n+// import React, { useState, useEffect, useRef } from \"react\";\r\n+// import { useNavigate, useLocation } from \"react-router-dom\";\r\n+// import Fuse from \"fuse.js\";\r\n+// import \"./VoiceBot.css\";\r\n+\r\n+// const VoiceBot = ({ videoRef}) => {\r\n+//   const [isListening, setIsListening] = useState(false);\r\n+//   const [isSpeaking, setIsSpeaking] = useState(false);\r\n+//   const recognition = useRef(null);\r\n+//   const speechSynthesis = useRef(window.speechSynthesis);\r\n+//   const [hasGreeted, setHasGreeted] = useState(false);\r\n+//   const navigate = useNavigate();\r\n+\r\n+//  // Initialize speech recognition\r\n+//  useEffect(() => {\r\n+//   recognition.current = new window.webkitSpeechRecognition();\r\n+//   recognition.current.continuous = true;\r\n+//   recognition.current.interimResults = false;\r\n+//   recognition.current.onresult = onResult;\r\n+//   recognition.current.onend = onRecognitionEnd;\r\n+//   recognition.current.starting = false;\r\n+\r\n+//   recognition.current.onerror = (event) => {\r\n+//     console.error(\"Recognition error:\", event.error);\r\n+//     if (isListening && !isSpeaking) {\r\n+//       restartRecognition();\r\n+//     }\r\n+//   };\r\n+\r\n+//   return () => {\r\n+//     if (recognition.current) {\r\n+//       recognition.current.abort();\r\n+//     }\r\n+//   };\r\n+// }, []);\r\n+\r\n+//   // useEffect(() => {\r\n+//   //   const checkRecognition = () => {\r\n+//   //     if (isListening && !isSpeaking && !recognition.current.starting) {\r\n+//   //       console.log(\"Restarting recognition because it's not active.\");\r\n+//   //       recognition.current.starting = true;\r\n+//   //       recognition.current.start();\r\n+//   //       console.log(\"Restarted recognition.\");\r\n+//   //     }\r\n+//   //   };\r\n+\r\n+//   //   const recognitionCheckInterval = setInterval(checkRecognition, 100); // Check every .5 second\r\n+\r\n+//   //   return () => {\r\n+//   //     clearInterval(recognitionCheckInterval);\r\n+//   //   };\r\n+//   // }, [isListening, isSpeaking]);\r\n+\r\n+//   const historyStack = useRef([]);\r\n+\r\n+//   useEffect(() => {\r\n+//     return () => {\r\n+//       // Clean up the listener when the component unmounts\r\n+//       window.removeEventListener(\"popstate\", handlePopState);\r\n+//     };\r\n+//   }, []);\r\n+\r\n+//   const handlePopState = () => {\r\n+//     // This needs to handle both back and forward browser actions\r\n+//     // Use some logic to determine whether it's a back or forward action\r\n+//     // For simplicity, assume it's always back\r\n+//     historyStack.current.pop();\r\n+//     forwardStack.current.length = 0; // Clear forward stack on manual navigation\r\n+//   };\r\n+\r\n+//   // Add a new entry to the stack whenever navigate is called\r\n+//   const customNavigate = (to, options) => {\r\n+//     historyStack.current.push(to);\r\n+//     navigate(to, options);\r\n+//   };\r\n+\r\n+//   // Listen to popstate events to update the history stack\r\n+//   useEffect(() => {\r\n+//     window.addEventListener(\"popstate\", handlePopState);\r\n+//   }, []);\r\n+\r\n+//   const forwardStack = useRef([]);\r\n+\r\n+//   const goBack = () => {\r\n+//     if (window.history.state && window.history.state.idx > 0) {\r\n+//       window.history.back();\r\n+//       speak(\"Going back\");\r\n+//     } else {\r\n+//       speak(\"Can't go back any further.\");\r\n+//     }\r\n+//   };\r\n+\r\n+//   const goForward = () => {\r\n+//     if (window.history.state && window.history.state.idx < window.history.length - 1) {\r\n+//       window.history.forward();\r\n+//       speak(\"Going forward\");\r\n+//     } else {\r\n+//       speak(\"No forward history available.\");\r\n+//     }\r\n+//   };\r\n+\r\n+//   const playVideo = () => {\r\n+//     if (videoRef.current) {\r\n+//       videoRef.current.play();\r\n+//       speak(\"Playing video.\");\r\n+//     } else {\r\n+//       speak(\"No video to play.\");\r\n+//     }\r\n+//   };\r\n+\r\n+//   const pauseVideo = () => {\r\n+//     if (videoRef.current) {\r\n+//       videoRef.current.pause();\r\n+//       speak(\"Video paused.\");\r\n+//     } else {\r\n+//       speak(\"No video to pause.\");\r\n+//     }\r\n+//   };\r\n+\r\n+//   const scrollAmount = window.innerHeight * 0.82;\r\n+\r\n+//   const scrollUp = () => {\r\n+//     if (window.pageYOffset === 0) {\r\n+//       speak(\"Already at the top of the page.\");\r\n+//     } else {\r\n+//       window.scrollBy(0, -scrollAmount);\r\n+//       speak(\"Scrolled up.\");\r\n+//     }\r\n+//   };\r\n+\r\n+//   const scrollDown = () => {\r\n+//     const maxScrollTop =\r\n+//       document.documentElement.scrollHeight - window.innerHeight;\r\n+//     if (window.pageYOffset >= maxScrollTop) {\r\n+//       speak(\"Already at the bottom of the page.\");\r\n+//     } else {\r\n+//       window.scrollBy(0, scrollAmount);\r\n+//       speak(\"Scrolled down.\");\r\n+//     }\r\n+//   };\r\n+\r\n+//   const scrollToTop = () => {\r\n+//     if (window.pageYOffset === 0) {\r\n+//       speak(\"Already at the top of the page.\");\r\n+//     } else {\r\n+//       window.scrollTo(0, 0);\r\n+//       speak(\"Scrolled to the top of the page.\");\r\n+//     }\r\n+//   };\r\n+\r\n+//   const scrollToBottom = () => {\r\n+//     const maxScrollTop =\r\n+//       document.documentElement.scrollHeight - window.innerHeight;\r\n+//     if (window.pageYOffset >= maxScrollTop) {\r\n+//       speak(\"Already at the bottom of the page.\");\r\n+//     } else {\r\n+//       window.scrollTo(0, document.body.scrollHeight);\r\n+//       speak(\"Scrolled to the bottom of the page.\");\r\n+//     }\r\n+//   };\r\n+\r\n+//   const speak = (message) => {\r\n+//     const utterance = new SpeechSynthesisUtterance(message);\r\n+//     utterance.onend = () => {\r\n+//       setIsSpeaking(false);\r\n+//       // Restart recognition after speaking has ended\r\n+//       if (isListening) {\r\n+//         restartRecognition();\r\n+//       }\r\n+//     };\r\n+\r\n+//     setIsSpeaking(true);\r\n+//     // Stop recognition when the bot starts speaking\r\n+//     if (recognition.current) {\r\n+//       recognition.current.abort();\r\n+//     }\r\n+//     speechSynthesis.current.speak(utterance);\r\n+//   };\r\n+\r\n+//   const restartRecognition = () => {\r\n+//     // Check if recognition is not already started and if the bot is set to listen\r\n+//     if (recognition.current && !recognition.current.starting && isListening && !isSpeaking) {\r\n+//       // Only start recognition if it's not already active\r\n+//       if (recognition.current.state !== 'active') {\r\n+//         recognition.current.abort(); // Ensure any ongoing recognition is stopped\r\n+//         recognition.current.starting = true;\r\n+//         recognition.current.start();\r\n+//       }\r\n+//     }\r\n+//   };\r\n+\r\n+//     // Restart recognition when bot finishes speaking and isListening is true\r\n+//     useEffect(() => {\r\n+//       if (!isSpeaking && isListening) {\r\n+//         restartRecognition();\r\n+//       }\r\n+//     }, [isSpeaking, isListening]);\r\n+\r\n+//   const onResult = (event) => {\r\n+//     const resultIndex = event.resultIndex;\r\n+//     const transcript = event.results[resultIndex][0].transcript\r\n+//       .trim()\r\n+//       .toLowerCase();\r\n+\r\n+//     if (event.results[resultIndex].isFinal) {\r\n+//       console.log(`Recognized text: ${transcript}`);\r\n+//       if (transcript.includes(\"brain\")) {\r\n+//         console.log(\"Wake word heard, processing command...\");\r\n+//         handleCommandWithFuse(transcript.replace(\"brain\", \"\"));\r\n+//       }\r\n+//     }\r\n+//   };\r\n+\r\n+//   const onRecognitionEnd = () => {\r\n+//     recognition.current.starting = false;\r\n+//     if (isListening && !isSpeaking) {\r\n+//       restartRecognition();\r\n+//     }\r\n+//   };\r\n+\r\n+//   useEffect(() => {\r\n+//     if (isListening && !hasGreeted) {\r\n+//       speak(\"Hello, I'm Brane. How can I help you today?\");\r\n+//       setHasGreeted(true);\r\n+//     }\r\n+//   }, [isListening, hasGreeted]);\r\n+\r\n+// // Updated startListening function\r\n+// const startListening = () => {\r\n+//   setIsListening(true);\r\n+//   if (recognition.current && !recognition.current.starting) {\r\n+//     recognition.current.start();\r\n+//   }\r\n+// };\r\n+\r\n+// // Updated stopListening function\r\n+// const stopListening = () => {\r\n+//   setIsListening(false);\r\n+//   setIsSpeaking(false); // Reset speaking state\r\n+//   setHasGreeted(false); // Reset greeting state if needed\r\n+//   if (recognition.current) {\r\n+//     recognition.current.abort(); // Stop any ongoing speech recognition\r\n+//   }\r\n+//   if (speechSynthesis.current.speaking) {\r\n+//     speechSynthesis.current.cancel(); // Stop any ongoing speech synthesis\r\n+//   }\r\n+// };\r\n+\r\n+//   const handleCommandWithFuse = (command) => {\r\n+//     const fuse = new Fuse(commands, { keys: [\"utterance\"], threshold: 0.4 });\r\n+//     const results = fuse.search(command);\r\n+//     const foundCommand = results.length ? results[0].item : null;\r\n+\r\n+//     if (foundCommand) {\r\n+//       console.log(\"Command found:\", foundCommand.utterance);\r\n+\r\n+//       if (foundCommand.action) {\r\n+//         foundCommand.action();\r\n+//       } else if (foundCommand.route) {\r\n+//         navigate(foundCommand.route);\r\n+//       }\r\n+\r\n+//       // Speak after performing the action or navigation\r\n+//       speak(foundCommand.response);\r\n+//     } else {\r\n+//       console.log(\"No command found.\");\r\n+//       speak(\"I'm not sure how to respond to that.\");\r\n+//     }\r\n+//   };\r\n+\r\n+//   const commands = [\r\n+//     {\r\n+//       utterance: \"Hello who are you ?\",\r\n+\r\n+//       response:\r\n+//         \"Hi! This is Brane! your Voice bot from Brane Education How can I Assist you Today ?\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"Hello\",\r\n+\r\n+//       response: \"Hi! How can I assist you today?\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"hello\",\r\n+\r\n+//       response: \"Hi! How can I assist you today?\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"Hi.\",\r\n+\r\n+//       response: \"Hello! How can I assist you today?\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"Hey there\",\r\n+\r\n+//       response: \"Hi! How can I assist you today?\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"Good morning Brane.\",\r\n+\r\n+//       response: \"Hey Hiii! Good morning  ! How can I help you?\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"Good afternoon Brane.\",\r\n+\r\n+//       response: \"Hey Hiii! Good after noon ! How can I help you?\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"Good evening Brane.\",\r\n+\r\n+//       response: \"Hey Hiii! Good evening ! How can I help you?\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"can you please take me to login page\",\r\n+\r\n+//       route: \"/login\",\r\n+\r\n+//       response: \"Here's the Login Page, Please Login\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"please take me to login page\",\r\n+\r\n+//       route: \"/login\",\r\n+\r\n+//       response: \"Here's the Login Page, Please Login\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"Go to login page\",\r\n+\r\n+//       route: \"/login\",\r\n+\r\n+//       response: \"Here's the Login Page, Please Login\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"open login page\",\r\n+\r\n+//       route: \"/login\",\r\n+\r\n+//       response: \"Here's the Login Page, Please Login\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"can you please take me to signup page\",\r\n+\r\n+//       route: \"/signup\",\r\n+\r\n+//       response: \"Here's the signup page. Please proceed With Registration.\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"take me to signup page\",\r\n+\r\n+//       route: \"/signup\",\r\n+\r\n+//       response: \"Here's the signup page. Please proceed With Registration.\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"Go to signup page\",\r\n+\r\n+//       route: \"/signup\",\r\n+\r\n+//       response: \"Here's the signup page. Please proceed With Registration.\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"open signup page\",\r\n+\r\n+//       route: \"/signup\",\r\n+\r\n+//       response: \"Here's the signup page. Please proceed With Registration.\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"Go to face id\",\r\n+\r\n+//       route: \"/login/faceid\",\r\n+\r\n+//       response: \"Here's Face ID Login. Please proceed.\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"Go to face id login\",\r\n+\r\n+//       route: \"/login/faceid\",\r\n+\r\n+//       response: \"Here's Face ID Login. Please proceed.\",\r\n+//     },\r\n+//     {\r\n+//       utterance: \"Go to face login\",\r\n+\r\n+//       route: \"/login/faceid\",\r\n+\r\n+//       response: \"Here's Face ID Login. Please proceed.\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"login with face id\",\r\n+\r\n+//       route: \"/login/faceid\",\r\n+\r\n+//       response: \"Here's Face ID Login. Please proceed.\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"login with face\",\r\n+\r\n+//       route: \"/login/faceid\",\r\n+\r\n+//       response: \"Here's Face ID Login. Please proceed.\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"i want to login with face\",\r\n+\r\n+//       route: \"/login/faceid\",\r\n+\r\n+//       response: \"Here's Face ID Login. Please proceed.\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"login with voice\",\r\n+\r\n+//       route: \"/login/voiceid\",\r\n+\r\n+//       response: \"Here's Voice Login. Please proceed.\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"i want to login with voice\",\r\n+\r\n+//       route: \"/login/voiceid\",\r\n+\r\n+//       response: \"Here's Voice Login. Please proceed.\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"go to voice login\",\r\n+\r\n+//       route: \"/login/voiceid\",\r\n+\r\n+//       response: \"Here's Voice Login. Please proceed.\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"login with voice\",\r\n+\r\n+//       route: \"/login/voiceid\",\r\n+\r\n+//       response: \"Here's Voice Login. Please proceed.\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"login with mobile\",\r\n+\r\n+//       route: \"/login/mobile\",\r\n+\r\n+//       response: \"Here's Mobile Login. Please proceed.\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"i want to login with mobile\",\r\n+\r\n+//       route: \"/login/mobile\",\r\n+\r\n+//       response: \"Here's Mobile Login. Please proceed.\",\r\n+//     },\r\n+//     {\r\n+//       utterance: \"go to mobile login\",\r\n+\r\n+//       route: \"/login/mobile\",\r\n+\r\n+//       response: \"Here's Mobile Login. Please proceed.\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"what are platform features\",\r\n+\r\n+//       response:\r\n+//         \"Dashboard, Dynamic time table, Learning Networks, Little Masters, Video Based Dictionary, General Search.\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"Features of platform\",\r\n+\r\n+//       response:\r\n+//         \"Dashboard, Dynamic time table, Learning Networks, Little Masters, Video Based Dictionary, General Search.\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"What does the platform offer\",\r\n+\r\n+//       response:\r\n+//         \"Dashboard, Dynamic time table, Learning Networks, Little Masters, Video Based Dictionary, General Search.\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"Say me the features of platform\",\r\n+\r\n+//       response:\r\n+//         \"Dashboard, Dynamic time table, Learning Networks, Little Masters, Video Based Dictionary, General Search.\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"Say me the services of platform\",\r\n+\r\n+//       response:\r\n+//         \"Dashboard, Dynamic time table, Learning Networks, Little Masters, Video Based Dictionary, General Search.\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"tell me the services offered by the platform\",\r\n+\r\n+//       response:\r\n+//         \"Dashboard, Dynamic time table, Learning Networks, Little Masters, Video Based Dictionary, General Search.\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"explain platform services\",\r\n+\r\n+//       response:\r\n+//         \"Dashboard, Dynamic time table, Learning Networks, Little Masters, Video Based Dictionary, General Search.\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"Give me the Parent voice of Julia Harris\",\r\n+\r\n+//       response:\r\n+//         \"Brane education has helped my son a lot in his studies. He improved a lot in his studies and is now able to score good marks in his exams\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"Play today's motivational video\",\r\n+\r\n+//       response: \"I am playing the video\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"Play today's video\",\r\n+\r\n+//       response: \"I am playing Motivational video\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"Leaders Voice\",\r\n+\r\n+//       response:\r\n+//         \"This Voice-interactive AI Platform is a game Changer. It revolutionizes education.\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"Curriculum Supported by Brane Education\",\r\n+\r\n+//       response:\r\n+//         \"we support multiple Boards let me say few Telangana State Board Andhra Pradesh Board Maharashtra Board Assam Board\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"Boards supported by the platform\",\r\n+\r\n+//       response:\r\n+//         \"we support multiple Boards let me say few Telangana State Board Andhra Pradesh Board Maharashtra Board Assam Board\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"Curriculum\",\r\n+\r\n+//       response:\r\n+//         \"we support multiple Boards let me say few Telangana State Board Andhra Pradesh Board Maharashtra Board Assam Board\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"Go to landing page\",\r\n+\r\n+//       response: \"Okay, I am taking you to the landing page.\",\r\n+\r\n+//       route: \"/childpage\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"take me to landing page\",\r\n+\r\n+//       response: \"Okay, I am taking you to the landing page.\",\r\n+\r\n+//       route: \"/childpage\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"move to landing page\",\r\n+\r\n+//       response: \"Okay, I am taking you to the landing page.\",\r\n+\r\n+//       route: \"/childpage\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"roll back to landing page\",\r\n+\r\n+//       response: \"Okay, I am taking you to the landing page.\",\r\n+\r\n+//       route: \"/childpage\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"move to landing page\",\r\n+\r\n+//       response: \"Okay, I am taking you to the landing page.\",\r\n+\r\n+//       route: \"/childpage\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"what is today's quote\",\r\n+\r\n+//       response:\r\n+//         \"Determination is the power that sees us through all our frustration and obstacles. It helps in building our willpower which is the very basis of success.\",\r\n+\r\n+//       route: \"/childpage\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"Today's Inspirational quote\",\r\n+\r\n+//       response:\r\n+//         \"Determination is the power that sees us through all our frustration and obstacles. It helps in building our willpower which is the very basis of success.\",\r\n+\r\n+//       route: \"/childpage\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"say me today's quote\",\r\n+\r\n+//       response:\r\n+//         \"Determination is the power that sees us through all our frustration and obstacles. It helps in building our willpower which is the very basis of success.\",\r\n+\r\n+//       route: \"/childpage\",\r\n+//     },\r\n+//     {\r\n+//       utterance: \"go back\",\r\n+//       response: \"\",\r\n+//       action: goBack, // Note the use of an action property\r\n+//     },\r\n+//     {\r\n+//       utterance: \"go forward\",\r\n+//       response: \"\",\r\n+//       action: goForward,\r\n+//     },\r\n+//     {\r\n+//       utterance: \"play video\",\r\n+//       // response: \"Playing video.\",\r\n+//       action: playVideo,\r\n+//     },\r\n+//     {\r\n+//       utterance: \"pause video\",\r\n+//       // response: \"Pausing video.\",\r\n+//       action: pauseVideo,\r\n+//     },\r\n+//     {\r\n+//       utterance: \"start video\",\r\n+//       // response: \"Playing video.\",\r\n+//       action: playVideo,\r\n+//     },\r\n+//     {\r\n+//       utterance: \"stop video\",\r\n+//       // response: \"Playing video.\",\r\n+//       action: pauseVideo,\r\n+//     },\r\n+//     {\r\n+//       utterance: \"scroll up\",\r\n+//       // response: \"Scrolling up.\",\r\n+//       action: scrollUp,\r\n+//     },\r\n+//     {\r\n+//       utterance: \"scroll down\",\r\n+//       // response: \"Scrolling down.\",\r\n+//       action: scrollDown,\r\n+//     },\r\n+//     {\r\n+//       utterance: \"go up\",\r\n+\r\n+//       // response: \"Scrolling up.\",\r\n+//       action: scrollUp,\r\n+//     },\r\n+//     {\r\n+//       utterance: \"go down\",\r\n+//       // response: \"Scrolling down.\",\r\n+//       action: scrollDown,\r\n+//     },\r\n+//     {\r\n+//       utterance: \"scroll to top\",\r\n+//       action: scrollToTop,\r\n+//     },\r\n+//     {\r\n+//       utterance: \"scroll to bottom\",\r\n+//       action: scrollToBottom,\r\n+//     },\r\n+//     {\r\n+//       utterance: \"brane stop\",\r\n+//       action: stopListening,\r\n+//     },\r\n+//     {\r\n+//       utterance: \"brane turn off\",\r\n+//       action: stopListening,\r\n+//     },\r\n+//     {\r\n+//       utterance: \"brane stop the bot\",\r\n+//       action: stopListening,\r\n+//     },\r\n+//   ];\r\n+\r\n+//   return (\r\n+//     <div className=\"speech-bot-container\">\r\n+//       <div\r\n+//         className={`button-container ${\r\n+//           isListening ? \"voicebotframeactive\" : \"voicebotframe\"\r\n+//         }`}\r\n+//       >\r\n+//         <button onClick={isListening ? stopListening : startListening}>\r\n+//           {isListening ? \"Stop\" : \"Start\"} Animation\r\n+//         </button>\r\n+//         {/* <button onClick={toggleBotActive}>\r\n+//         {isBotActive ? 'Deactivate Bot' : 'Activate Bot'}\r\n+//       </button> */}\r\n+//       </div>\r\n+//     </div>\r\n+//   );\r\n+// };\r\n+\r\n+// export default VoiceBot;\r\n+\r\n+//Bot Video added but some start issues\r\n+\r\n+// import React, { useState, useEffect, useRef } from \"react\";\r\n+// import { useNavigate, useLocation } from \"react-router-dom\";\r\n+// import Fuse from \"fuse.js\";\r\n+// import \"./VoiceBot.css\";\r\n+\r\n+// const VoiceBot = ({ videoRef }) => {\r\n+//   const [isListening, setIsListening] = useState(false);\r\n+//   const [isSpeaking, setIsSpeaking] = useState(false);\r\n+//   const recognition = useRef(null);\r\n+//   const speechSynthesis = useRef(window.speechSynthesis);\r\n+//   const hasGreeted = useRef(false);\r\n+//   const restartRecognitionTimeout = useRef(null);\r\n+//   const navigate = useNavigate();\r\n+//   const location = useLocation();\r\n+//   const [isRecognitionActive, setIsRecognitionActive] = useState(false); // New state to track recognition status\r\n+\r\n+//   useEffect(() => {\r\n+//     recognition.current = new window.webkitSpeechRecognition();\r\n+//     recognition.current.continuous = true;\r\n+//     recognition.current.interimResults = false;\r\n+//     recognition.current.onresult = onResult;\r\n+//     recognition.current.onend = () => {\r\n+//       console.log(\"Recognition ended.\");\r\n+//       if (isListening) {\r\n+//         startListening();\r\n+//       }\r\n+//     };\r\n+//     recognition.current.onerror = (event) => {\r\n+//       console.error(\"Recognition error:\", event.error);\r\n+//     };\r\n+\r\n+//     return () => {\r\n+//       recognition.current.abort();\r\n+//     };\r\n+//   }, []);\r\n+\r\n+//   // Update useEffect for managing the recognition state based on isListening and isRecognitionActive\r\n+//   useEffect(() => {\r\n+//     if (isListening && !isRecognitionActive) {\r\n+//       startListening();\r\n+//     } else if (!isListening && isRecognitionActive) {\r\n+//       stopListening();\r\n+//     }\r\n+//   }, [isListening, isRecognitionActive]);\r\n+\r\n+//   const goBack = () => {\r\n+//     if (window.history.length > 1) {\r\n+//       navigate(-1);\r\n+//     } else {\r\n+//       speak(\"Can't go back any further.\");\r\n+//     }\r\n+//   };\r\n+\r\n+//   const goForward = () => {\r\n+//     // Unfortunately, there's no direct way to check if you can go forward in the history.\r\n+//     // You might need to manage this state manually based on user navigation.\r\n+//     navigate(1);\r\n+//   };\r\n+\r\n+//   const playVideo = () => {\r\n+//     if (videoRef.current && !videoRef.current.paused) {\r\n+//       speak(\"Video is already playing.\");\r\n+//     } else if (videoRef.current) {\r\n+//       videoRef.current.play();\r\n+//       speak(\"Playing video.\");\r\n+//     } else {\r\n+//       speak(\"No video to play.\");\r\n+//     }\r\n+//   };\r\n+\r\n+//   const pauseVideo = () => {\r\n+//     if (videoRef.current && videoRef.current.paused) {\r\n+//       speak(\"Video is already paused.\");\r\n+//     } else if (videoRef.current) {\r\n+//       videoRef.current.pause();\r\n+//       speak(\"Video paused.\");\r\n+//     } else {\r\n+//       speak(\"No video to pause.\");\r\n+//     }\r\n+//   };\r\n+\r\n+//   const scrollAmount = window.innerHeight * 0.82;\r\n+\r\n+//   const scrollUp = () => {\r\n+//     if (window.pageYOffset === 0) {\r\n+//       speak(\"Already at the top of the page.\");\r\n+//     } else {\r\n+//       window.scrollBy(0, -scrollAmount);\r\n+//       speak(\"Scrolled up.\");\r\n+//     }\r\n+//   };\r\n+\r\n+//   const scrollDown = () => {\r\n+//     const maxScrollTop =\r\n+//       document.documentElement.scrollHeight - window.innerHeight;\r\n+//     if (window.pageYOffset >= maxScrollTop) {\r\n+//       speak(\"Already at the bottom of the page.\");\r\n+//     } else {\r\n+//       window.scrollBy(0, scrollAmount);\r\n+//       speak(\"Scrolled down.\");\r\n+//     }\r\n+//   };\r\n+\r\n+//   const scrollToTop = () => {\r\n+//     if (window.pageYOffset === 0) {\r\n+//       speak(\"Already at the top of the page.\");\r\n+//     } else {\r\n+//       window.scrollTo(0, 0);\r\n+//       speak(\"Scrolled to the top of the page.\");\r\n+//     }\r\n+//   };\r\n+\r\n+//   const scrollToBottom = () => {\r\n+//     const maxScrollTop =\r\n+//       document.documentElement.scrollHeight - window.innerHeight;\r\n+//     if (window.pageYOffset >= maxScrollTop) {\r\n+//       speak(\"Already at the bottom of the page.\");\r\n+//     } else {\r\n+//       window.scrollTo(0, document.body.scrollHeight);\r\n+//       speak(\"Scrolled to the bottom of the page.\");\r\n+//     }\r\n+//   };\r\n+\r\n+//   // const speak = (message) => {\r\n+//   //   const utterance = new SpeechSynthesisUtterance(message);\r\n+//   //   utterance.onend = () => {\r\n+//   //     setIsSpeaking(false);\r\n+//   //     console.log(\"Speaking ended.\");\r\n+//   //     // Only restart recognition if we're still supposed to be listening\r\n+//   //     // if (isListening) {\r\n+//   //     //   if (restartRecognitionTimeout.current) {\r\n+//   //     //     clearTimeout(restartRecognitionTimeout.current);\r\n+//   //     //   }\r\n+//   //     //   restartRecognitionTimeout.current = setTimeout(() => {\r\n+//   //     //     console.log(\"Recognition restarted.\");\r\n+//   //     //     recognition.current.start();\r\n+//   //     //   }, 100); // Delay to prevent immediate restart\r\n+//   //     // }\r\n+//   //     if (isListening && !recognition.current.starting) { // Check the flag before restarting\r\n+//   //       recognition.current.starting = true; // Set the flag when starting recognition\r\n+//   //       recognition.current.start();\r\n+//   //     }\r\n+//   //   };\r\n+\r\n+//   //   setIsSpeaking(true);\r\n+//   //   console.log(\"Speaking started.\");\r\n+//   //   recognition.current.stop(); // Stop recognition when the bot starts speaking\r\n+//   //   speechSynthesis.current.speak(utterance);\r\n+//   // };\r\n+\r\n+//   const speak = (message) => {\r\n+//     console.log(\"speak function called with message:\", message);\r\n+//     const utterance = new SpeechSynthesisUtterance(message);\r\n+//     utterance.onend = () => {\r\n+//       setIsSpeaking(false);\r\n+//       console.log(\"Speaking ended.\");\r\n+//       // Directly handle the restart of recognition here if needed\r\n+//       if (isListening) {\r\n+//         startListening();\r\n+//       }\r\n+//     };\r\n+\r\n+//     setIsSpeaking(true);\r\n+//     console.log(\"Speaking started.\");\r\n+//     recognition.current.stop(); // Ensure to stop recognition before speaking\r\n+//     speechSynthesis.current.speak(utterance);\r\n+//   };\r\n+\r\n+//   const onResult = (event) => {\r\n+//     const resultIndex = event.resultIndex;\r\n+//     const transcript = event.results[resultIndex][0].transcript\r\n+//       .trim()\r\n+//       .toLowerCase();\r\n+\r\n+//     if (event.results[resultIndex].isFinal) {\r\n+//       console.log(`Recognized text: ${transcript}`);\r\n+//       if (transcript.includes(\"brain\")) {\r\n+//         console.log(\"Wake word heard, processing command...\");\r\n+//         handleCommandWithFuse(transcript.replace(\"brain\", \"\"));\r\n+//       }\r\n+//     }\r\n+//   };\r\n+\r\n+//   // const onRecognitionEnd = () => {\r\n+//   //   console.log(\"Recognition ended.\");\r\n+//   //   setIsRecognitionActive(false); // Update state when recognition ends\r\n+//   //   recognition.current.starting = false; // Reset the flag when recognition ends\r\n+//   //   // We now check if the recognition is already running before starting it again\r\n+//   //   if (isListening && !isSpeaking && !recognition.current?.starting) {\r\n+//   //     console.log(\"Restarting recognition.\");\r\n+//   //     recognition.current.start();\r\n+//   //   }\r\n+//   // };\r\n+\r\n+//   // useEffect(() => {\r\n+//   //   if (isListening && !hasGreeted.current) {\r\n+//   //     speak(\"Hello, I'm Brane. How can I assist you today?\");\r\n+//   //     hasGreeted.current = true;\r\n+//   //   } else if (isListening && !isSpeaking) {\r\n+//   //     recognition.current.start();\r\n+//   //   }\r\n+//   // }, [isListening, isSpeaking]);\r\n+\r\n+//   useEffect(() => {\r\n+//     if (isListening && !hasGreeted.current) {\r\n+//       speak(\"Hello, I'm Brane. How can I assist you today?\");\r\n+//       hasGreeted.current = true;\r\n+//     } else if (isListening && !isSpeaking && !recognition.current.starting) {\r\n+//       // Check the flag before starting\r\n+//       recognition.current.starting = true; // Set the flag when starting recognition\r\n+//       recognition.current.start();\r\n+//     }\r\n+//   }, [isListening, isSpeaking]);\r\n+\r\n+//   // const startListening = () => {\r\n+//   //   console.log(\"Attempting to start listening.\");\r\n+//   //   if (recognition.current && !recognition.current.starting) {\r\n+//   //     setIsListening(true);\r\n+//   //     recognition.current.starting = true; // Set the flag when starting recognition\r\n+//   //     recognition.current.start();\r\n+//   //     console.log(\"Listening started.\");\r\n+//   //   }\r\n+//   // };\r\n+\r\n+//   // const stopListening = () => {\r\n+//   //   console.log(\"Stopping listening.\");\r\n+\r\n+//   //   setIsListening(false);\r\n+//   //   recognition.current.stop();\r\n+//   //   if (speechSynthesis.current.speaking) {\r\n+//   //     speechSynthesis.current.cancel();\r\n+//   //   }\r\n+//   //   if (restartRecognitionTimeout.current) {\r\n+//   //     clearTimeout(restartRecognitionTimeout.current);\r\n+//   //   }\r\n+//   //   console.log(\"Listening stopped.\");\r\n+//   // };\r\n+//   // Handle start and stop listening logic\r\n+//   const startListening = () => {\r\n+//     console.log(\"Attempting to start listening.\");\r\n+//     if (!recognition.current.starting) {\r\n+//       setIsListening(true);\r\n+//       recognition.current.starting = true;\r\n+//       recognition.current.start();\r\n+//       console.log(\"Listening started.\");\r\n+//     } else {\r\n+//       console.log(\"Recognition already active.\");\r\n+//     }\r\n+//   };\r\n+\r\n+//   const stopListening = () => {\r\n+//     console.log(\"Stopping listening.\");\r\n+//     if (recognition.current.starting) {\r\n+//       setIsListening(false);\r\n+//       recognition.current.starting = false;\r\n+//       recognition.current.stop();\r\n+//       console.log(\"Listening stopped.\");\r\n+//     } else {\r\n+//       console.log(\"Recognition already inactive.\");\r\n+//     }\r\n+//   };\r\n+\r\n+//   // const handleCommandWithFuse = (command) => {\r\n+//   //   const fuse = new Fuse(commands, { keys: [\"utterance\"], threshold: 0.4 });\r\n+//   //   const results = fuse.search(command);\r\n+//   //   const foundCommand = results.length ? results[0].item : null;\r\n+\r\n+//   //   if (foundCommand) {\r\n+//   //     console.log(\"Command found:\", foundCommand.utterance);\r\n+//   //     speak(foundCommand.response);\r\n+//   //     if (foundCommand.route) {\r\n+//   //       navigate(foundCommand.route); // Navigate to the route specified in the command\r\n+//   //     }\r\n+//   //   } else {\r\n+//   //     console.log(\"No command found.\");\r\n+//   //     speak(\"I'm not sure how to respond to that.\");\r\n+//   //   }\r\n+//   // };\r\n+\r\n+//   const handleCommandWithFuse = (command) => {\r\n+//     const fuse = new Fuse(commands, { keys: [\"utterance\"], threshold: 0.4 });\r\n+//     const results = fuse.search(command);\r\n+//     const foundCommand = results.length ? results[0].item : null;\r\n+\r\n+//     if (foundCommand) {\r\n+//       console.log(\"Command found:\", foundCommand.utterance);\r\n+\r\n+//       if (foundCommand.route) {\r\n+//         if (location.pathname !== foundCommand.route) {\r\n+//           navigate(foundCommand.route);\r\n+//           speak(\r\n+//             `Navigating to ${\r\n+//               foundCommand.routeDescription || \"requested page\"\r\n+//             }.`\r\n+//           );\r\n+//         } else {\r\n+//           speak(\r\n+//             `You are already on the ${\r\n+//               foundCommand.routeDescription || \"requested page\"\r\n+//             }.`\r\n+//           );\r\n+//         }\r\n+//       } else if (foundCommand.action) {\r\n+//         foundCommand.action();\r\n+//       }\r\n+\r\n+//       if (foundCommand.response) {\r\n+//         speak(foundCommand.response);\r\n+//       }\r\n+//     } else {\r\n+//       console.log(\"No command found.\");\r\n+//       speak(\"I'm not sure how to respond to that.\");\r\n+//     }\r\n+//   };\r\n+\r\n+//   const commands = [\r\n+//     {\r\n+//       utterance: \"Hello who are you ?\",\r\n+\r\n+//       response:\r\n+//         \"Hi! This is Brane! your Voice bot from Brane Education How can I Assist you Today ?\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"Hello\",\r\n+\r\n+//       response: \"Hi! How can I assist you today?\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"hello\",\r\n+\r\n+//       response: \"Hi! How can I assist you today?\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"Hi.\",\r\n+\r\n+//       response: \"Hello! How can I assist you today?\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"Hey there\",\r\n+\r\n+//       response: \"Hi! How can I assist you today?\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"Good morning Brane.\",\r\n+\r\n+//       response: \"Hey Hiii! Good morning  ! How can I help you?\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"Good afternoon Brane.\",\r\n+\r\n+//       response: \"Hey Hiii! Good after noon ! How can I help you?\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"Good evening Brane.\",\r\n+\r\n+//       response: \"Hey Hiii! Good evening ! How can I help you?\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"can you please take me to login page\",\r\n+//       route: \"/login\",\r\n+//       routeDescription: \"login page\",\r\n+//       response: \"Navigating to the login page.\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"go to login page\",\r\n+//       route: \"/login\",\r\n+//       routeDescription: \"login page\",\r\n+//       response: \"Navigating to the login page.\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"please take me to login page\",\r\n+//       route: \"/login\",\r\n+//       routeDescription: \"login page\",\r\n+//       response: \"Navigating to the login page.\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"Go to login page\",\r\n+//       route: \"/login\",\r\n+//       routeDescription: \"login page\",\r\n+//       response: \"Navigating to the login page.\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"open login page\",\r\n+//       route: \"/login\",\r\n+//       routeDescription: \"login page\",\r\n+//       response: \"Navigating to the login page.\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"can you please take me to signup page\",\r\n+//       route: \"/signup\",\r\n+//       routeDescription: \"signup page\",\r\n+//       response: \"Navigating to the signup page.\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"take me to signup page\",\r\n+//       route: \"/signup\",\r\n+//       routeDescription: \"signup page\",\r\n+//       response: \"Navigating to the signup page.\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"Go to signup page\",\r\n+//       route: \"/signup\",\r\n+//       routeDescription: \"signup page\",\r\n+//       response: \"Navigating to the signup page.\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"open signup page\",\r\n+//       route: \"/signup\",\r\n+//       routeDescription: \"signup page\",\r\n+//       response: \"Navigating to the signup page.\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"what are platform features\",\r\n+\r\n+//       response:\r\n+//         \"Dashboard, Dynamic time table, Learning Networks, Little Masters, Video Based Dictionary, General Search.\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"Features of platform\",\r\n+\r\n+//       response:\r\n+//         \"Dashboard, Dynamic time table, Learning Networks, Little Masters, Video Based Dictionary, General Search.\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"What does the platform offer\",\r\n+\r\n+//       response:\r\n+//         \"Dashboard, Dynamic time table, Learning Networks, Little Masters, Video Based Dictionary, General Search.\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"Say me the features of platform\",\r\n+\r\n+//       response:\r\n+//         \"Dashboard, Dynamic time table, Learning Networks, Little Masters, Video Based Dictionary, General Search.\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"Say me the services of platform\",\r\n+\r\n+//       response:\r\n+//         \"Dashboard, Dynamic time table, Learning Networks, Little Masters, Video Based Dictionary, General Search.\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"tell me the services offered by the platform\",\r\n+\r\n+//       response:\r\n+//         \"Dashboard, Dynamic time table, Learning Networks, Little Masters, Video Based Dictionary, General Search.\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"explain platform services\",\r\n+\r\n+//       response:\r\n+//         \"Dashboard, Dynamic time table, Learning Networks, Little Masters, Video Based Dictionary, General Search.\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"Give me the Parent voice of Julia Harris\",\r\n+\r\n+//       response:\r\n+//         \"Brane education has helped my son a lot in his studies. He improved a lot in his studies and is now able to score good marks in his exams\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"Play today's motivational video\",\r\n+\r\n+//       response: \"I am playing the video\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"Play today's video\",\r\n+\r\n+//       response: \"I am playing Motivational video\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"Leaders Voice\",\r\n+\r\n+//       response:\r\n+//         \"This Voice-interactive AI Platform is a game Changer. It revolutionizes education.\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"Curriculum Supported by Brane Education\",\r\n+\r\n+//       response:\r\n+//         \"we support multiple Boards let me say few Telangana State Board Andhra Pradesh Board Maharashtra Board Assam Board\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"Boards supported by the platform\",\r\n+\r\n+//       response:\r\n+//         \"we support multiple Boards let me say few Telangana State Board Andhra Pradesh Board Maharashtra Board Assam Board\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"Curriculum\",\r\n+\r\n+//       response:\r\n+//         \"we support multiple Boards let me say few Telangana State Board Andhra Pradesh Board Maharashtra Board Assam Board\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"Go to landing page\",\r\n+\r\n+//       response: \"Okay, I am taking you to the landing page.\",\r\n+\r\n+//       route: \"/childpage\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"take me to landing page\",\r\n+\r\n+//       response: \"Okay, I am taking you to the landing page.\",\r\n+\r\n+//       route: \"/childpage\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"move to landing page\",\r\n+\r\n+//       response: \"Okay, I am taking you to the landing page.\",\r\n+\r\n+//       route: \"/childpage\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"roll back to landing page\",\r\n+\r\n+//       response: \"Okay, I am taking you to the landing page.\",\r\n+\r\n+//       route: \"/childpage\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"move to landing page\",\r\n+\r\n+//       response: \"Okay, I am taking you to the landing page.\",\r\n+\r\n+//       route: \"/childpage\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"what is today's quote\",\r\n+\r\n+//       response:\r\n+//         \"Determination is the power that sees us through all our frustration and obstacles. It helps in building our willpower which is the very basis of success.\",\r\n+\r\n+//       // route: \"/childpage\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"Today's Inspirational quote\",\r\n+\r\n+//       response:\r\n+//         \"Determination is the power that sees us through all our frustration and obstacles. It helps in building our willpower which is the very basis of success.\",\r\n+\r\n+//       // route: \"/childpage\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"say me today's quote\",\r\n+\r\n+//       response:\r\n+//         \"Determination is the power that sees us through all our frustration and obstacles. It helps in building our willpower which is the very basis of success.\",\r\n+\r\n+//       // route: \"/childpage\",\r\n+//     },\r\n+//     {\r\n+//       utterance: \"go back\",\r\n+//       response: \"Going back.\",\r\n+//       action: goBack, // Note the use of an action property\r\n+//     },\r\n+//     {\r\n+//       utterance: \"go forward\",\r\n+//       response: \"Going forward.\",\r\n+//       action: goForward,\r\n+//     },\r\n+//     {\r\n+//       utterance: \"play video\",\r\n+//       // response: \"Playing video.\",\r\n+//       action: playVideo,\r\n+//     },\r\n+//     {\r\n+//       utterance: \"pause video\",\r\n+//       // response: \"Pausing video.\",\r\n+//       action: pauseVideo,\r\n+//     },\r\n+//     {\r\n+//       utterance: \"start video\",\r\n+//       // response: \"Playing video.\",\r\n+//       action: playVideo,\r\n+//     },\r\n+//     {\r\n+//       utterance: \"stop video\",\r\n+//       // response: \"Playing video.\",\r\n+//       action: pauseVideo,\r\n+//     },\r\n+//     {\r\n+//       utterance: \"scroll up\",\r\n+//       // response: \"Scrolling up.\",\r\n+//       action: scrollUp,\r\n+//     },\r\n+//     {\r\n+//       utterance: \"scroll down\",\r\n+//       // response: \"Scrolling down.\",\r\n+//       action: scrollDown,\r\n+//     },\r\n+//     {\r\n+//       utterance: \"go up\",\r\n+\r\n+//       // response: \"Scrolling up.\",\r\n+//       action: scrollUp,\r\n+//     },\r\n+//     {\r\n+//       utterance: \"go down\",\r\n+//       // response: \"Scrolling down.\",\r\n+//       action: scrollDown,\r\n+//     },\r\n+//     {\r\n+//       utterance: \"scroll to top\",\r\n+//       action: scrollToTop,\r\n+//     },\r\n+//     {\r\n+//       utterance: \"scroll to bottom\",\r\n+//       action: scrollToBottom,\r\n+//     },\r\n+//   ];\r\n+//   return (\r\n+//     <div className=\"speech-bot-container\">\r\n+//       <div\r\n+//         className={`button-container ${\r\n+//           isListening ? \"voicebotframeactive\" : \"voicebotframe\"\r\n+//         }`}\r\n+//       >\r\n+//         <div onClick={isListening ? stopListening : startListening}>\r\n+//           <iframe\r\n+//             src={\r\n+//               isListening\r\n+//                 ? \"https://lottie.host/?file=a89aca3f-5407-4052-82c3-2048afca7a9f/NpCdWzLSKD.json\"\r\n+//                 : \"https://lottie.host/?file=d2b6cc0e-fe95-4847-85b5-35365fca7e00/vTudpCuPZq.json\"\r\n+//             }\r\n+//             width=\"120\" // Set your desired width\r\n+//             height=\"120\" // Set your desired height\r\n+//             title={isListening ? \"Stop Animation\" : \"Start Animation\"}\r\n+//             className={isListening ? \"voicebotframeactive\" : \"voicebotframe\"}\r\n+//           ></iframe>\r\n+//           {isListening ? (\r\n+//             <div className=\"overlay\" onClick={stopListening}></div>\r\n+//           ) : (\r\n+//             <div className=\"overlay\" onClick={startListening}></div>\r\n+//           )}\r\n+//         </div>\r\n+//       </div>\r\n+//     </div>\r\n+//   );\r\n+// };\r\n+\r\n+// export default VoiceBot;\r\n+\r\n+// All functionalities but messed up\r\n+\r\n+// import React, { useState, useEffect, useRef } from \"react\";\r\n+// import { useNavigate, useLocation } from \"react-router-dom\";\r\n+// import Fuse from \"fuse.js\";\r\n+// import \"./VoiceBot.css\";\r\n+\r\n+// const VoiceBot = ({ videoRef, takeTestRef, goBackRef }) => {\r\n+//   const [isListening, setIsListening] = useState(false);\r\n+//   const [isSpeaking, setIsSpeaking] = useState(false);\r\n+//   const recognition = useRef(null);\r\n+//   const speechSynthesis = useRef(window.speechSynthesis);\r\n+//   const hasGreeted = useRef(false);\r\n+//   const navigate = useNavigate();\r\n+//   const location = useLocation();\r\n+//   const isRecognitionActive = useRef(false);\r\n+\r\n+//   useEffect(() => {\r\n+//     recognition.current = new window.webkitSpeechRecognition();\r\n+//     recognition.current.continuous = true;\r\n+//     recognition.current.interimResults = false;\r\n+//     recognition.current.onresult = onResult;\r\n+//     recognition.current.onend = onRecognitionEnd;\r\n+\r\n+//     return () => {\r\n+//       if (recognition.current) {\r\n+//         recognition.current.abort();\r\n+//       }\r\n+//     };\r\n+//   }, [location.pathname]);\r\n+\r\n+//   const onResult = (event) => {\r\n+//     const resultIndex = event.resultIndex;\r\n+//     const transcript = event.results[resultIndex][0].transcript\r\n+//       .trim()\r\n+//       .toLowerCase();\r\n+\r\n+//     if (event.results[resultIndex].isFinal) {\r\n+//       console.log(`Recognized text: ${transcript}`);\r\n+//       if (transcript.includes(\"brain\")) {\r\n+//         console.log(\"Wake word heard, processing command...\");\r\n+//         handleCommandWithFuse(transcript.replace(\"brain\", \"\"));\r\n+//       }\r\n+//     }\r\n+//   };\r\n+\r\n+//   const startListening = () => {\r\n+//     if (!isRecognitionActive.current) {\r\n+//       setIsListening(true);\r\n+//       recognition.current.start();\r\n+//       isRecognitionActive.current = true;\r\n+//     }\r\n+//   };\r\n+\r\n+//   const stopListening = () => {\r\n+//     if (isRecognitionActive.current) {\r\n+//       setIsListening(false);\r\n+//       recognition.current.stop();\r\n+//       isRecognitionActive.current = false;\r\n+//     }\r\n+//   };\r\n+\r\n+//   const onRecognitionEnd = () => {\r\n+//     isRecognitionActive.current = false;\r\n+//     if (isListening) {\r\n+//       startListening();\r\n+//     }\r\n+//   };\r\n+\r\n+//   const speak = (message) => {\r\n+//     const utterance = new SpeechSynthesisUtterance(message);\r\n+//     utterance.onend = () => {\r\n+//       setIsSpeaking(false);\r\n+//       if (isListening && !isRecognitionActive.current) {\r\n+//         startListening();\r\n+//       }\r\n+//     };\r\n+\r\n+//     setIsSpeaking(true);\r\n+//     if (isRecognitionActive.current) {\r\n+//       stopListening(); // Adjusted to use stopListening\r\n+//     }\r\n+//     speechSynthesis.current.speak(utterance);\r\n+//   };\r\n+\r\n+//   useEffect(() => {\r\n+//     if (isListening && !hasGreeted.current) {\r\n+//       speak(\"Hello, I'm Brane. How can I assist you today?\");\r\n+//       hasGreeted.current = true;\r\n+//     }\r\n+//   }, [isListening]);\r\n+\r\n+//   const goBack = () => {\r\n+//     if (window.history.length > 1) {\r\n+//       navigate(-1);\r\n+//     } else {\r\n+//       speak(\"Can't go back any further.\");\r\n+//     }\r\n+//   };\r\n+\r\n+//   const goForward = () => {\r\n+//     // Unfortunately, there's no direct way to check if you can go forward in the history.\r\n+//     // You might need to manage this state manually based on user navigation.\r\n+//     navigate(1);\r\n+//   };\r\n+\r\n+//   const playVideo = () => {\r\n+//     if (videoRef.current && !videoRef.current.paused) {\r\n+//       speak(\"Video is already playing.\");\r\n+//     } else if (videoRef.current) {\r\n+//       videoRef.current.play();\r\n+//       speak(\"Playing video.\");\r\n+//     } else {\r\n+//       speak(\"No video to play.\");\r\n+//     }\r\n+//   };\r\n+\r\n+//   const pauseVideo = () => {\r\n+//     if (videoRef.current && videoRef.current.paused) {\r\n+//       speak(\"Video is already paused.\");\r\n+//     } else if (videoRef.current) {\r\n+//       videoRef.current.pause();\r\n+//       speak(\"Video paused.\");\r\n+//     } else {\r\n+//       speak(\"No video to pause.\");\r\n+//     }\r\n+//   };\r\n+\r\n+//   const scrollAmount = window.innerHeight * 0.82;\r\n+\r\n+//   const scrollUp = () => {\r\n+//     if (window.pageYOffset === 0) {\r\n+//       speak(\"Already at the top of the page.\");\r\n+//     } else {\r\n+//       window.scrollBy(0, -scrollAmount);\r\n+//       speak(\"Scrolled up.\");\r\n+//     }\r\n+//   };\r\n+\r\n+//   const scrollDown = () => {\r\n+//     const maxScrollTop =\r\n+//       document.documentElement.scrollHeight - window.innerHeight;\r\n+//     if (window.pageYOffset >= maxScrollTop) {\r\n+//       speak(\"Already at the bottom of the page.\");\r\n+//     } else {\r\n+//       window.scrollBy(0, scrollAmount);\r\n+//       speak(\"Scrolled down.\");\r\n+//     }\r\n+//   };\r\n+\r\n+//   const scrollToTop = () => {\r\n+//     if (window.pageYOffset === 0) {\r\n+//       speak(\"Already at the top of the page.\");\r\n+//     } else {\r\n+//       window.scrollTo(0, 0);\r\n+//       speak(\"Scrolled to the top of the page.\");\r\n+//     }\r\n+//   };\r\n+\r\n+//   const scrollToBottom = () => {\r\n+//     const maxScrollTop =\r\n+//       document.documentElement.scrollHeight - window.innerHeight;\r\n+//     if (window.pageYOffset >= maxScrollTop) {\r\n+//       speak(\"Already at the bottom of the page.\");\r\n+//     } else {\r\n+//       window.scrollTo(0, document.body.scrollHeight);\r\n+//       speak(\"Scrolled to the bottom of the page.\");\r\n+//     }\r\n+//   };\r\n+\r\n+//   // const speak = (message) => {\r\n+//   //   const utterance = new SpeechSynthesisUtterance(message);\r\n+//   //   utterance.onend = () => {\r\n+//   //     setIsSpeaking(false);\r\n+//   //     console.log(\"Speaking ended.\");\r\n+//   //     // Only restart recognition if we're still supposed to be listening\r\n+//   //     // if (isListening) {\r\n+//   //     //   if (restartRecognitionTimeout.current) {\r\n+//   //     //     clearTimeout(restartRecognitionTimeout.current);\r\n+//   //     //   }\r\n+//   //     //   restartRecognitionTimeout.current = setTimeout(() => {\r\n+//   //     //     console.log(\"Recognition restarted.\");\r\n+//   //     //     recognition.current.start();\r\n+//   //     //   }, 100); // Delay to prevent immediate restart\r\n+//   //     // }\r\n+//   //     if (isListening && !recognition.current.starting) { // Check the flag before restarting\r\n+//   //       recognition.current.starting = true; // Set the flag when starting recognition\r\n+//   //       recognition.current.start();\r\n+//   //     }\r\n+//   //   };\r\n+\r\n+//   //   setIsSpeaking(true);\r\n+//   //   console.log(\"Speaking started.\");\r\n+//   //   recognition.current.stop(); // Stop recognition when the bot starts speaking\r\n+//   //   speechSynthesis.current.speak(utterance);\r\n+//   // };\r\n+\r\n+//   // const onRecognitionEnd = () => {\r\n+//   //   console.log(\"Recognition ended.\");\r\n+//   //   setIsRecognitionActive(false); // Update state when recognition ends\r\n+//   //   recognition.current.starting = false; // Reset the flag when recognition ends\r\n+//   //   // We now check if the recognition is already running before starting it again\r\n+//   //   if (isListening && !isSpeaking && !recognition.current?.starting) {\r\n+//   //     console.log(\"Restarting recognition.\");\r\n+//   //     recognition.current.start();\r\n+//   //   }\r\n+//   // };\r\n+\r\n+//   // useEffect(() => {\r\n+//   //   if (isListening && !hasGreeted.current) {\r\n+//   //     speak(\"Hello, I'm Brane. How can I assist you today?\");\r\n+//   //     hasGreeted.current = true;\r\n+//   //   } else if (isListening && !isSpeaking) {\r\n+//   //     recognition.current.start();\r\n+//   //   }\r\n+//   // }, [isListening, isSpeaking]);\r\n+\r\n+//   // const startListening = () => {\r\n+//   //   console.log(\"Attempting to start listening.\");\r\n+//   //   if (recognition.current && !recognition.current.starting) {\r\n+//   //     setIsListening(true);\r\n+//   //     recognition.current.starting = true; // Set the flag when starting recognition\r\n+//   //     recognition.current.start();\r\n+//   //     console.log(\"Listening started.\");\r\n+//   //   }\r\n+//   // };\r\n+\r\n+//   // const stopListening = () => {\r\n+//   //   console.log(\"Stopping listening.\");\r\n+\r\n+//   //   setIsListening(false);\r\n+//   //   recognition.current.stop();\r\n+//   //   if (speechSynthesis.current.speaking) {\r\n+//   //     speechSynthesis.current.cancel();\r\n+//   //   }\r\n+//   //   if (restartRecognitionTimeout.current) {\r\n+//   //     clearTimeout(restartRecognitionTimeout.current);\r\n+//   //   }\r\n+//   //   console.log(\"Listening stopped.\");\r\n+//   // };\r\n+//   // Handle start and stop listening logic\r\n+\r\n+//   useEffect(() => {\r\n+//     if (isListening && !hasGreeted.current) {\r\n+//       speak(\"Hello, I'm Brane. How can I assist you today?\");\r\n+//       hasGreeted.current = true;\r\n+//     }\r\n+//   }, [isListening]);\r\n+\r\n+//   // const handleCommandWithFuse = (command) => {\r\n+//   //   const fuse = new Fuse(commands, { keys: [\"utterance\"], threshold: 0.4 });\r\n+//   //   const results = fuse.search(command);\r\n+//   //   const foundCommand = results.length ? results[0].item : null;\r\n+\r\n+//   //   if (foundCommand) {\r\n+//   //     console.log(\"Command found:\", foundCommand.utterance);\r\n+//   //     speak(foundCommand.response);\r\n+//   //     if (foundCommand.route) {\r\n+//   //       navigate(foundCommand.route); // Navigate to the route specified in the command\r\n+//   //     }\r\n+//   //   } else {\r\n+//   //     console.log(\"No command found.\");\r\n+//   //     speak(\"I'm not sure how to respond to that.\");\r\n+//   //   }\r\n+//   // };\r\n+\r\n+//   const handleCommandWithFuse = (command) => {\r\n+//     const fuse = new Fuse(commands, { keys: [\"utterance\"], threshold: 0.4 });\r\n+//     const results = fuse.search(command);\r\n+//     const foundCommand = results.length ? results[0].item : null;\r\n+\r\n+//     if (foundCommand) {\r\n+//       console.log(\"Command found:\", foundCommand.utterance);\r\n+\r\n+//       if (foundCommand.action) {\r\n+//         foundCommand.action();\r\n+//       } else if (foundCommand.route) {\r\n+//         navigate(foundCommand.route);\r\n+//       }\r\n+\r\n+//       if (foundCommand.response) {\r\n+//         speak(foundCommand.response);\r\n+//       }\r\n+//     } else {\r\n+//       console.log(\"No command found.\");\r\n+//       speak(\"I'm not sure how to respond to that.\");\r\n+//     }\r\n+//   };\r\n+\r\n+//   const commands = [\r\n+//     {\r\n+//       utterance: \"Hello who are you ?\",\r\n+\r\n+//       response:\r\n+//         \"Hi! This is Brane! your Voice bot from Brane Education How can I Assist you Today ?\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"Hello\",\r\n+\r\n+//       response: \"Hi! How can I assist you today?\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"hello\",\r\n+\r\n+//       response: \"Hi! How can I assist you today?\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"Hi.\",\r\n+\r\n+//       response: \"Hello! How can I assist you today?\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"Hey there\",\r\n+\r\n+//       response: \"Hi! How can I assist you today?\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"Good morning Brane.\",\r\n+\r\n+//       response: \"Hey Hiii! Good morning  ! How can I help you?\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"Good afternoon Brane.\",\r\n+\r\n+//       response: \"Hey Hiii! Good after noon ! How can I help you?\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"Good evening Brane.\",\r\n+\r\n+//       response: \"Hey Hiii! Good evening ! How can I help you?\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"can you please take me to login page\",\r\n+//       route: \"/login\",\r\n+//       routeDescription: \"login page\",\r\n+//       response: \"Navigating to the login page.\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"go to login page\",\r\n+//       route: \"/login\",\r\n+//       routeDescription: \"login page\",\r\n+//       response: \"Navigating to the login page.\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"please take me to login page\",\r\n+//       route: \"/login\",\r\n+//       routeDescription: \"login page\",\r\n+//       response: \"Navigating to the login page.\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"Go to login page\",\r\n+//       route: \"/login\",\r\n+//       routeDescription: \"login page\",\r\n+//       response: \"Navigating to the login page.\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"open login page\",\r\n+//       route: \"/login\",\r\n+//       routeDescription: \"login page\",\r\n+//       response: \"Navigating to the login page.\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"can you please take me to signup page\",\r\n+//       route: \"/signup\",\r\n+//       routeDescription: \"signup page\",\r\n+//       response: \"Navigating to the signup page.\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"take me to signup page\",\r\n+//       route: \"/signup\",\r\n+//       routeDescription: \"signup page\",\r\n+//       response: \"Navigating to the signup page.\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"Go to signup page\",\r\n+//       route: \"/signup\",\r\n+//       routeDescription: \"signup page\",\r\n+//       response: \"Navigating to the signup page.\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"open signup page\",\r\n+//       route: \"/signup\",\r\n+//       routeDescription: \"signup page\",\r\n+//       response: \"Navigating to the signup page.\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"what are platform features\",\r\n+\r\n+//       response:\r\n+//         \"Dashboard, Dynamic time table, Learning Networks, Little Masters, Video Based Dictionary, General Search.\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"Features of platform\",\r\n+\r\n+//       response:\r\n+//         \"Dashboard, Dynamic time table, Learning Networks, Little Masters, Video Based Dictionary, General Search.\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"What does the platform offer\",\r\n+\r\n+//       response:\r\n+//         \"Dashboard, Dynamic time table, Learning Networks, Little Masters, Video Based Dictionary, General Search.\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"Say me the features of platform\",\r\n+\r\n+//       response:\r\n+//         \"Dashboard, Dynamic time table, Learning Networks, Little Masters, Video Based Dictionary, General Search.\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"Say me the services of platform\",\r\n+\r\n+//       response:\r\n+//         \"Dashboard, Dynamic time table, Learning Networks, Little Masters, Video Based Dictionary, General Search.\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"tell me the services offered by the platform\",\r\n+\r\n+//       response:\r\n+//         \"Dashboard, Dynamic time table, Learning Networks, Little Masters, Video Based Dictionary, General Search.\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"explain platform services\",\r\n+\r\n+//       response:\r\n+//         \"Dashboard, Dynamic time table, Learning Networks, Little Masters, Video Based Dictionary, General Search.\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"Give me the Parent voice of Julia Harris\",\r\n+\r\n+//       response:\r\n+//         \"Brane education has helped my son a lot in his studies. He improved a lot in his studies and is now able to score good marks in his exams\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"Play today's motivational video\",\r\n+\r\n+//       response: \"I am playing the video\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"Play today's video\",\r\n+\r\n+//       response: \"I am playing Motivational video\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"Leaders Voice\",\r\n+\r\n+//       response:\r\n+//         \"This Voice-interactive AI Platform is a game Changer. It revolutionizes education.\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"Curriculum Supported by Brane Education\",\r\n+\r\n+//       response:\r\n+//         \"we support multiple Boards let me say few Telangana State Board Andhra Pradesh Board Maharashtra Board Assam Board\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"Boards supported by the platform\",\r\n+\r\n+//       response:\r\n+//         \"we support multiple Boards let me say few Telangana State Board Andhra Pradesh Board Maharashtra Board Assam Board\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"Curriculum\",\r\n+\r\n+//       response:\r\n+//         \"we support multiple Boards let me say few Telangana State Board Andhra Pradesh Board Maharashtra Board Assam Board\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"Go to landing page\",\r\n+\r\n+//       response: \"Okay, I am taking you to the landing page.\",\r\n+\r\n+//       route: \"/childpage\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"take me to landing page\",\r\n+\r\n+//       response: \"Okay, I am taking you to the landing page.\",\r\n+\r\n+//       route: \"/childpage\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"move to landing page\",\r\n+\r\n+//       response: \"Okay, I am taking you to the landing page.\",\r\n+\r\n+//       route: \"/childpage\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"roll back to landing page\",\r\n+\r\n+//       response: \"Okay, I am taking you to the landing page.\",\r\n+\r\n+//       route: \"/childpage\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"move to landing page\",\r\n+\r\n+//       response: \"Okay, I am taking you to the landing page.\",\r\n+\r\n+//       route: \"/childpage\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"what is today's quote\",\r\n+\r\n+//       response:\r\n+//         \"Determination is the power that sees us through all our frustration and obstacles. It helps in building our willpower which is the very basis of success.\",\r\n+\r\n+//       // route: \"/childpage\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"Today's Inspirational quote\",\r\n+\r\n+//       response:\r\n+//         \"Determination is the power that sees us through all our frustration and obstacles. It helps in building our willpower which is the very basis of success.\",\r\n+\r\n+//       // route: \"/childpage\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"say me today's quote\",\r\n+\r\n+//       response:\r\n+//         \"Determination is the power that sees us through all our frustration and obstacles. It helps in building our willpower which is the very basis of success.\",\r\n+\r\n+//       // route: \"/childpage\",\r\n+//     },\r\n+//     {\r\n+//       utterance: \"go back\",\r\n+//       response: \"Going back.\",\r\n+//       action: goBack, // Note the use of an action property\r\n+//     },\r\n+//     {\r\n+//       utterance: \"go forward\",\r\n+//       response: \"Going forward.\",\r\n+//       action: goForward,\r\n+//     },\r\n+//     {\r\n+//       utterance: \"play video\",\r\n+//       // response: \"Playing video.\",\r\n+//       action: playVideo,\r\n+//     },\r\n+//     {\r\n+//       utterance: \"pause video\",\r\n+//       // response: \"Pausing video.\",\r\n+//       action: pauseVideo,\r\n+//     },\r\n+//     {\r\n+//       utterance: \"start video\",\r\n+//       // response: \"Playing video.\",\r\n+//       action: playVideo,\r\n+//     },\r\n+//     {\r\n+//       utterance: \"stop video\",\r\n+//       // response: \"Playing video.\",\r\n+//       action: pauseVideo,\r\n+//     },\r\n+//     {\r\n+//       utterance: \"scroll up\",\r\n+//       // response: \"Scrolling up.\",\r\n+//       action: scrollUp,\r\n+//     },\r\n+//     {\r\n+//       utterance: \"scroll down\",\r\n+//       // response: \"Scrolling down.\",\r\n+//       action: scrollDown,\r\n+//     },\r\n+//     {\r\n+//       utterance: \"go up\",\r\n+\r\n+//       // response: \"Scrolling up.\",\r\n+//       action: scrollUp,\r\n+//     },\r\n+//     {\r\n+//       utterance: \"go down\",\r\n+//       // response: \"Scrolling down.\",\r\n+//       action: scrollDown,\r\n+//     },\r\n+//     {\r\n+//       utterance: \"scroll to top\",\r\n+//       action: scrollToTop,\r\n+//     },\r\n+//     {\r\n+//       utterance: \"scroll to bottom\",\r\n+//       action: scrollToBottom,\r\n+//     },\r\n+//     {\r\n+//       utterance: \"go back\",\r\n+//       action: goBackRef?.current?.click, // Use goBackRef directly\r\n+//       response: \"Going back.\",\r\n+//     },\r\n+//     {\r\n+//       utterance: \"take test\",\r\n+//       action: takeTestRef?.current?.click, // Use takeTestRef directly\r\n+//       response: \"Starting the test.\",\r\n+//     },\r\n+//   ];\r\n+//   return (\r\n+//     <div className=\"speech-bot-container\">\r\n+//       <div\r\n+//         className={`button-container ${\r\n+//           isListening ? \"voicebotframeactive\" : \"voicebotframe\"\r\n+//         }`}\r\n+//       >\r\n+//         <div onClick={isListening ? stopListening : startListening}>\r\n+//           <iframe\r\n+//             src={\r\n+//               isListening\r\n+//                 ? \"https://lottie.host/?file=a89aca3f-5407-4052-82c3-2048afca7a9f/NpCdWzLSKD.json\"\r\n+//                 : \"https://lottie.host/?file=d2b6cc0e-fe95-4847-85b5-35365fca7e00/vTudpCuPZq.json\"\r\n+//             }\r\n+//             width=\"120\" // Set your desired width\r\n+//             height=\"120\" // Set your desired height\r\n+//             title={isListening ? \"Stop Animation\" : \"Start Animation\"}\r\n+//             className={isListening ? \"voicebotframeactive\" : \"voicebotframe\"}\r\n+//           ></iframe>\r\n+//           {isListening ? (\r\n+//             <div className=\"overlay\" onClick={stopListening}></div>\r\n+//           ) : (\r\n+//             <div className=\"overlay\" onClick={startListening}></div>\r\n+//           )}\r\n+//         </div>\r\n+//       </div>\r\n+//     </div>\r\n+//   );\r\n+// };\r\n+\r\n+// export default VoiceBot;\r\n"
                },
                {
                    "date": 1700733563794,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -138,56 +138,73 @@\n       speak(\"Scrolled to the bottom of the page.\");\r\n     }\r\n   };\r\n \r\n-\r\n   const controlVideo = (videoId, action) => {\r\n     const videoRef = videoRefs.current.get(videoId);\r\n     if (videoRef && videoRef.current) {\r\n       switch (action) {\r\n-        case 'play':\r\n+        case \"play\":\r\n           videoRef.current.play();\r\n           break;\r\n-        case 'pause':\r\n+        case \"pause\":\r\n           videoRef.current.pause();\r\n           break;\r\n-        case 'mute':\r\n+        case \"mute\":\r\n           videoRef.current.muted = true;\r\n           break;\r\n-        case 'unmute':\r\n+        case \"unmute\":\r\n           videoRef.current.muted = false;\r\n           break;\r\n-        case 'fullscreen':\r\n+        case \"fullscreen\":\r\n           if (videoRef.current.requestFullscreen) {\r\n             videoRef.current.requestFullscreen();\r\n-          } else if (videoRef.current.webkitRequestFullscreen) { // Safari\r\n+          } else if (videoRef.current.webkitRequestFullscreen) {\r\n+            // Safari\r\n             videoRef.current.webkitRequestFullscreen();\r\n-          } else if (videoRef.current.msRequestFullscreen) { // IE11\r\n+          } else if (videoRef.current.msRequestFullscreen) {\r\n+            // IE11\r\n             videoRef.current.msRequestFullscreen();\r\n           }\r\n           break;\r\n-        case 'exitFullscreen':\r\n+        case \"exitFullscreen\":\r\n           if (document.exitFullscreen) {\r\n             document.exitFullscreen();\r\n-          } else if (document.webkitExitFullscreen) { // Safari\r\n+          } else if (document.webkitExitFullscreen) {\r\n+            // Safari\r\n             document.webkitExitFullscreen();\r\n-          } else if (document.msExitFullscreen) { // IE11\r\n+          } else if (document.msExitFullscreen) {\r\n+            // IE11\r\n             document.msExitFullscreen();\r\n           }\r\n           break;\r\n-        case 'increaseVolume':\r\n+        case \"increaseVolume\":\r\n           if (videoRef.current.volume < 1) {\r\n-            videoRef.current.volume = Math.min(1, videoRef.current.volume + 0.1);\r\n+            videoRef.current.volume = Math.min(\r\n+              1,\r\n+              videoRef.current.volume + 0.1\r\n+            );\r\n           }\r\n           break;\r\n-        case 'decreaseVolume':\r\n+        case \"decreaseVolume\":\r\n           if (videoRef.current.volume > 0) {\r\n-            videoRef.current.volume = Math.max(0, videoRef.current.volume - 0.1);\r\n+            videoRef.current.volume = Math.max(\r\n+              0,\r\n+              videoRef.current.volume - 0.1\r\n+            );\r\n           }\r\n           break;\r\n         // Add other cases as needed\r\n       }\r\n-      speak(`${action.charAt(0).toUpperCase() + action.slice(1).replace(/([A-Z])/g, ' $1').toLowerCase()}ing video.`);\r\n+      speak(\r\n+        `${\r\n+          action.charAt(0).toUpperCase() +\r\n+          action\r\n+            .slice(1)\r\n+            .replace(/([A-Z])/g, \" $1\")\r\n+            .toLowerCase()\r\n+        }ing video.`\r\n+      );\r\n     } else {\r\n       speak(`Video not found.`);\r\n     }\r\n   };\r\n@@ -826,3887 +843,127 @@\n     //   action: unmuteVideo,\r\n     // },\r\n     {\r\n       utterance: \"play transforming education video\",\r\n-      action: () => controlVideo('ourProjectsVideo', 'play'),\r\n+      action: () => controlVideo(\"ourProjectsVideo\", \"play\"),\r\n     },\r\n     {\r\n       utterance: \"start transforming education video\",\r\n-      action: () => controlVideo('ourProjectsVideo', 'play'),\r\n+      action: () => controlVideo(\"ourProjectsVideo\", \"play\"),\r\n     },\r\n     {\r\n       utterance: \"pause transforming education video\",\r\n-      action: () => controlVideo('ourProjectsVideo', 'pause'),\r\n+      action: () => controlVideo(\"ourProjectsVideo\", \"pause\"),\r\n     },\r\n     {\r\n       utterance: \"stop transforming education video\",\r\n-      action: () => controlVideo('ourProjectsVideo', 'pause'),\r\n+      action: () => controlVideo(\"ourProjectsVideo\", \"pause\"),\r\n     },\r\n     {\r\n       utterance: \"mute transforming education video\",\r\n-      action: () => controlVideo('ourProjectsVideo', 'mute'),\r\n+      action: () => controlVideo(\"ourProjectsVideo\", \"mute\"),\r\n     },\r\n     {\r\n       utterance: \"unmute transforming education video\",\r\n-      action: () => controlVideo('ourProjectsVideo', 'unmute'),\r\n+      action: () => controlVideo(\"ourProjectsVideo\", \"unmute\"),\r\n     },\r\n     {\r\n       utterance: \"fullscreen transforming education video\",\r\n-      action: () => controlVideo('ourProjectsVideo', 'fullscreen'),\r\n+      action: () => controlVideo(\"ourProjectsVideo\", \"fullscreen\"),\r\n     },\r\n     {\r\n       utterance: \"exit fullscreen transforming education video\",\r\n-      action: () => controlVideo('ourProjectsVideo', 'exitFullscreen'),\r\n+      action: () => controlVideo(\"ourProjectsVideo\", \"exitFullscreen\"),\r\n     },\r\n     {\r\n       utterance: \"increase volume transforming education video\",\r\n-      action: () => controlVideo('ourProjectsVideo', 'increaseVolume'),\r\n+      action: () => controlVideo(\"ourProjectsVideo\", \"increaseVolume\"),\r\n     },\r\n     {\r\n       utterance: \"decrease volume transforming education video\",\r\n-      action: () => controlVideo('ourProjectsVideo', 'decreaseVolume'),\r\n+      action: () => controlVideo(\"ourProjectsVideo\", \"decreaseVolume\"),\r\n     },\r\n     {\r\n       utterance: \"play the video about transforming education\",\r\n-      action: () => controlVideo('ourProjectsVideo', 'play'),\r\n+      action: () => controlVideo(\"ourProjectsVideo\", \"play\"),\r\n     },\r\n     {\r\n       utterance: \"start the transforming education video\",\r\n-      action: () => controlVideo('ourProjectsVideo', 'play'),\r\n+      action: () => controlVideo(\"ourProjectsVideo\", \"play\"),\r\n     },\r\n     {\r\n       utterance: \"can you pause the video on transforming education\",\r\n-      action: () => controlVideo('ourProjectsVideo', 'pause'),\r\n+      action: () => controlVideo(\"ourProjectsVideo\", \"pause\"),\r\n     },\r\n     {\r\n       utterance: \"stop the video about transforming education\",\r\n-      action: () => controlVideo('ourProjectsVideo', 'pause'),\r\n+      action: () => controlVideo(\"ourProjectsVideo\", \"pause\"),\r\n     },\r\n     {\r\n       utterance: \"mute the transforming education video\",\r\n-      action: () => controlVideo('ourProjectsVideo', 'mute'),\r\n+      action: () => controlVideo(\"ourProjectsVideo\", \"mute\"),\r\n     },\r\n     {\r\n       utterance: \"unmute the video on transforming education\",\r\n-      action: () => controlVideo('ourProjectsVideo', 'unmute'),\r\n+      action: () => controlVideo(\"ourProjectsVideo\", \"unmute\"),\r\n     },\r\n     {\r\n       utterance: \"make the transforming education video fullscreen\",\r\n-      action: () => controlVideo('ourProjectsVideo', 'fullscreen'),\r\n+      action: () => controlVideo(\"ourProjectsVideo\", \"fullscreen\"),\r\n     },\r\n     {\r\n       utterance: \"exit fullscreen on the transforming education video\",\r\n-      action: () => controlVideo('ourProjectsVideo', 'exitFullscreen'),\r\n+      action: () => controlVideo(\"ourProjectsVideo\", \"exitFullscreen\"),\r\n     },\r\n     {\r\n       utterance: \"increase the volume of the transforming education video\",\r\n-      action: () => controlVideo('ourProjectsVideo', 'increaseVolume'),\r\n+      action: () => controlVideo(\"ourProjectsVideo\", \"increaseVolume\"),\r\n     },\r\n     {\r\n       utterance: \"decrease the volume of the transforming education video\",\r\n-      action: () => controlVideo('ourProjectsVideo', 'decreaseVolume'),\r\n+      action: () => controlVideo(\"ourProjectsVideo\", \"decreaseVolume\"),\r\n     },\r\n-    \r\n-    {\r\n-      utterance: \"play leaders voice video\",\r\n-      action: () => controlVideo('leadersVoiceVideo', 'play'),\r\n-    },\r\n-    {\r\n-      utterance: \"start leaders voice video\",\r\n-      action: () => controlVideo('leadersVoiceVideo', 'play'),\r\n-    },\r\n-    {\r\n-      utterance: \"pause leaders voice video\",\r\n-      action: () => controlVideo('leadersVoiceVideo', 'pause'),\r\n-    },\r\n-    {\r\n-      utterance: \"stop leaders voice video\",\r\n-      action: () => controlVideo('leadersVoiceVideo', 'pause'),\r\n-    },\r\n-    {\r\n-      utterance: \"mute leaders voice video\",\r\n-      action: () => controlVideo('leadersVoiceVideo', 'mute'),\r\n-    },\r\n-    {\r\n-      utterance: \"unmute leaders voice video\",\r\n-      action: () => controlVideo('leadersVoiceVideo', 'unmute'),\r\n-    },\r\n-    {\r\n-      utterance: \"fullscreen leaders voice video\",\r\n-      action: () => controlVideo('leadersVoiceVideo', 'fullscreen'),\r\n-    },\r\n-    {\r\n-      utterance: \"exit fullscreen leaders voice video\",\r\n-      action: () => controlVideo('leadersVoiceVideo', 'exitFullscreen'),\r\n-    },\r\n-    {\r\n-      utterance: \"increase volume leaders voice video\",\r\n-      action: () => controlVideo('leadersVoiceVideo', 'increaseVolume'),\r\n-    },\r\n-    {\r\n-      utterance: \"decrease volume leaders voice video\",\r\n-      action: () => controlVideo('leadersVoiceVideo', 'decreaseVolume'),\r\n-    },\r\n-    \r\n-  ];\r\n \r\n-  return (\r\n-    <div className=\"speech-bot-container\">\r\n-      <div\r\n-        className={`button-container ${\r\n-          isListening ? \"voicebotframeactive\" : \"voicebotframe\"\r\n-        }`}\r\n-      >\r\n-        {/* <button onClick={isListening ? stopListening : startListening}>\r\n-          {isListening ? \"Stop\" : \"Start\"} Animation\r\n-        </button> */}\r\n-        <img\r\n-          className=\"botimage\"\r\n-          src={chatbotimage}\r\n-          alt=\"\"\r\n-          onClick={isListening ? stopListening : startListening}\r\n-        />\r\n-      </div>\r\n-    </div>\r\n-  );\r\n-};\r\n-\r\n-export default VoiceBot;\r\n-\r\n-{\r\n-  /* // import React, { useState, useEffect, useRef } from \"react\";\r\n-// import { useNavigate, useLocation } from \"react-router-dom\";\r\n-// import Fuse from \"fuse.js\";\r\n-// import \"./VoiceBot.css\";\r\n-\r\n-// const VoiceBot = ({ videoRef }) => {\r\n-//   const [isListening, setIsListening] = useState(false);\r\n-//   const [isSpeaking, setIsSpeaking] = useState(false);\r\n-//   const recognition = useRef(null);\r\n-//   const speechSynthesis = useRef(window.speechSynthesis);\r\n-//   const [hasGreeted, setHasGreeted] = useState(false);\r\n-//   const navigate = useNavigate();\r\n-\r\n-//   useEffect(() => {\r\n-//     recognition.current = new window.webkitSpeechRecognition();\r\n-//     recognition.current.continuous = true;\r\n-//     recognition.current.interimResults = false;\r\n-//     recognition.current.onresult = onResult;\r\n-//     recognition.current.onend = onRecognitionEnd;\r\n-//     recognition.current.starting = false;\r\n-\r\n-//     // Simplified error handling, removed specific handling for 'no-speech'\r\n-//     recognition.current.onerror = (event) => {\r\n-//       console.error(\"Recognition error:\", event.error);\r\n-//       // Check if listening is true and the bot isn't speaking\r\n-//       if (isListening && !isSpeaking) {\r\n-//         // Restart recognition\r\n-//         restartRecognition();\r\n-//       }\r\n-//     };\r\n-\r\n-//     return () => {\r\n-//       if (recognition.current) {\r\n-//         recognition.current.abort();\r\n-//       }\r\n-//     };\r\n-//   }, []);\r\n-\r\n-//   useEffect(() => {\r\n-//     const checkRecognition = () => {\r\n-//       if (isListening && !isSpeaking && !recognition.current.starting) {\r\n-//         console.log(\"Restarting recognition because it's not active.\");\r\n-//         recognition.current.starting = true;\r\n-//         recognition.current.start();\r\n-//         console.log(\"Restarted recognition.\");\r\n-//       }\r\n-//     };\r\n-\r\n-//     const recognitionCheckInterval = setInterval(checkRecognition, 100); // Check every 1 second\r\n-\r\n-//     return () => {\r\n-//       clearInterval(recognitionCheckInterval);\r\n-//     };\r\n-//   }, [isListening, isSpeaking]);\r\n-\r\n-//   const restartRecognition = () => {\r\n-//     if (recognition.current.starting) {\r\n-//       console.log(\"Recognition is already starting or running.\");\r\n-//       return;\r\n-//     }\r\n-\r\n-//     recognition.current.abort(); // Stop any existing recognition process\r\n-//     recognition.current.starting = true;\r\n-//     recognition.current.start();\r\n-//     console.log(\"Recognition restarted.\");\r\n-//   };\r\n-\r\n-//   const historyStack = useRef([]);\r\n-\r\n-//   useEffect(() => {\r\n-//     return () => {\r\n-//       // Clean up the listener when the component unmounts\r\n-//       window.removeEventListener(\"popstate\", handlePopState);\r\n-//     };\r\n-//   }, []);\r\n-\r\n-//   const handlePopState = () => {\r\n-//     // This needs to handle both back and forward browser actions\r\n-//     // Use some logic to determine whether it's a back or forward action\r\n-//     // For simplicity, assume it's always back\r\n-//     historyStack.current.pop();\r\n-//     forwardStack.current.length = 0; // Clear forward stack on manual navigation\r\n-//   };\r\n-  \r\n-\r\n-//   // Add a new entry to the stack whenever navigate is called\r\n-//   const customNavigate = (to, options) => {\r\n-//     historyStack.current.push(to);\r\n-//     navigate(to, options);\r\n-//   };\r\n-\r\n-//   // Listen to popstate events to update the history stack\r\n-//   useEffect(() => {\r\n-//     window.addEventListener(\"popstate\", handlePopState);\r\n-//   }, []);\r\n-\r\n-//   const forwardStack = useRef([]);\r\n-\r\n-//   const goBack = () => {\r\n-//     if (window.history.state && window.history.state.idx > 0) {\r\n-//       window.history.back();\r\n-//       speak(\"Going back\");\r\n-//     } else {\r\n-//       speak(\"Can't go back any further.\");\r\n-//     }\r\n-//   };\r\n-\r\n-//   const goForward = () => {\r\n-//     if (window.history.state && window.history.state.idx < window.history.length - 1) {\r\n-//       window.history.forward();\r\n-//       speak(\"Going forward\");\r\n-//     } else {\r\n-//       speak(\"No forward history available.\");\r\n-//     }\r\n-//   };\r\n-\r\n-//   const playVideo = () => {\r\n-//     if (videoRef.current) {\r\n-//       videoRef.current.play();\r\n-//       speak(\"Playing video.\");\r\n-//     } else {\r\n-//       speak(\"No video to play.\");\r\n-//     }\r\n-//   };\r\n-\r\n-//   const pauseVideo = () => {\r\n-//     if (videoRef.current) {\r\n-//       videoRef.current.pause();\r\n-//       speak(\"Video paused.\");\r\n-//     } else {\r\n-//       speak(\"No video to pause.\");\r\n-//     }\r\n-//   };\r\n-\r\n-//   const scrollAmount = window.innerHeight * 0.82;\r\n-\r\n-//   const scrollUp = () => {\r\n-//     if (window.pageYOffset === 0) {\r\n-//       speak(\"Already at the top of the page.\");\r\n-//     } else {\r\n-//       window.scrollBy(0, -scrollAmount);\r\n-//       speak(\"Scrolled up.\");\r\n-//     }\r\n-//   };\r\n-\r\n-//   const scrollDown = () => {\r\n-//     const maxScrollTop =\r\n-//       document.documentElement.scrollHeight - window.innerHeight;\r\n-//     if (window.pageYOffset >= maxScrollTop) {\r\n-//       speak(\"Already at the bottom of the page.\");\r\n-//     } else {\r\n-//       window.scrollBy(0, scrollAmount);\r\n-//       speak(\"Scrolled down.\");\r\n-//     }\r\n-//   };\r\n-\r\n-//   const scrollToTop = () => {\r\n-//     if (window.pageYOffset === 0) {\r\n-//       speak(\"Already at the top of the page.\");\r\n-//     } else {\r\n-//       window.scrollTo(0, 0);\r\n-//       speak(\"Scrolled to the top of the page.\");\r\n-//     }\r\n-//   };\r\n-\r\n-//   const scrollToBottom = () => {\r\n-//     const maxScrollTop =\r\n-//       document.documentElement.scrollHeight - window.innerHeight;\r\n-//     if (window.pageYOffset >= maxScrollTop) {\r\n-//       speak(\"Already at the bottom of the page.\");\r\n-//     } else {\r\n-//       window.scrollTo(0, document.body.scrollHeight);\r\n-//       speak(\"Scrolled to the bottom of the page.\");\r\n-//     }\r\n-//   };\r\n-\r\n-//   const speak = (message) => {\r\n-//     console.log(\"speak function called with message:\", message);\r\n-//     const utterance = new SpeechSynthesisUtterance(message);\r\n-//     utterance.onend = () => {\r\n-//       setIsSpeaking(false);\r\n-//       console.log(\"Speaking ended.\");\r\n-//       if (isListening && !recognition.current.starting) {\r\n-//         console.log(\"Restarting recognition after speaking.\");\r\n-//         recognition.current.starting = true;\r\n-//         recognition.current.start();\r\n-//         console.log(\"Restarted recognition after speaking.\");\r\n-//       }\r\n-//     };\r\n-\r\n-//     setIsSpeaking(true);\r\n-//     console.log(\"Speaking started.\");\r\n-//     recognition.current.stop(); // Ensure to stop recognition before speaking\r\n-//     speechSynthesis.current.speak(utterance);\r\n-//   };\r\n-\r\n-//   const onResult = (event) => {\r\n-//     const resultIndex = event.resultIndex;\r\n-//     const transcript = event.results[resultIndex][0].transcript\r\n-//       .trim()\r\n-//       .toLowerCase();\r\n-\r\n-//     if (event.results[resultIndex].isFinal) {\r\n-//       console.log(`Recognized text: ${transcript}`);\r\n-//       if (transcript.includes(\"brain\")) {\r\n-//         console.log(\"Wake word heard, processing command...\");\r\n-//         handleCommandWithFuse(transcript.replace(\"brain\", \"\"));\r\n-//       }\r\n-//     }\r\n-//   };\r\n-\r\n-//   const onRecognitionEnd = () => {\r\n-//     recognition.current.starting = false;\r\n-//     if (isListening && !isSpeaking) {\r\n-//       restartRecognition();\r\n-//     }\r\n-//   };\r\n-\r\n-//   useEffect(() => {\r\n-//     if (isListening) {\r\n-//       if (!hasGreeted) {\r\n-//         speak(\"Hello, I'm Brane. How can I help you today?\");\r\n-//         setHasGreeted(true);\r\n-//       } else {\r\n-//         speak(\"Listening.\");\r\n-//       }\r\n-//     }\r\n-//   }, [isListening, hasGreeted]);\r\n-\r\n-\r\n-//   const startListening = () => {\r\n-//     if (!recognition.current.starting) {\r\n-//       setIsListening(true);\r\n-//       restartRecognition();\r\n-//     }\r\n-//   };\r\n-\r\n-//   const stopListening = () => {\r\n-//     setIsListening(false);\r\n-//     recognition.current.abort();\r\n-//     if (speechSynthesis.current.speaking) {\r\n-//       speechSynthesis.current.cancel();\r\n-//     }\r\n-//   };\r\n-\r\n-//   const handleCommandWithFuse = (command) => {\r\n-//     const fuse = new Fuse(commands, { keys: [\"utterance\"], threshold: 0.4 });\r\n-//     const results = fuse.search(command);\r\n-//     const foundCommand = results.length ? results[0].item : null;\r\n-\r\n-//     if (foundCommand) {\r\n-//       console.log(\"Command found:\", foundCommand.utterance);\r\n-\r\n-//       if (foundCommand.action) {\r\n-//         foundCommand.action();\r\n-//       } else if (foundCommand.route) {\r\n-//         navigate(foundCommand.route);\r\n-//       }\r\n-\r\n-//       // Speak after performing the action or navigation\r\n-//       speak(foundCommand.response);\r\n-//     } else {\r\n-//       console.log(\"No command found.\");\r\n-//       speak(\"I'm not sure how to respond to that.\");\r\n-//     }\r\n-//   };\r\n-\r\n-//   const commands = [\r\n-//     {\r\n-//       utterance: \"Hello who are you ?\",\r\n-\r\n-//       response:\r\n-//         \"Hi! This is Brane! your Voice bot from Brane Education How can I Assist you Today ?\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"Hello\",\r\n-\r\n-//       response: \"Hi! How can I assist you today?\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"hello\",\r\n-\r\n-//       response: \"Hi! How can I assist you today?\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"Hi.\",\r\n-\r\n-//       response: \"Hello! How can I assist you today?\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"Hey there\",\r\n-\r\n-//       response: \"Hi! How can I assist you today?\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"Good morning Brane.\",\r\n-\r\n-//       response: \"Hey Hiii! Good morning  ! How can I help you?\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"Good afternoon Brane.\",\r\n-\r\n-//       response: \"Hey Hiii! Good after noon ! How can I help you?\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"Good evening Brane.\",\r\n-\r\n-//       response: \"Hey Hiii! Good evening ! How can I help you?\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"can you please take me to login page\",\r\n-\r\n-//       route: \"/login\",\r\n-\r\n-//       response: \"Here's the Login Page, Please Login\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"please take me to login page\",\r\n-\r\n-//       route: \"/login\",\r\n-\r\n-//       response: \"Here's the Login Page, Please Login\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"Go to login page\",\r\n-\r\n-//       route: \"/login\",\r\n-\r\n-//       response: \"Here's the Login Page, Please Login\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"open login page\",\r\n-\r\n-//       route: \"/login\",\r\n-\r\n-//       response: \"Here's the Login Page, Please Login\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"can you please take me to signup page\",\r\n-\r\n-//       route: \"/signup\",\r\n-\r\n-//       response: \"Here's the signup page. Please proceed With Registration.\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"take me to signup page\",\r\n-\r\n-//       route: \"/signup\",\r\n-\r\n-//       response: \"Here's the signup page. Please proceed With Registration.\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"Go to signup page\",\r\n-\r\n-//       route: \"/signup\",\r\n-\r\n-//       response: \"Here's the signup page. Please proceed With Registration.\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"open signup page\",\r\n-\r\n-//       route: \"/signup\",\r\n-\r\n-//       response: \"Here's the signup page. Please proceed With Registration.\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"Go to face id\",\r\n-\r\n-//       route: \"/login/faceid\",\r\n-\r\n-//       response: \"Here's Face ID Login. Please proceed.\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"Go to face id login\",\r\n-\r\n-//       route: \"/login/faceid\",\r\n-\r\n-//       response: \"Here's Face ID Login. Please proceed.\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"login with face id\",\r\n-\r\n-//       route: \"/login/faceid\",\r\n-\r\n-//       response: \"Here's Face ID Login. Please proceed.\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"login with face\",\r\n-\r\n-//       route: \"/login/faceid\",\r\n-\r\n-//       response: \"Here's Face ID Login. Please proceed.\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"i want to login with face\",\r\n-\r\n-//       route: \"/login/faceid\",\r\n-\r\n-//       response: \"Here's Face ID Login. Please proceed.\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"login with voice\",\r\n-\r\n-//       route: \"/login/voiceid\",\r\n-\r\n-//       response: \"Here's Voice Login. Please proceed.\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"i want to login with voice\",\r\n-\r\n-//       route: \"/login/voiceid\",\r\n-\r\n-//       response: \"Here's Voice Login. Please proceed.\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"go to voice login\",\r\n-\r\n-//       route: \"/login/voiceid\",\r\n-\r\n-//       response: \"Here's Voice Login. Please proceed.\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"login with voice\",\r\n-\r\n-//       route: \"/login/voiceid\",\r\n-\r\n-//       response: \"Here's Voice Login. Please proceed.\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"login with mobile\",\r\n-\r\n-//       route: \"/login/mobile\",\r\n-\r\n-//       response: \"Here's Mobile Login. Please proceed.\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"i want to login with mobile\",\r\n-\r\n-//       route: \"/login/mobile\",\r\n-\r\n-//       response: \"Here's Mobile Login. Please proceed.\",\r\n-//     },\r\n-//     {\r\n-//       utterance: \"go to mobile login\",\r\n-\r\n-//       route: \"/login/mobile\",\r\n-\r\n-//       response: \"Here's Mobile Login. Please proceed.\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"what are platform features\",\r\n-\r\n-//       response:\r\n-//         \"Dashboard, Dynamic time table, Learning Networks, Little Masters, Video Based Dictionary, General Search.\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"Features of platform\",\r\n-\r\n-//       response:\r\n-//         \"Dashboard, Dynamic time table, Learning Networks, Little Masters, Video Based Dictionary, General Search.\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"What does the platform offer\",\r\n-\r\n-//       response:\r\n-//         \"Dashboard, Dynamic time table, Learning Networks, Little Masters, Video Based Dictionary, General Search.\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"Say me the features of platform\",\r\n-\r\n-//       response:\r\n-//         \"Dashboard, Dynamic time table, Learning Networks, Little Masters, Video Based Dictionary, General Search.\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"Say me the services of platform\",\r\n-\r\n-//       response:\r\n-//         \"Dashboard, Dynamic time table, Learning Networks, Little Masters, Video Based Dictionary, General Search.\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"tell me the services offered by the platform\",\r\n-\r\n-//       response:\r\n-//         \"Dashboard, Dynamic time table, Learning Networks, Little Masters, Video Based Dictionary, General Search.\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"explain platform services\",\r\n-\r\n-//       response:\r\n-//         \"Dashboard, Dynamic time table, Learning Networks, Little Masters, Video Based Dictionary, General Search.\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"Give me the Parent voice of Julia Harris\",\r\n-\r\n-//       response:\r\n-//         \"Brane education has helped my son a lot in his studies. He improved a lot in his studies and is now able to score good marks in his exams\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"Play today's motivational video\",\r\n-\r\n-//       response: \"I am playing the video\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"Play today's video\",\r\n-\r\n-//       response: \"I am playing Motivational video\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"Leaders Voice\",\r\n-\r\n-//       response:\r\n-//         \"This Voice-interactive AI Platform is a game Changer. It revolutionizes education.\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"Curriculum Supported by Brane Education\",\r\n-\r\n-//       response:\r\n-//         \"we support multiple Boards let me say few Telangana State Board Andhra Pradesh Board Maharashtra Board Assam Board\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"Boards supported by the platform\",\r\n-\r\n-//       response:\r\n-//         \"we support multiple Boards let me say few Telangana State Board Andhra Pradesh Board Maharashtra Board Assam Board\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"Curriculum\",\r\n-\r\n-//       response:\r\n-//         \"we support multiple Boards let me say few Telangana State Board Andhra Pradesh Board Maharashtra Board Assam Board\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"Go to landing page\",\r\n-\r\n-//       response: \"Okay, I am taking you to the landing page.\",\r\n-\r\n-//       route: \"/childpage\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"take me to landing page\",\r\n-\r\n-//       response: \"Okay, I am taking you to the landing page.\",\r\n-\r\n-//       route: \"/childpage\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"move to landing page\",\r\n-\r\n-//       response: \"Okay, I am taking you to the landing page.\",\r\n-\r\n-//       route: \"/childpage\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"roll back to landing page\",\r\n-\r\n-//       response: \"Okay, I am taking you to the landing page.\",\r\n-\r\n-//       route: \"/childpage\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"move to landing page\",\r\n-\r\n-//       response: \"Okay, I am taking you to the landing page.\",\r\n-\r\n-//       route: \"/childpage\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"what is today's quote\",\r\n-\r\n-//       response:\r\n-//         \"Determination is the power that sees us through all our frustration and obstacles. It helps in building our willpower which is the very basis of success.\",\r\n-\r\n-//       route: \"/childpage\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"Today's Inspirational quote\",\r\n-\r\n-//       response:\r\n-//         \"Determination is the power that sees us through all our frustration and obstacles. It helps in building our willpower which is the very basis of success.\",\r\n-\r\n-//       route: \"/childpage\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"say me today's quote\",\r\n-\r\n-//       response:\r\n-//         \"Determination is the power that sees us through all our frustration and obstacles. It helps in building our willpower which is the very basis of success.\",\r\n-\r\n-//       route: \"/childpage\",\r\n-//     },\r\n-//     {\r\n-//       utterance: \"go back\",\r\n-//       response: \"\",\r\n-//       action: goBack, // Note the use of an action property\r\n-//     },\r\n-//     {\r\n-//       utterance: \"go forward\",\r\n-//       response: \"\",\r\n-//       action: goForward,\r\n-//     },\r\n-//     {\r\n-//       utterance: \"play video\",\r\n-//       // response: \"Playing video.\",\r\n-//       action: playVideo,\r\n-//     },\r\n-//     {\r\n-//       utterance: \"pause video\",\r\n-//       // response: \"Pausing video.\",\r\n-//       action: pauseVideo,\r\n-//     },\r\n-//     {\r\n-//       utterance: \"start video\",\r\n-//       // response: \"Playing video.\",\r\n-//       action: playVideo,\r\n-//     },\r\n-//     {\r\n-//       utterance: \"stop video\",\r\n-//       // response: \"Playing video.\",\r\n-//       action: pauseVideo,\r\n-//     },\r\n-//     {\r\n-//       utterance: \"scroll up\",\r\n-//       // response: \"Scrolling up.\",\r\n-//       action: scrollUp,\r\n-//     },\r\n-//     {\r\n-//       utterance: \"scroll down\",\r\n-//       // response: \"Scrolling down.\",\r\n-//       action: scrollDown,\r\n-//     },\r\n-//     {\r\n-//       utterance: \"go up\",\r\n-\r\n-//       // response: \"Scrolling up.\",\r\n-//       action: scrollUp,\r\n-//     },\r\n-//     {\r\n-//       utterance: \"go down\",\r\n-//       // response: \"Scrolling down.\",\r\n-//       action: scrollDown,\r\n-//     },\r\n-//     {\r\n-//       utterance: \"scroll to top\",\r\n-//       action: scrollToTop,\r\n-//     },\r\n-//     {\r\n-//       utterance: \"scroll to bottom\",\r\n-//       action: scrollToBottom,\r\n-//     },\r\n-//     {\r\n-//       utterance: \"brane stop\",\r\n-//       action: stopListening,\r\n-//     },\r\n-//     {\r\n-//       utterance: \"brane turn off\",\r\n-//       action: stopListening,\r\n-//     },\r\n-//     {\r\n-//       utterance: \"brane stop the bot\",\r\n-//       action: stopListening,\r\n-//     },\r\n-//   ];\r\n-\r\n-//   return (\r\n-//     <div className=\"speech-bot-container\">\r\n-//       <div\r\n-//         className={`button-container ${\r\n-//           isListening ? \"voicebotframeactive\" : \"voicebotframe\"\r\n-//         }`}\r\n-//       >\r\n-//         <button onClick={isListening ? stopListening : startListening}>\r\n-//           {isListening ? \"Stop\" : \"Start\"} Animation\r\n-//         </button>\r\n-//         {/* <button onClick={toggleBotActive}>\r\n-//         {isBotActive ? 'Deactivate Bot' : 'Activate Bot'}\r\n-//       </button> \r\n-//       </div>\r\n-//     </div>\r\n-//   );\r\n-// };\r\n-\r\n-// export default VoiceBot; */\r\n-}\r\n-\r\n-//iska v1\r\n-\r\n-// import React, { useState, useEffect, useRef } from \"react\";\r\n-// import { useNavigate, useLocation } from \"react-router-dom\";\r\n-// import Fuse from \"fuse.js\";\r\n-// import \"./VoiceBot.css\";\r\n-\r\n-// const VoiceBot = ({ videoRef}) => {\r\n-//   const [isListening, setIsListening] = useState(false);\r\n-//   const [isSpeaking, setIsSpeaking] = useState(false);\r\n-//   const recognition = useRef(null);\r\n-//   const speechSynthesis = useRef(window.speechSynthesis);\r\n-//   const [hasGreeted, setHasGreeted] = useState(false);\r\n-//   const navigate = useNavigate();\r\n-\r\n-//  // Initialize speech recognition\r\n-//  useEffect(() => {\r\n-//   recognition.current = new window.webkitSpeechRecognition();\r\n-//   recognition.current.continuous = true;\r\n-//   recognition.current.interimResults = false;\r\n-//   recognition.current.onresult = onResult;\r\n-//   recognition.current.onend = onRecognitionEnd;\r\n-//   recognition.current.starting = false;\r\n-\r\n-//   recognition.current.onerror = (event) => {\r\n-//     console.error(\"Recognition error:\", event.error);\r\n-//     if (isListening && !isSpeaking) {\r\n-//       restartRecognition();\r\n-//     }\r\n-//   };\r\n-\r\n-//   return () => {\r\n-//     if (recognition.current) {\r\n-//       recognition.current.abort();\r\n-//     }\r\n-//   };\r\n-// }, []);\r\n-\r\n-//   // useEffect(() => {\r\n-//   //   const checkRecognition = () => {\r\n-//   //     if (isListening && !isSpeaking && !recognition.current.starting) {\r\n-//   //       console.log(\"Restarting recognition because it's not active.\");\r\n-//   //       recognition.current.starting = true;\r\n-//   //       recognition.current.start();\r\n-//   //       console.log(\"Restarted recognition.\");\r\n-//   //     }\r\n-//   //   };\r\n-\r\n-//   //   const recognitionCheckInterval = setInterval(checkRecognition, 100); // Check every .5 second\r\n-\r\n-//   //   return () => {\r\n-//   //     clearInterval(recognitionCheckInterval);\r\n-//   //   };\r\n-//   // }, [isListening, isSpeaking]);\r\n-\r\n-//   const historyStack = useRef([]);\r\n-\r\n-//   useEffect(() => {\r\n-//     return () => {\r\n-//       // Clean up the listener when the component unmounts\r\n-//       window.removeEventListener(\"popstate\", handlePopState);\r\n-//     };\r\n-//   }, []);\r\n-\r\n-//   const handlePopState = () => {\r\n-//     // This needs to handle both back and forward browser actions\r\n-//     // Use some logic to determine whether it's a back or forward action\r\n-//     // For simplicity, assume it's always back\r\n-//     historyStack.current.pop();\r\n-//     forwardStack.current.length = 0; // Clear forward stack on manual navigation\r\n-//   };\r\n-\r\n-//   // Add a new entry to the stack whenever navigate is called\r\n-//   const customNavigate = (to, options) => {\r\n-//     historyStack.current.push(to);\r\n-//     navigate(to, options);\r\n-//   };\r\n-\r\n-//   // Listen to popstate events to update the history stack\r\n-//   useEffect(() => {\r\n-//     window.addEventListener(\"popstate\", handlePopState);\r\n-//   }, []);\r\n-\r\n-//   const forwardStack = useRef([]);\r\n-\r\n-//   const goBack = () => {\r\n-//     if (window.history.state && window.history.state.idx > 0) {\r\n-//       window.history.back();\r\n-//       speak(\"Going back\");\r\n-//     } else {\r\n-//       speak(\"Can't go back any further.\");\r\n-//     }\r\n-//   };\r\n-\r\n-//   const goForward = () => {\r\n-//     if (window.history.state && window.history.state.idx < window.history.length - 1) {\r\n-//       window.history.forward();\r\n-//       speak(\"Going forward\");\r\n-//     } else {\r\n-//       speak(\"No forward history available.\");\r\n-//     }\r\n-//   };\r\n-\r\n-//   const playVideo = () => {\r\n-//     if (videoRef.current) {\r\n-//       videoRef.current.play();\r\n-//       speak(\"Playing video.\");\r\n-//     } else {\r\n-//       speak(\"No video to play.\");\r\n-//     }\r\n-//   };\r\n-\r\n-//   const pauseVideo = () => {\r\n-//     if (videoRef.current) {\r\n-//       videoRef.current.pause();\r\n-//       speak(\"Video paused.\");\r\n-//     } else {\r\n-//       speak(\"No video to pause.\");\r\n-//     }\r\n-//   };\r\n-\r\n-//   const scrollAmount = window.innerHeight * 0.82;\r\n-\r\n-//   const scrollUp = () => {\r\n-//     if (window.pageYOffset === 0) {\r\n-//       speak(\"Already at the top of the page.\");\r\n-//     } else {\r\n-//       window.scrollBy(0, -scrollAmount);\r\n-//       speak(\"Scrolled up.\");\r\n-//     }\r\n-//   };\r\n-\r\n-//   const scrollDown = () => {\r\n-//     const maxScrollTop =\r\n-//       document.documentElement.scrollHeight - window.innerHeight;\r\n-//     if (window.pageYOffset >= maxScrollTop) {\r\n-//       speak(\"Already at the bottom of the page.\");\r\n-//     } else {\r\n-//       window.scrollBy(0, scrollAmount);\r\n-//       speak(\"Scrolled down.\");\r\n-//     }\r\n-//   };\r\n-\r\n-//   const scrollToTop = () => {\r\n-//     if (window.pageYOffset === 0) {\r\n-//       speak(\"Already at the top of the page.\");\r\n-//     } else {\r\n-//       window.scrollTo(0, 0);\r\n-//       speak(\"Scrolled to the top of the page.\");\r\n-//     }\r\n-//   };\r\n-\r\n-//   const scrollToBottom = () => {\r\n-//     const maxScrollTop =\r\n-//       document.documentElement.scrollHeight - window.innerHeight;\r\n-//     if (window.pageYOffset >= maxScrollTop) {\r\n-//       speak(\"Already at the bottom of the page.\");\r\n-//     } else {\r\n-//       window.scrollTo(0, document.body.scrollHeight);\r\n-//       speak(\"Scrolled to the bottom of the page.\");\r\n-//     }\r\n-//   };\r\n-\r\n-//   const speak = (message) => {\r\n-//     const utterance = new SpeechSynthesisUtterance(message);\r\n-//     utterance.onend = () => {\r\n-//       setIsSpeaking(false);\r\n-//       // Restart recognition after speaking has ended\r\n-//       if (isListening) {\r\n-//         restartRecognition();\r\n-//       }\r\n-//     };\r\n-\r\n-//     setIsSpeaking(true);\r\n-//     // Stop recognition when the bot starts speaking\r\n-//     if (recognition.current) {\r\n-//       recognition.current.abort();\r\n-//     }\r\n-//     speechSynthesis.current.speak(utterance);\r\n-//   };\r\n-\r\n-//   const restartRecognition = () => {\r\n-//     // Check if recognition is not already started and if the bot is set to listen\r\n-//     if (recognition.current && !recognition.current.starting && isListening && !isSpeaking) {\r\n-//       // Only start recognition if it's not already active\r\n-//       if (recognition.current.state !== 'active') {\r\n-//         recognition.current.abort(); // Ensure any ongoing recognition is stopped\r\n-//         recognition.current.starting = true;\r\n-//         recognition.current.start();\r\n-//       }\r\n-//     }\r\n-//   };\r\n-\r\n-//     // Restart recognition when bot finishes speaking and isListening is true\r\n-//     useEffect(() => {\r\n-//       if (!isSpeaking && isListening) {\r\n-//         restartRecognition();\r\n-//       }\r\n-//     }, [isSpeaking, isListening]);\r\n-\r\n-//   const onResult = (event) => {\r\n-//     const resultIndex = event.resultIndex;\r\n-//     const transcript = event.results[resultIndex][0].transcript\r\n-//       .trim()\r\n-//       .toLowerCase();\r\n-\r\n-//     if (event.results[resultIndex].isFinal) {\r\n-//       console.log(`Recognized text: ${transcript}`);\r\n-//       if (transcript.includes(\"brain\")) {\r\n-//         console.log(\"Wake word heard, processing command...\");\r\n-//         handleCommandWithFuse(transcript.replace(\"brain\", \"\"));\r\n-//       }\r\n-//     }\r\n-//   };\r\n-\r\n-//   const onRecognitionEnd = () => {\r\n-//     recognition.current.starting = false;\r\n-//     if (isListening && !isSpeaking) {\r\n-//       restartRecognition();\r\n-//     }\r\n-//   };\r\n-\r\n-//   useEffect(() => {\r\n-//     if (isListening && !hasGreeted) {\r\n-//       speak(\"Hello, I'm Brane. How can I help you today?\");\r\n-//       setHasGreeted(true);\r\n-//     }\r\n-//   }, [isListening, hasGreeted]);\r\n-\r\n-// // Updated startListening function\r\n-// const startListening = () => {\r\n-//   setIsListening(true);\r\n-//   if (recognition.current && !recognition.current.starting) {\r\n-//     recognition.current.start();\r\n-//   }\r\n-// };\r\n-\r\n-// // Updated stopListening function\r\n-// const stopListening = () => {\r\n-//   setIsListening(false);\r\n-//   setIsSpeaking(false); // Reset speaking state\r\n-//   setHasGreeted(false); // Reset greeting state if needed\r\n-//   if (recognition.current) {\r\n-//     recognition.current.abort(); // Stop any ongoing speech recognition\r\n-//   }\r\n-//   if (speechSynthesis.current.speaking) {\r\n-//     speechSynthesis.current.cancel(); // Stop any ongoing speech synthesis\r\n-//   }\r\n-// };\r\n-\r\n-//   const handleCommandWithFuse = (command) => {\r\n-//     const fuse = new Fuse(commands, { keys: [\"utterance\"], threshold: 0.4 });\r\n-//     const results = fuse.search(command);\r\n-//     const foundCommand = results.length ? results[0].item : null;\r\n-\r\n-//     if (foundCommand) {\r\n-//       console.log(\"Command found:\", foundCommand.utterance);\r\n-\r\n-//       if (foundCommand.action) {\r\n-//         foundCommand.action();\r\n-//       } else if (foundCommand.route) {\r\n-//         navigate(foundCommand.route);\r\n-//       }\r\n-\r\n-//       // Speak after performing the action or navigation\r\n-//       speak(foundCommand.response);\r\n-//     } else {\r\n-//       console.log(\"No command found.\");\r\n-//       speak(\"I'm not sure how to respond to that.\");\r\n-//     }\r\n-//   };\r\n-\r\n-//   const commands = [\r\n-//     {\r\n-//       utterance: \"Hello who are you ?\",\r\n-\r\n-//       response:\r\n-//         \"Hi! This is Brane! your Voice bot from Brane Education How can I Assist you Today ?\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"Hello\",\r\n-\r\n-//       response: \"Hi! How can I assist you today?\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"hello\",\r\n-\r\n-//       response: \"Hi! How can I assist you today?\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"Hi.\",\r\n-\r\n-//       response: \"Hello! How can I assist you today?\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"Hey there\",\r\n-\r\n-//       response: \"Hi! How can I assist you today?\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"Good morning Brane.\",\r\n-\r\n-//       response: \"Hey Hiii! Good morning  ! How can I help you?\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"Good afternoon Brane.\",\r\n-\r\n-//       response: \"Hey Hiii! Good after noon ! How can I help you?\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"Good evening Brane.\",\r\n-\r\n-//       response: \"Hey Hiii! Good evening ! How can I help you?\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"can you please take me to login page\",\r\n-\r\n-//       route: \"/login\",\r\n-\r\n-//       response: \"Here's the Login Page, Please Login\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"please take me to login page\",\r\n-\r\n-//       route: \"/login\",\r\n-\r\n-//       response: \"Here's the Login Page, Please Login\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"Go to login page\",\r\n-\r\n-//       route: \"/login\",\r\n-\r\n-//       response: \"Here's the Login Page, Please Login\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"open login page\",\r\n-\r\n-//       route: \"/login\",\r\n-\r\n-//       response: \"Here's the Login Page, Please Login\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"can you please take me to signup page\",\r\n-\r\n-//       route: \"/signup\",\r\n-\r\n-//       response: \"Here's the signup page. Please proceed With Registration.\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"take me to signup page\",\r\n-\r\n-//       route: \"/signup\",\r\n-\r\n-//       response: \"Here's the signup page. Please proceed With Registration.\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"Go to signup page\",\r\n-\r\n-//       route: \"/signup\",\r\n-\r\n-//       response: \"Here's the signup page. Please proceed With Registration.\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"open signup page\",\r\n-\r\n-//       route: \"/signup\",\r\n-\r\n-//       response: \"Here's the signup page. Please proceed With Registration.\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"Go to face id\",\r\n-\r\n-//       route: \"/login/faceid\",\r\n-\r\n-//       response: \"Here's Face ID Login. Please proceed.\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"Go to face id login\",\r\n-\r\n-//       route: \"/login/faceid\",\r\n-\r\n-//       response: \"Here's Face ID Login. Please proceed.\",\r\n-//     },\r\n-//     {\r\n-//       utterance: \"Go to face login\",\r\n-\r\n-//       route: \"/login/faceid\",\r\n-\r\n-//       response: \"Here's Face ID Login. Please proceed.\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"login with face id\",\r\n-\r\n-//       route: \"/login/faceid\",\r\n-\r\n-//       response: \"Here's Face ID Login. Please proceed.\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"login with face\",\r\n-\r\n-//       route: \"/login/faceid\",\r\n-\r\n-//       response: \"Here's Face ID Login. Please proceed.\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"i want to login with face\",\r\n-\r\n-//       route: \"/login/faceid\",\r\n-\r\n-//       response: \"Here's Face ID Login. Please proceed.\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"login with voice\",\r\n-\r\n-//       route: \"/login/voiceid\",\r\n-\r\n-//       response: \"Here's Voice Login. Please proceed.\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"i want to login with voice\",\r\n-\r\n-//       route: \"/login/voiceid\",\r\n-\r\n-//       response: \"Here's Voice Login. Please proceed.\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"go to voice login\",\r\n-\r\n-//       route: \"/login/voiceid\",\r\n-\r\n-//       response: \"Here's Voice Login. Please proceed.\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"login with voice\",\r\n-\r\n-//       route: \"/login/voiceid\",\r\n-\r\n-//       response: \"Here's Voice Login. Please proceed.\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"login with mobile\",\r\n-\r\n-//       route: \"/login/mobile\",\r\n-\r\n-//       response: \"Here's Mobile Login. Please proceed.\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"i want to login with mobile\",\r\n-\r\n-//       route: \"/login/mobile\",\r\n-\r\n-//       response: \"Here's Mobile Login. Please proceed.\",\r\n-//     },\r\n-//     {\r\n-//       utterance: \"go to mobile login\",\r\n-\r\n-//       route: \"/login/mobile\",\r\n-\r\n-//       response: \"Here's Mobile Login. Please proceed.\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"what are platform features\",\r\n-\r\n-//       response:\r\n-//         \"Dashboard, Dynamic time table, Learning Networks, Little Masters, Video Based Dictionary, General Search.\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"Features of platform\",\r\n-\r\n-//       response:\r\n-//         \"Dashboard, Dynamic time table, Learning Networks, Little Masters, Video Based Dictionary, General Search.\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"What does the platform offer\",\r\n-\r\n-//       response:\r\n-//         \"Dashboard, Dynamic time table, Learning Networks, Little Masters, Video Based Dictionary, General Search.\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"Say me the features of platform\",\r\n-\r\n-//       response:\r\n-//         \"Dashboard, Dynamic time table, Learning Networks, Little Masters, Video Based Dictionary, General Search.\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"Say me the services of platform\",\r\n-\r\n-//       response:\r\n-//         \"Dashboard, Dynamic time table, Learning Networks, Little Masters, Video Based Dictionary, General Search.\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"tell me the services offered by the platform\",\r\n-\r\n-//       response:\r\n-//         \"Dashboard, Dynamic time table, Learning Networks, Little Masters, Video Based Dictionary, General Search.\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"explain platform services\",\r\n-\r\n-//       response:\r\n-//         \"Dashboard, Dynamic time table, Learning Networks, Little Masters, Video Based Dictionary, General Search.\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"Give me the Parent voice of Julia Harris\",\r\n-\r\n-//       response:\r\n-//         \"Brane education has helped my son a lot in his studies. He improved a lot in his studies and is now able to score good marks in his exams\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"Play today's motivational video\",\r\n-\r\n-//       response: \"I am playing the video\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"Play today's video\",\r\n-\r\n-//       response: \"I am playing Motivational video\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"Leaders Voice\",\r\n-\r\n-//       response:\r\n-//         \"This Voice-interactive AI Platform is a game Changer. It revolutionizes education.\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"Curriculum Supported by Brane Education\",\r\n-\r\n-//       response:\r\n-//         \"we support multiple Boards let me say few Telangana State Board Andhra Pradesh Board Maharashtra Board Assam Board\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"Boards supported by the platform\",\r\n-\r\n-//       response:\r\n-//         \"we support multiple Boards let me say few Telangana State Board Andhra Pradesh Board Maharashtra Board Assam Board\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"Curriculum\",\r\n-\r\n-//       response:\r\n-//         \"we support multiple Boards let me say few Telangana State Board Andhra Pradesh Board Maharashtra Board Assam Board\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"Go to landing page\",\r\n-\r\n-//       response: \"Okay, I am taking you to the landing page.\",\r\n-\r\n-//       route: \"/childpage\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"take me to landing page\",\r\n-\r\n-//       response: \"Okay, I am taking you to the landing page.\",\r\n-\r\n-//       route: \"/childpage\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"move to landing page\",\r\n-\r\n-//       response: \"Okay, I am taking you to the landing page.\",\r\n-\r\n-//       route: \"/childpage\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"roll back to landing page\",\r\n-\r\n-//       response: \"Okay, I am taking you to the landing page.\",\r\n-\r\n-//       route: \"/childpage\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"move to landing page\",\r\n-\r\n-//       response: \"Okay, I am taking you to the landing page.\",\r\n-\r\n-//       route: \"/childpage\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"what is today's quote\",\r\n-\r\n-//       response:\r\n-//         \"Determination is the power that sees us through all our frustration and obstacles. It helps in building our willpower which is the very basis of success.\",\r\n-\r\n-//       route: \"/childpage\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"Today's Inspirational quote\",\r\n-\r\n-//       response:\r\n-//         \"Determination is the power that sees us through all our frustration and obstacles. It helps in building our willpower which is the very basis of success.\",\r\n-\r\n-//       route: \"/childpage\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"say me today's quote\",\r\n-\r\n-//       response:\r\n-//         \"Determination is the power that sees us through all our frustration and obstacles. It helps in building our willpower which is the very basis of success.\",\r\n-\r\n-//       route: \"/childpage\",\r\n-//     },\r\n-//     {\r\n-//       utterance: \"go back\",\r\n-//       response: \"\",\r\n-//       action: goBack, // Note the use of an action property\r\n-//     },\r\n-//     {\r\n-//       utterance: \"go forward\",\r\n-//       response: \"\",\r\n-//       action: goForward,\r\n-//     },\r\n-//     {\r\n-//       utterance: \"play video\",\r\n-//       // response: \"Playing video.\",\r\n-//       action: playVideo,\r\n-//     },\r\n-//     {\r\n-//       utterance: \"pause video\",\r\n-//       // response: \"Pausing video.\",\r\n-//       action: pauseVideo,\r\n-//     },\r\n-//     {\r\n-//       utterance: \"start video\",\r\n-//       // response: \"Playing video.\",\r\n-//       action: playVideo,\r\n-//     },\r\n-//     {\r\n-//       utterance: \"stop video\",\r\n-//       // response: \"Playing video.\",\r\n-//       action: pauseVideo,\r\n-//     },\r\n-//     {\r\n-//       utterance: \"scroll up\",\r\n-//       // response: \"Scrolling up.\",\r\n-//       action: scrollUp,\r\n-//     },\r\n-//     {\r\n-//       utterance: \"scroll down\",\r\n-//       // response: \"Scrolling down.\",\r\n-//       action: scrollDown,\r\n-//     },\r\n-//     {\r\n-//       utterance: \"go up\",\r\n-\r\n-//       // response: \"Scrolling up.\",\r\n-//       action: scrollUp,\r\n-//     },\r\n-//     {\r\n-//       utterance: \"go down\",\r\n-//       // response: \"Scrolling down.\",\r\n-//       action: scrollDown,\r\n-//     },\r\n-//     {\r\n-//       utterance: \"scroll to top\",\r\n-//       action: scrollToTop,\r\n-//     },\r\n-//     {\r\n-//       utterance: \"scroll to bottom\",\r\n-//       action: scrollToBottom,\r\n-//     },\r\n-//     {\r\n-//       utterance: \"brane stop\",\r\n-//       action: stopListening,\r\n-//     },\r\n-//     {\r\n-//       utterance: \"brane turn off\",\r\n-//       action: stopListening,\r\n-//     },\r\n-//     {\r\n-//       utterance: \"brane stop the bot\",\r\n-//       action: stopListening,\r\n-//     },\r\n-//   ];\r\n-\r\n-//   return (\r\n-//     <div className=\"speech-bot-container\">\r\n-//       <div\r\n-//         className={`button-container ${\r\n-//           isListening ? \"voicebotframeactive\" : \"voicebotframe\"\r\n-//         }`}\r\n-//       >\r\n-//         <button onClick={isListening ? stopListening : startListening}>\r\n-//           {isListening ? \"Stop\" : \"Start\"} Animation\r\n-//         </button>\r\n-//         {/* <button onClick={toggleBotActive}>\r\n-//         {isBotActive ? 'Deactivate Bot' : 'Activate Bot'}\r\n-//       </button> */}\r\n-//       </div>\r\n-//     </div>\r\n-//   );\r\n-// };\r\n-\r\n-// export default VoiceBot;\r\n-\r\n-//Bot Video added but some start issues\r\n-\r\n-// import React, { useState, useEffect, useRef } from \"react\";\r\n-// import { useNavigate, useLocation } from \"react-router-dom\";\r\n-// import Fuse from \"fuse.js\";\r\n-// import \"./VoiceBot.css\";\r\n-\r\n-// const VoiceBot = ({ videoRef }) => {\r\n-//   const [isListening, setIsListening] = useState(false);\r\n-//   const [isSpeaking, setIsSpeaking] = useState(false);\r\n-//   const recognition = useRef(null);\r\n-//   const speechSynthesis = useRef(window.speechSynthesis);\r\n-//   const hasGreeted = useRef(false);\r\n-//   const restartRecognitionTimeout = useRef(null);\r\n-//   const navigate = useNavigate();\r\n-//   const location = useLocation();\r\n-//   const [isRecognitionActive, setIsRecognitionActive] = useState(false); // New state to track recognition status\r\n-\r\n-//   useEffect(() => {\r\n-//     recognition.current = new window.webkitSpeechRecognition();\r\n-//     recognition.current.continuous = true;\r\n-//     recognition.current.interimResults = false;\r\n-//     recognition.current.onresult = onResult;\r\n-//     recognition.current.onend = () => {\r\n-//       console.log(\"Recognition ended.\");\r\n-//       if (isListening) {\r\n-//         startListening();\r\n-//       }\r\n-//     };\r\n-//     recognition.current.onerror = (event) => {\r\n-//       console.error(\"Recognition error:\", event.error);\r\n-//     };\r\n-\r\n-//     return () => {\r\n-//       recognition.current.abort();\r\n-//     };\r\n-//   }, []);\r\n-\r\n-//   // Update useEffect for managing the recognition state based on isListening and isRecognitionActive\r\n-//   useEffect(() => {\r\n-//     if (isListening && !isRecognitionActive) {\r\n-//       startListening();\r\n-//     } else if (!isListening && isRecognitionActive) {\r\n-//       stopListening();\r\n-//     }\r\n-//   }, [isListening, isRecognitionActive]);\r\n-\r\n-//   const goBack = () => {\r\n-//     if (window.history.length > 1) {\r\n-//       navigate(-1);\r\n-//     } else {\r\n-//       speak(\"Can't go back any further.\");\r\n-//     }\r\n-//   };\r\n-\r\n-//   const goForward = () => {\r\n-//     // Unfortunately, there's no direct way to check if you can go forward in the history.\r\n-//     // You might need to manage this state manually based on user navigation.\r\n-//     navigate(1);\r\n-//   };\r\n-\r\n-//   const playVideo = () => {\r\n-//     if (videoRef.current && !videoRef.current.paused) {\r\n-//       speak(\"Video is already playing.\");\r\n-//     } else if (videoRef.current) {\r\n-//       videoRef.current.play();\r\n-//       speak(\"Playing video.\");\r\n-//     } else {\r\n-//       speak(\"No video to play.\");\r\n-//     }\r\n-//   };\r\n-\r\n-//   const pauseVideo = () => {\r\n-//     if (videoRef.current && videoRef.current.paused) {\r\n-//       speak(\"Video is already paused.\");\r\n-//     } else if (videoRef.current) {\r\n-//       videoRef.current.pause();\r\n-//       speak(\"Video paused.\");\r\n-//     } else {\r\n-//       speak(\"No video to pause.\");\r\n-//     }\r\n-//   };\r\n-\r\n-//   const scrollAmount = window.innerHeight * 0.82;\r\n-\r\n-//   const scrollUp = () => {\r\n-//     if (window.pageYOffset === 0) {\r\n-//       speak(\"Already at the top of the page.\");\r\n-//     } else {\r\n-//       window.scrollBy(0, -scrollAmount);\r\n-//       speak(\"Scrolled up.\");\r\n-//     }\r\n-//   };\r\n-\r\n-//   const scrollDown = () => {\r\n-//     const maxScrollTop =\r\n-//       document.documentElement.scrollHeight - window.innerHeight;\r\n-//     if (window.pageYOffset >= maxScrollTop) {\r\n-//       speak(\"Already at the bottom of the page.\");\r\n-//     } else {\r\n-//       window.scrollBy(0, scrollAmount);\r\n-//       speak(\"Scrolled down.\");\r\n-//     }\r\n-//   };\r\n-\r\n-//   const scrollToTop = () => {\r\n-//     if (window.pageYOffset === 0) {\r\n-//       speak(\"Already at the top of the page.\");\r\n-//     } else {\r\n-//       window.scrollTo(0, 0);\r\n-//       speak(\"Scrolled to the top of the page.\");\r\n-//     }\r\n-//   };\r\n-\r\n-//   const scrollToBottom = () => {\r\n-//     const maxScrollTop =\r\n-//       document.documentElement.scrollHeight - window.innerHeight;\r\n-//     if (window.pageYOffset >= maxScrollTop) {\r\n-//       speak(\"Already at the bottom of the page.\");\r\n-//     } else {\r\n-//       window.scrollTo(0, document.body.scrollHeight);\r\n-//       speak(\"Scrolled to the bottom of the page.\");\r\n-//     }\r\n-//   };\r\n-\r\n-//   // const speak = (message) => {\r\n-//   //   const utterance = new SpeechSynthesisUtterance(message);\r\n-//   //   utterance.onend = () => {\r\n-//   //     setIsSpeaking(false);\r\n-//   //     console.log(\"Speaking ended.\");\r\n-//   //     // Only restart recognition if we're still supposed to be listening\r\n-//   //     // if (isListening) {\r\n-//   //     //   if (restartRecognitionTimeout.current) {\r\n-//   //     //     clearTimeout(restartRecognitionTimeout.current);\r\n-//   //     //   }\r\n-//   //     //   restartRecognitionTimeout.current = setTimeout(() => {\r\n-//   //     //     console.log(\"Recognition restarted.\");\r\n-//   //     //     recognition.current.start();\r\n-//   //     //   }, 100); // Delay to prevent immediate restart\r\n-//   //     // }\r\n-//   //     if (isListening && !recognition.current.starting) { // Check the flag before restarting\r\n-//   //       recognition.current.starting = true; // Set the flag when starting recognition\r\n-//   //       recognition.current.start();\r\n-//   //     }\r\n-//   //   };\r\n-\r\n-//   //   setIsSpeaking(true);\r\n-//   //   console.log(\"Speaking started.\");\r\n-//   //   recognition.current.stop(); // Stop recognition when the bot starts speaking\r\n-//   //   speechSynthesis.current.speak(utterance);\r\n-//   // };\r\n-\r\n-//   const speak = (message) => {\r\n-//     console.log(\"speak function called with message:\", message);\r\n-//     const utterance = new SpeechSynthesisUtterance(message);\r\n-//     utterance.onend = () => {\r\n-//       setIsSpeaking(false);\r\n-//       console.log(\"Speaking ended.\");\r\n-//       // Directly handle the restart of recognition here if needed\r\n-//       if (isListening) {\r\n-//         startListening();\r\n-//       }\r\n-//     };\r\n-\r\n-//     setIsSpeaking(true);\r\n-//     console.log(\"Speaking started.\");\r\n-//     recognition.current.stop(); // Ensure to stop recognition before speaking\r\n-//     speechSynthesis.current.speak(utterance);\r\n-//   };\r\n-\r\n-//   const onResult = (event) => {\r\n-//     const resultIndex = event.resultIndex;\r\n-//     const transcript = event.results[resultIndex][0].transcript\r\n-//       .trim()\r\n-//       .toLowerCase();\r\n-\r\n-//     if (event.results[resultIndex].isFinal) {\r\n-//       console.log(`Recognized text: ${transcript}`);\r\n-//       if (transcript.includes(\"brain\")) {\r\n-//         console.log(\"Wake word heard, processing command...\");\r\n-//         handleCommandWithFuse(transcript.replace(\"brain\", \"\"));\r\n-//       }\r\n-//     }\r\n-//   };\r\n-\r\n-//   // const onRecognitionEnd = () => {\r\n-//   //   console.log(\"Recognition ended.\");\r\n-//   //   setIsRecognitionActive(false); // Update state when recognition ends\r\n-//   //   recognition.current.starting = false; // Reset the flag when recognition ends\r\n-//   //   // We now check if the recognition is already running before starting it again\r\n-//   //   if (isListening && !isSpeaking && !recognition.current?.starting) {\r\n-//   //     console.log(\"Restarting recognition.\");\r\n-//   //     recognition.current.start();\r\n-//   //   }\r\n-//   // };\r\n-\r\n-//   // useEffect(() => {\r\n-//   //   if (isListening && !hasGreeted.current) {\r\n-//   //     speak(\"Hello, I'm Brane. How can I assist you today?\");\r\n-//   //     hasGreeted.current = true;\r\n-//   //   } else if (isListening && !isSpeaking) {\r\n-//   //     recognition.current.start();\r\n-//   //   }\r\n-//   // }, [isListening, isSpeaking]);\r\n-\r\n-//   useEffect(() => {\r\n-//     if (isListening && !hasGreeted.current) {\r\n-//       speak(\"Hello, I'm Brane. How can I assist you today?\");\r\n-//       hasGreeted.current = true;\r\n-//     } else if (isListening && !isSpeaking && !recognition.current.starting) {\r\n-//       // Check the flag before starting\r\n-//       recognition.current.starting = true; // Set the flag when starting recognition\r\n-//       recognition.current.start();\r\n-//     }\r\n-//   }, [isListening, isSpeaking]);\r\n-\r\n-//   // const startListening = () => {\r\n-//   //   console.log(\"Attempting to start listening.\");\r\n-//   //   if (recognition.current && !recognition.current.starting) {\r\n-//   //     setIsListening(true);\r\n-//   //     recognition.current.starting = true; // Set the flag when starting recognition\r\n-//   //     recognition.current.start();\r\n-//   //     console.log(\"Listening started.\");\r\n-//   //   }\r\n-//   // };\r\n-\r\n-//   // const stopListening = () => {\r\n-//   //   console.log(\"Stopping listening.\");\r\n-\r\n-//   //   setIsListening(false);\r\n-//   //   recognition.current.stop();\r\n-//   //   if (speechSynthesis.current.speaking) {\r\n-//   //     speechSynthesis.current.cancel();\r\n-//   //   }\r\n-//   //   if (restartRecognitionTimeout.current) {\r\n-//   //     clearTimeout(restartRecognitionTimeout.current);\r\n-//   //   }\r\n-//   //   console.log(\"Listening stopped.\");\r\n-//   // };\r\n-//   // Handle start and stop listening logic\r\n-//   const startListening = () => {\r\n-//     console.log(\"Attempting to start listening.\");\r\n-//     if (!recognition.current.starting) {\r\n-//       setIsListening(true);\r\n-//       recognition.current.starting = true;\r\n-//       recognition.current.start();\r\n-//       console.log(\"Listening started.\");\r\n-//     } else {\r\n-//       console.log(\"Recognition already active.\");\r\n-//     }\r\n-//   };\r\n-\r\n-//   const stopListening = () => {\r\n-//     console.log(\"Stopping listening.\");\r\n-//     if (recognition.current.starting) {\r\n-//       setIsListening(false);\r\n-//       recognition.current.starting = false;\r\n-//       recognition.current.stop();\r\n-//       console.log(\"Listening stopped.\");\r\n-//     } else {\r\n-//       console.log(\"Recognition already inactive.\");\r\n-//     }\r\n-//   };\r\n-\r\n-//   // const handleCommandWithFuse = (command) => {\r\n-//   //   const fuse = new Fuse(commands, { keys: [\"utterance\"], threshold: 0.4 });\r\n-//   //   const results = fuse.search(command);\r\n-//   //   const foundCommand = results.length ? results[0].item : null;\r\n-\r\n-//   //   if (foundCommand) {\r\n-//   //     console.log(\"Command found:\", foundCommand.utterance);\r\n-//   //     speak(foundCommand.response);\r\n-//   //     if (foundCommand.route) {\r\n-//   //       navigate(foundCommand.route); // Navigate to the route specified in the command\r\n-//   //     }\r\n-//   //   } else {\r\n-//   //     console.log(\"No command found.\");\r\n-//   //     speak(\"I'm not sure how to respond to that.\");\r\n-//   //   }\r\n-//   // };\r\n-\r\n-//   const handleCommandWithFuse = (command) => {\r\n-//     const fuse = new Fuse(commands, { keys: [\"utterance\"], threshold: 0.4 });\r\n-//     const results = fuse.search(command);\r\n-//     const foundCommand = results.length ? results[0].item : null;\r\n-\r\n-//     if (foundCommand) {\r\n-//       console.log(\"Command found:\", foundCommand.utterance);\r\n-\r\n-//       if (foundCommand.route) {\r\n-//         if (location.pathname !== foundCommand.route) {\r\n-//           navigate(foundCommand.route);\r\n-//           speak(\r\n-//             `Navigating to ${\r\n-//               foundCommand.routeDescription || \"requested page\"\r\n-//             }.`\r\n-//           );\r\n-//         } else {\r\n-//           speak(\r\n-//             `You are already on the ${\r\n-//               foundCommand.routeDescription || \"requested page\"\r\n-//             }.`\r\n-//           );\r\n-//         }\r\n-//       } else if (foundCommand.action) {\r\n-//         foundCommand.action();\r\n-//       }\r\n-\r\n-//       if (foundCommand.response) {\r\n-//         speak(foundCommand.response);\r\n-//       }\r\n-//     } else {\r\n-//       console.log(\"No command found.\");\r\n-//       speak(\"I'm not sure how to respond to that.\");\r\n-//     }\r\n-//   };\r\n-\r\n-//   const commands = [\r\n-//     {\r\n-//       utterance: \"Hello who are you ?\",\r\n-\r\n-//       response:\r\n-//         \"Hi! This is Brane! your Voice bot from Brane Education How can I Assist you Today ?\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"Hello\",\r\n-\r\n-//       response: \"Hi! How can I assist you today?\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"hello\",\r\n-\r\n-//       response: \"Hi! How can I assist you today?\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"Hi.\",\r\n-\r\n-//       response: \"Hello! How can I assist you today?\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"Hey there\",\r\n-\r\n-//       response: \"Hi! How can I assist you today?\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"Good morning Brane.\",\r\n-\r\n-//       response: \"Hey Hiii! Good morning  ! How can I help you?\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"Good afternoon Brane.\",\r\n-\r\n-//       response: \"Hey Hiii! Good after noon ! How can I help you?\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"Good evening Brane.\",\r\n-\r\n-//       response: \"Hey Hiii! Good evening ! How can I help you?\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"can you please take me to login page\",\r\n-//       route: \"/login\",\r\n-//       routeDescription: \"login page\",\r\n-//       response: \"Navigating to the login page.\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"go to login page\",\r\n-//       route: \"/login\",\r\n-//       routeDescription: \"login page\",\r\n-//       response: \"Navigating to the login page.\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"please take me to login page\",\r\n-//       route: \"/login\",\r\n-//       routeDescription: \"login page\",\r\n-//       response: \"Navigating to the login page.\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"Go to login page\",\r\n-//       route: \"/login\",\r\n-//       routeDescription: \"login page\",\r\n-//       response: \"Navigating to the login page.\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"open login page\",\r\n-//       route: \"/login\",\r\n-//       routeDescription: \"login page\",\r\n-//       response: \"Navigating to the login page.\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"can you please take me to signup page\",\r\n-//       route: \"/signup\",\r\n-//       routeDescription: \"signup page\",\r\n-//       response: \"Navigating to the signup page.\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"take me to signup page\",\r\n-//       route: \"/signup\",\r\n-//       routeDescription: \"signup page\",\r\n-//       response: \"Navigating to the signup page.\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"Go to signup page\",\r\n-//       route: \"/signup\",\r\n-//       routeDescription: \"signup page\",\r\n-//       response: \"Navigating to the signup page.\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"open signup page\",\r\n-//       route: \"/signup\",\r\n-//       routeDescription: \"signup page\",\r\n-//       response: \"Navigating to the signup page.\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"what are platform features\",\r\n-\r\n-//       response:\r\n-//         \"Dashboard, Dynamic time table, Learning Networks, Little Masters, Video Based Dictionary, General Search.\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"Features of platform\",\r\n-\r\n-//       response:\r\n-//         \"Dashboard, Dynamic time table, Learning Networks, Little Masters, Video Based Dictionary, General Search.\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"What does the platform offer\",\r\n-\r\n-//       response:\r\n-//         \"Dashboard, Dynamic time table, Learning Networks, Little Masters, Video Based Dictionary, General Search.\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"Say me the features of platform\",\r\n-\r\n-//       response:\r\n-//         \"Dashboard, Dynamic time table, Learning Networks, Little Masters, Video Based Dictionary, General Search.\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"Say me the services of platform\",\r\n-\r\n-//       response:\r\n-//         \"Dashboard, Dynamic time table, Learning Networks, Little Masters, Video Based Dictionary, General Search.\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"tell me the services offered by the platform\",\r\n-\r\n-//       response:\r\n-//         \"Dashboard, Dynamic time table, Learning Networks, Little Masters, Video Based Dictionary, General Search.\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"explain platform services\",\r\n-\r\n-//       response:\r\n-//         \"Dashboard, Dynamic time table, Learning Networks, Little Masters, Video Based Dictionary, General Search.\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"Give me the Parent voice of Julia Harris\",\r\n-\r\n-//       response:\r\n-//         \"Brane education has helped my son a lot in his studies. He improved a lot in his studies and is now able to score good marks in his exams\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"Play today's motivational video\",\r\n-\r\n-//       response: \"I am playing the video\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"Play today's video\",\r\n-\r\n-//       response: \"I am playing Motivational video\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"Leaders Voice\",\r\n-\r\n-//       response:\r\n-//         \"This Voice-interactive AI Platform is a game Changer. It revolutionizes education.\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"Curriculum Supported by Brane Education\",\r\n-\r\n-//       response:\r\n-//         \"we support multiple Boards let me say few Telangana State Board Andhra Pradesh Board Maharashtra Board Assam Board\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"Boards supported by the platform\",\r\n-\r\n-//       response:\r\n-//         \"we support multiple Boards let me say few Telangana State Board Andhra Pradesh Board Maharashtra Board Assam Board\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"Curriculum\",\r\n-\r\n-//       response:\r\n-//         \"we support multiple Boards let me say few Telangana State Board Andhra Pradesh Board Maharashtra Board Assam Board\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"Go to landing page\",\r\n-\r\n-//       response: \"Okay, I am taking you to the landing page.\",\r\n-\r\n-//       route: \"/childpage\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"take me to landing page\",\r\n-\r\n-//       response: \"Okay, I am taking you to the landing page.\",\r\n-\r\n-//       route: \"/childpage\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"move to landing page\",\r\n-\r\n-//       response: \"Okay, I am taking you to the landing page.\",\r\n-\r\n-//       route: \"/childpage\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"roll back to landing page\",\r\n-\r\n-//       response: \"Okay, I am taking you to the landing page.\",\r\n-\r\n-//       route: \"/childpage\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"move to landing page\",\r\n-\r\n-//       response: \"Okay, I am taking you to the landing page.\",\r\n-\r\n-//       route: \"/childpage\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"what is today's quote\",\r\n-\r\n-//       response:\r\n-//         \"Determination is the power that sees us through all our frustration and obstacles. It helps in building our willpower which is the very basis of success.\",\r\n-\r\n-//       // route: \"/childpage\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"Today's Inspirational quote\",\r\n-\r\n-//       response:\r\n-//         \"Determination is the power that sees us through all our frustration and obstacles. It helps in building our willpower which is the very basis of success.\",\r\n-\r\n-//       // route: \"/childpage\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"say me today's quote\",\r\n-\r\n-//       response:\r\n-//         \"Determination is the power that sees us through all our frustration and obstacles. It helps in building our willpower which is the very basis of success.\",\r\n-\r\n-//       // route: \"/childpage\",\r\n-//     },\r\n-//     {\r\n-//       utterance: \"go back\",\r\n-//       response: \"Going back.\",\r\n-//       action: goBack, // Note the use of an action property\r\n-//     },\r\n-//     {\r\n-//       utterance: \"go forward\",\r\n-//       response: \"Going forward.\",\r\n-//       action: goForward,\r\n-//     },\r\n-//     {\r\n-//       utterance: \"play video\",\r\n-//       // response: \"Playing video.\",\r\n-//       action: playVideo,\r\n-//     },\r\n-//     {\r\n-//       utterance: \"pause video\",\r\n-//       // response: \"Pausing video.\",\r\n-//       action: pauseVideo,\r\n-//     },\r\n-//     {\r\n-//       utterance: \"start video\",\r\n-//       // response: \"Playing video.\",\r\n-//       action: playVideo,\r\n-//     },\r\n-//     {\r\n-//       utterance: \"stop video\",\r\n-//       // response: \"Playing video.\",\r\n-//       action: pauseVideo,\r\n-//     },\r\n-//     {\r\n-//       utterance: \"scroll up\",\r\n-//       // response: \"Scrolling up.\",\r\n-//       action: scrollUp,\r\n-//     },\r\n-//     {\r\n-//       utterance: \"scroll down\",\r\n-//       // response: \"Scrolling down.\",\r\n-//       action: scrollDown,\r\n-//     },\r\n-//     {\r\n-//       utterance: \"go up\",\r\n-\r\n-//       // response: \"Scrolling up.\",\r\n-//       action: scrollUp,\r\n-//     },\r\n-//     {\r\n-//       utterance: \"go down\",\r\n-//       // response: \"Scrolling down.\",\r\n-//       action: scrollDown,\r\n-//     },\r\n-//     {\r\n-//       utterance: \"scroll to top\",\r\n-//       action: scrollToTop,\r\n-//     },\r\n-//     {\r\n-//       utterance: \"scroll to bottom\",\r\n-//       action: scrollToBottom,\r\n-//     },\r\n-//   ];\r\n-//   return (\r\n-//     <div className=\"speech-bot-container\">\r\n-//       <div\r\n-//         className={`button-container ${\r\n-//           isListening ? \"voicebotframeactive\" : \"voicebotframe\"\r\n-//         }`}\r\n-//       >\r\n-//         <div onClick={isListening ? stopListening : startListening}>\r\n-//           <iframe\r\n-//             src={\r\n-//               isListening\r\n-//                 ? \"https://lottie.host/?file=a89aca3f-5407-4052-82c3-2048afca7a9f/NpCdWzLSKD.json\"\r\n-//                 : \"https://lottie.host/?file=d2b6cc0e-fe95-4847-85b5-35365fca7e00/vTudpCuPZq.json\"\r\n-//             }\r\n-//             width=\"120\" // Set your desired width\r\n-//             height=\"120\" // Set your desired height\r\n-//             title={isListening ? \"Stop Animation\" : \"Start Animation\"}\r\n-//             className={isListening ? \"voicebotframeactive\" : \"voicebotframe\"}\r\n-//           ></iframe>\r\n-//           {isListening ? (\r\n-//             <div className=\"overlay\" onClick={stopListening}></div>\r\n-//           ) : (\r\n-//             <div className=\"overlay\" onClick={startListening}></div>\r\n-//           )}\r\n-//         </div>\r\n-//       </div>\r\n-//     </div>\r\n-//   );\r\n-// };\r\n-\r\n-// export default VoiceBot;\r\n-\r\n-// All functionalities but messed up\r\n-\r\n-// import React, { useState, useEffect, useRef } from \"react\";\r\n-// import { useNavigate, useLocation } from \"react-router-dom\";\r\n-// import Fuse from \"fuse.js\";\r\n-// import \"./VoiceBot.css\";\r\n-\r\n-// const VoiceBot = ({ videoRef, takeTestRef, goBackRef }) => {\r\n-//   const [isListening, setIsListening] = useState(false);\r\n-//   const [isSpeaking, setIsSpeaking] = useState(false);\r\n-//   const recognition = useRef(null);\r\n-//   const speechSynthesis = useRef(window.speechSynthesis);\r\n-//   const hasGreeted = useRef(false);\r\n-//   const navigate = useNavigate();\r\n-//   const location = useLocation();\r\n-//   const isRecognitionActive = useRef(false);\r\n-\r\n-//   useEffect(() => {\r\n-//     recognition.current = new window.webkitSpeechRecognition();\r\n-//     recognition.current.continuous = true;\r\n-//     recognition.current.interimResults = false;\r\n-//     recognition.current.onresult = onResult;\r\n-//     recognition.current.onend = onRecognitionEnd;\r\n-\r\n-//     return () => {\r\n-//       if (recognition.current) {\r\n-//         recognition.current.abort();\r\n-//       }\r\n-//     };\r\n-//   }, [location.pathname]);\r\n-\r\n-//   const onResult = (event) => {\r\n-//     const resultIndex = event.resultIndex;\r\n-//     const transcript = event.results[resultIndex][0].transcript\r\n-//       .trim()\r\n-//       .toLowerCase();\r\n-\r\n-//     if (event.results[resultIndex].isFinal) {\r\n-//       console.log(`Recognized text: ${transcript}`);\r\n-//       if (transcript.includes(\"brain\")) {\r\n-//         console.log(\"Wake word heard, processing command...\");\r\n-//         handleCommandWithFuse(transcript.replace(\"brain\", \"\"));\r\n-//       }\r\n-//     }\r\n-//   };\r\n-\r\n-//   const startListening = () => {\r\n-//     if (!isRecognitionActive.current) {\r\n-//       setIsListening(true);\r\n-//       recognition.current.start();\r\n-//       isRecognitionActive.current = true;\r\n-//     }\r\n-//   };\r\n-\r\n-//   const stopListening = () => {\r\n-//     if (isRecognitionActive.current) {\r\n-//       setIsListening(false);\r\n-//       recognition.current.stop();\r\n-//       isRecognitionActive.current = false;\r\n-//     }\r\n-//   };\r\n-\r\n-//   const onRecognitionEnd = () => {\r\n-//     isRecognitionActive.current = false;\r\n-//     if (isListening) {\r\n-//       startListening();\r\n-//     }\r\n-//   };\r\n-\r\n-//   const speak = (message) => {\r\n-//     const utterance = new SpeechSynthesisUtterance(message);\r\n-//     utterance.onend = () => {\r\n-//       setIsSpeaking(false);\r\n-//       if (isListening && !isRecognitionActive.current) {\r\n-//         startListening();\r\n-//       }\r\n-//     };\r\n-\r\n-//     setIsSpeaking(true);\r\n-//     if (isRecognitionActive.current) {\r\n-//       stopListening(); // Adjusted to use stopListening\r\n-//     }\r\n-//     speechSynthesis.current.speak(utterance);\r\n-//   };\r\n-\r\n-//   useEffect(() => {\r\n-//     if (isListening && !hasGreeted.current) {\r\n-//       speak(\"Hello, I'm Brane. How can I assist you today?\");\r\n-//       hasGreeted.current = true;\r\n-//     }\r\n-//   }, [isListening]);\r\n-\r\n-//   const goBack = () => {\r\n-//     if (window.history.length > 1) {\r\n-//       navigate(-1);\r\n-//     } else {\r\n-//       speak(\"Can't go back any further.\");\r\n-//     }\r\n-//   };\r\n-\r\n-//   const goForward = () => {\r\n-//     // Unfortunately, there's no direct way to check if you can go forward in the history.\r\n-//     // You might need to manage this state manually based on user navigation.\r\n-//     navigate(1);\r\n-//   };\r\n-\r\n-//   const playVideo = () => {\r\n-//     if (videoRef.current && !videoRef.current.paused) {\r\n-//       speak(\"Video is already playing.\");\r\n-//     } else if (videoRef.current) {\r\n-//       videoRef.current.play();\r\n-//       speak(\"Playing video.\");\r\n-//     } else {\r\n-//       speak(\"No video to play.\");\r\n-//     }\r\n-//   };\r\n-\r\n-//   const pauseVideo = () => {\r\n-//     if (videoRef.current && videoRef.current.paused) {\r\n-//       speak(\"Video is already paused.\");\r\n-//     } else if (videoRef.current) {\r\n-//       videoRef.current.pause();\r\n-//       speak(\"Video paused.\");\r\n-//     } else {\r\n-//       speak(\"No video to pause.\");\r\n-//     }\r\n-//   };\r\n-\r\n-//   const scrollAmount = window.innerHeight * 0.82;\r\n-\r\n-//   const scrollUp = () => {\r\n-//     if (window.pageYOffset === 0) {\r\n-//       speak(\"Already at the top of the page.\");\r\n-//     } else {\r\n-//       window.scrollBy(0, -scrollAmount);\r\n-//       speak(\"Scrolled up.\");\r\n-//     }\r\n-//   };\r\n-\r\n-//   const scrollDown = () => {\r\n-//     const maxScrollTop =\r\n-//       document.documentElement.scrollHeight - window.innerHeight;\r\n-//     if (window.pageYOffset >= maxScrollTop) {\r\n-//       speak(\"Already at the bottom of the page.\");\r\n-//     } else {\r\n-//       window.scrollBy(0, scrollAmount);\r\n-//       speak(\"Scrolled down.\");\r\n-//     }\r\n-//   };\r\n-\r\n-//   const scrollToTop = () => {\r\n-//     if (window.pageYOffset === 0) {\r\n-//       speak(\"Already at the top of the page.\");\r\n-//     } else {\r\n-//       window.scrollTo(0, 0);\r\n-//       speak(\"Scrolled to the top of the page.\");\r\n-//     }\r\n-//   };\r\n-\r\n-//   const scrollToBottom = () => {\r\n-//     const maxScrollTop =\r\n-//       document.documentElement.scrollHeight - window.innerHeight;\r\n-//     if (window.pageYOffset >= maxScrollTop) {\r\n-//       speak(\"Already at the bottom of the page.\");\r\n-//     } else {\r\n-//       window.scrollTo(0, document.body.scrollHeight);\r\n-//       speak(\"Scrolled to the bottom of the page.\");\r\n-//     }\r\n-//   };\r\n-\r\n-//   // const speak = (message) => {\r\n-//   //   const utterance = new SpeechSynthesisUtterance(message);\r\n-//   //   utterance.onend = () => {\r\n-//   //     setIsSpeaking(false);\r\n-//   //     console.log(\"Speaking ended.\");\r\n-//   //     // Only restart recognition if we're still supposed to be listening\r\n-//   //     // if (isListening) {\r\n-//   //     //   if (restartRecognitionTimeout.current) {\r\n-//   //     //     clearTimeout(restartRecognitionTimeout.current);\r\n-//   //     //   }\r\n-//   //     //   restartRecognitionTimeout.current = setTimeout(() => {\r\n-//   //     //     console.log(\"Recognition restarted.\");\r\n-//   //     //     recognition.current.start();\r\n-//   //     //   }, 100); // Delay to prevent immediate restart\r\n-//   //     // }\r\n-//   //     if (isListening && !recognition.current.starting) { // Check the flag before restarting\r\n-//   //       recognition.current.starting = true; // Set the flag when starting recognition\r\n-//   //       recognition.current.start();\r\n-//   //     }\r\n-//   //   };\r\n-\r\n-//   //   setIsSpeaking(true);\r\n-//   //   console.log(\"Speaking started.\");\r\n-//   //   recognition.current.stop(); // Stop recognition when the bot starts speaking\r\n-//   //   speechSynthesis.current.speak(utterance);\r\n-//   // };\r\n-\r\n-//   // const onRecognitionEnd = () => {\r\n-//   //   console.log(\"Recognition ended.\");\r\n-//   //   setIsRecognitionActive(false); // Update state when recognition ends\r\n-//   //   recognition.current.starting = false; // Reset the flag when recognition ends\r\n-//   //   // We now check if the recognition is already running before starting it again\r\n-//   //   if (isListening && !isSpeaking && !recognition.current?.starting) {\r\n-//   //     console.log(\"Restarting recognition.\");\r\n-//   //     recognition.current.start();\r\n-//   //   }\r\n-//   // };\r\n-\r\n-//   // useEffect(() => {\r\n-//   //   if (isListening && !hasGreeted.current) {\r\n-//   //     speak(\"Hello, I'm Brane. How can I assist you today?\");\r\n-//   //     hasGreeted.current = true;\r\n-//   //   } else if (isListening && !isSpeaking) {\r\n-//   //     recognition.current.start();\r\n-//   //   }\r\n-//   // }, [isListening, isSpeaking]);\r\n-\r\n-//   // const startListening = () => {\r\n-//   //   console.log(\"Attempting to start listening.\");\r\n-//   //   if (recognition.current && !recognition.current.starting) {\r\n-//   //     setIsListening(true);\r\n-//   //     recognition.current.starting = true; // Set the flag when starting recognition\r\n-//   //     recognition.current.start();\r\n-//   //     console.log(\"Listening started.\");\r\n-//   //   }\r\n-//   // };\r\n-\r\n-//   // const stopListening = () => {\r\n-//   //   console.log(\"Stopping listening.\");\r\n-\r\n-//   //   setIsListening(false);\r\n-//   //   recognition.current.stop();\r\n-//   //   if (speechSynthesis.current.speaking) {\r\n-//   //     speechSynthesis.current.cancel();\r\n-//   //   }\r\n-//   //   if (restartRecognitionTimeout.current) {\r\n-//   //     clearTimeout(restartRecognitionTimeout.current);\r\n-//   //   }\r\n-//   //   console.log(\"Listening stopped.\");\r\n-//   // };\r\n-//   // Handle start and stop listening logic\r\n-\r\n-//   useEffect(() => {\r\n-//     if (isListening && !hasGreeted.current) {\r\n-//       speak(\"Hello, I'm Brane. How can I assist you today?\");\r\n-//       hasGreeted.current = true;\r\n-//     }\r\n-//   }, [isListening]);\r\n-\r\n-//   // const handleCommandWithFuse = (command) => {\r\n-//   //   const fuse = new Fuse(commands, { keys: [\"utterance\"], threshold: 0.4 });\r\n-//   //   const results = fuse.search(command);\r\n-//   //   const foundCommand = results.length ? results[0].item : null;\r\n-\r\n-//   //   if (foundCommand) {\r\n-//   //     console.log(\"Command found:\", foundCommand.utterance);\r\n-//   //     speak(foundCommand.response);\r\n-//   //     if (foundCommand.route) {\r\n-//   //       navigate(foundCommand.route); // Navigate to the route specified in the command\r\n-//   //     }\r\n-//   //   } else {\r\n-//   //     console.log(\"No command found.\");\r\n-//   //     speak(\"I'm not sure how to respond to that.\");\r\n-//   //   }\r\n-//   // };\r\n-\r\n-//   const handleCommandWithFuse = (command) => {\r\n-//     const fuse = new Fuse(commands, { keys: [\"utterance\"], threshold: 0.4 });\r\n-//     const results = fuse.search(command);\r\n-//     const foundCommand = results.length ? results[0].item : null;\r\n-\r\n-//     if (foundCommand) {\r\n-//       console.log(\"Command found:\", foundCommand.utterance);\r\n-\r\n-//       if (foundCommand.action) {\r\n-//         foundCommand.action();\r\n-//       } else if (foundCommand.route) {\r\n-//         navigate(foundCommand.route);\r\n-//       }\r\n-\r\n-//       if (foundCommand.response) {\r\n-//         speak(foundCommand.response);\r\n-//       }\r\n-//     } else {\r\n-//       console.log(\"No command found.\");\r\n-//       speak(\"I'm not sure how to respond to that.\");\r\n-//     }\r\n-//   };\r\n-\r\n-//   const commands = [\r\n-//     {\r\n-//       utterance: \"Hello who are you ?\",\r\n-\r\n-//       response:\r\n-//         \"Hi! This is Brane! your Voice bot from Brane Education How can I Assist you Today ?\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"Hello\",\r\n-\r\n-//       response: \"Hi! How can I assist you today?\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"hello\",\r\n-\r\n-//       response: \"Hi! How can I assist you today?\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"Hi.\",\r\n-\r\n-//       response: \"Hello! How can I assist you today?\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"Hey there\",\r\n-\r\n-//       response: \"Hi! How can I assist you today?\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"Good morning Brane.\",\r\n-\r\n-//       response: \"Hey Hiii! Good morning  ! How can I help you?\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"Good afternoon Brane.\",\r\n-\r\n-//       response: \"Hey Hiii! Good after noon ! How can I help you?\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"Good evening Brane.\",\r\n-\r\n-//       response: \"Hey Hiii! Good evening ! How can I help you?\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"can you please take me to login page\",\r\n-//       route: \"/login\",\r\n-//       routeDescription: \"login page\",\r\n-//       response: \"Navigating to the login page.\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"go to login page\",\r\n-//       route: \"/login\",\r\n-//       routeDescription: \"login page\",\r\n-//       response: \"Navigating to the login page.\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"please take me to login page\",\r\n-//       route: \"/login\",\r\n-//       routeDescription: \"login page\",\r\n-//       response: \"Navigating to the login page.\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"Go to login page\",\r\n-//       route: \"/login\",\r\n-//       routeDescription: \"login page\",\r\n-//       response: \"Navigating to the login page.\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"open login page\",\r\n-//       route: \"/login\",\r\n-//       routeDescription: \"login page\",\r\n-//       response: \"Navigating to the login page.\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"can you please take me to signup page\",\r\n-//       route: \"/signup\",\r\n-//       routeDescription: \"signup page\",\r\n-//       response: \"Navigating to the signup page.\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"take me to signup page\",\r\n-//       route: \"/signup\",\r\n-//       routeDescription: \"signup page\",\r\n-//       response: \"Navigating to the signup page.\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"Go to signup page\",\r\n-//       route: \"/signup\",\r\n-//       routeDescription: \"signup page\",\r\n-//       response: \"Navigating to the signup page.\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"open signup page\",\r\n-//       route: \"/signup\",\r\n-//       routeDescription: \"signup page\",\r\n-//       response: \"Navigating to the signup page.\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"what are platform features\",\r\n-\r\n-//       response:\r\n-//         \"Dashboard, Dynamic time table, Learning Networks, Little Masters, Video Based Dictionary, General Search.\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"Features of platform\",\r\n-\r\n-//       response:\r\n-//         \"Dashboard, Dynamic time table, Learning Networks, Little Masters, Video Based Dictionary, General Search.\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"What does the platform offer\",\r\n-\r\n-//       response:\r\n-//         \"Dashboard, Dynamic time table, Learning Networks, Little Masters, Video Based Dictionary, General Search.\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"Say me the features of platform\",\r\n-\r\n-//       response:\r\n-//         \"Dashboard, Dynamic time table, Learning Networks, Little Masters, Video Based Dictionary, General Search.\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"Say me the services of platform\",\r\n-\r\n-//       response:\r\n-//         \"Dashboard, Dynamic time table, Learning Networks, Little Masters, Video Based Dictionary, General Search.\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"tell me the services offered by the platform\",\r\n-\r\n-//       response:\r\n-//         \"Dashboard, Dynamic time table, Learning Networks, Little Masters, Video Based Dictionary, General Search.\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"explain platform services\",\r\n-\r\n-//       response:\r\n-//         \"Dashboard, Dynamic time table, Learning Networks, Little Masters, Video Based Dictionary, General Search.\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"Give me the Parent voice of Julia Harris\",\r\n-\r\n-//       response:\r\n-//         \"Brane education has helped my son a lot in his studies. He improved a lot in his studies and is now able to score good marks in his exams\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"Play today's motivational video\",\r\n-\r\n-//       response: \"I am playing the video\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"Play today's video\",\r\n-\r\n-//       response: \"I am playing Motivational video\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"Leaders Voice\",\r\n-\r\n-//       response:\r\n-//         \"This Voice-interactive AI Platform is a game Changer. It revolutionizes education.\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"Curriculum Supported by Brane Education\",\r\n-\r\n-//       response:\r\n-//         \"we support multiple Boards let me say few Telangana State Board Andhra Pradesh Board Maharashtra Board Assam Board\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"Boards supported by the platform\",\r\n-\r\n-//       response:\r\n-//         \"we support multiple Boards let me say few Telangana State Board Andhra Pradesh Board Maharashtra Board Assam Board\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"Curriculum\",\r\n-\r\n-//       response:\r\n-//         \"we support multiple Boards let me say few Telangana State Board Andhra Pradesh Board Maharashtra Board Assam Board\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"Go to landing page\",\r\n-\r\n-//       response: \"Okay, I am taking you to the landing page.\",\r\n-\r\n-//       route: \"/childpage\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"take me to landing page\",\r\n-\r\n-//       response: \"Okay, I am taking you to the landing page.\",\r\n-\r\n-//       route: \"/childpage\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"move to landing page\",\r\n-\r\n-//       response: \"Okay, I am taking you to the landing page.\",\r\n-\r\n-//       route: \"/childpage\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"roll back to landing page\",\r\n-\r\n-//       response: \"Okay, I am taking you to the landing page.\",\r\n-\r\n-//       route: \"/childpage\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"move to landing page\",\r\n-\r\n-//       response: \"Okay, I am taking you to the landing page.\",\r\n-\r\n-//       route: \"/childpage\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"what is today's quote\",\r\n-\r\n-//       response:\r\n-//         \"Determination is the power that sees us through all our frustration and obstacles. It helps in building our willpower which is the very basis of success.\",\r\n-\r\n-//       // route: \"/childpage\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"Today's Inspirational quote\",\r\n-\r\n-//       response:\r\n-//         \"Determination is the power that sees us through all our frustration and obstacles. It helps in building our willpower which is the very basis of success.\",\r\n-\r\n-//       // route: \"/childpage\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"say me today's quote\",\r\n-\r\n-//       response:\r\n-//         \"Determination is the power that sees us through all our frustration and obstacles. It helps in building our willpower which is the very basis of success.\",\r\n-\r\n-//       // route: \"/childpage\",\r\n-//     },\r\n-//     {\r\n-//       utterance: \"go back\",\r\n-//       response: \"Going back.\",\r\n-//       action: goBack, // Note the use of an action property\r\n-//     },\r\n-//     {\r\n-//       utterance: \"go forward\",\r\n-//       response: \"Going forward.\",\r\n-//       action: goForward,\r\n-//     },\r\n-//     {\r\n-//       utterance: \"play video\",\r\n-//       // response: \"Playing video.\",\r\n-//       action: playVideo,\r\n-//     },\r\n-//     {\r\n-//       utterance: \"pause video\",\r\n-//       // response: \"Pausing video.\",\r\n-//       action: pauseVideo,\r\n-//     },\r\n-//     {\r\n-//       utterance: \"start video\",\r\n-//       // response: \"Playing video.\",\r\n-//       action: playVideo,\r\n-//     },\r\n-//     {\r\n-//       utterance: \"stop video\",\r\n-//       // response: \"Playing video.\",\r\n-//       action: pauseVideo,\r\n-//     },\r\n-//     {\r\n-//       utterance: \"scroll up\",\r\n-//       // response: \"Scrolling up.\",\r\n-//       action: scrollUp,\r\n-//     },\r\n-//     {\r\n-//       utterance: \"scroll down\",\r\n-//       // response: \"Scrolling down.\",\r\n-//       action: scrollDown,\r\n-//     },\r\n-//     {\r\n-//       utterance: \"go up\",\r\n-\r\n-//       // response: \"Scrolling up.\",\r\n-//       action: scrollUp,\r\n-//     },\r\n-//     {\r\n-//       utterance: \"go down\",\r\n-//       // response: \"Scrolling down.\",\r\n-//       action: scrollDown,\r\n-//     },\r\n-//     {\r\n-//       utterance: \"scroll to top\",\r\n-//       action: scrollToTop,\r\n-//     },\r\n-//     {\r\n-//       utterance: \"scroll to bottom\",\r\n-//       action: scrollToBottom,\r\n-//     },\r\n-//     {\r\n-//       utterance: \"go back\",\r\n-//       action: goBackRef?.current?.click, // Use goBackRef directly\r\n-//       response: \"Going back.\",\r\n-//     },\r\n-//     {\r\n-//       utterance: \"take test\",\r\n-//       action: takeTestRef?.current?.click, // Use takeTestRef directly\r\n-//       response: \"Starting the test.\",\r\n-//     },\r\n-//   ];\r\n-//   return (\r\n-//     <div className=\"speech-bot-container\">\r\n-//       <div\r\n-//         className={`button-container ${\r\n-//           isListening ? \"voicebotframeactive\" : \"voicebotframe\"\r\n-//         }`}\r\n-//       >\r\n-//         <div onClick={isListening ? stopListening : startListening}>\r\n-//           <iframe\r\n-//             src={\r\n-//               isListening\r\n-//                 ? \"https://lottie.host/?file=a89aca3f-5407-4052-82c3-2048afca7a9f/NpCdWzLSKD.json\"\r\n-//                 : \"https://lottie.host/?file=d2b6cc0e-fe95-4847-85b5-35365fca7e00/vTudpCuPZq.json\"\r\n-//             }\r\n-//             width=\"120\" // Set your desired width\r\n-//             height=\"120\" // Set your desired height\r\n-//             title={isListening ? \"Stop Animation\" : \"Start Animation\"}\r\n-//             className={isListening ? \"voicebotframeactive\" : \"voicebotframe\"}\r\n-//           ></iframe>\r\n-//           {isListening ? (\r\n-//             <div className=\"overlay\" onClick={stopListening}></div>\r\n-//           ) : (\r\n-//             <div className=\"overlay\" onClick={startListening}></div>\r\n-//           )}\r\n-//         </div>\r\n-//       </div>\r\n-//     </div>\r\n-//   );\r\n-// };\r\n-\r\n-// export default VoiceBot;\r\n-import React, { useState, useEffect, useRef } from \"react\";\r\n-import { useNavigate, useLocation } from \"react-router-dom\";\r\n-import Fuse from \"fuse.js\";\r\n-import \"./VoiceBot.css\";\r\n-import chatbotimage from \"../../assets/chatbotgif.gif\";\r\n-\r\n-const VoiceBot = ({ videoRefs }) => {\r\n-  const [isListening, setIsListening] = useState(false);\r\n-  const [isSpeaking, setIsSpeaking] = useState(false);\r\n-  const recognition = useRef(null);\r\n-  const speechSynthesis = useRef(window.speechSynthesis);\r\n-  const [hasGreeted, setHasGreeted] = useState(false);\r\n-  const navigate = useNavigate();\r\n-\r\n-  // Initialize speech recognition\r\n-  useEffect(() => {\r\n-    recognition.current = new window.webkitSpeechRecognition();\r\n-    recognition.current.continuous = true;\r\n-    recognition.current.interimResults = false;\r\n-    recognition.current.onresult = onResult;\r\n-    recognition.current.onend = onRecognitionEnd;\r\n-    recognition.current.starting = false;\r\n-\r\n-    recognition.current.onerror = (event) => {\r\n-      console.error(\"Recognition error:\", event.error);\r\n-      if (isListening && !isSpeaking) {\r\n-        restartRecognition();\r\n-      }\r\n-    };\r\n-\r\n-    return () => {\r\n-      if (recognition.current) {\r\n-        recognition.current.abort();\r\n-      }\r\n-    };\r\n-  }, []);\r\n-\r\n-  useEffect(() => {\r\n-    const checkRecognition = () => {\r\n-      if (isListening && !isSpeaking && !recognition.current.starting) {\r\n-        console.log(\"Restarting recognition because it's not active.\");\r\n-        recognition.current.starting = true;\r\n-        recognition.current.start();\r\n-        console.log(\"Restarted recognition.\");\r\n-      }\r\n-    };\r\n-\r\n-    const recognitionCheckInterval = setInterval(checkRecognition, 500); // Check every .5 second\r\n-\r\n-    return () => {\r\n-      clearInterval(recognitionCheckInterval);\r\n-    };\r\n-  }, [isListening, isSpeaking]);\r\n-\r\n-  const historyStack = useRef([]);\r\n-\r\n-  useEffect(() => {\r\n-    return () => {\r\n-      // Clean up the listener when the component unmounts\r\n-      window.removeEventListener(\"popstate\", handlePopState);\r\n-    };\r\n-  }, []);\r\n-\r\n-  const handlePopState = () => {\r\n-    // This needs to handle both back and forward browser actions\r\n-    // Use some logic to determine whether it's a back or forward action\r\n-    // For simplicity, assume it's always back\r\n-    historyStack.current.pop();\r\n-    forwardStack.current.length = 0; // Clear forward stack on manual navigation\r\n-  };\r\n-\r\n-  // Listen to popstate events to update the history stack\r\n-  useEffect(() => {\r\n-    window.addEventListener(\"popstate\", handlePopState);\r\n-  }, []);\r\n-\r\n-  const forwardStack = useRef([]);\r\n-\r\n-  const goBack = () => {\r\n-    if (window.history.state && window.history.state.idx > 0) {\r\n-      window.history.back();\r\n-      speak(\"Going back\");\r\n-    } else {\r\n-      speak(\"Can't go back any further.\");\r\n-    }\r\n-  };\r\n-\r\n-  const goForward = () => {\r\n-    if (\r\n-      window.history.state &&\r\n-      window.history.state.idx < window.history.length - 1\r\n-    ) {\r\n-      window.history.forward();\r\n-      speak(\"Going forward\");\r\n-    } else {\r\n-      speak(\"No forward history available.\");\r\n-    }\r\n-  };\r\n-\r\n-  const scrollAmount = window.innerHeight * 0.82;\r\n-\r\n-  const scrollUp = () => {\r\n-    if (window.pageYOffset === 0) {\r\n-      speak(\"Already at the top of the page.\");\r\n-    } else {\r\n-      window.scrollBy(0, -scrollAmount);\r\n-      speak(\"Scrolled up.\");\r\n-    }\r\n-  };\r\n-\r\n-  const scrollDown = () => {\r\n-    const maxScrollTop =\r\n-      document.documentElement.scrollHeight - window.innerHeight;\r\n-    if (window.pageYOffset >= maxScrollTop) {\r\n-      speak(\"Already at the bottom of the page.\");\r\n-    } else {\r\n-      window.scrollBy(0, scrollAmount);\r\n-      speak(\"Scrolled down.\");\r\n-    }\r\n-  };\r\n-\r\n-  const scrollToTop = () => {\r\n-    if (window.pageYOffset === 0) {\r\n-      speak(\"Already at the top of the page.\");\r\n-    } else {\r\n-      window.scrollTo(0, 0);\r\n-      speak(\"Scrolled to the top of the page.\");\r\n-    }\r\n-  };\r\n-\r\n-  const scrollToBottom = () => {\r\n-    const maxScrollTop =\r\n-      document.documentElement.scrollHeight - window.innerHeight;\r\n-    if (window.pageYOffset >= maxScrollTop) {\r\n-      speak(\"Already at the bottom of the page.\");\r\n-    } else {\r\n-      window.scrollTo(0, document.body.scrollHeight);\r\n-      speak(\"Scrolled to the bottom of the page.\");\r\n-    }\r\n-  };\r\n-\r\n-\r\n-  const controlVideo = (videoId, action) => {\r\n-    const videoRef = videoRefs.current.get(videoId);\r\n-    if (videoRef && videoRef.current) {\r\n-      switch (action) {\r\n-        case 'play':\r\n-          videoRef.current.play();\r\n-          break;\r\n-        case 'pause':\r\n-          videoRef.current.pause();\r\n-          break;\r\n-        case 'mute':\r\n-          videoRef.current.muted = true;\r\n-          break;\r\n-        case 'unmute':\r\n-          videoRef.current.muted = false;\r\n-          break;\r\n-        case 'fullscreen':\r\n-          if (videoRef.current.requestFullscreen) {\r\n-            videoRef.current.requestFullscreen();\r\n-          } else if (videoRef.current.webkitRequestFullscreen) { // Safari\r\n-            videoRef.current.webkitRequestFullscreen();\r\n-          } else if (videoRef.current.msRequestFullscreen) { // IE11\r\n-            videoRef.current.msRequestFullscreen();\r\n-          }\r\n-          break;\r\n-        case 'exitFullscreen':\r\n-          if (document.exitFullscreen) {\r\n-            document.exitFullscreen();\r\n-          } else if (document.webkitExitFullscreen) { // Safari\r\n-            document.webkitExitFullscreen();\r\n-          } else if (document.msExitFullscreen) { // IE11\r\n-            document.msExitFullscreen();\r\n-          }\r\n-          break;\r\n-        case 'increaseVolume':\r\n-          if (videoRef.current.volume < 1) {\r\n-            videoRef.current.volume = Math.min(1, videoRef.current.volume + 0.1);\r\n-          }\r\n-          break;\r\n-        case 'decreaseVolume':\r\n-          if (videoRef.current.volume > 0) {\r\n-            videoRef.current.volume = Math.max(0, videoRef.current.volume - 0.1);\r\n-          }\r\n-          break;\r\n-        // Add other cases as needed\r\n-      }\r\n-      speak(`${action.charAt(0).toUpperCase() + action.slice(1).replace(/([A-Z])/g, ' $1').toLowerCase()}ing video.`);\r\n-    } else {\r\n-      speak(`Video not found.`);\r\n-    }\r\n-  };\r\n-\r\n-  const speak = (message) => {\r\n-    const utterance = new SpeechSynthesisUtterance(message);\r\n-    utterance.onend = () => {\r\n-      setIsSpeaking(false);\r\n-      // Restart recognition after speaking has ended\r\n-      if (isListening) {\r\n-        restartRecognition();\r\n-      }\r\n-    };\r\n-\r\n-    setIsSpeaking(true);\r\n-    // Stop recognition when the bot starts speaking\r\n-    if (recognition.current) {\r\n-      recognition.current.abort();\r\n-    }\r\n-    speechSynthesis.current.speak(utterance);\r\n-  };\r\n-\r\n-  const restartRecognition = () => {\r\n-    // Check if recognition is not already started and if the bot is set to listen\r\n-    if (\r\n-      recognition.current &&\r\n-      !recognition.current.starting &&\r\n-      isListening &&\r\n-      !isSpeaking\r\n-    ) {\r\n-      recognition.current.abort(); // Ensure any ongoing recognition is stopped\r\n-      recognition.current.starting = true;\r\n-      recognition.current.start();\r\n-    }\r\n-  };\r\n-\r\n-  // Restart recognition when bot finishes speaking and isListening is true\r\n-  useEffect(() => {\r\n-    if (!isSpeaking && isListening) {\r\n-      restartRecognition();\r\n-    }\r\n-  }, [isSpeaking, isListening]);\r\n-\r\n-  const onResult = (event) => {\r\n-    const resultIndex = event.resultIndex;\r\n-    const transcript = event.results[resultIndex][0].transcript\r\n-      .trim()\r\n-      .toLowerCase();\r\n-\r\n-    if (event.results[resultIndex].isFinal) {\r\n-      console.log(`Recognized text: ${transcript}`);\r\n-      if (transcript.includes(\"brain\")) {\r\n-        console.log(\"Wake word heard, processing command...\");\r\n-        handleCommandWithFuse(transcript.replace(\"brain\", \"\"));\r\n-      }\r\n-    }\r\n-  };\r\n-\r\n-  const onRecognitionEnd = () => {\r\n-    recognition.current.starting = false;\r\n-    if (isListening && !isSpeaking) {\r\n-      restartRecognition();\r\n-    }\r\n-  };\r\n-\r\n-  useEffect(() => {\r\n-    if (isListening && !hasGreeted) {\r\n-      speak(\"Hello, I'm Brane. How can I help you today?\");\r\n-      setHasGreeted(true);\r\n-    }\r\n-  }, [isListening, hasGreeted]);\r\n-\r\n-  // Updated startListening function\r\n-  const startListening = () => {\r\n-    setIsListening(true);\r\n-    if (!recognition.current.starting) {\r\n-      restartRecognition();\r\n-    }\r\n-  };\r\n-\r\n-  // Updated stopListening function\r\n-  const stopListening = () => {\r\n-    setIsListening(false);\r\n-    if (speechSynthesis.current.speaking) {\r\n-      speechSynthesis.current.cancel();\r\n-    }\r\n-    recognition.current.abort();\r\n-  };\r\n-\r\n-  const handleCommandWithFuse = (command) => {\r\n-    const fuse = new Fuse(commands, { keys: [\"utterance\"], threshold: 0.4 });\r\n-    const results = fuse.search(command);\r\n-    const foundCommand = results.length ? results[0].item : null;\r\n-\r\n-    if (foundCommand) {\r\n-      console.log(\"Command found:\", foundCommand.utterance);\r\n-\r\n-      if (foundCommand.action) {\r\n-        foundCommand.action();\r\n-      } else if (foundCommand.route) {\r\n-        navigate(foundCommand.route);\r\n-      }\r\n-\r\n-      // Speak after performing the action or navigation\r\n-      speak(foundCommand.response);\r\n-    } else {\r\n-      console.log(\"No command found.\");\r\n-      speak(\"I'm not sure how to respond to that.\");\r\n-    }\r\n-  };\r\n-\r\n-  const commands = [\r\n     {\r\n-      utterance: \"Hello who are you ?\",\r\n-\r\n-      response:\r\n-        \"Hi! This is Brane! your Voice bot from Brane Education How can I Assist you Today ?\",\r\n-    },\r\n-\r\n-    {\r\n-      utterance: \"Hello\",\r\n-\r\n-      response: \"Hi! How can I assist you today?\",\r\n-    },\r\n-\r\n-    {\r\n-      utterance: \"hello\",\r\n-\r\n-      response: \"Hi! How can I assist you today?\",\r\n-    },\r\n-\r\n-    {\r\n-      utterance: \"Hi.\",\r\n-\r\n-      response: \"Hello! How can I assist you today?\",\r\n-    },\r\n-\r\n-    {\r\n-      utterance: \"Hey there\",\r\n-\r\n-      response: \"Hi! How can I assist you today?\",\r\n-    },\r\n-\r\n-    {\r\n-      utterance: \"Good morning Brane.\",\r\n-\r\n-      response: \"Hey Hiii! Good morning  ! How can I help you?\",\r\n-    },\r\n-\r\n-    {\r\n-      utterance: \"Good afternoon Brane.\",\r\n-\r\n-      response: \"Hey Hiii! Good after noon ! How can I help you?\",\r\n-    },\r\n-\r\n-    {\r\n-      utterance: \"Good evening Brane.\",\r\n-\r\n-      response: \"Hey Hiii! Good evening ! How can I help you?\",\r\n-    },\r\n-\r\n-    {\r\n-      utterance: \"take me to homepage\",\r\n-\r\n-      route: \"/\",\r\n-\r\n-      response: \"You're in Homepage now\",\r\n-    },\r\n-    {\r\n-      utterance: \"open homepage\",\r\n-\r\n-      route: \"/\",\r\n-\r\n-      response: \"You're in Homepage now\",\r\n-    },\r\n-    {\r\n-      utterance: \"go to homepage\",\r\n-\r\n-      route: \"/\",\r\n-\r\n-      response: \"You're in Homepage now\",\r\n-    },\r\n-    {\r\n-      utterance: \"go back to homepage\",\r\n-\r\n-      route: \"/\",\r\n-\r\n-      response: \"You're in Homepage now\",\r\n-    },\r\n-    {\r\n-      utterance: \"can you please take me to login page\",\r\n-\r\n-      route: \"/login\",\r\n-\r\n-      response: \"Here's the Login Page, Please Login\",\r\n-    },\r\n-\r\n-    {\r\n-      utterance: \"please take me to login page\",\r\n-\r\n-      route: \"/login\",\r\n-\r\n-      response: \"Here's the Login Page, Please Login\",\r\n-    },\r\n-\r\n-    {\r\n-      utterance: \"Go to login page\",\r\n-\r\n-      route: \"/login\",\r\n-\r\n-      response: \"Here's the Login Page, Please Login\",\r\n-    },\r\n-\r\n-    {\r\n-      utterance: \"open login page\",\r\n-\r\n-      route: \"/login\",\r\n-\r\n-      response: \"Here's the Login Page, Please Login\",\r\n-    },\r\n-\r\n-    {\r\n-      utterance: \"can you please take me to signup page\",\r\n-\r\n-      route: \"/signup\",\r\n-\r\n-      response: \"Here's the signup page. Please proceed With Registration.\",\r\n-    },\r\n-\r\n-    {\r\n-      utterance: \"take me to signup page\",\r\n-\r\n-      route: \"/signup\",\r\n-\r\n-      response: \"Here's the signup page. Please proceed With Registration.\",\r\n-    },\r\n-\r\n-    {\r\n-      utterance: \"Go to signup page\",\r\n-\r\n-      route: \"/signup\",\r\n-\r\n-      response: \"Here's the signup page. Please proceed With Registration.\",\r\n-    },\r\n-\r\n-    {\r\n-      utterance: \"open signup page\",\r\n-\r\n-      route: \"/signup\",\r\n-\r\n-      response: \"Here's the signup page. Please proceed With Registration.\",\r\n-    },\r\n-\r\n-    {\r\n-      utterance: \"Go to face id\",\r\n-\r\n-      route: \"/login/faceid\",\r\n-\r\n-      response: \"Here's Face ID Login. Please proceed.\",\r\n-    },\r\n-\r\n-    {\r\n-      utterance: \"Go to face id login\",\r\n-\r\n-      route: \"/login/faceid\",\r\n-\r\n-      response: \"Here's Face ID Login. Please proceed.\",\r\n-    },\r\n-    {\r\n-      utterance: \"Go to face login\",\r\n-\r\n-      route: \"/login/faceid\",\r\n-\r\n-      response: \"Here's Face ID Login. Please proceed.\",\r\n-    },\r\n-\r\n-    {\r\n-      utterance: \"login with face id\",\r\n-\r\n-      route: \"/login/faceid\",\r\n-\r\n-      response: \"Here's Face ID Login. Please proceed.\",\r\n-    },\r\n-\r\n-    {\r\n-      utterance: \"login with face\",\r\n-\r\n-      route: \"/login/faceid\",\r\n-\r\n-      response: \"Here's Face ID Login. Please proceed.\",\r\n-    },\r\n-\r\n-    {\r\n-      utterance: \"i want to login with face\",\r\n-\r\n-      route: \"/login/faceid\",\r\n-\r\n-      response: \"Here's Face ID Login. Please proceed.\",\r\n-    },\r\n-\r\n-    {\r\n-      utterance: \"login with voice\",\r\n-\r\n-      route: \"/login/voiceid\",\r\n-\r\n-      response: \"Here's Voice Login. Please proceed.\",\r\n-    },\r\n-\r\n-    {\r\n-      utterance: \"i want to login with voice\",\r\n-\r\n-      route: \"/login/voiceid\",\r\n-\r\n-      response: \"Here's Voice Login. Please proceed.\",\r\n-    },\r\n-\r\n-    {\r\n-      utterance: \"go to voice login\",\r\n-\r\n-      route: \"/login/voiceid\",\r\n-\r\n-      response: \"Here's Voice Login. Please proceed.\",\r\n-    },\r\n-\r\n-    {\r\n-      utterance: \"login with voice\",\r\n-\r\n-      route: \"/login/voiceid\",\r\n-\r\n-      response: \"Here's Voice Login. Please proceed.\",\r\n-    },\r\n-\r\n-    {\r\n-      utterance: \"login with mobile\",\r\n-\r\n-      route: \"/login/mobile\",\r\n-\r\n-      response: \"Here's Mobile Login. Please proceed.\",\r\n-    },\r\n-\r\n-    {\r\n-      utterance: \"i want to login with mobile\",\r\n-\r\n-      route: \"/login/mobile\",\r\n-\r\n-      response: \"Here's Mobile Login. Please proceed.\",\r\n-    },\r\n-    {\r\n-      utterance: \"go to mobile login\",\r\n-\r\n-      route: \"/login/mobile\",\r\n-\r\n-      response: \"Here's Mobile Login. Please proceed.\",\r\n-    },\r\n-    {\r\n-      utterance: \"go to about page\",\r\n-\r\n-      route: \"/aboutus\",\r\n-\r\n-      response: \"This is About us.\",\r\n-    },\r\n-    {\r\n-      utterance: \"go to about us page\",\r\n-\r\n-      route: \"/aboutus\",\r\n-\r\n-      response: \"This is About us.\",\r\n-    },\r\n-    {\r\n-      utterance: \"open about us page\",\r\n-\r\n-      route: \"/aboutus\",\r\n-\r\n-      response: \"This is About us.\",\r\n-    },\r\n-    {\r\n-      utterance: \"open about page\",\r\n-\r\n-      route: \"/aboutus\",\r\n-\r\n-      response: \"This is About us.\",\r\n-    },\r\n-    {\r\n-      utterance: \"take me to about page\",\r\n-\r\n-      route: \"/aboutus\",\r\n-\r\n-      response: \"This is About us.\",\r\n-    },\r\n-    {\r\n-      utterance: \"take me to about us page\",\r\n-\r\n-      route: \"/aboutus\",\r\n-\r\n-      response: \"This is About us.\",\r\n-    },\r\n-\r\n-    {\r\n-      utterance: \"go to contact page\",\r\n-\r\n-      route: \"/contactus\",\r\n-\r\n-      response: \"You can contact us from here\",\r\n-    },\r\n-    {\r\n-      utterance: \"go to contact us page\",\r\n-\r\n-      route: \"/contactus\",\r\n-\r\n-      response: \"You can contact us from here\",\r\n-    },\r\n-    {\r\n-      utterance: \"open contact us page\",\r\n-\r\n-      route: \"/contactus\",\r\n-\r\n-      response: \"You can contact us from here\",\r\n-    },\r\n-    {\r\n-      utterance: \"open contact page\",\r\n-\r\n-      route: \"/contactus\",\r\n-\r\n-      response: \"You can contact us from here\",\r\n-    },\r\n-    {\r\n-      utterance: \"take me to about page\",\r\n-\r\n-      route: \"/contactus\",\r\n-\r\n-      response: \"You can contact us from here\",\r\n-    },\r\n-    {\r\n-      utterance: \"take me to contact us page\",\r\n-\r\n-      route: \"/contactus\",\r\n-\r\n-      response: \"You can contact us from here\",\r\n-    },\r\n-\r\n-    {\r\n-      utterance: \"what are platform features\",\r\n-\r\n-      response:\r\n-        \"Dashboard, Dynamic time table, Learning Networks, Little Masters, Video Based Dictionary, General Search.\",\r\n-    },\r\n-\r\n-    {\r\n-      utterance: \"Features of platform\",\r\n-\r\n-      response:\r\n-        \"Dashboard, Dynamic time table, Learning Networks, Little Masters, Video Based Dictionary, General Search.\",\r\n-    },\r\n-\r\n-    {\r\n-      utterance: \"What does the platform offer\",\r\n-\r\n-      response:\r\n-        \"Dashboard, Dynamic time table, Learning Networks, Little Masters, Video Based Dictionary, General Search.\",\r\n-    },\r\n-\r\n-    {\r\n-      utterance: \"Say me the features of platform\",\r\n-\r\n-      response:\r\n-        \"Dashboard, Dynamic time table, Learning Networks, Little Masters, Video Based Dictionary, General Search.\",\r\n-    },\r\n-\r\n-    {\r\n-      utterance: \"Say me the services of platform\",\r\n-\r\n-      response:\r\n-        \"Dashboard, Dynamic time table, Learning Networks, Little Masters, Video Based Dictionary, General Search.\",\r\n-    },\r\n-\r\n-    {\r\n-      utterance: \"tell me the services offered by the platform\",\r\n-\r\n-      response:\r\n-        \"Dashboard, Dynamic time table, Learning Networks, Little Masters, Video Based Dictionary, General Search.\",\r\n-    },\r\n-\r\n-    {\r\n-      utterance: \"explain platform services\",\r\n-\r\n-      response:\r\n-        \"Dashboard, Dynamic time table, Learning Networks, Little Masters, Video Based Dictionary, General Search.\",\r\n-    },\r\n-\r\n-    {\r\n-      utterance: \"Give me the Parent voice of Julia Harris\",\r\n-\r\n-      response:\r\n-        \"Brane education has helped my son a lot in his studies. He improved a lot in his studies and is now able to score good marks in his exams\",\r\n-    },\r\n-\r\n-    {\r\n-      utterance: \"Leaders Voice\",\r\n-\r\n-      response:\r\n-        \"This Voice-interactive AI Platform is a game Changer. It revolutionizes education.\",\r\n-    },\r\n-\r\n-    {\r\n-      utterance: \"Curriculum Supported by Brane Education\",\r\n-\r\n-      response:\r\n-        \"we support multiple Boards let me say few Telangana State Board Andhra Pradesh Board Maharashtra Board Assam Board\",\r\n-    },\r\n-\r\n-    {\r\n-      utterance: \"Boards supported by the platform\",\r\n-\r\n-      response:\r\n-        \"we support multiple Boards let me say few Telangana State Board Andhra Pradesh Board Maharashtra Board Assam Board\",\r\n-    },\r\n-\r\n-    {\r\n-      utterance: \"Curriculum\",\r\n-\r\n-      response:\r\n-        \"we support multiple Boards let me say few Telangana State Board Andhra Pradesh Board Maharashtra Board Assam Board\",\r\n-    },\r\n-\r\n-    {\r\n-      utterance: \"what is today's quote\",\r\n-\r\n-      response:\r\n-        \"Determination is the power that sees us through all our frustration and obstacles. It helps in building our willpower which is the very basis of success.\",\r\n-\r\n-      route: \"/childpage\",\r\n-    },\r\n-\r\n-    {\r\n-      utterance: \"Today's Inspirational quote\",\r\n-\r\n-      response:\r\n-        \"Determination is the power that sees us through all our frustration and obstacles. It helps in building our willpower which is the very basis of success.\",\r\n-\r\n-      route: \"/childpage\",\r\n-    },\r\n-\r\n-    {\r\n-      utterance: \"say me today's quote\",\r\n-\r\n-      response:\r\n-        \"Determination is the power that sees us through all our frustration and obstacles. It helps in building our willpower which is the very basis of success.\",\r\n-\r\n-      route: \"/childpage\",\r\n-    },\r\n-    {\r\n-      utterance: \"go back\",\r\n-      response: \"\",\r\n-      action: goBack, // Note the use of an action property\r\n-    },\r\n-    {\r\n-      utterance: \"go forward\",\r\n-      response: \"\",\r\n-      action: goForward,\r\n-    },\r\n-    // {\r\n-    //   utterance: \"play video\",\r\n-    //   // response: \"Playing video.\",\r\n-    //   action: playVideo,\r\n-    // },\r\n-    // {\r\n-    //   utterance: \"pause video\",\r\n-    //   // response: \"Pausing video.\",\r\n-    //   action: pauseVideo,\r\n-    // },\r\n-    // {\r\n-    //   utterance: \"start video\",\r\n-    //   // response: \"Playing video.\",\r\n-    //   action: playVideo,\r\n-    // },\r\n-    // {\r\n-    //   utterance: \"stop video\",\r\n-    //   // response: \"Playing video.\",\r\n-    //   action: pauseVideo,\r\n-    // },\r\n-    {\r\n-      utterance: \"scroll up\",\r\n-      // response: \"Scrolling up.\",\r\n-      action: scrollUp,\r\n-    },\r\n-    {\r\n-      utterance: \"scroll down\",\r\n-      // response: \"Scrolling down.\",\r\n-      action: scrollDown,\r\n-    },\r\n-    {\r\n-      utterance: \"go up\",\r\n-\r\n-      // response: \"Scrolling up.\",\r\n-      action: scrollUp,\r\n-    },\r\n-    {\r\n-      utterance: \"go down\",\r\n-      // response: \"Scrolling down.\",\r\n-      action: scrollDown,\r\n-    },\r\n-    {\r\n-      utterance: \"scroll to top\",\r\n-      action: scrollToTop,\r\n-    },\r\n-    {\r\n-      utterance: \"scroll to bottom\",\r\n-      action: scrollToBottom,\r\n-    },\r\n-    {\r\n-      utterance: \"brane stop\",\r\n-      action: stopListening,\r\n-    },\r\n-    {\r\n-      utterance: \"brane turn off\",\r\n-      action: stopListening,\r\n-    },\r\n-    {\r\n-      utterance: \"brane stop the bot\",\r\n-      action: stopListening,\r\n-    },\r\n-    // {\r\n-    //   utterance: \"mute the video\",\r\n-    //   action: muteVideo,\r\n-    // },\r\n-    // {\r\n-    //   utterance: \"unmute the video\",\r\n-    //   action: unmuteVideo,\r\n-    // },\r\n-    // {\r\n-    //   utterance: \"stop the video sound\",\r\n-    //   action: muteVideo,\r\n-    // },\r\n-    // {\r\n-    //   utterance: \"play the video sound\",\r\n-    //   action: unmuteVideo,\r\n-    // },\r\n-    {\r\n-      utterance: \"play transforming education video\",\r\n-      action: () => controlVideo('ourProjectsVideo', 'play'),\r\n-    },\r\n-    {\r\n-      utterance: \"start transforming education video\",\r\n-      action: () => controlVideo('ourProjectsVideo', 'play'),\r\n-    },\r\n-    {\r\n-      utterance: \"pause transforming education video\",\r\n-      action: () => controlVideo('ourProjectsVideo', 'pause'),\r\n-    },\r\n-    {\r\n-      utterance: \"stop transforming education video\",\r\n-      action: () => controlVideo('ourProjectsVideo', 'pause'),\r\n-    },\r\n-\r\n-    {\r\n-      utterance: \"mute transforming education video\",\r\n-      action: () => controlVideo('ourProjectsVideo', 'mute'),\r\n-    },\r\n-    {\r\n-      utterance: \"unmute transforming education video\",\r\n-      action: () => controlVideo('ourProjectsVideo', 'unmute'),\r\n-    },\r\n-    {\r\n-      utterance: \"fullscreen transforming education video\",\r\n-      action: () => controlVideo('ourProjectsVideo', 'fullscreen'),\r\n-    },\r\n-    {\r\n-      utterance: \"exit fullscreen transforming education video\",\r\n-      action: () => controlVideo('ourProjectsVideo', 'exitFullscreen'),\r\n-    },\r\n-    {\r\n-      utterance: \"increase volume transforming education video\",\r\n-      action: () => controlVideo('ourProjectsVideo', 'increaseVolume'),\r\n-    },\r\n-    {\r\n-      utterance: \"decrease volume transforming education video\",\r\n-      action: () => controlVideo('ourProjectsVideo', 'decreaseVolume'),\r\n-    },\r\n-    {\r\n       utterance: \"play leaders voice video\",\r\n-      action: () => controlVideo('leadersVoiceVideo', 'play'),\r\n+      action: () => controlVideo(\"leadersVoiceVideo\", \"play\"),\r\n     },\r\n     {\r\n       utterance: \"start leaders voice video\",\r\n-      action: () => controlVideo('leadersVoiceVideo', 'play'),\r\n+      action: () => controlVideo(\"leadersVoiceVideo\", \"play\"),\r\n     },\r\n     {\r\n       utterance: \"pause leaders voice video\",\r\n-      action: () => controlVideo('leadersVoiceVideo', 'pause'),\r\n+      action: () => controlVideo(\"leadersVoiceVideo\", \"pause\"),\r\n     },\r\n     {\r\n       utterance: \"stop leaders voice video\",\r\n-      action: () => controlVideo('leadersVoiceVideo', 'pause'),\r\n+      action: () => controlVideo(\"leadersVoiceVideo\", \"pause\"),\r\n     },\r\n     {\r\n       utterance: \"mute leaders voice video\",\r\n-      action: () => controlVideo('leadersVoiceVideo', 'mute'),\r\n+      action: () => controlVideo(\"leadersVoiceVideo\", \"mute\"),\r\n     },\r\n     {\r\n       utterance: \"unmute leaders voice video\",\r\n-      action: () => controlVideo('leadersVoiceVideo', 'unmute'),\r\n+      action: () => controlVideo(\"leadersVoiceVideo\", \"unmute\"),\r\n     },\r\n     {\r\n       utterance: \"fullscreen leaders voice video\",\r\n-      action: () => controlVideo('leadersVoiceVideo', 'fullscreen'),\r\n+      action: () => controlVideo(\"leadersVoiceVideo\", \"fullscreen\"),\r\n     },\r\n     {\r\n       utterance: \"exit fullscreen leaders voice video\",\r\n-      action: () => controlVideo('leadersVoiceVideo', 'exitFullscreen'),\r\n+      action: () => controlVideo(\"leadersVoiceVideo\", \"exitFullscreen\"),\r\n     },\r\n     {\r\n       utterance: \"increase volume leaders voice video\",\r\n-      action: () => controlVideo('leadersVoiceVideo', 'increaseVolume'),\r\n+      action: () => controlVideo(\"leadersVoiceVideo\", \"increaseVolume\"),\r\n     },\r\n     {\r\n       utterance: \"decrease volume leaders voice video\",\r\n-      action: () => controlVideo('leadersVoiceVideo', 'decreaseVolume'),\r\n+      action: () => controlVideo(\"leadersVoiceVideo\", \"decreaseVolume\"),\r\n     },\r\n-    \r\n   ];\r\n \r\n   return (\r\n     <div className=\"speech-bot-container\">\r\n@@ -7555,3763 +3812,4 @@\n //   );\r\n // };\r\n \r\n // export default VoiceBot;\r\n-import React, { useState, useEffect, useRef } from \"react\";\r\n-import { useNavigate, useLocation } from \"react-router-dom\";\r\n-import Fuse from \"fuse.js\";\r\n-import \"./VoiceBot.css\";\r\n-import chatbotimage from \"../../assets/chatbotgif.gif\";\r\n-\r\n-const VoiceBot = ({ videoRefs }) => {\r\n-  const [isListening, setIsListening] = useState(false);\r\n-  const [isSpeaking, setIsSpeaking] = useState(false);\r\n-  const recognition = useRef(null);\r\n-  const speechSynthesis = useRef(window.speechSynthesis);\r\n-  const [hasGreeted, setHasGreeted] = useState(false);\r\n-  const navigate = useNavigate();\r\n-\r\n-  // Initialize speech recognition\r\n-  useEffect(() => {\r\n-    recognition.current = new window.webkitSpeechRecognition();\r\n-    recognition.current.continuous = true;\r\n-    recognition.current.interimResults = false;\r\n-    recognition.current.onresult = onResult;\r\n-    recognition.current.onend = onRecognitionEnd;\r\n-    recognition.current.starting = false;\r\n-\r\n-    recognition.current.onerror = (event) => {\r\n-      console.error(\"Recognition error:\", event.error);\r\n-      if (isListening && !isSpeaking) {\r\n-        restartRecognition();\r\n-      }\r\n-    };\r\n-\r\n-    return () => {\r\n-      if (recognition.current) {\r\n-        recognition.current.abort();\r\n-      }\r\n-    };\r\n-  }, []);\r\n-\r\n-  useEffect(() => {\r\n-    const checkRecognition = () => {\r\n-      if (isListening && !isSpeaking && !recognition.current.starting) {\r\n-        console.log(\"Restarting recognition because it's not active.\");\r\n-        recognition.current.starting = true;\r\n-        recognition.current.start();\r\n-        console.log(\"Restarted recognition.\");\r\n-      }\r\n-    };\r\n-\r\n-    const recognitionCheckInterval = setInterval(checkRecognition, 500); // Check every .5 second\r\n-\r\n-    return () => {\r\n-      clearInterval(recognitionCheckInterval);\r\n-    };\r\n-  }, [isListening, isSpeaking]);\r\n-\r\n-  const historyStack = useRef([]);\r\n-\r\n-  useEffect(() => {\r\n-    return () => {\r\n-      // Clean up the listener when the component unmounts\r\n-      window.removeEventListener(\"popstate\", handlePopState);\r\n-    };\r\n-  }, []);\r\n-\r\n-  const handlePopState = () => {\r\n-    // This needs to handle both back and forward browser actions\r\n-    // Use some logic to determine whether it's a back or forward action\r\n-    // For simplicity, assume it's always back\r\n-    historyStack.current.pop();\r\n-    forwardStack.current.length = 0; // Clear forward stack on manual navigation\r\n-  };\r\n-\r\n-  // Listen to popstate events to update the history stack\r\n-  useEffect(() => {\r\n-    window.addEventListener(\"popstate\", handlePopState);\r\n-  }, []);\r\n-\r\n-  const forwardStack = useRef([]);\r\n-\r\n-  const goBack = () => {\r\n-    if (window.history.state && window.history.state.idx > 0) {\r\n-      window.history.back();\r\n-      speak(\"Going back\");\r\n-    } else {\r\n-      speak(\"Can't go back any further.\");\r\n-    }\r\n-  };\r\n-\r\n-  const goForward = () => {\r\n-    if (\r\n-      window.history.state &&\r\n-      window.history.state.idx < window.history.length - 1\r\n-    ) {\r\n-      window.history.forward();\r\n-      speak(\"Going forward\");\r\n-    } else {\r\n-      speak(\"No forward history available.\");\r\n-    }\r\n-  };\r\n-\r\n-  const scrollAmount = window.innerHeight * 0.82;\r\n-\r\n-  const scrollUp = () => {\r\n-    if (window.pageYOffset === 0) {\r\n-      speak(\"Already at the top of the page.\");\r\n-    } else {\r\n-      window.scrollBy(0, -scrollAmount);\r\n-      speak(\"Scrolled up.\");\r\n-    }\r\n-  };\r\n-\r\n-  const scrollDown = () => {\r\n-    const maxScrollTop =\r\n-      document.documentElement.scrollHeight - window.innerHeight;\r\n-    if (window.pageYOffset >= maxScrollTop) {\r\n-      speak(\"Already at the bottom of the page.\");\r\n-    } else {\r\n-      window.scrollBy(0, scrollAmount);\r\n-      speak(\"Scrolled down.\");\r\n-    }\r\n-  };\r\n-\r\n-  const scrollToTop = () => {\r\n-    if (window.pageYOffset === 0) {\r\n-      speak(\"Already at the top of the page.\");\r\n-    } else {\r\n-      window.scrollTo(0, 0);\r\n-      speak(\"Scrolled to the top of the page.\");\r\n-    }\r\n-  };\r\n-\r\n-  const scrollToBottom = () => {\r\n-    const maxScrollTop =\r\n-      document.documentElement.scrollHeight - window.innerHeight;\r\n-    if (window.pageYOffset >= maxScrollTop) {\r\n-      speak(\"Already at the bottom of the page.\");\r\n-    } else {\r\n-      window.scrollTo(0, document.body.scrollHeight);\r\n-      speak(\"Scrolled to the bottom of the page.\");\r\n-    }\r\n-  };\r\n-\r\n-\r\n-  const controlVideo = (videoId, action) => {\r\n-    const videoRef = videoRefs.current.get(videoId);\r\n-    if (videoRef && videoRef.current) {\r\n-      switch (action) {\r\n-        case 'play':\r\n-          videoRef.current.play();\r\n-          break;\r\n-        case 'pause':\r\n-          videoRef.current.pause();\r\n-          break;\r\n-        case 'mute':\r\n-          videoRef.current.muted = true;\r\n-          break;\r\n-        case 'unmute':\r\n-          videoRef.current.muted = false;\r\n-          break;\r\n-        case 'fullscreen':\r\n-          if (videoRef.current.requestFullscreen) {\r\n-            videoRef.current.requestFullscreen();\r\n-          } else if (videoRef.current.webkitRequestFullscreen) { // Safari\r\n-            videoRef.current.webkitRequestFullscreen();\r\n-          } else if (videoRef.current.msRequestFullscreen) { // IE11\r\n-            videoRef.current.msRequestFullscreen();\r\n-          }\r\n-          break;\r\n-        case 'exitFullscreen':\r\n-          if (document.exitFullscreen) {\r\n-            document.exitFullscreen();\r\n-          } else if (document.webkitExitFullscreen) { // Safari\r\n-            document.webkitExitFullscreen();\r\n-          } else if (document.msExitFullscreen) { // IE11\r\n-            document.msExitFullscreen();\r\n-          }\r\n-          break;\r\n-        case 'increaseVolume':\r\n-          if (videoRef.current.volume < 1) {\r\n-            videoRef.current.volume = Math.min(1, videoRef.current.volume + 0.1);\r\n-          }\r\n-          break;\r\n-        case 'decreaseVolume':\r\n-          if (videoRef.current.volume > 0) {\r\n-            videoRef.current.volume = Math.max(0, videoRef.current.volume - 0.1);\r\n-          }\r\n-          break;\r\n-        // Add other cases as needed\r\n-      }\r\n-      speak(`${action.charAt(0).toUpperCase() + action.slice(1).replace(/([A-Z])/g, ' $1').toLowerCase()}ing video.`);\r\n-    } else {\r\n-      speak(`Video not found.`);\r\n-    }\r\n-  };\r\n-\r\n-  const speak = (message) => {\r\n-    const utterance = new SpeechSynthesisUtterance(message);\r\n-    utterance.onend = () => {\r\n-      setIsSpeaking(false);\r\n-      // Restart recognition after speaking has ended\r\n-      if (isListening) {\r\n-        restartRecognition();\r\n-      }\r\n-    };\r\n-\r\n-    setIsSpeaking(true);\r\n-    // Stop recognition when the bot starts speaking\r\n-    if (recognition.current) {\r\n-      recognition.current.abort();\r\n-    }\r\n-    speechSynthesis.current.speak(utterance);\r\n-  };\r\n-\r\n-  const restartRecognition = () => {\r\n-    // Check if recognition is not already started and if the bot is set to listen\r\n-    if (\r\n-      recognition.current &&\r\n-      !recognition.current.starting &&\r\n-      isListening &&\r\n-      !isSpeaking\r\n-    ) {\r\n-      recognition.current.abort(); // Ensure any ongoing recognition is stopped\r\n-      recognition.current.starting = true;\r\n-      recognition.current.start();\r\n-    }\r\n-  };\r\n-\r\n-  // Restart recognition when bot finishes speaking and isListening is true\r\n-  useEffect(() => {\r\n-    if (!isSpeaking && isListening) {\r\n-      restartRecognition();\r\n-    }\r\n-  }, [isSpeaking, isListening]);\r\n-\r\n-  const onResult = (event) => {\r\n-    const resultIndex = event.resultIndex;\r\n-    const transcript = event.results[resultIndex][0].transcript\r\n-      .trim()\r\n-      .toLowerCase();\r\n-\r\n-    if (event.results[resultIndex].isFinal) {\r\n-      console.log(`Recognized text: ${transcript}`);\r\n-      if (transcript.includes(\"brain\")) {\r\n-        console.log(\"Wake word heard, processing command...\");\r\n-        handleCommandWithFuse(transcript.replace(\"brain\", \"\"));\r\n-      }\r\n-    }\r\n-  };\r\n-\r\n-  const onRecognitionEnd = () => {\r\n-    recognition.current.starting = false;\r\n-    if (isListening && !isSpeaking) {\r\n-      restartRecognition();\r\n-    }\r\n-  };\r\n-\r\n-  useEffect(() => {\r\n-    if (isListening && !hasGreeted) {\r\n-      speak(\"Hello, I'm Brane. How can I help you today?\");\r\n-      setHasGreeted(true);\r\n-    }\r\n-  }, [isListening, hasGreeted]);\r\n-\r\n-  // Updated startListening function\r\n-  const startListening = () => {\r\n-    setIsListening(true);\r\n-    if (!recognition.current.starting) {\r\n-      restartRecognition();\r\n-    }\r\n-  };\r\n-\r\n-  // Updated stopListening function\r\n-  const stopListening = () => {\r\n-    setIsListening(false);\r\n-    if (speechSynthesis.current.speaking) {\r\n-      speechSynthesis.current.cancel();\r\n-    }\r\n-    recognition.current.abort();\r\n-  };\r\n-\r\n-  const handleCommandWithFuse = (command) => {\r\n-    const fuse = new Fuse(commands, { keys: [\"utterance\"], threshold: 0.4 });\r\n-    const results = fuse.search(command);\r\n-    const foundCommand = results.length ? results[0].item : null;\r\n-\r\n-    if (foundCommand) {\r\n-      console.log(\"Command found:\", foundCommand.utterance);\r\n-\r\n-      if (foundCommand.action) {\r\n-        foundCommand.action();\r\n-      } else if (foundCommand.route) {\r\n-        navigate(foundCommand.route);\r\n-      }\r\n-\r\n-      // Speak after performing the action or navigation\r\n-      speak(foundCommand.response);\r\n-    } else {\r\n-      console.log(\"No command found.\");\r\n-      speak(\"I'm not sure how to respond to that.\");\r\n-    }\r\n-  };\r\n-\r\n-  const commands = [\r\n-    {\r\n-      utterance: \"Hello who are you ?\",\r\n-\r\n-      response:\r\n-        \"Hi! This is Brane! your Voice bot from Brane Education How can I Assist you Today ?\",\r\n-    },\r\n-\r\n-    {\r\n-      utterance: \"Hello\",\r\n-\r\n-      response: \"Hi! How can I assist you today?\",\r\n-    },\r\n-\r\n-    {\r\n-      utterance: \"hello\",\r\n-\r\n-      response: \"Hi! How can I assist you today?\",\r\n-    },\r\n-\r\n-    {\r\n-      utterance: \"Hi.\",\r\n-\r\n-      response: \"Hello! How can I assist you today?\",\r\n-    },\r\n-\r\n-    {\r\n-      utterance: \"Hey there\",\r\n-\r\n-      response: \"Hi! How can I assist you today?\",\r\n-    },\r\n-\r\n-    {\r\n-      utterance: \"Good morning Brane.\",\r\n-\r\n-      response: \"Hey Hiii! Good morning  ! How can I help you?\",\r\n-    },\r\n-\r\n-    {\r\n-      utterance: \"Good afternoon Brane.\",\r\n-\r\n-      response: \"Hey Hiii! Good after noon ! How can I help you?\",\r\n-    },\r\n-\r\n-    {\r\n-      utterance: \"Good evening Brane.\",\r\n-\r\n-      response: \"Hey Hiii! Good evening ! How can I help you?\",\r\n-    },\r\n-\r\n-    {\r\n-      utterance: \"take me to homepage\",\r\n-\r\n-      route: \"/\",\r\n-\r\n-      response: \"You're in Homepage now\",\r\n-    },\r\n-    {\r\n-      utterance: \"open homepage\",\r\n-\r\n-      route: \"/\",\r\n-\r\n-      response: \"You're in Homepage now\",\r\n-    },\r\n-    {\r\n-      utterance: \"go to homepage\",\r\n-\r\n-      route: \"/\",\r\n-\r\n-      response: \"You're in Homepage now\",\r\n-    },\r\n-    {\r\n-      utterance: \"go back to homepage\",\r\n-\r\n-      route: \"/\",\r\n-\r\n-      response: \"You're in Homepage now\",\r\n-    },\r\n-    {\r\n-      utterance: \"can you please take me to login page\",\r\n-\r\n-      route: \"/login\",\r\n-\r\n-      response: \"Here's the Login Page, Please Login\",\r\n-    },\r\n-\r\n-    {\r\n-      utterance: \"please take me to login page\",\r\n-\r\n-      route: \"/login\",\r\n-\r\n-      response: \"Here's the Login Page, Please Login\",\r\n-    },\r\n-\r\n-    {\r\n-      utterance: \"Go to login page\",\r\n-\r\n-      route: \"/login\",\r\n-\r\n-      response: \"Here's the Login Page, Please Login\",\r\n-    },\r\n-\r\n-    {\r\n-      utterance: \"open login page\",\r\n-\r\n-      route: \"/login\",\r\n-\r\n-      response: \"Here's the Login Page, Please Login\",\r\n-    },\r\n-\r\n-    {\r\n-      utterance: \"can you please take me to signup page\",\r\n-\r\n-      route: \"/signup\",\r\n-\r\n-      response: \"Here's the signup page. Please proceed With Registration.\",\r\n-    },\r\n-\r\n-    {\r\n-      utterance: \"take me to signup page\",\r\n-\r\n-      route: \"/signup\",\r\n-\r\n-      response: \"Here's the signup page. Please proceed With Registration.\",\r\n-    },\r\n-\r\n-    {\r\n-      utterance: \"Go to signup page\",\r\n-\r\n-      route: \"/signup\",\r\n-\r\n-      response: \"Here's the signup page. Please proceed With Registration.\",\r\n-    },\r\n-\r\n-    {\r\n-      utterance: \"open signup page\",\r\n-\r\n-      route: \"/signup\",\r\n-\r\n-      response: \"Here's the signup page. Please proceed With Registration.\",\r\n-    },\r\n-\r\n-    {\r\n-      utterance: \"Go to face id\",\r\n-\r\n-      route: \"/login/faceid\",\r\n-\r\n-      response: \"Here's Face ID Login. Please proceed.\",\r\n-    },\r\n-\r\n-    {\r\n-      utterance: \"Go to face id login\",\r\n-\r\n-      route: \"/login/faceid\",\r\n-\r\n-      response: \"Here's Face ID Login. Please proceed.\",\r\n-    },\r\n-    {\r\n-      utterance: \"Go to face login\",\r\n-\r\n-      route: \"/login/faceid\",\r\n-\r\n-      response: \"Here's Face ID Login. Please proceed.\",\r\n-    },\r\n-\r\n-    {\r\n-      utterance: \"login with face id\",\r\n-\r\n-      route: \"/login/faceid\",\r\n-\r\n-      response: \"Here's Face ID Login. Please proceed.\",\r\n-    },\r\n-\r\n-    {\r\n-      utterance: \"login with face\",\r\n-\r\n-      route: \"/login/faceid\",\r\n-\r\n-      response: \"Here's Face ID Login. Please proceed.\",\r\n-    },\r\n-\r\n-    {\r\n-      utterance: \"i want to login with face\",\r\n-\r\n-      route: \"/login/faceid\",\r\n-\r\n-      response: \"Here's Face ID Login. Please proceed.\",\r\n-    },\r\n-\r\n-    {\r\n-      utterance: \"login with voice\",\r\n-\r\n-      route: \"/login/voiceid\",\r\n-\r\n-      response: \"Here's Voice Login. Please proceed.\",\r\n-    },\r\n-\r\n-    {\r\n-      utterance: \"i want to login with voice\",\r\n-\r\n-      route: \"/login/voiceid\",\r\n-\r\n-      response: \"Here's Voice Login. Please proceed.\",\r\n-    },\r\n-\r\n-    {\r\n-      utterance: \"go to voice login\",\r\n-\r\n-      route: \"/login/voiceid\",\r\n-\r\n-      response: \"Here's Voice Login. Please proceed.\",\r\n-    },\r\n-\r\n-    {\r\n-      utterance: \"login with voice\",\r\n-\r\n-      route: \"/login/voiceid\",\r\n-\r\n-      response: \"Here's Voice Login. Please proceed.\",\r\n-    },\r\n-\r\n-    {\r\n-      utterance: \"login with mobile\",\r\n-\r\n-      route: \"/login/mobile\",\r\n-\r\n-      response: \"Here's Mobile Login. Please proceed.\",\r\n-    },\r\n-\r\n-    {\r\n-      utterance: \"i want to login with mobile\",\r\n-\r\n-      route: \"/login/mobile\",\r\n-\r\n-      response: \"Here's Mobile Login. Please proceed.\",\r\n-    },\r\n-    {\r\n-      utterance: \"go to mobile login\",\r\n-\r\n-      route: \"/login/mobile\",\r\n-\r\n-      response: \"Here's Mobile Login. Please proceed.\",\r\n-    },\r\n-    {\r\n-      utterance: \"go to about page\",\r\n-\r\n-      route: \"/aboutus\",\r\n-\r\n-      response: \"This is About us.\",\r\n-    },\r\n-    {\r\n-      utterance: \"go to about us page\",\r\n-\r\n-      route: \"/aboutus\",\r\n-\r\n-      response: \"This is About us.\",\r\n-    },\r\n-    {\r\n-      utterance: \"open about us page\",\r\n-\r\n-      route: \"/aboutus\",\r\n-\r\n-      response: \"This is About us.\",\r\n-    },\r\n-    {\r\n-      utterance: \"open about page\",\r\n-\r\n-      route: \"/aboutus\",\r\n-\r\n-      response: \"This is About us.\",\r\n-    },\r\n-    {\r\n-      utterance: \"take me to about page\",\r\n-\r\n-      route: \"/aboutus\",\r\n-\r\n-      response: \"This is About us.\",\r\n-    },\r\n-    {\r\n-      utterance: \"take me to about us page\",\r\n-\r\n-      route: \"/aboutus\",\r\n-\r\n-      response: \"This is About us.\",\r\n-    },\r\n-\r\n-    {\r\n-      utterance: \"go to contact page\",\r\n-\r\n-      route: \"/contactus\",\r\n-\r\n-      response: \"You can contact us from here\",\r\n-    },\r\n-    {\r\n-      utterance: \"go to contact us page\",\r\n-\r\n-      route: \"/contactus\",\r\n-\r\n-      response: \"You can contact us from here\",\r\n-    },\r\n-    {\r\n-      utterance: \"open contact us page\",\r\n-\r\n-      route: \"/contactus\",\r\n-\r\n-      response: \"You can contact us from here\",\r\n-    },\r\n-    {\r\n-      utterance: \"open contact page\",\r\n-\r\n-      route: \"/contactus\",\r\n-\r\n-      response: \"You can contact us from here\",\r\n-    },\r\n-    {\r\n-      utterance: \"take me to about page\",\r\n-\r\n-      route: \"/contactus\",\r\n-\r\n-      response: \"You can contact us from here\",\r\n-    },\r\n-    {\r\n-      utterance: \"take me to contact us page\",\r\n-\r\n-      route: \"/contactus\",\r\n-\r\n-      response: \"You can contact us from here\",\r\n-    },\r\n-\r\n-    {\r\n-      utterance: \"what are platform features\",\r\n-\r\n-      response:\r\n-        \"Dashboard, Dynamic time table, Learning Networks, Little Masters, Video Based Dictionary, General Search.\",\r\n-    },\r\n-\r\n-    {\r\n-      utterance: \"Features of platform\",\r\n-\r\n-      response:\r\n-        \"Dashboard, Dynamic time table, Learning Networks, Little Masters, Video Based Dictionary, General Search.\",\r\n-    },\r\n-\r\n-    {\r\n-      utterance: \"What does the platform offer\",\r\n-\r\n-      response:\r\n-        \"Dashboard, Dynamic time table, Learning Networks, Little Masters, Video Based Dictionary, General Search.\",\r\n-    },\r\n-\r\n-    {\r\n-      utterance: \"Say me the features of platform\",\r\n-\r\n-      response:\r\n-        \"Dashboard, Dynamic time table, Learning Networks, Little Masters, Video Based Dictionary, General Search.\",\r\n-    },\r\n-\r\n-    {\r\n-      utterance: \"Say me the services of platform\",\r\n-\r\n-      response:\r\n-        \"Dashboard, Dynamic time table, Learning Networks, Little Masters, Video Based Dictionary, General Search.\",\r\n-    },\r\n-\r\n-    {\r\n-      utterance: \"tell me the services offered by the platform\",\r\n-\r\n-      response:\r\n-        \"Dashboard, Dynamic time table, Learning Networks, Little Masters, Video Based Dictionary, General Search.\",\r\n-    },\r\n-\r\n-    {\r\n-      utterance: \"explain platform services\",\r\n-\r\n-      response:\r\n-        \"Dashboard, Dynamic time table, Learning Networks, Little Masters, Video Based Dictionary, General Search.\",\r\n-    },\r\n-\r\n-    {\r\n-      utterance: \"Give me the Parent voice of Julia Harris\",\r\n-\r\n-      response:\r\n-        \"Brane education has helped my son a lot in his studies. He improved a lot in his studies and is now able to score good marks in his exams\",\r\n-    },\r\n-\r\n-    {\r\n-      utterance: \"Leaders Voice\",\r\n-\r\n-      response:\r\n-        \"This Voice-interactive AI Platform is a game Changer. It revolutionizes education.\",\r\n-    },\r\n-\r\n-    {\r\n-      utterance: \"Curriculum Supported by Brane Education\",\r\n-\r\n-      response:\r\n-        \"we support multiple Boards let me say few Telangana State Board Andhra Pradesh Board Maharashtra Board Assam Board\",\r\n-    },\r\n-\r\n-    {\r\n-      utterance: \"Boards supported by the platform\",\r\n-\r\n-      response:\r\n-        \"we support multiple Boards let me say few Telangana State Board Andhra Pradesh Board Maharashtra Board Assam Board\",\r\n-    },\r\n-\r\n-    {\r\n-      utterance: \"Curriculum\",\r\n-\r\n-      response:\r\n-        \"we support multiple Boards let me say few Telangana State Board Andhra Pradesh Board Maharashtra Board Assam Board\",\r\n-    },\r\n-\r\n-    {\r\n-      utterance: \"what is today's quote\",\r\n-\r\n-      response:\r\n-        \"Determination is the power that sees us through all our frustration and obstacles. It helps in building our willpower which is the very basis of success.\",\r\n-\r\n-      route: \"/childpage\",\r\n-    },\r\n-\r\n-    {\r\n-      utterance: \"Today's Inspirational quote\",\r\n-\r\n-      response:\r\n-        \"Determination is the power that sees us through all our frustration and obstacles. It helps in building our willpower which is the very basis of success.\",\r\n-\r\n-      route: \"/childpage\",\r\n-    },\r\n-\r\n-    {\r\n-      utterance: \"say me today's quote\",\r\n-\r\n-      response:\r\n-        \"Determination is the power that sees us through all our frustration and obstacles. It helps in building our willpower which is the very basis of success.\",\r\n-\r\n-      route: \"/childpage\",\r\n-    },\r\n-    {\r\n-      utterance: \"go back\",\r\n-      response: \"\",\r\n-      action: goBack, // Note the use of an action property\r\n-    },\r\n-    {\r\n-      utterance: \"go forward\",\r\n-      response: \"\",\r\n-      action: goForward,\r\n-    },\r\n-    // {\r\n-    //   utterance: \"play video\",\r\n-    //   // response: \"Playing video.\",\r\n-    //   action: playVideo,\r\n-    // },\r\n-    // {\r\n-    //   utterance: \"pause video\",\r\n-    //   // response: \"Pausing video.\",\r\n-    //   action: pauseVideo,\r\n-    // },\r\n-    // {\r\n-    //   utterance: \"start video\",\r\n-    //   // response: \"Playing video.\",\r\n-    //   action: playVideo,\r\n-    // },\r\n-    // {\r\n-    //   utterance: \"stop video\",\r\n-    //   // response: \"Playing video.\",\r\n-    //   action: pauseVideo,\r\n-    // },\r\n-    {\r\n-      utterance: \"scroll up\",\r\n-      // response: \"Scrolling up.\",\r\n-      action: scrollUp,\r\n-    },\r\n-    {\r\n-      utterance: \"scroll down\",\r\n-      // response: \"Scrolling down.\",\r\n-      action: scrollDown,\r\n-    },\r\n-    {\r\n-      utterance: \"go up\",\r\n-\r\n-      // response: \"Scrolling up.\",\r\n-      action: scrollUp,\r\n-    },\r\n-    {\r\n-      utterance: \"go down\",\r\n-      // response: \"Scrolling down.\",\r\n-      action: scrollDown,\r\n-    },\r\n-    {\r\n-      utterance: \"scroll to top\",\r\n-      action: scrollToTop,\r\n-    },\r\n-    {\r\n-      utterance: \"scroll to bottom\",\r\n-      action: scrollToBottom,\r\n-    },\r\n-    {\r\n-      utterance: \"brane stop\",\r\n-      action: stopListening,\r\n-    },\r\n-    {\r\n-      utterance: \"brane turn off\",\r\n-      action: stopListening,\r\n-    },\r\n-    {\r\n-      utterance: \"brane stop the bot\",\r\n-      action: stopListening,\r\n-    },\r\n-    // {\r\n-    //   utterance: \"mute the video\",\r\n-    //   action: muteVideo,\r\n-    // },\r\n-    // {\r\n-    //   utterance: \"unmute the video\",\r\n-    //   action: unmuteVideo,\r\n-    // },\r\n-    // {\r\n-    //   utterance: \"stop the video sound\",\r\n-    //   action: muteVideo,\r\n-    // },\r\n-    // {\r\n-    //   utterance: \"play the video sound\",\r\n-    //   action: unmuteVideo,\r\n-    // },\r\n-    {\r\n-      utterance: \"play transforming education video\",\r\n-      action: () => controlVideo('ourProjectsVideo', 'play'),\r\n-    },\r\n-    {\r\n-      utterance: \"start transforming education video\",\r\n-      action: () => controlVideo('ourProjectsVideo', 'play'),\r\n-    },\r\n-    {\r\n-      utterance: \"pause transforming education video\",\r\n-      action: () => controlVideo('ourProjectsVideo', 'pause'),\r\n-    },\r\n-    {\r\n-      utterance: \"stop transforming education video\",\r\n-      action: () => controlVideo('ourProjectsVideo', 'pause'),\r\n-    },\r\n-\r\n-    {\r\n-      utterance: \"mute transforming education video\",\r\n-      action: () => controlVideo('ourProjectsVideo', 'mute'),\r\n-    },\r\n-    {\r\n-      utterance: \"unmute transforming education video\",\r\n-      action: () => controlVideo('ourProjectsVideo', 'unmute'),\r\n-    },\r\n-    {\r\n-      utterance: \"fullscreen transforming education video\",\r\n-      action: () => controlVideo('ourProjectsVideo', 'fullscreen'),\r\n-    },\r\n-    {\r\n-      utterance: \"exit fullscreen transforming education video\",\r\n-      action: () => controlVideo('ourProjectsVideo', 'exitFullscreen'),\r\n-    },\r\n-    {\r\n-      utterance: \"increase volume transforming education video\",\r\n-      action: () => controlVideo('ourProjectsVideo', 'increaseVolume'),\r\n-    },\r\n-    {\r\n-      utterance: \"decrease volume transforming education video\",\r\n-      action: () => controlVideo('ourProjectsVideo', 'decreaseVolume'),\r\n-    },\r\n-    {\r\n-      utterance: \"play leaders voice video\",\r\n-      action: () => controlVideo('leadersVoiceVideo', 'play'),\r\n-    },\r\n-    {\r\n-      utterance: \"start leaders voice video\",\r\n-      action: () => controlVideo('leadersVoiceVideo', 'play'),\r\n-    },\r\n-    {\r\n-      utterance: \"pause leaders voice video\",\r\n-      action: () => controlVideo('leadersVoiceVideo', 'pause'),\r\n-    },\r\n-    {\r\n-      utterance: \"stop leaders voice video\",\r\n-      action: () => controlVideo('leadersVoiceVideo', 'pause'),\r\n-    },\r\n-    {\r\n-      utterance: \"mute leaders voice video\",\r\n-      action: () => controlVideo('leadersVoiceVideo', 'mute'),\r\n-    },\r\n-    {\r\n-      utterance: \"unmute leaders voice video\",\r\n-      action: () => controlVideo('leadersVoiceVideo', 'unmute'),\r\n-    },\r\n-    {\r\n-      utterance: \"fullscreen leaders voice video\",\r\n-      action: () => controlVideo('leadersVoiceVideo', 'fullscreen'),\r\n-    },\r\n-    {\r\n-      utterance: \"exit fullscreen leaders voice video\",\r\n-      action: () => controlVideo('leadersVoiceVideo', 'exitFullscreen'),\r\n-    },\r\n-    {\r\n-      utterance: \"increase volume leaders voice video\",\r\n-      action: () => controlVideo('leadersVoiceVideo', 'increaseVolume'),\r\n-    },\r\n-    {\r\n-      utterance: \"decrease volume leaders voice video\",\r\n-      action: () => controlVideo('leadersVoiceVideo', 'decreaseVolume'),\r\n-    },\r\n-    \r\n-  ];\r\n-\r\n-  return (\r\n-    <div className=\"speech-bot-container\">\r\n-      <div\r\n-        className={`button-container ${\r\n-          isListening ? \"voicebotframeactive\" : \"voicebotframe\"\r\n-        }`}\r\n-      >\r\n-        {/* <button onClick={isListening ? stopListening : startListening}>\r\n-          {isListening ? \"Stop\" : \"Start\"} Animation\r\n-        </button> */}\r\n-        <img\r\n-          className=\"botimage\"\r\n-          src={chatbotimage}\r\n-          alt=\"\"\r\n-          onClick={isListening ? stopListening : startListening}\r\n-        />\r\n-      </div>\r\n-    </div>\r\n-  );\r\n-};\r\n-\r\n-export default VoiceBot;\r\n-\r\n-{\r\n-  /* // import React, { useState, useEffect, useRef } from \"react\";\r\n-// import { useNavigate, useLocation } from \"react-router-dom\";\r\n-// import Fuse from \"fuse.js\";\r\n-// import \"./VoiceBot.css\";\r\n-\r\n-// const VoiceBot = ({ videoRef }) => {\r\n-//   const [isListening, setIsListening] = useState(false);\r\n-//   const [isSpeaking, setIsSpeaking] = useState(false);\r\n-//   const recognition = useRef(null);\r\n-//   const speechSynthesis = useRef(window.speechSynthesis);\r\n-//   const [hasGreeted, setHasGreeted] = useState(false);\r\n-//   const navigate = useNavigate();\r\n-\r\n-//   useEffect(() => {\r\n-//     recognition.current = new window.webkitSpeechRecognition();\r\n-//     recognition.current.continuous = true;\r\n-//     recognition.current.interimResults = false;\r\n-//     recognition.current.onresult = onResult;\r\n-//     recognition.current.onend = onRecognitionEnd;\r\n-//     recognition.current.starting = false;\r\n-\r\n-//     // Simplified error handling, removed specific handling for 'no-speech'\r\n-//     recognition.current.onerror = (event) => {\r\n-//       console.error(\"Recognition error:\", event.error);\r\n-//       // Check if listening is true and the bot isn't speaking\r\n-//       if (isListening && !isSpeaking) {\r\n-//         // Restart recognition\r\n-//         restartRecognition();\r\n-//       }\r\n-//     };\r\n-\r\n-//     return () => {\r\n-//       if (recognition.current) {\r\n-//         recognition.current.abort();\r\n-//       }\r\n-//     };\r\n-//   }, []);\r\n-\r\n-//   useEffect(() => {\r\n-//     const checkRecognition = () => {\r\n-//       if (isListening && !isSpeaking && !recognition.current.starting) {\r\n-//         console.log(\"Restarting recognition because it's not active.\");\r\n-//         recognition.current.starting = true;\r\n-//         recognition.current.start();\r\n-//         console.log(\"Restarted recognition.\");\r\n-//       }\r\n-//     };\r\n-\r\n-//     const recognitionCheckInterval = setInterval(checkRecognition, 100); // Check every 1 second\r\n-\r\n-//     return () => {\r\n-//       clearInterval(recognitionCheckInterval);\r\n-//     };\r\n-//   }, [isListening, isSpeaking]);\r\n-\r\n-//   const restartRecognition = () => {\r\n-//     if (recognition.current.starting) {\r\n-//       console.log(\"Recognition is already starting or running.\");\r\n-//       return;\r\n-//     }\r\n-\r\n-//     recognition.current.abort(); // Stop any existing recognition process\r\n-//     recognition.current.starting = true;\r\n-//     recognition.current.start();\r\n-//     console.log(\"Recognition restarted.\");\r\n-//   };\r\n-\r\n-//   const historyStack = useRef([]);\r\n-\r\n-//   useEffect(() => {\r\n-//     return () => {\r\n-//       // Clean up the listener when the component unmounts\r\n-//       window.removeEventListener(\"popstate\", handlePopState);\r\n-//     };\r\n-//   }, []);\r\n-\r\n-//   const handlePopState = () => {\r\n-//     // This needs to handle both back and forward browser actions\r\n-//     // Use some logic to determine whether it's a back or forward action\r\n-//     // For simplicity, assume it's always back\r\n-//     historyStack.current.pop();\r\n-//     forwardStack.current.length = 0; // Clear forward stack on manual navigation\r\n-//   };\r\n-  \r\n-\r\n-//   // Add a new entry to the stack whenever navigate is called\r\n-//   const customNavigate = (to, options) => {\r\n-//     historyStack.current.push(to);\r\n-//     navigate(to, options);\r\n-//   };\r\n-\r\n-//   // Listen to popstate events to update the history stack\r\n-//   useEffect(() => {\r\n-//     window.addEventListener(\"popstate\", handlePopState);\r\n-//   }, []);\r\n-\r\n-//   const forwardStack = useRef([]);\r\n-\r\n-//   const goBack = () => {\r\n-//     if (window.history.state && window.history.state.idx > 0) {\r\n-//       window.history.back();\r\n-//       speak(\"Going back\");\r\n-//     } else {\r\n-//       speak(\"Can't go back any further.\");\r\n-//     }\r\n-//   };\r\n-\r\n-//   const goForward = () => {\r\n-//     if (window.history.state && window.history.state.idx < window.history.length - 1) {\r\n-//       window.history.forward();\r\n-//       speak(\"Going forward\");\r\n-//     } else {\r\n-//       speak(\"No forward history available.\");\r\n-//     }\r\n-//   };\r\n-\r\n-//   const playVideo = () => {\r\n-//     if (videoRef.current) {\r\n-//       videoRef.current.play();\r\n-//       speak(\"Playing video.\");\r\n-//     } else {\r\n-//       speak(\"No video to play.\");\r\n-//     }\r\n-//   };\r\n-\r\n-//   const pauseVideo = () => {\r\n-//     if (videoRef.current) {\r\n-//       videoRef.current.pause();\r\n-//       speak(\"Video paused.\");\r\n-//     } else {\r\n-//       speak(\"No video to pause.\");\r\n-//     }\r\n-//   };\r\n-\r\n-//   const scrollAmount = window.innerHeight * 0.82;\r\n-\r\n-//   const scrollUp = () => {\r\n-//     if (window.pageYOffset === 0) {\r\n-//       speak(\"Already at the top of the page.\");\r\n-//     } else {\r\n-//       window.scrollBy(0, -scrollAmount);\r\n-//       speak(\"Scrolled up.\");\r\n-//     }\r\n-//   };\r\n-\r\n-//   const scrollDown = () => {\r\n-//     const maxScrollTop =\r\n-//       document.documentElement.scrollHeight - window.innerHeight;\r\n-//     if (window.pageYOffset >= maxScrollTop) {\r\n-//       speak(\"Already at the bottom of the page.\");\r\n-//     } else {\r\n-//       window.scrollBy(0, scrollAmount);\r\n-//       speak(\"Scrolled down.\");\r\n-//     }\r\n-//   };\r\n-\r\n-//   const scrollToTop = () => {\r\n-//     if (window.pageYOffset === 0) {\r\n-//       speak(\"Already at the top of the page.\");\r\n-//     } else {\r\n-//       window.scrollTo(0, 0);\r\n-//       speak(\"Scrolled to the top of the page.\");\r\n-//     }\r\n-//   };\r\n-\r\n-//   const scrollToBottom = () => {\r\n-//     const maxScrollTop =\r\n-//       document.documentElement.scrollHeight - window.innerHeight;\r\n-//     if (window.pageYOffset >= maxScrollTop) {\r\n-//       speak(\"Already at the bottom of the page.\");\r\n-//     } else {\r\n-//       window.scrollTo(0, document.body.scrollHeight);\r\n-//       speak(\"Scrolled to the bottom of the page.\");\r\n-//     }\r\n-//   };\r\n-\r\n-//   const speak = (message) => {\r\n-//     console.log(\"speak function called with message:\", message);\r\n-//     const utterance = new SpeechSynthesisUtterance(message);\r\n-//     utterance.onend = () => {\r\n-//       setIsSpeaking(false);\r\n-//       console.log(\"Speaking ended.\");\r\n-//       if (isListening && !recognition.current.starting) {\r\n-//         console.log(\"Restarting recognition after speaking.\");\r\n-//         recognition.current.starting = true;\r\n-//         recognition.current.start();\r\n-//         console.log(\"Restarted recognition after speaking.\");\r\n-//       }\r\n-//     };\r\n-\r\n-//     setIsSpeaking(true);\r\n-//     console.log(\"Speaking started.\");\r\n-//     recognition.current.stop(); // Ensure to stop recognition before speaking\r\n-//     speechSynthesis.current.speak(utterance);\r\n-//   };\r\n-\r\n-//   const onResult = (event) => {\r\n-//     const resultIndex = event.resultIndex;\r\n-//     const transcript = event.results[resultIndex][0].transcript\r\n-//       .trim()\r\n-//       .toLowerCase();\r\n-\r\n-//     if (event.results[resultIndex].isFinal) {\r\n-//       console.log(`Recognized text: ${transcript}`);\r\n-//       if (transcript.includes(\"brain\")) {\r\n-//         console.log(\"Wake word heard, processing command...\");\r\n-//         handleCommandWithFuse(transcript.replace(\"brain\", \"\"));\r\n-//       }\r\n-//     }\r\n-//   };\r\n-\r\n-//   const onRecognitionEnd = () => {\r\n-//     recognition.current.starting = false;\r\n-//     if (isListening && !isSpeaking) {\r\n-//       restartRecognition();\r\n-//     }\r\n-//   };\r\n-\r\n-//   useEffect(() => {\r\n-//     if (isListening) {\r\n-//       if (!hasGreeted) {\r\n-//         speak(\"Hello, I'm Brane. How can I help you today?\");\r\n-//         setHasGreeted(true);\r\n-//       } else {\r\n-//         speak(\"Listening.\");\r\n-//       }\r\n-//     }\r\n-//   }, [isListening, hasGreeted]);\r\n-\r\n-\r\n-//   const startListening = () => {\r\n-//     if (!recognition.current.starting) {\r\n-//       setIsListening(true);\r\n-//       restartRecognition();\r\n-//     }\r\n-//   };\r\n-\r\n-//   const stopListening = () => {\r\n-//     setIsListening(false);\r\n-//     recognition.current.abort();\r\n-//     if (speechSynthesis.current.speaking) {\r\n-//       speechSynthesis.current.cancel();\r\n-//     }\r\n-//   };\r\n-\r\n-//   const handleCommandWithFuse = (command) => {\r\n-//     const fuse = new Fuse(commands, { keys: [\"utterance\"], threshold: 0.4 });\r\n-//     const results = fuse.search(command);\r\n-//     const foundCommand = results.length ? results[0].item : null;\r\n-\r\n-//     if (foundCommand) {\r\n-//       console.log(\"Command found:\", foundCommand.utterance);\r\n-\r\n-//       if (foundCommand.action) {\r\n-//         foundCommand.action();\r\n-//       } else if (foundCommand.route) {\r\n-//         navigate(foundCommand.route);\r\n-//       }\r\n-\r\n-//       // Speak after performing the action or navigation\r\n-//       speak(foundCommand.response);\r\n-//     } else {\r\n-//       console.log(\"No command found.\");\r\n-//       speak(\"I'm not sure how to respond to that.\");\r\n-//     }\r\n-//   };\r\n-\r\n-//   const commands = [\r\n-//     {\r\n-//       utterance: \"Hello who are you ?\",\r\n-\r\n-//       response:\r\n-//         \"Hi! This is Brane! your Voice bot from Brane Education How can I Assist you Today ?\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"Hello\",\r\n-\r\n-//       response: \"Hi! How can I assist you today?\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"hello\",\r\n-\r\n-//       response: \"Hi! How can I assist you today?\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"Hi.\",\r\n-\r\n-//       response: \"Hello! How can I assist you today?\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"Hey there\",\r\n-\r\n-//       response: \"Hi! How can I assist you today?\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"Good morning Brane.\",\r\n-\r\n-//       response: \"Hey Hiii! Good morning  ! How can I help you?\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"Good afternoon Brane.\",\r\n-\r\n-//       response: \"Hey Hiii! Good after noon ! How can I help you?\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"Good evening Brane.\",\r\n-\r\n-//       response: \"Hey Hiii! Good evening ! How can I help you?\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"can you please take me to login page\",\r\n-\r\n-//       route: \"/login\",\r\n-\r\n-//       response: \"Here's the Login Page, Please Login\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"please take me to login page\",\r\n-\r\n-//       route: \"/login\",\r\n-\r\n-//       response: \"Here's the Login Page, Please Login\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"Go to login page\",\r\n-\r\n-//       route: \"/login\",\r\n-\r\n-//       response: \"Here's the Login Page, Please Login\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"open login page\",\r\n-\r\n-//       route: \"/login\",\r\n-\r\n-//       response: \"Here's the Login Page, Please Login\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"can you please take me to signup page\",\r\n-\r\n-//       route: \"/signup\",\r\n-\r\n-//       response: \"Here's the signup page. Please proceed With Registration.\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"take me to signup page\",\r\n-\r\n-//       route: \"/signup\",\r\n-\r\n-//       response: \"Here's the signup page. Please proceed With Registration.\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"Go to signup page\",\r\n-\r\n-//       route: \"/signup\",\r\n-\r\n-//       response: \"Here's the signup page. Please proceed With Registration.\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"open signup page\",\r\n-\r\n-//       route: \"/signup\",\r\n-\r\n-//       response: \"Here's the signup page. Please proceed With Registration.\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"Go to face id\",\r\n-\r\n-//       route: \"/login/faceid\",\r\n-\r\n-//       response: \"Here's Face ID Login. Please proceed.\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"Go to face id login\",\r\n-\r\n-//       route: \"/login/faceid\",\r\n-\r\n-//       response: \"Here's Face ID Login. Please proceed.\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"login with face id\",\r\n-\r\n-//       route: \"/login/faceid\",\r\n-\r\n-//       response: \"Here's Face ID Login. Please proceed.\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"login with face\",\r\n-\r\n-//       route: \"/login/faceid\",\r\n-\r\n-//       response: \"Here's Face ID Login. Please proceed.\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"i want to login with face\",\r\n-\r\n-//       route: \"/login/faceid\",\r\n-\r\n-//       response: \"Here's Face ID Login. Please proceed.\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"login with voice\",\r\n-\r\n-//       route: \"/login/voiceid\",\r\n-\r\n-//       response: \"Here's Voice Login. Please proceed.\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"i want to login with voice\",\r\n-\r\n-//       route: \"/login/voiceid\",\r\n-\r\n-//       response: \"Here's Voice Login. Please proceed.\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"go to voice login\",\r\n-\r\n-//       route: \"/login/voiceid\",\r\n-\r\n-//       response: \"Here's Voice Login. Please proceed.\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"login with voice\",\r\n-\r\n-//       route: \"/login/voiceid\",\r\n-\r\n-//       response: \"Here's Voice Login. Please proceed.\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"login with mobile\",\r\n-\r\n-//       route: \"/login/mobile\",\r\n-\r\n-//       response: \"Here's Mobile Login. Please proceed.\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"i want to login with mobile\",\r\n-\r\n-//       route: \"/login/mobile\",\r\n-\r\n-//       response: \"Here's Mobile Login. Please proceed.\",\r\n-//     },\r\n-//     {\r\n-//       utterance: \"go to mobile login\",\r\n-\r\n-//       route: \"/login/mobile\",\r\n-\r\n-//       response: \"Here's Mobile Login. Please proceed.\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"what are platform features\",\r\n-\r\n-//       response:\r\n-//         \"Dashboard, Dynamic time table, Learning Networks, Little Masters, Video Based Dictionary, General Search.\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"Features of platform\",\r\n-\r\n-//       response:\r\n-//         \"Dashboard, Dynamic time table, Learning Networks, Little Masters, Video Based Dictionary, General Search.\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"What does the platform offer\",\r\n-\r\n-//       response:\r\n-//         \"Dashboard, Dynamic time table, Learning Networks, Little Masters, Video Based Dictionary, General Search.\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"Say me the features of platform\",\r\n-\r\n-//       response:\r\n-//         \"Dashboard, Dynamic time table, Learning Networks, Little Masters, Video Based Dictionary, General Search.\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"Say me the services of platform\",\r\n-\r\n-//       response:\r\n-//         \"Dashboard, Dynamic time table, Learning Networks, Little Masters, Video Based Dictionary, General Search.\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"tell me the services offered by the platform\",\r\n-\r\n-//       response:\r\n-//         \"Dashboard, Dynamic time table, Learning Networks, Little Masters, Video Based Dictionary, General Search.\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"explain platform services\",\r\n-\r\n-//       response:\r\n-//         \"Dashboard, Dynamic time table, Learning Networks, Little Masters, Video Based Dictionary, General Search.\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"Give me the Parent voice of Julia Harris\",\r\n-\r\n-//       response:\r\n-//         \"Brane education has helped my son a lot in his studies. He improved a lot in his studies and is now able to score good marks in his exams\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"Play today's motivational video\",\r\n-\r\n-//       response: \"I am playing the video\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"Play today's video\",\r\n-\r\n-//       response: \"I am playing Motivational video\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"Leaders Voice\",\r\n-\r\n-//       response:\r\n-//         \"This Voice-interactive AI Platform is a game Changer. It revolutionizes education.\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"Curriculum Supported by Brane Education\",\r\n-\r\n-//       response:\r\n-//         \"we support multiple Boards let me say few Telangana State Board Andhra Pradesh Board Maharashtra Board Assam Board\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"Boards supported by the platform\",\r\n-\r\n-//       response:\r\n-//         \"we support multiple Boards let me say few Telangana State Board Andhra Pradesh Board Maharashtra Board Assam Board\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"Curriculum\",\r\n-\r\n-//       response:\r\n-//         \"we support multiple Boards let me say few Telangana State Board Andhra Pradesh Board Maharashtra Board Assam Board\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"Go to landing page\",\r\n-\r\n-//       response: \"Okay, I am taking you to the landing page.\",\r\n-\r\n-//       route: \"/childpage\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"take me to landing page\",\r\n-\r\n-//       response: \"Okay, I am taking you to the landing page.\",\r\n-\r\n-//       route: \"/childpage\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"move to landing page\",\r\n-\r\n-//       response: \"Okay, I am taking you to the landing page.\",\r\n-\r\n-//       route: \"/childpage\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"roll back to landing page\",\r\n-\r\n-//       response: \"Okay, I am taking you to the landing page.\",\r\n-\r\n-//       route: \"/childpage\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"move to landing page\",\r\n-\r\n-//       response: \"Okay, I am taking you to the landing page.\",\r\n-\r\n-//       route: \"/childpage\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"what is today's quote\",\r\n-\r\n-//       response:\r\n-//         \"Determination is the power that sees us through all our frustration and obstacles. It helps in building our willpower which is the very basis of success.\",\r\n-\r\n-//       route: \"/childpage\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"Today's Inspirational quote\",\r\n-\r\n-//       response:\r\n-//         \"Determination is the power that sees us through all our frustration and obstacles. It helps in building our willpower which is the very basis of success.\",\r\n-\r\n-//       route: \"/childpage\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"say me today's quote\",\r\n-\r\n-//       response:\r\n-//         \"Determination is the power that sees us through all our frustration and obstacles. It helps in building our willpower which is the very basis of success.\",\r\n-\r\n-//       route: \"/childpage\",\r\n-//     },\r\n-//     {\r\n-//       utterance: \"go back\",\r\n-//       response: \"\",\r\n-//       action: goBack, // Note the use of an action property\r\n-//     },\r\n-//     {\r\n-//       utterance: \"go forward\",\r\n-//       response: \"\",\r\n-//       action: goForward,\r\n-//     },\r\n-//     {\r\n-//       utterance: \"play video\",\r\n-//       // response: \"Playing video.\",\r\n-//       action: playVideo,\r\n-//     },\r\n-//     {\r\n-//       utterance: \"pause video\",\r\n-//       // response: \"Pausing video.\",\r\n-//       action: pauseVideo,\r\n-//     },\r\n-//     {\r\n-//       utterance: \"start video\",\r\n-//       // response: \"Playing video.\",\r\n-//       action: playVideo,\r\n-//     },\r\n-//     {\r\n-//       utterance: \"stop video\",\r\n-//       // response: \"Playing video.\",\r\n-//       action: pauseVideo,\r\n-//     },\r\n-//     {\r\n-//       utterance: \"scroll up\",\r\n-//       // response: \"Scrolling up.\",\r\n-//       action: scrollUp,\r\n-//     },\r\n-//     {\r\n-//       utterance: \"scroll down\",\r\n-//       // response: \"Scrolling down.\",\r\n-//       action: scrollDown,\r\n-//     },\r\n-//     {\r\n-//       utterance: \"go up\",\r\n-\r\n-//       // response: \"Scrolling up.\",\r\n-//       action: scrollUp,\r\n-//     },\r\n-//     {\r\n-//       utterance: \"go down\",\r\n-//       // response: \"Scrolling down.\",\r\n-//       action: scrollDown,\r\n-//     },\r\n-//     {\r\n-//       utterance: \"scroll to top\",\r\n-//       action: scrollToTop,\r\n-//     },\r\n-//     {\r\n-//       utterance: \"scroll to bottom\",\r\n-//       action: scrollToBottom,\r\n-//     },\r\n-//     {\r\n-//       utterance: \"brane stop\",\r\n-//       action: stopListening,\r\n-//     },\r\n-//     {\r\n-//       utterance: \"brane turn off\",\r\n-//       action: stopListening,\r\n-//     },\r\n-//     {\r\n-//       utterance: \"brane stop the bot\",\r\n-//       action: stopListening,\r\n-//     },\r\n-//   ];\r\n-\r\n-//   return (\r\n-//     <div className=\"speech-bot-container\">\r\n-//       <div\r\n-//         className={`button-container ${\r\n-//           isListening ? \"voicebotframeactive\" : \"voicebotframe\"\r\n-//         }`}\r\n-//       >\r\n-//         <button onClick={isListening ? stopListening : startListening}>\r\n-//           {isListening ? \"Stop\" : \"Start\"} Animation\r\n-//         </button>\r\n-//         {/* <button onClick={toggleBotActive}>\r\n-//         {isBotActive ? 'Deactivate Bot' : 'Activate Bot'}\r\n-//       </button> \r\n-//       </div>\r\n-//     </div>\r\n-//   );\r\n-// };\r\n-\r\n-// export default VoiceBot; */\r\n-}\r\n-\r\n-//iska v1\r\n-\r\n-// import React, { useState, useEffect, useRef } from \"react\";\r\n-// import { useNavigate, useLocation } from \"react-router-dom\";\r\n-// import Fuse from \"fuse.js\";\r\n-// import \"./VoiceBot.css\";\r\n-\r\n-// const VoiceBot = ({ videoRef}) => {\r\n-//   const [isListening, setIsListening] = useState(false);\r\n-//   const [isSpeaking, setIsSpeaking] = useState(false);\r\n-//   const recognition = useRef(null);\r\n-//   const speechSynthesis = useRef(window.speechSynthesis);\r\n-//   const [hasGreeted, setHasGreeted] = useState(false);\r\n-//   const navigate = useNavigate();\r\n-\r\n-//  // Initialize speech recognition\r\n-//  useEffect(() => {\r\n-//   recognition.current = new window.webkitSpeechRecognition();\r\n-//   recognition.current.continuous = true;\r\n-//   recognition.current.interimResults = false;\r\n-//   recognition.current.onresult = onResult;\r\n-//   recognition.current.onend = onRecognitionEnd;\r\n-//   recognition.current.starting = false;\r\n-\r\n-//   recognition.current.onerror = (event) => {\r\n-//     console.error(\"Recognition error:\", event.error);\r\n-//     if (isListening && !isSpeaking) {\r\n-//       restartRecognition();\r\n-//     }\r\n-//   };\r\n-\r\n-//   return () => {\r\n-//     if (recognition.current) {\r\n-//       recognition.current.abort();\r\n-//     }\r\n-//   };\r\n-// }, []);\r\n-\r\n-//   // useEffect(() => {\r\n-//   //   const checkRecognition = () => {\r\n-//   //     if (isListening && !isSpeaking && !recognition.current.starting) {\r\n-//   //       console.log(\"Restarting recognition because it's not active.\");\r\n-//   //       recognition.current.starting = true;\r\n-//   //       recognition.current.start();\r\n-//   //       console.log(\"Restarted recognition.\");\r\n-//   //     }\r\n-//   //   };\r\n-\r\n-//   //   const recognitionCheckInterval = setInterval(checkRecognition, 100); // Check every .5 second\r\n-\r\n-//   //   return () => {\r\n-//   //     clearInterval(recognitionCheckInterval);\r\n-//   //   };\r\n-//   // }, [isListening, isSpeaking]);\r\n-\r\n-//   const historyStack = useRef([]);\r\n-\r\n-//   useEffect(() => {\r\n-//     return () => {\r\n-//       // Clean up the listener when the component unmounts\r\n-//       window.removeEventListener(\"popstate\", handlePopState);\r\n-//     };\r\n-//   }, []);\r\n-\r\n-//   const handlePopState = () => {\r\n-//     // This needs to handle both back and forward browser actions\r\n-//     // Use some logic to determine whether it's a back or forward action\r\n-//     // For simplicity, assume it's always back\r\n-//     historyStack.current.pop();\r\n-//     forwardStack.current.length = 0; // Clear forward stack on manual navigation\r\n-//   };\r\n-\r\n-//   // Add a new entry to the stack whenever navigate is called\r\n-//   const customNavigate = (to, options) => {\r\n-//     historyStack.current.push(to);\r\n-//     navigate(to, options);\r\n-//   };\r\n-\r\n-//   // Listen to popstate events to update the history stack\r\n-//   useEffect(() => {\r\n-//     window.addEventListener(\"popstate\", handlePopState);\r\n-//   }, []);\r\n-\r\n-//   const forwardStack = useRef([]);\r\n-\r\n-//   const goBack = () => {\r\n-//     if (window.history.state && window.history.state.idx > 0) {\r\n-//       window.history.back();\r\n-//       speak(\"Going back\");\r\n-//     } else {\r\n-//       speak(\"Can't go back any further.\");\r\n-//     }\r\n-//   };\r\n-\r\n-//   const goForward = () => {\r\n-//     if (window.history.state && window.history.state.idx < window.history.length - 1) {\r\n-//       window.history.forward();\r\n-//       speak(\"Going forward\");\r\n-//     } else {\r\n-//       speak(\"No forward history available.\");\r\n-//     }\r\n-//   };\r\n-\r\n-//   const playVideo = () => {\r\n-//     if (videoRef.current) {\r\n-//       videoRef.current.play();\r\n-//       speak(\"Playing video.\");\r\n-//     } else {\r\n-//       speak(\"No video to play.\");\r\n-//     }\r\n-//   };\r\n-\r\n-//   const pauseVideo = () => {\r\n-//     if (videoRef.current) {\r\n-//       videoRef.current.pause();\r\n-//       speak(\"Video paused.\");\r\n-//     } else {\r\n-//       speak(\"No video to pause.\");\r\n-//     }\r\n-//   };\r\n-\r\n-//   const scrollAmount = window.innerHeight * 0.82;\r\n-\r\n-//   const scrollUp = () => {\r\n-//     if (window.pageYOffset === 0) {\r\n-//       speak(\"Already at the top of the page.\");\r\n-//     } else {\r\n-//       window.scrollBy(0, -scrollAmount);\r\n-//       speak(\"Scrolled up.\");\r\n-//     }\r\n-//   };\r\n-\r\n-//   const scrollDown = () => {\r\n-//     const maxScrollTop =\r\n-//       document.documentElement.scrollHeight - window.innerHeight;\r\n-//     if (window.pageYOffset >= maxScrollTop) {\r\n-//       speak(\"Already at the bottom of the page.\");\r\n-//     } else {\r\n-//       window.scrollBy(0, scrollAmount);\r\n-//       speak(\"Scrolled down.\");\r\n-//     }\r\n-//   };\r\n-\r\n-//   const scrollToTop = () => {\r\n-//     if (window.pageYOffset === 0) {\r\n-//       speak(\"Already at the top of the page.\");\r\n-//     } else {\r\n-//       window.scrollTo(0, 0);\r\n-//       speak(\"Scrolled to the top of the page.\");\r\n-//     }\r\n-//   };\r\n-\r\n-//   const scrollToBottom = () => {\r\n-//     const maxScrollTop =\r\n-//       document.documentElement.scrollHeight - window.innerHeight;\r\n-//     if (window.pageYOffset >= maxScrollTop) {\r\n-//       speak(\"Already at the bottom of the page.\");\r\n-//     } else {\r\n-//       window.scrollTo(0, document.body.scrollHeight);\r\n-//       speak(\"Scrolled to the bottom of the page.\");\r\n-//     }\r\n-//   };\r\n-\r\n-//   const speak = (message) => {\r\n-//     const utterance = new SpeechSynthesisUtterance(message);\r\n-//     utterance.onend = () => {\r\n-//       setIsSpeaking(false);\r\n-//       // Restart recognition after speaking has ended\r\n-//       if (isListening) {\r\n-//         restartRecognition();\r\n-//       }\r\n-//     };\r\n-\r\n-//     setIsSpeaking(true);\r\n-//     // Stop recognition when the bot starts speaking\r\n-//     if (recognition.current) {\r\n-//       recognition.current.abort();\r\n-//     }\r\n-//     speechSynthesis.current.speak(utterance);\r\n-//   };\r\n-\r\n-//   const restartRecognition = () => {\r\n-//     // Check if recognition is not already started and if the bot is set to listen\r\n-//     if (recognition.current && !recognition.current.starting && isListening && !isSpeaking) {\r\n-//       // Only start recognition if it's not already active\r\n-//       if (recognition.current.state !== 'active') {\r\n-//         recognition.current.abort(); // Ensure any ongoing recognition is stopped\r\n-//         recognition.current.starting = true;\r\n-//         recognition.current.start();\r\n-//       }\r\n-//     }\r\n-//   };\r\n-\r\n-//     // Restart recognition when bot finishes speaking and isListening is true\r\n-//     useEffect(() => {\r\n-//       if (!isSpeaking && isListening) {\r\n-//         restartRecognition();\r\n-//       }\r\n-//     }, [isSpeaking, isListening]);\r\n-\r\n-//   const onResult = (event) => {\r\n-//     const resultIndex = event.resultIndex;\r\n-//     const transcript = event.results[resultIndex][0].transcript\r\n-//       .trim()\r\n-//       .toLowerCase();\r\n-\r\n-//     if (event.results[resultIndex].isFinal) {\r\n-//       console.log(`Recognized text: ${transcript}`);\r\n-//       if (transcript.includes(\"brain\")) {\r\n-//         console.log(\"Wake word heard, processing command...\");\r\n-//         handleCommandWithFuse(transcript.replace(\"brain\", \"\"));\r\n-//       }\r\n-//     }\r\n-//   };\r\n-\r\n-//   const onRecognitionEnd = () => {\r\n-//     recognition.current.starting = false;\r\n-//     if (isListening && !isSpeaking) {\r\n-//       restartRecognition();\r\n-//     }\r\n-//   };\r\n-\r\n-//   useEffect(() => {\r\n-//     if (isListening && !hasGreeted) {\r\n-//       speak(\"Hello, I'm Brane. How can I help you today?\");\r\n-//       setHasGreeted(true);\r\n-//     }\r\n-//   }, [isListening, hasGreeted]);\r\n-\r\n-// // Updated startListening function\r\n-// const startListening = () => {\r\n-//   setIsListening(true);\r\n-//   if (recognition.current && !recognition.current.starting) {\r\n-//     recognition.current.start();\r\n-//   }\r\n-// };\r\n-\r\n-// // Updated stopListening function\r\n-// const stopListening = () => {\r\n-//   setIsListening(false);\r\n-//   setIsSpeaking(false); // Reset speaking state\r\n-//   setHasGreeted(false); // Reset greeting state if needed\r\n-//   if (recognition.current) {\r\n-//     recognition.current.abort(); // Stop any ongoing speech recognition\r\n-//   }\r\n-//   if (speechSynthesis.current.speaking) {\r\n-//     speechSynthesis.current.cancel(); // Stop any ongoing speech synthesis\r\n-//   }\r\n-// };\r\n-\r\n-//   const handleCommandWithFuse = (command) => {\r\n-//     const fuse = new Fuse(commands, { keys: [\"utterance\"], threshold: 0.4 });\r\n-//     const results = fuse.search(command);\r\n-//     const foundCommand = results.length ? results[0].item : null;\r\n-\r\n-//     if (foundCommand) {\r\n-//       console.log(\"Command found:\", foundCommand.utterance);\r\n-\r\n-//       if (foundCommand.action) {\r\n-//         foundCommand.action();\r\n-//       } else if (foundCommand.route) {\r\n-//         navigate(foundCommand.route);\r\n-//       }\r\n-\r\n-//       // Speak after performing the action or navigation\r\n-//       speak(foundCommand.response);\r\n-//     } else {\r\n-//       console.log(\"No command found.\");\r\n-//       speak(\"I'm not sure how to respond to that.\");\r\n-//     }\r\n-//   };\r\n-\r\n-//   const commands = [\r\n-//     {\r\n-//       utterance: \"Hello who are you ?\",\r\n-\r\n-//       response:\r\n-//         \"Hi! This is Brane! your Voice bot from Brane Education How can I Assist you Today ?\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"Hello\",\r\n-\r\n-//       response: \"Hi! How can I assist you today?\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"hello\",\r\n-\r\n-//       response: \"Hi! How can I assist you today?\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"Hi.\",\r\n-\r\n-//       response: \"Hello! How can I assist you today?\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"Hey there\",\r\n-\r\n-//       response: \"Hi! How can I assist you today?\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"Good morning Brane.\",\r\n-\r\n-//       response: \"Hey Hiii! Good morning  ! How can I help you?\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"Good afternoon Brane.\",\r\n-\r\n-//       response: \"Hey Hiii! Good after noon ! How can I help you?\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"Good evening Brane.\",\r\n-\r\n-//       response: \"Hey Hiii! Good evening ! How can I help you?\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"can you please take me to login page\",\r\n-\r\n-//       route: \"/login\",\r\n-\r\n-//       response: \"Here's the Login Page, Please Login\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"please take me to login page\",\r\n-\r\n-//       route: \"/login\",\r\n-\r\n-//       response: \"Here's the Login Page, Please Login\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"Go to login page\",\r\n-\r\n-//       route: \"/login\",\r\n-\r\n-//       response: \"Here's the Login Page, Please Login\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"open login page\",\r\n-\r\n-//       route: \"/login\",\r\n-\r\n-//       response: \"Here's the Login Page, Please Login\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"can you please take me to signup page\",\r\n-\r\n-//       route: \"/signup\",\r\n-\r\n-//       response: \"Here's the signup page. Please proceed With Registration.\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"take me to signup page\",\r\n-\r\n-//       route: \"/signup\",\r\n-\r\n-//       response: \"Here's the signup page. Please proceed With Registration.\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"Go to signup page\",\r\n-\r\n-//       route: \"/signup\",\r\n-\r\n-//       response: \"Here's the signup page. Please proceed With Registration.\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"open signup page\",\r\n-\r\n-//       route: \"/signup\",\r\n-\r\n-//       response: \"Here's the signup page. Please proceed With Registration.\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"Go to face id\",\r\n-\r\n-//       route: \"/login/faceid\",\r\n-\r\n-//       response: \"Here's Face ID Login. Please proceed.\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"Go to face id login\",\r\n-\r\n-//       route: \"/login/faceid\",\r\n-\r\n-//       response: \"Here's Face ID Login. Please proceed.\",\r\n-//     },\r\n-//     {\r\n-//       utterance: \"Go to face login\",\r\n-\r\n-//       route: \"/login/faceid\",\r\n-\r\n-//       response: \"Here's Face ID Login. Please proceed.\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"login with face id\",\r\n-\r\n-//       route: \"/login/faceid\",\r\n-\r\n-//       response: \"Here's Face ID Login. Please proceed.\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"login with face\",\r\n-\r\n-//       route: \"/login/faceid\",\r\n-\r\n-//       response: \"Here's Face ID Login. Please proceed.\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"i want to login with face\",\r\n-\r\n-//       route: \"/login/faceid\",\r\n-\r\n-//       response: \"Here's Face ID Login. Please proceed.\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"login with voice\",\r\n-\r\n-//       route: \"/login/voiceid\",\r\n-\r\n-//       response: \"Here's Voice Login. Please proceed.\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"i want to login with voice\",\r\n-\r\n-//       route: \"/login/voiceid\",\r\n-\r\n-//       response: \"Here's Voice Login. Please proceed.\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"go to voice login\",\r\n-\r\n-//       route: \"/login/voiceid\",\r\n-\r\n-//       response: \"Here's Voice Login. Please proceed.\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"login with voice\",\r\n-\r\n-//       route: \"/login/voiceid\",\r\n-\r\n-//       response: \"Here's Voice Login. Please proceed.\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"login with mobile\",\r\n-\r\n-//       route: \"/login/mobile\",\r\n-\r\n-//       response: \"Here's Mobile Login. Please proceed.\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"i want to login with mobile\",\r\n-\r\n-//       route: \"/login/mobile\",\r\n-\r\n-//       response: \"Here's Mobile Login. Please proceed.\",\r\n-//     },\r\n-//     {\r\n-//       utterance: \"go to mobile login\",\r\n-\r\n-//       route: \"/login/mobile\",\r\n-\r\n-//       response: \"Here's Mobile Login. Please proceed.\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"what are platform features\",\r\n-\r\n-//       response:\r\n-//         \"Dashboard, Dynamic time table, Learning Networks, Little Masters, Video Based Dictionary, General Search.\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"Features of platform\",\r\n-\r\n-//       response:\r\n-//         \"Dashboard, Dynamic time table, Learning Networks, Little Masters, Video Based Dictionary, General Search.\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"What does the platform offer\",\r\n-\r\n-//       response:\r\n-//         \"Dashboard, Dynamic time table, Learning Networks, Little Masters, Video Based Dictionary, General Search.\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"Say me the features of platform\",\r\n-\r\n-//       response:\r\n-//         \"Dashboard, Dynamic time table, Learning Networks, Little Masters, Video Based Dictionary, General Search.\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"Say me the services of platform\",\r\n-\r\n-//       response:\r\n-//         \"Dashboard, Dynamic time table, Learning Networks, Little Masters, Video Based Dictionary, General Search.\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"tell me the services offered by the platform\",\r\n-\r\n-//       response:\r\n-//         \"Dashboard, Dynamic time table, Learning Networks, Little Masters, Video Based Dictionary, General Search.\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"explain platform services\",\r\n-\r\n-//       response:\r\n-//         \"Dashboard, Dynamic time table, Learning Networks, Little Masters, Video Based Dictionary, General Search.\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"Give me the Parent voice of Julia Harris\",\r\n-\r\n-//       response:\r\n-//         \"Brane education has helped my son a lot in his studies. He improved a lot in his studies and is now able to score good marks in his exams\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"Play today's motivational video\",\r\n-\r\n-//       response: \"I am playing the video\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"Play today's video\",\r\n-\r\n-//       response: \"I am playing Motivational video\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"Leaders Voice\",\r\n-\r\n-//       response:\r\n-//         \"This Voice-interactive AI Platform is a game Changer. It revolutionizes education.\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"Curriculum Supported by Brane Education\",\r\n-\r\n-//       response:\r\n-//         \"we support multiple Boards let me say few Telangana State Board Andhra Pradesh Board Maharashtra Board Assam Board\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"Boards supported by the platform\",\r\n-\r\n-//       response:\r\n-//         \"we support multiple Boards let me say few Telangana State Board Andhra Pradesh Board Maharashtra Board Assam Board\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"Curriculum\",\r\n-\r\n-//       response:\r\n-//         \"we support multiple Boards let me say few Telangana State Board Andhra Pradesh Board Maharashtra Board Assam Board\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"Go to landing page\",\r\n-\r\n-//       response: \"Okay, I am taking you to the landing page.\",\r\n-\r\n-//       route: \"/childpage\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"take me to landing page\",\r\n-\r\n-//       response: \"Okay, I am taking you to the landing page.\",\r\n-\r\n-//       route: \"/childpage\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"move to landing page\",\r\n-\r\n-//       response: \"Okay, I am taking you to the landing page.\",\r\n-\r\n-//       route: \"/childpage\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"roll back to landing page\",\r\n-\r\n-//       response: \"Okay, I am taking you to the landing page.\",\r\n-\r\n-//       route: \"/childpage\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"move to landing page\",\r\n-\r\n-//       response: \"Okay, I am taking you to the landing page.\",\r\n-\r\n-//       route: \"/childpage\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"what is today's quote\",\r\n-\r\n-//       response:\r\n-//         \"Determination is the power that sees us through all our frustration and obstacles. It helps in building our willpower which is the very basis of success.\",\r\n-\r\n-//       route: \"/childpage\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"Today's Inspirational quote\",\r\n-\r\n-//       response:\r\n-//         \"Determination is the power that sees us through all our frustration and obstacles. It helps in building our willpower which is the very basis of success.\",\r\n-\r\n-//       route: \"/childpage\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"say me today's quote\",\r\n-\r\n-//       response:\r\n-//         \"Determination is the power that sees us through all our frustration and obstacles. It helps in building our willpower which is the very basis of success.\",\r\n-\r\n-//       route: \"/childpage\",\r\n-//     },\r\n-//     {\r\n-//       utterance: \"go back\",\r\n-//       response: \"\",\r\n-//       action: goBack, // Note the use of an action property\r\n-//     },\r\n-//     {\r\n-//       utterance: \"go forward\",\r\n-//       response: \"\",\r\n-//       action: goForward,\r\n-//     },\r\n-//     {\r\n-//       utterance: \"play video\",\r\n-//       // response: \"Playing video.\",\r\n-//       action: playVideo,\r\n-//     },\r\n-//     {\r\n-//       utterance: \"pause video\",\r\n-//       // response: \"Pausing video.\",\r\n-//       action: pauseVideo,\r\n-//     },\r\n-//     {\r\n-//       utterance: \"start video\",\r\n-//       // response: \"Playing video.\",\r\n-//       action: playVideo,\r\n-//     },\r\n-//     {\r\n-//       utterance: \"stop video\",\r\n-//       // response: \"Playing video.\",\r\n-//       action: pauseVideo,\r\n-//     },\r\n-//     {\r\n-//       utterance: \"scroll up\",\r\n-//       // response: \"Scrolling up.\",\r\n-//       action: scrollUp,\r\n-//     },\r\n-//     {\r\n-//       utterance: \"scroll down\",\r\n-//       // response: \"Scrolling down.\",\r\n-//       action: scrollDown,\r\n-//     },\r\n-//     {\r\n-//       utterance: \"go up\",\r\n-\r\n-//       // response: \"Scrolling up.\",\r\n-//       action: scrollUp,\r\n-//     },\r\n-//     {\r\n-//       utterance: \"go down\",\r\n-//       // response: \"Scrolling down.\",\r\n-//       action: scrollDown,\r\n-//     },\r\n-//     {\r\n-//       utterance: \"scroll to top\",\r\n-//       action: scrollToTop,\r\n-//     },\r\n-//     {\r\n-//       utterance: \"scroll to bottom\",\r\n-//       action: scrollToBottom,\r\n-//     },\r\n-//     {\r\n-//       utterance: \"brane stop\",\r\n-//       action: stopListening,\r\n-//     },\r\n-//     {\r\n-//       utterance: \"brane turn off\",\r\n-//       action: stopListening,\r\n-//     },\r\n-//     {\r\n-//       utterance: \"brane stop the bot\",\r\n-//       action: stopListening,\r\n-//     },\r\n-//   ];\r\n-\r\n-//   return (\r\n-//     <div className=\"speech-bot-container\">\r\n-//       <div\r\n-//         className={`button-container ${\r\n-//           isListening ? \"voicebotframeactive\" : \"voicebotframe\"\r\n-//         }`}\r\n-//       >\r\n-//         <button onClick={isListening ? stopListening : startListening}>\r\n-//           {isListening ? \"Stop\" : \"Start\"} Animation\r\n-//         </button>\r\n-//         {/* <button onClick={toggleBotActive}>\r\n-//         {isBotActive ? 'Deactivate Bot' : 'Activate Bot'}\r\n-//       </button> */}\r\n-//       </div>\r\n-//     </div>\r\n-//   );\r\n-// };\r\n-\r\n-// export default VoiceBot;\r\n-\r\n-//Bot Video added but some start issues\r\n-\r\n-// import React, { useState, useEffect, useRef } from \"react\";\r\n-// import { useNavigate, useLocation } from \"react-router-dom\";\r\n-// import Fuse from \"fuse.js\";\r\n-// import \"./VoiceBot.css\";\r\n-\r\n-// const VoiceBot = ({ videoRef }) => {\r\n-//   const [isListening, setIsListening] = useState(false);\r\n-//   const [isSpeaking, setIsSpeaking] = useState(false);\r\n-//   const recognition = useRef(null);\r\n-//   const speechSynthesis = useRef(window.speechSynthesis);\r\n-//   const hasGreeted = useRef(false);\r\n-//   const restartRecognitionTimeout = useRef(null);\r\n-//   const navigate = useNavigate();\r\n-//   const location = useLocation();\r\n-//   const [isRecognitionActive, setIsRecognitionActive] = useState(false); // New state to track recognition status\r\n-\r\n-//   useEffect(() => {\r\n-//     recognition.current = new window.webkitSpeechRecognition();\r\n-//     recognition.current.continuous = true;\r\n-//     recognition.current.interimResults = false;\r\n-//     recognition.current.onresult = onResult;\r\n-//     recognition.current.onend = () => {\r\n-//       console.log(\"Recognition ended.\");\r\n-//       if (isListening) {\r\n-//         startListening();\r\n-//       }\r\n-//     };\r\n-//     recognition.current.onerror = (event) => {\r\n-//       console.error(\"Recognition error:\", event.error);\r\n-//     };\r\n-\r\n-//     return () => {\r\n-//       recognition.current.abort();\r\n-//     };\r\n-//   }, []);\r\n-\r\n-//   // Update useEffect for managing the recognition state based on isListening and isRecognitionActive\r\n-//   useEffect(() => {\r\n-//     if (isListening && !isRecognitionActive) {\r\n-//       startListening();\r\n-//     } else if (!isListening && isRecognitionActive) {\r\n-//       stopListening();\r\n-//     }\r\n-//   }, [isListening, isRecognitionActive]);\r\n-\r\n-//   const goBack = () => {\r\n-//     if (window.history.length > 1) {\r\n-//       navigate(-1);\r\n-//     } else {\r\n-//       speak(\"Can't go back any further.\");\r\n-//     }\r\n-//   };\r\n-\r\n-//   const goForward = () => {\r\n-//     // Unfortunately, there's no direct way to check if you can go forward in the history.\r\n-//     // You might need to manage this state manually based on user navigation.\r\n-//     navigate(1);\r\n-//   };\r\n-\r\n-//   const playVideo = () => {\r\n-//     if (videoRef.current && !videoRef.current.paused) {\r\n-//       speak(\"Video is already playing.\");\r\n-//     } else if (videoRef.current) {\r\n-//       videoRef.current.play();\r\n-//       speak(\"Playing video.\");\r\n-//     } else {\r\n-//       speak(\"No video to play.\");\r\n-//     }\r\n-//   };\r\n-\r\n-//   const pauseVideo = () => {\r\n-//     if (videoRef.current && videoRef.current.paused) {\r\n-//       speak(\"Video is already paused.\");\r\n-//     } else if (videoRef.current) {\r\n-//       videoRef.current.pause();\r\n-//       speak(\"Video paused.\");\r\n-//     } else {\r\n-//       speak(\"No video to pause.\");\r\n-//     }\r\n-//   };\r\n-\r\n-//   const scrollAmount = window.innerHeight * 0.82;\r\n-\r\n-//   const scrollUp = () => {\r\n-//     if (window.pageYOffset === 0) {\r\n-//       speak(\"Already at the top of the page.\");\r\n-//     } else {\r\n-//       window.scrollBy(0, -scrollAmount);\r\n-//       speak(\"Scrolled up.\");\r\n-//     }\r\n-//   };\r\n-\r\n-//   const scrollDown = () => {\r\n-//     const maxScrollTop =\r\n-//       document.documentElement.scrollHeight - window.innerHeight;\r\n-//     if (window.pageYOffset >= maxScrollTop) {\r\n-//       speak(\"Already at the bottom of the page.\");\r\n-//     } else {\r\n-//       window.scrollBy(0, scrollAmount);\r\n-//       speak(\"Scrolled down.\");\r\n-//     }\r\n-//   };\r\n-\r\n-//   const scrollToTop = () => {\r\n-//     if (window.pageYOffset === 0) {\r\n-//       speak(\"Already at the top of the page.\");\r\n-//     } else {\r\n-//       window.scrollTo(0, 0);\r\n-//       speak(\"Scrolled to the top of the page.\");\r\n-//     }\r\n-//   };\r\n-\r\n-//   const scrollToBottom = () => {\r\n-//     const maxScrollTop =\r\n-//       document.documentElement.scrollHeight - window.innerHeight;\r\n-//     if (window.pageYOffset >= maxScrollTop) {\r\n-//       speak(\"Already at the bottom of the page.\");\r\n-//     } else {\r\n-//       window.scrollTo(0, document.body.scrollHeight);\r\n-//       speak(\"Scrolled to the bottom of the page.\");\r\n-//     }\r\n-//   };\r\n-\r\n-//   // const speak = (message) => {\r\n-//   //   const utterance = new SpeechSynthesisUtterance(message);\r\n-//   //   utterance.onend = () => {\r\n-//   //     setIsSpeaking(false);\r\n-//   //     console.log(\"Speaking ended.\");\r\n-//   //     // Only restart recognition if we're still supposed to be listening\r\n-//   //     // if (isListening) {\r\n-//   //     //   if (restartRecognitionTimeout.current) {\r\n-//   //     //     clearTimeout(restartRecognitionTimeout.current);\r\n-//   //     //   }\r\n-//   //     //   restartRecognitionTimeout.current = setTimeout(() => {\r\n-//   //     //     console.log(\"Recognition restarted.\");\r\n-//   //     //     recognition.current.start();\r\n-//   //     //   }, 100); // Delay to prevent immediate restart\r\n-//   //     // }\r\n-//   //     if (isListening && !recognition.current.starting) { // Check the flag before restarting\r\n-//   //       recognition.current.starting = true; // Set the flag when starting recognition\r\n-//   //       recognition.current.start();\r\n-//   //     }\r\n-//   //   };\r\n-\r\n-//   //   setIsSpeaking(true);\r\n-//   //   console.log(\"Speaking started.\");\r\n-//   //   recognition.current.stop(); // Stop recognition when the bot starts speaking\r\n-//   //   speechSynthesis.current.speak(utterance);\r\n-//   // };\r\n-\r\n-//   const speak = (message) => {\r\n-//     console.log(\"speak function called with message:\", message);\r\n-//     const utterance = new SpeechSynthesisUtterance(message);\r\n-//     utterance.onend = () => {\r\n-//       setIsSpeaking(false);\r\n-//       console.log(\"Speaking ended.\");\r\n-//       // Directly handle the restart of recognition here if needed\r\n-//       if (isListening) {\r\n-//         startListening();\r\n-//       }\r\n-//     };\r\n-\r\n-//     setIsSpeaking(true);\r\n-//     console.log(\"Speaking started.\");\r\n-//     recognition.current.stop(); // Ensure to stop recognition before speaking\r\n-//     speechSynthesis.current.speak(utterance);\r\n-//   };\r\n-\r\n-//   const onResult = (event) => {\r\n-//     const resultIndex = event.resultIndex;\r\n-//     const transcript = event.results[resultIndex][0].transcript\r\n-//       .trim()\r\n-//       .toLowerCase();\r\n-\r\n-//     if (event.results[resultIndex].isFinal) {\r\n-//       console.log(`Recognized text: ${transcript}`);\r\n-//       if (transcript.includes(\"brain\")) {\r\n-//         console.log(\"Wake word heard, processing command...\");\r\n-//         handleCommandWithFuse(transcript.replace(\"brain\", \"\"));\r\n-//       }\r\n-//     }\r\n-//   };\r\n-\r\n-//   // const onRecognitionEnd = () => {\r\n-//   //   console.log(\"Recognition ended.\");\r\n-//   //   setIsRecognitionActive(false); // Update state when recognition ends\r\n-//   //   recognition.current.starting = false; // Reset the flag when recognition ends\r\n-//   //   // We now check if the recognition is already running before starting it again\r\n-//   //   if (isListening && !isSpeaking && !recognition.current?.starting) {\r\n-//   //     console.log(\"Restarting recognition.\");\r\n-//   //     recognition.current.start();\r\n-//   //   }\r\n-//   // };\r\n-\r\n-//   // useEffect(() => {\r\n-//   //   if (isListening && !hasGreeted.current) {\r\n-//   //     speak(\"Hello, I'm Brane. How can I assist you today?\");\r\n-//   //     hasGreeted.current = true;\r\n-//   //   } else if (isListening && !isSpeaking) {\r\n-//   //     recognition.current.start();\r\n-//   //   }\r\n-//   // }, [isListening, isSpeaking]);\r\n-\r\n-//   useEffect(() => {\r\n-//     if (isListening && !hasGreeted.current) {\r\n-//       speak(\"Hello, I'm Brane. How can I assist you today?\");\r\n-//       hasGreeted.current = true;\r\n-//     } else if (isListening && !isSpeaking && !recognition.current.starting) {\r\n-//       // Check the flag before starting\r\n-//       recognition.current.starting = true; // Set the flag when starting recognition\r\n-//       recognition.current.start();\r\n-//     }\r\n-//   }, [isListening, isSpeaking]);\r\n-\r\n-//   // const startListening = () => {\r\n-//   //   console.log(\"Attempting to start listening.\");\r\n-//   //   if (recognition.current && !recognition.current.starting) {\r\n-//   //     setIsListening(true);\r\n-//   //     recognition.current.starting = true; // Set the flag when starting recognition\r\n-//   //     recognition.current.start();\r\n-//   //     console.log(\"Listening started.\");\r\n-//   //   }\r\n-//   // };\r\n-\r\n-//   // const stopListening = () => {\r\n-//   //   console.log(\"Stopping listening.\");\r\n-\r\n-//   //   setIsListening(false);\r\n-//   //   recognition.current.stop();\r\n-//   //   if (speechSynthesis.current.speaking) {\r\n-//   //     speechSynthesis.current.cancel();\r\n-//   //   }\r\n-//   //   if (restartRecognitionTimeout.current) {\r\n-//   //     clearTimeout(restartRecognitionTimeout.current);\r\n-//   //   }\r\n-//   //   console.log(\"Listening stopped.\");\r\n-//   // };\r\n-//   // Handle start and stop listening logic\r\n-//   const startListening = () => {\r\n-//     console.log(\"Attempting to start listening.\");\r\n-//     if (!recognition.current.starting) {\r\n-//       setIsListening(true);\r\n-//       recognition.current.starting = true;\r\n-//       recognition.current.start();\r\n-//       console.log(\"Listening started.\");\r\n-//     } else {\r\n-//       console.log(\"Recognition already active.\");\r\n-//     }\r\n-//   };\r\n-\r\n-//   const stopListening = () => {\r\n-//     console.log(\"Stopping listening.\");\r\n-//     if (recognition.current.starting) {\r\n-//       setIsListening(false);\r\n-//       recognition.current.starting = false;\r\n-//       recognition.current.stop();\r\n-//       console.log(\"Listening stopped.\");\r\n-//     } else {\r\n-//       console.log(\"Recognition already inactive.\");\r\n-//     }\r\n-//   };\r\n-\r\n-//   // const handleCommandWithFuse = (command) => {\r\n-//   //   const fuse = new Fuse(commands, { keys: [\"utterance\"], threshold: 0.4 });\r\n-//   //   const results = fuse.search(command);\r\n-//   //   const foundCommand = results.length ? results[0].item : null;\r\n-\r\n-//   //   if (foundCommand) {\r\n-//   //     console.log(\"Command found:\", foundCommand.utterance);\r\n-//   //     speak(foundCommand.response);\r\n-//   //     if (foundCommand.route) {\r\n-//   //       navigate(foundCommand.route); // Navigate to the route specified in the command\r\n-//   //     }\r\n-//   //   } else {\r\n-//   //     console.log(\"No command found.\");\r\n-//   //     speak(\"I'm not sure how to respond to that.\");\r\n-//   //   }\r\n-//   // };\r\n-\r\n-//   const handleCommandWithFuse = (command) => {\r\n-//     const fuse = new Fuse(commands, { keys: [\"utterance\"], threshold: 0.4 });\r\n-//     const results = fuse.search(command);\r\n-//     const foundCommand = results.length ? results[0].item : null;\r\n-\r\n-//     if (foundCommand) {\r\n-//       console.log(\"Command found:\", foundCommand.utterance);\r\n-\r\n-//       if (foundCommand.route) {\r\n-//         if (location.pathname !== foundCommand.route) {\r\n-//           navigate(foundCommand.route);\r\n-//           speak(\r\n-//             `Navigating to ${\r\n-//               foundCommand.routeDescription || \"requested page\"\r\n-//             }.`\r\n-//           );\r\n-//         } else {\r\n-//           speak(\r\n-//             `You are already on the ${\r\n-//               foundCommand.routeDescription || \"requested page\"\r\n-//             }.`\r\n-//           );\r\n-//         }\r\n-//       } else if (foundCommand.action) {\r\n-//         foundCommand.action();\r\n-//       }\r\n-\r\n-//       if (foundCommand.response) {\r\n-//         speak(foundCommand.response);\r\n-//       }\r\n-//     } else {\r\n-//       console.log(\"No command found.\");\r\n-//       speak(\"I'm not sure how to respond to that.\");\r\n-//     }\r\n-//   };\r\n-\r\n-//   const commands = [\r\n-//     {\r\n-//       utterance: \"Hello who are you ?\",\r\n-\r\n-//       response:\r\n-//         \"Hi! This is Brane! your Voice bot from Brane Education How can I Assist you Today ?\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"Hello\",\r\n-\r\n-//       response: \"Hi! How can I assist you today?\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"hello\",\r\n-\r\n-//       response: \"Hi! How can I assist you today?\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"Hi.\",\r\n-\r\n-//       response: \"Hello! How can I assist you today?\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"Hey there\",\r\n-\r\n-//       response: \"Hi! How can I assist you today?\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"Good morning Brane.\",\r\n-\r\n-//       response: \"Hey Hiii! Good morning  ! How can I help you?\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"Good afternoon Brane.\",\r\n-\r\n-//       response: \"Hey Hiii! Good after noon ! How can I help you?\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"Good evening Brane.\",\r\n-\r\n-//       response: \"Hey Hiii! Good evening ! How can I help you?\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"can you please take me to login page\",\r\n-//       route: \"/login\",\r\n-//       routeDescription: \"login page\",\r\n-//       response: \"Navigating to the login page.\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"go to login page\",\r\n-//       route: \"/login\",\r\n-//       routeDescription: \"login page\",\r\n-//       response: \"Navigating to the login page.\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"please take me to login page\",\r\n-//       route: \"/login\",\r\n-//       routeDescription: \"login page\",\r\n-//       response: \"Navigating to the login page.\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"Go to login page\",\r\n-//       route: \"/login\",\r\n-//       routeDescription: \"login page\",\r\n-//       response: \"Navigating to the login page.\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"open login page\",\r\n-//       route: \"/login\",\r\n-//       routeDescription: \"login page\",\r\n-//       response: \"Navigating to the login page.\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"can you please take me to signup page\",\r\n-//       route: \"/signup\",\r\n-//       routeDescription: \"signup page\",\r\n-//       response: \"Navigating to the signup page.\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"take me to signup page\",\r\n-//       route: \"/signup\",\r\n-//       routeDescription: \"signup page\",\r\n-//       response: \"Navigating to the signup page.\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"Go to signup page\",\r\n-//       route: \"/signup\",\r\n-//       routeDescription: \"signup page\",\r\n-//       response: \"Navigating to the signup page.\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"open signup page\",\r\n-//       route: \"/signup\",\r\n-//       routeDescription: \"signup page\",\r\n-//       response: \"Navigating to the signup page.\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"what are platform features\",\r\n-\r\n-//       response:\r\n-//         \"Dashboard, Dynamic time table, Learning Networks, Little Masters, Video Based Dictionary, General Search.\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"Features of platform\",\r\n-\r\n-//       response:\r\n-//         \"Dashboard, Dynamic time table, Learning Networks, Little Masters, Video Based Dictionary, General Search.\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"What does the platform offer\",\r\n-\r\n-//       response:\r\n-//         \"Dashboard, Dynamic time table, Learning Networks, Little Masters, Video Based Dictionary, General Search.\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"Say me the features of platform\",\r\n-\r\n-//       response:\r\n-//         \"Dashboard, Dynamic time table, Learning Networks, Little Masters, Video Based Dictionary, General Search.\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"Say me the services of platform\",\r\n-\r\n-//       response:\r\n-//         \"Dashboard, Dynamic time table, Learning Networks, Little Masters, Video Based Dictionary, General Search.\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"tell me the services offered by the platform\",\r\n-\r\n-//       response:\r\n-//         \"Dashboard, Dynamic time table, Learning Networks, Little Masters, Video Based Dictionary, General Search.\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"explain platform services\",\r\n-\r\n-//       response:\r\n-//         \"Dashboard, Dynamic time table, Learning Networks, Little Masters, Video Based Dictionary, General Search.\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"Give me the Parent voice of Julia Harris\",\r\n-\r\n-//       response:\r\n-//         \"Brane education has helped my son a lot in his studies. He improved a lot in his studies and is now able to score good marks in his exams\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"Play today's motivational video\",\r\n-\r\n-//       response: \"I am playing the video\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"Play today's video\",\r\n-\r\n-//       response: \"I am playing Motivational video\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"Leaders Voice\",\r\n-\r\n-//       response:\r\n-//         \"This Voice-interactive AI Platform is a game Changer. It revolutionizes education.\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"Curriculum Supported by Brane Education\",\r\n-\r\n-//       response:\r\n-//         \"we support multiple Boards let me say few Telangana State Board Andhra Pradesh Board Maharashtra Board Assam Board\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"Boards supported by the platform\",\r\n-\r\n-//       response:\r\n-//         \"we support multiple Boards let me say few Telangana State Board Andhra Pradesh Board Maharashtra Board Assam Board\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"Curriculum\",\r\n-\r\n-//       response:\r\n-//         \"we support multiple Boards let me say few Telangana State Board Andhra Pradesh Board Maharashtra Board Assam Board\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"Go to landing page\",\r\n-\r\n-//       response: \"Okay, I am taking you to the landing page.\",\r\n-\r\n-//       route: \"/childpage\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"take me to landing page\",\r\n-\r\n-//       response: \"Okay, I am taking you to the landing page.\",\r\n-\r\n-//       route: \"/childpage\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"move to landing page\",\r\n-\r\n-//       response: \"Okay, I am taking you to the landing page.\",\r\n-\r\n-//       route: \"/childpage\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"roll back to landing page\",\r\n-\r\n-//       response: \"Okay, I am taking you to the landing page.\",\r\n-\r\n-//       route: \"/childpage\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"move to landing page\",\r\n-\r\n-//       response: \"Okay, I am taking you to the landing page.\",\r\n-\r\n-//       route: \"/childpage\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"what is today's quote\",\r\n-\r\n-//       response:\r\n-//         \"Determination is the power that sees us through all our frustration and obstacles. It helps in building our willpower which is the very basis of success.\",\r\n-\r\n-//       // route: \"/childpage\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"Today's Inspirational quote\",\r\n-\r\n-//       response:\r\n-//         \"Determination is the power that sees us through all our frustration and obstacles. It helps in building our willpower which is the very basis of success.\",\r\n-\r\n-//       // route: \"/childpage\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"say me today's quote\",\r\n-\r\n-//       response:\r\n-//         \"Determination is the power that sees us through all our frustration and obstacles. It helps in building our willpower which is the very basis of success.\",\r\n-\r\n-//       // route: \"/childpage\",\r\n-//     },\r\n-//     {\r\n-//       utterance: \"go back\",\r\n-//       response: \"Going back.\",\r\n-//       action: goBack, // Note the use of an action property\r\n-//     },\r\n-//     {\r\n-//       utterance: \"go forward\",\r\n-//       response: \"Going forward.\",\r\n-//       action: goForward,\r\n-//     },\r\n-//     {\r\n-//       utterance: \"play video\",\r\n-//       // response: \"Playing video.\",\r\n-//       action: playVideo,\r\n-//     },\r\n-//     {\r\n-//       utterance: \"pause video\",\r\n-//       // response: \"Pausing video.\",\r\n-//       action: pauseVideo,\r\n-//     },\r\n-//     {\r\n-//       utterance: \"start video\",\r\n-//       // response: \"Playing video.\",\r\n-//       action: playVideo,\r\n-//     },\r\n-//     {\r\n-//       utterance: \"stop video\",\r\n-//       // response: \"Playing video.\",\r\n-//       action: pauseVideo,\r\n-//     },\r\n-//     {\r\n-//       utterance: \"scroll up\",\r\n-//       // response: \"Scrolling up.\",\r\n-//       action: scrollUp,\r\n-//     },\r\n-//     {\r\n-//       utterance: \"scroll down\",\r\n-//       // response: \"Scrolling down.\",\r\n-//       action: scrollDown,\r\n-//     },\r\n-//     {\r\n-//       utterance: \"go up\",\r\n-\r\n-//       // response: \"Scrolling up.\",\r\n-//       action: scrollUp,\r\n-//     },\r\n-//     {\r\n-//       utterance: \"go down\",\r\n-//       // response: \"Scrolling down.\",\r\n-//       action: scrollDown,\r\n-//     },\r\n-//     {\r\n-//       utterance: \"scroll to top\",\r\n-//       action: scrollToTop,\r\n-//     },\r\n-//     {\r\n-//       utterance: \"scroll to bottom\",\r\n-//       action: scrollToBottom,\r\n-//     },\r\n-//   ];\r\n-//   return (\r\n-//     <div className=\"speech-bot-container\">\r\n-//       <div\r\n-//         className={`button-container ${\r\n-//           isListening ? \"voicebotframeactive\" : \"voicebotframe\"\r\n-//         }`}\r\n-//       >\r\n-//         <div onClick={isListening ? stopListening : startListening}>\r\n-//           <iframe\r\n-//             src={\r\n-//               isListening\r\n-//                 ? \"https://lottie.host/?file=a89aca3f-5407-4052-82c3-2048afca7a9f/NpCdWzLSKD.json\"\r\n-//                 : \"https://lottie.host/?file=d2b6cc0e-fe95-4847-85b5-35365fca7e00/vTudpCuPZq.json\"\r\n-//             }\r\n-//             width=\"120\" // Set your desired width\r\n-//             height=\"120\" // Set your desired height\r\n-//             title={isListening ? \"Stop Animation\" : \"Start Animation\"}\r\n-//             className={isListening ? \"voicebotframeactive\" : \"voicebotframe\"}\r\n-//           ></iframe>\r\n-//           {isListening ? (\r\n-//             <div className=\"overlay\" onClick={stopListening}></div>\r\n-//           ) : (\r\n-//             <div className=\"overlay\" onClick={startListening}></div>\r\n-//           )}\r\n-//         </div>\r\n-//       </div>\r\n-//     </div>\r\n-//   );\r\n-// };\r\n-\r\n-// export default VoiceBot;\r\n-\r\n-// All functionalities but messed up\r\n-\r\n-// import React, { useState, useEffect, useRef } from \"react\";\r\n-// import { useNavigate, useLocation } from \"react-router-dom\";\r\n-// import Fuse from \"fuse.js\";\r\n-// import \"./VoiceBot.css\";\r\n-\r\n-// const VoiceBot = ({ videoRef, takeTestRef, goBackRef }) => {\r\n-//   const [isListening, setIsListening] = useState(false);\r\n-//   const [isSpeaking, setIsSpeaking] = useState(false);\r\n-//   const recognition = useRef(null);\r\n-//   const speechSynthesis = useRef(window.speechSynthesis);\r\n-//   const hasGreeted = useRef(false);\r\n-//   const navigate = useNavigate();\r\n-//   const location = useLocation();\r\n-//   const isRecognitionActive = useRef(false);\r\n-\r\n-//   useEffect(() => {\r\n-//     recognition.current = new window.webkitSpeechRecognition();\r\n-//     recognition.current.continuous = true;\r\n-//     recognition.current.interimResults = false;\r\n-//     recognition.current.onresult = onResult;\r\n-//     recognition.current.onend = onRecognitionEnd;\r\n-\r\n-//     return () => {\r\n-//       if (recognition.current) {\r\n-//         recognition.current.abort();\r\n-//       }\r\n-//     };\r\n-//   }, [location.pathname]);\r\n-\r\n-//   const onResult = (event) => {\r\n-//     const resultIndex = event.resultIndex;\r\n-//     const transcript = event.results[resultIndex][0].transcript\r\n-//       .trim()\r\n-//       .toLowerCase();\r\n-\r\n-//     if (event.results[resultIndex].isFinal) {\r\n-//       console.log(`Recognized text: ${transcript}`);\r\n-//       if (transcript.includes(\"brain\")) {\r\n-//         console.log(\"Wake word heard, processing command...\");\r\n-//         handleCommandWithFuse(transcript.replace(\"brain\", \"\"));\r\n-//       }\r\n-//     }\r\n-//   };\r\n-\r\n-//   const startListening = () => {\r\n-//     if (!isRecognitionActive.current) {\r\n-//       setIsListening(true);\r\n-//       recognition.current.start();\r\n-//       isRecognitionActive.current = true;\r\n-//     }\r\n-//   };\r\n-\r\n-//   const stopListening = () => {\r\n-//     if (isRecognitionActive.current) {\r\n-//       setIsListening(false);\r\n-//       recognition.current.stop();\r\n-//       isRecognitionActive.current = false;\r\n-//     }\r\n-//   };\r\n-\r\n-//   const onRecognitionEnd = () => {\r\n-//     isRecognitionActive.current = false;\r\n-//     if (isListening) {\r\n-//       startListening();\r\n-//     }\r\n-//   };\r\n-\r\n-//   const speak = (message) => {\r\n-//     const utterance = new SpeechSynthesisUtterance(message);\r\n-//     utterance.onend = () => {\r\n-//       setIsSpeaking(false);\r\n-//       if (isListening && !isRecognitionActive.current) {\r\n-//         startListening();\r\n-//       }\r\n-//     };\r\n-\r\n-//     setIsSpeaking(true);\r\n-//     if (isRecognitionActive.current) {\r\n-//       stopListening(); // Adjusted to use stopListening\r\n-//     }\r\n-//     speechSynthesis.current.speak(utterance);\r\n-//   };\r\n-\r\n-//   useEffect(() => {\r\n-//     if (isListening && !hasGreeted.current) {\r\n-//       speak(\"Hello, I'm Brane. How can I assist you today?\");\r\n-//       hasGreeted.current = true;\r\n-//     }\r\n-//   }, [isListening]);\r\n-\r\n-//   const goBack = () => {\r\n-//     if (window.history.length > 1) {\r\n-//       navigate(-1);\r\n-//     } else {\r\n-//       speak(\"Can't go back any further.\");\r\n-//     }\r\n-//   };\r\n-\r\n-//   const goForward = () => {\r\n-//     // Unfortunately, there's no direct way to check if you can go forward in the history.\r\n-//     // You might need to manage this state manually based on user navigation.\r\n-//     navigate(1);\r\n-//   };\r\n-\r\n-//   const playVideo = () => {\r\n-//     if (videoRef.current && !videoRef.current.paused) {\r\n-//       speak(\"Video is already playing.\");\r\n-//     } else if (videoRef.current) {\r\n-//       videoRef.current.play();\r\n-//       speak(\"Playing video.\");\r\n-//     } else {\r\n-//       speak(\"No video to play.\");\r\n-//     }\r\n-//   };\r\n-\r\n-//   const pauseVideo = () => {\r\n-//     if (videoRef.current && videoRef.current.paused) {\r\n-//       speak(\"Video is already paused.\");\r\n-//     } else if (videoRef.current) {\r\n-//       videoRef.current.pause();\r\n-//       speak(\"Video paused.\");\r\n-//     } else {\r\n-//       speak(\"No video to pause.\");\r\n-//     }\r\n-//   };\r\n-\r\n-//   const scrollAmount = window.innerHeight * 0.82;\r\n-\r\n-//   const scrollUp = () => {\r\n-//     if (window.pageYOffset === 0) {\r\n-//       speak(\"Already at the top of the page.\");\r\n-//     } else {\r\n-//       window.scrollBy(0, -scrollAmount);\r\n-//       speak(\"Scrolled up.\");\r\n-//     }\r\n-//   };\r\n-\r\n-//   const scrollDown = () => {\r\n-//     const maxScrollTop =\r\n-//       document.documentElement.scrollHeight - window.innerHeight;\r\n-//     if (window.pageYOffset >= maxScrollTop) {\r\n-//       speak(\"Already at the bottom of the page.\");\r\n-//     } else {\r\n-//       window.scrollBy(0, scrollAmount);\r\n-//       speak(\"Scrolled down.\");\r\n-//     }\r\n-//   };\r\n-\r\n-//   const scrollToTop = () => {\r\n-//     if (window.pageYOffset === 0) {\r\n-//       speak(\"Already at the top of the page.\");\r\n-//     } else {\r\n-//       window.scrollTo(0, 0);\r\n-//       speak(\"Scrolled to the top of the page.\");\r\n-//     }\r\n-//   };\r\n-\r\n-//   const scrollToBottom = () => {\r\n-//     const maxScrollTop =\r\n-//       document.documentElement.scrollHeight - window.innerHeight;\r\n-//     if (window.pageYOffset >= maxScrollTop) {\r\n-//       speak(\"Already at the bottom of the page.\");\r\n-//     } else {\r\n-//       window.scrollTo(0, document.body.scrollHeight);\r\n-//       speak(\"Scrolled to the bottom of the page.\");\r\n-//     }\r\n-//   };\r\n-\r\n-//   // const speak = (message) => {\r\n-//   //   const utterance = new SpeechSynthesisUtterance(message);\r\n-//   //   utterance.onend = () => {\r\n-//   //     setIsSpeaking(false);\r\n-//   //     console.log(\"Speaking ended.\");\r\n-//   //     // Only restart recognition if we're still supposed to be listening\r\n-//   //     // if (isListening) {\r\n-//   //     //   if (restartRecognitionTimeout.current) {\r\n-//   //     //     clearTimeout(restartRecognitionTimeout.current);\r\n-//   //     //   }\r\n-//   //     //   restartRecognitionTimeout.current = setTimeout(() => {\r\n-//   //     //     console.log(\"Recognition restarted.\");\r\n-//   //     //     recognition.current.start();\r\n-//   //     //   }, 100); // Delay to prevent immediate restart\r\n-//   //     // }\r\n-//   //     if (isListening && !recognition.current.starting) { // Check the flag before restarting\r\n-//   //       recognition.current.starting = true; // Set the flag when starting recognition\r\n-//   //       recognition.current.start();\r\n-//   //     }\r\n-//   //   };\r\n-\r\n-//   //   setIsSpeaking(true);\r\n-//   //   console.log(\"Speaking started.\");\r\n-//   //   recognition.current.stop(); // Stop recognition when the bot starts speaking\r\n-//   //   speechSynthesis.current.speak(utterance);\r\n-//   // };\r\n-\r\n-//   // const onRecognitionEnd = () => {\r\n-//   //   console.log(\"Recognition ended.\");\r\n-//   //   setIsRecognitionActive(false); // Update state when recognition ends\r\n-//   //   recognition.current.starting = false; // Reset the flag when recognition ends\r\n-//   //   // We now check if the recognition is already running before starting it again\r\n-//   //   if (isListening && !isSpeaking && !recognition.current?.starting) {\r\n-//   //     console.log(\"Restarting recognition.\");\r\n-//   //     recognition.current.start();\r\n-//   //   }\r\n-//   // };\r\n-\r\n-//   // useEffect(() => {\r\n-//   //   if (isListening && !hasGreeted.current) {\r\n-//   //     speak(\"Hello, I'm Brane. How can I assist you today?\");\r\n-//   //     hasGreeted.current = true;\r\n-//   //   } else if (isListening && !isSpeaking) {\r\n-//   //     recognition.current.start();\r\n-//   //   }\r\n-//   // }, [isListening, isSpeaking]);\r\n-\r\n-//   // const startListening = () => {\r\n-//   //   console.log(\"Attempting to start listening.\");\r\n-//   //   if (recognition.current && !recognition.current.starting) {\r\n-//   //     setIsListening(true);\r\n-//   //     recognition.current.starting = true; // Set the flag when starting recognition\r\n-//   //     recognition.current.start();\r\n-//   //     console.log(\"Listening started.\");\r\n-//   //   }\r\n-//   // };\r\n-\r\n-//   // const stopListening = () => {\r\n-//   //   console.log(\"Stopping listening.\");\r\n-\r\n-//   //   setIsListening(false);\r\n-//   //   recognition.current.stop();\r\n-//   //   if (speechSynthesis.current.speaking) {\r\n-//   //     speechSynthesis.current.cancel();\r\n-//   //   }\r\n-//   //   if (restartRecognitionTimeout.current) {\r\n-//   //     clearTimeout(restartRecognitionTimeout.current);\r\n-//   //   }\r\n-//   //   console.log(\"Listening stopped.\");\r\n-//   // };\r\n-//   // Handle start and stop listening logic\r\n-\r\n-//   useEffect(() => {\r\n-//     if (isListening && !hasGreeted.current) {\r\n-//       speak(\"Hello, I'm Brane. How can I assist you today?\");\r\n-//       hasGreeted.current = true;\r\n-//     }\r\n-//   }, [isListening]);\r\n-\r\n-//   // const handleCommandWithFuse = (command) => {\r\n-//   //   const fuse = new Fuse(commands, { keys: [\"utterance\"], threshold: 0.4 });\r\n-//   //   const results = fuse.search(command);\r\n-//   //   const foundCommand = results.length ? results[0].item : null;\r\n-\r\n-//   //   if (foundCommand) {\r\n-//   //     console.log(\"Command found:\", foundCommand.utterance);\r\n-//   //     speak(foundCommand.response);\r\n-//   //     if (foundCommand.route) {\r\n-//   //       navigate(foundCommand.route); // Navigate to the route specified in the command\r\n-//   //     }\r\n-//   //   } else {\r\n-//   //     console.log(\"No command found.\");\r\n-//   //     speak(\"I'm not sure how to respond to that.\");\r\n-//   //   }\r\n-//   // };\r\n-\r\n-//   const handleCommandWithFuse = (command) => {\r\n-//     const fuse = new Fuse(commands, { keys: [\"utterance\"], threshold: 0.4 });\r\n-//     const results = fuse.search(command);\r\n-//     const foundCommand = results.length ? results[0].item : null;\r\n-\r\n-//     if (foundCommand) {\r\n-//       console.log(\"Command found:\", foundCommand.utterance);\r\n-\r\n-//       if (foundCommand.action) {\r\n-//         foundCommand.action();\r\n-//       } else if (foundCommand.route) {\r\n-//         navigate(foundCommand.route);\r\n-//       }\r\n-\r\n-//       if (foundCommand.response) {\r\n-//         speak(foundCommand.response);\r\n-//       }\r\n-//     } else {\r\n-//       console.log(\"No command found.\");\r\n-//       speak(\"I'm not sure how to respond to that.\");\r\n-//     }\r\n-//   };\r\n-\r\n-//   const commands = [\r\n-//     {\r\n-//       utterance: \"Hello who are you ?\",\r\n-\r\n-//       response:\r\n-//         \"Hi! This is Brane! your Voice bot from Brane Education How can I Assist you Today ?\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"Hello\",\r\n-\r\n-//       response: \"Hi! How can I assist you today?\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"hello\",\r\n-\r\n-//       response: \"Hi! How can I assist you today?\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"Hi.\",\r\n-\r\n-//       response: \"Hello! How can I assist you today?\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"Hey there\",\r\n-\r\n-//       response: \"Hi! How can I assist you today?\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"Good morning Brane.\",\r\n-\r\n-//       response: \"Hey Hiii! Good morning  ! How can I help you?\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"Good afternoon Brane.\",\r\n-\r\n-//       response: \"Hey Hiii! Good after noon ! How can I help you?\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"Good evening Brane.\",\r\n-\r\n-//       response: \"Hey Hiii! Good evening ! How can I help you?\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"can you please take me to login page\",\r\n-//       route: \"/login\",\r\n-//       routeDescription: \"login page\",\r\n-//       response: \"Navigating to the login page.\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"go to login page\",\r\n-//       route: \"/login\",\r\n-//       routeDescription: \"login page\",\r\n-//       response: \"Navigating to the login page.\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"please take me to login page\",\r\n-//       route: \"/login\",\r\n-//       routeDescription: \"login page\",\r\n-//       response: \"Navigating to the login page.\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"Go to login page\",\r\n-//       route: \"/login\",\r\n-//       routeDescription: \"login page\",\r\n-//       response: \"Navigating to the login page.\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"open login page\",\r\n-//       route: \"/login\",\r\n-//       routeDescription: \"login page\",\r\n-//       response: \"Navigating to the login page.\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"can you please take me to signup page\",\r\n-//       route: \"/signup\",\r\n-//       routeDescription: \"signup page\",\r\n-//       response: \"Navigating to the signup page.\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"take me to signup page\",\r\n-//       route: \"/signup\",\r\n-//       routeDescription: \"signup page\",\r\n-//       response: \"Navigating to the signup page.\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"Go to signup page\",\r\n-//       route: \"/signup\",\r\n-//       routeDescription: \"signup page\",\r\n-//       response: \"Navigating to the signup page.\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"open signup page\",\r\n-//       route: \"/signup\",\r\n-//       routeDescription: \"signup page\",\r\n-//       response: \"Navigating to the signup page.\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"what are platform features\",\r\n-\r\n-//       response:\r\n-//         \"Dashboard, Dynamic time table, Learning Networks, Little Masters, Video Based Dictionary, General Search.\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"Features of platform\",\r\n-\r\n-//       response:\r\n-//         \"Dashboard, Dynamic time table, Learning Networks, Little Masters, Video Based Dictionary, General Search.\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"What does the platform offer\",\r\n-\r\n-//       response:\r\n-//         \"Dashboard, Dynamic time table, Learning Networks, Little Masters, Video Based Dictionary, General Search.\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"Say me the features of platform\",\r\n-\r\n-//       response:\r\n-//         \"Dashboard, Dynamic time table, Learning Networks, Little Masters, Video Based Dictionary, General Search.\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"Say me the services of platform\",\r\n-\r\n-//       response:\r\n-//         \"Dashboard, Dynamic time table, Learning Networks, Little Masters, Video Based Dictionary, General Search.\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"tell me the services offered by the platform\",\r\n-\r\n-//       response:\r\n-//         \"Dashboard, Dynamic time table, Learning Networks, Little Masters, Video Based Dictionary, General Search.\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"explain platform services\",\r\n-\r\n-//       response:\r\n-//         \"Dashboard, Dynamic time table, Learning Networks, Little Masters, Video Based Dictionary, General Search.\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"Give me the Parent voice of Julia Harris\",\r\n-\r\n-//       response:\r\n-//         \"Brane education has helped my son a lot in his studies. He improved a lot in his studies and is now able to score good marks in his exams\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"Play today's motivational video\",\r\n-\r\n-//       response: \"I am playing the video\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"Play today's video\",\r\n-\r\n-//       response: \"I am playing Motivational video\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"Leaders Voice\",\r\n-\r\n-//       response:\r\n-//         \"This Voice-interactive AI Platform is a game Changer. It revolutionizes education.\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"Curriculum Supported by Brane Education\",\r\n-\r\n-//       response:\r\n-//         \"we support multiple Boards let me say few Telangana State Board Andhra Pradesh Board Maharashtra Board Assam Board\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"Boards supported by the platform\",\r\n-\r\n-//       response:\r\n-//         \"we support multiple Boards let me say few Telangana State Board Andhra Pradesh Board Maharashtra Board Assam Board\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"Curriculum\",\r\n-\r\n-//       response:\r\n-//         \"we support multiple Boards let me say few Telangana State Board Andhra Pradesh Board Maharashtra Board Assam Board\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"Go to landing page\",\r\n-\r\n-//       response: \"Okay, I am taking you to the landing page.\",\r\n-\r\n-//       route: \"/childpage\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"take me to landing page\",\r\n-\r\n-//       response: \"Okay, I am taking you to the landing page.\",\r\n-\r\n-//       route: \"/childpage\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"move to landing page\",\r\n-\r\n-//       response: \"Okay, I am taking you to the landing page.\",\r\n-\r\n-//       route: \"/childpage\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"roll back to landing page\",\r\n-\r\n-//       response: \"Okay, I am taking you to the landing page.\",\r\n-\r\n-//       route: \"/childpage\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"move to landing page\",\r\n-\r\n-//       response: \"Okay, I am taking you to the landing page.\",\r\n-\r\n-//       route: \"/childpage\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"what is today's quote\",\r\n-\r\n-//       response:\r\n-//         \"Determination is the power that sees us through all our frustration and obstacles. It helps in building our willpower which is the very basis of success.\",\r\n-\r\n-//       // route: \"/childpage\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"Today's Inspirational quote\",\r\n-\r\n-//       response:\r\n-//         \"Determination is the power that sees us through all our frustration and obstacles. It helps in building our willpower which is the very basis of success.\",\r\n-\r\n-//       // route: \"/childpage\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"say me today's quote\",\r\n-\r\n-//       response:\r\n-//         \"Determination is the power that sees us through all our frustration and obstacles. It helps in building our willpower which is the very basis of success.\",\r\n-\r\n-//       // route: \"/childpage\",\r\n-//     },\r\n-//     {\r\n-//       utterance: \"go back\",\r\n-//       response: \"Going back.\",\r\n-//       action: goBack, // Note the use of an action property\r\n-//     },\r\n-//     {\r\n-//       utterance: \"go forward\",\r\n-//       response: \"Going forward.\",\r\n-//       action: goForward,\r\n-//     },\r\n-//     {\r\n-//       utterance: \"play video\",\r\n-//       // response: \"Playing video.\",\r\n-//       action: playVideo,\r\n-//     },\r\n-//     {\r\n-//       utterance: \"pause video\",\r\n-//       // response: \"Pausing video.\",\r\n-//       action: pauseVideo,\r\n-//     },\r\n-//     {\r\n-//       utterance: \"start video\",\r\n-//       // response: \"Playing video.\",\r\n-//       action: playVideo,\r\n-//     },\r\n-//     {\r\n-//       utterance: \"stop video\",\r\n-//       // response: \"Playing video.\",\r\n-//       action: pauseVideo,\r\n-//     },\r\n-//     {\r\n-//       utterance: \"scroll up\",\r\n-//       // response: \"Scrolling up.\",\r\n-//       action: scrollUp,\r\n-//     },\r\n-//     {\r\n-//       utterance: \"scroll down\",\r\n-//       // response: \"Scrolling down.\",\r\n-//       action: scrollDown,\r\n-//     },\r\n-//     {\r\n-//       utterance: \"go up\",\r\n-\r\n-//       // response: \"Scrolling up.\",\r\n-//       action: scrollUp,\r\n-//     },\r\n-//     {\r\n-//       utterance: \"go down\",\r\n-//       // response: \"Scrolling down.\",\r\n-//       action: scrollDown,\r\n-//     },\r\n-//     {\r\n-//       utterance: \"scroll to top\",\r\n-//       action: scrollToTop,\r\n-//     },\r\n-//     {\r\n-//       utterance: \"scroll to bottom\",\r\n-//       action: scrollToBottom,\r\n-//     },\r\n-//     {\r\n-//       utterance: \"go back\",\r\n-//       action: goBackRef?.current?.click, // Use goBackRef directly\r\n-//       response: \"Going back.\",\r\n-//     },\r\n-//     {\r\n-//       utterance: \"take test\",\r\n-//       action: takeTestRef?.current?.click, // Use takeTestRef directly\r\n-//       response: \"Starting the test.\",\r\n-//     },\r\n-//   ];\r\n-//   return (\r\n-//     <div className=\"speech-bot-container\">\r\n-//       <div\r\n-//         className={`button-container ${\r\n-//           isListening ? \"voicebotframeactive\" : \"voicebotframe\"\r\n-//         }`}\r\n-//       >\r\n-//         <div onClick={isListening ? stopListening : startListening}>\r\n-//           <iframe\r\n-//             src={\r\n-//               isListening\r\n-//                 ? \"https://lottie.host/?file=a89aca3f-5407-4052-82c3-2048afca7a9f/NpCdWzLSKD.json\"\r\n-//                 : \"https://lottie.host/?file=d2b6cc0e-fe95-4847-85b5-35365fca7e00/vTudpCuPZq.json\"\r\n-//             }\r\n-//             width=\"120\" // Set your desired width\r\n-//             height=\"120\" // Set your desired height\r\n-//             title={isListening ? \"Stop Animation\" : \"Start Animation\"}\r\n-//             className={isListening ? \"voicebotframeactive\" : \"voicebotframe\"}\r\n-//           ></iframe>\r\n-//           {isListening ? (\r\n-//             <div className=\"overlay\" onClick={stopListening}></div>\r\n-//           ) : (\r\n-//             <div className=\"overlay\" onClick={startListening}></div>\r\n-//           )}\r\n-//         </div>\r\n-//       </div>\r\n-//     </div>\r\n-//   );\r\n-// };\r\n-\r\n-// export default VoiceBot;\r\n"
                },
                {
                    "date": 1700735216923,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -962,8 +962,24 @@\n     {\r\n       utterance: \"decrease volume leaders voice video\",\r\n       action: () => controlVideo(\"leadersVoiceVideo\", \"decreaseVolume\"),\r\n     },\r\n+\r\n+    {\r\n+      utterance: \"set mobile number to *\",\r\n+      action: (spokenText) => {\r\n+        const mobileNumber = extractNumber(spokenText);\r\n+        setMobileNumber(mobileNumber); // Function to set mobile number in context or state\r\n+      },\r\n+    },\r\n+    {\r\n+      utterance: \"set pin to *\",\r\n+      action: (spokenText) => {\r\n+        const pin = extractNumber(spokenText);\r\n+        setPin(pin); // Function to set pin in context or state\r\n+      },\r\n+    },\r\n+    \r\n   ];\r\n \r\n   return (\r\n     <div className=\"speech-bot-container\">\r\n"
                },
                {
                    "date": 1700735286711,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -315,8 +315,26 @@\n       speak(\"I'm not sure how to respond to that.\");\r\n     }\r\n   };\r\n \r\n+  // Utility function to extract number from spoken text\r\n+const extractNumber = (spokenText) => {\r\n+  return spokenText.match(/\\d+/)[0]; // Simple regex to extract continuous digits\r\n+};\r\n+\r\n+// Functions to update context or state\r\n+const setMobileNumber = (number) => {\r\n+  // Update your context or state here\r\n+  // For example, using context:\r\n+  // context.updateMobileNumber(number);\r\n+};\r\n+\r\n+const setPin = (pin) => {\r\n+  // Update your context or state here\r\n+  // For example, using context:\r\n+  // context.updatePin(pin);\r\n+};\r\n+\r\n   const commands = [\r\n     {\r\n       utterance: \"Hello who are you ?\",\r\n \r\n"
                },
                {
                    "date": 1700735737573,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,3853 @@\n+import React, { useState, useEffect, useRef } from \"react\";\r\n+import { useNavigate, useLocation } from \"react-router-dom\";\r\n+import Fuse from \"fuse.js\";\r\n+import \"./VoiceBot.css\";\r\n+import chatbotimage from \"../../assets/chatbotgif.gif\";\r\n+\r\n+const VoiceBot = ({ videoRefs }) => {\r\n+  const [isListening, setIsListening] = useState(false);\r\n+  const [isSpeaking, setIsSpeaking] = useState(false);\r\n+  const recognition = useRef(null);\r\n+  const speechSynthesis = useRef(window.speechSynthesis);\r\n+  const [hasGreeted, setHasGreeted] = useState(false);\r\n+  const navigate = useNavigate();\r\n+\r\n+  // Initialize speech recognition\r\n+  useEffect(() => {\r\n+    recognition.current = new window.webkitSpeechRecognition();\r\n+    recognition.current.continuous = true;\r\n+    recognition.current.interimResults = false;\r\n+    recognition.current.onresult = onResult;\r\n+    recognition.current.onend = onRecognitionEnd;\r\n+    recognition.current.starting = false;\r\n+\r\n+    recognition.current.onerror = (event) => {\r\n+      console.error(\"Recognition error:\", event.error);\r\n+      if (isListening && !isSpeaking) {\r\n+        restartRecognition();\r\n+      }\r\n+    };\r\n+\r\n+    return () => {\r\n+      if (recognition.current) {\r\n+        recognition.current.abort();\r\n+      }\r\n+    };\r\n+  }, []);\r\n+\r\n+  useEffect(() => {\r\n+    const checkRecognition = () => {\r\n+      if (isListening && !isSpeaking && !recognition.current.starting) {\r\n+        console.log(\"Restarting recognition because it's not active.\");\r\n+        recognition.current.starting = true;\r\n+        recognition.current.start();\r\n+        console.log(\"Restarted recognition.\");\r\n+      }\r\n+    };\r\n+\r\n+    const recognitionCheckInterval = setInterval(checkRecognition, 500); // Check every .5 second\r\n+\r\n+    return () => {\r\n+      clearInterval(recognitionCheckInterval);\r\n+    };\r\n+  }, [isListening, isSpeaking]);\r\n+\r\n+  const historyStack = useRef([]);\r\n+\r\n+  useEffect(() => {\r\n+    return () => {\r\n+      // Clean up the listener when the component unmounts\r\n+      window.removeEventListener(\"popstate\", handlePopState);\r\n+    };\r\n+  }, []);\r\n+\r\n+  const handlePopState = () => {\r\n+    // This needs to handle both back and forward browser actions\r\n+    // Use some logic to determine whether it's a back or forward action\r\n+    // For simplicity, assume it's always back\r\n+    historyStack.current.pop();\r\n+    forwardStack.current.length = 0; // Clear forward stack on manual navigation\r\n+  };\r\n+\r\n+  // Listen to popstate events to update the history stack\r\n+  useEffect(() => {\r\n+    window.addEventListener(\"popstate\", handlePopState);\r\n+  }, []);\r\n+\r\n+  const forwardStack = useRef([]);\r\n+\r\n+  const goBack = () => {\r\n+    if (window.history.state && window.history.state.idx > 0) {\r\n+      window.history.back();\r\n+      speak(\"Going back\");\r\n+    } else {\r\n+      speak(\"Can't go back any further.\");\r\n+    }\r\n+  };\r\n+\r\n+  const goForward = () => {\r\n+    if (\r\n+      window.history.state &&\r\n+      window.history.state.idx < window.history.length - 1\r\n+    ) {\r\n+      window.history.forward();\r\n+      speak(\"Going forward\");\r\n+    } else {\r\n+      speak(\"No forward history available.\");\r\n+    }\r\n+  };\r\n+\r\n+  const scrollAmount = window.innerHeight * 0.82;\r\n+\r\n+  const scrollUp = () => {\r\n+    if (window.pageYOffset === 0) {\r\n+      speak(\"Already at the top of the page.\");\r\n+    } else {\r\n+      window.scrollBy(0, -scrollAmount);\r\n+      speak(\"Scrolled up.\");\r\n+    }\r\n+  };\r\n+\r\n+  const scrollDown = () => {\r\n+    const maxScrollTop =\r\n+      document.documentElement.scrollHeight - window.innerHeight;\r\n+    if (window.pageYOffset >= maxScrollTop) {\r\n+      speak(\"Already at the bottom of the page.\");\r\n+    } else {\r\n+      window.scrollBy(0, scrollAmount);\r\n+      speak(\"Scrolled down.\");\r\n+    }\r\n+  };\r\n+\r\n+  const scrollToTop = () => {\r\n+    if (window.pageYOffset === 0) {\r\n+      speak(\"Already at the top of the page.\");\r\n+    } else {\r\n+      window.scrollTo(0, 0);\r\n+      speak(\"Scrolled to the top of the page.\");\r\n+    }\r\n+  };\r\n+\r\n+  const scrollToBottom = () => {\r\n+    const maxScrollTop =\r\n+      document.documentElement.scrollHeight - window.innerHeight;\r\n+    if (window.pageYOffset >= maxScrollTop) {\r\n+      speak(\"Already at the bottom of the page.\");\r\n+    } else {\r\n+      window.scrollTo(0, document.body.scrollHeight);\r\n+      speak(\"Scrolled to the bottom of the page.\");\r\n+    }\r\n+  };\r\n+\r\n+  const controlVideo = (videoId, action) => {\r\n+    const videoRef = videoRefs.current.get(videoId);\r\n+    if (videoRef && videoRef.current) {\r\n+      switch (action) {\r\n+        case \"play\":\r\n+          videoRef.current.play();\r\n+          break;\r\n+        case \"pause\":\r\n+          videoRef.current.pause();\r\n+          break;\r\n+        case \"mute\":\r\n+          videoRef.current.muted = true;\r\n+          break;\r\n+        case \"unmute\":\r\n+          videoRef.current.muted = false;\r\n+          break;\r\n+        case \"fullscreen\":\r\n+          if (videoRef.current.requestFullscreen) {\r\n+            videoRef.current.requestFullscreen();\r\n+          } else if (videoRef.current.webkitRequestFullscreen) {\r\n+            // Safari\r\n+            videoRef.current.webkitRequestFullscreen();\r\n+          } else if (videoRef.current.msRequestFullscreen) {\r\n+            // IE11\r\n+            videoRef.current.msRequestFullscreen();\r\n+          }\r\n+          break;\r\n+        case \"exitFullscreen\":\r\n+          if (document.exitFullscreen) {\r\n+            document.exitFullscreen();\r\n+          } else if (document.webkitExitFullscreen) {\r\n+            // Safari\r\n+            document.webkitExitFullscreen();\r\n+          } else if (document.msExitFullscreen) {\r\n+            // IE11\r\n+            document.msExitFullscreen();\r\n+          }\r\n+          break;\r\n+        case \"increaseVolume\":\r\n+          if (videoRef.current.volume < 1) {\r\n+            videoRef.current.volume = Math.min(\r\n+              1,\r\n+              videoRef.current.volume + 0.1\r\n+            );\r\n+          }\r\n+          break;\r\n+        case \"decreaseVolume\":\r\n+          if (videoRef.current.volume > 0) {\r\n+            videoRef.current.volume = Math.max(\r\n+              0,\r\n+              videoRef.current.volume - 0.1\r\n+            );\r\n+          }\r\n+          break;\r\n+        // Add other cases as needed\r\n+      }\r\n+      speak(\r\n+        `${\r\n+          action.charAt(0).toUpperCase() +\r\n+          action\r\n+            .slice(1)\r\n+            .replace(/([A-Z])/g, \" $1\")\r\n+            .toLowerCase()\r\n+        }ing video.`\r\n+      );\r\n+    } else {\r\n+      speak(`Video not found.`);\r\n+    }\r\n+  };\r\n+\r\n+  const speak = (message) => {\r\n+    const utterance = new SpeechSynthesisUtterance(message);\r\n+    utterance.onend = () => {\r\n+      setIsSpeaking(false);\r\n+      // Restart recognition after speaking has ended\r\n+      if (isListening) {\r\n+        restartRecognition();\r\n+      }\r\n+    };\r\n+\r\n+    setIsSpeaking(true);\r\n+    // Stop recognition when the bot starts speaking\r\n+    if (recognition.current) {\r\n+      recognition.current.abort();\r\n+    }\r\n+    speechSynthesis.current.speak(utterance);\r\n+  };\r\n+\r\n+  const restartRecognition = () => {\r\n+    // Check if recognition is not already started and if the bot is set to listen\r\n+    if (\r\n+      recognition.current &&\r\n+      !recognition.current.starting &&\r\n+      isListening &&\r\n+      !isSpeaking\r\n+    ) {\r\n+      recognition.current.abort(); // Ensure any ongoing recognition is stopped\r\n+      recognition.current.starting = true;\r\n+      recognition.current.start();\r\n+    }\r\n+  };\r\n+\r\n+  // Restart recognition when bot finishes speaking and isListening is true\r\n+  useEffect(() => {\r\n+    if (!isSpeaking && isListening) {\r\n+      restartRecognition();\r\n+    }\r\n+  }, [isSpeaking, isListening]);\r\n+\r\n+  const onResult = (event) => {\r\n+    const resultIndex = event.resultIndex;\r\n+    const transcript = event.results[resultIndex][0].transcript\r\n+      .trim()\r\n+      .toLowerCase();\r\n+\r\n+    if (event.results[resultIndex].isFinal) {\r\n+      console.log(`Recognized text: ${transcript}`);\r\n+      if (transcript.includes(\"brain\")) {\r\n+        console.log(\"Wake word heard, processing command...\");\r\n+        handleCommandWithFuse(transcript.replace(\"brain\", \"\"));\r\n+      }\r\n+    }\r\n+  };\r\n+\r\n+  const onRecognitionEnd = () => {\r\n+    recognition.current.starting = false;\r\n+    if (isListening && !isSpeaking) {\r\n+      restartRecognition();\r\n+    }\r\n+  };\r\n+\r\n+  useEffect(() => {\r\n+    if (isListening && !hasGreeted) {\r\n+      speak(\"Hello, I'm Brane. How can I help you today?\");\r\n+      setHasGreeted(true);\r\n+    }\r\n+  }, [isListening, hasGreeted]);\r\n+\r\n+  // Updated startListening function\r\n+  const startListening = () => {\r\n+    setIsListening(true);\r\n+    if (!recognition.current.starting) {\r\n+      restartRecognition();\r\n+    }\r\n+  };\r\n+\r\n+  // Updated stopListening function\r\n+  const stopListening = () => {\r\n+    setIsListening(false);\r\n+    if (speechSynthesis.current.speaking) {\r\n+      speechSynthesis.current.cancel();\r\n+    }\r\n+    recognition.current.abort();\r\n+  };\r\n+\r\n+  const handleCommandWithFuse = (command) => {\r\n+    const fuse = new Fuse(commands, { keys: [\"utterance\"], threshold: 0.4 });\r\n+    const results = fuse.search(command);\r\n+    const foundCommand = results.length ? results[0].item : null;\r\n+\r\n+    if (foundCommand) {\r\n+      console.log(\"Command found:\", foundCommand.utterance);\r\n+\r\n+      if (foundCommand.action) {\r\n+        foundCommand.action();\r\n+      } else if (foundCommand.route) {\r\n+        navigate(foundCommand.route);\r\n+      }\r\n+\r\n+      // Speak after performing the action or navigation\r\n+      speak(foundCommand.response);\r\n+    } else {\r\n+      console.log(\"No command found.\");\r\n+      speak(\"I'm not sure how to respond to that.\");\r\n+    }\r\n+  };\r\n+\r\n+  // Utility function to extract number from spoken text\r\n+const extractNumber = (spokenText) => {\r\n+  return spokenText.match(/\\d+/)[0]; // Simple regex to extract continuous digits\r\n+};\r\n+\r\n+// Functions to update context or state\r\n+const setMobileNumber = (number) => {\r\n+  // Update your context or state here\r\n+  // For example, using context:\r\n+  // context.updateMobileNumber(number);\r\n+};\r\n+\r\n+const setPin = (pin) => {\r\n+  // Update your context or state here\r\n+  // For example, using context:\r\n+  // context.updatePin(pin);\r\n+};\r\n+\r\n+  const commands = [\r\n+    {\r\n+      utterance: \"Hello who are you ?\",\r\n+\r\n+      response:\r\n+        \"Hi! This is Brane! your Voice bot from Brane Education How can I Assist you Today ?\",\r\n+    },\r\n+\r\n+    {\r\n+      utterance: \"Hello\",\r\n+\r\n+      response: \"Hi! How can I assist you today?\",\r\n+    },\r\n+\r\n+    {\r\n+      utterance: \"hello\",\r\n+\r\n+      response: \"Hi! How can I assist you today?\",\r\n+    },\r\n+\r\n+    {\r\n+      utterance: \"Hi.\",\r\n+\r\n+      response: \"Hello! How can I assist you today?\",\r\n+    },\r\n+\r\n+    {\r\n+      utterance: \"Hey there\",\r\n+\r\n+      response: \"Hi! How can I assist you today?\",\r\n+    },\r\n+\r\n+    {\r\n+      utterance: \"Good morning Brane.\",\r\n+\r\n+      response: \"Hey Hiii! Good morning  ! How can I help you?\",\r\n+    },\r\n+\r\n+    {\r\n+      utterance: \"Good afternoon Brane.\",\r\n+\r\n+      response: \"Hey Hiii! Good after noon ! How can I help you?\",\r\n+    },\r\n+\r\n+    {\r\n+      utterance: \"Good evening Brane.\",\r\n+\r\n+      response: \"Hey Hiii! Good evening ! How can I help you?\",\r\n+    },\r\n+\r\n+    {\r\n+      utterance: \"take me to homepage\",\r\n+\r\n+      route: \"/\",\r\n+\r\n+      response: \"You're in Homepage now\",\r\n+    },\r\n+    {\r\n+      utterance: \"open homepage\",\r\n+\r\n+      route: \"/\",\r\n+\r\n+      response: \"You're in Homepage now\",\r\n+    },\r\n+    {\r\n+      utterance: \"go to homepage\",\r\n+\r\n+      route: \"/\",\r\n+\r\n+      response: \"You're in Homepage now\",\r\n+    },\r\n+    {\r\n+      utterance: \"go back to homepage\",\r\n+\r\n+      route: \"/\",\r\n+\r\n+      response: \"You're in Homepage now\",\r\n+    },\r\n+    {\r\n+      utterance: \"can you please take me to login page\",\r\n+\r\n+      route: \"/login\",\r\n+\r\n+      response: \"Here's the Login Page, Please Login\",\r\n+    },\r\n+\r\n+    {\r\n+      utterance: \"please take me to login page\",\r\n+\r\n+      route: \"/login\",\r\n+\r\n+      response: \"Here's the Login Page, Please Login\",\r\n+    },\r\n+\r\n+    {\r\n+      utterance: \"Go to login page\",\r\n+\r\n+      route: \"/login\",\r\n+\r\n+      response: \"Here's the Login Page, Please Login\",\r\n+    },\r\n+\r\n+    {\r\n+      utterance: \"open login page\",\r\n+\r\n+      route: \"/login\",\r\n+\r\n+      response: \"Here's the Login Page, Please Login\",\r\n+    },\r\n+\r\n+    {\r\n+      utterance: \"can you please take me to signup page\",\r\n+\r\n+      route: \"/signup\",\r\n+\r\n+      response: \"Here's the signup page. Please proceed With Registration.\",\r\n+    },\r\n+\r\n+    {\r\n+      utterance: \"take me to signup page\",\r\n+\r\n+      route: \"/signup\",\r\n+\r\n+      response: \"Here's the signup page. Please proceed With Registration.\",\r\n+    },\r\n+\r\n+    {\r\n+      utterance: \"Go to signup page\",\r\n+\r\n+      route: \"/signup\",\r\n+\r\n+      response: \"Here's the signup page. Please proceed With Registration.\",\r\n+    },\r\n+\r\n+    {\r\n+      utterance: \"open signup page\",\r\n+\r\n+      route: \"/signup\",\r\n+\r\n+      response: \"Here's the signup page. Please proceed With Registration.\",\r\n+    },\r\n+\r\n+    {\r\n+      utterance: \"Go to face id\",\r\n+\r\n+      route: \"/login/faceid\",\r\n+\r\n+      response: \"Here's Face ID Login. Please proceed.\",\r\n+    },\r\n+\r\n+    {\r\n+      utterance: \"Go to face id login\",\r\n+\r\n+      route: \"/login/faceid\",\r\n+\r\n+      response: \"Here's Face ID Login. Please proceed.\",\r\n+    },\r\n+    {\r\n+      utterance: \"Go to face login\",\r\n+\r\n+      route: \"/login/faceid\",\r\n+\r\n+      response: \"Here's Face ID Login. Please proceed.\",\r\n+    },\r\n+\r\n+    {\r\n+      utterance: \"login with face id\",\r\n+\r\n+      route: \"/login/faceid\",\r\n+\r\n+      response: \"Here's Face ID Login. Please proceed.\",\r\n+    },\r\n+\r\n+    {\r\n+      utterance: \"login with face\",\r\n+\r\n+      route: \"/login/faceid\",\r\n+\r\n+      response: \"Here's Face ID Login. Please proceed.\",\r\n+    },\r\n+\r\n+    {\r\n+      utterance: \"i want to login with face\",\r\n+\r\n+      route: \"/login/faceid\",\r\n+\r\n+      response: \"Here's Face ID Login. Please proceed.\",\r\n+    },\r\n+\r\n+    {\r\n+      utterance: \"login with voice\",\r\n+\r\n+      route: \"/login/voiceid\",\r\n+\r\n+      response: \"Here's Voice Login. Please proceed.\",\r\n+    },\r\n+\r\n+    {\r\n+      utterance: \"i want to login with voice\",\r\n+\r\n+      route: \"/login/voiceid\",\r\n+\r\n+      response: \"Here's Voice Login. Please proceed.\",\r\n+    },\r\n+\r\n+    {\r\n+      utterance: \"go to voice login\",\r\n+\r\n+      route: \"/login/voiceid\",\r\n+\r\n+      response: \"Here's Voice Login. Please proceed.\",\r\n+    },\r\n+\r\n+    {\r\n+      utterance: \"login with voice\",\r\n+\r\n+      route: \"/login/voiceid\",\r\n+\r\n+      response: \"Here's Voice Login. Please proceed.\",\r\n+    },\r\n+\r\n+    {\r\n+      utterance: \"login with mobile\",\r\n+\r\n+      route: \"/login/mobile\",\r\n+\r\n+      response: \"Here's Mobile Login. Please proceed.\",\r\n+    },\r\n+\r\n+    {\r\n+      utterance: \"i want to login with mobile\",\r\n+\r\n+      route: \"/login/mobile\",\r\n+\r\n+      response: \"Here's Mobile Login. Please proceed.\",\r\n+    },\r\n+    {\r\n+      utterance: \"go to mobile login\",\r\n+\r\n+      route: \"/login/mobile\",\r\n+\r\n+      response: \"Here's Mobile Login. Please proceed.\",\r\n+    },\r\n+    {\r\n+      utterance: \"go to about page\",\r\n+\r\n+      route: \"/aboutus\",\r\n+\r\n+      response: \"This is About us.\",\r\n+    },\r\n+    {\r\n+      utterance: \"go to about us page\",\r\n+\r\n+      route: \"/aboutus\",\r\n+\r\n+      response: \"This is About us.\",\r\n+    },\r\n+    {\r\n+      utterance: \"open about us page\",\r\n+\r\n+      route: \"/aboutus\",\r\n+\r\n+      response: \"This is About us.\",\r\n+    },\r\n+    {\r\n+      utterance: \"open about page\",\r\n+\r\n+      route: \"/aboutus\",\r\n+\r\n+      response: \"This is About us.\",\r\n+    },\r\n+    {\r\n+      utterance: \"take me to about page\",\r\n+\r\n+      route: \"/aboutus\",\r\n+\r\n+      response: \"This is About us.\",\r\n+    },\r\n+    {\r\n+      utterance: \"take me to about us page\",\r\n+\r\n+      route: \"/aboutus\",\r\n+\r\n+      response: \"This is About us.\",\r\n+    },\r\n+\r\n+    {\r\n+      utterance: \"go to contact page\",\r\n+\r\n+      route: \"/contactus\",\r\n+\r\n+      response: \"You can contact us from here\",\r\n+    },\r\n+    {\r\n+      utterance: \"go to contact us page\",\r\n+\r\n+      route: \"/contactus\",\r\n+\r\n+      response: \"You can contact us from here\",\r\n+    },\r\n+    {\r\n+      utterance: \"open contact us page\",\r\n+\r\n+      route: \"/contactus\",\r\n+\r\n+      response: \"You can contact us from here\",\r\n+    },\r\n+    {\r\n+      utterance: \"open contact page\",\r\n+\r\n+      route: \"/contactus\",\r\n+\r\n+      response: \"You can contact us from here\",\r\n+    },\r\n+    {\r\n+      utterance: \"take me to about page\",\r\n+\r\n+      route: \"/contactus\",\r\n+\r\n+      response: \"You can contact us from here\",\r\n+    },\r\n+    {\r\n+      utterance: \"take me to contact us page\",\r\n+\r\n+      route: \"/contactus\",\r\n+\r\n+      response: \"You can contact us from here\",\r\n+    },\r\n+\r\n+    {\r\n+      utterance: \"what are platform features\",\r\n+\r\n+      response:\r\n+        \"Dashboard, Dynamic time table, Learning Networks, Little Masters, Video Based Dictionary, General Search.\",\r\n+    },\r\n+\r\n+    {\r\n+      utterance: \"Features of platform\",\r\n+\r\n+      response:\r\n+        \"Dashboard, Dynamic time table, Learning Networks, Little Masters, Video Based Dictionary, General Search.\",\r\n+    },\r\n+\r\n+    {\r\n+      utterance: \"What does the platform offer\",\r\n+\r\n+      response:\r\n+        \"Dashboard, Dynamic time table, Learning Networks, Little Masters, Video Based Dictionary, General Search.\",\r\n+    },\r\n+\r\n+    {\r\n+      utterance: \"Say me the features of platform\",\r\n+\r\n+      response:\r\n+        \"Dashboard, Dynamic time table, Learning Networks, Little Masters, Video Based Dictionary, General Search.\",\r\n+    },\r\n+\r\n+    {\r\n+      utterance: \"Say me the services of platform\",\r\n+\r\n+      response:\r\n+        \"Dashboard, Dynamic time table, Learning Networks, Little Masters, Video Based Dictionary, General Search.\",\r\n+    },\r\n+\r\n+    {\r\n+      utterance: \"tell me the services offered by the platform\",\r\n+\r\n+      response:\r\n+        \"Dashboard, Dynamic time table, Learning Networks, Little Masters, Video Based Dictionary, General Search.\",\r\n+    },\r\n+\r\n+    {\r\n+      utterance: \"explain platform services\",\r\n+\r\n+      response:\r\n+        \"Dashboard, Dynamic time table, Learning Networks, Little Masters, Video Based Dictionary, General Search.\",\r\n+    },\r\n+\r\n+    {\r\n+      utterance: \"Give me the Parent voice of Julia Harris\",\r\n+\r\n+      response:\r\n+        \"Brane education has helped my son a lot in his studies. He improved a lot in his studies and is now able to score good marks in his exams\",\r\n+    },\r\n+\r\n+    {\r\n+      utterance: \"Leaders Voice\",\r\n+\r\n+      response:\r\n+        \"This Voice-interactive AI Platform is a game Changer. It revolutionizes education.\",\r\n+    },\r\n+\r\n+    {\r\n+      utterance: \"Curriculum Supported by Brane Education\",\r\n+\r\n+      response:\r\n+        \"we support multiple Boards let me say few Telangana State Board Andhra Pradesh Board Maharashtra Board Assam Board\",\r\n+    },\r\n+\r\n+    {\r\n+      utterance: \"Boards supported by the platform\",\r\n+\r\n+      response:\r\n+        \"we support multiple Boards let me say few Telangana State Board Andhra Pradesh Board Maharashtra Board Assam Board\",\r\n+    },\r\n+\r\n+    {\r\n+      utterance: \"Curriculum\",\r\n+\r\n+      response:\r\n+        \"we support multiple Boards let me say few Telangana State Board Andhra Pradesh Board Maharashtra Board Assam Board\",\r\n+    },\r\n+\r\n+    {\r\n+      utterance: \"what is today's quote\",\r\n+\r\n+      response:\r\n+        \"Determination is the power that sees us through all our frustration and obstacles. It helps in building our willpower which is the very basis of success.\",\r\n+\r\n+      route: \"/childpage\",\r\n+    },\r\n+\r\n+    {\r\n+      utterance: \"Today's Inspirational quote\",\r\n+\r\n+      response:\r\n+        \"Determination is the power that sees us through all our frustration and obstacles. It helps in building our willpower which is the very basis of success.\",\r\n+\r\n+      route: \"/childpage\",\r\n+    },\r\n+\r\n+    {\r\n+      utterance: \"say me today's quote\",\r\n+\r\n+      response:\r\n+        \"Determination is the power that sees us through all our frustration and obstacles. It helps in building our willpower which is the very basis of success.\",\r\n+\r\n+      route: \"/childpage\",\r\n+    },\r\n+    {\r\n+      utterance: \"go back\",\r\n+      response: \"\",\r\n+      action: goBack, // Note the use of an action property\r\n+    },\r\n+    {\r\n+      utterance: \"go forward\",\r\n+      response: \"\",\r\n+      action: goForward,\r\n+    },\r\n+    // {\r\n+    //   utterance: \"play video\",\r\n+    //   // response: \"Playing video.\",\r\n+    //   action: playVideo,\r\n+    // },\r\n+    // {\r\n+    //   utterance: \"pause video\",\r\n+    //   // response: \"Pausing video.\",\r\n+    //   action: pauseVideo,\r\n+    // },\r\n+    // {\r\n+    //   utterance: \"start video\",\r\n+    //   // response: \"Playing video.\",\r\n+    //   action: playVideo,\r\n+    // },\r\n+    // {\r\n+    //   utterance: \"stop video\",\r\n+    //   // response: \"Playing video.\",\r\n+    //   action: pauseVideo,\r\n+    // },\r\n+    {\r\n+      utterance: \"scroll up\",\r\n+      // response: \"Scrolling up.\",\r\n+      action: scrollUp,\r\n+    },\r\n+    {\r\n+      utterance: \"scroll down\",\r\n+      // response: \"Scrolling down.\",\r\n+      action: scrollDown,\r\n+    },\r\n+    {\r\n+      utterance: \"go up\",\r\n+\r\n+      // response: \"Scrolling up.\",\r\n+      action: scrollUp,\r\n+    },\r\n+    {\r\n+      utterance: \"go down\",\r\n+      // response: \"Scrolling down.\",\r\n+      action: scrollDown,\r\n+    },\r\n+    {\r\n+      utterance: \"scroll to top\",\r\n+      action: scrollToTop,\r\n+    },\r\n+    {\r\n+      utterance: \"scroll to bottom\",\r\n+      action: scrollToBottom,\r\n+    },\r\n+    {\r\n+      utterance: \"brane stop\",\r\n+      action: stopListening,\r\n+    },\r\n+    {\r\n+      utterance: \"brane turn off\",\r\n+      action: stopListening,\r\n+    },\r\n+    {\r\n+      utterance: \"brane stop the bot\",\r\n+      action: stopListening,\r\n+    },\r\n+    // {\r\n+    //   utterance: \"mute the video\",\r\n+    //   action: muteVideo,\r\n+    // },\r\n+    // {\r\n+    //   utterance: \"unmute the video\",\r\n+    //   action: unmuteVideo,\r\n+    // },\r\n+    // {\r\n+    //   utterance: \"stop the video sound\",\r\n+    //   action: muteVideo,\r\n+    // },\r\n+    // {\r\n+    //   utterance: \"play the video sound\",\r\n+    //   action: unmuteVideo,\r\n+    // },\r\n+    {\r\n+      utterance: \"play transforming education video\",\r\n+      action: () => controlVideo(\"ourProjectsVideo\", \"play\"),\r\n+    },\r\n+    {\r\n+      utterance: \"start transforming education video\",\r\n+      action: () => controlVideo(\"ourProjectsVideo\", \"play\"),\r\n+    },\r\n+    {\r\n+      utterance: \"pause transforming education video\",\r\n+      action: () => controlVideo(\"ourProjectsVideo\", \"pause\"),\r\n+    },\r\n+    {\r\n+      utterance: \"stop transforming education video\",\r\n+      action: () => controlVideo(\"ourProjectsVideo\", \"pause\"),\r\n+    },\r\n+    {\r\n+      utterance: \"mute transforming education video\",\r\n+      action: () => controlVideo(\"ourProjectsVideo\", \"mute\"),\r\n+    },\r\n+    {\r\n+      utterance: \"unmute transforming education video\",\r\n+      action: () => controlVideo(\"ourProjectsVideo\", \"unmute\"),\r\n+    },\r\n+    {\r\n+      utterance: \"fullscreen transforming education video\",\r\n+      action: () => controlVideo(\"ourProjectsVideo\", \"fullscreen\"),\r\n+    },\r\n+    {\r\n+      utterance: \"exit fullscreen transforming education video\",\r\n+      action: () => controlVideo(\"ourProjectsVideo\", \"exitFullscreen\"),\r\n+    },\r\n+    {\r\n+      utterance: \"increase volume transforming education video\",\r\n+      action: () => controlVideo(\"ourProjectsVideo\", \"increaseVolume\"),\r\n+    },\r\n+    {\r\n+      utterance: \"decrease volume transforming education video\",\r\n+      action: () => controlVideo(\"ourProjectsVideo\", \"decreaseVolume\"),\r\n+    },\r\n+    {\r\n+      utterance: \"play the video about transforming education\",\r\n+      action: () => controlVideo(\"ourProjectsVideo\", \"play\"),\r\n+    },\r\n+    {\r\n+      utterance: \"start the transforming education video\",\r\n+      action: () => controlVideo(\"ourProjectsVideo\", \"play\"),\r\n+    },\r\n+    {\r\n+      utterance: \"can you pause the video on transforming education\",\r\n+      action: () => controlVideo(\"ourProjectsVideo\", \"pause\"),\r\n+    },\r\n+    {\r\n+      utterance: \"stop the video about transforming education\",\r\n+      action: () => controlVideo(\"ourProjectsVideo\", \"pause\"),\r\n+    },\r\n+    {\r\n+      utterance: \"mute the transforming education video\",\r\n+      action: () => controlVideo(\"ourProjectsVideo\", \"mute\"),\r\n+    },\r\n+    {\r\n+      utterance: \"unmute the video on transforming education\",\r\n+      action: () => controlVideo(\"ourProjectsVideo\", \"unmute\"),\r\n+    },\r\n+    {\r\n+      utterance: \"make the transforming education video fullscreen\",\r\n+      action: () => controlVideo(\"ourProjectsVideo\", \"fullscreen\"),\r\n+    },\r\n+    {\r\n+      utterance: \"exit fullscreen on the transforming education video\",\r\n+      action: () => controlVideo(\"ourProjectsVideo\", \"exitFullscreen\"),\r\n+    },\r\n+    {\r\n+      utterance: \"increase the volume of the transforming education video\",\r\n+      action: () => controlVideo(\"ourProjectsVideo\", \"increaseVolume\"),\r\n+    },\r\n+    {\r\n+      utterance: \"decrease the volume of the transforming education video\",\r\n+      action: () => controlVideo(\"ourProjectsVideo\", \"decreaseVolume\"),\r\n+    },\r\n+\r\n+    {\r\n+      utterance: \"play leaders voice video\",\r\n+      action: () => controlVideo(\"leadersVoiceVideo\", \"play\"),\r\n+    },\r\n+    {\r\n+      utterance: \"start leaders voice video\",\r\n+      action: () => controlVideo(\"leadersVoiceVideo\", \"play\"),\r\n+    },\r\n+    {\r\n+      utterance: \"pause leaders voice video\",\r\n+      action: () => controlVideo(\"leadersVoiceVideo\", \"pause\"),\r\n+    },\r\n+    {\r\n+      utterance: \"stop leaders voice video\",\r\n+      action: () => controlVideo(\"leadersVoiceVideo\", \"pause\"),\r\n+    },\r\n+    {\r\n+      utterance: \"mute leaders voice video\",\r\n+      action: () => controlVideo(\"leadersVoiceVideo\", \"mute\"),\r\n+    },\r\n+    {\r\n+      utterance: \"unmute leaders voice video\",\r\n+      action: () => controlVideo(\"leadersVoiceVideo\", \"unmute\"),\r\n+    },\r\n+    {\r\n+      utterance: \"fullscreen leaders voice video\",\r\n+      action: () => controlVideo(\"leadersVoiceVideo\", \"fullscreen\"),\r\n+    },\r\n+    {\r\n+      utterance: \"exit fullscreen leaders voice video\",\r\n+      action: () => controlVideo(\"leadersVoiceVideo\", \"exitFullscreen\"),\r\n+    },\r\n+    {\r\n+      utterance: \"increase volume leaders voice video\",\r\n+      action: () => controlVideo(\"leadersVoiceVideo\", \"increaseVolume\"),\r\n+    },\r\n+    {\r\n+      utterance: \"decrease volume leaders voice video\",\r\n+      action: () => controlVideo(\"leadersVoiceVideo\", \"decreaseVolume\"),\r\n+    },\r\n+\r\n+    {\r\n+      utterance: \"set mobile number to *\",\r\n+      action: (spokenText) => {\r\n+        const mobileNumber = extractNumber(spokenText);\r\n+        setMobileNumber(mobileNumber);\r\n+      },\r\n+    },\r\n+    {\r\n+      utterance: \"set pin to *\",\r\n+      action: (spokenText) => {\r\n+        const pin = extractNumber(spokenText);\r\n+        setPin(pin);\r\n+      },\r\n+    },\r\n+    {\r\n+      utterance: \"press login\",\r\n+      action: () => triggerLogin(),\r\n+    },\r\n+    \r\n+  ];\r\n+\r\n+  return (\r\n+    <div className=\"speech-bot-container\">\r\n+      <div\r\n+        className={`button-container ${\r\n+          isListening ? \"voicebotframeactive\" : \"voicebotframe\"\r\n+        }`}\r\n+      >\r\n+        {/* <button onClick={isListening ? stopListening : startListening}>\r\n+          {isListening ? \"Stop\" : \"Start\"} Animation\r\n+        </button> */}\r\n+        <img\r\n+          className=\"botimage\"\r\n+          src={chatbotimage}\r\n+          alt=\"\"\r\n+          onClick={isListening ? stopListening : startListening}\r\n+        />\r\n+      </div>\r\n+    </div>\r\n+  );\r\n+};\r\n+\r\n+export default VoiceBot;\r\n+\r\n+{\r\n+  /* // import React, { useState, useEffect, useRef } from \"react\";\r\n+// import { useNavigate, useLocation } from \"react-router-dom\";\r\n+// import Fuse from \"fuse.js\";\r\n+// import \"./VoiceBot.css\";\r\n+\r\n+// const VoiceBot = ({ videoRef }) => {\r\n+//   const [isListening, setIsListening] = useState(false);\r\n+//   const [isSpeaking, setIsSpeaking] = useState(false);\r\n+//   const recognition = useRef(null);\r\n+//   const speechSynthesis = useRef(window.speechSynthesis);\r\n+//   const [hasGreeted, setHasGreeted] = useState(false);\r\n+//   const navigate = useNavigate();\r\n+\r\n+//   useEffect(() => {\r\n+//     recognition.current = new window.webkitSpeechRecognition();\r\n+//     recognition.current.continuous = true;\r\n+//     recognition.current.interimResults = false;\r\n+//     recognition.current.onresult = onResult;\r\n+//     recognition.current.onend = onRecognitionEnd;\r\n+//     recognition.current.starting = false;\r\n+\r\n+//     // Simplified error handling, removed specific handling for 'no-speech'\r\n+//     recognition.current.onerror = (event) => {\r\n+//       console.error(\"Recognition error:\", event.error);\r\n+//       // Check if listening is true and the bot isn't speaking\r\n+//       if (isListening && !isSpeaking) {\r\n+//         // Restart recognition\r\n+//         restartRecognition();\r\n+//       }\r\n+//     };\r\n+\r\n+//     return () => {\r\n+//       if (recognition.current) {\r\n+//         recognition.current.abort();\r\n+//       }\r\n+//     };\r\n+//   }, []);\r\n+\r\n+//   useEffect(() => {\r\n+//     const checkRecognition = () => {\r\n+//       if (isListening && !isSpeaking && !recognition.current.starting) {\r\n+//         console.log(\"Restarting recognition because it's not active.\");\r\n+//         recognition.current.starting = true;\r\n+//         recognition.current.start();\r\n+//         console.log(\"Restarted recognition.\");\r\n+//       }\r\n+//     };\r\n+\r\n+//     const recognitionCheckInterval = setInterval(checkRecognition, 100); // Check every 1 second\r\n+\r\n+//     return () => {\r\n+//       clearInterval(recognitionCheckInterval);\r\n+//     };\r\n+//   }, [isListening, isSpeaking]);\r\n+\r\n+//   const restartRecognition = () => {\r\n+//     if (recognition.current.starting) {\r\n+//       console.log(\"Recognition is already starting or running.\");\r\n+//       return;\r\n+//     }\r\n+\r\n+//     recognition.current.abort(); // Stop any existing recognition process\r\n+//     recognition.current.starting = true;\r\n+//     recognition.current.start();\r\n+//     console.log(\"Recognition restarted.\");\r\n+//   };\r\n+\r\n+//   const historyStack = useRef([]);\r\n+\r\n+//   useEffect(() => {\r\n+//     return () => {\r\n+//       // Clean up the listener when the component unmounts\r\n+//       window.removeEventListener(\"popstate\", handlePopState);\r\n+//     };\r\n+//   }, []);\r\n+\r\n+//   const handlePopState = () => {\r\n+//     // This needs to handle both back and forward browser actions\r\n+//     // Use some logic to determine whether it's a back or forward action\r\n+//     // For simplicity, assume it's always back\r\n+//     historyStack.current.pop();\r\n+//     forwardStack.current.length = 0; // Clear forward stack on manual navigation\r\n+//   };\r\n+  \r\n+\r\n+//   // Add a new entry to the stack whenever navigate is called\r\n+//   const customNavigate = (to, options) => {\r\n+//     historyStack.current.push(to);\r\n+//     navigate(to, options);\r\n+//   };\r\n+\r\n+//   // Listen to popstate events to update the history stack\r\n+//   useEffect(() => {\r\n+//     window.addEventListener(\"popstate\", handlePopState);\r\n+//   }, []);\r\n+\r\n+//   const forwardStack = useRef([]);\r\n+\r\n+//   const goBack = () => {\r\n+//     if (window.history.state && window.history.state.idx > 0) {\r\n+//       window.history.back();\r\n+//       speak(\"Going back\");\r\n+//     } else {\r\n+//       speak(\"Can't go back any further.\");\r\n+//     }\r\n+//   };\r\n+\r\n+//   const goForward = () => {\r\n+//     if (window.history.state && window.history.state.idx < window.history.length - 1) {\r\n+//       window.history.forward();\r\n+//       speak(\"Going forward\");\r\n+//     } else {\r\n+//       speak(\"No forward history available.\");\r\n+//     }\r\n+//   };\r\n+\r\n+//   const playVideo = () => {\r\n+//     if (videoRef.current) {\r\n+//       videoRef.current.play();\r\n+//       speak(\"Playing video.\");\r\n+//     } else {\r\n+//       speak(\"No video to play.\");\r\n+//     }\r\n+//   };\r\n+\r\n+//   const pauseVideo = () => {\r\n+//     if (videoRef.current) {\r\n+//       videoRef.current.pause();\r\n+//       speak(\"Video paused.\");\r\n+//     } else {\r\n+//       speak(\"No video to pause.\");\r\n+//     }\r\n+//   };\r\n+\r\n+//   const scrollAmount = window.innerHeight * 0.82;\r\n+\r\n+//   const scrollUp = () => {\r\n+//     if (window.pageYOffset === 0) {\r\n+//       speak(\"Already at the top of the page.\");\r\n+//     } else {\r\n+//       window.scrollBy(0, -scrollAmount);\r\n+//       speak(\"Scrolled up.\");\r\n+//     }\r\n+//   };\r\n+\r\n+//   const scrollDown = () => {\r\n+//     const maxScrollTop =\r\n+//       document.documentElement.scrollHeight - window.innerHeight;\r\n+//     if (window.pageYOffset >= maxScrollTop) {\r\n+//       speak(\"Already at the bottom of the page.\");\r\n+//     } else {\r\n+//       window.scrollBy(0, scrollAmount);\r\n+//       speak(\"Scrolled down.\");\r\n+//     }\r\n+//   };\r\n+\r\n+//   const scrollToTop = () => {\r\n+//     if (window.pageYOffset === 0) {\r\n+//       speak(\"Already at the top of the page.\");\r\n+//     } else {\r\n+//       window.scrollTo(0, 0);\r\n+//       speak(\"Scrolled to the top of the page.\");\r\n+//     }\r\n+//   };\r\n+\r\n+//   const scrollToBottom = () => {\r\n+//     const maxScrollTop =\r\n+//       document.documentElement.scrollHeight - window.innerHeight;\r\n+//     if (window.pageYOffset >= maxScrollTop) {\r\n+//       speak(\"Already at the bottom of the page.\");\r\n+//     } else {\r\n+//       window.scrollTo(0, document.body.scrollHeight);\r\n+//       speak(\"Scrolled to the bottom of the page.\");\r\n+//     }\r\n+//   };\r\n+\r\n+//   const speak = (message) => {\r\n+//     console.log(\"speak function called with message:\", message);\r\n+//     const utterance = new SpeechSynthesisUtterance(message);\r\n+//     utterance.onend = () => {\r\n+//       setIsSpeaking(false);\r\n+//       console.log(\"Speaking ended.\");\r\n+//       if (isListening && !recognition.current.starting) {\r\n+//         console.log(\"Restarting recognition after speaking.\");\r\n+//         recognition.current.starting = true;\r\n+//         recognition.current.start();\r\n+//         console.log(\"Restarted recognition after speaking.\");\r\n+//       }\r\n+//     };\r\n+\r\n+//     setIsSpeaking(true);\r\n+//     console.log(\"Speaking started.\");\r\n+//     recognition.current.stop(); // Ensure to stop recognition before speaking\r\n+//     speechSynthesis.current.speak(utterance);\r\n+//   };\r\n+\r\n+//   const onResult = (event) => {\r\n+//     const resultIndex = event.resultIndex;\r\n+//     const transcript = event.results[resultIndex][0].transcript\r\n+//       .trim()\r\n+//       .toLowerCase();\r\n+\r\n+//     if (event.results[resultIndex].isFinal) {\r\n+//       console.log(`Recognized text: ${transcript}`);\r\n+//       if (transcript.includes(\"brain\")) {\r\n+//         console.log(\"Wake word heard, processing command...\");\r\n+//         handleCommandWithFuse(transcript.replace(\"brain\", \"\"));\r\n+//       }\r\n+//     }\r\n+//   };\r\n+\r\n+//   const onRecognitionEnd = () => {\r\n+//     recognition.current.starting = false;\r\n+//     if (isListening && !isSpeaking) {\r\n+//       restartRecognition();\r\n+//     }\r\n+//   };\r\n+\r\n+//   useEffect(() => {\r\n+//     if (isListening) {\r\n+//       if (!hasGreeted) {\r\n+//         speak(\"Hello, I'm Brane. How can I help you today?\");\r\n+//         setHasGreeted(true);\r\n+//       } else {\r\n+//         speak(\"Listening.\");\r\n+//       }\r\n+//     }\r\n+//   }, [isListening, hasGreeted]);\r\n+\r\n+\r\n+//   const startListening = () => {\r\n+//     if (!recognition.current.starting) {\r\n+//       setIsListening(true);\r\n+//       restartRecognition();\r\n+//     }\r\n+//   };\r\n+\r\n+//   const stopListening = () => {\r\n+//     setIsListening(false);\r\n+//     recognition.current.abort();\r\n+//     if (speechSynthesis.current.speaking) {\r\n+//       speechSynthesis.current.cancel();\r\n+//     }\r\n+//   };\r\n+\r\n+//   const handleCommandWithFuse = (command) => {\r\n+//     const fuse = new Fuse(commands, { keys: [\"utterance\"], threshold: 0.4 });\r\n+//     const results = fuse.search(command);\r\n+//     const foundCommand = results.length ? results[0].item : null;\r\n+\r\n+//     if (foundCommand) {\r\n+//       console.log(\"Command found:\", foundCommand.utterance);\r\n+\r\n+//       if (foundCommand.action) {\r\n+//         foundCommand.action();\r\n+//       } else if (foundCommand.route) {\r\n+//         navigate(foundCommand.route);\r\n+//       }\r\n+\r\n+//       // Speak after performing the action or navigation\r\n+//       speak(foundCommand.response);\r\n+//     } else {\r\n+//       console.log(\"No command found.\");\r\n+//       speak(\"I'm not sure how to respond to that.\");\r\n+//     }\r\n+//   };\r\n+\r\n+//   const commands = [\r\n+//     {\r\n+//       utterance: \"Hello who are you ?\",\r\n+\r\n+//       response:\r\n+//         \"Hi! This is Brane! your Voice bot from Brane Education How can I Assist you Today ?\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"Hello\",\r\n+\r\n+//       response: \"Hi! How can I assist you today?\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"hello\",\r\n+\r\n+//       response: \"Hi! How can I assist you today?\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"Hi.\",\r\n+\r\n+//       response: \"Hello! How can I assist you today?\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"Hey there\",\r\n+\r\n+//       response: \"Hi! How can I assist you today?\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"Good morning Brane.\",\r\n+\r\n+//       response: \"Hey Hiii! Good morning  ! How can I help you?\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"Good afternoon Brane.\",\r\n+\r\n+//       response: \"Hey Hiii! Good after noon ! How can I help you?\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"Good evening Brane.\",\r\n+\r\n+//       response: \"Hey Hiii! Good evening ! How can I help you?\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"can you please take me to login page\",\r\n+\r\n+//       route: \"/login\",\r\n+\r\n+//       response: \"Here's the Login Page, Please Login\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"please take me to login page\",\r\n+\r\n+//       route: \"/login\",\r\n+\r\n+//       response: \"Here's the Login Page, Please Login\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"Go to login page\",\r\n+\r\n+//       route: \"/login\",\r\n+\r\n+//       response: \"Here's the Login Page, Please Login\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"open login page\",\r\n+\r\n+//       route: \"/login\",\r\n+\r\n+//       response: \"Here's the Login Page, Please Login\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"can you please take me to signup page\",\r\n+\r\n+//       route: \"/signup\",\r\n+\r\n+//       response: \"Here's the signup page. Please proceed With Registration.\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"take me to signup page\",\r\n+\r\n+//       route: \"/signup\",\r\n+\r\n+//       response: \"Here's the signup page. Please proceed With Registration.\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"Go to signup page\",\r\n+\r\n+//       route: \"/signup\",\r\n+\r\n+//       response: \"Here's the signup page. Please proceed With Registration.\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"open signup page\",\r\n+\r\n+//       route: \"/signup\",\r\n+\r\n+//       response: \"Here's the signup page. Please proceed With Registration.\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"Go to face id\",\r\n+\r\n+//       route: \"/login/faceid\",\r\n+\r\n+//       response: \"Here's Face ID Login. Please proceed.\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"Go to face id login\",\r\n+\r\n+//       route: \"/login/faceid\",\r\n+\r\n+//       response: \"Here's Face ID Login. Please proceed.\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"login with face id\",\r\n+\r\n+//       route: \"/login/faceid\",\r\n+\r\n+//       response: \"Here's Face ID Login. Please proceed.\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"login with face\",\r\n+\r\n+//       route: \"/login/faceid\",\r\n+\r\n+//       response: \"Here's Face ID Login. Please proceed.\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"i want to login with face\",\r\n+\r\n+//       route: \"/login/faceid\",\r\n+\r\n+//       response: \"Here's Face ID Login. Please proceed.\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"login with voice\",\r\n+\r\n+//       route: \"/login/voiceid\",\r\n+\r\n+//       response: \"Here's Voice Login. Please proceed.\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"i want to login with voice\",\r\n+\r\n+//       route: \"/login/voiceid\",\r\n+\r\n+//       response: \"Here's Voice Login. Please proceed.\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"go to voice login\",\r\n+\r\n+//       route: \"/login/voiceid\",\r\n+\r\n+//       response: \"Here's Voice Login. Please proceed.\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"login with voice\",\r\n+\r\n+//       route: \"/login/voiceid\",\r\n+\r\n+//       response: \"Here's Voice Login. Please proceed.\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"login with mobile\",\r\n+\r\n+//       route: \"/login/mobile\",\r\n+\r\n+//       response: \"Here's Mobile Login. Please proceed.\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"i want to login with mobile\",\r\n+\r\n+//       route: \"/login/mobile\",\r\n+\r\n+//       response: \"Here's Mobile Login. Please proceed.\",\r\n+//     },\r\n+//     {\r\n+//       utterance: \"go to mobile login\",\r\n+\r\n+//       route: \"/login/mobile\",\r\n+\r\n+//       response: \"Here's Mobile Login. Please proceed.\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"what are platform features\",\r\n+\r\n+//       response:\r\n+//         \"Dashboard, Dynamic time table, Learning Networks, Little Masters, Video Based Dictionary, General Search.\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"Features of platform\",\r\n+\r\n+//       response:\r\n+//         \"Dashboard, Dynamic time table, Learning Networks, Little Masters, Video Based Dictionary, General Search.\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"What does the platform offer\",\r\n+\r\n+//       response:\r\n+//         \"Dashboard, Dynamic time table, Learning Networks, Little Masters, Video Based Dictionary, General Search.\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"Say me the features of platform\",\r\n+\r\n+//       response:\r\n+//         \"Dashboard, Dynamic time table, Learning Networks, Little Masters, Video Based Dictionary, General Search.\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"Say me the services of platform\",\r\n+\r\n+//       response:\r\n+//         \"Dashboard, Dynamic time table, Learning Networks, Little Masters, Video Based Dictionary, General Search.\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"tell me the services offered by the platform\",\r\n+\r\n+//       response:\r\n+//         \"Dashboard, Dynamic time table, Learning Networks, Little Masters, Video Based Dictionary, General Search.\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"explain platform services\",\r\n+\r\n+//       response:\r\n+//         \"Dashboard, Dynamic time table, Learning Networks, Little Masters, Video Based Dictionary, General Search.\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"Give me the Parent voice of Julia Harris\",\r\n+\r\n+//       response:\r\n+//         \"Brane education has helped my son a lot in his studies. He improved a lot in his studies and is now able to score good marks in his exams\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"Play today's motivational video\",\r\n+\r\n+//       response: \"I am playing the video\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"Play today's video\",\r\n+\r\n+//       response: \"I am playing Motivational video\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"Leaders Voice\",\r\n+\r\n+//       response:\r\n+//         \"This Voice-interactive AI Platform is a game Changer. It revolutionizes education.\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"Curriculum Supported by Brane Education\",\r\n+\r\n+//       response:\r\n+//         \"we support multiple Boards let me say few Telangana State Board Andhra Pradesh Board Maharashtra Board Assam Board\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"Boards supported by the platform\",\r\n+\r\n+//       response:\r\n+//         \"we support multiple Boards let me say few Telangana State Board Andhra Pradesh Board Maharashtra Board Assam Board\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"Curriculum\",\r\n+\r\n+//       response:\r\n+//         \"we support multiple Boards let me say few Telangana State Board Andhra Pradesh Board Maharashtra Board Assam Board\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"Go to landing page\",\r\n+\r\n+//       response: \"Okay, I am taking you to the landing page.\",\r\n+\r\n+//       route: \"/childpage\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"take me to landing page\",\r\n+\r\n+//       response: \"Okay, I am taking you to the landing page.\",\r\n+\r\n+//       route: \"/childpage\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"move to landing page\",\r\n+\r\n+//       response: \"Okay, I am taking you to the landing page.\",\r\n+\r\n+//       route: \"/childpage\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"roll back to landing page\",\r\n+\r\n+//       response: \"Okay, I am taking you to the landing page.\",\r\n+\r\n+//       route: \"/childpage\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"move to landing page\",\r\n+\r\n+//       response: \"Okay, I am taking you to the landing page.\",\r\n+\r\n+//       route: \"/childpage\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"what is today's quote\",\r\n+\r\n+//       response:\r\n+//         \"Determination is the power that sees us through all our frustration and obstacles. It helps in building our willpower which is the very basis of success.\",\r\n+\r\n+//       route: \"/childpage\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"Today's Inspirational quote\",\r\n+\r\n+//       response:\r\n+//         \"Determination is the power that sees us through all our frustration and obstacles. It helps in building our willpower which is the very basis of success.\",\r\n+\r\n+//       route: \"/childpage\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"say me today's quote\",\r\n+\r\n+//       response:\r\n+//         \"Determination is the power that sees us through all our frustration and obstacles. It helps in building our willpower which is the very basis of success.\",\r\n+\r\n+//       route: \"/childpage\",\r\n+//     },\r\n+//     {\r\n+//       utterance: \"go back\",\r\n+//       response: \"\",\r\n+//       action: goBack, // Note the use of an action property\r\n+//     },\r\n+//     {\r\n+//       utterance: \"go forward\",\r\n+//       response: \"\",\r\n+//       action: goForward,\r\n+//     },\r\n+//     {\r\n+//       utterance: \"play video\",\r\n+//       // response: \"Playing video.\",\r\n+//       action: playVideo,\r\n+//     },\r\n+//     {\r\n+//       utterance: \"pause video\",\r\n+//       // response: \"Pausing video.\",\r\n+//       action: pauseVideo,\r\n+//     },\r\n+//     {\r\n+//       utterance: \"start video\",\r\n+//       // response: \"Playing video.\",\r\n+//       action: playVideo,\r\n+//     },\r\n+//     {\r\n+//       utterance: \"stop video\",\r\n+//       // response: \"Playing video.\",\r\n+//       action: pauseVideo,\r\n+//     },\r\n+//     {\r\n+//       utterance: \"scroll up\",\r\n+//       // response: \"Scrolling up.\",\r\n+//       action: scrollUp,\r\n+//     },\r\n+//     {\r\n+//       utterance: \"scroll down\",\r\n+//       // response: \"Scrolling down.\",\r\n+//       action: scrollDown,\r\n+//     },\r\n+//     {\r\n+//       utterance: \"go up\",\r\n+\r\n+//       // response: \"Scrolling up.\",\r\n+//       action: scrollUp,\r\n+//     },\r\n+//     {\r\n+//       utterance: \"go down\",\r\n+//       // response: \"Scrolling down.\",\r\n+//       action: scrollDown,\r\n+//     },\r\n+//     {\r\n+//       utterance: \"scroll to top\",\r\n+//       action: scrollToTop,\r\n+//     },\r\n+//     {\r\n+//       utterance: \"scroll to bottom\",\r\n+//       action: scrollToBottom,\r\n+//     },\r\n+//     {\r\n+//       utterance: \"brane stop\",\r\n+//       action: stopListening,\r\n+//     },\r\n+//     {\r\n+//       utterance: \"brane turn off\",\r\n+//       action: stopListening,\r\n+//     },\r\n+//     {\r\n+//       utterance: \"brane stop the bot\",\r\n+//       action: stopListening,\r\n+//     },\r\n+//   ];\r\n+\r\n+//   return (\r\n+//     <div className=\"speech-bot-container\">\r\n+//       <div\r\n+//         className={`button-container ${\r\n+//           isListening ? \"voicebotframeactive\" : \"voicebotframe\"\r\n+//         }`}\r\n+//       >\r\n+//         <button onClick={isListening ? stopListening : startListening}>\r\n+//           {isListening ? \"Stop\" : \"Start\"} Animation\r\n+//         </button>\r\n+//         {/* <button onClick={toggleBotActive}>\r\n+//         {isBotActive ? 'Deactivate Bot' : 'Activate Bot'}\r\n+//       </button> \r\n+//       </div>\r\n+//     </div>\r\n+//   );\r\n+// };\r\n+\r\n+// export default VoiceBot; */\r\n+}\r\n+\r\n+//iska v1\r\n+\r\n+// import React, { useState, useEffect, useRef } from \"react\";\r\n+// import { useNavigate, useLocation } from \"react-router-dom\";\r\n+// import Fuse from \"fuse.js\";\r\n+// import \"./VoiceBot.css\";\r\n+\r\n+// const VoiceBot = ({ videoRef}) => {\r\n+//   const [isListening, setIsListening] = useState(false);\r\n+//   const [isSpeaking, setIsSpeaking] = useState(false);\r\n+//   const recognition = useRef(null);\r\n+//   const speechSynthesis = useRef(window.speechSynthesis);\r\n+//   const [hasGreeted, setHasGreeted] = useState(false);\r\n+//   const navigate = useNavigate();\r\n+\r\n+//  // Initialize speech recognition\r\n+//  useEffect(() => {\r\n+//   recognition.current = new window.webkitSpeechRecognition();\r\n+//   recognition.current.continuous = true;\r\n+//   recognition.current.interimResults = false;\r\n+//   recognition.current.onresult = onResult;\r\n+//   recognition.current.onend = onRecognitionEnd;\r\n+//   recognition.current.starting = false;\r\n+\r\n+//   recognition.current.onerror = (event) => {\r\n+//     console.error(\"Recognition error:\", event.error);\r\n+//     if (isListening && !isSpeaking) {\r\n+//       restartRecognition();\r\n+//     }\r\n+//   };\r\n+\r\n+//   return () => {\r\n+//     if (recognition.current) {\r\n+//       recognition.current.abort();\r\n+//     }\r\n+//   };\r\n+// }, []);\r\n+\r\n+//   // useEffect(() => {\r\n+//   //   const checkRecognition = () => {\r\n+//   //     if (isListening && !isSpeaking && !recognition.current.starting) {\r\n+//   //       console.log(\"Restarting recognition because it's not active.\");\r\n+//   //       recognition.current.starting = true;\r\n+//   //       recognition.current.start();\r\n+//   //       console.log(\"Restarted recognition.\");\r\n+//   //     }\r\n+//   //   };\r\n+\r\n+//   //   const recognitionCheckInterval = setInterval(checkRecognition, 100); // Check every .5 second\r\n+\r\n+//   //   return () => {\r\n+//   //     clearInterval(recognitionCheckInterval);\r\n+//   //   };\r\n+//   // }, [isListening, isSpeaking]);\r\n+\r\n+//   const historyStack = useRef([]);\r\n+\r\n+//   useEffect(() => {\r\n+//     return () => {\r\n+//       // Clean up the listener when the component unmounts\r\n+//       window.removeEventListener(\"popstate\", handlePopState);\r\n+//     };\r\n+//   }, []);\r\n+\r\n+//   const handlePopState = () => {\r\n+//     // This needs to handle both back and forward browser actions\r\n+//     // Use some logic to determine whether it's a back or forward action\r\n+//     // For simplicity, assume it's always back\r\n+//     historyStack.current.pop();\r\n+//     forwardStack.current.length = 0; // Clear forward stack on manual navigation\r\n+//   };\r\n+\r\n+//   // Add a new entry to the stack whenever navigate is called\r\n+//   const customNavigate = (to, options) => {\r\n+//     historyStack.current.push(to);\r\n+//     navigate(to, options);\r\n+//   };\r\n+\r\n+//   // Listen to popstate events to update the history stack\r\n+//   useEffect(() => {\r\n+//     window.addEventListener(\"popstate\", handlePopState);\r\n+//   }, []);\r\n+\r\n+//   const forwardStack = useRef([]);\r\n+\r\n+//   const goBack = () => {\r\n+//     if (window.history.state && window.history.state.idx > 0) {\r\n+//       window.history.back();\r\n+//       speak(\"Going back\");\r\n+//     } else {\r\n+//       speak(\"Can't go back any further.\");\r\n+//     }\r\n+//   };\r\n+\r\n+//   const goForward = () => {\r\n+//     if (window.history.state && window.history.state.idx < window.history.length - 1) {\r\n+//       window.history.forward();\r\n+//       speak(\"Going forward\");\r\n+//     } else {\r\n+//       speak(\"No forward history available.\");\r\n+//     }\r\n+//   };\r\n+\r\n+//   const playVideo = () => {\r\n+//     if (videoRef.current) {\r\n+//       videoRef.current.play();\r\n+//       speak(\"Playing video.\");\r\n+//     } else {\r\n+//       speak(\"No video to play.\");\r\n+//     }\r\n+//   };\r\n+\r\n+//   const pauseVideo = () => {\r\n+//     if (videoRef.current) {\r\n+//       videoRef.current.pause();\r\n+//       speak(\"Video paused.\");\r\n+//     } else {\r\n+//       speak(\"No video to pause.\");\r\n+//     }\r\n+//   };\r\n+\r\n+//   const scrollAmount = window.innerHeight * 0.82;\r\n+\r\n+//   const scrollUp = () => {\r\n+//     if (window.pageYOffset === 0) {\r\n+//       speak(\"Already at the top of the page.\");\r\n+//     } else {\r\n+//       window.scrollBy(0, -scrollAmount);\r\n+//       speak(\"Scrolled up.\");\r\n+//     }\r\n+//   };\r\n+\r\n+//   const scrollDown = () => {\r\n+//     const maxScrollTop =\r\n+//       document.documentElement.scrollHeight - window.innerHeight;\r\n+//     if (window.pageYOffset >= maxScrollTop) {\r\n+//       speak(\"Already at the bottom of the page.\");\r\n+//     } else {\r\n+//       window.scrollBy(0, scrollAmount);\r\n+//       speak(\"Scrolled down.\");\r\n+//     }\r\n+//   };\r\n+\r\n+//   const scrollToTop = () => {\r\n+//     if (window.pageYOffset === 0) {\r\n+//       speak(\"Already at the top of the page.\");\r\n+//     } else {\r\n+//       window.scrollTo(0, 0);\r\n+//       speak(\"Scrolled to the top of the page.\");\r\n+//     }\r\n+//   };\r\n+\r\n+//   const scrollToBottom = () => {\r\n+//     const maxScrollTop =\r\n+//       document.documentElement.scrollHeight - window.innerHeight;\r\n+//     if (window.pageYOffset >= maxScrollTop) {\r\n+//       speak(\"Already at the bottom of the page.\");\r\n+//     } else {\r\n+//       window.scrollTo(0, document.body.scrollHeight);\r\n+//       speak(\"Scrolled to the bottom of the page.\");\r\n+//     }\r\n+//   };\r\n+\r\n+//   const speak = (message) => {\r\n+//     const utterance = new SpeechSynthesisUtterance(message);\r\n+//     utterance.onend = () => {\r\n+//       setIsSpeaking(false);\r\n+//       // Restart recognition after speaking has ended\r\n+//       if (isListening) {\r\n+//         restartRecognition();\r\n+//       }\r\n+//     };\r\n+\r\n+//     setIsSpeaking(true);\r\n+//     // Stop recognition when the bot starts speaking\r\n+//     if (recognition.current) {\r\n+//       recognition.current.abort();\r\n+//     }\r\n+//     speechSynthesis.current.speak(utterance);\r\n+//   };\r\n+\r\n+//   const restartRecognition = () => {\r\n+//     // Check if recognition is not already started and if the bot is set to listen\r\n+//     if (recognition.current && !recognition.current.starting && isListening && !isSpeaking) {\r\n+//       // Only start recognition if it's not already active\r\n+//       if (recognition.current.state !== 'active') {\r\n+//         recognition.current.abort(); // Ensure any ongoing recognition is stopped\r\n+//         recognition.current.starting = true;\r\n+//         recognition.current.start();\r\n+//       }\r\n+//     }\r\n+//   };\r\n+\r\n+//     // Restart recognition when bot finishes speaking and isListening is true\r\n+//     useEffect(() => {\r\n+//       if (!isSpeaking && isListening) {\r\n+//         restartRecognition();\r\n+//       }\r\n+//     }, [isSpeaking, isListening]);\r\n+\r\n+//   const onResult = (event) => {\r\n+//     const resultIndex = event.resultIndex;\r\n+//     const transcript = event.results[resultIndex][0].transcript\r\n+//       .trim()\r\n+//       .toLowerCase();\r\n+\r\n+//     if (event.results[resultIndex].isFinal) {\r\n+//       console.log(`Recognized text: ${transcript}`);\r\n+//       if (transcript.includes(\"brain\")) {\r\n+//         console.log(\"Wake word heard, processing command...\");\r\n+//         handleCommandWithFuse(transcript.replace(\"brain\", \"\"));\r\n+//       }\r\n+//     }\r\n+//   };\r\n+\r\n+//   const onRecognitionEnd = () => {\r\n+//     recognition.current.starting = false;\r\n+//     if (isListening && !isSpeaking) {\r\n+//       restartRecognition();\r\n+//     }\r\n+//   };\r\n+\r\n+//   useEffect(() => {\r\n+//     if (isListening && !hasGreeted) {\r\n+//       speak(\"Hello, I'm Brane. How can I help you today?\");\r\n+//       setHasGreeted(true);\r\n+//     }\r\n+//   }, [isListening, hasGreeted]);\r\n+\r\n+// // Updated startListening function\r\n+// const startListening = () => {\r\n+//   setIsListening(true);\r\n+//   if (recognition.current && !recognition.current.starting) {\r\n+//     recognition.current.start();\r\n+//   }\r\n+// };\r\n+\r\n+// // Updated stopListening function\r\n+// const stopListening = () => {\r\n+//   setIsListening(false);\r\n+//   setIsSpeaking(false); // Reset speaking state\r\n+//   setHasGreeted(false); // Reset greeting state if needed\r\n+//   if (recognition.current) {\r\n+//     recognition.current.abort(); // Stop any ongoing speech recognition\r\n+//   }\r\n+//   if (speechSynthesis.current.speaking) {\r\n+//     speechSynthesis.current.cancel(); // Stop any ongoing speech synthesis\r\n+//   }\r\n+// };\r\n+\r\n+//   const handleCommandWithFuse = (command) => {\r\n+//     const fuse = new Fuse(commands, { keys: [\"utterance\"], threshold: 0.4 });\r\n+//     const results = fuse.search(command);\r\n+//     const foundCommand = results.length ? results[0].item : null;\r\n+\r\n+//     if (foundCommand) {\r\n+//       console.log(\"Command found:\", foundCommand.utterance);\r\n+\r\n+//       if (foundCommand.action) {\r\n+//         foundCommand.action();\r\n+//       } else if (foundCommand.route) {\r\n+//         navigate(foundCommand.route);\r\n+//       }\r\n+\r\n+//       // Speak after performing the action or navigation\r\n+//       speak(foundCommand.response);\r\n+//     } else {\r\n+//       console.log(\"No command found.\");\r\n+//       speak(\"I'm not sure how to respond to that.\");\r\n+//     }\r\n+//   };\r\n+\r\n+//   const commands = [\r\n+//     {\r\n+//       utterance: \"Hello who are you ?\",\r\n+\r\n+//       response:\r\n+//         \"Hi! This is Brane! your Voice bot from Brane Education How can I Assist you Today ?\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"Hello\",\r\n+\r\n+//       response: \"Hi! How can I assist you today?\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"hello\",\r\n+\r\n+//       response: \"Hi! How can I assist you today?\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"Hi.\",\r\n+\r\n+//       response: \"Hello! How can I assist you today?\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"Hey there\",\r\n+\r\n+//       response: \"Hi! How can I assist you today?\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"Good morning Brane.\",\r\n+\r\n+//       response: \"Hey Hiii! Good morning  ! How can I help you?\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"Good afternoon Brane.\",\r\n+\r\n+//       response: \"Hey Hiii! Good after noon ! How can I help you?\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"Good evening Brane.\",\r\n+\r\n+//       response: \"Hey Hiii! Good evening ! How can I help you?\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"can you please take me to login page\",\r\n+\r\n+//       route: \"/login\",\r\n+\r\n+//       response: \"Here's the Login Page, Please Login\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"please take me to login page\",\r\n+\r\n+//       route: \"/login\",\r\n+\r\n+//       response: \"Here's the Login Page, Please Login\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"Go to login page\",\r\n+\r\n+//       route: \"/login\",\r\n+\r\n+//       response: \"Here's the Login Page, Please Login\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"open login page\",\r\n+\r\n+//       route: \"/login\",\r\n+\r\n+//       response: \"Here's the Login Page, Please Login\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"can you please take me to signup page\",\r\n+\r\n+//       route: \"/signup\",\r\n+\r\n+//       response: \"Here's the signup page. Please proceed With Registration.\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"take me to signup page\",\r\n+\r\n+//       route: \"/signup\",\r\n+\r\n+//       response: \"Here's the signup page. Please proceed With Registration.\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"Go to signup page\",\r\n+\r\n+//       route: \"/signup\",\r\n+\r\n+//       response: \"Here's the signup page. Please proceed With Registration.\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"open signup page\",\r\n+\r\n+//       route: \"/signup\",\r\n+\r\n+//       response: \"Here's the signup page. Please proceed With Registration.\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"Go to face id\",\r\n+\r\n+//       route: \"/login/faceid\",\r\n+\r\n+//       response: \"Here's Face ID Login. Please proceed.\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"Go to face id login\",\r\n+\r\n+//       route: \"/login/faceid\",\r\n+\r\n+//       response: \"Here's Face ID Login. Please proceed.\",\r\n+//     },\r\n+//     {\r\n+//       utterance: \"Go to face login\",\r\n+\r\n+//       route: \"/login/faceid\",\r\n+\r\n+//       response: \"Here's Face ID Login. Please proceed.\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"login with face id\",\r\n+\r\n+//       route: \"/login/faceid\",\r\n+\r\n+//       response: \"Here's Face ID Login. Please proceed.\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"login with face\",\r\n+\r\n+//       route: \"/login/faceid\",\r\n+\r\n+//       response: \"Here's Face ID Login. Please proceed.\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"i want to login with face\",\r\n+\r\n+//       route: \"/login/faceid\",\r\n+\r\n+//       response: \"Here's Face ID Login. Please proceed.\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"login with voice\",\r\n+\r\n+//       route: \"/login/voiceid\",\r\n+\r\n+//       response: \"Here's Voice Login. Please proceed.\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"i want to login with voice\",\r\n+\r\n+//       route: \"/login/voiceid\",\r\n+\r\n+//       response: \"Here's Voice Login. Please proceed.\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"go to voice login\",\r\n+\r\n+//       route: \"/login/voiceid\",\r\n+\r\n+//       response: \"Here's Voice Login. Please proceed.\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"login with voice\",\r\n+\r\n+//       route: \"/login/voiceid\",\r\n+\r\n+//       response: \"Here's Voice Login. Please proceed.\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"login with mobile\",\r\n+\r\n+//       route: \"/login/mobile\",\r\n+\r\n+//       response: \"Here's Mobile Login. Please proceed.\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"i want to login with mobile\",\r\n+\r\n+//       route: \"/login/mobile\",\r\n+\r\n+//       response: \"Here's Mobile Login. Please proceed.\",\r\n+//     },\r\n+//     {\r\n+//       utterance: \"go to mobile login\",\r\n+\r\n+//       route: \"/login/mobile\",\r\n+\r\n+//       response: \"Here's Mobile Login. Please proceed.\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"what are platform features\",\r\n+\r\n+//       response:\r\n+//         \"Dashboard, Dynamic time table, Learning Networks, Little Masters, Video Based Dictionary, General Search.\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"Features of platform\",\r\n+\r\n+//       response:\r\n+//         \"Dashboard, Dynamic time table, Learning Networks, Little Masters, Video Based Dictionary, General Search.\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"What does the platform offer\",\r\n+\r\n+//       response:\r\n+//         \"Dashboard, Dynamic time table, Learning Networks, Little Masters, Video Based Dictionary, General Search.\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"Say me the features of platform\",\r\n+\r\n+//       response:\r\n+//         \"Dashboard, Dynamic time table, Learning Networks, Little Masters, Video Based Dictionary, General Search.\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"Say me the services of platform\",\r\n+\r\n+//       response:\r\n+//         \"Dashboard, Dynamic time table, Learning Networks, Little Masters, Video Based Dictionary, General Search.\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"tell me the services offered by the platform\",\r\n+\r\n+//       response:\r\n+//         \"Dashboard, Dynamic time table, Learning Networks, Little Masters, Video Based Dictionary, General Search.\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"explain platform services\",\r\n+\r\n+//       response:\r\n+//         \"Dashboard, Dynamic time table, Learning Networks, Little Masters, Video Based Dictionary, General Search.\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"Give me the Parent voice of Julia Harris\",\r\n+\r\n+//       response:\r\n+//         \"Brane education has helped my son a lot in his studies. He improved a lot in his studies and is now able to score good marks in his exams\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"Play today's motivational video\",\r\n+\r\n+//       response: \"I am playing the video\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"Play today's video\",\r\n+\r\n+//       response: \"I am playing Motivational video\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"Leaders Voice\",\r\n+\r\n+//       response:\r\n+//         \"This Voice-interactive AI Platform is a game Changer. It revolutionizes education.\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"Curriculum Supported by Brane Education\",\r\n+\r\n+//       response:\r\n+//         \"we support multiple Boards let me say few Telangana State Board Andhra Pradesh Board Maharashtra Board Assam Board\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"Boards supported by the platform\",\r\n+\r\n+//       response:\r\n+//         \"we support multiple Boards let me say few Telangana State Board Andhra Pradesh Board Maharashtra Board Assam Board\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"Curriculum\",\r\n+\r\n+//       response:\r\n+//         \"we support multiple Boards let me say few Telangana State Board Andhra Pradesh Board Maharashtra Board Assam Board\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"Go to landing page\",\r\n+\r\n+//       response: \"Okay, I am taking you to the landing page.\",\r\n+\r\n+//       route: \"/childpage\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"take me to landing page\",\r\n+\r\n+//       response: \"Okay, I am taking you to the landing page.\",\r\n+\r\n+//       route: \"/childpage\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"move to landing page\",\r\n+\r\n+//       response: \"Okay, I am taking you to the landing page.\",\r\n+\r\n+//       route: \"/childpage\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"roll back to landing page\",\r\n+\r\n+//       response: \"Okay, I am taking you to the landing page.\",\r\n+\r\n+//       route: \"/childpage\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"move to landing page\",\r\n+\r\n+//       response: \"Okay, I am taking you to the landing page.\",\r\n+\r\n+//       route: \"/childpage\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"what is today's quote\",\r\n+\r\n+//       response:\r\n+//         \"Determination is the power that sees us through all our frustration and obstacles. It helps in building our willpower which is the very basis of success.\",\r\n+\r\n+//       route: \"/childpage\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"Today's Inspirational quote\",\r\n+\r\n+//       response:\r\n+//         \"Determination is the power that sees us through all our frustration and obstacles. It helps in building our willpower which is the very basis of success.\",\r\n+\r\n+//       route: \"/childpage\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"say me today's quote\",\r\n+\r\n+//       response:\r\n+//         \"Determination is the power that sees us through all our frustration and obstacles. It helps in building our willpower which is the very basis of success.\",\r\n+\r\n+//       route: \"/childpage\",\r\n+//     },\r\n+//     {\r\n+//       utterance: \"go back\",\r\n+//       response: \"\",\r\n+//       action: goBack, // Note the use of an action property\r\n+//     },\r\n+//     {\r\n+//       utterance: \"go forward\",\r\n+//       response: \"\",\r\n+//       action: goForward,\r\n+//     },\r\n+//     {\r\n+//       utterance: \"play video\",\r\n+//       // response: \"Playing video.\",\r\n+//       action: playVideo,\r\n+//     },\r\n+//     {\r\n+//       utterance: \"pause video\",\r\n+//       // response: \"Pausing video.\",\r\n+//       action: pauseVideo,\r\n+//     },\r\n+//     {\r\n+//       utterance: \"start video\",\r\n+//       // response: \"Playing video.\",\r\n+//       action: playVideo,\r\n+//     },\r\n+//     {\r\n+//       utterance: \"stop video\",\r\n+//       // response: \"Playing video.\",\r\n+//       action: pauseVideo,\r\n+//     },\r\n+//     {\r\n+//       utterance: \"scroll up\",\r\n+//       // response: \"Scrolling up.\",\r\n+//       action: scrollUp,\r\n+//     },\r\n+//     {\r\n+//       utterance: \"scroll down\",\r\n+//       // response: \"Scrolling down.\",\r\n+//       action: scrollDown,\r\n+//     },\r\n+//     {\r\n+//       utterance: \"go up\",\r\n+\r\n+//       // response: \"Scrolling up.\",\r\n+//       action: scrollUp,\r\n+//     },\r\n+//     {\r\n+//       utterance: \"go down\",\r\n+//       // response: \"Scrolling down.\",\r\n+//       action: scrollDown,\r\n+//     },\r\n+//     {\r\n+//       utterance: \"scroll to top\",\r\n+//       action: scrollToTop,\r\n+//     },\r\n+//     {\r\n+//       utterance: \"scroll to bottom\",\r\n+//       action: scrollToBottom,\r\n+//     },\r\n+//     {\r\n+//       utterance: \"brane stop\",\r\n+//       action: stopListening,\r\n+//     },\r\n+//     {\r\n+//       utterance: \"brane turn off\",\r\n+//       action: stopListening,\r\n+//     },\r\n+//     {\r\n+//       utterance: \"brane stop the bot\",\r\n+//       action: stopListening,\r\n+//     },\r\n+//   ];\r\n+\r\n+//   return (\r\n+//     <div className=\"speech-bot-container\">\r\n+//       <div\r\n+//         className={`button-container ${\r\n+//           isListening ? \"voicebotframeactive\" : \"voicebotframe\"\r\n+//         }`}\r\n+//       >\r\n+//         <button onClick={isListening ? stopListening : startListening}>\r\n+//           {isListening ? \"Stop\" : \"Start\"} Animation\r\n+//         </button>\r\n+//         {/* <button onClick={toggleBotActive}>\r\n+//         {isBotActive ? 'Deactivate Bot' : 'Activate Bot'}\r\n+//       </button> */}\r\n+//       </div>\r\n+//     </div>\r\n+//   );\r\n+// };\r\n+\r\n+// export default VoiceBot;\r\n+\r\n+//Bot Video added but some start issues\r\n+\r\n+// import React, { useState, useEffect, useRef } from \"react\";\r\n+// import { useNavigate, useLocation } from \"react-router-dom\";\r\n+// import Fuse from \"fuse.js\";\r\n+// import \"./VoiceBot.css\";\r\n+\r\n+// const VoiceBot = ({ videoRef }) => {\r\n+//   const [isListening, setIsListening] = useState(false);\r\n+//   const [isSpeaking, setIsSpeaking] = useState(false);\r\n+//   const recognition = useRef(null);\r\n+//   const speechSynthesis = useRef(window.speechSynthesis);\r\n+//   const hasGreeted = useRef(false);\r\n+//   const restartRecognitionTimeout = useRef(null);\r\n+//   const navigate = useNavigate();\r\n+//   const location = useLocation();\r\n+//   const [isRecognitionActive, setIsRecognitionActive] = useState(false); // New state to track recognition status\r\n+\r\n+//   useEffect(() => {\r\n+//     recognition.current = new window.webkitSpeechRecognition();\r\n+//     recognition.current.continuous = true;\r\n+//     recognition.current.interimResults = false;\r\n+//     recognition.current.onresult = onResult;\r\n+//     recognition.current.onend = () => {\r\n+//       console.log(\"Recognition ended.\");\r\n+//       if (isListening) {\r\n+//         startListening();\r\n+//       }\r\n+//     };\r\n+//     recognition.current.onerror = (event) => {\r\n+//       console.error(\"Recognition error:\", event.error);\r\n+//     };\r\n+\r\n+//     return () => {\r\n+//       recognition.current.abort();\r\n+//     };\r\n+//   }, []);\r\n+\r\n+//   // Update useEffect for managing the recognition state based on isListening and isRecognitionActive\r\n+//   useEffect(() => {\r\n+//     if (isListening && !isRecognitionActive) {\r\n+//       startListening();\r\n+//     } else if (!isListening && isRecognitionActive) {\r\n+//       stopListening();\r\n+//     }\r\n+//   }, [isListening, isRecognitionActive]);\r\n+\r\n+//   const goBack = () => {\r\n+//     if (window.history.length > 1) {\r\n+//       navigate(-1);\r\n+//     } else {\r\n+//       speak(\"Can't go back any further.\");\r\n+//     }\r\n+//   };\r\n+\r\n+//   const goForward = () => {\r\n+//     // Unfortunately, there's no direct way to check if you can go forward in the history.\r\n+//     // You might need to manage this state manually based on user navigation.\r\n+//     navigate(1);\r\n+//   };\r\n+\r\n+//   const playVideo = () => {\r\n+//     if (videoRef.current && !videoRef.current.paused) {\r\n+//       speak(\"Video is already playing.\");\r\n+//     } else if (videoRef.current) {\r\n+//       videoRef.current.play();\r\n+//       speak(\"Playing video.\");\r\n+//     } else {\r\n+//       speak(\"No video to play.\");\r\n+//     }\r\n+//   };\r\n+\r\n+//   const pauseVideo = () => {\r\n+//     if (videoRef.current && videoRef.current.paused) {\r\n+//       speak(\"Video is already paused.\");\r\n+//     } else if (videoRef.current) {\r\n+//       videoRef.current.pause();\r\n+//       speak(\"Video paused.\");\r\n+//     } else {\r\n+//       speak(\"No video to pause.\");\r\n+//     }\r\n+//   };\r\n+\r\n+//   const scrollAmount = window.innerHeight * 0.82;\r\n+\r\n+//   const scrollUp = () => {\r\n+//     if (window.pageYOffset === 0) {\r\n+//       speak(\"Already at the top of the page.\");\r\n+//     } else {\r\n+//       window.scrollBy(0, -scrollAmount);\r\n+//       speak(\"Scrolled up.\");\r\n+//     }\r\n+//   };\r\n+\r\n+//   const scrollDown = () => {\r\n+//     const maxScrollTop =\r\n+//       document.documentElement.scrollHeight - window.innerHeight;\r\n+//     if (window.pageYOffset >= maxScrollTop) {\r\n+//       speak(\"Already at the bottom of the page.\");\r\n+//     } else {\r\n+//       window.scrollBy(0, scrollAmount);\r\n+//       speak(\"Scrolled down.\");\r\n+//     }\r\n+//   };\r\n+\r\n+//   const scrollToTop = () => {\r\n+//     if (window.pageYOffset === 0) {\r\n+//       speak(\"Already at the top of the page.\");\r\n+//     } else {\r\n+//       window.scrollTo(0, 0);\r\n+//       speak(\"Scrolled to the top of the page.\");\r\n+//     }\r\n+//   };\r\n+\r\n+//   const scrollToBottom = () => {\r\n+//     const maxScrollTop =\r\n+//       document.documentElement.scrollHeight - window.innerHeight;\r\n+//     if (window.pageYOffset >= maxScrollTop) {\r\n+//       speak(\"Already at the bottom of the page.\");\r\n+//     } else {\r\n+//       window.scrollTo(0, document.body.scrollHeight);\r\n+//       speak(\"Scrolled to the bottom of the page.\");\r\n+//     }\r\n+//   };\r\n+\r\n+//   // const speak = (message) => {\r\n+//   //   const utterance = new SpeechSynthesisUtterance(message);\r\n+//   //   utterance.onend = () => {\r\n+//   //     setIsSpeaking(false);\r\n+//   //     console.log(\"Speaking ended.\");\r\n+//   //     // Only restart recognition if we're still supposed to be listening\r\n+//   //     // if (isListening) {\r\n+//   //     //   if (restartRecognitionTimeout.current) {\r\n+//   //     //     clearTimeout(restartRecognitionTimeout.current);\r\n+//   //     //   }\r\n+//   //     //   restartRecognitionTimeout.current = setTimeout(() => {\r\n+//   //     //     console.log(\"Recognition restarted.\");\r\n+//   //     //     recognition.current.start();\r\n+//   //     //   }, 100); // Delay to prevent immediate restart\r\n+//   //     // }\r\n+//   //     if (isListening && !recognition.current.starting) { // Check the flag before restarting\r\n+//   //       recognition.current.starting = true; // Set the flag when starting recognition\r\n+//   //       recognition.current.start();\r\n+//   //     }\r\n+//   //   };\r\n+\r\n+//   //   setIsSpeaking(true);\r\n+//   //   console.log(\"Speaking started.\");\r\n+//   //   recognition.current.stop(); // Stop recognition when the bot starts speaking\r\n+//   //   speechSynthesis.current.speak(utterance);\r\n+//   // };\r\n+\r\n+//   const speak = (message) => {\r\n+//     console.log(\"speak function called with message:\", message);\r\n+//     const utterance = new SpeechSynthesisUtterance(message);\r\n+//     utterance.onend = () => {\r\n+//       setIsSpeaking(false);\r\n+//       console.log(\"Speaking ended.\");\r\n+//       // Directly handle the restart of recognition here if needed\r\n+//       if (isListening) {\r\n+//         startListening();\r\n+//       }\r\n+//     };\r\n+\r\n+//     setIsSpeaking(true);\r\n+//     console.log(\"Speaking started.\");\r\n+//     recognition.current.stop(); // Ensure to stop recognition before speaking\r\n+//     speechSynthesis.current.speak(utterance);\r\n+//   };\r\n+\r\n+//   const onResult = (event) => {\r\n+//     const resultIndex = event.resultIndex;\r\n+//     const transcript = event.results[resultIndex][0].transcript\r\n+//       .trim()\r\n+//       .toLowerCase();\r\n+\r\n+//     if (event.results[resultIndex].isFinal) {\r\n+//       console.log(`Recognized text: ${transcript}`);\r\n+//       if (transcript.includes(\"brain\")) {\r\n+//         console.log(\"Wake word heard, processing command...\");\r\n+//         handleCommandWithFuse(transcript.replace(\"brain\", \"\"));\r\n+//       }\r\n+//     }\r\n+//   };\r\n+\r\n+//   // const onRecognitionEnd = () => {\r\n+//   //   console.log(\"Recognition ended.\");\r\n+//   //   setIsRecognitionActive(false); // Update state when recognition ends\r\n+//   //   recognition.current.starting = false; // Reset the flag when recognition ends\r\n+//   //   // We now check if the recognition is already running before starting it again\r\n+//   //   if (isListening && !isSpeaking && !recognition.current?.starting) {\r\n+//   //     console.log(\"Restarting recognition.\");\r\n+//   //     recognition.current.start();\r\n+//   //   }\r\n+//   // };\r\n+\r\n+//   // useEffect(() => {\r\n+//   //   if (isListening && !hasGreeted.current) {\r\n+//   //     speak(\"Hello, I'm Brane. How can I assist you today?\");\r\n+//   //     hasGreeted.current = true;\r\n+//   //   } else if (isListening && !isSpeaking) {\r\n+//   //     recognition.current.start();\r\n+//   //   }\r\n+//   // }, [isListening, isSpeaking]);\r\n+\r\n+//   useEffect(() => {\r\n+//     if (isListening && !hasGreeted.current) {\r\n+//       speak(\"Hello, I'm Brane. How can I assist you today?\");\r\n+//       hasGreeted.current = true;\r\n+//     } else if (isListening && !isSpeaking && !recognition.current.starting) {\r\n+//       // Check the flag before starting\r\n+//       recognition.current.starting = true; // Set the flag when starting recognition\r\n+//       recognition.current.start();\r\n+//     }\r\n+//   }, [isListening, isSpeaking]);\r\n+\r\n+//   // const startListening = () => {\r\n+//   //   console.log(\"Attempting to start listening.\");\r\n+//   //   if (recognition.current && !recognition.current.starting) {\r\n+//   //     setIsListening(true);\r\n+//   //     recognition.current.starting = true; // Set the flag when starting recognition\r\n+//   //     recognition.current.start();\r\n+//   //     console.log(\"Listening started.\");\r\n+//   //   }\r\n+//   // };\r\n+\r\n+//   // const stopListening = () => {\r\n+//   //   console.log(\"Stopping listening.\");\r\n+\r\n+//   //   setIsListening(false);\r\n+//   //   recognition.current.stop();\r\n+//   //   if (speechSynthesis.current.speaking) {\r\n+//   //     speechSynthesis.current.cancel();\r\n+//   //   }\r\n+//   //   if (restartRecognitionTimeout.current) {\r\n+//   //     clearTimeout(restartRecognitionTimeout.current);\r\n+//   //   }\r\n+//   //   console.log(\"Listening stopped.\");\r\n+//   // };\r\n+//   // Handle start and stop listening logic\r\n+//   const startListening = () => {\r\n+//     console.log(\"Attempting to start listening.\");\r\n+//     if (!recognition.current.starting) {\r\n+//       setIsListening(true);\r\n+//       recognition.current.starting = true;\r\n+//       recognition.current.start();\r\n+//       console.log(\"Listening started.\");\r\n+//     } else {\r\n+//       console.log(\"Recognition already active.\");\r\n+//     }\r\n+//   };\r\n+\r\n+//   const stopListening = () => {\r\n+//     console.log(\"Stopping listening.\");\r\n+//     if (recognition.current.starting) {\r\n+//       setIsListening(false);\r\n+//       recognition.current.starting = false;\r\n+//       recognition.current.stop();\r\n+//       console.log(\"Listening stopped.\");\r\n+//     } else {\r\n+//       console.log(\"Recognition already inactive.\");\r\n+//     }\r\n+//   };\r\n+\r\n+//   // const handleCommandWithFuse = (command) => {\r\n+//   //   const fuse = new Fuse(commands, { keys: [\"utterance\"], threshold: 0.4 });\r\n+//   //   const results = fuse.search(command);\r\n+//   //   const foundCommand = results.length ? results[0].item : null;\r\n+\r\n+//   //   if (foundCommand) {\r\n+//   //     console.log(\"Command found:\", foundCommand.utterance);\r\n+//   //     speak(foundCommand.response);\r\n+//   //     if (foundCommand.route) {\r\n+//   //       navigate(foundCommand.route); // Navigate to the route specified in the command\r\n+//   //     }\r\n+//   //   } else {\r\n+//   //     console.log(\"No command found.\");\r\n+//   //     speak(\"I'm not sure how to respond to that.\");\r\n+//   //   }\r\n+//   // };\r\n+\r\n+//   const handleCommandWithFuse = (command) => {\r\n+//     const fuse = new Fuse(commands, { keys: [\"utterance\"], threshold: 0.4 });\r\n+//     const results = fuse.search(command);\r\n+//     const foundCommand = results.length ? results[0].item : null;\r\n+\r\n+//     if (foundCommand) {\r\n+//       console.log(\"Command found:\", foundCommand.utterance);\r\n+\r\n+//       if (foundCommand.route) {\r\n+//         if (location.pathname !== foundCommand.route) {\r\n+//           navigate(foundCommand.route);\r\n+//           speak(\r\n+//             `Navigating to ${\r\n+//               foundCommand.routeDescription || \"requested page\"\r\n+//             }.`\r\n+//           );\r\n+//         } else {\r\n+//           speak(\r\n+//             `You are already on the ${\r\n+//               foundCommand.routeDescription || \"requested page\"\r\n+//             }.`\r\n+//           );\r\n+//         }\r\n+//       } else if (foundCommand.action) {\r\n+//         foundCommand.action();\r\n+//       }\r\n+\r\n+//       if (foundCommand.response) {\r\n+//         speak(foundCommand.response);\r\n+//       }\r\n+//     } else {\r\n+//       console.log(\"No command found.\");\r\n+//       speak(\"I'm not sure how to respond to that.\");\r\n+//     }\r\n+//   };\r\n+\r\n+//   const commands = [\r\n+//     {\r\n+//       utterance: \"Hello who are you ?\",\r\n+\r\n+//       response:\r\n+//         \"Hi! This is Brane! your Voice bot from Brane Education How can I Assist you Today ?\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"Hello\",\r\n+\r\n+//       response: \"Hi! How can I assist you today?\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"hello\",\r\n+\r\n+//       response: \"Hi! How can I assist you today?\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"Hi.\",\r\n+\r\n+//       response: \"Hello! How can I assist you today?\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"Hey there\",\r\n+\r\n+//       response: \"Hi! How can I assist you today?\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"Good morning Brane.\",\r\n+\r\n+//       response: \"Hey Hiii! Good morning  ! How can I help you?\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"Good afternoon Brane.\",\r\n+\r\n+//       response: \"Hey Hiii! Good after noon ! How can I help you?\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"Good evening Brane.\",\r\n+\r\n+//       response: \"Hey Hiii! Good evening ! How can I help you?\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"can you please take me to login page\",\r\n+//       route: \"/login\",\r\n+//       routeDescription: \"login page\",\r\n+//       response: \"Navigating to the login page.\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"go to login page\",\r\n+//       route: \"/login\",\r\n+//       routeDescription: \"login page\",\r\n+//       response: \"Navigating to the login page.\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"please take me to login page\",\r\n+//       route: \"/login\",\r\n+//       routeDescription: \"login page\",\r\n+//       response: \"Navigating to the login page.\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"Go to login page\",\r\n+//       route: \"/login\",\r\n+//       routeDescription: \"login page\",\r\n+//       response: \"Navigating to the login page.\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"open login page\",\r\n+//       route: \"/login\",\r\n+//       routeDescription: \"login page\",\r\n+//       response: \"Navigating to the login page.\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"can you please take me to signup page\",\r\n+//       route: \"/signup\",\r\n+//       routeDescription: \"signup page\",\r\n+//       response: \"Navigating to the signup page.\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"take me to signup page\",\r\n+//       route: \"/signup\",\r\n+//       routeDescription: \"signup page\",\r\n+//       response: \"Navigating to the signup page.\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"Go to signup page\",\r\n+//       route: \"/signup\",\r\n+//       routeDescription: \"signup page\",\r\n+//       response: \"Navigating to the signup page.\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"open signup page\",\r\n+//       route: \"/signup\",\r\n+//       routeDescription: \"signup page\",\r\n+//       response: \"Navigating to the signup page.\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"what are platform features\",\r\n+\r\n+//       response:\r\n+//         \"Dashboard, Dynamic time table, Learning Networks, Little Masters, Video Based Dictionary, General Search.\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"Features of platform\",\r\n+\r\n+//       response:\r\n+//         \"Dashboard, Dynamic time table, Learning Networks, Little Masters, Video Based Dictionary, General Search.\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"What does the platform offer\",\r\n+\r\n+//       response:\r\n+//         \"Dashboard, Dynamic time table, Learning Networks, Little Masters, Video Based Dictionary, General Search.\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"Say me the features of platform\",\r\n+\r\n+//       response:\r\n+//         \"Dashboard, Dynamic time table, Learning Networks, Little Masters, Video Based Dictionary, General Search.\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"Say me the services of platform\",\r\n+\r\n+//       response:\r\n+//         \"Dashboard, Dynamic time table, Learning Networks, Little Masters, Video Based Dictionary, General Search.\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"tell me the services offered by the platform\",\r\n+\r\n+//       response:\r\n+//         \"Dashboard, Dynamic time table, Learning Networks, Little Masters, Video Based Dictionary, General Search.\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"explain platform services\",\r\n+\r\n+//       response:\r\n+//         \"Dashboard, Dynamic time table, Learning Networks, Little Masters, Video Based Dictionary, General Search.\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"Give me the Parent voice of Julia Harris\",\r\n+\r\n+//       response:\r\n+//         \"Brane education has helped my son a lot in his studies. He improved a lot in his studies and is now able to score good marks in his exams\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"Play today's motivational video\",\r\n+\r\n+//       response: \"I am playing the video\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"Play today's video\",\r\n+\r\n+//       response: \"I am playing Motivational video\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"Leaders Voice\",\r\n+\r\n+//       response:\r\n+//         \"This Voice-interactive AI Platform is a game Changer. It revolutionizes education.\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"Curriculum Supported by Brane Education\",\r\n+\r\n+//       response:\r\n+//         \"we support multiple Boards let me say few Telangana State Board Andhra Pradesh Board Maharashtra Board Assam Board\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"Boards supported by the platform\",\r\n+\r\n+//       response:\r\n+//         \"we support multiple Boards let me say few Telangana State Board Andhra Pradesh Board Maharashtra Board Assam Board\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"Curriculum\",\r\n+\r\n+//       response:\r\n+//         \"we support multiple Boards let me say few Telangana State Board Andhra Pradesh Board Maharashtra Board Assam Board\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"Go to landing page\",\r\n+\r\n+//       response: \"Okay, I am taking you to the landing page.\",\r\n+\r\n+//       route: \"/childpage\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"take me to landing page\",\r\n+\r\n+//       response: \"Okay, I am taking you to the landing page.\",\r\n+\r\n+//       route: \"/childpage\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"move to landing page\",\r\n+\r\n+//       response: \"Okay, I am taking you to the landing page.\",\r\n+\r\n+//       route: \"/childpage\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"roll back to landing page\",\r\n+\r\n+//       response: \"Okay, I am taking you to the landing page.\",\r\n+\r\n+//       route: \"/childpage\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"move to landing page\",\r\n+\r\n+//       response: \"Okay, I am taking you to the landing page.\",\r\n+\r\n+//       route: \"/childpage\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"what is today's quote\",\r\n+\r\n+//       response:\r\n+//         \"Determination is the power that sees us through all our frustration and obstacles. It helps in building our willpower which is the very basis of success.\",\r\n+\r\n+//       // route: \"/childpage\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"Today's Inspirational quote\",\r\n+\r\n+//       response:\r\n+//         \"Determination is the power that sees us through all our frustration and obstacles. It helps in building our willpower which is the very basis of success.\",\r\n+\r\n+//       // route: \"/childpage\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"say me today's quote\",\r\n+\r\n+//       response:\r\n+//         \"Determination is the power that sees us through all our frustration and obstacles. It helps in building our willpower which is the very basis of success.\",\r\n+\r\n+//       // route: \"/childpage\",\r\n+//     },\r\n+//     {\r\n+//       utterance: \"go back\",\r\n+//       response: \"Going back.\",\r\n+//       action: goBack, // Note the use of an action property\r\n+//     },\r\n+//     {\r\n+//       utterance: \"go forward\",\r\n+//       response: \"Going forward.\",\r\n+//       action: goForward,\r\n+//     },\r\n+//     {\r\n+//       utterance: \"play video\",\r\n+//       // response: \"Playing video.\",\r\n+//       action: playVideo,\r\n+//     },\r\n+//     {\r\n+//       utterance: \"pause video\",\r\n+//       // response: \"Pausing video.\",\r\n+//       action: pauseVideo,\r\n+//     },\r\n+//     {\r\n+//       utterance: \"start video\",\r\n+//       // response: \"Playing video.\",\r\n+//       action: playVideo,\r\n+//     },\r\n+//     {\r\n+//       utterance: \"stop video\",\r\n+//       // response: \"Playing video.\",\r\n+//       action: pauseVideo,\r\n+//     },\r\n+//     {\r\n+//       utterance: \"scroll up\",\r\n+//       // response: \"Scrolling up.\",\r\n+//       action: scrollUp,\r\n+//     },\r\n+//     {\r\n+//       utterance: \"scroll down\",\r\n+//       // response: \"Scrolling down.\",\r\n+//       action: scrollDown,\r\n+//     },\r\n+//     {\r\n+//       utterance: \"go up\",\r\n+\r\n+//       // response: \"Scrolling up.\",\r\n+//       action: scrollUp,\r\n+//     },\r\n+//     {\r\n+//       utterance: \"go down\",\r\n+//       // response: \"Scrolling down.\",\r\n+//       action: scrollDown,\r\n+//     },\r\n+//     {\r\n+//       utterance: \"scroll to top\",\r\n+//       action: scrollToTop,\r\n+//     },\r\n+//     {\r\n+//       utterance: \"scroll to bottom\",\r\n+//       action: scrollToBottom,\r\n+//     },\r\n+//   ];\r\n+//   return (\r\n+//     <div className=\"speech-bot-container\">\r\n+//       <div\r\n+//         className={`button-container ${\r\n+//           isListening ? \"voicebotframeactive\" : \"voicebotframe\"\r\n+//         }`}\r\n+//       >\r\n+//         <div onClick={isListening ? stopListening : startListening}>\r\n+//           <iframe\r\n+//             src={\r\n+//               isListening\r\n+//                 ? \"https://lottie.host/?file=a89aca3f-5407-4052-82c3-2048afca7a9f/NpCdWzLSKD.json\"\r\n+//                 : \"https://lottie.host/?file=d2b6cc0e-fe95-4847-85b5-35365fca7e00/vTudpCuPZq.json\"\r\n+//             }\r\n+//             width=\"120\" // Set your desired width\r\n+//             height=\"120\" // Set your desired height\r\n+//             title={isListening ? \"Stop Animation\" : \"Start Animation\"}\r\n+//             className={isListening ? \"voicebotframeactive\" : \"voicebotframe\"}\r\n+//           ></iframe>\r\n+//           {isListening ? (\r\n+//             <div className=\"overlay\" onClick={stopListening}></div>\r\n+//           ) : (\r\n+//             <div className=\"overlay\" onClick={startListening}></div>\r\n+//           )}\r\n+//         </div>\r\n+//       </div>\r\n+//     </div>\r\n+//   );\r\n+// };\r\n+\r\n+// export default VoiceBot;\r\n+\r\n+// All functionalities but messed up\r\n+\r\n+// import React, { useState, useEffect, useRef } from \"react\";\r\n+// import { useNavigate, useLocation } from \"react-router-dom\";\r\n+// import Fuse from \"fuse.js\";\r\n+// import \"./VoiceBot.css\";\r\n+\r\n+// const VoiceBot = ({ videoRef, takeTestRef, goBackRef }) => {\r\n+//   const [isListening, setIsListening] = useState(false);\r\n+//   const [isSpeaking, setIsSpeaking] = useState(false);\r\n+//   const recognition = useRef(null);\r\n+//   const speechSynthesis = useRef(window.speechSynthesis);\r\n+//   const hasGreeted = useRef(false);\r\n+//   const navigate = useNavigate();\r\n+//   const location = useLocation();\r\n+//   const isRecognitionActive = useRef(false);\r\n+\r\n+//   useEffect(() => {\r\n+//     recognition.current = new window.webkitSpeechRecognition();\r\n+//     recognition.current.continuous = true;\r\n+//     recognition.current.interimResults = false;\r\n+//     recognition.current.onresult = onResult;\r\n+//     recognition.current.onend = onRecognitionEnd;\r\n+\r\n+//     return () => {\r\n+//       if (recognition.current) {\r\n+//         recognition.current.abort();\r\n+//       }\r\n+//     };\r\n+//   }, [location.pathname]);\r\n+\r\n+//   const onResult = (event) => {\r\n+//     const resultIndex = event.resultIndex;\r\n+//     const transcript = event.results[resultIndex][0].transcript\r\n+//       .trim()\r\n+//       .toLowerCase();\r\n+\r\n+//     if (event.results[resultIndex].isFinal) {\r\n+//       console.log(`Recognized text: ${transcript}`);\r\n+//       if (transcript.includes(\"brain\")) {\r\n+//         console.log(\"Wake word heard, processing command...\");\r\n+//         handleCommandWithFuse(transcript.replace(\"brain\", \"\"));\r\n+//       }\r\n+//     }\r\n+//   };\r\n+\r\n+//   const startListening = () => {\r\n+//     if (!isRecognitionActive.current) {\r\n+//       setIsListening(true);\r\n+//       recognition.current.start();\r\n+//       isRecognitionActive.current = true;\r\n+//     }\r\n+//   };\r\n+\r\n+//   const stopListening = () => {\r\n+//     if (isRecognitionActive.current) {\r\n+//       setIsListening(false);\r\n+//       recognition.current.stop();\r\n+//       isRecognitionActive.current = false;\r\n+//     }\r\n+//   };\r\n+\r\n+//   const onRecognitionEnd = () => {\r\n+//     isRecognitionActive.current = false;\r\n+//     if (isListening) {\r\n+//       startListening();\r\n+//     }\r\n+//   };\r\n+\r\n+//   const speak = (message) => {\r\n+//     const utterance = new SpeechSynthesisUtterance(message);\r\n+//     utterance.onend = () => {\r\n+//       setIsSpeaking(false);\r\n+//       if (isListening && !isRecognitionActive.current) {\r\n+//         startListening();\r\n+//       }\r\n+//     };\r\n+\r\n+//     setIsSpeaking(true);\r\n+//     if (isRecognitionActive.current) {\r\n+//       stopListening(); // Adjusted to use stopListening\r\n+//     }\r\n+//     speechSynthesis.current.speak(utterance);\r\n+//   };\r\n+\r\n+//   useEffect(() => {\r\n+//     if (isListening && !hasGreeted.current) {\r\n+//       speak(\"Hello, I'm Brane. How can I assist you today?\");\r\n+//       hasGreeted.current = true;\r\n+//     }\r\n+//   }, [isListening]);\r\n+\r\n+//   const goBack = () => {\r\n+//     if (window.history.length > 1) {\r\n+//       navigate(-1);\r\n+//     } else {\r\n+//       speak(\"Can't go back any further.\");\r\n+//     }\r\n+//   };\r\n+\r\n+//   const goForward = () => {\r\n+//     // Unfortunately, there's no direct way to check if you can go forward in the history.\r\n+//     // You might need to manage this state manually based on user navigation.\r\n+//     navigate(1);\r\n+//   };\r\n+\r\n+//   const playVideo = () => {\r\n+//     if (videoRef.current && !videoRef.current.paused) {\r\n+//       speak(\"Video is already playing.\");\r\n+//     } else if (videoRef.current) {\r\n+//       videoRef.current.play();\r\n+//       speak(\"Playing video.\");\r\n+//     } else {\r\n+//       speak(\"No video to play.\");\r\n+//     }\r\n+//   };\r\n+\r\n+//   const pauseVideo = () => {\r\n+//     if (videoRef.current && videoRef.current.paused) {\r\n+//       speak(\"Video is already paused.\");\r\n+//     } else if (videoRef.current) {\r\n+//       videoRef.current.pause();\r\n+//       speak(\"Video paused.\");\r\n+//     } else {\r\n+//       speak(\"No video to pause.\");\r\n+//     }\r\n+//   };\r\n+\r\n+//   const scrollAmount = window.innerHeight * 0.82;\r\n+\r\n+//   const scrollUp = () => {\r\n+//     if (window.pageYOffset === 0) {\r\n+//       speak(\"Already at the top of the page.\");\r\n+//     } else {\r\n+//       window.scrollBy(0, -scrollAmount);\r\n+//       speak(\"Scrolled up.\");\r\n+//     }\r\n+//   };\r\n+\r\n+//   const scrollDown = () => {\r\n+//     const maxScrollTop =\r\n+//       document.documentElement.scrollHeight - window.innerHeight;\r\n+//     if (window.pageYOffset >= maxScrollTop) {\r\n+//       speak(\"Already at the bottom of the page.\");\r\n+//     } else {\r\n+//       window.scrollBy(0, scrollAmount);\r\n+//       speak(\"Scrolled down.\");\r\n+//     }\r\n+//   };\r\n+\r\n+//   const scrollToTop = () => {\r\n+//     if (window.pageYOffset === 0) {\r\n+//       speak(\"Already at the top of the page.\");\r\n+//     } else {\r\n+//       window.scrollTo(0, 0);\r\n+//       speak(\"Scrolled to the top of the page.\");\r\n+//     }\r\n+//   };\r\n+\r\n+//   const scrollToBottom = () => {\r\n+//     const maxScrollTop =\r\n+//       document.documentElement.scrollHeight - window.innerHeight;\r\n+//     if (window.pageYOffset >= maxScrollTop) {\r\n+//       speak(\"Already at the bottom of the page.\");\r\n+//     } else {\r\n+//       window.scrollTo(0, document.body.scrollHeight);\r\n+//       speak(\"Scrolled to the bottom of the page.\");\r\n+//     }\r\n+//   };\r\n+\r\n+//   // const speak = (message) => {\r\n+//   //   const utterance = new SpeechSynthesisUtterance(message);\r\n+//   //   utterance.onend = () => {\r\n+//   //     setIsSpeaking(false);\r\n+//   //     console.log(\"Speaking ended.\");\r\n+//   //     // Only restart recognition if we're still supposed to be listening\r\n+//   //     // if (isListening) {\r\n+//   //     //   if (restartRecognitionTimeout.current) {\r\n+//   //     //     clearTimeout(restartRecognitionTimeout.current);\r\n+//   //     //   }\r\n+//   //     //   restartRecognitionTimeout.current = setTimeout(() => {\r\n+//   //     //     console.log(\"Recognition restarted.\");\r\n+//   //     //     recognition.current.start();\r\n+//   //     //   }, 100); // Delay to prevent immediate restart\r\n+//   //     // }\r\n+//   //     if (isListening && !recognition.current.starting) { // Check the flag before restarting\r\n+//   //       recognition.current.starting = true; // Set the flag when starting recognition\r\n+//   //       recognition.current.start();\r\n+//   //     }\r\n+//   //   };\r\n+\r\n+//   //   setIsSpeaking(true);\r\n+//   //   console.log(\"Speaking started.\");\r\n+//   //   recognition.current.stop(); // Stop recognition when the bot starts speaking\r\n+//   //   speechSynthesis.current.speak(utterance);\r\n+//   // };\r\n+\r\n+//   // const onRecognitionEnd = () => {\r\n+//   //   console.log(\"Recognition ended.\");\r\n+//   //   setIsRecognitionActive(false); // Update state when recognition ends\r\n+//   //   recognition.current.starting = false; // Reset the flag when recognition ends\r\n+//   //   // We now check if the recognition is already running before starting it again\r\n+//   //   if (isListening && !isSpeaking && !recognition.current?.starting) {\r\n+//   //     console.log(\"Restarting recognition.\");\r\n+//   //     recognition.current.start();\r\n+//   //   }\r\n+//   // };\r\n+\r\n+//   // useEffect(() => {\r\n+//   //   if (isListening && !hasGreeted.current) {\r\n+//   //     speak(\"Hello, I'm Brane. How can I assist you today?\");\r\n+//   //     hasGreeted.current = true;\r\n+//   //   } else if (isListening && !isSpeaking) {\r\n+//   //     recognition.current.start();\r\n+//   //   }\r\n+//   // }, [isListening, isSpeaking]);\r\n+\r\n+//   // const startListening = () => {\r\n+//   //   console.log(\"Attempting to start listening.\");\r\n+//   //   if (recognition.current && !recognition.current.starting) {\r\n+//   //     setIsListening(true);\r\n+//   //     recognition.current.starting = true; // Set the flag when starting recognition\r\n+//   //     recognition.current.start();\r\n+//   //     console.log(\"Listening started.\");\r\n+//   //   }\r\n+//   // };\r\n+\r\n+//   // const stopListening = () => {\r\n+//   //   console.log(\"Stopping listening.\");\r\n+\r\n+//   //   setIsListening(false);\r\n+//   //   recognition.current.stop();\r\n+//   //   if (speechSynthesis.current.speaking) {\r\n+//   //     speechSynthesis.current.cancel();\r\n+//   //   }\r\n+//   //   if (restartRecognitionTimeout.current) {\r\n+//   //     clearTimeout(restartRecognitionTimeout.current);\r\n+//   //   }\r\n+//   //   console.log(\"Listening stopped.\");\r\n+//   // };\r\n+//   // Handle start and stop listening logic\r\n+\r\n+//   useEffect(() => {\r\n+//     if (isListening && !hasGreeted.current) {\r\n+//       speak(\"Hello, I'm Brane. How can I assist you today?\");\r\n+//       hasGreeted.current = true;\r\n+//     }\r\n+//   }, [isListening]);\r\n+\r\n+//   // const handleCommandWithFuse = (command) => {\r\n+//   //   const fuse = new Fuse(commands, { keys: [\"utterance\"], threshold: 0.4 });\r\n+//   //   const results = fuse.search(command);\r\n+//   //   const foundCommand = results.length ? results[0].item : null;\r\n+\r\n+//   //   if (foundCommand) {\r\n+//   //     console.log(\"Command found:\", foundCommand.utterance);\r\n+//   //     speak(foundCommand.response);\r\n+//   //     if (foundCommand.route) {\r\n+//   //       navigate(foundCommand.route); // Navigate to the route specified in the command\r\n+//   //     }\r\n+//   //   } else {\r\n+//   //     console.log(\"No command found.\");\r\n+//   //     speak(\"I'm not sure how to respond to that.\");\r\n+//   //   }\r\n+//   // };\r\n+\r\n+//   const handleCommandWithFuse = (command) => {\r\n+//     const fuse = new Fuse(commands, { keys: [\"utterance\"], threshold: 0.4 });\r\n+//     const results = fuse.search(command);\r\n+//     const foundCommand = results.length ? results[0].item : null;\r\n+\r\n+//     if (foundCommand) {\r\n+//       console.log(\"Command found:\", foundCommand.utterance);\r\n+\r\n+//       if (foundCommand.action) {\r\n+//         foundCommand.action();\r\n+//       } else if (foundCommand.route) {\r\n+//         navigate(foundCommand.route);\r\n+//       }\r\n+\r\n+//       if (foundCommand.response) {\r\n+//         speak(foundCommand.response);\r\n+//       }\r\n+//     } else {\r\n+//       console.log(\"No command found.\");\r\n+//       speak(\"I'm not sure how to respond to that.\");\r\n+//     }\r\n+//   };\r\n+\r\n+//   const commands = [\r\n+//     {\r\n+//       utterance: \"Hello who are you ?\",\r\n+\r\n+//       response:\r\n+//         \"Hi! This is Brane! your Voice bot from Brane Education How can I Assist you Today ?\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"Hello\",\r\n+\r\n+//       response: \"Hi! How can I assist you today?\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"hello\",\r\n+\r\n+//       response: \"Hi! How can I assist you today?\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"Hi.\",\r\n+\r\n+//       response: \"Hello! How can I assist you today?\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"Hey there\",\r\n+\r\n+//       response: \"Hi! How can I assist you today?\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"Good morning Brane.\",\r\n+\r\n+//       response: \"Hey Hiii! Good morning  ! How can I help you?\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"Good afternoon Brane.\",\r\n+\r\n+//       response: \"Hey Hiii! Good after noon ! How can I help you?\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"Good evening Brane.\",\r\n+\r\n+//       response: \"Hey Hiii! Good evening ! How can I help you?\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"can you please take me to login page\",\r\n+//       route: \"/login\",\r\n+//       routeDescription: \"login page\",\r\n+//       response: \"Navigating to the login page.\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"go to login page\",\r\n+//       route: \"/login\",\r\n+//       routeDescription: \"login page\",\r\n+//       response: \"Navigating to the login page.\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"please take me to login page\",\r\n+//       route: \"/login\",\r\n+//       routeDescription: \"login page\",\r\n+//       response: \"Navigating to the login page.\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"Go to login page\",\r\n+//       route: \"/login\",\r\n+//       routeDescription: \"login page\",\r\n+//       response: \"Navigating to the login page.\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"open login page\",\r\n+//       route: \"/login\",\r\n+//       routeDescription: \"login page\",\r\n+//       response: \"Navigating to the login page.\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"can you please take me to signup page\",\r\n+//       route: \"/signup\",\r\n+//       routeDescription: \"signup page\",\r\n+//       response: \"Navigating to the signup page.\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"take me to signup page\",\r\n+//       route: \"/signup\",\r\n+//       routeDescription: \"signup page\",\r\n+//       response: \"Navigating to the signup page.\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"Go to signup page\",\r\n+//       route: \"/signup\",\r\n+//       routeDescription: \"signup page\",\r\n+//       response: \"Navigating to the signup page.\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"open signup page\",\r\n+//       route: \"/signup\",\r\n+//       routeDescription: \"signup page\",\r\n+//       response: \"Navigating to the signup page.\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"what are platform features\",\r\n+\r\n+//       response:\r\n+//         \"Dashboard, Dynamic time table, Learning Networks, Little Masters, Video Based Dictionary, General Search.\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"Features of platform\",\r\n+\r\n+//       response:\r\n+//         \"Dashboard, Dynamic time table, Learning Networks, Little Masters, Video Based Dictionary, General Search.\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"What does the platform offer\",\r\n+\r\n+//       response:\r\n+//         \"Dashboard, Dynamic time table, Learning Networks, Little Masters, Video Based Dictionary, General Search.\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"Say me the features of platform\",\r\n+\r\n+//       response:\r\n+//         \"Dashboard, Dynamic time table, Learning Networks, Little Masters, Video Based Dictionary, General Search.\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"Say me the services of platform\",\r\n+\r\n+//       response:\r\n+//         \"Dashboard, Dynamic time table, Learning Networks, Little Masters, Video Based Dictionary, General Search.\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"tell me the services offered by the platform\",\r\n+\r\n+//       response:\r\n+//         \"Dashboard, Dynamic time table, Learning Networks, Little Masters, Video Based Dictionary, General Search.\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"explain platform services\",\r\n+\r\n+//       response:\r\n+//         \"Dashboard, Dynamic time table, Learning Networks, Little Masters, Video Based Dictionary, General Search.\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"Give me the Parent voice of Julia Harris\",\r\n+\r\n+//       response:\r\n+//         \"Brane education has helped my son a lot in his studies. He improved a lot in his studies and is now able to score good marks in his exams\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"Play today's motivational video\",\r\n+\r\n+//       response: \"I am playing the video\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"Play today's video\",\r\n+\r\n+//       response: \"I am playing Motivational video\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"Leaders Voice\",\r\n+\r\n+//       response:\r\n+//         \"This Voice-interactive AI Platform is a game Changer. It revolutionizes education.\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"Curriculum Supported by Brane Education\",\r\n+\r\n+//       response:\r\n+//         \"we support multiple Boards let me say few Telangana State Board Andhra Pradesh Board Maharashtra Board Assam Board\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"Boards supported by the platform\",\r\n+\r\n+//       response:\r\n+//         \"we support multiple Boards let me say few Telangana State Board Andhra Pradesh Board Maharashtra Board Assam Board\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"Curriculum\",\r\n+\r\n+//       response:\r\n+//         \"we support multiple Boards let me say few Telangana State Board Andhra Pradesh Board Maharashtra Board Assam Board\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"Go to landing page\",\r\n+\r\n+//       response: \"Okay, I am taking you to the landing page.\",\r\n+\r\n+//       route: \"/childpage\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"take me to landing page\",\r\n+\r\n+//       response: \"Okay, I am taking you to the landing page.\",\r\n+\r\n+//       route: \"/childpage\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"move to landing page\",\r\n+\r\n+//       response: \"Okay, I am taking you to the landing page.\",\r\n+\r\n+//       route: \"/childpage\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"roll back to landing page\",\r\n+\r\n+//       response: \"Okay, I am taking you to the landing page.\",\r\n+\r\n+//       route: \"/childpage\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"move to landing page\",\r\n+\r\n+//       response: \"Okay, I am taking you to the landing page.\",\r\n+\r\n+//       route: \"/childpage\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"what is today's quote\",\r\n+\r\n+//       response:\r\n+//         \"Determination is the power that sees us through all our frustration and obstacles. It helps in building our willpower which is the very basis of success.\",\r\n+\r\n+//       // route: \"/childpage\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"Today's Inspirational quote\",\r\n+\r\n+//       response:\r\n+//         \"Determination is the power that sees us through all our frustration and obstacles. It helps in building our willpower which is the very basis of success.\",\r\n+\r\n+//       // route: \"/childpage\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"say me today's quote\",\r\n+\r\n+//       response:\r\n+//         \"Determination is the power that sees us through all our frustration and obstacles. It helps in building our willpower which is the very basis of success.\",\r\n+\r\n+//       // route: \"/childpage\",\r\n+//     },\r\n+//     {\r\n+//       utterance: \"go back\",\r\n+//       response: \"Going back.\",\r\n+//       action: goBack, // Note the use of an action property\r\n+//     },\r\n+//     {\r\n+//       utterance: \"go forward\",\r\n+//       response: \"Going forward.\",\r\n+//       action: goForward,\r\n+//     },\r\n+//     {\r\n+//       utterance: \"play video\",\r\n+//       // response: \"Playing video.\",\r\n+//       action: playVideo,\r\n+//     },\r\n+//     {\r\n+//       utterance: \"pause video\",\r\n+//       // response: \"Pausing video.\",\r\n+//       action: pauseVideo,\r\n+//     },\r\n+//     {\r\n+//       utterance: \"start video\",\r\n+//       // response: \"Playing video.\",\r\n+//       action: playVideo,\r\n+//     },\r\n+//     {\r\n+//       utterance: \"stop video\",\r\n+//       // response: \"Playing video.\",\r\n+//       action: pauseVideo,\r\n+//     },\r\n+//     {\r\n+//       utterance: \"scroll up\",\r\n+//       // response: \"Scrolling up.\",\r\n+//       action: scrollUp,\r\n+//     },\r\n+//     {\r\n+//       utterance: \"scroll down\",\r\n+//       // response: \"Scrolling down.\",\r\n+//       action: scrollDown,\r\n+//     },\r\n+//     {\r\n+//       utterance: \"go up\",\r\n+\r\n+//       // response: \"Scrolling up.\",\r\n+//       action: scrollUp,\r\n+//     },\r\n+//     {\r\n+//       utterance: \"go down\",\r\n+//       // response: \"Scrolling down.\",\r\n+//       action: scrollDown,\r\n+//     },\r\n+//     {\r\n+//       utterance: \"scroll to top\",\r\n+//       action: scrollToTop,\r\n+//     },\r\n+//     {\r\n+//       utterance: \"scroll to bottom\",\r\n+//       action: scrollToBottom,\r\n+//     },\r\n+//     {\r\n+//       utterance: \"go back\",\r\n+//       action: goBackRef?.current?.click, // Use goBackRef directly\r\n+//       response: \"Going back.\",\r\n+//     },\r\n+//     {\r\n+//       utterance: \"take test\",\r\n+//       action: takeTestRef?.current?.click, // Use takeTestRef directly\r\n+//       response: \"Starting the test.\",\r\n+//     },\r\n+//   ];\r\n+//   return (\r\n+//     <div className=\"speech-bot-container\">\r\n+//       <div\r\n+//         className={`button-container ${\r\n+//           isListening ? \"voicebotframeactive\" : \"voicebotframe\"\r\n+//         }`}\r\n+//       >\r\n+//         <div onClick={isListening ? stopListening : startListening}>\r\n+//           <iframe\r\n+//             src={\r\n+//               isListening\r\n+//                 ? \"https://lottie.host/?file=a89aca3f-5407-4052-82c3-2048afca7a9f/NpCdWzLSKD.json\"\r\n+//                 : \"https://lottie.host/?file=d2b6cc0e-fe95-4847-85b5-35365fca7e00/vTudpCuPZq.json\"\r\n+//             }\r\n+//             width=\"120\" // Set your desired width\r\n+//             height=\"120\" // Set your desired height\r\n+//             title={isListening ? \"Stop Animation\" : \"Start Animation\"}\r\n+//             className={isListening ? \"voicebotframeactive\" : \"voicebotframe\"}\r\n+//           ></iframe>\r\n+//           {isListening ? (\r\n+//             <div className=\"overlay\" onClick={stopListening}></div>\r\n+//           ) : (\r\n+//             <div className=\"overlay\" onClick={startListening}></div>\r\n+//           )}\r\n+//         </div>\r\n+//       </div>\r\n+//     </div>\r\n+//   );\r\n+// };\r\n+\r\n+// export default VoiceBot;\r\n"
                },
                {
                    "date": 1700735776066,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -315,26 +315,13 @@\n       speak(\"I'm not sure how to respond to that.\");\r\n     }\r\n   };\r\n \r\n-  // Utility function to extract number from spoken text\r\n+// Utility function to extract number from spoken text\r\n const extractNumber = (spokenText) => {\r\n-  return spokenText.match(/\\d+/)[0]; // Simple regex to extract continuous digits\r\n+  // Simple regex to extract continuous digits\r\n+  return spokenText.match(/\\d+/)[0];\r\n };\r\n-\r\n-// Functions to update context or state\r\n-const setMobileNumber = (number) => {\r\n-  // Update your context or state here\r\n-  // For example, using context:\r\n-  // context.updateMobileNumber(number);\r\n-};\r\n-\r\n-const setPin = (pin) => {\r\n-  // Update your context or state here\r\n-  // For example, using context:\r\n-  // context.updatePin(pin);\r\n-};\r\n-\r\n   const commands = [\r\n     {\r\n       utterance: \"Hello who are you ?\",\r\n \r\n@@ -3850,3853 +3837,4 @@\n //   );\r\n // };\r\n \r\n // export default VoiceBot;\r\n-import React, { useState, useEffect, useRef } from \"react\";\r\n-import { useNavigate, useLocation } from \"react-router-dom\";\r\n-import Fuse from \"fuse.js\";\r\n-import \"./VoiceBot.css\";\r\n-import chatbotimage from \"../../assets/chatbotgif.gif\";\r\n-\r\n-const VoiceBot = ({ videoRefs }) => {\r\n-  const [isListening, setIsListening] = useState(false);\r\n-  const [isSpeaking, setIsSpeaking] = useState(false);\r\n-  const recognition = useRef(null);\r\n-  const speechSynthesis = useRef(window.speechSynthesis);\r\n-  const [hasGreeted, setHasGreeted] = useState(false);\r\n-  const navigate = useNavigate();\r\n-\r\n-  // Initialize speech recognition\r\n-  useEffect(() => {\r\n-    recognition.current = new window.webkitSpeechRecognition();\r\n-    recognition.current.continuous = true;\r\n-    recognition.current.interimResults = false;\r\n-    recognition.current.onresult = onResult;\r\n-    recognition.current.onend = onRecognitionEnd;\r\n-    recognition.current.starting = false;\r\n-\r\n-    recognition.current.onerror = (event) => {\r\n-      console.error(\"Recognition error:\", event.error);\r\n-      if (isListening && !isSpeaking) {\r\n-        restartRecognition();\r\n-      }\r\n-    };\r\n-\r\n-    return () => {\r\n-      if (recognition.current) {\r\n-        recognition.current.abort();\r\n-      }\r\n-    };\r\n-  }, []);\r\n-\r\n-  useEffect(() => {\r\n-    const checkRecognition = () => {\r\n-      if (isListening && !isSpeaking && !recognition.current.starting) {\r\n-        console.log(\"Restarting recognition because it's not active.\");\r\n-        recognition.current.starting = true;\r\n-        recognition.current.start();\r\n-        console.log(\"Restarted recognition.\");\r\n-      }\r\n-    };\r\n-\r\n-    const recognitionCheckInterval = setInterval(checkRecognition, 500); // Check every .5 second\r\n-\r\n-    return () => {\r\n-      clearInterval(recognitionCheckInterval);\r\n-    };\r\n-  }, [isListening, isSpeaking]);\r\n-\r\n-  const historyStack = useRef([]);\r\n-\r\n-  useEffect(() => {\r\n-    return () => {\r\n-      // Clean up the listener when the component unmounts\r\n-      window.removeEventListener(\"popstate\", handlePopState);\r\n-    };\r\n-  }, []);\r\n-\r\n-  const handlePopState = () => {\r\n-    // This needs to handle both back and forward browser actions\r\n-    // Use some logic to determine whether it's a back or forward action\r\n-    // For simplicity, assume it's always back\r\n-    historyStack.current.pop();\r\n-    forwardStack.current.length = 0; // Clear forward stack on manual navigation\r\n-  };\r\n-\r\n-  // Listen to popstate events to update the history stack\r\n-  useEffect(() => {\r\n-    window.addEventListener(\"popstate\", handlePopState);\r\n-  }, []);\r\n-\r\n-  const forwardStack = useRef([]);\r\n-\r\n-  const goBack = () => {\r\n-    if (window.history.state && window.history.state.idx > 0) {\r\n-      window.history.back();\r\n-      speak(\"Going back\");\r\n-    } else {\r\n-      speak(\"Can't go back any further.\");\r\n-    }\r\n-  };\r\n-\r\n-  const goForward = () => {\r\n-    if (\r\n-      window.history.state &&\r\n-      window.history.state.idx < window.history.length - 1\r\n-    ) {\r\n-      window.history.forward();\r\n-      speak(\"Going forward\");\r\n-    } else {\r\n-      speak(\"No forward history available.\");\r\n-    }\r\n-  };\r\n-\r\n-  const scrollAmount = window.innerHeight * 0.82;\r\n-\r\n-  const scrollUp = () => {\r\n-    if (window.pageYOffset === 0) {\r\n-      speak(\"Already at the top of the page.\");\r\n-    } else {\r\n-      window.scrollBy(0, -scrollAmount);\r\n-      speak(\"Scrolled up.\");\r\n-    }\r\n-  };\r\n-\r\n-  const scrollDown = () => {\r\n-    const maxScrollTop =\r\n-      document.documentElement.scrollHeight - window.innerHeight;\r\n-    if (window.pageYOffset >= maxScrollTop) {\r\n-      speak(\"Already at the bottom of the page.\");\r\n-    } else {\r\n-      window.scrollBy(0, scrollAmount);\r\n-      speak(\"Scrolled down.\");\r\n-    }\r\n-  };\r\n-\r\n-  const scrollToTop = () => {\r\n-    if (window.pageYOffset === 0) {\r\n-      speak(\"Already at the top of the page.\");\r\n-    } else {\r\n-      window.scrollTo(0, 0);\r\n-      speak(\"Scrolled to the top of the page.\");\r\n-    }\r\n-  };\r\n-\r\n-  const scrollToBottom = () => {\r\n-    const maxScrollTop =\r\n-      document.documentElement.scrollHeight - window.innerHeight;\r\n-    if (window.pageYOffset >= maxScrollTop) {\r\n-      speak(\"Already at the bottom of the page.\");\r\n-    } else {\r\n-      window.scrollTo(0, document.body.scrollHeight);\r\n-      speak(\"Scrolled to the bottom of the page.\");\r\n-    }\r\n-  };\r\n-\r\n-  const controlVideo = (videoId, action) => {\r\n-    const videoRef = videoRefs.current.get(videoId);\r\n-    if (videoRef && videoRef.current) {\r\n-      switch (action) {\r\n-        case \"play\":\r\n-          videoRef.current.play();\r\n-          break;\r\n-        case \"pause\":\r\n-          videoRef.current.pause();\r\n-          break;\r\n-        case \"mute\":\r\n-          videoRef.current.muted = true;\r\n-          break;\r\n-        case \"unmute\":\r\n-          videoRef.current.muted = false;\r\n-          break;\r\n-        case \"fullscreen\":\r\n-          if (videoRef.current.requestFullscreen) {\r\n-            videoRef.current.requestFullscreen();\r\n-          } else if (videoRef.current.webkitRequestFullscreen) {\r\n-            // Safari\r\n-            videoRef.current.webkitRequestFullscreen();\r\n-          } else if (videoRef.current.msRequestFullscreen) {\r\n-            // IE11\r\n-            videoRef.current.msRequestFullscreen();\r\n-          }\r\n-          break;\r\n-        case \"exitFullscreen\":\r\n-          if (document.exitFullscreen) {\r\n-            document.exitFullscreen();\r\n-          } else if (document.webkitExitFullscreen) {\r\n-            // Safari\r\n-            document.webkitExitFullscreen();\r\n-          } else if (document.msExitFullscreen) {\r\n-            // IE11\r\n-            document.msExitFullscreen();\r\n-          }\r\n-          break;\r\n-        case \"increaseVolume\":\r\n-          if (videoRef.current.volume < 1) {\r\n-            videoRef.current.volume = Math.min(\r\n-              1,\r\n-              videoRef.current.volume + 0.1\r\n-            );\r\n-          }\r\n-          break;\r\n-        case \"decreaseVolume\":\r\n-          if (videoRef.current.volume > 0) {\r\n-            videoRef.current.volume = Math.max(\r\n-              0,\r\n-              videoRef.current.volume - 0.1\r\n-            );\r\n-          }\r\n-          break;\r\n-        // Add other cases as needed\r\n-      }\r\n-      speak(\r\n-        `${\r\n-          action.charAt(0).toUpperCase() +\r\n-          action\r\n-            .slice(1)\r\n-            .replace(/([A-Z])/g, \" $1\")\r\n-            .toLowerCase()\r\n-        }ing video.`\r\n-      );\r\n-    } else {\r\n-      speak(`Video not found.`);\r\n-    }\r\n-  };\r\n-\r\n-  const speak = (message) => {\r\n-    const utterance = new SpeechSynthesisUtterance(message);\r\n-    utterance.onend = () => {\r\n-      setIsSpeaking(false);\r\n-      // Restart recognition after speaking has ended\r\n-      if (isListening) {\r\n-        restartRecognition();\r\n-      }\r\n-    };\r\n-\r\n-    setIsSpeaking(true);\r\n-    // Stop recognition when the bot starts speaking\r\n-    if (recognition.current) {\r\n-      recognition.current.abort();\r\n-    }\r\n-    speechSynthesis.current.speak(utterance);\r\n-  };\r\n-\r\n-  const restartRecognition = () => {\r\n-    // Check if recognition is not already started and if the bot is set to listen\r\n-    if (\r\n-      recognition.current &&\r\n-      !recognition.current.starting &&\r\n-      isListening &&\r\n-      !isSpeaking\r\n-    ) {\r\n-      recognition.current.abort(); // Ensure any ongoing recognition is stopped\r\n-      recognition.current.starting = true;\r\n-      recognition.current.start();\r\n-    }\r\n-  };\r\n-\r\n-  // Restart recognition when bot finishes speaking and isListening is true\r\n-  useEffect(() => {\r\n-    if (!isSpeaking && isListening) {\r\n-      restartRecognition();\r\n-    }\r\n-  }, [isSpeaking, isListening]);\r\n-\r\n-  const onResult = (event) => {\r\n-    const resultIndex = event.resultIndex;\r\n-    const transcript = event.results[resultIndex][0].transcript\r\n-      .trim()\r\n-      .toLowerCase();\r\n-\r\n-    if (event.results[resultIndex].isFinal) {\r\n-      console.log(`Recognized text: ${transcript}`);\r\n-      if (transcript.includes(\"brain\")) {\r\n-        console.log(\"Wake word heard, processing command...\");\r\n-        handleCommandWithFuse(transcript.replace(\"brain\", \"\"));\r\n-      }\r\n-    }\r\n-  };\r\n-\r\n-  const onRecognitionEnd = () => {\r\n-    recognition.current.starting = false;\r\n-    if (isListening && !isSpeaking) {\r\n-      restartRecognition();\r\n-    }\r\n-  };\r\n-\r\n-  useEffect(() => {\r\n-    if (isListening && !hasGreeted) {\r\n-      speak(\"Hello, I'm Brane. How can I help you today?\");\r\n-      setHasGreeted(true);\r\n-    }\r\n-  }, [isListening, hasGreeted]);\r\n-\r\n-  // Updated startListening function\r\n-  const startListening = () => {\r\n-    setIsListening(true);\r\n-    if (!recognition.current.starting) {\r\n-      restartRecognition();\r\n-    }\r\n-  };\r\n-\r\n-  // Updated stopListening function\r\n-  const stopListening = () => {\r\n-    setIsListening(false);\r\n-    if (speechSynthesis.current.speaking) {\r\n-      speechSynthesis.current.cancel();\r\n-    }\r\n-    recognition.current.abort();\r\n-  };\r\n-\r\n-  const handleCommandWithFuse = (command) => {\r\n-    const fuse = new Fuse(commands, { keys: [\"utterance\"], threshold: 0.4 });\r\n-    const results = fuse.search(command);\r\n-    const foundCommand = results.length ? results[0].item : null;\r\n-\r\n-    if (foundCommand) {\r\n-      console.log(\"Command found:\", foundCommand.utterance);\r\n-\r\n-      if (foundCommand.action) {\r\n-        foundCommand.action();\r\n-      } else if (foundCommand.route) {\r\n-        navigate(foundCommand.route);\r\n-      }\r\n-\r\n-      // Speak after performing the action or navigation\r\n-      speak(foundCommand.response);\r\n-    } else {\r\n-      console.log(\"No command found.\");\r\n-      speak(\"I'm not sure how to respond to that.\");\r\n-    }\r\n-  };\r\n-\r\n-  // Utility function to extract number from spoken text\r\n-const extractNumber = (spokenText) => {\r\n-  return spokenText.match(/\\d+/)[0]; // Simple regex to extract continuous digits\r\n-};\r\n-\r\n-// Functions to update context or state\r\n-const setMobileNumber = (number) => {\r\n-  // Update your context or state here\r\n-  // For example, using context:\r\n-  // context.updateMobileNumber(number);\r\n-};\r\n-\r\n-const setPin = (pin) => {\r\n-  // Update your context or state here\r\n-  // For example, using context:\r\n-  // context.updatePin(pin);\r\n-};\r\n-\r\n-  const commands = [\r\n-    {\r\n-      utterance: \"Hello who are you ?\",\r\n-\r\n-      response:\r\n-        \"Hi! This is Brane! your Voice bot from Brane Education How can I Assist you Today ?\",\r\n-    },\r\n-\r\n-    {\r\n-      utterance: \"Hello\",\r\n-\r\n-      response: \"Hi! How can I assist you today?\",\r\n-    },\r\n-\r\n-    {\r\n-      utterance: \"hello\",\r\n-\r\n-      response: \"Hi! How can I assist you today?\",\r\n-    },\r\n-\r\n-    {\r\n-      utterance: \"Hi.\",\r\n-\r\n-      response: \"Hello! How can I assist you today?\",\r\n-    },\r\n-\r\n-    {\r\n-      utterance: \"Hey there\",\r\n-\r\n-      response: \"Hi! How can I assist you today?\",\r\n-    },\r\n-\r\n-    {\r\n-      utterance: \"Good morning Brane.\",\r\n-\r\n-      response: \"Hey Hiii! Good morning  ! How can I help you?\",\r\n-    },\r\n-\r\n-    {\r\n-      utterance: \"Good afternoon Brane.\",\r\n-\r\n-      response: \"Hey Hiii! Good after noon ! How can I help you?\",\r\n-    },\r\n-\r\n-    {\r\n-      utterance: \"Good evening Brane.\",\r\n-\r\n-      response: \"Hey Hiii! Good evening ! How can I help you?\",\r\n-    },\r\n-\r\n-    {\r\n-      utterance: \"take me to homepage\",\r\n-\r\n-      route: \"/\",\r\n-\r\n-      response: \"You're in Homepage now\",\r\n-    },\r\n-    {\r\n-      utterance: \"open homepage\",\r\n-\r\n-      route: \"/\",\r\n-\r\n-      response: \"You're in Homepage now\",\r\n-    },\r\n-    {\r\n-      utterance: \"go to homepage\",\r\n-\r\n-      route: \"/\",\r\n-\r\n-      response: \"You're in Homepage now\",\r\n-    },\r\n-    {\r\n-      utterance: \"go back to homepage\",\r\n-\r\n-      route: \"/\",\r\n-\r\n-      response: \"You're in Homepage now\",\r\n-    },\r\n-    {\r\n-      utterance: \"can you please take me to login page\",\r\n-\r\n-      route: \"/login\",\r\n-\r\n-      response: \"Here's the Login Page, Please Login\",\r\n-    },\r\n-\r\n-    {\r\n-      utterance: \"please take me to login page\",\r\n-\r\n-      route: \"/login\",\r\n-\r\n-      response: \"Here's the Login Page, Please Login\",\r\n-    },\r\n-\r\n-    {\r\n-      utterance: \"Go to login page\",\r\n-\r\n-      route: \"/login\",\r\n-\r\n-      response: \"Here's the Login Page, Please Login\",\r\n-    },\r\n-\r\n-    {\r\n-      utterance: \"open login page\",\r\n-\r\n-      route: \"/login\",\r\n-\r\n-      response: \"Here's the Login Page, Please Login\",\r\n-    },\r\n-\r\n-    {\r\n-      utterance: \"can you please take me to signup page\",\r\n-\r\n-      route: \"/signup\",\r\n-\r\n-      response: \"Here's the signup page. Please proceed With Registration.\",\r\n-    },\r\n-\r\n-    {\r\n-      utterance: \"take me to signup page\",\r\n-\r\n-      route: \"/signup\",\r\n-\r\n-      response: \"Here's the signup page. Please proceed With Registration.\",\r\n-    },\r\n-\r\n-    {\r\n-      utterance: \"Go to signup page\",\r\n-\r\n-      route: \"/signup\",\r\n-\r\n-      response: \"Here's the signup page. Please proceed With Registration.\",\r\n-    },\r\n-\r\n-    {\r\n-      utterance: \"open signup page\",\r\n-\r\n-      route: \"/signup\",\r\n-\r\n-      response: \"Here's the signup page. Please proceed With Registration.\",\r\n-    },\r\n-\r\n-    {\r\n-      utterance: \"Go to face id\",\r\n-\r\n-      route: \"/login/faceid\",\r\n-\r\n-      response: \"Here's Face ID Login. Please proceed.\",\r\n-    },\r\n-\r\n-    {\r\n-      utterance: \"Go to face id login\",\r\n-\r\n-      route: \"/login/faceid\",\r\n-\r\n-      response: \"Here's Face ID Login. Please proceed.\",\r\n-    },\r\n-    {\r\n-      utterance: \"Go to face login\",\r\n-\r\n-      route: \"/login/faceid\",\r\n-\r\n-      response: \"Here's Face ID Login. Please proceed.\",\r\n-    },\r\n-\r\n-    {\r\n-      utterance: \"login with face id\",\r\n-\r\n-      route: \"/login/faceid\",\r\n-\r\n-      response: \"Here's Face ID Login. Please proceed.\",\r\n-    },\r\n-\r\n-    {\r\n-      utterance: \"login with face\",\r\n-\r\n-      route: \"/login/faceid\",\r\n-\r\n-      response: \"Here's Face ID Login. Please proceed.\",\r\n-    },\r\n-\r\n-    {\r\n-      utterance: \"i want to login with face\",\r\n-\r\n-      route: \"/login/faceid\",\r\n-\r\n-      response: \"Here's Face ID Login. Please proceed.\",\r\n-    },\r\n-\r\n-    {\r\n-      utterance: \"login with voice\",\r\n-\r\n-      route: \"/login/voiceid\",\r\n-\r\n-      response: \"Here's Voice Login. Please proceed.\",\r\n-    },\r\n-\r\n-    {\r\n-      utterance: \"i want to login with voice\",\r\n-\r\n-      route: \"/login/voiceid\",\r\n-\r\n-      response: \"Here's Voice Login. Please proceed.\",\r\n-    },\r\n-\r\n-    {\r\n-      utterance: \"go to voice login\",\r\n-\r\n-      route: \"/login/voiceid\",\r\n-\r\n-      response: \"Here's Voice Login. Please proceed.\",\r\n-    },\r\n-\r\n-    {\r\n-      utterance: \"login with voice\",\r\n-\r\n-      route: \"/login/voiceid\",\r\n-\r\n-      response: \"Here's Voice Login. Please proceed.\",\r\n-    },\r\n-\r\n-    {\r\n-      utterance: \"login with mobile\",\r\n-\r\n-      route: \"/login/mobile\",\r\n-\r\n-      response: \"Here's Mobile Login. Please proceed.\",\r\n-    },\r\n-\r\n-    {\r\n-      utterance: \"i want to login with mobile\",\r\n-\r\n-      route: \"/login/mobile\",\r\n-\r\n-      response: \"Here's Mobile Login. Please proceed.\",\r\n-    },\r\n-    {\r\n-      utterance: \"go to mobile login\",\r\n-\r\n-      route: \"/login/mobile\",\r\n-\r\n-      response: \"Here's Mobile Login. Please proceed.\",\r\n-    },\r\n-    {\r\n-      utterance: \"go to about page\",\r\n-\r\n-      route: \"/aboutus\",\r\n-\r\n-      response: \"This is About us.\",\r\n-    },\r\n-    {\r\n-      utterance: \"go to about us page\",\r\n-\r\n-      route: \"/aboutus\",\r\n-\r\n-      response: \"This is About us.\",\r\n-    },\r\n-    {\r\n-      utterance: \"open about us page\",\r\n-\r\n-      route: \"/aboutus\",\r\n-\r\n-      response: \"This is About us.\",\r\n-    },\r\n-    {\r\n-      utterance: \"open about page\",\r\n-\r\n-      route: \"/aboutus\",\r\n-\r\n-      response: \"This is About us.\",\r\n-    },\r\n-    {\r\n-      utterance: \"take me to about page\",\r\n-\r\n-      route: \"/aboutus\",\r\n-\r\n-      response: \"This is About us.\",\r\n-    },\r\n-    {\r\n-      utterance: \"take me to about us page\",\r\n-\r\n-      route: \"/aboutus\",\r\n-\r\n-      response: \"This is About us.\",\r\n-    },\r\n-\r\n-    {\r\n-      utterance: \"go to contact page\",\r\n-\r\n-      route: \"/contactus\",\r\n-\r\n-      response: \"You can contact us from here\",\r\n-    },\r\n-    {\r\n-      utterance: \"go to contact us page\",\r\n-\r\n-      route: \"/contactus\",\r\n-\r\n-      response: \"You can contact us from here\",\r\n-    },\r\n-    {\r\n-      utterance: \"open contact us page\",\r\n-\r\n-      route: \"/contactus\",\r\n-\r\n-      response: \"You can contact us from here\",\r\n-    },\r\n-    {\r\n-      utterance: \"open contact page\",\r\n-\r\n-      route: \"/contactus\",\r\n-\r\n-      response: \"You can contact us from here\",\r\n-    },\r\n-    {\r\n-      utterance: \"take me to about page\",\r\n-\r\n-      route: \"/contactus\",\r\n-\r\n-      response: \"You can contact us from here\",\r\n-    },\r\n-    {\r\n-      utterance: \"take me to contact us page\",\r\n-\r\n-      route: \"/contactus\",\r\n-\r\n-      response: \"You can contact us from here\",\r\n-    },\r\n-\r\n-    {\r\n-      utterance: \"what are platform features\",\r\n-\r\n-      response:\r\n-        \"Dashboard, Dynamic time table, Learning Networks, Little Masters, Video Based Dictionary, General Search.\",\r\n-    },\r\n-\r\n-    {\r\n-      utterance: \"Features of platform\",\r\n-\r\n-      response:\r\n-        \"Dashboard, Dynamic time table, Learning Networks, Little Masters, Video Based Dictionary, General Search.\",\r\n-    },\r\n-\r\n-    {\r\n-      utterance: \"What does the platform offer\",\r\n-\r\n-      response:\r\n-        \"Dashboard, Dynamic time table, Learning Networks, Little Masters, Video Based Dictionary, General Search.\",\r\n-    },\r\n-\r\n-    {\r\n-      utterance: \"Say me the features of platform\",\r\n-\r\n-      response:\r\n-        \"Dashboard, Dynamic time table, Learning Networks, Little Masters, Video Based Dictionary, General Search.\",\r\n-    },\r\n-\r\n-    {\r\n-      utterance: \"Say me the services of platform\",\r\n-\r\n-      response:\r\n-        \"Dashboard, Dynamic time table, Learning Networks, Little Masters, Video Based Dictionary, General Search.\",\r\n-    },\r\n-\r\n-    {\r\n-      utterance: \"tell me the services offered by the platform\",\r\n-\r\n-      response:\r\n-        \"Dashboard, Dynamic time table, Learning Networks, Little Masters, Video Based Dictionary, General Search.\",\r\n-    },\r\n-\r\n-    {\r\n-      utterance: \"explain platform services\",\r\n-\r\n-      response:\r\n-        \"Dashboard, Dynamic time table, Learning Networks, Little Masters, Video Based Dictionary, General Search.\",\r\n-    },\r\n-\r\n-    {\r\n-      utterance: \"Give me the Parent voice of Julia Harris\",\r\n-\r\n-      response:\r\n-        \"Brane education has helped my son a lot in his studies. He improved a lot in his studies and is now able to score good marks in his exams\",\r\n-    },\r\n-\r\n-    {\r\n-      utterance: \"Leaders Voice\",\r\n-\r\n-      response:\r\n-        \"This Voice-interactive AI Platform is a game Changer. It revolutionizes education.\",\r\n-    },\r\n-\r\n-    {\r\n-      utterance: \"Curriculum Supported by Brane Education\",\r\n-\r\n-      response:\r\n-        \"we support multiple Boards let me say few Telangana State Board Andhra Pradesh Board Maharashtra Board Assam Board\",\r\n-    },\r\n-\r\n-    {\r\n-      utterance: \"Boards supported by the platform\",\r\n-\r\n-      response:\r\n-        \"we support multiple Boards let me say few Telangana State Board Andhra Pradesh Board Maharashtra Board Assam Board\",\r\n-    },\r\n-\r\n-    {\r\n-      utterance: \"Curriculum\",\r\n-\r\n-      response:\r\n-        \"we support multiple Boards let me say few Telangana State Board Andhra Pradesh Board Maharashtra Board Assam Board\",\r\n-    },\r\n-\r\n-    {\r\n-      utterance: \"what is today's quote\",\r\n-\r\n-      response:\r\n-        \"Determination is the power that sees us through all our frustration and obstacles. It helps in building our willpower which is the very basis of success.\",\r\n-\r\n-      route: \"/childpage\",\r\n-    },\r\n-\r\n-    {\r\n-      utterance: \"Today's Inspirational quote\",\r\n-\r\n-      response:\r\n-        \"Determination is the power that sees us through all our frustration and obstacles. It helps in building our willpower which is the very basis of success.\",\r\n-\r\n-      route: \"/childpage\",\r\n-    },\r\n-\r\n-    {\r\n-      utterance: \"say me today's quote\",\r\n-\r\n-      response:\r\n-        \"Determination is the power that sees us through all our frustration and obstacles. It helps in building our willpower which is the very basis of success.\",\r\n-\r\n-      route: \"/childpage\",\r\n-    },\r\n-    {\r\n-      utterance: \"go back\",\r\n-      response: \"\",\r\n-      action: goBack, // Note the use of an action property\r\n-    },\r\n-    {\r\n-      utterance: \"go forward\",\r\n-      response: \"\",\r\n-      action: goForward,\r\n-    },\r\n-    // {\r\n-    //   utterance: \"play video\",\r\n-    //   // response: \"Playing video.\",\r\n-    //   action: playVideo,\r\n-    // },\r\n-    // {\r\n-    //   utterance: \"pause video\",\r\n-    //   // response: \"Pausing video.\",\r\n-    //   action: pauseVideo,\r\n-    // },\r\n-    // {\r\n-    //   utterance: \"start video\",\r\n-    //   // response: \"Playing video.\",\r\n-    //   action: playVideo,\r\n-    // },\r\n-    // {\r\n-    //   utterance: \"stop video\",\r\n-    //   // response: \"Playing video.\",\r\n-    //   action: pauseVideo,\r\n-    // },\r\n-    {\r\n-      utterance: \"scroll up\",\r\n-      // response: \"Scrolling up.\",\r\n-      action: scrollUp,\r\n-    },\r\n-    {\r\n-      utterance: \"scroll down\",\r\n-      // response: \"Scrolling down.\",\r\n-      action: scrollDown,\r\n-    },\r\n-    {\r\n-      utterance: \"go up\",\r\n-\r\n-      // response: \"Scrolling up.\",\r\n-      action: scrollUp,\r\n-    },\r\n-    {\r\n-      utterance: \"go down\",\r\n-      // response: \"Scrolling down.\",\r\n-      action: scrollDown,\r\n-    },\r\n-    {\r\n-      utterance: \"scroll to top\",\r\n-      action: scrollToTop,\r\n-    },\r\n-    {\r\n-      utterance: \"scroll to bottom\",\r\n-      action: scrollToBottom,\r\n-    },\r\n-    {\r\n-      utterance: \"brane stop\",\r\n-      action: stopListening,\r\n-    },\r\n-    {\r\n-      utterance: \"brane turn off\",\r\n-      action: stopListening,\r\n-    },\r\n-    {\r\n-      utterance: \"brane stop the bot\",\r\n-      action: stopListening,\r\n-    },\r\n-    // {\r\n-    //   utterance: \"mute the video\",\r\n-    //   action: muteVideo,\r\n-    // },\r\n-    // {\r\n-    //   utterance: \"unmute the video\",\r\n-    //   action: unmuteVideo,\r\n-    // },\r\n-    // {\r\n-    //   utterance: \"stop the video sound\",\r\n-    //   action: muteVideo,\r\n-    // },\r\n-    // {\r\n-    //   utterance: \"play the video sound\",\r\n-    //   action: unmuteVideo,\r\n-    // },\r\n-    {\r\n-      utterance: \"play transforming education video\",\r\n-      action: () => controlVideo(\"ourProjectsVideo\", \"play\"),\r\n-    },\r\n-    {\r\n-      utterance: \"start transforming education video\",\r\n-      action: () => controlVideo(\"ourProjectsVideo\", \"play\"),\r\n-    },\r\n-    {\r\n-      utterance: \"pause transforming education video\",\r\n-      action: () => controlVideo(\"ourProjectsVideo\", \"pause\"),\r\n-    },\r\n-    {\r\n-      utterance: \"stop transforming education video\",\r\n-      action: () => controlVideo(\"ourProjectsVideo\", \"pause\"),\r\n-    },\r\n-    {\r\n-      utterance: \"mute transforming education video\",\r\n-      action: () => controlVideo(\"ourProjectsVideo\", \"mute\"),\r\n-    },\r\n-    {\r\n-      utterance: \"unmute transforming education video\",\r\n-      action: () => controlVideo(\"ourProjectsVideo\", \"unmute\"),\r\n-    },\r\n-    {\r\n-      utterance: \"fullscreen transforming education video\",\r\n-      action: () => controlVideo(\"ourProjectsVideo\", \"fullscreen\"),\r\n-    },\r\n-    {\r\n-      utterance: \"exit fullscreen transforming education video\",\r\n-      action: () => controlVideo(\"ourProjectsVideo\", \"exitFullscreen\"),\r\n-    },\r\n-    {\r\n-      utterance: \"increase volume transforming education video\",\r\n-      action: () => controlVideo(\"ourProjectsVideo\", \"increaseVolume\"),\r\n-    },\r\n-    {\r\n-      utterance: \"decrease volume transforming education video\",\r\n-      action: () => controlVideo(\"ourProjectsVideo\", \"decreaseVolume\"),\r\n-    },\r\n-    {\r\n-      utterance: \"play the video about transforming education\",\r\n-      action: () => controlVideo(\"ourProjectsVideo\", \"play\"),\r\n-    },\r\n-    {\r\n-      utterance: \"start the transforming education video\",\r\n-      action: () => controlVideo(\"ourProjectsVideo\", \"play\"),\r\n-    },\r\n-    {\r\n-      utterance: \"can you pause the video on transforming education\",\r\n-      action: () => controlVideo(\"ourProjectsVideo\", \"pause\"),\r\n-    },\r\n-    {\r\n-      utterance: \"stop the video about transforming education\",\r\n-      action: () => controlVideo(\"ourProjectsVideo\", \"pause\"),\r\n-    },\r\n-    {\r\n-      utterance: \"mute the transforming education video\",\r\n-      action: () => controlVideo(\"ourProjectsVideo\", \"mute\"),\r\n-    },\r\n-    {\r\n-      utterance: \"unmute the video on transforming education\",\r\n-      action: () => controlVideo(\"ourProjectsVideo\", \"unmute\"),\r\n-    },\r\n-    {\r\n-      utterance: \"make the transforming education video fullscreen\",\r\n-      action: () => controlVideo(\"ourProjectsVideo\", \"fullscreen\"),\r\n-    },\r\n-    {\r\n-      utterance: \"exit fullscreen on the transforming education video\",\r\n-      action: () => controlVideo(\"ourProjectsVideo\", \"exitFullscreen\"),\r\n-    },\r\n-    {\r\n-      utterance: \"increase the volume of the transforming education video\",\r\n-      action: () => controlVideo(\"ourProjectsVideo\", \"increaseVolume\"),\r\n-    },\r\n-    {\r\n-      utterance: \"decrease the volume of the transforming education video\",\r\n-      action: () => controlVideo(\"ourProjectsVideo\", \"decreaseVolume\"),\r\n-    },\r\n-\r\n-    {\r\n-      utterance: \"play leaders voice video\",\r\n-      action: () => controlVideo(\"leadersVoiceVideo\", \"play\"),\r\n-    },\r\n-    {\r\n-      utterance: \"start leaders voice video\",\r\n-      action: () => controlVideo(\"leadersVoiceVideo\", \"play\"),\r\n-    },\r\n-    {\r\n-      utterance: \"pause leaders voice video\",\r\n-      action: () => controlVideo(\"leadersVoiceVideo\", \"pause\"),\r\n-    },\r\n-    {\r\n-      utterance: \"stop leaders voice video\",\r\n-      action: () => controlVideo(\"leadersVoiceVideo\", \"pause\"),\r\n-    },\r\n-    {\r\n-      utterance: \"mute leaders voice video\",\r\n-      action: () => controlVideo(\"leadersVoiceVideo\", \"mute\"),\r\n-    },\r\n-    {\r\n-      utterance: \"unmute leaders voice video\",\r\n-      action: () => controlVideo(\"leadersVoiceVideo\", \"unmute\"),\r\n-    },\r\n-    {\r\n-      utterance: \"fullscreen leaders voice video\",\r\n-      action: () => controlVideo(\"leadersVoiceVideo\", \"fullscreen\"),\r\n-    },\r\n-    {\r\n-      utterance: \"exit fullscreen leaders voice video\",\r\n-      action: () => controlVideo(\"leadersVoiceVideo\", \"exitFullscreen\"),\r\n-    },\r\n-    {\r\n-      utterance: \"increase volume leaders voice video\",\r\n-      action: () => controlVideo(\"leadersVoiceVideo\", \"increaseVolume\"),\r\n-    },\r\n-    {\r\n-      utterance: \"decrease volume leaders voice video\",\r\n-      action: () => controlVideo(\"leadersVoiceVideo\", \"decreaseVolume\"),\r\n-    },\r\n-\r\n-    {\r\n-      utterance: \"set mobile number to *\",\r\n-      action: (spokenText) => {\r\n-        const mobileNumber = extractNumber(spokenText);\r\n-        setMobileNumber(mobileNumber); // Function to set mobile number in context or state\r\n-      },\r\n-    },\r\n-    {\r\n-      utterance: \"set pin to *\",\r\n-      action: (spokenText) => {\r\n-        const pin = extractNumber(spokenText);\r\n-        setPin(pin); // Function to set pin in context or state\r\n-      },\r\n-    },\r\n-    \r\n-  ];\r\n-\r\n-  return (\r\n-    <div className=\"speech-bot-container\">\r\n-      <div\r\n-        className={`button-container ${\r\n-          isListening ? \"voicebotframeactive\" : \"voicebotframe\"\r\n-        }`}\r\n-      >\r\n-        {/* <button onClick={isListening ? stopListening : startListening}>\r\n-          {isListening ? \"Stop\" : \"Start\"} Animation\r\n-        </button> */}\r\n-        <img\r\n-          className=\"botimage\"\r\n-          src={chatbotimage}\r\n-          alt=\"\"\r\n-          onClick={isListening ? stopListening : startListening}\r\n-        />\r\n-      </div>\r\n-    </div>\r\n-  );\r\n-};\r\n-\r\n-export default VoiceBot;\r\n-\r\n-{\r\n-  /* // import React, { useState, useEffect, useRef } from \"react\";\r\n-// import { useNavigate, useLocation } from \"react-router-dom\";\r\n-// import Fuse from \"fuse.js\";\r\n-// import \"./VoiceBot.css\";\r\n-\r\n-// const VoiceBot = ({ videoRef }) => {\r\n-//   const [isListening, setIsListening] = useState(false);\r\n-//   const [isSpeaking, setIsSpeaking] = useState(false);\r\n-//   const recognition = useRef(null);\r\n-//   const speechSynthesis = useRef(window.speechSynthesis);\r\n-//   const [hasGreeted, setHasGreeted] = useState(false);\r\n-//   const navigate = useNavigate();\r\n-\r\n-//   useEffect(() => {\r\n-//     recognition.current = new window.webkitSpeechRecognition();\r\n-//     recognition.current.continuous = true;\r\n-//     recognition.current.interimResults = false;\r\n-//     recognition.current.onresult = onResult;\r\n-//     recognition.current.onend = onRecognitionEnd;\r\n-//     recognition.current.starting = false;\r\n-\r\n-//     // Simplified error handling, removed specific handling for 'no-speech'\r\n-//     recognition.current.onerror = (event) => {\r\n-//       console.error(\"Recognition error:\", event.error);\r\n-//       // Check if listening is true and the bot isn't speaking\r\n-//       if (isListening && !isSpeaking) {\r\n-//         // Restart recognition\r\n-//         restartRecognition();\r\n-//       }\r\n-//     };\r\n-\r\n-//     return () => {\r\n-//       if (recognition.current) {\r\n-//         recognition.current.abort();\r\n-//       }\r\n-//     };\r\n-//   }, []);\r\n-\r\n-//   useEffect(() => {\r\n-//     const checkRecognition = () => {\r\n-//       if (isListening && !isSpeaking && !recognition.current.starting) {\r\n-//         console.log(\"Restarting recognition because it's not active.\");\r\n-//         recognition.current.starting = true;\r\n-//         recognition.current.start();\r\n-//         console.log(\"Restarted recognition.\");\r\n-//       }\r\n-//     };\r\n-\r\n-//     const recognitionCheckInterval = setInterval(checkRecognition, 100); // Check every 1 second\r\n-\r\n-//     return () => {\r\n-//       clearInterval(recognitionCheckInterval);\r\n-//     };\r\n-//   }, [isListening, isSpeaking]);\r\n-\r\n-//   const restartRecognition = () => {\r\n-//     if (recognition.current.starting) {\r\n-//       console.log(\"Recognition is already starting or running.\");\r\n-//       return;\r\n-//     }\r\n-\r\n-//     recognition.current.abort(); // Stop any existing recognition process\r\n-//     recognition.current.starting = true;\r\n-//     recognition.current.start();\r\n-//     console.log(\"Recognition restarted.\");\r\n-//   };\r\n-\r\n-//   const historyStack = useRef([]);\r\n-\r\n-//   useEffect(() => {\r\n-//     return () => {\r\n-//       // Clean up the listener when the component unmounts\r\n-//       window.removeEventListener(\"popstate\", handlePopState);\r\n-//     };\r\n-//   }, []);\r\n-\r\n-//   const handlePopState = () => {\r\n-//     // This needs to handle both back and forward browser actions\r\n-//     // Use some logic to determine whether it's a back or forward action\r\n-//     // For simplicity, assume it's always back\r\n-//     historyStack.current.pop();\r\n-//     forwardStack.current.length = 0; // Clear forward stack on manual navigation\r\n-//   };\r\n-  \r\n-\r\n-//   // Add a new entry to the stack whenever navigate is called\r\n-//   const customNavigate = (to, options) => {\r\n-//     historyStack.current.push(to);\r\n-//     navigate(to, options);\r\n-//   };\r\n-\r\n-//   // Listen to popstate events to update the history stack\r\n-//   useEffect(() => {\r\n-//     window.addEventListener(\"popstate\", handlePopState);\r\n-//   }, []);\r\n-\r\n-//   const forwardStack = useRef([]);\r\n-\r\n-//   const goBack = () => {\r\n-//     if (window.history.state && window.history.state.idx > 0) {\r\n-//       window.history.back();\r\n-//       speak(\"Going back\");\r\n-//     } else {\r\n-//       speak(\"Can't go back any further.\");\r\n-//     }\r\n-//   };\r\n-\r\n-//   const goForward = () => {\r\n-//     if (window.history.state && window.history.state.idx < window.history.length - 1) {\r\n-//       window.history.forward();\r\n-//       speak(\"Going forward\");\r\n-//     } else {\r\n-//       speak(\"No forward history available.\");\r\n-//     }\r\n-//   };\r\n-\r\n-//   const playVideo = () => {\r\n-//     if (videoRef.current) {\r\n-//       videoRef.current.play();\r\n-//       speak(\"Playing video.\");\r\n-//     } else {\r\n-//       speak(\"No video to play.\");\r\n-//     }\r\n-//   };\r\n-\r\n-//   const pauseVideo = () => {\r\n-//     if (videoRef.current) {\r\n-//       videoRef.current.pause();\r\n-//       speak(\"Video paused.\");\r\n-//     } else {\r\n-//       speak(\"No video to pause.\");\r\n-//     }\r\n-//   };\r\n-\r\n-//   const scrollAmount = window.innerHeight * 0.82;\r\n-\r\n-//   const scrollUp = () => {\r\n-//     if (window.pageYOffset === 0) {\r\n-//       speak(\"Already at the top of the page.\");\r\n-//     } else {\r\n-//       window.scrollBy(0, -scrollAmount);\r\n-//       speak(\"Scrolled up.\");\r\n-//     }\r\n-//   };\r\n-\r\n-//   const scrollDown = () => {\r\n-//     const maxScrollTop =\r\n-//       document.documentElement.scrollHeight - window.innerHeight;\r\n-//     if (window.pageYOffset >= maxScrollTop) {\r\n-//       speak(\"Already at the bottom of the page.\");\r\n-//     } else {\r\n-//       window.scrollBy(0, scrollAmount);\r\n-//       speak(\"Scrolled down.\");\r\n-//     }\r\n-//   };\r\n-\r\n-//   const scrollToTop = () => {\r\n-//     if (window.pageYOffset === 0) {\r\n-//       speak(\"Already at the top of the page.\");\r\n-//     } else {\r\n-//       window.scrollTo(0, 0);\r\n-//       speak(\"Scrolled to the top of the page.\");\r\n-//     }\r\n-//   };\r\n-\r\n-//   const scrollToBottom = () => {\r\n-//     const maxScrollTop =\r\n-//       document.documentElement.scrollHeight - window.innerHeight;\r\n-//     if (window.pageYOffset >= maxScrollTop) {\r\n-//       speak(\"Already at the bottom of the page.\");\r\n-//     } else {\r\n-//       window.scrollTo(0, document.body.scrollHeight);\r\n-//       speak(\"Scrolled to the bottom of the page.\");\r\n-//     }\r\n-//   };\r\n-\r\n-//   const speak = (message) => {\r\n-//     console.log(\"speak function called with message:\", message);\r\n-//     const utterance = new SpeechSynthesisUtterance(message);\r\n-//     utterance.onend = () => {\r\n-//       setIsSpeaking(false);\r\n-//       console.log(\"Speaking ended.\");\r\n-//       if (isListening && !recognition.current.starting) {\r\n-//         console.log(\"Restarting recognition after speaking.\");\r\n-//         recognition.current.starting = true;\r\n-//         recognition.current.start();\r\n-//         console.log(\"Restarted recognition after speaking.\");\r\n-//       }\r\n-//     };\r\n-\r\n-//     setIsSpeaking(true);\r\n-//     console.log(\"Speaking started.\");\r\n-//     recognition.current.stop(); // Ensure to stop recognition before speaking\r\n-//     speechSynthesis.current.speak(utterance);\r\n-//   };\r\n-\r\n-//   const onResult = (event) => {\r\n-//     const resultIndex = event.resultIndex;\r\n-//     const transcript = event.results[resultIndex][0].transcript\r\n-//       .trim()\r\n-//       .toLowerCase();\r\n-\r\n-//     if (event.results[resultIndex].isFinal) {\r\n-//       console.log(`Recognized text: ${transcript}`);\r\n-//       if (transcript.includes(\"brain\")) {\r\n-//         console.log(\"Wake word heard, processing command...\");\r\n-//         handleCommandWithFuse(transcript.replace(\"brain\", \"\"));\r\n-//       }\r\n-//     }\r\n-//   };\r\n-\r\n-//   const onRecognitionEnd = () => {\r\n-//     recognition.current.starting = false;\r\n-//     if (isListening && !isSpeaking) {\r\n-//       restartRecognition();\r\n-//     }\r\n-//   };\r\n-\r\n-//   useEffect(() => {\r\n-//     if (isListening) {\r\n-//       if (!hasGreeted) {\r\n-//         speak(\"Hello, I'm Brane. How can I help you today?\");\r\n-//         setHasGreeted(true);\r\n-//       } else {\r\n-//         speak(\"Listening.\");\r\n-//       }\r\n-//     }\r\n-//   }, [isListening, hasGreeted]);\r\n-\r\n-\r\n-//   const startListening = () => {\r\n-//     if (!recognition.current.starting) {\r\n-//       setIsListening(true);\r\n-//       restartRecognition();\r\n-//     }\r\n-//   };\r\n-\r\n-//   const stopListening = () => {\r\n-//     setIsListening(false);\r\n-//     recognition.current.abort();\r\n-//     if (speechSynthesis.current.speaking) {\r\n-//       speechSynthesis.current.cancel();\r\n-//     }\r\n-//   };\r\n-\r\n-//   const handleCommandWithFuse = (command) => {\r\n-//     const fuse = new Fuse(commands, { keys: [\"utterance\"], threshold: 0.4 });\r\n-//     const results = fuse.search(command);\r\n-//     const foundCommand = results.length ? results[0].item : null;\r\n-\r\n-//     if (foundCommand) {\r\n-//       console.log(\"Command found:\", foundCommand.utterance);\r\n-\r\n-//       if (foundCommand.action) {\r\n-//         foundCommand.action();\r\n-//       } else if (foundCommand.route) {\r\n-//         navigate(foundCommand.route);\r\n-//       }\r\n-\r\n-//       // Speak after performing the action or navigation\r\n-//       speak(foundCommand.response);\r\n-//     } else {\r\n-//       console.log(\"No command found.\");\r\n-//       speak(\"I'm not sure how to respond to that.\");\r\n-//     }\r\n-//   };\r\n-\r\n-//   const commands = [\r\n-//     {\r\n-//       utterance: \"Hello who are you ?\",\r\n-\r\n-//       response:\r\n-//         \"Hi! This is Brane! your Voice bot from Brane Education How can I Assist you Today ?\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"Hello\",\r\n-\r\n-//       response: \"Hi! How can I assist you today?\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"hello\",\r\n-\r\n-//       response: \"Hi! How can I assist you today?\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"Hi.\",\r\n-\r\n-//       response: \"Hello! How can I assist you today?\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"Hey there\",\r\n-\r\n-//       response: \"Hi! How can I assist you today?\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"Good morning Brane.\",\r\n-\r\n-//       response: \"Hey Hiii! Good morning  ! How can I help you?\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"Good afternoon Brane.\",\r\n-\r\n-//       response: \"Hey Hiii! Good after noon ! How can I help you?\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"Good evening Brane.\",\r\n-\r\n-//       response: \"Hey Hiii! Good evening ! How can I help you?\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"can you please take me to login page\",\r\n-\r\n-//       route: \"/login\",\r\n-\r\n-//       response: \"Here's the Login Page, Please Login\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"please take me to login page\",\r\n-\r\n-//       route: \"/login\",\r\n-\r\n-//       response: \"Here's the Login Page, Please Login\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"Go to login page\",\r\n-\r\n-//       route: \"/login\",\r\n-\r\n-//       response: \"Here's the Login Page, Please Login\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"open login page\",\r\n-\r\n-//       route: \"/login\",\r\n-\r\n-//       response: \"Here's the Login Page, Please Login\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"can you please take me to signup page\",\r\n-\r\n-//       route: \"/signup\",\r\n-\r\n-//       response: \"Here's the signup page. Please proceed With Registration.\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"take me to signup page\",\r\n-\r\n-//       route: \"/signup\",\r\n-\r\n-//       response: \"Here's the signup page. Please proceed With Registration.\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"Go to signup page\",\r\n-\r\n-//       route: \"/signup\",\r\n-\r\n-//       response: \"Here's the signup page. Please proceed With Registration.\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"open signup page\",\r\n-\r\n-//       route: \"/signup\",\r\n-\r\n-//       response: \"Here's the signup page. Please proceed With Registration.\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"Go to face id\",\r\n-\r\n-//       route: \"/login/faceid\",\r\n-\r\n-//       response: \"Here's Face ID Login. Please proceed.\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"Go to face id login\",\r\n-\r\n-//       route: \"/login/faceid\",\r\n-\r\n-//       response: \"Here's Face ID Login. Please proceed.\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"login with face id\",\r\n-\r\n-//       route: \"/login/faceid\",\r\n-\r\n-//       response: \"Here's Face ID Login. Please proceed.\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"login with face\",\r\n-\r\n-//       route: \"/login/faceid\",\r\n-\r\n-//       response: \"Here's Face ID Login. Please proceed.\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"i want to login with face\",\r\n-\r\n-//       route: \"/login/faceid\",\r\n-\r\n-//       response: \"Here's Face ID Login. Please proceed.\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"login with voice\",\r\n-\r\n-//       route: \"/login/voiceid\",\r\n-\r\n-//       response: \"Here's Voice Login. Please proceed.\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"i want to login with voice\",\r\n-\r\n-//       route: \"/login/voiceid\",\r\n-\r\n-//       response: \"Here's Voice Login. Please proceed.\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"go to voice login\",\r\n-\r\n-//       route: \"/login/voiceid\",\r\n-\r\n-//       response: \"Here's Voice Login. Please proceed.\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"login with voice\",\r\n-\r\n-//       route: \"/login/voiceid\",\r\n-\r\n-//       response: \"Here's Voice Login. Please proceed.\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"login with mobile\",\r\n-\r\n-//       route: \"/login/mobile\",\r\n-\r\n-//       response: \"Here's Mobile Login. Please proceed.\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"i want to login with mobile\",\r\n-\r\n-//       route: \"/login/mobile\",\r\n-\r\n-//       response: \"Here's Mobile Login. Please proceed.\",\r\n-//     },\r\n-//     {\r\n-//       utterance: \"go to mobile login\",\r\n-\r\n-//       route: \"/login/mobile\",\r\n-\r\n-//       response: \"Here's Mobile Login. Please proceed.\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"what are platform features\",\r\n-\r\n-//       response:\r\n-//         \"Dashboard, Dynamic time table, Learning Networks, Little Masters, Video Based Dictionary, General Search.\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"Features of platform\",\r\n-\r\n-//       response:\r\n-//         \"Dashboard, Dynamic time table, Learning Networks, Little Masters, Video Based Dictionary, General Search.\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"What does the platform offer\",\r\n-\r\n-//       response:\r\n-//         \"Dashboard, Dynamic time table, Learning Networks, Little Masters, Video Based Dictionary, General Search.\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"Say me the features of platform\",\r\n-\r\n-//       response:\r\n-//         \"Dashboard, Dynamic time table, Learning Networks, Little Masters, Video Based Dictionary, General Search.\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"Say me the services of platform\",\r\n-\r\n-//       response:\r\n-//         \"Dashboard, Dynamic time table, Learning Networks, Little Masters, Video Based Dictionary, General Search.\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"tell me the services offered by the platform\",\r\n-\r\n-//       response:\r\n-//         \"Dashboard, Dynamic time table, Learning Networks, Little Masters, Video Based Dictionary, General Search.\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"explain platform services\",\r\n-\r\n-//       response:\r\n-//         \"Dashboard, Dynamic time table, Learning Networks, Little Masters, Video Based Dictionary, General Search.\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"Give me the Parent voice of Julia Harris\",\r\n-\r\n-//       response:\r\n-//         \"Brane education has helped my son a lot in his studies. He improved a lot in his studies and is now able to score good marks in his exams\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"Play today's motivational video\",\r\n-\r\n-//       response: \"I am playing the video\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"Play today's video\",\r\n-\r\n-//       response: \"I am playing Motivational video\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"Leaders Voice\",\r\n-\r\n-//       response:\r\n-//         \"This Voice-interactive AI Platform is a game Changer. It revolutionizes education.\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"Curriculum Supported by Brane Education\",\r\n-\r\n-//       response:\r\n-//         \"we support multiple Boards let me say few Telangana State Board Andhra Pradesh Board Maharashtra Board Assam Board\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"Boards supported by the platform\",\r\n-\r\n-//       response:\r\n-//         \"we support multiple Boards let me say few Telangana State Board Andhra Pradesh Board Maharashtra Board Assam Board\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"Curriculum\",\r\n-\r\n-//       response:\r\n-//         \"we support multiple Boards let me say few Telangana State Board Andhra Pradesh Board Maharashtra Board Assam Board\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"Go to landing page\",\r\n-\r\n-//       response: \"Okay, I am taking you to the landing page.\",\r\n-\r\n-//       route: \"/childpage\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"take me to landing page\",\r\n-\r\n-//       response: \"Okay, I am taking you to the landing page.\",\r\n-\r\n-//       route: \"/childpage\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"move to landing page\",\r\n-\r\n-//       response: \"Okay, I am taking you to the landing page.\",\r\n-\r\n-//       route: \"/childpage\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"roll back to landing page\",\r\n-\r\n-//       response: \"Okay, I am taking you to the landing page.\",\r\n-\r\n-//       route: \"/childpage\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"move to landing page\",\r\n-\r\n-//       response: \"Okay, I am taking you to the landing page.\",\r\n-\r\n-//       route: \"/childpage\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"what is today's quote\",\r\n-\r\n-//       response:\r\n-//         \"Determination is the power that sees us through all our frustration and obstacles. It helps in building our willpower which is the very basis of success.\",\r\n-\r\n-//       route: \"/childpage\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"Today's Inspirational quote\",\r\n-\r\n-//       response:\r\n-//         \"Determination is the power that sees us through all our frustration and obstacles. It helps in building our willpower which is the very basis of success.\",\r\n-\r\n-//       route: \"/childpage\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"say me today's quote\",\r\n-\r\n-//       response:\r\n-//         \"Determination is the power that sees us through all our frustration and obstacles. It helps in building our willpower which is the very basis of success.\",\r\n-\r\n-//       route: \"/childpage\",\r\n-//     },\r\n-//     {\r\n-//       utterance: \"go back\",\r\n-//       response: \"\",\r\n-//       action: goBack, // Note the use of an action property\r\n-//     },\r\n-//     {\r\n-//       utterance: \"go forward\",\r\n-//       response: \"\",\r\n-//       action: goForward,\r\n-//     },\r\n-//     {\r\n-//       utterance: \"play video\",\r\n-//       // response: \"Playing video.\",\r\n-//       action: playVideo,\r\n-//     },\r\n-//     {\r\n-//       utterance: \"pause video\",\r\n-//       // response: \"Pausing video.\",\r\n-//       action: pauseVideo,\r\n-//     },\r\n-//     {\r\n-//       utterance: \"start video\",\r\n-//       // response: \"Playing video.\",\r\n-//       action: playVideo,\r\n-//     },\r\n-//     {\r\n-//       utterance: \"stop video\",\r\n-//       // response: \"Playing video.\",\r\n-//       action: pauseVideo,\r\n-//     },\r\n-//     {\r\n-//       utterance: \"scroll up\",\r\n-//       // response: \"Scrolling up.\",\r\n-//       action: scrollUp,\r\n-//     },\r\n-//     {\r\n-//       utterance: \"scroll down\",\r\n-//       // response: \"Scrolling down.\",\r\n-//       action: scrollDown,\r\n-//     },\r\n-//     {\r\n-//       utterance: \"go up\",\r\n-\r\n-//       // response: \"Scrolling up.\",\r\n-//       action: scrollUp,\r\n-//     },\r\n-//     {\r\n-//       utterance: \"go down\",\r\n-//       // response: \"Scrolling down.\",\r\n-//       action: scrollDown,\r\n-//     },\r\n-//     {\r\n-//       utterance: \"scroll to top\",\r\n-//       action: scrollToTop,\r\n-//     },\r\n-//     {\r\n-//       utterance: \"scroll to bottom\",\r\n-//       action: scrollToBottom,\r\n-//     },\r\n-//     {\r\n-//       utterance: \"brane stop\",\r\n-//       action: stopListening,\r\n-//     },\r\n-//     {\r\n-//       utterance: \"brane turn off\",\r\n-//       action: stopListening,\r\n-//     },\r\n-//     {\r\n-//       utterance: \"brane stop the bot\",\r\n-//       action: stopListening,\r\n-//     },\r\n-//   ];\r\n-\r\n-//   return (\r\n-//     <div className=\"speech-bot-container\">\r\n-//       <div\r\n-//         className={`button-container ${\r\n-//           isListening ? \"voicebotframeactive\" : \"voicebotframe\"\r\n-//         }`}\r\n-//       >\r\n-//         <button onClick={isListening ? stopListening : startListening}>\r\n-//           {isListening ? \"Stop\" : \"Start\"} Animation\r\n-//         </button>\r\n-//         {/* <button onClick={toggleBotActive}>\r\n-//         {isBotActive ? 'Deactivate Bot' : 'Activate Bot'}\r\n-//       </button> \r\n-//       </div>\r\n-//     </div>\r\n-//   );\r\n-// };\r\n-\r\n-// export default VoiceBot; */\r\n-}\r\n-\r\n-//iska v1\r\n-\r\n-// import React, { useState, useEffect, useRef } from \"react\";\r\n-// import { useNavigate, useLocation } from \"react-router-dom\";\r\n-// import Fuse from \"fuse.js\";\r\n-// import \"./VoiceBot.css\";\r\n-\r\n-// const VoiceBot = ({ videoRef}) => {\r\n-//   const [isListening, setIsListening] = useState(false);\r\n-//   const [isSpeaking, setIsSpeaking] = useState(false);\r\n-//   const recognition = useRef(null);\r\n-//   const speechSynthesis = useRef(window.speechSynthesis);\r\n-//   const [hasGreeted, setHasGreeted] = useState(false);\r\n-//   const navigate = useNavigate();\r\n-\r\n-//  // Initialize speech recognition\r\n-//  useEffect(() => {\r\n-//   recognition.current = new window.webkitSpeechRecognition();\r\n-//   recognition.current.continuous = true;\r\n-//   recognition.current.interimResults = false;\r\n-//   recognition.current.onresult = onResult;\r\n-//   recognition.current.onend = onRecognitionEnd;\r\n-//   recognition.current.starting = false;\r\n-\r\n-//   recognition.current.onerror = (event) => {\r\n-//     console.error(\"Recognition error:\", event.error);\r\n-//     if (isListening && !isSpeaking) {\r\n-//       restartRecognition();\r\n-//     }\r\n-//   };\r\n-\r\n-//   return () => {\r\n-//     if (recognition.current) {\r\n-//       recognition.current.abort();\r\n-//     }\r\n-//   };\r\n-// }, []);\r\n-\r\n-//   // useEffect(() => {\r\n-//   //   const checkRecognition = () => {\r\n-//   //     if (isListening && !isSpeaking && !recognition.current.starting) {\r\n-//   //       console.log(\"Restarting recognition because it's not active.\");\r\n-//   //       recognition.current.starting = true;\r\n-//   //       recognition.current.start();\r\n-//   //       console.log(\"Restarted recognition.\");\r\n-//   //     }\r\n-//   //   };\r\n-\r\n-//   //   const recognitionCheckInterval = setInterval(checkRecognition, 100); // Check every .5 second\r\n-\r\n-//   //   return () => {\r\n-//   //     clearInterval(recognitionCheckInterval);\r\n-//   //   };\r\n-//   // }, [isListening, isSpeaking]);\r\n-\r\n-//   const historyStack = useRef([]);\r\n-\r\n-//   useEffect(() => {\r\n-//     return () => {\r\n-//       // Clean up the listener when the component unmounts\r\n-//       window.removeEventListener(\"popstate\", handlePopState);\r\n-//     };\r\n-//   }, []);\r\n-\r\n-//   const handlePopState = () => {\r\n-//     // This needs to handle both back and forward browser actions\r\n-//     // Use some logic to determine whether it's a back or forward action\r\n-//     // For simplicity, assume it's always back\r\n-//     historyStack.current.pop();\r\n-//     forwardStack.current.length = 0; // Clear forward stack on manual navigation\r\n-//   };\r\n-\r\n-//   // Add a new entry to the stack whenever navigate is called\r\n-//   const customNavigate = (to, options) => {\r\n-//     historyStack.current.push(to);\r\n-//     navigate(to, options);\r\n-//   };\r\n-\r\n-//   // Listen to popstate events to update the history stack\r\n-//   useEffect(() => {\r\n-//     window.addEventListener(\"popstate\", handlePopState);\r\n-//   }, []);\r\n-\r\n-//   const forwardStack = useRef([]);\r\n-\r\n-//   const goBack = () => {\r\n-//     if (window.history.state && window.history.state.idx > 0) {\r\n-//       window.history.back();\r\n-//       speak(\"Going back\");\r\n-//     } else {\r\n-//       speak(\"Can't go back any further.\");\r\n-//     }\r\n-//   };\r\n-\r\n-//   const goForward = () => {\r\n-//     if (window.history.state && window.history.state.idx < window.history.length - 1) {\r\n-//       window.history.forward();\r\n-//       speak(\"Going forward\");\r\n-//     } else {\r\n-//       speak(\"No forward history available.\");\r\n-//     }\r\n-//   };\r\n-\r\n-//   const playVideo = () => {\r\n-//     if (videoRef.current) {\r\n-//       videoRef.current.play();\r\n-//       speak(\"Playing video.\");\r\n-//     } else {\r\n-//       speak(\"No video to play.\");\r\n-//     }\r\n-//   };\r\n-\r\n-//   const pauseVideo = () => {\r\n-//     if (videoRef.current) {\r\n-//       videoRef.current.pause();\r\n-//       speak(\"Video paused.\");\r\n-//     } else {\r\n-//       speak(\"No video to pause.\");\r\n-//     }\r\n-//   };\r\n-\r\n-//   const scrollAmount = window.innerHeight * 0.82;\r\n-\r\n-//   const scrollUp = () => {\r\n-//     if (window.pageYOffset === 0) {\r\n-//       speak(\"Already at the top of the page.\");\r\n-//     } else {\r\n-//       window.scrollBy(0, -scrollAmount);\r\n-//       speak(\"Scrolled up.\");\r\n-//     }\r\n-//   };\r\n-\r\n-//   const scrollDown = () => {\r\n-//     const maxScrollTop =\r\n-//       document.documentElement.scrollHeight - window.innerHeight;\r\n-//     if (window.pageYOffset >= maxScrollTop) {\r\n-//       speak(\"Already at the bottom of the page.\");\r\n-//     } else {\r\n-//       window.scrollBy(0, scrollAmount);\r\n-//       speak(\"Scrolled down.\");\r\n-//     }\r\n-//   };\r\n-\r\n-//   const scrollToTop = () => {\r\n-//     if (window.pageYOffset === 0) {\r\n-//       speak(\"Already at the top of the page.\");\r\n-//     } else {\r\n-//       window.scrollTo(0, 0);\r\n-//       speak(\"Scrolled to the top of the page.\");\r\n-//     }\r\n-//   };\r\n-\r\n-//   const scrollToBottom = () => {\r\n-//     const maxScrollTop =\r\n-//       document.documentElement.scrollHeight - window.innerHeight;\r\n-//     if (window.pageYOffset >= maxScrollTop) {\r\n-//       speak(\"Already at the bottom of the page.\");\r\n-//     } else {\r\n-//       window.scrollTo(0, document.body.scrollHeight);\r\n-//       speak(\"Scrolled to the bottom of the page.\");\r\n-//     }\r\n-//   };\r\n-\r\n-//   const speak = (message) => {\r\n-//     const utterance = new SpeechSynthesisUtterance(message);\r\n-//     utterance.onend = () => {\r\n-//       setIsSpeaking(false);\r\n-//       // Restart recognition after speaking has ended\r\n-//       if (isListening) {\r\n-//         restartRecognition();\r\n-//       }\r\n-//     };\r\n-\r\n-//     setIsSpeaking(true);\r\n-//     // Stop recognition when the bot starts speaking\r\n-//     if (recognition.current) {\r\n-//       recognition.current.abort();\r\n-//     }\r\n-//     speechSynthesis.current.speak(utterance);\r\n-//   };\r\n-\r\n-//   const restartRecognition = () => {\r\n-//     // Check if recognition is not already started and if the bot is set to listen\r\n-//     if (recognition.current && !recognition.current.starting && isListening && !isSpeaking) {\r\n-//       // Only start recognition if it's not already active\r\n-//       if (recognition.current.state !== 'active') {\r\n-//         recognition.current.abort(); // Ensure any ongoing recognition is stopped\r\n-//         recognition.current.starting = true;\r\n-//         recognition.current.start();\r\n-//       }\r\n-//     }\r\n-//   };\r\n-\r\n-//     // Restart recognition when bot finishes speaking and isListening is true\r\n-//     useEffect(() => {\r\n-//       if (!isSpeaking && isListening) {\r\n-//         restartRecognition();\r\n-//       }\r\n-//     }, [isSpeaking, isListening]);\r\n-\r\n-//   const onResult = (event) => {\r\n-//     const resultIndex = event.resultIndex;\r\n-//     const transcript = event.results[resultIndex][0].transcript\r\n-//       .trim()\r\n-//       .toLowerCase();\r\n-\r\n-//     if (event.results[resultIndex].isFinal) {\r\n-//       console.log(`Recognized text: ${transcript}`);\r\n-//       if (transcript.includes(\"brain\")) {\r\n-//         console.log(\"Wake word heard, processing command...\");\r\n-//         handleCommandWithFuse(transcript.replace(\"brain\", \"\"));\r\n-//       }\r\n-//     }\r\n-//   };\r\n-\r\n-//   const onRecognitionEnd = () => {\r\n-//     recognition.current.starting = false;\r\n-//     if (isListening && !isSpeaking) {\r\n-//       restartRecognition();\r\n-//     }\r\n-//   };\r\n-\r\n-//   useEffect(() => {\r\n-//     if (isListening && !hasGreeted) {\r\n-//       speak(\"Hello, I'm Brane. How can I help you today?\");\r\n-//       setHasGreeted(true);\r\n-//     }\r\n-//   }, [isListening, hasGreeted]);\r\n-\r\n-// // Updated startListening function\r\n-// const startListening = () => {\r\n-//   setIsListening(true);\r\n-//   if (recognition.current && !recognition.current.starting) {\r\n-//     recognition.current.start();\r\n-//   }\r\n-// };\r\n-\r\n-// // Updated stopListening function\r\n-// const stopListening = () => {\r\n-//   setIsListening(false);\r\n-//   setIsSpeaking(false); // Reset speaking state\r\n-//   setHasGreeted(false); // Reset greeting state if needed\r\n-//   if (recognition.current) {\r\n-//     recognition.current.abort(); // Stop any ongoing speech recognition\r\n-//   }\r\n-//   if (speechSynthesis.current.speaking) {\r\n-//     speechSynthesis.current.cancel(); // Stop any ongoing speech synthesis\r\n-//   }\r\n-// };\r\n-\r\n-//   const handleCommandWithFuse = (command) => {\r\n-//     const fuse = new Fuse(commands, { keys: [\"utterance\"], threshold: 0.4 });\r\n-//     const results = fuse.search(command);\r\n-//     const foundCommand = results.length ? results[0].item : null;\r\n-\r\n-//     if (foundCommand) {\r\n-//       console.log(\"Command found:\", foundCommand.utterance);\r\n-\r\n-//       if (foundCommand.action) {\r\n-//         foundCommand.action();\r\n-//       } else if (foundCommand.route) {\r\n-//         navigate(foundCommand.route);\r\n-//       }\r\n-\r\n-//       // Speak after performing the action or navigation\r\n-//       speak(foundCommand.response);\r\n-//     } else {\r\n-//       console.log(\"No command found.\");\r\n-//       speak(\"I'm not sure how to respond to that.\");\r\n-//     }\r\n-//   };\r\n-\r\n-//   const commands = [\r\n-//     {\r\n-//       utterance: \"Hello who are you ?\",\r\n-\r\n-//       response:\r\n-//         \"Hi! This is Brane! your Voice bot from Brane Education How can I Assist you Today ?\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"Hello\",\r\n-\r\n-//       response: \"Hi! How can I assist you today?\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"hello\",\r\n-\r\n-//       response: \"Hi! How can I assist you today?\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"Hi.\",\r\n-\r\n-//       response: \"Hello! How can I assist you today?\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"Hey there\",\r\n-\r\n-//       response: \"Hi! How can I assist you today?\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"Good morning Brane.\",\r\n-\r\n-//       response: \"Hey Hiii! Good morning  ! How can I help you?\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"Good afternoon Brane.\",\r\n-\r\n-//       response: \"Hey Hiii! Good after noon ! How can I help you?\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"Good evening Brane.\",\r\n-\r\n-//       response: \"Hey Hiii! Good evening ! How can I help you?\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"can you please take me to login page\",\r\n-\r\n-//       route: \"/login\",\r\n-\r\n-//       response: \"Here's the Login Page, Please Login\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"please take me to login page\",\r\n-\r\n-//       route: \"/login\",\r\n-\r\n-//       response: \"Here's the Login Page, Please Login\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"Go to login page\",\r\n-\r\n-//       route: \"/login\",\r\n-\r\n-//       response: \"Here's the Login Page, Please Login\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"open login page\",\r\n-\r\n-//       route: \"/login\",\r\n-\r\n-//       response: \"Here's the Login Page, Please Login\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"can you please take me to signup page\",\r\n-\r\n-//       route: \"/signup\",\r\n-\r\n-//       response: \"Here's the signup page. Please proceed With Registration.\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"take me to signup page\",\r\n-\r\n-//       route: \"/signup\",\r\n-\r\n-//       response: \"Here's the signup page. Please proceed With Registration.\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"Go to signup page\",\r\n-\r\n-//       route: \"/signup\",\r\n-\r\n-//       response: \"Here's the signup page. Please proceed With Registration.\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"open signup page\",\r\n-\r\n-//       route: \"/signup\",\r\n-\r\n-//       response: \"Here's the signup page. Please proceed With Registration.\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"Go to face id\",\r\n-\r\n-//       route: \"/login/faceid\",\r\n-\r\n-//       response: \"Here's Face ID Login. Please proceed.\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"Go to face id login\",\r\n-\r\n-//       route: \"/login/faceid\",\r\n-\r\n-//       response: \"Here's Face ID Login. Please proceed.\",\r\n-//     },\r\n-//     {\r\n-//       utterance: \"Go to face login\",\r\n-\r\n-//       route: \"/login/faceid\",\r\n-\r\n-//       response: \"Here's Face ID Login. Please proceed.\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"login with face id\",\r\n-\r\n-//       route: \"/login/faceid\",\r\n-\r\n-//       response: \"Here's Face ID Login. Please proceed.\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"login with face\",\r\n-\r\n-//       route: \"/login/faceid\",\r\n-\r\n-//       response: \"Here's Face ID Login. Please proceed.\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"i want to login with face\",\r\n-\r\n-//       route: \"/login/faceid\",\r\n-\r\n-//       response: \"Here's Face ID Login. Please proceed.\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"login with voice\",\r\n-\r\n-//       route: \"/login/voiceid\",\r\n-\r\n-//       response: \"Here's Voice Login. Please proceed.\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"i want to login with voice\",\r\n-\r\n-//       route: \"/login/voiceid\",\r\n-\r\n-//       response: \"Here's Voice Login. Please proceed.\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"go to voice login\",\r\n-\r\n-//       route: \"/login/voiceid\",\r\n-\r\n-//       response: \"Here's Voice Login. Please proceed.\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"login with voice\",\r\n-\r\n-//       route: \"/login/voiceid\",\r\n-\r\n-//       response: \"Here's Voice Login. Please proceed.\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"login with mobile\",\r\n-\r\n-//       route: \"/login/mobile\",\r\n-\r\n-//       response: \"Here's Mobile Login. Please proceed.\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"i want to login with mobile\",\r\n-\r\n-//       route: \"/login/mobile\",\r\n-\r\n-//       response: \"Here's Mobile Login. Please proceed.\",\r\n-//     },\r\n-//     {\r\n-//       utterance: \"go to mobile login\",\r\n-\r\n-//       route: \"/login/mobile\",\r\n-\r\n-//       response: \"Here's Mobile Login. Please proceed.\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"what are platform features\",\r\n-\r\n-//       response:\r\n-//         \"Dashboard, Dynamic time table, Learning Networks, Little Masters, Video Based Dictionary, General Search.\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"Features of platform\",\r\n-\r\n-//       response:\r\n-//         \"Dashboard, Dynamic time table, Learning Networks, Little Masters, Video Based Dictionary, General Search.\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"What does the platform offer\",\r\n-\r\n-//       response:\r\n-//         \"Dashboard, Dynamic time table, Learning Networks, Little Masters, Video Based Dictionary, General Search.\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"Say me the features of platform\",\r\n-\r\n-//       response:\r\n-//         \"Dashboard, Dynamic time table, Learning Networks, Little Masters, Video Based Dictionary, General Search.\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"Say me the services of platform\",\r\n-\r\n-//       response:\r\n-//         \"Dashboard, Dynamic time table, Learning Networks, Little Masters, Video Based Dictionary, General Search.\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"tell me the services offered by the platform\",\r\n-\r\n-//       response:\r\n-//         \"Dashboard, Dynamic time table, Learning Networks, Little Masters, Video Based Dictionary, General Search.\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"explain platform services\",\r\n-\r\n-//       response:\r\n-//         \"Dashboard, Dynamic time table, Learning Networks, Little Masters, Video Based Dictionary, General Search.\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"Give me the Parent voice of Julia Harris\",\r\n-\r\n-//       response:\r\n-//         \"Brane education has helped my son a lot in his studies. He improved a lot in his studies and is now able to score good marks in his exams\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"Play today's motivational video\",\r\n-\r\n-//       response: \"I am playing the video\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"Play today's video\",\r\n-\r\n-//       response: \"I am playing Motivational video\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"Leaders Voice\",\r\n-\r\n-//       response:\r\n-//         \"This Voice-interactive AI Platform is a game Changer. It revolutionizes education.\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"Curriculum Supported by Brane Education\",\r\n-\r\n-//       response:\r\n-//         \"we support multiple Boards let me say few Telangana State Board Andhra Pradesh Board Maharashtra Board Assam Board\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"Boards supported by the platform\",\r\n-\r\n-//       response:\r\n-//         \"we support multiple Boards let me say few Telangana State Board Andhra Pradesh Board Maharashtra Board Assam Board\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"Curriculum\",\r\n-\r\n-//       response:\r\n-//         \"we support multiple Boards let me say few Telangana State Board Andhra Pradesh Board Maharashtra Board Assam Board\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"Go to landing page\",\r\n-\r\n-//       response: \"Okay, I am taking you to the landing page.\",\r\n-\r\n-//       route: \"/childpage\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"take me to landing page\",\r\n-\r\n-//       response: \"Okay, I am taking you to the landing page.\",\r\n-\r\n-//       route: \"/childpage\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"move to landing page\",\r\n-\r\n-//       response: \"Okay, I am taking you to the landing page.\",\r\n-\r\n-//       route: \"/childpage\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"roll back to landing page\",\r\n-\r\n-//       response: \"Okay, I am taking you to the landing page.\",\r\n-\r\n-//       route: \"/childpage\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"move to landing page\",\r\n-\r\n-//       response: \"Okay, I am taking you to the landing page.\",\r\n-\r\n-//       route: \"/childpage\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"what is today's quote\",\r\n-\r\n-//       response:\r\n-//         \"Determination is the power that sees us through all our frustration and obstacles. It helps in building our willpower which is the very basis of success.\",\r\n-\r\n-//       route: \"/childpage\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"Today's Inspirational quote\",\r\n-\r\n-//       response:\r\n-//         \"Determination is the power that sees us through all our frustration and obstacles. It helps in building our willpower which is the very basis of success.\",\r\n-\r\n-//       route: \"/childpage\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"say me today's quote\",\r\n-\r\n-//       response:\r\n-//         \"Determination is the power that sees us through all our frustration and obstacles. It helps in building our willpower which is the very basis of success.\",\r\n-\r\n-//       route: \"/childpage\",\r\n-//     },\r\n-//     {\r\n-//       utterance: \"go back\",\r\n-//       response: \"\",\r\n-//       action: goBack, // Note the use of an action property\r\n-//     },\r\n-//     {\r\n-//       utterance: \"go forward\",\r\n-//       response: \"\",\r\n-//       action: goForward,\r\n-//     },\r\n-//     {\r\n-//       utterance: \"play video\",\r\n-//       // response: \"Playing video.\",\r\n-//       action: playVideo,\r\n-//     },\r\n-//     {\r\n-//       utterance: \"pause video\",\r\n-//       // response: \"Pausing video.\",\r\n-//       action: pauseVideo,\r\n-//     },\r\n-//     {\r\n-//       utterance: \"start video\",\r\n-//       // response: \"Playing video.\",\r\n-//       action: playVideo,\r\n-//     },\r\n-//     {\r\n-//       utterance: \"stop video\",\r\n-//       // response: \"Playing video.\",\r\n-//       action: pauseVideo,\r\n-//     },\r\n-//     {\r\n-//       utterance: \"scroll up\",\r\n-//       // response: \"Scrolling up.\",\r\n-//       action: scrollUp,\r\n-//     },\r\n-//     {\r\n-//       utterance: \"scroll down\",\r\n-//       // response: \"Scrolling down.\",\r\n-//       action: scrollDown,\r\n-//     },\r\n-//     {\r\n-//       utterance: \"go up\",\r\n-\r\n-//       // response: \"Scrolling up.\",\r\n-//       action: scrollUp,\r\n-//     },\r\n-//     {\r\n-//       utterance: \"go down\",\r\n-//       // response: \"Scrolling down.\",\r\n-//       action: scrollDown,\r\n-//     },\r\n-//     {\r\n-//       utterance: \"scroll to top\",\r\n-//       action: scrollToTop,\r\n-//     },\r\n-//     {\r\n-//       utterance: \"scroll to bottom\",\r\n-//       action: scrollToBottom,\r\n-//     },\r\n-//     {\r\n-//       utterance: \"brane stop\",\r\n-//       action: stopListening,\r\n-//     },\r\n-//     {\r\n-//       utterance: \"brane turn off\",\r\n-//       action: stopListening,\r\n-//     },\r\n-//     {\r\n-//       utterance: \"brane stop the bot\",\r\n-//       action: stopListening,\r\n-//     },\r\n-//   ];\r\n-\r\n-//   return (\r\n-//     <div className=\"speech-bot-container\">\r\n-//       <div\r\n-//         className={`button-container ${\r\n-//           isListening ? \"voicebotframeactive\" : \"voicebotframe\"\r\n-//         }`}\r\n-//       >\r\n-//         <button onClick={isListening ? stopListening : startListening}>\r\n-//           {isListening ? \"Stop\" : \"Start\"} Animation\r\n-//         </button>\r\n-//         {/* <button onClick={toggleBotActive}>\r\n-//         {isBotActive ? 'Deactivate Bot' : 'Activate Bot'}\r\n-//       </button> */}\r\n-//       </div>\r\n-//     </div>\r\n-//   );\r\n-// };\r\n-\r\n-// export default VoiceBot;\r\n-\r\n-//Bot Video added but some start issues\r\n-\r\n-// import React, { useState, useEffect, useRef } from \"react\";\r\n-// import { useNavigate, useLocation } from \"react-router-dom\";\r\n-// import Fuse from \"fuse.js\";\r\n-// import \"./VoiceBot.css\";\r\n-\r\n-// const VoiceBot = ({ videoRef }) => {\r\n-//   const [isListening, setIsListening] = useState(false);\r\n-//   const [isSpeaking, setIsSpeaking] = useState(false);\r\n-//   const recognition = useRef(null);\r\n-//   const speechSynthesis = useRef(window.speechSynthesis);\r\n-//   const hasGreeted = useRef(false);\r\n-//   const restartRecognitionTimeout = useRef(null);\r\n-//   const navigate = useNavigate();\r\n-//   const location = useLocation();\r\n-//   const [isRecognitionActive, setIsRecognitionActive] = useState(false); // New state to track recognition status\r\n-\r\n-//   useEffect(() => {\r\n-//     recognition.current = new window.webkitSpeechRecognition();\r\n-//     recognition.current.continuous = true;\r\n-//     recognition.current.interimResults = false;\r\n-//     recognition.current.onresult = onResult;\r\n-//     recognition.current.onend = () => {\r\n-//       console.log(\"Recognition ended.\");\r\n-//       if (isListening) {\r\n-//         startListening();\r\n-//       }\r\n-//     };\r\n-//     recognition.current.onerror = (event) => {\r\n-//       console.error(\"Recognition error:\", event.error);\r\n-//     };\r\n-\r\n-//     return () => {\r\n-//       recognition.current.abort();\r\n-//     };\r\n-//   }, []);\r\n-\r\n-//   // Update useEffect for managing the recognition state based on isListening and isRecognitionActive\r\n-//   useEffect(() => {\r\n-//     if (isListening && !isRecognitionActive) {\r\n-//       startListening();\r\n-//     } else if (!isListening && isRecognitionActive) {\r\n-//       stopListening();\r\n-//     }\r\n-//   }, [isListening, isRecognitionActive]);\r\n-\r\n-//   const goBack = () => {\r\n-//     if (window.history.length > 1) {\r\n-//       navigate(-1);\r\n-//     } else {\r\n-//       speak(\"Can't go back any further.\");\r\n-//     }\r\n-//   };\r\n-\r\n-//   const goForward = () => {\r\n-//     // Unfortunately, there's no direct way to check if you can go forward in the history.\r\n-//     // You might need to manage this state manually based on user navigation.\r\n-//     navigate(1);\r\n-//   };\r\n-\r\n-//   const playVideo = () => {\r\n-//     if (videoRef.current && !videoRef.current.paused) {\r\n-//       speak(\"Video is already playing.\");\r\n-//     } else if (videoRef.current) {\r\n-//       videoRef.current.play();\r\n-//       speak(\"Playing video.\");\r\n-//     } else {\r\n-//       speak(\"No video to play.\");\r\n-//     }\r\n-//   };\r\n-\r\n-//   const pauseVideo = () => {\r\n-//     if (videoRef.current && videoRef.current.paused) {\r\n-//       speak(\"Video is already paused.\");\r\n-//     } else if (videoRef.current) {\r\n-//       videoRef.current.pause();\r\n-//       speak(\"Video paused.\");\r\n-//     } else {\r\n-//       speak(\"No video to pause.\");\r\n-//     }\r\n-//   };\r\n-\r\n-//   const scrollAmount = window.innerHeight * 0.82;\r\n-\r\n-//   const scrollUp = () => {\r\n-//     if (window.pageYOffset === 0) {\r\n-//       speak(\"Already at the top of the page.\");\r\n-//     } else {\r\n-//       window.scrollBy(0, -scrollAmount);\r\n-//       speak(\"Scrolled up.\");\r\n-//     }\r\n-//   };\r\n-\r\n-//   const scrollDown = () => {\r\n-//     const maxScrollTop =\r\n-//       document.documentElement.scrollHeight - window.innerHeight;\r\n-//     if (window.pageYOffset >= maxScrollTop) {\r\n-//       speak(\"Already at the bottom of the page.\");\r\n-//     } else {\r\n-//       window.scrollBy(0, scrollAmount);\r\n-//       speak(\"Scrolled down.\");\r\n-//     }\r\n-//   };\r\n-\r\n-//   const scrollToTop = () => {\r\n-//     if (window.pageYOffset === 0) {\r\n-//       speak(\"Already at the top of the page.\");\r\n-//     } else {\r\n-//       window.scrollTo(0, 0);\r\n-//       speak(\"Scrolled to the top of the page.\");\r\n-//     }\r\n-//   };\r\n-\r\n-//   const scrollToBottom = () => {\r\n-//     const maxScrollTop =\r\n-//       document.documentElement.scrollHeight - window.innerHeight;\r\n-//     if (window.pageYOffset >= maxScrollTop) {\r\n-//       speak(\"Already at the bottom of the page.\");\r\n-//     } else {\r\n-//       window.scrollTo(0, document.body.scrollHeight);\r\n-//       speak(\"Scrolled to the bottom of the page.\");\r\n-//     }\r\n-//   };\r\n-\r\n-//   // const speak = (message) => {\r\n-//   //   const utterance = new SpeechSynthesisUtterance(message);\r\n-//   //   utterance.onend = () => {\r\n-//   //     setIsSpeaking(false);\r\n-//   //     console.log(\"Speaking ended.\");\r\n-//   //     // Only restart recognition if we're still supposed to be listening\r\n-//   //     // if (isListening) {\r\n-//   //     //   if (restartRecognitionTimeout.current) {\r\n-//   //     //     clearTimeout(restartRecognitionTimeout.current);\r\n-//   //     //   }\r\n-//   //     //   restartRecognitionTimeout.current = setTimeout(() => {\r\n-//   //     //     console.log(\"Recognition restarted.\");\r\n-//   //     //     recognition.current.start();\r\n-//   //     //   }, 100); // Delay to prevent immediate restart\r\n-//   //     // }\r\n-//   //     if (isListening && !recognition.current.starting) { // Check the flag before restarting\r\n-//   //       recognition.current.starting = true; // Set the flag when starting recognition\r\n-//   //       recognition.current.start();\r\n-//   //     }\r\n-//   //   };\r\n-\r\n-//   //   setIsSpeaking(true);\r\n-//   //   console.log(\"Speaking started.\");\r\n-//   //   recognition.current.stop(); // Stop recognition when the bot starts speaking\r\n-//   //   speechSynthesis.current.speak(utterance);\r\n-//   // };\r\n-\r\n-//   const speak = (message) => {\r\n-//     console.log(\"speak function called with message:\", message);\r\n-//     const utterance = new SpeechSynthesisUtterance(message);\r\n-//     utterance.onend = () => {\r\n-//       setIsSpeaking(false);\r\n-//       console.log(\"Speaking ended.\");\r\n-//       // Directly handle the restart of recognition here if needed\r\n-//       if (isListening) {\r\n-//         startListening();\r\n-//       }\r\n-//     };\r\n-\r\n-//     setIsSpeaking(true);\r\n-//     console.log(\"Speaking started.\");\r\n-//     recognition.current.stop(); // Ensure to stop recognition before speaking\r\n-//     speechSynthesis.current.speak(utterance);\r\n-//   };\r\n-\r\n-//   const onResult = (event) => {\r\n-//     const resultIndex = event.resultIndex;\r\n-//     const transcript = event.results[resultIndex][0].transcript\r\n-//       .trim()\r\n-//       .toLowerCase();\r\n-\r\n-//     if (event.results[resultIndex].isFinal) {\r\n-//       console.log(`Recognized text: ${transcript}`);\r\n-//       if (transcript.includes(\"brain\")) {\r\n-//         console.log(\"Wake word heard, processing command...\");\r\n-//         handleCommandWithFuse(transcript.replace(\"brain\", \"\"));\r\n-//       }\r\n-//     }\r\n-//   };\r\n-\r\n-//   // const onRecognitionEnd = () => {\r\n-//   //   console.log(\"Recognition ended.\");\r\n-//   //   setIsRecognitionActive(false); // Update state when recognition ends\r\n-//   //   recognition.current.starting = false; // Reset the flag when recognition ends\r\n-//   //   // We now check if the recognition is already running before starting it again\r\n-//   //   if (isListening && !isSpeaking && !recognition.current?.starting) {\r\n-//   //     console.log(\"Restarting recognition.\");\r\n-//   //     recognition.current.start();\r\n-//   //   }\r\n-//   // };\r\n-\r\n-//   // useEffect(() => {\r\n-//   //   if (isListening && !hasGreeted.current) {\r\n-//   //     speak(\"Hello, I'm Brane. How can I assist you today?\");\r\n-//   //     hasGreeted.current = true;\r\n-//   //   } else if (isListening && !isSpeaking) {\r\n-//   //     recognition.current.start();\r\n-//   //   }\r\n-//   // }, [isListening, isSpeaking]);\r\n-\r\n-//   useEffect(() => {\r\n-//     if (isListening && !hasGreeted.current) {\r\n-//       speak(\"Hello, I'm Brane. How can I assist you today?\");\r\n-//       hasGreeted.current = true;\r\n-//     } else if (isListening && !isSpeaking && !recognition.current.starting) {\r\n-//       // Check the flag before starting\r\n-//       recognition.current.starting = true; // Set the flag when starting recognition\r\n-//       recognition.current.start();\r\n-//     }\r\n-//   }, [isListening, isSpeaking]);\r\n-\r\n-//   // const startListening = () => {\r\n-//   //   console.log(\"Attempting to start listening.\");\r\n-//   //   if (recognition.current && !recognition.current.starting) {\r\n-//   //     setIsListening(true);\r\n-//   //     recognition.current.starting = true; // Set the flag when starting recognition\r\n-//   //     recognition.current.start();\r\n-//   //     console.log(\"Listening started.\");\r\n-//   //   }\r\n-//   // };\r\n-\r\n-//   // const stopListening = () => {\r\n-//   //   console.log(\"Stopping listening.\");\r\n-\r\n-//   //   setIsListening(false);\r\n-//   //   recognition.current.stop();\r\n-//   //   if (speechSynthesis.current.speaking) {\r\n-//   //     speechSynthesis.current.cancel();\r\n-//   //   }\r\n-//   //   if (restartRecognitionTimeout.current) {\r\n-//   //     clearTimeout(restartRecognitionTimeout.current);\r\n-//   //   }\r\n-//   //   console.log(\"Listening stopped.\");\r\n-//   // };\r\n-//   // Handle start and stop listening logic\r\n-//   const startListening = () => {\r\n-//     console.log(\"Attempting to start listening.\");\r\n-//     if (!recognition.current.starting) {\r\n-//       setIsListening(true);\r\n-//       recognition.current.starting = true;\r\n-//       recognition.current.start();\r\n-//       console.log(\"Listening started.\");\r\n-//     } else {\r\n-//       console.log(\"Recognition already active.\");\r\n-//     }\r\n-//   };\r\n-\r\n-//   const stopListening = () => {\r\n-//     console.log(\"Stopping listening.\");\r\n-//     if (recognition.current.starting) {\r\n-//       setIsListening(false);\r\n-//       recognition.current.starting = false;\r\n-//       recognition.current.stop();\r\n-//       console.log(\"Listening stopped.\");\r\n-//     } else {\r\n-//       console.log(\"Recognition already inactive.\");\r\n-//     }\r\n-//   };\r\n-\r\n-//   // const handleCommandWithFuse = (command) => {\r\n-//   //   const fuse = new Fuse(commands, { keys: [\"utterance\"], threshold: 0.4 });\r\n-//   //   const results = fuse.search(command);\r\n-//   //   const foundCommand = results.length ? results[0].item : null;\r\n-\r\n-//   //   if (foundCommand) {\r\n-//   //     console.log(\"Command found:\", foundCommand.utterance);\r\n-//   //     speak(foundCommand.response);\r\n-//   //     if (foundCommand.route) {\r\n-//   //       navigate(foundCommand.route); // Navigate to the route specified in the command\r\n-//   //     }\r\n-//   //   } else {\r\n-//   //     console.log(\"No command found.\");\r\n-//   //     speak(\"I'm not sure how to respond to that.\");\r\n-//   //   }\r\n-//   // };\r\n-\r\n-//   const handleCommandWithFuse = (command) => {\r\n-//     const fuse = new Fuse(commands, { keys: [\"utterance\"], threshold: 0.4 });\r\n-//     const results = fuse.search(command);\r\n-//     const foundCommand = results.length ? results[0].item : null;\r\n-\r\n-//     if (foundCommand) {\r\n-//       console.log(\"Command found:\", foundCommand.utterance);\r\n-\r\n-//       if (foundCommand.route) {\r\n-//         if (location.pathname !== foundCommand.route) {\r\n-//           navigate(foundCommand.route);\r\n-//           speak(\r\n-//             `Navigating to ${\r\n-//               foundCommand.routeDescription || \"requested page\"\r\n-//             }.`\r\n-//           );\r\n-//         } else {\r\n-//           speak(\r\n-//             `You are already on the ${\r\n-//               foundCommand.routeDescription || \"requested page\"\r\n-//             }.`\r\n-//           );\r\n-//         }\r\n-//       } else if (foundCommand.action) {\r\n-//         foundCommand.action();\r\n-//       }\r\n-\r\n-//       if (foundCommand.response) {\r\n-//         speak(foundCommand.response);\r\n-//       }\r\n-//     } else {\r\n-//       console.log(\"No command found.\");\r\n-//       speak(\"I'm not sure how to respond to that.\");\r\n-//     }\r\n-//   };\r\n-\r\n-//   const commands = [\r\n-//     {\r\n-//       utterance: \"Hello who are you ?\",\r\n-\r\n-//       response:\r\n-//         \"Hi! This is Brane! your Voice bot from Brane Education How can I Assist you Today ?\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"Hello\",\r\n-\r\n-//       response: \"Hi! How can I assist you today?\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"hello\",\r\n-\r\n-//       response: \"Hi! How can I assist you today?\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"Hi.\",\r\n-\r\n-//       response: \"Hello! How can I assist you today?\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"Hey there\",\r\n-\r\n-//       response: \"Hi! How can I assist you today?\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"Good morning Brane.\",\r\n-\r\n-//       response: \"Hey Hiii! Good morning  ! How can I help you?\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"Good afternoon Brane.\",\r\n-\r\n-//       response: \"Hey Hiii! Good after noon ! How can I help you?\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"Good evening Brane.\",\r\n-\r\n-//       response: \"Hey Hiii! Good evening ! How can I help you?\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"can you please take me to login page\",\r\n-//       route: \"/login\",\r\n-//       routeDescription: \"login page\",\r\n-//       response: \"Navigating to the login page.\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"go to login page\",\r\n-//       route: \"/login\",\r\n-//       routeDescription: \"login page\",\r\n-//       response: \"Navigating to the login page.\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"please take me to login page\",\r\n-//       route: \"/login\",\r\n-//       routeDescription: \"login page\",\r\n-//       response: \"Navigating to the login page.\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"Go to login page\",\r\n-//       route: \"/login\",\r\n-//       routeDescription: \"login page\",\r\n-//       response: \"Navigating to the login page.\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"open login page\",\r\n-//       route: \"/login\",\r\n-//       routeDescription: \"login page\",\r\n-//       response: \"Navigating to the login page.\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"can you please take me to signup page\",\r\n-//       route: \"/signup\",\r\n-//       routeDescription: \"signup page\",\r\n-//       response: \"Navigating to the signup page.\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"take me to signup page\",\r\n-//       route: \"/signup\",\r\n-//       routeDescription: \"signup page\",\r\n-//       response: \"Navigating to the signup page.\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"Go to signup page\",\r\n-//       route: \"/signup\",\r\n-//       routeDescription: \"signup page\",\r\n-//       response: \"Navigating to the signup page.\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"open signup page\",\r\n-//       route: \"/signup\",\r\n-//       routeDescription: \"signup page\",\r\n-//       response: \"Navigating to the signup page.\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"what are platform features\",\r\n-\r\n-//       response:\r\n-//         \"Dashboard, Dynamic time table, Learning Networks, Little Masters, Video Based Dictionary, General Search.\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"Features of platform\",\r\n-\r\n-//       response:\r\n-//         \"Dashboard, Dynamic time table, Learning Networks, Little Masters, Video Based Dictionary, General Search.\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"What does the platform offer\",\r\n-\r\n-//       response:\r\n-//         \"Dashboard, Dynamic time table, Learning Networks, Little Masters, Video Based Dictionary, General Search.\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"Say me the features of platform\",\r\n-\r\n-//       response:\r\n-//         \"Dashboard, Dynamic time table, Learning Networks, Little Masters, Video Based Dictionary, General Search.\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"Say me the services of platform\",\r\n-\r\n-//       response:\r\n-//         \"Dashboard, Dynamic time table, Learning Networks, Little Masters, Video Based Dictionary, General Search.\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"tell me the services offered by the platform\",\r\n-\r\n-//       response:\r\n-//         \"Dashboard, Dynamic time table, Learning Networks, Little Masters, Video Based Dictionary, General Search.\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"explain platform services\",\r\n-\r\n-//       response:\r\n-//         \"Dashboard, Dynamic time table, Learning Networks, Little Masters, Video Based Dictionary, General Search.\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"Give me the Parent voice of Julia Harris\",\r\n-\r\n-//       response:\r\n-//         \"Brane education has helped my son a lot in his studies. He improved a lot in his studies and is now able to score good marks in his exams\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"Play today's motivational video\",\r\n-\r\n-//       response: \"I am playing the video\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"Play today's video\",\r\n-\r\n-//       response: \"I am playing Motivational video\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"Leaders Voice\",\r\n-\r\n-//       response:\r\n-//         \"This Voice-interactive AI Platform is a game Changer. It revolutionizes education.\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"Curriculum Supported by Brane Education\",\r\n-\r\n-//       response:\r\n-//         \"we support multiple Boards let me say few Telangana State Board Andhra Pradesh Board Maharashtra Board Assam Board\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"Boards supported by the platform\",\r\n-\r\n-//       response:\r\n-//         \"we support multiple Boards let me say few Telangana State Board Andhra Pradesh Board Maharashtra Board Assam Board\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"Curriculum\",\r\n-\r\n-//       response:\r\n-//         \"we support multiple Boards let me say few Telangana State Board Andhra Pradesh Board Maharashtra Board Assam Board\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"Go to landing page\",\r\n-\r\n-//       response: \"Okay, I am taking you to the landing page.\",\r\n-\r\n-//       route: \"/childpage\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"take me to landing page\",\r\n-\r\n-//       response: \"Okay, I am taking you to the landing page.\",\r\n-\r\n-//       route: \"/childpage\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"move to landing page\",\r\n-\r\n-//       response: \"Okay, I am taking you to the landing page.\",\r\n-\r\n-//       route: \"/childpage\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"roll back to landing page\",\r\n-\r\n-//       response: \"Okay, I am taking you to the landing page.\",\r\n-\r\n-//       route: \"/childpage\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"move to landing page\",\r\n-\r\n-//       response: \"Okay, I am taking you to the landing page.\",\r\n-\r\n-//       route: \"/childpage\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"what is today's quote\",\r\n-\r\n-//       response:\r\n-//         \"Determination is the power that sees us through all our frustration and obstacles. It helps in building our willpower which is the very basis of success.\",\r\n-\r\n-//       // route: \"/childpage\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"Today's Inspirational quote\",\r\n-\r\n-//       response:\r\n-//         \"Determination is the power that sees us through all our frustration and obstacles. It helps in building our willpower which is the very basis of success.\",\r\n-\r\n-//       // route: \"/childpage\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"say me today's quote\",\r\n-\r\n-//       response:\r\n-//         \"Determination is the power that sees us through all our frustration and obstacles. It helps in building our willpower which is the very basis of success.\",\r\n-\r\n-//       // route: \"/childpage\",\r\n-//     },\r\n-//     {\r\n-//       utterance: \"go back\",\r\n-//       response: \"Going back.\",\r\n-//       action: goBack, // Note the use of an action property\r\n-//     },\r\n-//     {\r\n-//       utterance: \"go forward\",\r\n-//       response: \"Going forward.\",\r\n-//       action: goForward,\r\n-//     },\r\n-//     {\r\n-//       utterance: \"play video\",\r\n-//       // response: \"Playing video.\",\r\n-//       action: playVideo,\r\n-//     },\r\n-//     {\r\n-//       utterance: \"pause video\",\r\n-//       // response: \"Pausing video.\",\r\n-//       action: pauseVideo,\r\n-//     },\r\n-//     {\r\n-//       utterance: \"start video\",\r\n-//       // response: \"Playing video.\",\r\n-//       action: playVideo,\r\n-//     },\r\n-//     {\r\n-//       utterance: \"stop video\",\r\n-//       // response: \"Playing video.\",\r\n-//       action: pauseVideo,\r\n-//     },\r\n-//     {\r\n-//       utterance: \"scroll up\",\r\n-//       // response: \"Scrolling up.\",\r\n-//       action: scrollUp,\r\n-//     },\r\n-//     {\r\n-//       utterance: \"scroll down\",\r\n-//       // response: \"Scrolling down.\",\r\n-//       action: scrollDown,\r\n-//     },\r\n-//     {\r\n-//       utterance: \"go up\",\r\n-\r\n-//       // response: \"Scrolling up.\",\r\n-//       action: scrollUp,\r\n-//     },\r\n-//     {\r\n-//       utterance: \"go down\",\r\n-//       // response: \"Scrolling down.\",\r\n-//       action: scrollDown,\r\n-//     },\r\n-//     {\r\n-//       utterance: \"scroll to top\",\r\n-//       action: scrollToTop,\r\n-//     },\r\n-//     {\r\n-//       utterance: \"scroll to bottom\",\r\n-//       action: scrollToBottom,\r\n-//     },\r\n-//   ];\r\n-//   return (\r\n-//     <div className=\"speech-bot-container\">\r\n-//       <div\r\n-//         className={`button-container ${\r\n-//           isListening ? \"voicebotframeactive\" : \"voicebotframe\"\r\n-//         }`}\r\n-//       >\r\n-//         <div onClick={isListening ? stopListening : startListening}>\r\n-//           <iframe\r\n-//             src={\r\n-//               isListening\r\n-//                 ? \"https://lottie.host/?file=a89aca3f-5407-4052-82c3-2048afca7a9f/NpCdWzLSKD.json\"\r\n-//                 : \"https://lottie.host/?file=d2b6cc0e-fe95-4847-85b5-35365fca7e00/vTudpCuPZq.json\"\r\n-//             }\r\n-//             width=\"120\" // Set your desired width\r\n-//             height=\"120\" // Set your desired height\r\n-//             title={isListening ? \"Stop Animation\" : \"Start Animation\"}\r\n-//             className={isListening ? \"voicebotframeactive\" : \"voicebotframe\"}\r\n-//           ></iframe>\r\n-//           {isListening ? (\r\n-//             <div className=\"overlay\" onClick={stopListening}></div>\r\n-//           ) : (\r\n-//             <div className=\"overlay\" onClick={startListening}></div>\r\n-//           )}\r\n-//         </div>\r\n-//       </div>\r\n-//     </div>\r\n-//   );\r\n-// };\r\n-\r\n-// export default VoiceBot;\r\n-\r\n-// All functionalities but messed up\r\n-\r\n-// import React, { useState, useEffect, useRef } from \"react\";\r\n-// import { useNavigate, useLocation } from \"react-router-dom\";\r\n-// import Fuse from \"fuse.js\";\r\n-// import \"./VoiceBot.css\";\r\n-\r\n-// const VoiceBot = ({ videoRef, takeTestRef, goBackRef }) => {\r\n-//   const [isListening, setIsListening] = useState(false);\r\n-//   const [isSpeaking, setIsSpeaking] = useState(false);\r\n-//   const recognition = useRef(null);\r\n-//   const speechSynthesis = useRef(window.speechSynthesis);\r\n-//   const hasGreeted = useRef(false);\r\n-//   const navigate = useNavigate();\r\n-//   const location = useLocation();\r\n-//   const isRecognitionActive = useRef(false);\r\n-\r\n-//   useEffect(() => {\r\n-//     recognition.current = new window.webkitSpeechRecognition();\r\n-//     recognition.current.continuous = true;\r\n-//     recognition.current.interimResults = false;\r\n-//     recognition.current.onresult = onResult;\r\n-//     recognition.current.onend = onRecognitionEnd;\r\n-\r\n-//     return () => {\r\n-//       if (recognition.current) {\r\n-//         recognition.current.abort();\r\n-//       }\r\n-//     };\r\n-//   }, [location.pathname]);\r\n-\r\n-//   const onResult = (event) => {\r\n-//     const resultIndex = event.resultIndex;\r\n-//     const transcript = event.results[resultIndex][0].transcript\r\n-//       .trim()\r\n-//       .toLowerCase();\r\n-\r\n-//     if (event.results[resultIndex].isFinal) {\r\n-//       console.log(`Recognized text: ${transcript}`);\r\n-//       if (transcript.includes(\"brain\")) {\r\n-//         console.log(\"Wake word heard, processing command...\");\r\n-//         handleCommandWithFuse(transcript.replace(\"brain\", \"\"));\r\n-//       }\r\n-//     }\r\n-//   };\r\n-\r\n-//   const startListening = () => {\r\n-//     if (!isRecognitionActive.current) {\r\n-//       setIsListening(true);\r\n-//       recognition.current.start();\r\n-//       isRecognitionActive.current = true;\r\n-//     }\r\n-//   };\r\n-\r\n-//   const stopListening = () => {\r\n-//     if (isRecognitionActive.current) {\r\n-//       setIsListening(false);\r\n-//       recognition.current.stop();\r\n-//       isRecognitionActive.current = false;\r\n-//     }\r\n-//   };\r\n-\r\n-//   const onRecognitionEnd = () => {\r\n-//     isRecognitionActive.current = false;\r\n-//     if (isListening) {\r\n-//       startListening();\r\n-//     }\r\n-//   };\r\n-\r\n-//   const speak = (message) => {\r\n-//     const utterance = new SpeechSynthesisUtterance(message);\r\n-//     utterance.onend = () => {\r\n-//       setIsSpeaking(false);\r\n-//       if (isListening && !isRecognitionActive.current) {\r\n-//         startListening();\r\n-//       }\r\n-//     };\r\n-\r\n-//     setIsSpeaking(true);\r\n-//     if (isRecognitionActive.current) {\r\n-//       stopListening(); // Adjusted to use stopListening\r\n-//     }\r\n-//     speechSynthesis.current.speak(utterance);\r\n-//   };\r\n-\r\n-//   useEffect(() => {\r\n-//     if (isListening && !hasGreeted.current) {\r\n-//       speak(\"Hello, I'm Brane. How can I assist you today?\");\r\n-//       hasGreeted.current = true;\r\n-//     }\r\n-//   }, [isListening]);\r\n-\r\n-//   const goBack = () => {\r\n-//     if (window.history.length > 1) {\r\n-//       navigate(-1);\r\n-//     } else {\r\n-//       speak(\"Can't go back any further.\");\r\n-//     }\r\n-//   };\r\n-\r\n-//   const goForward = () => {\r\n-//     // Unfortunately, there's no direct way to check if you can go forward in the history.\r\n-//     // You might need to manage this state manually based on user navigation.\r\n-//     navigate(1);\r\n-//   };\r\n-\r\n-//   const playVideo = () => {\r\n-//     if (videoRef.current && !videoRef.current.paused) {\r\n-//       speak(\"Video is already playing.\");\r\n-//     } else if (videoRef.current) {\r\n-//       videoRef.current.play();\r\n-//       speak(\"Playing video.\");\r\n-//     } else {\r\n-//       speak(\"No video to play.\");\r\n-//     }\r\n-//   };\r\n-\r\n-//   const pauseVideo = () => {\r\n-//     if (videoRef.current && videoRef.current.paused) {\r\n-//       speak(\"Video is already paused.\");\r\n-//     } else if (videoRef.current) {\r\n-//       videoRef.current.pause();\r\n-//       speak(\"Video paused.\");\r\n-//     } else {\r\n-//       speak(\"No video to pause.\");\r\n-//     }\r\n-//   };\r\n-\r\n-//   const scrollAmount = window.innerHeight * 0.82;\r\n-\r\n-//   const scrollUp = () => {\r\n-//     if (window.pageYOffset === 0) {\r\n-//       speak(\"Already at the top of the page.\");\r\n-//     } else {\r\n-//       window.scrollBy(0, -scrollAmount);\r\n-//       speak(\"Scrolled up.\");\r\n-//     }\r\n-//   };\r\n-\r\n-//   const scrollDown = () => {\r\n-//     const maxScrollTop =\r\n-//       document.documentElement.scrollHeight - window.innerHeight;\r\n-//     if (window.pageYOffset >= maxScrollTop) {\r\n-//       speak(\"Already at the bottom of the page.\");\r\n-//     } else {\r\n-//       window.scrollBy(0, scrollAmount);\r\n-//       speak(\"Scrolled down.\");\r\n-//     }\r\n-//   };\r\n-\r\n-//   const scrollToTop = () => {\r\n-//     if (window.pageYOffset === 0) {\r\n-//       speak(\"Already at the top of the page.\");\r\n-//     } else {\r\n-//       window.scrollTo(0, 0);\r\n-//       speak(\"Scrolled to the top of the page.\");\r\n-//     }\r\n-//   };\r\n-\r\n-//   const scrollToBottom = () => {\r\n-//     const maxScrollTop =\r\n-//       document.documentElement.scrollHeight - window.innerHeight;\r\n-//     if (window.pageYOffset >= maxScrollTop) {\r\n-//       speak(\"Already at the bottom of the page.\");\r\n-//     } else {\r\n-//       window.scrollTo(0, document.body.scrollHeight);\r\n-//       speak(\"Scrolled to the bottom of the page.\");\r\n-//     }\r\n-//   };\r\n-\r\n-//   // const speak = (message) => {\r\n-//   //   const utterance = new SpeechSynthesisUtterance(message);\r\n-//   //   utterance.onend = () => {\r\n-//   //     setIsSpeaking(false);\r\n-//   //     console.log(\"Speaking ended.\");\r\n-//   //     // Only restart recognition if we're still supposed to be listening\r\n-//   //     // if (isListening) {\r\n-//   //     //   if (restartRecognitionTimeout.current) {\r\n-//   //     //     clearTimeout(restartRecognitionTimeout.current);\r\n-//   //     //   }\r\n-//   //     //   restartRecognitionTimeout.current = setTimeout(() => {\r\n-//   //     //     console.log(\"Recognition restarted.\");\r\n-//   //     //     recognition.current.start();\r\n-//   //     //   }, 100); // Delay to prevent immediate restart\r\n-//   //     // }\r\n-//   //     if (isListening && !recognition.current.starting) { // Check the flag before restarting\r\n-//   //       recognition.current.starting = true; // Set the flag when starting recognition\r\n-//   //       recognition.current.start();\r\n-//   //     }\r\n-//   //   };\r\n-\r\n-//   //   setIsSpeaking(true);\r\n-//   //   console.log(\"Speaking started.\");\r\n-//   //   recognition.current.stop(); // Stop recognition when the bot starts speaking\r\n-//   //   speechSynthesis.current.speak(utterance);\r\n-//   // };\r\n-\r\n-//   // const onRecognitionEnd = () => {\r\n-//   //   console.log(\"Recognition ended.\");\r\n-//   //   setIsRecognitionActive(false); // Update state when recognition ends\r\n-//   //   recognition.current.starting = false; // Reset the flag when recognition ends\r\n-//   //   // We now check if the recognition is already running before starting it again\r\n-//   //   if (isListening && !isSpeaking && !recognition.current?.starting) {\r\n-//   //     console.log(\"Restarting recognition.\");\r\n-//   //     recognition.current.start();\r\n-//   //   }\r\n-//   // };\r\n-\r\n-//   // useEffect(() => {\r\n-//   //   if (isListening && !hasGreeted.current) {\r\n-//   //     speak(\"Hello, I'm Brane. How can I assist you today?\");\r\n-//   //     hasGreeted.current = true;\r\n-//   //   } else if (isListening && !isSpeaking) {\r\n-//   //     recognition.current.start();\r\n-//   //   }\r\n-//   // }, [isListening, isSpeaking]);\r\n-\r\n-//   // const startListening = () => {\r\n-//   //   console.log(\"Attempting to start listening.\");\r\n-//   //   if (recognition.current && !recognition.current.starting) {\r\n-//   //     setIsListening(true);\r\n-//   //     recognition.current.starting = true; // Set the flag when starting recognition\r\n-//   //     recognition.current.start();\r\n-//   //     console.log(\"Listening started.\");\r\n-//   //   }\r\n-//   // };\r\n-\r\n-//   // const stopListening = () => {\r\n-//   //   console.log(\"Stopping listening.\");\r\n-\r\n-//   //   setIsListening(false);\r\n-//   //   recognition.current.stop();\r\n-//   //   if (speechSynthesis.current.speaking) {\r\n-//   //     speechSynthesis.current.cancel();\r\n-//   //   }\r\n-//   //   if (restartRecognitionTimeout.current) {\r\n-//   //     clearTimeout(restartRecognitionTimeout.current);\r\n-//   //   }\r\n-//   //   console.log(\"Listening stopped.\");\r\n-//   // };\r\n-//   // Handle start and stop listening logic\r\n-\r\n-//   useEffect(() => {\r\n-//     if (isListening && !hasGreeted.current) {\r\n-//       speak(\"Hello, I'm Brane. How can I assist you today?\");\r\n-//       hasGreeted.current = true;\r\n-//     }\r\n-//   }, [isListening]);\r\n-\r\n-//   // const handleCommandWithFuse = (command) => {\r\n-//   //   const fuse = new Fuse(commands, { keys: [\"utterance\"], threshold: 0.4 });\r\n-//   //   const results = fuse.search(command);\r\n-//   //   const foundCommand = results.length ? results[0].item : null;\r\n-\r\n-//   //   if (foundCommand) {\r\n-//   //     console.log(\"Command found:\", foundCommand.utterance);\r\n-//   //     speak(foundCommand.response);\r\n-//   //     if (foundCommand.route) {\r\n-//   //       navigate(foundCommand.route); // Navigate to the route specified in the command\r\n-//   //     }\r\n-//   //   } else {\r\n-//   //     console.log(\"No command found.\");\r\n-//   //     speak(\"I'm not sure how to respond to that.\");\r\n-//   //   }\r\n-//   // };\r\n-\r\n-//   const handleCommandWithFuse = (command) => {\r\n-//     const fuse = new Fuse(commands, { keys: [\"utterance\"], threshold: 0.4 });\r\n-//     const results = fuse.search(command);\r\n-//     const foundCommand = results.length ? results[0].item : null;\r\n-\r\n-//     if (foundCommand) {\r\n-//       console.log(\"Command found:\", foundCommand.utterance);\r\n-\r\n-//       if (foundCommand.action) {\r\n-//         foundCommand.action();\r\n-//       } else if (foundCommand.route) {\r\n-//         navigate(foundCommand.route);\r\n-//       }\r\n-\r\n-//       if (foundCommand.response) {\r\n-//         speak(foundCommand.response);\r\n-//       }\r\n-//     } else {\r\n-//       console.log(\"No command found.\");\r\n-//       speak(\"I'm not sure how to respond to that.\");\r\n-//     }\r\n-//   };\r\n-\r\n-//   const commands = [\r\n-//     {\r\n-//       utterance: \"Hello who are you ?\",\r\n-\r\n-//       response:\r\n-//         \"Hi! This is Brane! your Voice bot from Brane Education How can I Assist you Today ?\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"Hello\",\r\n-\r\n-//       response: \"Hi! How can I assist you today?\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"hello\",\r\n-\r\n-//       response: \"Hi! How can I assist you today?\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"Hi.\",\r\n-\r\n-//       response: \"Hello! How can I assist you today?\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"Hey there\",\r\n-\r\n-//       response: \"Hi! How can I assist you today?\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"Good morning Brane.\",\r\n-\r\n-//       response: \"Hey Hiii! Good morning  ! How can I help you?\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"Good afternoon Brane.\",\r\n-\r\n-//       response: \"Hey Hiii! Good after noon ! How can I help you?\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"Good evening Brane.\",\r\n-\r\n-//       response: \"Hey Hiii! Good evening ! How can I help you?\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"can you please take me to login page\",\r\n-//       route: \"/login\",\r\n-//       routeDescription: \"login page\",\r\n-//       response: \"Navigating to the login page.\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"go to login page\",\r\n-//       route: \"/login\",\r\n-//       routeDescription: \"login page\",\r\n-//       response: \"Navigating to the login page.\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"please take me to login page\",\r\n-//       route: \"/login\",\r\n-//       routeDescription: \"login page\",\r\n-//       response: \"Navigating to the login page.\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"Go to login page\",\r\n-//       route: \"/login\",\r\n-//       routeDescription: \"login page\",\r\n-//       response: \"Navigating to the login page.\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"open login page\",\r\n-//       route: \"/login\",\r\n-//       routeDescription: \"login page\",\r\n-//       response: \"Navigating to the login page.\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"can you please take me to signup page\",\r\n-//       route: \"/signup\",\r\n-//       routeDescription: \"signup page\",\r\n-//       response: \"Navigating to the signup page.\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"take me to signup page\",\r\n-//       route: \"/signup\",\r\n-//       routeDescription: \"signup page\",\r\n-//       response: \"Navigating to the signup page.\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"Go to signup page\",\r\n-//       route: \"/signup\",\r\n-//       routeDescription: \"signup page\",\r\n-//       response: \"Navigating to the signup page.\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"open signup page\",\r\n-//       route: \"/signup\",\r\n-//       routeDescription: \"signup page\",\r\n-//       response: \"Navigating to the signup page.\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"what are platform features\",\r\n-\r\n-//       response:\r\n-//         \"Dashboard, Dynamic time table, Learning Networks, Little Masters, Video Based Dictionary, General Search.\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"Features of platform\",\r\n-\r\n-//       response:\r\n-//         \"Dashboard, Dynamic time table, Learning Networks, Little Masters, Video Based Dictionary, General Search.\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"What does the platform offer\",\r\n-\r\n-//       response:\r\n-//         \"Dashboard, Dynamic time table, Learning Networks, Little Masters, Video Based Dictionary, General Search.\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"Say me the features of platform\",\r\n-\r\n-//       response:\r\n-//         \"Dashboard, Dynamic time table, Learning Networks, Little Masters, Video Based Dictionary, General Search.\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"Say me the services of platform\",\r\n-\r\n-//       response:\r\n-//         \"Dashboard, Dynamic time table, Learning Networks, Little Masters, Video Based Dictionary, General Search.\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"tell me the services offered by the platform\",\r\n-\r\n-//       response:\r\n-//         \"Dashboard, Dynamic time table, Learning Networks, Little Masters, Video Based Dictionary, General Search.\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"explain platform services\",\r\n-\r\n-//       response:\r\n-//         \"Dashboard, Dynamic time table, Learning Networks, Little Masters, Video Based Dictionary, General Search.\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"Give me the Parent voice of Julia Harris\",\r\n-\r\n-//       response:\r\n-//         \"Brane education has helped my son a lot in his studies. He improved a lot in his studies and is now able to score good marks in his exams\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"Play today's motivational video\",\r\n-\r\n-//       response: \"I am playing the video\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"Play today's video\",\r\n-\r\n-//       response: \"I am playing Motivational video\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"Leaders Voice\",\r\n-\r\n-//       response:\r\n-//         \"This Voice-interactive AI Platform is a game Changer. It revolutionizes education.\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"Curriculum Supported by Brane Education\",\r\n-\r\n-//       response:\r\n-//         \"we support multiple Boards let me say few Telangana State Board Andhra Pradesh Board Maharashtra Board Assam Board\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"Boards supported by the platform\",\r\n-\r\n-//       response:\r\n-//         \"we support multiple Boards let me say few Telangana State Board Andhra Pradesh Board Maharashtra Board Assam Board\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"Curriculum\",\r\n-\r\n-//       response:\r\n-//         \"we support multiple Boards let me say few Telangana State Board Andhra Pradesh Board Maharashtra Board Assam Board\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"Go to landing page\",\r\n-\r\n-//       response: \"Okay, I am taking you to the landing page.\",\r\n-\r\n-//       route: \"/childpage\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"take me to landing page\",\r\n-\r\n-//       response: \"Okay, I am taking you to the landing page.\",\r\n-\r\n-//       route: \"/childpage\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"move to landing page\",\r\n-\r\n-//       response: \"Okay, I am taking you to the landing page.\",\r\n-\r\n-//       route: \"/childpage\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"roll back to landing page\",\r\n-\r\n-//       response: \"Okay, I am taking you to the landing page.\",\r\n-\r\n-//       route: \"/childpage\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"move to landing page\",\r\n-\r\n-//       response: \"Okay, I am taking you to the landing page.\",\r\n-\r\n-//       route: \"/childpage\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"what is today's quote\",\r\n-\r\n-//       response:\r\n-//         \"Determination is the power that sees us through all our frustration and obstacles. It helps in building our willpower which is the very basis of success.\",\r\n-\r\n-//       // route: \"/childpage\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"Today's Inspirational quote\",\r\n-\r\n-//       response:\r\n-//         \"Determination is the power that sees us through all our frustration and obstacles. It helps in building our willpower which is the very basis of success.\",\r\n-\r\n-//       // route: \"/childpage\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"say me today's quote\",\r\n-\r\n-//       response:\r\n-//         \"Determination is the power that sees us through all our frustration and obstacles. It helps in building our willpower which is the very basis of success.\",\r\n-\r\n-//       // route: \"/childpage\",\r\n-//     },\r\n-//     {\r\n-//       utterance: \"go back\",\r\n-//       response: \"Going back.\",\r\n-//       action: goBack, // Note the use of an action property\r\n-//     },\r\n-//     {\r\n-//       utterance: \"go forward\",\r\n-//       response: \"Going forward.\",\r\n-//       action: goForward,\r\n-//     },\r\n-//     {\r\n-//       utterance: \"play video\",\r\n-//       // response: \"Playing video.\",\r\n-//       action: playVideo,\r\n-//     },\r\n-//     {\r\n-//       utterance: \"pause video\",\r\n-//       // response: \"Pausing video.\",\r\n-//       action: pauseVideo,\r\n-//     },\r\n-//     {\r\n-//       utterance: \"start video\",\r\n-//       // response: \"Playing video.\",\r\n-//       action: playVideo,\r\n-//     },\r\n-//     {\r\n-//       utterance: \"stop video\",\r\n-//       // response: \"Playing video.\",\r\n-//       action: pauseVideo,\r\n-//     },\r\n-//     {\r\n-//       utterance: \"scroll up\",\r\n-//       // response: \"Scrolling up.\",\r\n-//       action: scrollUp,\r\n-//     },\r\n-//     {\r\n-//       utterance: \"scroll down\",\r\n-//       // response: \"Scrolling down.\",\r\n-//       action: scrollDown,\r\n-//     },\r\n-//     {\r\n-//       utterance: \"go up\",\r\n-\r\n-//       // response: \"Scrolling up.\",\r\n-//       action: scrollUp,\r\n-//     },\r\n-//     {\r\n-//       utterance: \"go down\",\r\n-//       // response: \"Scrolling down.\",\r\n-//       action: scrollDown,\r\n-//     },\r\n-//     {\r\n-//       utterance: \"scroll to top\",\r\n-//       action: scrollToTop,\r\n-//     },\r\n-//     {\r\n-//       utterance: \"scroll to bottom\",\r\n-//       action: scrollToBottom,\r\n-//     },\r\n-//     {\r\n-//       utterance: \"go back\",\r\n-//       action: goBackRef?.current?.click, // Use goBackRef directly\r\n-//       response: \"Going back.\",\r\n-//     },\r\n-//     {\r\n-//       utterance: \"take test\",\r\n-//       action: takeTestRef?.current?.click, // Use takeTestRef directly\r\n-//       response: \"Starting the test.\",\r\n-//     },\r\n-//   ];\r\n-//   return (\r\n-//     <div className=\"speech-bot-container\">\r\n-//       <div\r\n-//         className={`button-container ${\r\n-//           isListening ? \"voicebotframeactive\" : \"voicebotframe\"\r\n-//         }`}\r\n-//       >\r\n-//         <div onClick={isListening ? stopListening : startListening}>\r\n-//           <iframe\r\n-//             src={\r\n-//               isListening\r\n-//                 ? \"https://lottie.host/?file=a89aca3f-5407-4052-82c3-2048afca7a9f/NpCdWzLSKD.json\"\r\n-//                 : \"https://lottie.host/?file=d2b6cc0e-fe95-4847-85b5-35365fca7e00/vTudpCuPZq.json\"\r\n-//             }\r\n-//             width=\"120\" // Set your desired width\r\n-//             height=\"120\" // Set your desired height\r\n-//             title={isListening ? \"Stop Animation\" : \"Start Animation\"}\r\n-//             className={isListening ? \"voicebotframeactive\" : \"voicebotframe\"}\r\n-//           ></iframe>\r\n-//           {isListening ? (\r\n-//             <div className=\"overlay\" onClick={stopListening}></div>\r\n-//           ) : (\r\n-//             <div className=\"overlay\" onClick={startListening}></div>\r\n-//           )}\r\n-//         </div>\r\n-//       </div>\r\n-//     </div>\r\n-//   );\r\n-// };\r\n-\r\n-// export default VoiceBot;\r\n"
                },
                {
                    "date": 1700736410131,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -317,11 +317,12 @@\n   };\r\n \r\n // Utility function to extract number from spoken text\r\n const extractNumber = (spokenText) => {\r\n-  // Simple regex to extract continuous digits\r\n-  return spokenText.match(/\\d+/)[0];\r\n+  const matches = spokenText.match(/\\d+/);\r\n+  return matches ? matches[0] : null;\r\n };\r\n+\r\n   const commands = [\r\n     {\r\n       utterance: \"Hello who are you ?\",\r\n \r\n"
                },
                {
                    "date": 1700736428449,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -973,9 +973,13 @@\n     {\r\n       utterance: \"set mobile number to *\",\r\n       action: (spokenText) => {\r\n         const mobileNumber = extractNumber(spokenText);\r\n-        setMobileNumber(mobileNumber);\r\n+        if (mobileNumber) {\r\n+          setMobileNumber(mobileNumber); // Only set the mobile number if it's not null\r\n+        } else {\r\n+          speak(\"I couldn't find a number in your command.\"); // Handle the case where no number is found\r\n+        }\r\n       },\r\n     },\r\n     {\r\n       utterance: \"set pin to *\",\r\n"
                },
                {
                    "date": 1700736468763,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -3,9 +3,9 @@\n import Fuse from \"fuse.js\";\r\n import \"./VoiceBot.css\";\r\n import chatbotimage from \"../../assets/chatbotgif.gif\";\r\n \r\n-const VoiceBot = ({ videoRefs }) => {\r\n+const VoiceBot = ({ videoRefs,setMobileNumber,setPin,setTriggerLogin }) => {\r\n   const [isListening, setIsListening] = useState(false);\r\n   const [isSpeaking, setIsSpeaking] = useState(false);\r\n   const recognition = useRef(null);\r\n   const speechSynthesis = useRef(window.speechSynthesis);\r\n"
                },
                {
                    "date": 1700736543206,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -3,9 +3,9 @@\n import Fuse from \"fuse.js\";\r\n import \"./VoiceBot.css\";\r\n import chatbotimage from \"../../assets/chatbotgif.gif\";\r\n \r\n-const VoiceBot = ({ videoRefs,setMobileNumber,setPin,setTriggerLogin }) => {\r\n+const VoiceBot = ({ videoRefs,setMobileNumber,setPin,triggerLogin }) => {\r\n   const [isListening, setIsListening] = useState(false);\r\n   const [isSpeaking, setIsSpeaking] = useState(false);\r\n   const recognition = useRef(null);\r\n   const speechSynthesis = useRef(window.speechSynthesis);\r\n"
                },
                {
                    "date": 1700736703834,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -317,12 +317,15 @@\n   };\r\n \r\n // Utility function to extract number from spoken text\r\n const extractNumber = (spokenText) => {\r\n-  const matches = spokenText.match(/\\d+/);\r\n+  // Remove punctuation and extract numbers\r\n+  const sanitizedText = spokenText.replace(/[.,]/g, '');\r\n+  const matches = sanitizedText.match(/\\d+/);\r\n   return matches ? matches[0] : null;\r\n };\r\n \r\n+\r\n   const commands = [\r\n     {\r\n       utterance: \"Hello who are you ?\",\r\n \r\n"
                },
                {
                    "date": 1700736836054,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -315,15 +315,15 @@\n       speak(\"I'm not sure how to respond to that.\");\r\n     }\r\n   };\r\n \r\n-// Utility function to extract number from spoken text\r\n-const extractNumber = (spokenText) => {\r\n-  // Remove punctuation and extract numbers\r\n-  const sanitizedText = spokenText.replace(/[.,]/g, '');\r\n-  const matches = sanitizedText.match(/\\d+/);\r\n-  return matches ? matches[0] : null;\r\n-};\r\n+  const extractNumber = (spokenText) => {\r\n+    if (!spokenText) return null; // Return null if spokenText is undefined or null\r\n+  \r\n+    const sanitizedText = spokenText.replace(/[.,]/g, '');\r\n+    const matches = sanitizedText.match(/\\d+/);\r\n+    return matches ? matches[0] : null;\r\n+  };\r\n \r\n \r\n   const commands = [\r\n     {\r\n"
                },
                {
                    "date": 1700736903877,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -975,21 +975,33 @@\n \r\n     {\r\n       utterance: \"set mobile number to *\",\r\n       action: (spokenText) => {\r\n+        if (!spokenText) {\r\n+          speak(\"I couldn't understand the command.\");\r\n+          return;\r\n+        }\r\n         const mobileNumber = extractNumber(spokenText);\r\n         if (mobileNumber) {\r\n-          setMobileNumber(mobileNumber); // Only set the mobile number if it's not null\r\n+          setMobileNumber(mobileNumber);\r\n         } else {\r\n-          speak(\"I couldn't find a number in your command.\"); // Handle the case where no number is found\r\n+          speak(\"I couldn't find a number in your command.\");\r\n         }\r\n       },\r\n     },\r\n     {\r\n       utterance: \"set pin to *\",\r\n       action: (spokenText) => {\r\n+        if (!spokenText) {\r\n+          speak(\"I couldn't understand the command.\");\r\n+          return;\r\n+        }\r\n         const pin = extractNumber(spokenText);\r\n-        setPin(pin);\r\n+        if (pin) {\r\n+          setPin(pin);\r\n+        } else {\r\n+          speak(\"I couldn't find a number in your command.\");\r\n+        }\r\n       },\r\n     },\r\n     {\r\n       utterance: \"press login\",\r\n"
                },
                {
                    "date": 1700737070293,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -299,12 +299,11 @@\n     const results = fuse.search(command);\r\n     const foundCommand = results.length ? results[0].item : null;\r\n \r\n     if (foundCommand) {\r\n-      console.log(\"Command found:\", foundCommand.utterance);\r\n-\r\n+      console.log(\"Command text to process:\", command);\r\n       if (foundCommand.action) {\r\n-        foundCommand.action();\r\n+        foundCommand.action(command); // Pass the command text to the action function\r\n       } else if (foundCommand.route) {\r\n         navigate(foundCommand.route);\r\n       }\r\n \r\n"
                },
                {
                    "date": 1700737135034,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -987,9 +987,9 @@\n         }\r\n       },\r\n     },\r\n     {\r\n-      utterance: \"set pin to *\",\r\n+      utterance: \"set password to *\",\r\n       action: (spokenText) => {\r\n         if (!spokenText) {\r\n           speak(\"I couldn't understand the command.\");\r\n           return;\r\n"
                },
                {
                    "date": 1700737236925,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -300,8 +300,9 @@\n     const foundCommand = results.length ? results[0].item : null;\r\n \r\n     if (foundCommand) {\r\n       console.log(\"Command text to process:\", command);\r\n+      console.log(\"Command found:\", foundCommand.utterance);\r\n       if (foundCommand.action) {\r\n         foundCommand.action(command); // Pass the command text to the action function\r\n       } else if (foundCommand.route) {\r\n         navigate(foundCommand.route);\r\n"
                },
                {
                    "date": 1700741844960,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -988,8 +988,23 @@\n         }\r\n       },\r\n     },\r\n     {\r\n+      utterance: \"enter mobile number as *\",\r\n+      action: (spokenText) => {\r\n+        if (!spokenText) {\r\n+          speak(\"I couldn't understand the command.\");\r\n+          return;\r\n+        }\r\n+        const mobileNumber = extractNumber(spokenText);\r\n+        if (mobileNumber) {\r\n+          setMobileNumber(mobileNumber);\r\n+        } else {\r\n+          speak(\"I couldn't find a number in your command.\");\r\n+        }\r\n+      },\r\n+    },\r\n+    {\r\n       utterance: \"set password to *\",\r\n       action: (spokenText) => {\r\n         if (!spokenText) {\r\n           speak(\"I couldn't understand the command.\");\r\n"
                },
                {
                    "date": 1700742082523,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1019,10 +1019,13 @@\n       },\r\n     },\r\n     {\r\n       utterance: \"press login\",\r\n-      action: () => triggerLogin(),\r\n-    },\r\n+      action: () => {\r\n+        triggerLogin();\r\n+        speak(\"Attempting to log in.\");\r\n+      },\r\n+    }\r\n     \r\n   ];\r\n \r\n   return (\r\n"
                },
                {
                    "date": 1700817751739,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1023,9 +1023,19 @@\n       action: () => {\r\n         triggerLogin();\r\n         speak(\"Attempting to log in.\");\r\n       },\r\n-    }\r\n+    },\r\n+    {\r\n+      utterance: \"press record audio\",\r\n+      action: () => {\r\n+        console.log(\"Record Audio command detected\");\r\n+        setTriggerRecordAudio(true);\r\n+        // Optionally add a delay or condition to reset this state to `false`\r\n+        setTimeout(() => setTriggerRecordAudio(false), 1000);\r\n+      },\r\n+      response: \"Starting recording.\"\r\n+    },\r\n     \r\n   ];\r\n \r\n   return (\r\n"
                },
                {
                    "date": 1700817919046,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1028,11 +1028,9 @@\n     {\r\n       utterance: \"press record audio\",\r\n       action: () => {\r\n         console.log(\"Record Audio command detected\");\r\n-        setTriggerRecordAudio(true);\r\n-        // Optionally add a delay or condition to reset this state to `false`\r\n-        setTimeout(() => setTriggerRecordAudio(false), 1000);\r\n+        props.setTriggerRecordAudio(true);\r\n       },\r\n       response: \"Starting recording.\"\r\n     },\r\n     \r\n"
                },
                {
                    "date": 1700818056208,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -3,9 +3,9 @@\n import Fuse from \"fuse.js\";\r\n import \"./VoiceBot.css\";\r\n import chatbotimage from \"../../assets/chatbotgif.gif\";\r\n \r\n-const VoiceBot = ({ videoRefs,setMobileNumber,setPin,triggerLogin }) => {\r\n+const VoiceBot = ({ videoRefs,setMobileNumber,setPin,triggerLogin, setTriggerRecordAudio }) => {\r\n   const [isListening, setIsListening] = useState(false);\r\n   const [isSpeaking, setIsSpeaking] = useState(false);\r\n   const recognition = useRef(null);\r\n   const speechSynthesis = useRef(window.speechSynthesis);\r\n"
                },
                {
                    "date": 1700818263699,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1028,9 +1028,9 @@\n     {\r\n       utterance: \"press record audio\",\r\n       action: () => {\r\n         console.log(\"Record Audio command detected\");\r\n-        props.setTriggerRecordAudio(true);\r\n+        setTriggerRecordAudio(true);\r\n       },\r\n       response: \"Starting recording.\"\r\n     },\r\n     \r\n"
                },
                {
                    "date": 1700818306397,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1030,9 +1030,9 @@\n       action: () => {\r\n         console.log(\"Record Audio command detected\");\r\n         setTriggerRecordAudio(true);\r\n       },\r\n-      response: \"Starting recording.\"\r\n+      response: \"Started\"\r\n     },\r\n     \r\n   ];\r\n \r\n"
                },
                {
                    "date": 1700824365067,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1051,8 +1051,9 @@\n           src={chatbotimage}\r\n           alt=\"\"\r\n           onClick={isListening ? stopListening : startListening}\r\n         />\r\n+        <p>Hiiiii</p>\r\n       </div>\r\n     </div>\r\n   );\r\n };\r\n"
                },
                {
                    "date": 1700824377887,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1045,15 +1045,16 @@\n       >\r\n         {/* <button onClick={isListening ? stopListening : startListening}>\r\n           {isListening ? \"Stop\" : \"Start\"} Animation\r\n         </button> */}\r\n+                <p>Hiiiii</p>\r\n         <img\r\n           className=\"botimage\"\r\n           src={chatbotimage}\r\n           alt=\"\"\r\n           onClick={isListening ? stopListening : startListening}\r\n         />\r\n-        <p>Hiiiii</p>\r\n+\r\n       </div>\r\n     </div>\r\n   );\r\n };\r\n"
                },
                {
                    "date": 1700824488444,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1045,9 +1045,8 @@\n       >\r\n         {/* <button onClick={isListening ? stopListening : startListening}>\r\n           {isListening ? \"Stop\" : \"Start\"} Animation\r\n         </button> */}\r\n-                <p>Hiiiii</p>\r\n         <img\r\n           className=\"botimage\"\r\n           src={chatbotimage}\r\n           alt=\"\"\r\n"
                },
                {
                    "date": 1700824780331,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1051,9 +1051,8 @@\n           src={chatbotimage}\r\n           alt=\"\"\r\n           onClick={isListening ? stopListening : startListening}\r\n         />\r\n-\r\n       </div>\r\n     </div>\r\n   );\r\n };\r\n"
                },
                {
                    "date": 1700825696552,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1003,8 +1003,23 @@\n         }\r\n       },\r\n     },\r\n     {\r\n+      utterance: \"enter my mobile number as *\",\r\n+      action: (spokenText) => {\r\n+        if (!spokenText) {\r\n+          speak(\"I couldn't understand the command.\");\r\n+          return;\r\n+        }\r\n+        const mobileNumber = extractNumber(spokenText);\r\n+        if (mobileNumber) {\r\n+          setMobileNumber(mobileNumber);\r\n+        } else {\r\n+          speak(\"I couldn't find a number in your command.\");\r\n+        }\r\n+      },\r\n+    },\r\n+    {\r\n       utterance: \"set password to *\",\r\n       action: (spokenText) => {\r\n         if (!spokenText) {\r\n           speak(\"I couldn't understand the command.\");\r\n"
                },
                {
                    "date": 1700825709176,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1018,8 +1018,23 @@\n         }\r\n       },\r\n     },\r\n     {\r\n+      utterance: \"set mobile number as *\",\r\n+      action: (spokenText) => {\r\n+        if (!spokenText) {\r\n+          speak(\"I couldn't understand the command.\");\r\n+          return;\r\n+        }\r\n+        const mobileNumber = extractNumber(spokenText);\r\n+        if (mobileNumber) {\r\n+          setMobileNumber(mobileNumber);\r\n+        } else {\r\n+          speak(\"I couldn't find a number in your command.\");\r\n+        }\r\n+      },\r\n+    },\r\n+    {\r\n       utterance: \"set password to *\",\r\n       action: (spokenText) => {\r\n         if (!spokenText) {\r\n           speak(\"I couldn't understand the command.\");\r\n"
                },
                {
                    "date": 1700825733984,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1033,8 +1033,23 @@\n         }\r\n       },\r\n     },\r\n     {\r\n+      utterance: \"fill mobile number as *\",\r\n+      action: (spokenText) => {\r\n+        if (!spokenText) {\r\n+          speak(\"I couldn't understand the command.\");\r\n+          return;\r\n+        }\r\n+        const mobileNumber = extractNumber(spokenText);\r\n+        if (mobileNumber) {\r\n+          setMobileNumber(mobileNumber);\r\n+        } else {\r\n+          speak(\"I couldn't find a number in your command.\");\r\n+        }\r\n+      },\r\n+    },\r\n+    {\r\n       utterance: \"set password to *\",\r\n       action: (spokenText) => {\r\n         if (!spokenText) {\r\n           speak(\"I couldn't understand the command.\");\r\n"
                },
                {
                    "date": 1700825750091,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1063,8 +1063,23 @@\n         }\r\n       },\r\n     },\r\n     {\r\n+      utterance: \"enter password to *\",\r\n+      action: (spokenText) => {\r\n+        if (!spokenText) {\r\n+          speak(\"I couldn't understand the command.\");\r\n+          return;\r\n+        }\r\n+        const pin = extractNumber(spokenText);\r\n+        if (pin) {\r\n+          setPin(pin);\r\n+        } else {\r\n+          speak(\"I couldn't find a number in your command.\");\r\n+        }\r\n+      },\r\n+    },\r\n+    {\r\n       utterance: \"press login\",\r\n       action: () => {\r\n         triggerLogin();\r\n         speak(\"Attempting to log in.\");\r\n"
                },
                {
                    "date": 1700825768397,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1078,8 +1078,23 @@\n         }\r\n       },\r\n     },\r\n     {\r\n+      utterance: \"change password to *\",\r\n+      action: (spokenText) => {\r\n+        if (!spokenText) {\r\n+          speak(\"I couldn't understand the command.\");\r\n+          return;\r\n+        }\r\n+        const pin = extractNumber(spokenText);\r\n+        if (pin) {\r\n+          setPin(pin);\r\n+        } else {\r\n+          speak(\"I couldn't find a number in your command.\");\r\n+        }\r\n+      },\r\n+    },\r\n+    {\r\n       utterance: \"press login\",\r\n       action: () => {\r\n         triggerLogin();\r\n         speak(\"Attempting to log in.\");\r\n"
                },
                {
                    "date": 1700825787032,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1048,9 +1048,9 @@\n         }\r\n       },\r\n     },\r\n     {\r\n-      utterance: \"set password to *\",\r\n+      utterance: \"set password as *\",\r\n       action: (spokenText) => {\r\n         if (!spokenText) {\r\n           speak(\"I couldn't understand the command.\");\r\n           return;\r\n@@ -1063,9 +1063,9 @@\n         }\r\n       },\r\n     },\r\n     {\r\n-      utterance: \"enter password to *\",\r\n+      utterance: \"enter password as *\",\r\n       action: (spokenText) => {\r\n         if (!spokenText) {\r\n           speak(\"I couldn't understand the command.\");\r\n           return;\r\n"
                },
                {
                    "date": 1700825816217,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,3976 @@\n+import React, { useState, useEffect, useRef } from \"react\";\r\n+import { useNavigate, useLocation } from \"react-router-dom\";\r\n+import Fuse from \"fuse.js\";\r\n+import \"./VoiceBot.css\";\r\n+import chatbotimage from \"../../assets/chatbotgif.gif\";\r\n+\r\n+const VoiceBot = ({ videoRefs,setMobileNumber,setPin,triggerLogin, setTriggerRecordAudio }) => {\r\n+  const [isListening, setIsListening] = useState(false);\r\n+  const [isSpeaking, setIsSpeaking] = useState(false);\r\n+  const recognition = useRef(null);\r\n+  const speechSynthesis = useRef(window.speechSynthesis);\r\n+  const [hasGreeted, setHasGreeted] = useState(false);\r\n+  const navigate = useNavigate();\r\n+\r\n+  // Initialize speech recognition\r\n+  useEffect(() => {\r\n+    recognition.current = new window.webkitSpeechRecognition();\r\n+    recognition.current.continuous = true;\r\n+    recognition.current.interimResults = false;\r\n+    recognition.current.onresult = onResult;\r\n+    recognition.current.onend = onRecognitionEnd;\r\n+    recognition.current.starting = false;\r\n+\r\n+    recognition.current.onerror = (event) => {\r\n+      console.error(\"Recognition error:\", event.error);\r\n+      if (isListening && !isSpeaking) {\r\n+        restartRecognition();\r\n+      }\r\n+    };\r\n+\r\n+    return () => {\r\n+      if (recognition.current) {\r\n+        recognition.current.abort();\r\n+      }\r\n+    };\r\n+  }, []);\r\n+\r\n+  useEffect(() => {\r\n+    const checkRecognition = () => {\r\n+      if (isListening && !isSpeaking && !recognition.current.starting) {\r\n+        console.log(\"Restarting recognition because it's not active.\");\r\n+        recognition.current.starting = true;\r\n+        recognition.current.start();\r\n+        console.log(\"Restarted recognition.\");\r\n+      }\r\n+    };\r\n+\r\n+    const recognitionCheckInterval = setInterval(checkRecognition, 500); // Check every .5 second\r\n+\r\n+    return () => {\r\n+      clearInterval(recognitionCheckInterval);\r\n+    };\r\n+  }, [isListening, isSpeaking]);\r\n+\r\n+  const historyStack = useRef([]);\r\n+\r\n+  useEffect(() => {\r\n+    return () => {\r\n+      // Clean up the listener when the component unmounts\r\n+      window.removeEventListener(\"popstate\", handlePopState);\r\n+    };\r\n+  }, []);\r\n+\r\n+  const handlePopState = () => {\r\n+    // This needs to handle both back and forward browser actions\r\n+    // Use some logic to determine whether it's a back or forward action\r\n+    // For simplicity, assume it's always back\r\n+    historyStack.current.pop();\r\n+    forwardStack.current.length = 0; // Clear forward stack on manual navigation\r\n+  };\r\n+\r\n+  // Listen to popstate events to update the history stack\r\n+  useEffect(() => {\r\n+    window.addEventListener(\"popstate\", handlePopState);\r\n+  }, []);\r\n+\r\n+  const forwardStack = useRef([]);\r\n+\r\n+  const goBack = () => {\r\n+    if (window.history.state && window.history.state.idx > 0) {\r\n+      window.history.back();\r\n+      speak(\"Going back\");\r\n+    } else {\r\n+      speak(\"Can't go back any further.\");\r\n+    }\r\n+  };\r\n+\r\n+  const goForward = () => {\r\n+    if (\r\n+      window.history.state &&\r\n+      window.history.state.idx < window.history.length - 1\r\n+    ) {\r\n+      window.history.forward();\r\n+      speak(\"Going forward\");\r\n+    } else {\r\n+      speak(\"No forward history available.\");\r\n+    }\r\n+  };\r\n+\r\n+  const scrollAmount = window.innerHeight * 0.82;\r\n+\r\n+  const scrollUp = () => {\r\n+    if (window.pageYOffset === 0) {\r\n+      speak(\"Already at the top of the page.\");\r\n+    } else {\r\n+      window.scrollBy(0, -scrollAmount);\r\n+      speak(\"Scrolled up.\");\r\n+    }\r\n+  };\r\n+\r\n+  const scrollDown = () => {\r\n+    const maxScrollTop =\r\n+      document.documentElement.scrollHeight - window.innerHeight;\r\n+    if (window.pageYOffset >= maxScrollTop) {\r\n+      speak(\"Already at the bottom of the page.\");\r\n+    } else {\r\n+      window.scrollBy(0, scrollAmount);\r\n+      speak(\"Scrolled down.\");\r\n+    }\r\n+  };\r\n+\r\n+  const scrollToTop = () => {\r\n+    if (window.pageYOffset === 0) {\r\n+      speak(\"Already at the top of the page.\");\r\n+    } else {\r\n+      window.scrollTo(0, 0);\r\n+      speak(\"Scrolled to the top of the page.\");\r\n+    }\r\n+  };\r\n+\r\n+  const scrollToBottom = () => {\r\n+    const maxScrollTop =\r\n+      document.documentElement.scrollHeight - window.innerHeight;\r\n+    if (window.pageYOffset >= maxScrollTop) {\r\n+      speak(\"Already at the bottom of the page.\");\r\n+    } else {\r\n+      window.scrollTo(0, document.body.scrollHeight);\r\n+      speak(\"Scrolled to the bottom of the page.\");\r\n+    }\r\n+  };\r\n+\r\n+  const controlVideo = (videoId, action) => {\r\n+    const videoRef = videoRefs.current.get(videoId);\r\n+    if (videoRef && videoRef.current) {\r\n+      switch (action) {\r\n+        case \"play\":\r\n+          videoRef.current.play();\r\n+          break;\r\n+        case \"pause\":\r\n+          videoRef.current.pause();\r\n+          break;\r\n+        case \"mute\":\r\n+          videoRef.current.muted = true;\r\n+          break;\r\n+        case \"unmute\":\r\n+          videoRef.current.muted = false;\r\n+          break;\r\n+        case \"fullscreen\":\r\n+          if (videoRef.current.requestFullscreen) {\r\n+            videoRef.current.requestFullscreen();\r\n+          } else if (videoRef.current.webkitRequestFullscreen) {\r\n+            // Safari\r\n+            videoRef.current.webkitRequestFullscreen();\r\n+          } else if (videoRef.current.msRequestFullscreen) {\r\n+            // IE11\r\n+            videoRef.current.msRequestFullscreen();\r\n+          }\r\n+          break;\r\n+        case \"exitFullscreen\":\r\n+          if (document.exitFullscreen) {\r\n+            document.exitFullscreen();\r\n+          } else if (document.webkitExitFullscreen) {\r\n+            // Safari\r\n+            document.webkitExitFullscreen();\r\n+          } else if (document.msExitFullscreen) {\r\n+            // IE11\r\n+            document.msExitFullscreen();\r\n+          }\r\n+          break;\r\n+        case \"increaseVolume\":\r\n+          if (videoRef.current.volume < 1) {\r\n+            videoRef.current.volume = Math.min(\r\n+              1,\r\n+              videoRef.current.volume + 0.1\r\n+            );\r\n+          }\r\n+          break;\r\n+        case \"decreaseVolume\":\r\n+          if (videoRef.current.volume > 0) {\r\n+            videoRef.current.volume = Math.max(\r\n+              0,\r\n+              videoRef.current.volume - 0.1\r\n+            );\r\n+          }\r\n+          break;\r\n+        // Add other cases as needed\r\n+      }\r\n+      speak(\r\n+        `${\r\n+          action.charAt(0).toUpperCase() +\r\n+          action\r\n+            .slice(1)\r\n+            .replace(/([A-Z])/g, \" $1\")\r\n+            .toLowerCase()\r\n+        }ing video.`\r\n+      );\r\n+    } else {\r\n+      speak(`Video not found.`);\r\n+    }\r\n+  };\r\n+\r\n+  const speak = (message) => {\r\n+    const utterance = new SpeechSynthesisUtterance(message);\r\n+    utterance.onend = () => {\r\n+      setIsSpeaking(false);\r\n+      // Restart recognition after speaking has ended\r\n+      if (isListening) {\r\n+        restartRecognition();\r\n+      }\r\n+    };\r\n+\r\n+    setIsSpeaking(true);\r\n+    // Stop recognition when the bot starts speaking\r\n+    if (recognition.current) {\r\n+      recognition.current.abort();\r\n+    }\r\n+    speechSynthesis.current.speak(utterance);\r\n+  };\r\n+\r\n+  const restartRecognition = () => {\r\n+    // Check if recognition is not already started and if the bot is set to listen\r\n+    if (\r\n+      recognition.current &&\r\n+      !recognition.current.starting &&\r\n+      isListening &&\r\n+      !isSpeaking\r\n+    ) {\r\n+      recognition.current.abort(); // Ensure any ongoing recognition is stopped\r\n+      recognition.current.starting = true;\r\n+      recognition.current.start();\r\n+    }\r\n+  };\r\n+\r\n+  // Restart recognition when bot finishes speaking and isListening is true\r\n+  useEffect(() => {\r\n+    if (!isSpeaking && isListening) {\r\n+      restartRecognition();\r\n+    }\r\n+  }, [isSpeaking, isListening]);\r\n+\r\n+  const onResult = (event) => {\r\n+    const resultIndex = event.resultIndex;\r\n+    const transcript = event.results[resultIndex][0].transcript\r\n+      .trim()\r\n+      .toLowerCase();\r\n+\r\n+    if (event.results[resultIndex].isFinal) {\r\n+      console.log(`Recognized text: ${transcript}`);\r\n+      if (transcript.includes(\"brain\")) {\r\n+        console.log(\"Wake word heard, processing command...\");\r\n+        handleCommandWithFuse(transcript.replace(\"brain\", \"\"));\r\n+      }\r\n+    }\r\n+  };\r\n+\r\n+  const onRecognitionEnd = () => {\r\n+    recognition.current.starting = false;\r\n+    if (isListening && !isSpeaking) {\r\n+      restartRecognition();\r\n+    }\r\n+  };\r\n+\r\n+  useEffect(() => {\r\n+    if (isListening && !hasGreeted) {\r\n+      speak(\"Hello, I'm Brane. How can I help you today?\");\r\n+      setHasGreeted(true);\r\n+    }\r\n+  }, [isListening, hasGreeted]);\r\n+\r\n+  // Updated startListening function\r\n+  const startListening = () => {\r\n+    setIsListening(true);\r\n+    if (!recognition.current.starting) {\r\n+      restartRecognition();\r\n+    }\r\n+  };\r\n+\r\n+  // Updated stopListening function\r\n+  const stopListening = () => {\r\n+    setIsListening(false);\r\n+    if (speechSynthesis.current.speaking) {\r\n+      speechSynthesis.current.cancel();\r\n+    }\r\n+    recognition.current.abort();\r\n+  };\r\n+\r\n+  const handleCommandWithFuse = (command) => {\r\n+    const fuse = new Fuse(commands, { keys: [\"utterance\"], threshold: 0.4 });\r\n+    const results = fuse.search(command);\r\n+    const foundCommand = results.length ? results[0].item : null;\r\n+\r\n+    if (foundCommand) {\r\n+      console.log(\"Command text to process:\", command);\r\n+      console.log(\"Command found:\", foundCommand.utterance);\r\n+      if (foundCommand.action) {\r\n+        foundCommand.action(command); // Pass the command text to the action function\r\n+      } else if (foundCommand.route) {\r\n+        navigate(foundCommand.route);\r\n+      }\r\n+\r\n+      // Speak after performing the action or navigation\r\n+      speak(foundCommand.response);\r\n+    } else {\r\n+      console.log(\"No command found.\");\r\n+      speak(\"I'm not sure how to respond to that.\");\r\n+    }\r\n+  };\r\n+\r\n+  const extractNumber = (spokenText) => {\r\n+    if (!spokenText) return null; // Return null if spokenText is undefined or null\r\n+  \r\n+    const sanitizedText = spokenText.replace(/[.,]/g, '');\r\n+    const matches = sanitizedText.match(/\\d+/);\r\n+    return matches ? matches[0] : null;\r\n+  };\r\n+\r\n+\r\n+  const commands = [\r\n+    {\r\n+      utterance: \"Hello who are you ?\",\r\n+\r\n+      response:\r\n+        \"Hi! This is Brane! your Voice bot from Brane Education How can I Assist you Today ?\",\r\n+    },\r\n+\r\n+    {\r\n+      utterance: \"Hello\",\r\n+\r\n+      response: \"Hi! How can I assist you today?\",\r\n+    },\r\n+\r\n+    {\r\n+      utterance: \"hello\",\r\n+\r\n+      response: \"Hi! How can I assist you today?\",\r\n+    },\r\n+\r\n+    {\r\n+      utterance: \"Hi.\",\r\n+\r\n+      response: \"Hello! How can I assist you today?\",\r\n+    },\r\n+\r\n+    {\r\n+      utterance: \"Hey there\",\r\n+\r\n+      response: \"Hi! How can I assist you today?\",\r\n+    },\r\n+\r\n+    {\r\n+      utterance: \"Good morning Brane.\",\r\n+\r\n+      response: \"Hey Hiii! Good morning  ! How can I help you?\",\r\n+    },\r\n+\r\n+    {\r\n+      utterance: \"Good afternoon Brane.\",\r\n+\r\n+      response: \"Hey Hiii! Good after noon ! How can I help you?\",\r\n+    },\r\n+\r\n+    {\r\n+      utterance: \"Good evening Brane.\",\r\n+\r\n+      response: \"Hey Hiii! Good evening ! How can I help you?\",\r\n+    },\r\n+\r\n+    {\r\n+      utterance: \"take me to homepage\",\r\n+\r\n+      route: \"/\",\r\n+\r\n+      response: \"You're in Homepage now\",\r\n+    },\r\n+    {\r\n+      utterance: \"open homepage\",\r\n+\r\n+      route: \"/\",\r\n+\r\n+      response: \"You're in Homepage now\",\r\n+    },\r\n+    {\r\n+      utterance: \"go to homepage\",\r\n+\r\n+      route: \"/\",\r\n+\r\n+      response: \"You're in Homepage now\",\r\n+    },\r\n+    {\r\n+      utterance: \"go back to homepage\",\r\n+\r\n+      route: \"/\",\r\n+\r\n+      response: \"You're in Homepage now\",\r\n+    },\r\n+    {\r\n+      utterance: \"can you please take me to login page\",\r\n+\r\n+      route: \"/login\",\r\n+\r\n+      response: \"Here's the Login Page, Please Login\",\r\n+    },\r\n+\r\n+    {\r\n+      utterance: \"please take me to login page\",\r\n+\r\n+      route: \"/login\",\r\n+\r\n+      response: \"Here's the Login Page, Please Login\",\r\n+    },\r\n+\r\n+    {\r\n+      utterance: \"Go to login page\",\r\n+\r\n+      route: \"/login\",\r\n+\r\n+      response: \"Here's the Login Page, Please Login\",\r\n+    },\r\n+\r\n+    {\r\n+      utterance: \"open login page\",\r\n+\r\n+      route: \"/login\",\r\n+\r\n+      response: \"Here's the Login Page, Please Login\",\r\n+    },\r\n+\r\n+    {\r\n+      utterance: \"can you please take me to signup page\",\r\n+\r\n+      route: \"/signup\",\r\n+\r\n+      response: \"Here's the signup page. Please proceed With Registration.\",\r\n+    },\r\n+\r\n+    {\r\n+      utterance: \"take me to signup page\",\r\n+\r\n+      route: \"/signup\",\r\n+\r\n+      response: \"Here's the signup page. Please proceed With Registration.\",\r\n+    },\r\n+\r\n+    {\r\n+      utterance: \"Go to signup page\",\r\n+\r\n+      route: \"/signup\",\r\n+\r\n+      response: \"Here's the signup page. Please proceed With Registration.\",\r\n+    },\r\n+\r\n+    {\r\n+      utterance: \"open signup page\",\r\n+\r\n+      route: \"/signup\",\r\n+\r\n+      response: \"Here's the signup page. Please proceed With Registration.\",\r\n+    },\r\n+\r\n+    {\r\n+      utterance: \"Go to face id\",\r\n+\r\n+      route: \"/login/faceid\",\r\n+\r\n+      response: \"Here's Face ID Login. Please proceed.\",\r\n+    },\r\n+\r\n+    {\r\n+      utterance: \"Go to face id login\",\r\n+\r\n+      route: \"/login/faceid\",\r\n+\r\n+      response: \"Here's Face ID Login. Please proceed.\",\r\n+    },\r\n+    {\r\n+      utterance: \"Go to face login\",\r\n+\r\n+      route: \"/login/faceid\",\r\n+\r\n+      response: \"Here's Face ID Login. Please proceed.\",\r\n+    },\r\n+\r\n+    {\r\n+      utterance: \"login with face id\",\r\n+\r\n+      route: \"/login/faceid\",\r\n+\r\n+      response: \"Here's Face ID Login. Please proceed.\",\r\n+    },\r\n+\r\n+    {\r\n+      utterance: \"login with face\",\r\n+\r\n+      route: \"/login/faceid\",\r\n+\r\n+      response: \"Here's Face ID Login. Please proceed.\",\r\n+    },\r\n+\r\n+    {\r\n+      utterance: \"i want to login with face\",\r\n+\r\n+      route: \"/login/faceid\",\r\n+\r\n+      response: \"Here's Face ID Login. Please proceed.\",\r\n+    },\r\n+\r\n+    {\r\n+      utterance: \"login with voice\",\r\n+\r\n+      route: \"/login/voiceid\",\r\n+\r\n+      response: \"Here's Voice Login. Please proceed.\",\r\n+    },\r\n+\r\n+    {\r\n+      utterance: \"i want to login with voice\",\r\n+\r\n+      route: \"/login/voiceid\",\r\n+\r\n+      response: \"Here's Voice Login. Please proceed.\",\r\n+    },\r\n+\r\n+    {\r\n+      utterance: \"go to voice login\",\r\n+\r\n+      route: \"/login/voiceid\",\r\n+\r\n+      response: \"Here's Voice Login. Please proceed.\",\r\n+    },\r\n+\r\n+    {\r\n+      utterance: \"login with voice\",\r\n+\r\n+      route: \"/login/voiceid\",\r\n+\r\n+      response: \"Here's Voice Login. Please proceed.\",\r\n+    },\r\n+\r\n+    {\r\n+      utterance: \"login with mobile\",\r\n+\r\n+      route: \"/login/mobile\",\r\n+\r\n+      response: \"Here's Mobile Login. Please proceed.\",\r\n+    },\r\n+\r\n+    {\r\n+      utterance: \"i want to login with mobile\",\r\n+\r\n+      route: \"/login/mobile\",\r\n+\r\n+      response: \"Here's Mobile Login. Please proceed.\",\r\n+    },\r\n+    {\r\n+      utterance: \"go to mobile login\",\r\n+\r\n+      route: \"/login/mobile\",\r\n+\r\n+      response: \"Here's Mobile Login. Please proceed.\",\r\n+    },\r\n+    {\r\n+      utterance: \"go to about page\",\r\n+\r\n+      route: \"/aboutus\",\r\n+\r\n+      response: \"This is About us.\",\r\n+    },\r\n+    {\r\n+      utterance: \"go to about us page\",\r\n+\r\n+      route: \"/aboutus\",\r\n+\r\n+      response: \"This is About us.\",\r\n+    },\r\n+    {\r\n+      utterance: \"open about us page\",\r\n+\r\n+      route: \"/aboutus\",\r\n+\r\n+      response: \"This is About us.\",\r\n+    },\r\n+    {\r\n+      utterance: \"open about page\",\r\n+\r\n+      route: \"/aboutus\",\r\n+\r\n+      response: \"This is About us.\",\r\n+    },\r\n+    {\r\n+      utterance: \"take me to about page\",\r\n+\r\n+      route: \"/aboutus\",\r\n+\r\n+      response: \"This is About us.\",\r\n+    },\r\n+    {\r\n+      utterance: \"take me to about us page\",\r\n+\r\n+      route: \"/aboutus\",\r\n+\r\n+      response: \"This is About us.\",\r\n+    },\r\n+\r\n+    {\r\n+      utterance: \"go to contact page\",\r\n+\r\n+      route: \"/contactus\",\r\n+\r\n+      response: \"You can contact us from here\",\r\n+    },\r\n+    {\r\n+      utterance: \"go to contact us page\",\r\n+\r\n+      route: \"/contactus\",\r\n+\r\n+      response: \"You can contact us from here\",\r\n+    },\r\n+    {\r\n+      utterance: \"open contact us page\",\r\n+\r\n+      route: \"/contactus\",\r\n+\r\n+      response: \"You can contact us from here\",\r\n+    },\r\n+    {\r\n+      utterance: \"open contact page\",\r\n+\r\n+      route: \"/contactus\",\r\n+\r\n+      response: \"You can contact us from here\",\r\n+    },\r\n+    {\r\n+      utterance: \"take me to about page\",\r\n+\r\n+      route: \"/contactus\",\r\n+\r\n+      response: \"You can contact us from here\",\r\n+    },\r\n+    {\r\n+      utterance: \"take me to contact us page\",\r\n+\r\n+      route: \"/contactus\",\r\n+\r\n+      response: \"You can contact us from here\",\r\n+    },\r\n+\r\n+    {\r\n+      utterance: \"what are platform features\",\r\n+\r\n+      response:\r\n+        \"Dashboard, Dynamic time table, Learning Networks, Little Masters, Video Based Dictionary, General Search.\",\r\n+    },\r\n+\r\n+    {\r\n+      utterance: \"Features of platform\",\r\n+\r\n+      response:\r\n+        \"Dashboard, Dynamic time table, Learning Networks, Little Masters, Video Based Dictionary, General Search.\",\r\n+    },\r\n+\r\n+    {\r\n+      utterance: \"What does the platform offer\",\r\n+\r\n+      response:\r\n+        \"Dashboard, Dynamic time table, Learning Networks, Little Masters, Video Based Dictionary, General Search.\",\r\n+    },\r\n+\r\n+    {\r\n+      utterance: \"Say me the features of platform\",\r\n+\r\n+      response:\r\n+        \"Dashboard, Dynamic time table, Learning Networks, Little Masters, Video Based Dictionary, General Search.\",\r\n+    },\r\n+\r\n+    {\r\n+      utterance: \"Say me the services of platform\",\r\n+\r\n+      response:\r\n+        \"Dashboard, Dynamic time table, Learning Networks, Little Masters, Video Based Dictionary, General Search.\",\r\n+    },\r\n+\r\n+    {\r\n+      utterance: \"tell me the services offered by the platform\",\r\n+\r\n+      response:\r\n+        \"Dashboard, Dynamic time table, Learning Networks, Little Masters, Video Based Dictionary, General Search.\",\r\n+    },\r\n+\r\n+    {\r\n+      utterance: \"explain platform services\",\r\n+\r\n+      response:\r\n+        \"Dashboard, Dynamic time table, Learning Networks, Little Masters, Video Based Dictionary, General Search.\",\r\n+    },\r\n+\r\n+    {\r\n+      utterance: \"Give me the Parent voice of Julia Harris\",\r\n+\r\n+      response:\r\n+        \"Brane education has helped my son a lot in his studies. He improved a lot in his studies and is now able to score good marks in his exams\",\r\n+    },\r\n+\r\n+    {\r\n+      utterance: \"Leaders Voice\",\r\n+\r\n+      response:\r\n+        \"This Voice-interactive AI Platform is a game Changer. It revolutionizes education.\",\r\n+    },\r\n+\r\n+    {\r\n+      utterance: \"Curriculum Supported by Brane Education\",\r\n+\r\n+      response:\r\n+        \"we support multiple Boards let me say few Telangana State Board Andhra Pradesh Board Maharashtra Board Assam Board\",\r\n+    },\r\n+\r\n+    {\r\n+      utterance: \"Boards supported by the platform\",\r\n+\r\n+      response:\r\n+        \"we support multiple Boards let me say few Telangana State Board Andhra Pradesh Board Maharashtra Board Assam Board\",\r\n+    },\r\n+\r\n+    {\r\n+      utterance: \"Curriculum\",\r\n+\r\n+      response:\r\n+        \"we support multiple Boards let me say few Telangana State Board Andhra Pradesh Board Maharashtra Board Assam Board\",\r\n+    },\r\n+\r\n+    {\r\n+      utterance: \"what is today's quote\",\r\n+\r\n+      response:\r\n+        \"Determination is the power that sees us through all our frustration and obstacles. It helps in building our willpower which is the very basis of success.\",\r\n+\r\n+      route: \"/childpage\",\r\n+    },\r\n+\r\n+    {\r\n+      utterance: \"Today's Inspirational quote\",\r\n+\r\n+      response:\r\n+        \"Determination is the power that sees us through all our frustration and obstacles. It helps in building our willpower which is the very basis of success.\",\r\n+\r\n+      route: \"/childpage\",\r\n+    },\r\n+\r\n+    {\r\n+      utterance: \"say me today's quote\",\r\n+\r\n+      response:\r\n+        \"Determination is the power that sees us through all our frustration and obstacles. It helps in building our willpower which is the very basis of success.\",\r\n+\r\n+      route: \"/childpage\",\r\n+    },\r\n+    {\r\n+      utterance: \"go back\",\r\n+      response: \"\",\r\n+      action: goBack, // Note the use of an action property\r\n+    },\r\n+    {\r\n+      utterance: \"go forward\",\r\n+      response: \"\",\r\n+      action: goForward,\r\n+    },\r\n+    // {\r\n+    //   utterance: \"play video\",\r\n+    //   // response: \"Playing video.\",\r\n+    //   action: playVideo,\r\n+    // },\r\n+    // {\r\n+    //   utterance: \"pause video\",\r\n+    //   // response: \"Pausing video.\",\r\n+    //   action: pauseVideo,\r\n+    // },\r\n+    // {\r\n+    //   utterance: \"start video\",\r\n+    //   // response: \"Playing video.\",\r\n+    //   action: playVideo,\r\n+    // },\r\n+    // {\r\n+    //   utterance: \"stop video\",\r\n+    //   // response: \"Playing video.\",\r\n+    //   action: pauseVideo,\r\n+    // },\r\n+    {\r\n+      utterance: \"scroll up\",\r\n+      // response: \"Scrolling up.\",\r\n+      action: scrollUp,\r\n+    },\r\n+    {\r\n+      utterance: \"scroll down\",\r\n+      // response: \"Scrolling down.\",\r\n+      action: scrollDown,\r\n+    },\r\n+    {\r\n+      utterance: \"go up\",\r\n+\r\n+      // response: \"Scrolling up.\",\r\n+      action: scrollUp,\r\n+    },\r\n+    {\r\n+      utterance: \"go down\",\r\n+      // response: \"Scrolling down.\",\r\n+      action: scrollDown,\r\n+    },\r\n+    {\r\n+      utterance: \"scroll to top\",\r\n+      action: scrollToTop,\r\n+    },\r\n+    {\r\n+      utterance: \"scroll to bottom\",\r\n+      action: scrollToBottom,\r\n+    },\r\n+    {\r\n+      utterance: \"brane stop\",\r\n+      action: stopListening,\r\n+    },\r\n+    {\r\n+      utterance: \"brane turn off\",\r\n+      action: stopListening,\r\n+    },\r\n+    {\r\n+      utterance: \"brane stop the bot\",\r\n+      action: stopListening,\r\n+    },\r\n+    // {\r\n+    //   utterance: \"mute the video\",\r\n+    //   action: muteVideo,\r\n+    // },\r\n+    // {\r\n+    //   utterance: \"unmute the video\",\r\n+    //   action: unmuteVideo,\r\n+    // },\r\n+    // {\r\n+    //   utterance: \"stop the video sound\",\r\n+    //   action: muteVideo,\r\n+    // },\r\n+    // {\r\n+    //   utterance: \"play the video sound\",\r\n+    //   action: unmuteVideo,\r\n+    // },\r\n+    {\r\n+      utterance: \"play transforming education video\",\r\n+      action: () => controlVideo(\"ourProjectsVideo\", \"play\"),\r\n+    },\r\n+    {\r\n+      utterance: \"start transforming education video\",\r\n+      action: () => controlVideo(\"ourProjectsVideo\", \"play\"),\r\n+    },\r\n+    {\r\n+      utterance: \"pause transforming education video\",\r\n+      action: () => controlVideo(\"ourProjectsVideo\", \"pause\"),\r\n+    },\r\n+    {\r\n+      utterance: \"stop transforming education video\",\r\n+      action: () => controlVideo(\"ourProjectsVideo\", \"pause\"),\r\n+    },\r\n+    {\r\n+      utterance: \"mute transforming education video\",\r\n+      action: () => controlVideo(\"ourProjectsVideo\", \"mute\"),\r\n+    },\r\n+    {\r\n+      utterance: \"unmute transforming education video\",\r\n+      action: () => controlVideo(\"ourProjectsVideo\", \"unmute\"),\r\n+    },\r\n+    {\r\n+      utterance: \"fullscreen transforming education video\",\r\n+      action: () => controlVideo(\"ourProjectsVideo\", \"fullscreen\"),\r\n+    },\r\n+    {\r\n+      utterance: \"exit fullscreen transforming education video\",\r\n+      action: () => controlVideo(\"ourProjectsVideo\", \"exitFullscreen\"),\r\n+    },\r\n+    {\r\n+      utterance: \"increase volume transforming education video\",\r\n+      action: () => controlVideo(\"ourProjectsVideo\", \"increaseVolume\"),\r\n+    },\r\n+    {\r\n+      utterance: \"decrease volume transforming education video\",\r\n+      action: () => controlVideo(\"ourProjectsVideo\", \"decreaseVolume\"),\r\n+    },\r\n+    {\r\n+      utterance: \"play the video about transforming education\",\r\n+      action: () => controlVideo(\"ourProjectsVideo\", \"play\"),\r\n+    },\r\n+    {\r\n+      utterance: \"start the transforming education video\",\r\n+      action: () => controlVideo(\"ourProjectsVideo\", \"play\"),\r\n+    },\r\n+    {\r\n+      utterance: \"can you pause the video on transforming education\",\r\n+      action: () => controlVideo(\"ourProjectsVideo\", \"pause\"),\r\n+    },\r\n+    {\r\n+      utterance: \"stop the video about transforming education\",\r\n+      action: () => controlVideo(\"ourProjectsVideo\", \"pause\"),\r\n+    },\r\n+    {\r\n+      utterance: \"mute the transforming education video\",\r\n+      action: () => controlVideo(\"ourProjectsVideo\", \"mute\"),\r\n+    },\r\n+    {\r\n+      utterance: \"unmute the video on transforming education\",\r\n+      action: () => controlVideo(\"ourProjectsVideo\", \"unmute\"),\r\n+    },\r\n+    {\r\n+      utterance: \"make the transforming education video fullscreen\",\r\n+      action: () => controlVideo(\"ourProjectsVideo\", \"fullscreen\"),\r\n+    },\r\n+    {\r\n+      utterance: \"exit fullscreen on the transforming education video\",\r\n+      action: () => controlVideo(\"ourProjectsVideo\", \"exitFullscreen\"),\r\n+    },\r\n+    {\r\n+      utterance: \"increase the volume of the transforming education video\",\r\n+      action: () => controlVideo(\"ourProjectsVideo\", \"increaseVolume\"),\r\n+    },\r\n+    {\r\n+      utterance: \"decrease the volume of the transforming education video\",\r\n+      action: () => controlVideo(\"ourProjectsVideo\", \"decreaseVolume\"),\r\n+    },\r\n+\r\n+    {\r\n+      utterance: \"play leaders voice video\",\r\n+      action: () => controlVideo(\"leadersVoiceVideo\", \"play\"),\r\n+    },\r\n+    {\r\n+      utterance: \"start leaders voice video\",\r\n+      action: () => controlVideo(\"leadersVoiceVideo\", \"play\"),\r\n+    },\r\n+    {\r\n+      utterance: \"pause leaders voice video\",\r\n+      action: () => controlVideo(\"leadersVoiceVideo\", \"pause\"),\r\n+    },\r\n+    {\r\n+      utterance: \"stop leaders voice video\",\r\n+      action: () => controlVideo(\"leadersVoiceVideo\", \"pause\"),\r\n+    },\r\n+    {\r\n+      utterance: \"mute leaders voice video\",\r\n+      action: () => controlVideo(\"leadersVoiceVideo\", \"mute\"),\r\n+    },\r\n+    {\r\n+      utterance: \"unmute leaders voice video\",\r\n+      action: () => controlVideo(\"leadersVoiceVideo\", \"unmute\"),\r\n+    },\r\n+    {\r\n+      utterance: \"fullscreen leaders voice video\",\r\n+      action: () => controlVideo(\"leadersVoiceVideo\", \"fullscreen\"),\r\n+    },\r\n+    {\r\n+      utterance: \"exit fullscreen leaders voice video\",\r\n+      action: () => controlVideo(\"leadersVoiceVideo\", \"exitFullscreen\"),\r\n+    },\r\n+    {\r\n+      utterance: \"increase volume leaders voice video\",\r\n+      action: () => controlVideo(\"leadersVoiceVideo\", \"increaseVolume\"),\r\n+    },\r\n+    {\r\n+      utterance: \"decrease volume leaders voice video\",\r\n+      action: () => controlVideo(\"leadersVoiceVideo\", \"decreaseVolume\"),\r\n+    },\r\n+\r\n+    {\r\n+      utterance: \"set mobile number to *\",\r\n+      action: (spokenText) => {\r\n+        if (!spokenText) {\r\n+          speak(\"I couldn't understand the command.\");\r\n+          return;\r\n+        }\r\n+        const mobileNumber = extractNumber(spokenText);\r\n+        if (mobileNumber) {\r\n+          setMobileNumber(mobileNumber);\r\n+        } else {\r\n+          speak(\"I couldn't find a number in your command.\");\r\n+        }\r\n+      },\r\n+    },\r\n+    {\r\n+      utterance: \"enter mobile number as *\",\r\n+      action: (spokenText) => {\r\n+        if (!spokenText) {\r\n+          speak(\"I couldn't understand the command.\");\r\n+          return;\r\n+        }\r\n+        const mobileNumber = extractNumber(spokenText);\r\n+        if (mobileNumber) {\r\n+          setMobileNumber(mobileNumber);\r\n+        } else {\r\n+          speak(\"I couldn't find a number in your command.\");\r\n+        }\r\n+      },\r\n+    },\r\n+    {\r\n+      utterance: \"enter my mobile number as *\",\r\n+      action: (spokenText) => {\r\n+        if (!spokenText) {\r\n+          speak(\"I couldn't understand the command.\");\r\n+          return;\r\n+        }\r\n+        const mobileNumber = extractNumber(spokenText);\r\n+        if (mobileNumber) {\r\n+          setMobileNumber(mobileNumber);\r\n+        } else {\r\n+          speak(\"I couldn't find a number in your command.\");\r\n+        }\r\n+      },\r\n+    },\r\n+    {\r\n+      utterance: \"set mobile number as *\",\r\n+      action: (spokenText) => {\r\n+        if (!spokenText) {\r\n+          speak(\"I couldn't understand the command.\");\r\n+          return;\r\n+        }\r\n+        const mobileNumber = extractNumber(spokenText);\r\n+        if (mobileNumber) {\r\n+          setMobileNumber(mobileNumber);\r\n+        } else {\r\n+          speak(\"I couldn't find a number in your command.\");\r\n+        }\r\n+      },\r\n+    },\r\n+    {\r\n+      utterance: \"fill mobile number as *\",\r\n+      action: (spokenText) => {\r\n+        if (!spokenText) {\r\n+          speak(\"I couldn't understand the command.\");\r\n+          return;\r\n+        }\r\n+        const mobileNumber = extractNumber(spokenText);\r\n+        if (mobileNumber) {\r\n+          setMobileNumber(mobileNumber);\r\n+        } else {\r\n+          speak(\"I couldn't find a number in your command.\");\r\n+        }\r\n+      },\r\n+    },\r\n+    {\r\n+      utterance: \"set password as *\",\r\n+      action: (spokenText) => {\r\n+        if (!spokenText) {\r\n+          speak(\"I couldn't understand the command.\");\r\n+          return;\r\n+        }\r\n+        const pin = extractNumber(spokenText);\r\n+        if (pin) {\r\n+          setPin(pin);\r\n+        } else {\r\n+          speak(\"I couldn't find a number in your command.\");\r\n+        }\r\n+      },\r\n+    },\r\n+    {\r\n+      utterance: \"enter password as *\",\r\n+      action: (spokenText) => {\r\n+        if (!spokenText) {\r\n+          speak(\"I couldn't understand the command.\");\r\n+          return;\r\n+        }\r\n+        const pin = extractNumber(spokenText);\r\n+        if (pin) {\r\n+          setPin(pin);\r\n+        } else {\r\n+          speak(\"I couldn't find a number in your command.\");\r\n+        }\r\n+      },\r\n+    },\r\n+    {\r\n+      utterance: \"change password to *\",\r\n+      action: (spokenText) => {\r\n+        if (!spokenText) {\r\n+          speak(\"I couldn't understand the command.\");\r\n+          return;\r\n+        }\r\n+        const pin = extractNumber(spokenText);\r\n+        if (pin) {\r\n+          setPin(pin);\r\n+        } else {\r\n+          speak(\"I couldn't find a number in your command.\");\r\n+        }\r\n+      },\r\n+    },\r\n+    {\r\n+      utterance: \"fill password *\",\r\n+      action: (spokenText) => {\r\n+        if (!spokenText) {\r\n+          speak(\"I couldn't understand the command.\");\r\n+          return;\r\n+        }\r\n+        const pin = extractNumber(spokenText);\r\n+        if (pin) {\r\n+          setPin(pin);\r\n+        } else {\r\n+          speak(\"I couldn't find a number in your command.\");\r\n+        }\r\n+      },\r\n+    },\r\n+    {\r\n+      utterance: \"press login\",\r\n+      action: () => {\r\n+        triggerLogin();\r\n+        speak(\"Attempting to log in.\");\r\n+      },\r\n+    },\r\n+    {\r\n+      utterance: \"press record audio\",\r\n+      action: () => {\r\n+        console.log(\"Record Audio command detected\");\r\n+        setTriggerRecordAudio(true);\r\n+      },\r\n+      response: \"Started\"\r\n+    },\r\n+    \r\n+  ];\r\n+\r\n+  return (\r\n+    <div className=\"speech-bot-container\">\r\n+      <div\r\n+        className={`button-container ${\r\n+          isListening ? \"voicebotframeactive\" : \"voicebotframe\"\r\n+        }`}\r\n+      >\r\n+        {/* <button onClick={isListening ? stopListening : startListening}>\r\n+          {isListening ? \"Stop\" : \"Start\"} Animation\r\n+        </button> */}\r\n+        <img\r\n+          className=\"botimage\"\r\n+          src={chatbotimage}\r\n+          alt=\"\"\r\n+          onClick={isListening ? stopListening : startListening}\r\n+        />\r\n+      </div>\r\n+    </div>\r\n+  );\r\n+};\r\n+\r\n+export default VoiceBot;\r\n+\r\n+{\r\n+  /* // import React, { useState, useEffect, useRef } from \"react\";\r\n+// import { useNavigate, useLocation } from \"react-router-dom\";\r\n+// import Fuse from \"fuse.js\";\r\n+// import \"./VoiceBot.css\";\r\n+\r\n+// const VoiceBot = ({ videoRef }) => {\r\n+//   const [isListening, setIsListening] = useState(false);\r\n+//   const [isSpeaking, setIsSpeaking] = useState(false);\r\n+//   const recognition = useRef(null);\r\n+//   const speechSynthesis = useRef(window.speechSynthesis);\r\n+//   const [hasGreeted, setHasGreeted] = useState(false);\r\n+//   const navigate = useNavigate();\r\n+\r\n+//   useEffect(() => {\r\n+//     recognition.current = new window.webkitSpeechRecognition();\r\n+//     recognition.current.continuous = true;\r\n+//     recognition.current.interimResults = false;\r\n+//     recognition.current.onresult = onResult;\r\n+//     recognition.current.onend = onRecognitionEnd;\r\n+//     recognition.current.starting = false;\r\n+\r\n+//     // Simplified error handling, removed specific handling for 'no-speech'\r\n+//     recognition.current.onerror = (event) => {\r\n+//       console.error(\"Recognition error:\", event.error);\r\n+//       // Check if listening is true and the bot isn't speaking\r\n+//       if (isListening && !isSpeaking) {\r\n+//         // Restart recognition\r\n+//         restartRecognition();\r\n+//       }\r\n+//     };\r\n+\r\n+//     return () => {\r\n+//       if (recognition.current) {\r\n+//         recognition.current.abort();\r\n+//       }\r\n+//     };\r\n+//   }, []);\r\n+\r\n+//   useEffect(() => {\r\n+//     const checkRecognition = () => {\r\n+//       if (isListening && !isSpeaking && !recognition.current.starting) {\r\n+//         console.log(\"Restarting recognition because it's not active.\");\r\n+//         recognition.current.starting = true;\r\n+//         recognition.current.start();\r\n+//         console.log(\"Restarted recognition.\");\r\n+//       }\r\n+//     };\r\n+\r\n+//     const recognitionCheckInterval = setInterval(checkRecognition, 100); // Check every 1 second\r\n+\r\n+//     return () => {\r\n+//       clearInterval(recognitionCheckInterval);\r\n+//     };\r\n+//   }, [isListening, isSpeaking]);\r\n+\r\n+//   const restartRecognition = () => {\r\n+//     if (recognition.current.starting) {\r\n+//       console.log(\"Recognition is already starting or running.\");\r\n+//       return;\r\n+//     }\r\n+\r\n+//     recognition.current.abort(); // Stop any existing recognition process\r\n+//     recognition.current.starting = true;\r\n+//     recognition.current.start();\r\n+//     console.log(\"Recognition restarted.\");\r\n+//   };\r\n+\r\n+//   const historyStack = useRef([]);\r\n+\r\n+//   useEffect(() => {\r\n+//     return () => {\r\n+//       // Clean up the listener when the component unmounts\r\n+//       window.removeEventListener(\"popstate\", handlePopState);\r\n+//     };\r\n+//   }, []);\r\n+\r\n+//   const handlePopState = () => {\r\n+//     // This needs to handle both back and forward browser actions\r\n+//     // Use some logic to determine whether it's a back or forward action\r\n+//     // For simplicity, assume it's always back\r\n+//     historyStack.current.pop();\r\n+//     forwardStack.current.length = 0; // Clear forward stack on manual navigation\r\n+//   };\r\n+  \r\n+\r\n+//   // Add a new entry to the stack whenever navigate is called\r\n+//   const customNavigate = (to, options) => {\r\n+//     historyStack.current.push(to);\r\n+//     navigate(to, options);\r\n+//   };\r\n+\r\n+//   // Listen to popstate events to update the history stack\r\n+//   useEffect(() => {\r\n+//     window.addEventListener(\"popstate\", handlePopState);\r\n+//   }, []);\r\n+\r\n+//   const forwardStack = useRef([]);\r\n+\r\n+//   const goBack = () => {\r\n+//     if (window.history.state && window.history.state.idx > 0) {\r\n+//       window.history.back();\r\n+//       speak(\"Going back\");\r\n+//     } else {\r\n+//       speak(\"Can't go back any further.\");\r\n+//     }\r\n+//   };\r\n+\r\n+//   const goForward = () => {\r\n+//     if (window.history.state && window.history.state.idx < window.history.length - 1) {\r\n+//       window.history.forward();\r\n+//       speak(\"Going forward\");\r\n+//     } else {\r\n+//       speak(\"No forward history available.\");\r\n+//     }\r\n+//   };\r\n+\r\n+//   const playVideo = () => {\r\n+//     if (videoRef.current) {\r\n+//       videoRef.current.play();\r\n+//       speak(\"Playing video.\");\r\n+//     } else {\r\n+//       speak(\"No video to play.\");\r\n+//     }\r\n+//   };\r\n+\r\n+//   const pauseVideo = () => {\r\n+//     if (videoRef.current) {\r\n+//       videoRef.current.pause();\r\n+//       speak(\"Video paused.\");\r\n+//     } else {\r\n+//       speak(\"No video to pause.\");\r\n+//     }\r\n+//   };\r\n+\r\n+//   const scrollAmount = window.innerHeight * 0.82;\r\n+\r\n+//   const scrollUp = () => {\r\n+//     if (window.pageYOffset === 0) {\r\n+//       speak(\"Already at the top of the page.\");\r\n+//     } else {\r\n+//       window.scrollBy(0, -scrollAmount);\r\n+//       speak(\"Scrolled up.\");\r\n+//     }\r\n+//   };\r\n+\r\n+//   const scrollDown = () => {\r\n+//     const maxScrollTop =\r\n+//       document.documentElement.scrollHeight - window.innerHeight;\r\n+//     if (window.pageYOffset >= maxScrollTop) {\r\n+//       speak(\"Already at the bottom of the page.\");\r\n+//     } else {\r\n+//       window.scrollBy(0, scrollAmount);\r\n+//       speak(\"Scrolled down.\");\r\n+//     }\r\n+//   };\r\n+\r\n+//   const scrollToTop = () => {\r\n+//     if (window.pageYOffset === 0) {\r\n+//       speak(\"Already at the top of the page.\");\r\n+//     } else {\r\n+//       window.scrollTo(0, 0);\r\n+//       speak(\"Scrolled to the top of the page.\");\r\n+//     }\r\n+//   };\r\n+\r\n+//   const scrollToBottom = () => {\r\n+//     const maxScrollTop =\r\n+//       document.documentElement.scrollHeight - window.innerHeight;\r\n+//     if (window.pageYOffset >= maxScrollTop) {\r\n+//       speak(\"Already at the bottom of the page.\");\r\n+//     } else {\r\n+//       window.scrollTo(0, document.body.scrollHeight);\r\n+//       speak(\"Scrolled to the bottom of the page.\");\r\n+//     }\r\n+//   };\r\n+\r\n+//   const speak = (message) => {\r\n+//     console.log(\"speak function called with message:\", message);\r\n+//     const utterance = new SpeechSynthesisUtterance(message);\r\n+//     utterance.onend = () => {\r\n+//       setIsSpeaking(false);\r\n+//       console.log(\"Speaking ended.\");\r\n+//       if (isListening && !recognition.current.starting) {\r\n+//         console.log(\"Restarting recognition after speaking.\");\r\n+//         recognition.current.starting = true;\r\n+//         recognition.current.start();\r\n+//         console.log(\"Restarted recognition after speaking.\");\r\n+//       }\r\n+//     };\r\n+\r\n+//     setIsSpeaking(true);\r\n+//     console.log(\"Speaking started.\");\r\n+//     recognition.current.stop(); // Ensure to stop recognition before speaking\r\n+//     speechSynthesis.current.speak(utterance);\r\n+//   };\r\n+\r\n+//   const onResult = (event) => {\r\n+//     const resultIndex = event.resultIndex;\r\n+//     const transcript = event.results[resultIndex][0].transcript\r\n+//       .trim()\r\n+//       .toLowerCase();\r\n+\r\n+//     if (event.results[resultIndex].isFinal) {\r\n+//       console.log(`Recognized text: ${transcript}`);\r\n+//       if (transcript.includes(\"brain\")) {\r\n+//         console.log(\"Wake word heard, processing command...\");\r\n+//         handleCommandWithFuse(transcript.replace(\"brain\", \"\"));\r\n+//       }\r\n+//     }\r\n+//   };\r\n+\r\n+//   const onRecognitionEnd = () => {\r\n+//     recognition.current.starting = false;\r\n+//     if (isListening && !isSpeaking) {\r\n+//       restartRecognition();\r\n+//     }\r\n+//   };\r\n+\r\n+//   useEffect(() => {\r\n+//     if (isListening) {\r\n+//       if (!hasGreeted) {\r\n+//         speak(\"Hello, I'm Brane. How can I help you today?\");\r\n+//         setHasGreeted(true);\r\n+//       } else {\r\n+//         speak(\"Listening.\");\r\n+//       }\r\n+//     }\r\n+//   }, [isListening, hasGreeted]);\r\n+\r\n+\r\n+//   const startListening = () => {\r\n+//     if (!recognition.current.starting) {\r\n+//       setIsListening(true);\r\n+//       restartRecognition();\r\n+//     }\r\n+//   };\r\n+\r\n+//   const stopListening = () => {\r\n+//     setIsListening(false);\r\n+//     recognition.current.abort();\r\n+//     if (speechSynthesis.current.speaking) {\r\n+//       speechSynthesis.current.cancel();\r\n+//     }\r\n+//   };\r\n+\r\n+//   const handleCommandWithFuse = (command) => {\r\n+//     const fuse = new Fuse(commands, { keys: [\"utterance\"], threshold: 0.4 });\r\n+//     const results = fuse.search(command);\r\n+//     const foundCommand = results.length ? results[0].item : null;\r\n+\r\n+//     if (foundCommand) {\r\n+//       console.log(\"Command found:\", foundCommand.utterance);\r\n+\r\n+//       if (foundCommand.action) {\r\n+//         foundCommand.action();\r\n+//       } else if (foundCommand.route) {\r\n+//         navigate(foundCommand.route);\r\n+//       }\r\n+\r\n+//       // Speak after performing the action or navigation\r\n+//       speak(foundCommand.response);\r\n+//     } else {\r\n+//       console.log(\"No command found.\");\r\n+//       speak(\"I'm not sure how to respond to that.\");\r\n+//     }\r\n+//   };\r\n+\r\n+//   const commands = [\r\n+//     {\r\n+//       utterance: \"Hello who are you ?\",\r\n+\r\n+//       response:\r\n+//         \"Hi! This is Brane! your Voice bot from Brane Education How can I Assist you Today ?\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"Hello\",\r\n+\r\n+//       response: \"Hi! How can I assist you today?\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"hello\",\r\n+\r\n+//       response: \"Hi! How can I assist you today?\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"Hi.\",\r\n+\r\n+//       response: \"Hello! How can I assist you today?\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"Hey there\",\r\n+\r\n+//       response: \"Hi! How can I assist you today?\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"Good morning Brane.\",\r\n+\r\n+//       response: \"Hey Hiii! Good morning  ! How can I help you?\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"Good afternoon Brane.\",\r\n+\r\n+//       response: \"Hey Hiii! Good after noon ! How can I help you?\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"Good evening Brane.\",\r\n+\r\n+//       response: \"Hey Hiii! Good evening ! How can I help you?\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"can you please take me to login page\",\r\n+\r\n+//       route: \"/login\",\r\n+\r\n+//       response: \"Here's the Login Page, Please Login\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"please take me to login page\",\r\n+\r\n+//       route: \"/login\",\r\n+\r\n+//       response: \"Here's the Login Page, Please Login\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"Go to login page\",\r\n+\r\n+//       route: \"/login\",\r\n+\r\n+//       response: \"Here's the Login Page, Please Login\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"open login page\",\r\n+\r\n+//       route: \"/login\",\r\n+\r\n+//       response: \"Here's the Login Page, Please Login\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"can you please take me to signup page\",\r\n+\r\n+//       route: \"/signup\",\r\n+\r\n+//       response: \"Here's the signup page. Please proceed With Registration.\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"take me to signup page\",\r\n+\r\n+//       route: \"/signup\",\r\n+\r\n+//       response: \"Here's the signup page. Please proceed With Registration.\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"Go to signup page\",\r\n+\r\n+//       route: \"/signup\",\r\n+\r\n+//       response: \"Here's the signup page. Please proceed With Registration.\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"open signup page\",\r\n+\r\n+//       route: \"/signup\",\r\n+\r\n+//       response: \"Here's the signup page. Please proceed With Registration.\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"Go to face id\",\r\n+\r\n+//       route: \"/login/faceid\",\r\n+\r\n+//       response: \"Here's Face ID Login. Please proceed.\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"Go to face id login\",\r\n+\r\n+//       route: \"/login/faceid\",\r\n+\r\n+//       response: \"Here's Face ID Login. Please proceed.\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"login with face id\",\r\n+\r\n+//       route: \"/login/faceid\",\r\n+\r\n+//       response: \"Here's Face ID Login. Please proceed.\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"login with face\",\r\n+\r\n+//       route: \"/login/faceid\",\r\n+\r\n+//       response: \"Here's Face ID Login. Please proceed.\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"i want to login with face\",\r\n+\r\n+//       route: \"/login/faceid\",\r\n+\r\n+//       response: \"Here's Face ID Login. Please proceed.\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"login with voice\",\r\n+\r\n+//       route: \"/login/voiceid\",\r\n+\r\n+//       response: \"Here's Voice Login. Please proceed.\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"i want to login with voice\",\r\n+\r\n+//       route: \"/login/voiceid\",\r\n+\r\n+//       response: \"Here's Voice Login. Please proceed.\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"go to voice login\",\r\n+\r\n+//       route: \"/login/voiceid\",\r\n+\r\n+//       response: \"Here's Voice Login. Please proceed.\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"login with voice\",\r\n+\r\n+//       route: \"/login/voiceid\",\r\n+\r\n+//       response: \"Here's Voice Login. Please proceed.\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"login with mobile\",\r\n+\r\n+//       route: \"/login/mobile\",\r\n+\r\n+//       response: \"Here's Mobile Login. Please proceed.\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"i want to login with mobile\",\r\n+\r\n+//       route: \"/login/mobile\",\r\n+\r\n+//       response: \"Here's Mobile Login. Please proceed.\",\r\n+//     },\r\n+//     {\r\n+//       utterance: \"go to mobile login\",\r\n+\r\n+//       route: \"/login/mobile\",\r\n+\r\n+//       response: \"Here's Mobile Login. Please proceed.\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"what are platform features\",\r\n+\r\n+//       response:\r\n+//         \"Dashboard, Dynamic time table, Learning Networks, Little Masters, Video Based Dictionary, General Search.\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"Features of platform\",\r\n+\r\n+//       response:\r\n+//         \"Dashboard, Dynamic time table, Learning Networks, Little Masters, Video Based Dictionary, General Search.\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"What does the platform offer\",\r\n+\r\n+//       response:\r\n+//         \"Dashboard, Dynamic time table, Learning Networks, Little Masters, Video Based Dictionary, General Search.\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"Say me the features of platform\",\r\n+\r\n+//       response:\r\n+//         \"Dashboard, Dynamic time table, Learning Networks, Little Masters, Video Based Dictionary, General Search.\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"Say me the services of platform\",\r\n+\r\n+//       response:\r\n+//         \"Dashboard, Dynamic time table, Learning Networks, Little Masters, Video Based Dictionary, General Search.\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"tell me the services offered by the platform\",\r\n+\r\n+//       response:\r\n+//         \"Dashboard, Dynamic time table, Learning Networks, Little Masters, Video Based Dictionary, General Search.\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"explain platform services\",\r\n+\r\n+//       response:\r\n+//         \"Dashboard, Dynamic time table, Learning Networks, Little Masters, Video Based Dictionary, General Search.\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"Give me the Parent voice of Julia Harris\",\r\n+\r\n+//       response:\r\n+//         \"Brane education has helped my son a lot in his studies. He improved a lot in his studies and is now able to score good marks in his exams\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"Play today's motivational video\",\r\n+\r\n+//       response: \"I am playing the video\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"Play today's video\",\r\n+\r\n+//       response: \"I am playing Motivational video\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"Leaders Voice\",\r\n+\r\n+//       response:\r\n+//         \"This Voice-interactive AI Platform is a game Changer. It revolutionizes education.\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"Curriculum Supported by Brane Education\",\r\n+\r\n+//       response:\r\n+//         \"we support multiple Boards let me say few Telangana State Board Andhra Pradesh Board Maharashtra Board Assam Board\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"Boards supported by the platform\",\r\n+\r\n+//       response:\r\n+//         \"we support multiple Boards let me say few Telangana State Board Andhra Pradesh Board Maharashtra Board Assam Board\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"Curriculum\",\r\n+\r\n+//       response:\r\n+//         \"we support multiple Boards let me say few Telangana State Board Andhra Pradesh Board Maharashtra Board Assam Board\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"Go to landing page\",\r\n+\r\n+//       response: \"Okay, I am taking you to the landing page.\",\r\n+\r\n+//       route: \"/childpage\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"take me to landing page\",\r\n+\r\n+//       response: \"Okay, I am taking you to the landing page.\",\r\n+\r\n+//       route: \"/childpage\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"move to landing page\",\r\n+\r\n+//       response: \"Okay, I am taking you to the landing page.\",\r\n+\r\n+//       route: \"/childpage\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"roll back to landing page\",\r\n+\r\n+//       response: \"Okay, I am taking you to the landing page.\",\r\n+\r\n+//       route: \"/childpage\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"move to landing page\",\r\n+\r\n+//       response: \"Okay, I am taking you to the landing page.\",\r\n+\r\n+//       route: \"/childpage\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"what is today's quote\",\r\n+\r\n+//       response:\r\n+//         \"Determination is the power that sees us through all our frustration and obstacles. It helps in building our willpower which is the very basis of success.\",\r\n+\r\n+//       route: \"/childpage\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"Today's Inspirational quote\",\r\n+\r\n+//       response:\r\n+//         \"Determination is the power that sees us through all our frustration and obstacles. It helps in building our willpower which is the very basis of success.\",\r\n+\r\n+//       route: \"/childpage\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"say me today's quote\",\r\n+\r\n+//       response:\r\n+//         \"Determination is the power that sees us through all our frustration and obstacles. It helps in building our willpower which is the very basis of success.\",\r\n+\r\n+//       route: \"/childpage\",\r\n+//     },\r\n+//     {\r\n+//       utterance: \"go back\",\r\n+//       response: \"\",\r\n+//       action: goBack, // Note the use of an action property\r\n+//     },\r\n+//     {\r\n+//       utterance: \"go forward\",\r\n+//       response: \"\",\r\n+//       action: goForward,\r\n+//     },\r\n+//     {\r\n+//       utterance: \"play video\",\r\n+//       // response: \"Playing video.\",\r\n+//       action: playVideo,\r\n+//     },\r\n+//     {\r\n+//       utterance: \"pause video\",\r\n+//       // response: \"Pausing video.\",\r\n+//       action: pauseVideo,\r\n+//     },\r\n+//     {\r\n+//       utterance: \"start video\",\r\n+//       // response: \"Playing video.\",\r\n+//       action: playVideo,\r\n+//     },\r\n+//     {\r\n+//       utterance: \"stop video\",\r\n+//       // response: \"Playing video.\",\r\n+//       action: pauseVideo,\r\n+//     },\r\n+//     {\r\n+//       utterance: \"scroll up\",\r\n+//       // response: \"Scrolling up.\",\r\n+//       action: scrollUp,\r\n+//     },\r\n+//     {\r\n+//       utterance: \"scroll down\",\r\n+//       // response: \"Scrolling down.\",\r\n+//       action: scrollDown,\r\n+//     },\r\n+//     {\r\n+//       utterance: \"go up\",\r\n+\r\n+//       // response: \"Scrolling up.\",\r\n+//       action: scrollUp,\r\n+//     },\r\n+//     {\r\n+//       utterance: \"go down\",\r\n+//       // response: \"Scrolling down.\",\r\n+//       action: scrollDown,\r\n+//     },\r\n+//     {\r\n+//       utterance: \"scroll to top\",\r\n+//       action: scrollToTop,\r\n+//     },\r\n+//     {\r\n+//       utterance: \"scroll to bottom\",\r\n+//       action: scrollToBottom,\r\n+//     },\r\n+//     {\r\n+//       utterance: \"brane stop\",\r\n+//       action: stopListening,\r\n+//     },\r\n+//     {\r\n+//       utterance: \"brane turn off\",\r\n+//       action: stopListening,\r\n+//     },\r\n+//     {\r\n+//       utterance: \"brane stop the bot\",\r\n+//       action: stopListening,\r\n+//     },\r\n+//   ];\r\n+\r\n+//   return (\r\n+//     <div className=\"speech-bot-container\">\r\n+//       <div\r\n+//         className={`button-container ${\r\n+//           isListening ? \"voicebotframeactive\" : \"voicebotframe\"\r\n+//         }`}\r\n+//       >\r\n+//         <button onClick={isListening ? stopListening : startListening}>\r\n+//           {isListening ? \"Stop\" : \"Start\"} Animation\r\n+//         </button>\r\n+//         {/* <button onClick={toggleBotActive}>\r\n+//         {isBotActive ? 'Deactivate Bot' : 'Activate Bot'}\r\n+//       </button> \r\n+//       </div>\r\n+//     </div>\r\n+//   );\r\n+// };\r\n+\r\n+// export default VoiceBot; */\r\n+}\r\n+\r\n+//iska v1\r\n+\r\n+// import React, { useState, useEffect, useRef } from \"react\";\r\n+// import { useNavigate, useLocation } from \"react-router-dom\";\r\n+// import Fuse from \"fuse.js\";\r\n+// import \"./VoiceBot.css\";\r\n+\r\n+// const VoiceBot = ({ videoRef}) => {\r\n+//   const [isListening, setIsListening] = useState(false);\r\n+//   const [isSpeaking, setIsSpeaking] = useState(false);\r\n+//   const recognition = useRef(null);\r\n+//   const speechSynthesis = useRef(window.speechSynthesis);\r\n+//   const [hasGreeted, setHasGreeted] = useState(false);\r\n+//   const navigate = useNavigate();\r\n+\r\n+//  // Initialize speech recognition\r\n+//  useEffect(() => {\r\n+//   recognition.current = new window.webkitSpeechRecognition();\r\n+//   recognition.current.continuous = true;\r\n+//   recognition.current.interimResults = false;\r\n+//   recognition.current.onresult = onResult;\r\n+//   recognition.current.onend = onRecognitionEnd;\r\n+//   recognition.current.starting = false;\r\n+\r\n+//   recognition.current.onerror = (event) => {\r\n+//     console.error(\"Recognition error:\", event.error);\r\n+//     if (isListening && !isSpeaking) {\r\n+//       restartRecognition();\r\n+//     }\r\n+//   };\r\n+\r\n+//   return () => {\r\n+//     if (recognition.current) {\r\n+//       recognition.current.abort();\r\n+//     }\r\n+//   };\r\n+// }, []);\r\n+\r\n+//   // useEffect(() => {\r\n+//   //   const checkRecognition = () => {\r\n+//   //     if (isListening && !isSpeaking && !recognition.current.starting) {\r\n+//   //       console.log(\"Restarting recognition because it's not active.\");\r\n+//   //       recognition.current.starting = true;\r\n+//   //       recognition.current.start();\r\n+//   //       console.log(\"Restarted recognition.\");\r\n+//   //     }\r\n+//   //   };\r\n+\r\n+//   //   const recognitionCheckInterval = setInterval(checkRecognition, 100); // Check every .5 second\r\n+\r\n+//   //   return () => {\r\n+//   //     clearInterval(recognitionCheckInterval);\r\n+//   //   };\r\n+//   // }, [isListening, isSpeaking]);\r\n+\r\n+//   const historyStack = useRef([]);\r\n+\r\n+//   useEffect(() => {\r\n+//     return () => {\r\n+//       // Clean up the listener when the component unmounts\r\n+//       window.removeEventListener(\"popstate\", handlePopState);\r\n+//     };\r\n+//   }, []);\r\n+\r\n+//   const handlePopState = () => {\r\n+//     // This needs to handle both back and forward browser actions\r\n+//     // Use some logic to determine whether it's a back or forward action\r\n+//     // For simplicity, assume it's always back\r\n+//     historyStack.current.pop();\r\n+//     forwardStack.current.length = 0; // Clear forward stack on manual navigation\r\n+//   };\r\n+\r\n+//   // Add a new entry to the stack whenever navigate is called\r\n+//   const customNavigate = (to, options) => {\r\n+//     historyStack.current.push(to);\r\n+//     navigate(to, options);\r\n+//   };\r\n+\r\n+//   // Listen to popstate events to update the history stack\r\n+//   useEffect(() => {\r\n+//     window.addEventListener(\"popstate\", handlePopState);\r\n+//   }, []);\r\n+\r\n+//   const forwardStack = useRef([]);\r\n+\r\n+//   const goBack = () => {\r\n+//     if (window.history.state && window.history.state.idx > 0) {\r\n+//       window.history.back();\r\n+//       speak(\"Going back\");\r\n+//     } else {\r\n+//       speak(\"Can't go back any further.\");\r\n+//     }\r\n+//   };\r\n+\r\n+//   const goForward = () => {\r\n+//     if (window.history.state && window.history.state.idx < window.history.length - 1) {\r\n+//       window.history.forward();\r\n+//       speak(\"Going forward\");\r\n+//     } else {\r\n+//       speak(\"No forward history available.\");\r\n+//     }\r\n+//   };\r\n+\r\n+//   const playVideo = () => {\r\n+//     if (videoRef.current) {\r\n+//       videoRef.current.play();\r\n+//       speak(\"Playing video.\");\r\n+//     } else {\r\n+//       speak(\"No video to play.\");\r\n+//     }\r\n+//   };\r\n+\r\n+//   const pauseVideo = () => {\r\n+//     if (videoRef.current) {\r\n+//       videoRef.current.pause();\r\n+//       speak(\"Video paused.\");\r\n+//     } else {\r\n+//       speak(\"No video to pause.\");\r\n+//     }\r\n+//   };\r\n+\r\n+//   const scrollAmount = window.innerHeight * 0.82;\r\n+\r\n+//   const scrollUp = () => {\r\n+//     if (window.pageYOffset === 0) {\r\n+//       speak(\"Already at the top of the page.\");\r\n+//     } else {\r\n+//       window.scrollBy(0, -scrollAmount);\r\n+//       speak(\"Scrolled up.\");\r\n+//     }\r\n+//   };\r\n+\r\n+//   const scrollDown = () => {\r\n+//     const maxScrollTop =\r\n+//       document.documentElement.scrollHeight - window.innerHeight;\r\n+//     if (window.pageYOffset >= maxScrollTop) {\r\n+//       speak(\"Already at the bottom of the page.\");\r\n+//     } else {\r\n+//       window.scrollBy(0, scrollAmount);\r\n+//       speak(\"Scrolled down.\");\r\n+//     }\r\n+//   };\r\n+\r\n+//   const scrollToTop = () => {\r\n+//     if (window.pageYOffset === 0) {\r\n+//       speak(\"Already at the top of the page.\");\r\n+//     } else {\r\n+//       window.scrollTo(0, 0);\r\n+//       speak(\"Scrolled to the top of the page.\");\r\n+//     }\r\n+//   };\r\n+\r\n+//   const scrollToBottom = () => {\r\n+//     const maxScrollTop =\r\n+//       document.documentElement.scrollHeight - window.innerHeight;\r\n+//     if (window.pageYOffset >= maxScrollTop) {\r\n+//       speak(\"Already at the bottom of the page.\");\r\n+//     } else {\r\n+//       window.scrollTo(0, document.body.scrollHeight);\r\n+//       speak(\"Scrolled to the bottom of the page.\");\r\n+//     }\r\n+//   };\r\n+\r\n+//   const speak = (message) => {\r\n+//     const utterance = new SpeechSynthesisUtterance(message);\r\n+//     utterance.onend = () => {\r\n+//       setIsSpeaking(false);\r\n+//       // Restart recognition after speaking has ended\r\n+//       if (isListening) {\r\n+//         restartRecognition();\r\n+//       }\r\n+//     };\r\n+\r\n+//     setIsSpeaking(true);\r\n+//     // Stop recognition when the bot starts speaking\r\n+//     if (recognition.current) {\r\n+//       recognition.current.abort();\r\n+//     }\r\n+//     speechSynthesis.current.speak(utterance);\r\n+//   };\r\n+\r\n+//   const restartRecognition = () => {\r\n+//     // Check if recognition is not already started and if the bot is set to listen\r\n+//     if (recognition.current && !recognition.current.starting && isListening && !isSpeaking) {\r\n+//       // Only start recognition if it's not already active\r\n+//       if (recognition.current.state !== 'active') {\r\n+//         recognition.current.abort(); // Ensure any ongoing recognition is stopped\r\n+//         recognition.current.starting = true;\r\n+//         recognition.current.start();\r\n+//       }\r\n+//     }\r\n+//   };\r\n+\r\n+//     // Restart recognition when bot finishes speaking and isListening is true\r\n+//     useEffect(() => {\r\n+//       if (!isSpeaking && isListening) {\r\n+//         restartRecognition();\r\n+//       }\r\n+//     }, [isSpeaking, isListening]);\r\n+\r\n+//   const onResult = (event) => {\r\n+//     const resultIndex = event.resultIndex;\r\n+//     const transcript = event.results[resultIndex][0].transcript\r\n+//       .trim()\r\n+//       .toLowerCase();\r\n+\r\n+//     if (event.results[resultIndex].isFinal) {\r\n+//       console.log(`Recognized text: ${transcript}`);\r\n+//       if (transcript.includes(\"brain\")) {\r\n+//         console.log(\"Wake word heard, processing command...\");\r\n+//         handleCommandWithFuse(transcript.replace(\"brain\", \"\"));\r\n+//       }\r\n+//     }\r\n+//   };\r\n+\r\n+//   const onRecognitionEnd = () => {\r\n+//     recognition.current.starting = false;\r\n+//     if (isListening && !isSpeaking) {\r\n+//       restartRecognition();\r\n+//     }\r\n+//   };\r\n+\r\n+//   useEffect(() => {\r\n+//     if (isListening && !hasGreeted) {\r\n+//       speak(\"Hello, I'm Brane. How can I help you today?\");\r\n+//       setHasGreeted(true);\r\n+//     }\r\n+//   }, [isListening, hasGreeted]);\r\n+\r\n+// // Updated startListening function\r\n+// const startListening = () => {\r\n+//   setIsListening(true);\r\n+//   if (recognition.current && !recognition.current.starting) {\r\n+//     recognition.current.start();\r\n+//   }\r\n+// };\r\n+\r\n+// // Updated stopListening function\r\n+// const stopListening = () => {\r\n+//   setIsListening(false);\r\n+//   setIsSpeaking(false); // Reset speaking state\r\n+//   setHasGreeted(false); // Reset greeting state if needed\r\n+//   if (recognition.current) {\r\n+//     recognition.current.abort(); // Stop any ongoing speech recognition\r\n+//   }\r\n+//   if (speechSynthesis.current.speaking) {\r\n+//     speechSynthesis.current.cancel(); // Stop any ongoing speech synthesis\r\n+//   }\r\n+// };\r\n+\r\n+//   const handleCommandWithFuse = (command) => {\r\n+//     const fuse = new Fuse(commands, { keys: [\"utterance\"], threshold: 0.4 });\r\n+//     const results = fuse.search(command);\r\n+//     const foundCommand = results.length ? results[0].item : null;\r\n+\r\n+//     if (foundCommand) {\r\n+//       console.log(\"Command found:\", foundCommand.utterance);\r\n+\r\n+//       if (foundCommand.action) {\r\n+//         foundCommand.action();\r\n+//       } else if (foundCommand.route) {\r\n+//         navigate(foundCommand.route);\r\n+//       }\r\n+\r\n+//       // Speak after performing the action or navigation\r\n+//       speak(foundCommand.response);\r\n+//     } else {\r\n+//       console.log(\"No command found.\");\r\n+//       speak(\"I'm not sure how to respond to that.\");\r\n+//     }\r\n+//   };\r\n+\r\n+//   const commands = [\r\n+//     {\r\n+//       utterance: \"Hello who are you ?\",\r\n+\r\n+//       response:\r\n+//         \"Hi! This is Brane! your Voice bot from Brane Education How can I Assist you Today ?\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"Hello\",\r\n+\r\n+//       response: \"Hi! How can I assist you today?\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"hello\",\r\n+\r\n+//       response: \"Hi! How can I assist you today?\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"Hi.\",\r\n+\r\n+//       response: \"Hello! How can I assist you today?\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"Hey there\",\r\n+\r\n+//       response: \"Hi! How can I assist you today?\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"Good morning Brane.\",\r\n+\r\n+//       response: \"Hey Hiii! Good morning  ! How can I help you?\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"Good afternoon Brane.\",\r\n+\r\n+//       response: \"Hey Hiii! Good after noon ! How can I help you?\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"Good evening Brane.\",\r\n+\r\n+//       response: \"Hey Hiii! Good evening ! How can I help you?\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"can you please take me to login page\",\r\n+\r\n+//       route: \"/login\",\r\n+\r\n+//       response: \"Here's the Login Page, Please Login\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"please take me to login page\",\r\n+\r\n+//       route: \"/login\",\r\n+\r\n+//       response: \"Here's the Login Page, Please Login\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"Go to login page\",\r\n+\r\n+//       route: \"/login\",\r\n+\r\n+//       response: \"Here's the Login Page, Please Login\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"open login page\",\r\n+\r\n+//       route: \"/login\",\r\n+\r\n+//       response: \"Here's the Login Page, Please Login\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"can you please take me to signup page\",\r\n+\r\n+//       route: \"/signup\",\r\n+\r\n+//       response: \"Here's the signup page. Please proceed With Registration.\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"take me to signup page\",\r\n+\r\n+//       route: \"/signup\",\r\n+\r\n+//       response: \"Here's the signup page. Please proceed With Registration.\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"Go to signup page\",\r\n+\r\n+//       route: \"/signup\",\r\n+\r\n+//       response: \"Here's the signup page. Please proceed With Registration.\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"open signup page\",\r\n+\r\n+//       route: \"/signup\",\r\n+\r\n+//       response: \"Here's the signup page. Please proceed With Registration.\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"Go to face id\",\r\n+\r\n+//       route: \"/login/faceid\",\r\n+\r\n+//       response: \"Here's Face ID Login. Please proceed.\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"Go to face id login\",\r\n+\r\n+//       route: \"/login/faceid\",\r\n+\r\n+//       response: \"Here's Face ID Login. Please proceed.\",\r\n+//     },\r\n+//     {\r\n+//       utterance: \"Go to face login\",\r\n+\r\n+//       route: \"/login/faceid\",\r\n+\r\n+//       response: \"Here's Face ID Login. Please proceed.\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"login with face id\",\r\n+\r\n+//       route: \"/login/faceid\",\r\n+\r\n+//       response: \"Here's Face ID Login. Please proceed.\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"login with face\",\r\n+\r\n+//       route: \"/login/faceid\",\r\n+\r\n+//       response: \"Here's Face ID Login. Please proceed.\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"i want to login with face\",\r\n+\r\n+//       route: \"/login/faceid\",\r\n+\r\n+//       response: \"Here's Face ID Login. Please proceed.\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"login with voice\",\r\n+\r\n+//       route: \"/login/voiceid\",\r\n+\r\n+//       response: \"Here's Voice Login. Please proceed.\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"i want to login with voice\",\r\n+\r\n+//       route: \"/login/voiceid\",\r\n+\r\n+//       response: \"Here's Voice Login. Please proceed.\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"go to voice login\",\r\n+\r\n+//       route: \"/login/voiceid\",\r\n+\r\n+//       response: \"Here's Voice Login. Please proceed.\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"login with voice\",\r\n+\r\n+//       route: \"/login/voiceid\",\r\n+\r\n+//       response: \"Here's Voice Login. Please proceed.\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"login with mobile\",\r\n+\r\n+//       route: \"/login/mobile\",\r\n+\r\n+//       response: \"Here's Mobile Login. Please proceed.\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"i want to login with mobile\",\r\n+\r\n+//       route: \"/login/mobile\",\r\n+\r\n+//       response: \"Here's Mobile Login. Please proceed.\",\r\n+//     },\r\n+//     {\r\n+//       utterance: \"go to mobile login\",\r\n+\r\n+//       route: \"/login/mobile\",\r\n+\r\n+//       response: \"Here's Mobile Login. Please proceed.\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"what are platform features\",\r\n+\r\n+//       response:\r\n+//         \"Dashboard, Dynamic time table, Learning Networks, Little Masters, Video Based Dictionary, General Search.\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"Features of platform\",\r\n+\r\n+//       response:\r\n+//         \"Dashboard, Dynamic time table, Learning Networks, Little Masters, Video Based Dictionary, General Search.\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"What does the platform offer\",\r\n+\r\n+//       response:\r\n+//         \"Dashboard, Dynamic time table, Learning Networks, Little Masters, Video Based Dictionary, General Search.\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"Say me the features of platform\",\r\n+\r\n+//       response:\r\n+//         \"Dashboard, Dynamic time table, Learning Networks, Little Masters, Video Based Dictionary, General Search.\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"Say me the services of platform\",\r\n+\r\n+//       response:\r\n+//         \"Dashboard, Dynamic time table, Learning Networks, Little Masters, Video Based Dictionary, General Search.\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"tell me the services offered by the platform\",\r\n+\r\n+//       response:\r\n+//         \"Dashboard, Dynamic time table, Learning Networks, Little Masters, Video Based Dictionary, General Search.\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"explain platform services\",\r\n+\r\n+//       response:\r\n+//         \"Dashboard, Dynamic time table, Learning Networks, Little Masters, Video Based Dictionary, General Search.\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"Give me the Parent voice of Julia Harris\",\r\n+\r\n+//       response:\r\n+//         \"Brane education has helped my son a lot in his studies. He improved a lot in his studies and is now able to score good marks in his exams\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"Play today's motivational video\",\r\n+\r\n+//       response: \"I am playing the video\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"Play today's video\",\r\n+\r\n+//       response: \"I am playing Motivational video\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"Leaders Voice\",\r\n+\r\n+//       response:\r\n+//         \"This Voice-interactive AI Platform is a game Changer. It revolutionizes education.\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"Curriculum Supported by Brane Education\",\r\n+\r\n+//       response:\r\n+//         \"we support multiple Boards let me say few Telangana State Board Andhra Pradesh Board Maharashtra Board Assam Board\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"Boards supported by the platform\",\r\n+\r\n+//       response:\r\n+//         \"we support multiple Boards let me say few Telangana State Board Andhra Pradesh Board Maharashtra Board Assam Board\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"Curriculum\",\r\n+\r\n+//       response:\r\n+//         \"we support multiple Boards let me say few Telangana State Board Andhra Pradesh Board Maharashtra Board Assam Board\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"Go to landing page\",\r\n+\r\n+//       response: \"Okay, I am taking you to the landing page.\",\r\n+\r\n+//       route: \"/childpage\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"take me to landing page\",\r\n+\r\n+//       response: \"Okay, I am taking you to the landing page.\",\r\n+\r\n+//       route: \"/childpage\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"move to landing page\",\r\n+\r\n+//       response: \"Okay, I am taking you to the landing page.\",\r\n+\r\n+//       route: \"/childpage\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"roll back to landing page\",\r\n+\r\n+//       response: \"Okay, I am taking you to the landing page.\",\r\n+\r\n+//       route: \"/childpage\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"move to landing page\",\r\n+\r\n+//       response: \"Okay, I am taking you to the landing page.\",\r\n+\r\n+//       route: \"/childpage\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"what is today's quote\",\r\n+\r\n+//       response:\r\n+//         \"Determination is the power that sees us through all our frustration and obstacles. It helps in building our willpower which is the very basis of success.\",\r\n+\r\n+//       route: \"/childpage\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"Today's Inspirational quote\",\r\n+\r\n+//       response:\r\n+//         \"Determination is the power that sees us through all our frustration and obstacles. It helps in building our willpower which is the very basis of success.\",\r\n+\r\n+//       route: \"/childpage\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"say me today's quote\",\r\n+\r\n+//       response:\r\n+//         \"Determination is the power that sees us through all our frustration and obstacles. It helps in building our willpower which is the very basis of success.\",\r\n+\r\n+//       route: \"/childpage\",\r\n+//     },\r\n+//     {\r\n+//       utterance: \"go back\",\r\n+//       response: \"\",\r\n+//       action: goBack, // Note the use of an action property\r\n+//     },\r\n+//     {\r\n+//       utterance: \"go forward\",\r\n+//       response: \"\",\r\n+//       action: goForward,\r\n+//     },\r\n+//     {\r\n+//       utterance: \"play video\",\r\n+//       // response: \"Playing video.\",\r\n+//       action: playVideo,\r\n+//     },\r\n+//     {\r\n+//       utterance: \"pause video\",\r\n+//       // response: \"Pausing video.\",\r\n+//       action: pauseVideo,\r\n+//     },\r\n+//     {\r\n+//       utterance: \"start video\",\r\n+//       // response: \"Playing video.\",\r\n+//       action: playVideo,\r\n+//     },\r\n+//     {\r\n+//       utterance: \"stop video\",\r\n+//       // response: \"Playing video.\",\r\n+//       action: pauseVideo,\r\n+//     },\r\n+//     {\r\n+//       utterance: \"scroll up\",\r\n+//       // response: \"Scrolling up.\",\r\n+//       action: scrollUp,\r\n+//     },\r\n+//     {\r\n+//       utterance: \"scroll down\",\r\n+//       // response: \"Scrolling down.\",\r\n+//       action: scrollDown,\r\n+//     },\r\n+//     {\r\n+//       utterance: \"go up\",\r\n+\r\n+//       // response: \"Scrolling up.\",\r\n+//       action: scrollUp,\r\n+//     },\r\n+//     {\r\n+//       utterance: \"go down\",\r\n+//       // response: \"Scrolling down.\",\r\n+//       action: scrollDown,\r\n+//     },\r\n+//     {\r\n+//       utterance: \"scroll to top\",\r\n+//       action: scrollToTop,\r\n+//     },\r\n+//     {\r\n+//       utterance: \"scroll to bottom\",\r\n+//       action: scrollToBottom,\r\n+//     },\r\n+//     {\r\n+//       utterance: \"brane stop\",\r\n+//       action: stopListening,\r\n+//     },\r\n+//     {\r\n+//       utterance: \"brane turn off\",\r\n+//       action: stopListening,\r\n+//     },\r\n+//     {\r\n+//       utterance: \"brane stop the bot\",\r\n+//       action: stopListening,\r\n+//     },\r\n+//   ];\r\n+\r\n+//   return (\r\n+//     <div className=\"speech-bot-container\">\r\n+//       <div\r\n+//         className={`button-container ${\r\n+//           isListening ? \"voicebotframeactive\" : \"voicebotframe\"\r\n+//         }`}\r\n+//       >\r\n+//         <button onClick={isListening ? stopListening : startListening}>\r\n+//           {isListening ? \"Stop\" : \"Start\"} Animation\r\n+//         </button>\r\n+//         {/* <button onClick={toggleBotActive}>\r\n+//         {isBotActive ? 'Deactivate Bot' : 'Activate Bot'}\r\n+//       </button> */}\r\n+//       </div>\r\n+//     </div>\r\n+//   );\r\n+// };\r\n+\r\n+// export default VoiceBot;\r\n+\r\n+//Bot Video added but some start issues\r\n+\r\n+// import React, { useState, useEffect, useRef } from \"react\";\r\n+// import { useNavigate, useLocation } from \"react-router-dom\";\r\n+// import Fuse from \"fuse.js\";\r\n+// import \"./VoiceBot.css\";\r\n+\r\n+// const VoiceBot = ({ videoRef }) => {\r\n+//   const [isListening, setIsListening] = useState(false);\r\n+//   const [isSpeaking, setIsSpeaking] = useState(false);\r\n+//   const recognition = useRef(null);\r\n+//   const speechSynthesis = useRef(window.speechSynthesis);\r\n+//   const hasGreeted = useRef(false);\r\n+//   const restartRecognitionTimeout = useRef(null);\r\n+//   const navigate = useNavigate();\r\n+//   const location = useLocation();\r\n+//   const [isRecognitionActive, setIsRecognitionActive] = useState(false); // New state to track recognition status\r\n+\r\n+//   useEffect(() => {\r\n+//     recognition.current = new window.webkitSpeechRecognition();\r\n+//     recognition.current.continuous = true;\r\n+//     recognition.current.interimResults = false;\r\n+//     recognition.current.onresult = onResult;\r\n+//     recognition.current.onend = () => {\r\n+//       console.log(\"Recognition ended.\");\r\n+//       if (isListening) {\r\n+//         startListening();\r\n+//       }\r\n+//     };\r\n+//     recognition.current.onerror = (event) => {\r\n+//       console.error(\"Recognition error:\", event.error);\r\n+//     };\r\n+\r\n+//     return () => {\r\n+//       recognition.current.abort();\r\n+//     };\r\n+//   }, []);\r\n+\r\n+//   // Update useEffect for managing the recognition state based on isListening and isRecognitionActive\r\n+//   useEffect(() => {\r\n+//     if (isListening && !isRecognitionActive) {\r\n+//       startListening();\r\n+//     } else if (!isListening && isRecognitionActive) {\r\n+//       stopListening();\r\n+//     }\r\n+//   }, [isListening, isRecognitionActive]);\r\n+\r\n+//   const goBack = () => {\r\n+//     if (window.history.length > 1) {\r\n+//       navigate(-1);\r\n+//     } else {\r\n+//       speak(\"Can't go back any further.\");\r\n+//     }\r\n+//   };\r\n+\r\n+//   const goForward = () => {\r\n+//     // Unfortunately, there's no direct way to check if you can go forward in the history.\r\n+//     // You might need to manage this state manually based on user navigation.\r\n+//     navigate(1);\r\n+//   };\r\n+\r\n+//   const playVideo = () => {\r\n+//     if (videoRef.current && !videoRef.current.paused) {\r\n+//       speak(\"Video is already playing.\");\r\n+//     } else if (videoRef.current) {\r\n+//       videoRef.current.play();\r\n+//       speak(\"Playing video.\");\r\n+//     } else {\r\n+//       speak(\"No video to play.\");\r\n+//     }\r\n+//   };\r\n+\r\n+//   const pauseVideo = () => {\r\n+//     if (videoRef.current && videoRef.current.paused) {\r\n+//       speak(\"Video is already paused.\");\r\n+//     } else if (videoRef.current) {\r\n+//       videoRef.current.pause();\r\n+//       speak(\"Video paused.\");\r\n+//     } else {\r\n+//       speak(\"No video to pause.\");\r\n+//     }\r\n+//   };\r\n+\r\n+//   const scrollAmount = window.innerHeight * 0.82;\r\n+\r\n+//   const scrollUp = () => {\r\n+//     if (window.pageYOffset === 0) {\r\n+//       speak(\"Already at the top of the page.\");\r\n+//     } else {\r\n+//       window.scrollBy(0, -scrollAmount);\r\n+//       speak(\"Scrolled up.\");\r\n+//     }\r\n+//   };\r\n+\r\n+//   const scrollDown = () => {\r\n+//     const maxScrollTop =\r\n+//       document.documentElement.scrollHeight - window.innerHeight;\r\n+//     if (window.pageYOffset >= maxScrollTop) {\r\n+//       speak(\"Already at the bottom of the page.\");\r\n+//     } else {\r\n+//       window.scrollBy(0, scrollAmount);\r\n+//       speak(\"Scrolled down.\");\r\n+//     }\r\n+//   };\r\n+\r\n+//   const scrollToTop = () => {\r\n+//     if (window.pageYOffset === 0) {\r\n+//       speak(\"Already at the top of the page.\");\r\n+//     } else {\r\n+//       window.scrollTo(0, 0);\r\n+//       speak(\"Scrolled to the top of the page.\");\r\n+//     }\r\n+//   };\r\n+\r\n+//   const scrollToBottom = () => {\r\n+//     const maxScrollTop =\r\n+//       document.documentElement.scrollHeight - window.innerHeight;\r\n+//     if (window.pageYOffset >= maxScrollTop) {\r\n+//       speak(\"Already at the bottom of the page.\");\r\n+//     } else {\r\n+//       window.scrollTo(0, document.body.scrollHeight);\r\n+//       speak(\"Scrolled to the bottom of the page.\");\r\n+//     }\r\n+//   };\r\n+\r\n+//   // const speak = (message) => {\r\n+//   //   const utterance = new SpeechSynthesisUtterance(message);\r\n+//   //   utterance.onend = () => {\r\n+//   //     setIsSpeaking(false);\r\n+//   //     console.log(\"Speaking ended.\");\r\n+//   //     // Only restart recognition if we're still supposed to be listening\r\n+//   //     // if (isListening) {\r\n+//   //     //   if (restartRecognitionTimeout.current) {\r\n+//   //     //     clearTimeout(restartRecognitionTimeout.current);\r\n+//   //     //   }\r\n+//   //     //   restartRecognitionTimeout.current = setTimeout(() => {\r\n+//   //     //     console.log(\"Recognition restarted.\");\r\n+//   //     //     recognition.current.start();\r\n+//   //     //   }, 100); // Delay to prevent immediate restart\r\n+//   //     // }\r\n+//   //     if (isListening && !recognition.current.starting) { // Check the flag before restarting\r\n+//   //       recognition.current.starting = true; // Set the flag when starting recognition\r\n+//   //       recognition.current.start();\r\n+//   //     }\r\n+//   //   };\r\n+\r\n+//   //   setIsSpeaking(true);\r\n+//   //   console.log(\"Speaking started.\");\r\n+//   //   recognition.current.stop(); // Stop recognition when the bot starts speaking\r\n+//   //   speechSynthesis.current.speak(utterance);\r\n+//   // };\r\n+\r\n+//   const speak = (message) => {\r\n+//     console.log(\"speak function called with message:\", message);\r\n+//     const utterance = new SpeechSynthesisUtterance(message);\r\n+//     utterance.onend = () => {\r\n+//       setIsSpeaking(false);\r\n+//       console.log(\"Speaking ended.\");\r\n+//       // Directly handle the restart of recognition here if needed\r\n+//       if (isListening) {\r\n+//         startListening();\r\n+//       }\r\n+//     };\r\n+\r\n+//     setIsSpeaking(true);\r\n+//     console.log(\"Speaking started.\");\r\n+//     recognition.current.stop(); // Ensure to stop recognition before speaking\r\n+//     speechSynthesis.current.speak(utterance);\r\n+//   };\r\n+\r\n+//   const onResult = (event) => {\r\n+//     const resultIndex = event.resultIndex;\r\n+//     const transcript = event.results[resultIndex][0].transcript\r\n+//       .trim()\r\n+//       .toLowerCase();\r\n+\r\n+//     if (event.results[resultIndex].isFinal) {\r\n+//       console.log(`Recognized text: ${transcript}`);\r\n+//       if (transcript.includes(\"brain\")) {\r\n+//         console.log(\"Wake word heard, processing command...\");\r\n+//         handleCommandWithFuse(transcript.replace(\"brain\", \"\"));\r\n+//       }\r\n+//     }\r\n+//   };\r\n+\r\n+//   // const onRecognitionEnd = () => {\r\n+//   //   console.log(\"Recognition ended.\");\r\n+//   //   setIsRecognitionActive(false); // Update state when recognition ends\r\n+//   //   recognition.current.starting = false; // Reset the flag when recognition ends\r\n+//   //   // We now check if the recognition is already running before starting it again\r\n+//   //   if (isListening && !isSpeaking && !recognition.current?.starting) {\r\n+//   //     console.log(\"Restarting recognition.\");\r\n+//   //     recognition.current.start();\r\n+//   //   }\r\n+//   // };\r\n+\r\n+//   // useEffect(() => {\r\n+//   //   if (isListening && !hasGreeted.current) {\r\n+//   //     speak(\"Hello, I'm Brane. How can I assist you today?\");\r\n+//   //     hasGreeted.current = true;\r\n+//   //   } else if (isListening && !isSpeaking) {\r\n+//   //     recognition.current.start();\r\n+//   //   }\r\n+//   // }, [isListening, isSpeaking]);\r\n+\r\n+//   useEffect(() => {\r\n+//     if (isListening && !hasGreeted.current) {\r\n+//       speak(\"Hello, I'm Brane. How can I assist you today?\");\r\n+//       hasGreeted.current = true;\r\n+//     } else if (isListening && !isSpeaking && !recognition.current.starting) {\r\n+//       // Check the flag before starting\r\n+//       recognition.current.starting = true; // Set the flag when starting recognition\r\n+//       recognition.current.start();\r\n+//     }\r\n+//   }, [isListening, isSpeaking]);\r\n+\r\n+//   // const startListening = () => {\r\n+//   //   console.log(\"Attempting to start listening.\");\r\n+//   //   if (recognition.current && !recognition.current.starting) {\r\n+//   //     setIsListening(true);\r\n+//   //     recognition.current.starting = true; // Set the flag when starting recognition\r\n+//   //     recognition.current.start();\r\n+//   //     console.log(\"Listening started.\");\r\n+//   //   }\r\n+//   // };\r\n+\r\n+//   // const stopListening = () => {\r\n+//   //   console.log(\"Stopping listening.\");\r\n+\r\n+//   //   setIsListening(false);\r\n+//   //   recognition.current.stop();\r\n+//   //   if (speechSynthesis.current.speaking) {\r\n+//   //     speechSynthesis.current.cancel();\r\n+//   //   }\r\n+//   //   if (restartRecognitionTimeout.current) {\r\n+//   //     clearTimeout(restartRecognitionTimeout.current);\r\n+//   //   }\r\n+//   //   console.log(\"Listening stopped.\");\r\n+//   // };\r\n+//   // Handle start and stop listening logic\r\n+//   const startListening = () => {\r\n+//     console.log(\"Attempting to start listening.\");\r\n+//     if (!recognition.current.starting) {\r\n+//       setIsListening(true);\r\n+//       recognition.current.starting = true;\r\n+//       recognition.current.start();\r\n+//       console.log(\"Listening started.\");\r\n+//     } else {\r\n+//       console.log(\"Recognition already active.\");\r\n+//     }\r\n+//   };\r\n+\r\n+//   const stopListening = () => {\r\n+//     console.log(\"Stopping listening.\");\r\n+//     if (recognition.current.starting) {\r\n+//       setIsListening(false);\r\n+//       recognition.current.starting = false;\r\n+//       recognition.current.stop();\r\n+//       console.log(\"Listening stopped.\");\r\n+//     } else {\r\n+//       console.log(\"Recognition already inactive.\");\r\n+//     }\r\n+//   };\r\n+\r\n+//   // const handleCommandWithFuse = (command) => {\r\n+//   //   const fuse = new Fuse(commands, { keys: [\"utterance\"], threshold: 0.4 });\r\n+//   //   const results = fuse.search(command);\r\n+//   //   const foundCommand = results.length ? results[0].item : null;\r\n+\r\n+//   //   if (foundCommand) {\r\n+//   //     console.log(\"Command found:\", foundCommand.utterance);\r\n+//   //     speak(foundCommand.response);\r\n+//   //     if (foundCommand.route) {\r\n+//   //       navigate(foundCommand.route); // Navigate to the route specified in the command\r\n+//   //     }\r\n+//   //   } else {\r\n+//   //     console.log(\"No command found.\");\r\n+//   //     speak(\"I'm not sure how to respond to that.\");\r\n+//   //   }\r\n+//   // };\r\n+\r\n+//   const handleCommandWithFuse = (command) => {\r\n+//     const fuse = new Fuse(commands, { keys: [\"utterance\"], threshold: 0.4 });\r\n+//     const results = fuse.search(command);\r\n+//     const foundCommand = results.length ? results[0].item : null;\r\n+\r\n+//     if (foundCommand) {\r\n+//       console.log(\"Command found:\", foundCommand.utterance);\r\n+\r\n+//       if (foundCommand.route) {\r\n+//         if (location.pathname !== foundCommand.route) {\r\n+//           navigate(foundCommand.route);\r\n+//           speak(\r\n+//             `Navigating to ${\r\n+//               foundCommand.routeDescription || \"requested page\"\r\n+//             }.`\r\n+//           );\r\n+//         } else {\r\n+//           speak(\r\n+//             `You are already on the ${\r\n+//               foundCommand.routeDescription || \"requested page\"\r\n+//             }.`\r\n+//           );\r\n+//         }\r\n+//       } else if (foundCommand.action) {\r\n+//         foundCommand.action();\r\n+//       }\r\n+\r\n+//       if (foundCommand.response) {\r\n+//         speak(foundCommand.response);\r\n+//       }\r\n+//     } else {\r\n+//       console.log(\"No command found.\");\r\n+//       speak(\"I'm not sure how to respond to that.\");\r\n+//     }\r\n+//   };\r\n+\r\n+//   const commands = [\r\n+//     {\r\n+//       utterance: \"Hello who are you ?\",\r\n+\r\n+//       response:\r\n+//         \"Hi! This is Brane! your Voice bot from Brane Education How can I Assist you Today ?\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"Hello\",\r\n+\r\n+//       response: \"Hi! How can I assist you today?\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"hello\",\r\n+\r\n+//       response: \"Hi! How can I assist you today?\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"Hi.\",\r\n+\r\n+//       response: \"Hello! How can I assist you today?\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"Hey there\",\r\n+\r\n+//       response: \"Hi! How can I assist you today?\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"Good morning Brane.\",\r\n+\r\n+//       response: \"Hey Hiii! Good morning  ! How can I help you?\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"Good afternoon Brane.\",\r\n+\r\n+//       response: \"Hey Hiii! Good after noon ! How can I help you?\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"Good evening Brane.\",\r\n+\r\n+//       response: \"Hey Hiii! Good evening ! How can I help you?\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"can you please take me to login page\",\r\n+//       route: \"/login\",\r\n+//       routeDescription: \"login page\",\r\n+//       response: \"Navigating to the login page.\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"go to login page\",\r\n+//       route: \"/login\",\r\n+//       routeDescription: \"login page\",\r\n+//       response: \"Navigating to the login page.\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"please take me to login page\",\r\n+//       route: \"/login\",\r\n+//       routeDescription: \"login page\",\r\n+//       response: \"Navigating to the login page.\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"Go to login page\",\r\n+//       route: \"/login\",\r\n+//       routeDescription: \"login page\",\r\n+//       response: \"Navigating to the login page.\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"open login page\",\r\n+//       route: \"/login\",\r\n+//       routeDescription: \"login page\",\r\n+//       response: \"Navigating to the login page.\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"can you please take me to signup page\",\r\n+//       route: \"/signup\",\r\n+//       routeDescription: \"signup page\",\r\n+//       response: \"Navigating to the signup page.\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"take me to signup page\",\r\n+//       route: \"/signup\",\r\n+//       routeDescription: \"signup page\",\r\n+//       response: \"Navigating to the signup page.\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"Go to signup page\",\r\n+//       route: \"/signup\",\r\n+//       routeDescription: \"signup page\",\r\n+//       response: \"Navigating to the signup page.\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"open signup page\",\r\n+//       route: \"/signup\",\r\n+//       routeDescription: \"signup page\",\r\n+//       response: \"Navigating to the signup page.\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"what are platform features\",\r\n+\r\n+//       response:\r\n+//         \"Dashboard, Dynamic time table, Learning Networks, Little Masters, Video Based Dictionary, General Search.\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"Features of platform\",\r\n+\r\n+//       response:\r\n+//         \"Dashboard, Dynamic time table, Learning Networks, Little Masters, Video Based Dictionary, General Search.\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"What does the platform offer\",\r\n+\r\n+//       response:\r\n+//         \"Dashboard, Dynamic time table, Learning Networks, Little Masters, Video Based Dictionary, General Search.\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"Say me the features of platform\",\r\n+\r\n+//       response:\r\n+//         \"Dashboard, Dynamic time table, Learning Networks, Little Masters, Video Based Dictionary, General Search.\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"Say me the services of platform\",\r\n+\r\n+//       response:\r\n+//         \"Dashboard, Dynamic time table, Learning Networks, Little Masters, Video Based Dictionary, General Search.\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"tell me the services offered by the platform\",\r\n+\r\n+//       response:\r\n+//         \"Dashboard, Dynamic time table, Learning Networks, Little Masters, Video Based Dictionary, General Search.\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"explain platform services\",\r\n+\r\n+//       response:\r\n+//         \"Dashboard, Dynamic time table, Learning Networks, Little Masters, Video Based Dictionary, General Search.\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"Give me the Parent voice of Julia Harris\",\r\n+\r\n+//       response:\r\n+//         \"Brane education has helped my son a lot in his studies. He improved a lot in his studies and is now able to score good marks in his exams\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"Play today's motivational video\",\r\n+\r\n+//       response: \"I am playing the video\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"Play today's video\",\r\n+\r\n+//       response: \"I am playing Motivational video\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"Leaders Voice\",\r\n+\r\n+//       response:\r\n+//         \"This Voice-interactive AI Platform is a game Changer. It revolutionizes education.\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"Curriculum Supported by Brane Education\",\r\n+\r\n+//       response:\r\n+//         \"we support multiple Boards let me say few Telangana State Board Andhra Pradesh Board Maharashtra Board Assam Board\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"Boards supported by the platform\",\r\n+\r\n+//       response:\r\n+//         \"we support multiple Boards let me say few Telangana State Board Andhra Pradesh Board Maharashtra Board Assam Board\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"Curriculum\",\r\n+\r\n+//       response:\r\n+//         \"we support multiple Boards let me say few Telangana State Board Andhra Pradesh Board Maharashtra Board Assam Board\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"Go to landing page\",\r\n+\r\n+//       response: \"Okay, I am taking you to the landing page.\",\r\n+\r\n+//       route: \"/childpage\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"take me to landing page\",\r\n+\r\n+//       response: \"Okay, I am taking you to the landing page.\",\r\n+\r\n+//       route: \"/childpage\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"move to landing page\",\r\n+\r\n+//       response: \"Okay, I am taking you to the landing page.\",\r\n+\r\n+//       route: \"/childpage\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"roll back to landing page\",\r\n+\r\n+//       response: \"Okay, I am taking you to the landing page.\",\r\n+\r\n+//       route: \"/childpage\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"move to landing page\",\r\n+\r\n+//       response: \"Okay, I am taking you to the landing page.\",\r\n+\r\n+//       route: \"/childpage\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"what is today's quote\",\r\n+\r\n+//       response:\r\n+//         \"Determination is the power that sees us through all our frustration and obstacles. It helps in building our willpower which is the very basis of success.\",\r\n+\r\n+//       // route: \"/childpage\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"Today's Inspirational quote\",\r\n+\r\n+//       response:\r\n+//         \"Determination is the power that sees us through all our frustration and obstacles. It helps in building our willpower which is the very basis of success.\",\r\n+\r\n+//       // route: \"/childpage\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"say me today's quote\",\r\n+\r\n+//       response:\r\n+//         \"Determination is the power that sees us through all our frustration and obstacles. It helps in building our willpower which is the very basis of success.\",\r\n+\r\n+//       // route: \"/childpage\",\r\n+//     },\r\n+//     {\r\n+//       utterance: \"go back\",\r\n+//       response: \"Going back.\",\r\n+//       action: goBack, // Note the use of an action property\r\n+//     },\r\n+//     {\r\n+//       utterance: \"go forward\",\r\n+//       response: \"Going forward.\",\r\n+//       action: goForward,\r\n+//     },\r\n+//     {\r\n+//       utterance: \"play video\",\r\n+//       // response: \"Playing video.\",\r\n+//       action: playVideo,\r\n+//     },\r\n+//     {\r\n+//       utterance: \"pause video\",\r\n+//       // response: \"Pausing video.\",\r\n+//       action: pauseVideo,\r\n+//     },\r\n+//     {\r\n+//       utterance: \"start video\",\r\n+//       // response: \"Playing video.\",\r\n+//       action: playVideo,\r\n+//     },\r\n+//     {\r\n+//       utterance: \"stop video\",\r\n+//       // response: \"Playing video.\",\r\n+//       action: pauseVideo,\r\n+//     },\r\n+//     {\r\n+//       utterance: \"scroll up\",\r\n+//       // response: \"Scrolling up.\",\r\n+//       action: scrollUp,\r\n+//     },\r\n+//     {\r\n+//       utterance: \"scroll down\",\r\n+//       // response: \"Scrolling down.\",\r\n+//       action: scrollDown,\r\n+//     },\r\n+//     {\r\n+//       utterance: \"go up\",\r\n+\r\n+//       // response: \"Scrolling up.\",\r\n+//       action: scrollUp,\r\n+//     },\r\n+//     {\r\n+//       utterance: \"go down\",\r\n+//       // response: \"Scrolling down.\",\r\n+//       action: scrollDown,\r\n+//     },\r\n+//     {\r\n+//       utterance: \"scroll to top\",\r\n+//       action: scrollToTop,\r\n+//     },\r\n+//     {\r\n+//       utterance: \"scroll to bottom\",\r\n+//       action: scrollToBottom,\r\n+//     },\r\n+//   ];\r\n+//   return (\r\n+//     <div className=\"speech-bot-container\">\r\n+//       <div\r\n+//         className={`button-container ${\r\n+//           isListening ? \"voicebotframeactive\" : \"voicebotframe\"\r\n+//         }`}\r\n+//       >\r\n+//         <div onClick={isListening ? stopListening : startListening}>\r\n+//           <iframe\r\n+//             src={\r\n+//               isListening\r\n+//                 ? \"https://lottie.host/?file=a89aca3f-5407-4052-82c3-2048afca7a9f/NpCdWzLSKD.json\"\r\n+//                 : \"https://lottie.host/?file=d2b6cc0e-fe95-4847-85b5-35365fca7e00/vTudpCuPZq.json\"\r\n+//             }\r\n+//             width=\"120\" // Set your desired width\r\n+//             height=\"120\" // Set your desired height\r\n+//             title={isListening ? \"Stop Animation\" : \"Start Animation\"}\r\n+//             className={isListening ? \"voicebotframeactive\" : \"voicebotframe\"}\r\n+//           ></iframe>\r\n+//           {isListening ? (\r\n+//             <div className=\"overlay\" onClick={stopListening}></div>\r\n+//           ) : (\r\n+//             <div className=\"overlay\" onClick={startListening}></div>\r\n+//           )}\r\n+//         </div>\r\n+//       </div>\r\n+//     </div>\r\n+//   );\r\n+// };\r\n+\r\n+// export default VoiceBot;\r\n+\r\n+// All functionalities but messed up\r\n+\r\n+// import React, { useState, useEffect, useRef } from \"react\";\r\n+// import { useNavigate, useLocation } from \"react-router-dom\";\r\n+// import Fuse from \"fuse.js\";\r\n+// import \"./VoiceBot.css\";\r\n+\r\n+// const VoiceBot = ({ videoRef, takeTestRef, goBackRef }) => {\r\n+//   const [isListening, setIsListening] = useState(false);\r\n+//   const [isSpeaking, setIsSpeaking] = useState(false);\r\n+//   const recognition = useRef(null);\r\n+//   const speechSynthesis = useRef(window.speechSynthesis);\r\n+//   const hasGreeted = useRef(false);\r\n+//   const navigate = useNavigate();\r\n+//   const location = useLocation();\r\n+//   const isRecognitionActive = useRef(false);\r\n+\r\n+//   useEffect(() => {\r\n+//     recognition.current = new window.webkitSpeechRecognition();\r\n+//     recognition.current.continuous = true;\r\n+//     recognition.current.interimResults = false;\r\n+//     recognition.current.onresult = onResult;\r\n+//     recognition.current.onend = onRecognitionEnd;\r\n+\r\n+//     return () => {\r\n+//       if (recognition.current) {\r\n+//         recognition.current.abort();\r\n+//       }\r\n+//     };\r\n+//   }, [location.pathname]);\r\n+\r\n+//   const onResult = (event) => {\r\n+//     const resultIndex = event.resultIndex;\r\n+//     const transcript = event.results[resultIndex][0].transcript\r\n+//       .trim()\r\n+//       .toLowerCase();\r\n+\r\n+//     if (event.results[resultIndex].isFinal) {\r\n+//       console.log(`Recognized text: ${transcript}`);\r\n+//       if (transcript.includes(\"brain\")) {\r\n+//         console.log(\"Wake word heard, processing command...\");\r\n+//         handleCommandWithFuse(transcript.replace(\"brain\", \"\"));\r\n+//       }\r\n+//     }\r\n+//   };\r\n+\r\n+//   const startListening = () => {\r\n+//     if (!isRecognitionActive.current) {\r\n+//       setIsListening(true);\r\n+//       recognition.current.start();\r\n+//       isRecognitionActive.current = true;\r\n+//     }\r\n+//   };\r\n+\r\n+//   const stopListening = () => {\r\n+//     if (isRecognitionActive.current) {\r\n+//       setIsListening(false);\r\n+//       recognition.current.stop();\r\n+//       isRecognitionActive.current = false;\r\n+//     }\r\n+//   };\r\n+\r\n+//   const onRecognitionEnd = () => {\r\n+//     isRecognitionActive.current = false;\r\n+//     if (isListening) {\r\n+//       startListening();\r\n+//     }\r\n+//   };\r\n+\r\n+//   const speak = (message) => {\r\n+//     const utterance = new SpeechSynthesisUtterance(message);\r\n+//     utterance.onend = () => {\r\n+//       setIsSpeaking(false);\r\n+//       if (isListening && !isRecognitionActive.current) {\r\n+//         startListening();\r\n+//       }\r\n+//     };\r\n+\r\n+//     setIsSpeaking(true);\r\n+//     if (isRecognitionActive.current) {\r\n+//       stopListening(); // Adjusted to use stopListening\r\n+//     }\r\n+//     speechSynthesis.current.speak(utterance);\r\n+//   };\r\n+\r\n+//   useEffect(() => {\r\n+//     if (isListening && !hasGreeted.current) {\r\n+//       speak(\"Hello, I'm Brane. How can I assist you today?\");\r\n+//       hasGreeted.current = true;\r\n+//     }\r\n+//   }, [isListening]);\r\n+\r\n+//   const goBack = () => {\r\n+//     if (window.history.length > 1) {\r\n+//       navigate(-1);\r\n+//     } else {\r\n+//       speak(\"Can't go back any further.\");\r\n+//     }\r\n+//   };\r\n+\r\n+//   const goForward = () => {\r\n+//     // Unfortunately, there's no direct way to check if you can go forward in the history.\r\n+//     // You might need to manage this state manually based on user navigation.\r\n+//     navigate(1);\r\n+//   };\r\n+\r\n+//   const playVideo = () => {\r\n+//     if (videoRef.current && !videoRef.current.paused) {\r\n+//       speak(\"Video is already playing.\");\r\n+//     } else if (videoRef.current) {\r\n+//       videoRef.current.play();\r\n+//       speak(\"Playing video.\");\r\n+//     } else {\r\n+//       speak(\"No video to play.\");\r\n+//     }\r\n+//   };\r\n+\r\n+//   const pauseVideo = () => {\r\n+//     if (videoRef.current && videoRef.current.paused) {\r\n+//       speak(\"Video is already paused.\");\r\n+//     } else if (videoRef.current) {\r\n+//       videoRef.current.pause();\r\n+//       speak(\"Video paused.\");\r\n+//     } else {\r\n+//       speak(\"No video to pause.\");\r\n+//     }\r\n+//   };\r\n+\r\n+//   const scrollAmount = window.innerHeight * 0.82;\r\n+\r\n+//   const scrollUp = () => {\r\n+//     if (window.pageYOffset === 0) {\r\n+//       speak(\"Already at the top of the page.\");\r\n+//     } else {\r\n+//       window.scrollBy(0, -scrollAmount);\r\n+//       speak(\"Scrolled up.\");\r\n+//     }\r\n+//   };\r\n+\r\n+//   const scrollDown = () => {\r\n+//     const maxScrollTop =\r\n+//       document.documentElement.scrollHeight - window.innerHeight;\r\n+//     if (window.pageYOffset >= maxScrollTop) {\r\n+//       speak(\"Already at the bottom of the page.\");\r\n+//     } else {\r\n+//       window.scrollBy(0, scrollAmount);\r\n+//       speak(\"Scrolled down.\");\r\n+//     }\r\n+//   };\r\n+\r\n+//   const scrollToTop = () => {\r\n+//     if (window.pageYOffset === 0) {\r\n+//       speak(\"Already at the top of the page.\");\r\n+//     } else {\r\n+//       window.scrollTo(0, 0);\r\n+//       speak(\"Scrolled to the top of the page.\");\r\n+//     }\r\n+//   };\r\n+\r\n+//   const scrollToBottom = () => {\r\n+//     const maxScrollTop =\r\n+//       document.documentElement.scrollHeight - window.innerHeight;\r\n+//     if (window.pageYOffset >= maxScrollTop) {\r\n+//       speak(\"Already at the bottom of the page.\");\r\n+//     } else {\r\n+//       window.scrollTo(0, document.body.scrollHeight);\r\n+//       speak(\"Scrolled to the bottom of the page.\");\r\n+//     }\r\n+//   };\r\n+\r\n+//   // const speak = (message) => {\r\n+//   //   const utterance = new SpeechSynthesisUtterance(message);\r\n+//   //   utterance.onend = () => {\r\n+//   //     setIsSpeaking(false);\r\n+//   //     console.log(\"Speaking ended.\");\r\n+//   //     // Only restart recognition if we're still supposed to be listening\r\n+//   //     // if (isListening) {\r\n+//   //     //   if (restartRecognitionTimeout.current) {\r\n+//   //     //     clearTimeout(restartRecognitionTimeout.current);\r\n+//   //     //   }\r\n+//   //     //   restartRecognitionTimeout.current = setTimeout(() => {\r\n+//   //     //     console.log(\"Recognition restarted.\");\r\n+//   //     //     recognition.current.start();\r\n+//   //     //   }, 100); // Delay to prevent immediate restart\r\n+//   //     // }\r\n+//   //     if (isListening && !recognition.current.starting) { // Check the flag before restarting\r\n+//   //       recognition.current.starting = true; // Set the flag when starting recognition\r\n+//   //       recognition.current.start();\r\n+//   //     }\r\n+//   //   };\r\n+\r\n+//   //   setIsSpeaking(true);\r\n+//   //   console.log(\"Speaking started.\");\r\n+//   //   recognition.current.stop(); // Stop recognition when the bot starts speaking\r\n+//   //   speechSynthesis.current.speak(utterance);\r\n+//   // };\r\n+\r\n+//   // const onRecognitionEnd = () => {\r\n+//   //   console.log(\"Recognition ended.\");\r\n+//   //   setIsRecognitionActive(false); // Update state when recognition ends\r\n+//   //   recognition.current.starting = false; // Reset the flag when recognition ends\r\n+//   //   // We now check if the recognition is already running before starting it again\r\n+//   //   if (isListening && !isSpeaking && !recognition.current?.starting) {\r\n+//   //     console.log(\"Restarting recognition.\");\r\n+//   //     recognition.current.start();\r\n+//   //   }\r\n+//   // };\r\n+\r\n+//   // useEffect(() => {\r\n+//   //   if (isListening && !hasGreeted.current) {\r\n+//   //     speak(\"Hello, I'm Brane. How can I assist you today?\");\r\n+//   //     hasGreeted.current = true;\r\n+//   //   } else if (isListening && !isSpeaking) {\r\n+//   //     recognition.current.start();\r\n+//   //   }\r\n+//   // }, [isListening, isSpeaking]);\r\n+\r\n+//   // const startListening = () => {\r\n+//   //   console.log(\"Attempting to start listening.\");\r\n+//   //   if (recognition.current && !recognition.current.starting) {\r\n+//   //     setIsListening(true);\r\n+//   //     recognition.current.starting = true; // Set the flag when starting recognition\r\n+//   //     recognition.current.start();\r\n+//   //     console.log(\"Listening started.\");\r\n+//   //   }\r\n+//   // };\r\n+\r\n+//   // const stopListening = () => {\r\n+//   //   console.log(\"Stopping listening.\");\r\n+\r\n+//   //   setIsListening(false);\r\n+//   //   recognition.current.stop();\r\n+//   //   if (speechSynthesis.current.speaking) {\r\n+//   //     speechSynthesis.current.cancel();\r\n+//   //   }\r\n+//   //   if (restartRecognitionTimeout.current) {\r\n+//   //     clearTimeout(restartRecognitionTimeout.current);\r\n+//   //   }\r\n+//   //   console.log(\"Listening stopped.\");\r\n+//   // };\r\n+//   // Handle start and stop listening logic\r\n+\r\n+//   useEffect(() => {\r\n+//     if (isListening && !hasGreeted.current) {\r\n+//       speak(\"Hello, I'm Brane. How can I assist you today?\");\r\n+//       hasGreeted.current = true;\r\n+//     }\r\n+//   }, [isListening]);\r\n+\r\n+//   // const handleCommandWithFuse = (command) => {\r\n+//   //   const fuse = new Fuse(commands, { keys: [\"utterance\"], threshold: 0.4 });\r\n+//   //   const results = fuse.search(command);\r\n+//   //   const foundCommand = results.length ? results[0].item : null;\r\n+\r\n+//   //   if (foundCommand) {\r\n+//   //     console.log(\"Command found:\", foundCommand.utterance);\r\n+//   //     speak(foundCommand.response);\r\n+//   //     if (foundCommand.route) {\r\n+//   //       navigate(foundCommand.route); // Navigate to the route specified in the command\r\n+//   //     }\r\n+//   //   } else {\r\n+//   //     console.log(\"No command found.\");\r\n+//   //     speak(\"I'm not sure how to respond to that.\");\r\n+//   //   }\r\n+//   // };\r\n+\r\n+//   const handleCommandWithFuse = (command) => {\r\n+//     const fuse = new Fuse(commands, { keys: [\"utterance\"], threshold: 0.4 });\r\n+//     const results = fuse.search(command);\r\n+//     const foundCommand = results.length ? results[0].item : null;\r\n+\r\n+//     if (foundCommand) {\r\n+//       console.log(\"Command found:\", foundCommand.utterance);\r\n+\r\n+//       if (foundCommand.action) {\r\n+//         foundCommand.action();\r\n+//       } else if (foundCommand.route) {\r\n+//         navigate(foundCommand.route);\r\n+//       }\r\n+\r\n+//       if (foundCommand.response) {\r\n+//         speak(foundCommand.response);\r\n+//       }\r\n+//     } else {\r\n+//       console.log(\"No command found.\");\r\n+//       speak(\"I'm not sure how to respond to that.\");\r\n+//     }\r\n+//   };\r\n+\r\n+//   const commands = [\r\n+//     {\r\n+//       utterance: \"Hello who are you ?\",\r\n+\r\n+//       response:\r\n+//         \"Hi! This is Brane! your Voice bot from Brane Education How can I Assist you Today ?\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"Hello\",\r\n+\r\n+//       response: \"Hi! How can I assist you today?\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"hello\",\r\n+\r\n+//       response: \"Hi! How can I assist you today?\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"Hi.\",\r\n+\r\n+//       response: \"Hello! How can I assist you today?\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"Hey there\",\r\n+\r\n+//       response: \"Hi! How can I assist you today?\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"Good morning Brane.\",\r\n+\r\n+//       response: \"Hey Hiii! Good morning  ! How can I help you?\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"Good afternoon Brane.\",\r\n+\r\n+//       response: \"Hey Hiii! Good after noon ! How can I help you?\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"Good evening Brane.\",\r\n+\r\n+//       response: \"Hey Hiii! Good evening ! How can I help you?\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"can you please take me to login page\",\r\n+//       route: \"/login\",\r\n+//       routeDescription: \"login page\",\r\n+//       response: \"Navigating to the login page.\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"go to login page\",\r\n+//       route: \"/login\",\r\n+//       routeDescription: \"login page\",\r\n+//       response: \"Navigating to the login page.\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"please take me to login page\",\r\n+//       route: \"/login\",\r\n+//       routeDescription: \"login page\",\r\n+//       response: \"Navigating to the login page.\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"Go to login page\",\r\n+//       route: \"/login\",\r\n+//       routeDescription: \"login page\",\r\n+//       response: \"Navigating to the login page.\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"open login page\",\r\n+//       route: \"/login\",\r\n+//       routeDescription: \"login page\",\r\n+//       response: \"Navigating to the login page.\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"can you please take me to signup page\",\r\n+//       route: \"/signup\",\r\n+//       routeDescription: \"signup page\",\r\n+//       response: \"Navigating to the signup page.\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"take me to signup page\",\r\n+//       route: \"/signup\",\r\n+//       routeDescription: \"signup page\",\r\n+//       response: \"Navigating to the signup page.\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"Go to signup page\",\r\n+//       route: \"/signup\",\r\n+//       routeDescription: \"signup page\",\r\n+//       response: \"Navigating to the signup page.\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"open signup page\",\r\n+//       route: \"/signup\",\r\n+//       routeDescription: \"signup page\",\r\n+//       response: \"Navigating to the signup page.\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"what are platform features\",\r\n+\r\n+//       response:\r\n+//         \"Dashboard, Dynamic time table, Learning Networks, Little Masters, Video Based Dictionary, General Search.\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"Features of platform\",\r\n+\r\n+//       response:\r\n+//         \"Dashboard, Dynamic time table, Learning Networks, Little Masters, Video Based Dictionary, General Search.\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"What does the platform offer\",\r\n+\r\n+//       response:\r\n+//         \"Dashboard, Dynamic time table, Learning Networks, Little Masters, Video Based Dictionary, General Search.\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"Say me the features of platform\",\r\n+\r\n+//       response:\r\n+//         \"Dashboard, Dynamic time table, Learning Networks, Little Masters, Video Based Dictionary, General Search.\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"Say me the services of platform\",\r\n+\r\n+//       response:\r\n+//         \"Dashboard, Dynamic time table, Learning Networks, Little Masters, Video Based Dictionary, General Search.\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"tell me the services offered by the platform\",\r\n+\r\n+//       response:\r\n+//         \"Dashboard, Dynamic time table, Learning Networks, Little Masters, Video Based Dictionary, General Search.\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"explain platform services\",\r\n+\r\n+//       response:\r\n+//         \"Dashboard, Dynamic time table, Learning Networks, Little Masters, Video Based Dictionary, General Search.\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"Give me the Parent voice of Julia Harris\",\r\n+\r\n+//       response:\r\n+//         \"Brane education has helped my son a lot in his studies. He improved a lot in his studies and is now able to score good marks in his exams\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"Play today's motivational video\",\r\n+\r\n+//       response: \"I am playing the video\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"Play today's video\",\r\n+\r\n+//       response: \"I am playing Motivational video\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"Leaders Voice\",\r\n+\r\n+//       response:\r\n+//         \"This Voice-interactive AI Platform is a game Changer. It revolutionizes education.\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"Curriculum Supported by Brane Education\",\r\n+\r\n+//       response:\r\n+//         \"we support multiple Boards let me say few Telangana State Board Andhra Pradesh Board Maharashtra Board Assam Board\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"Boards supported by the platform\",\r\n+\r\n+//       response:\r\n+//         \"we support multiple Boards let me say few Telangana State Board Andhra Pradesh Board Maharashtra Board Assam Board\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"Curriculum\",\r\n+\r\n+//       response:\r\n+//         \"we support multiple Boards let me say few Telangana State Board Andhra Pradesh Board Maharashtra Board Assam Board\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"Go to landing page\",\r\n+\r\n+//       response: \"Okay, I am taking you to the landing page.\",\r\n+\r\n+//       route: \"/childpage\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"take me to landing page\",\r\n+\r\n+//       response: \"Okay, I am taking you to the landing page.\",\r\n+\r\n+//       route: \"/childpage\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"move to landing page\",\r\n+\r\n+//       response: \"Okay, I am taking you to the landing page.\",\r\n+\r\n+//       route: \"/childpage\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"roll back to landing page\",\r\n+\r\n+//       response: \"Okay, I am taking you to the landing page.\",\r\n+\r\n+//       route: \"/childpage\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"move to landing page\",\r\n+\r\n+//       response: \"Okay, I am taking you to the landing page.\",\r\n+\r\n+//       route: \"/childpage\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"what is today's quote\",\r\n+\r\n+//       response:\r\n+//         \"Determination is the power that sees us through all our frustration and obstacles. It helps in building our willpower which is the very basis of success.\",\r\n+\r\n+//       // route: \"/childpage\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"Today's Inspirational quote\",\r\n+\r\n+//       response:\r\n+//         \"Determination is the power that sees us through all our frustration and obstacles. It helps in building our willpower which is the very basis of success.\",\r\n+\r\n+//       // route: \"/childpage\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"say me today's quote\",\r\n+\r\n+//       response:\r\n+//         \"Determination is the power that sees us through all our frustration and obstacles. It helps in building our willpower which is the very basis of success.\",\r\n+\r\n+//       // route: \"/childpage\",\r\n+//     },\r\n+//     {\r\n+//       utterance: \"go back\",\r\n+//       response: \"Going back.\",\r\n+//       action: goBack, // Note the use of an action property\r\n+//     },\r\n+//     {\r\n+//       utterance: \"go forward\",\r\n+//       response: \"Going forward.\",\r\n+//       action: goForward,\r\n+//     },\r\n+//     {\r\n+//       utterance: \"play video\",\r\n+//       // response: \"Playing video.\",\r\n+//       action: playVideo,\r\n+//     },\r\n+//     {\r\n+//       utterance: \"pause video\",\r\n+//       // response: \"Pausing video.\",\r\n+//       action: pauseVideo,\r\n+//     },\r\n+//     {\r\n+//       utterance: \"start video\",\r\n+//       // response: \"Playing video.\",\r\n+//       action: playVideo,\r\n+//     },\r\n+//     {\r\n+//       utterance: \"stop video\",\r\n+//       // response: \"Playing video.\",\r\n+//       action: pauseVideo,\r\n+//     },\r\n+//     {\r\n+//       utterance: \"scroll up\",\r\n+//       // response: \"Scrolling up.\",\r\n+//       action: scrollUp,\r\n+//     },\r\n+//     {\r\n+//       utterance: \"scroll down\",\r\n+//       // response: \"Scrolling down.\",\r\n+//       action: scrollDown,\r\n+//     },\r\n+//     {\r\n+//       utterance: \"go up\",\r\n+\r\n+//       // response: \"Scrolling up.\",\r\n+//       action: scrollUp,\r\n+//     },\r\n+//     {\r\n+//       utterance: \"go down\",\r\n+//       // response: \"Scrolling down.\",\r\n+//       action: scrollDown,\r\n+//     },\r\n+//     {\r\n+//       utterance: \"scroll to top\",\r\n+//       action: scrollToTop,\r\n+//     },\r\n+//     {\r\n+//       utterance: \"scroll to bottom\",\r\n+//       action: scrollToBottom,\r\n+//     },\r\n+//     {\r\n+//       utterance: \"go back\",\r\n+//       action: goBackRef?.current?.click, // Use goBackRef directly\r\n+//       response: \"Going back.\",\r\n+//     },\r\n+//     {\r\n+//       utterance: \"take test\",\r\n+//       action: takeTestRef?.current?.click, // Use takeTestRef directly\r\n+//       response: \"Starting the test.\",\r\n+//     },\r\n+//   ];\r\n+//   return (\r\n+//     <div className=\"speech-bot-container\">\r\n+//       <div\r\n+//         className={`button-container ${\r\n+//           isListening ? \"voicebotframeactive\" : \"voicebotframe\"\r\n+//         }`}\r\n+//       >\r\n+//         <div onClick={isListening ? stopListening : startListening}>\r\n+//           <iframe\r\n+//             src={\r\n+//               isListening\r\n+//                 ? \"https://lottie.host/?file=a89aca3f-5407-4052-82c3-2048afca7a9f/NpCdWzLSKD.json\"\r\n+//                 : \"https://lottie.host/?file=d2b6cc0e-fe95-4847-85b5-35365fca7e00/vTudpCuPZq.json\"\r\n+//             }\r\n+//             width=\"120\" // Set your desired width\r\n+//             height=\"120\" // Set your desired height\r\n+//             title={isListening ? \"Stop Animation\" : \"Start Animation\"}\r\n+//             className={isListening ? \"voicebotframeactive\" : \"voicebotframe\"}\r\n+//           ></iframe>\r\n+//           {isListening ? (\r\n+//             <div className=\"overlay\" onClick={stopListening}></div>\r\n+//           ) : (\r\n+//             <div className=\"overlay\" onClick={startListening}></div>\r\n+//           )}\r\n+//         </div>\r\n+//       </div>\r\n+//     </div>\r\n+//   );\r\n+// };\r\n+\r\n+// export default VoiceBot;\r\n"
                },
                {
                    "date": 1700825836588,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,3991 @@\n+import React, { useState, useEffect, useRef } from \"react\";\r\n+import { useNavigate, useLocation } from \"react-router-dom\";\r\n+import Fuse from \"fuse.js\";\r\n+import \"./VoiceBot.css\";\r\n+import chatbotimage from \"../../assets/chatbotgif.gif\";\r\n+\r\n+const VoiceBot = ({ videoRefs,setMobileNumber,setPin,triggerLogin, setTriggerRecordAudio }) => {\r\n+  const [isListening, setIsListening] = useState(false);\r\n+  const [isSpeaking, setIsSpeaking] = useState(false);\r\n+  const recognition = useRef(null);\r\n+  const speechSynthesis = useRef(window.speechSynthesis);\r\n+  const [hasGreeted, setHasGreeted] = useState(false);\r\n+  const navigate = useNavigate();\r\n+\r\n+  // Initialize speech recognition\r\n+  useEffect(() => {\r\n+    recognition.current = new window.webkitSpeechRecognition();\r\n+    recognition.current.continuous = true;\r\n+    recognition.current.interimResults = false;\r\n+    recognition.current.onresult = onResult;\r\n+    recognition.current.onend = onRecognitionEnd;\r\n+    recognition.current.starting = false;\r\n+\r\n+    recognition.current.onerror = (event) => {\r\n+      console.error(\"Recognition error:\", event.error);\r\n+      if (isListening && !isSpeaking) {\r\n+        restartRecognition();\r\n+      }\r\n+    };\r\n+\r\n+    return () => {\r\n+      if (recognition.current) {\r\n+        recognition.current.abort();\r\n+      }\r\n+    };\r\n+  }, []);\r\n+\r\n+  useEffect(() => {\r\n+    const checkRecognition = () => {\r\n+      if (isListening && !isSpeaking && !recognition.current.starting) {\r\n+        console.log(\"Restarting recognition because it's not active.\");\r\n+        recognition.current.starting = true;\r\n+        recognition.current.start();\r\n+        console.log(\"Restarted recognition.\");\r\n+      }\r\n+    };\r\n+\r\n+    const recognitionCheckInterval = setInterval(checkRecognition, 500); // Check every .5 second\r\n+\r\n+    return () => {\r\n+      clearInterval(recognitionCheckInterval);\r\n+    };\r\n+  }, [isListening, isSpeaking]);\r\n+\r\n+  const historyStack = useRef([]);\r\n+\r\n+  useEffect(() => {\r\n+    return () => {\r\n+      // Clean up the listener when the component unmounts\r\n+      window.removeEventListener(\"popstate\", handlePopState);\r\n+    };\r\n+  }, []);\r\n+\r\n+  const handlePopState = () => {\r\n+    // This needs to handle both back and forward browser actions\r\n+    // Use some logic to determine whether it's a back or forward action\r\n+    // For simplicity, assume it's always back\r\n+    historyStack.current.pop();\r\n+    forwardStack.current.length = 0; // Clear forward stack on manual navigation\r\n+  };\r\n+\r\n+  // Listen to popstate events to update the history stack\r\n+  useEffect(() => {\r\n+    window.addEventListener(\"popstate\", handlePopState);\r\n+  }, []);\r\n+\r\n+  const forwardStack = useRef([]);\r\n+\r\n+  const goBack = () => {\r\n+    if (window.history.state && window.history.state.idx > 0) {\r\n+      window.history.back();\r\n+      speak(\"Going back\");\r\n+    } else {\r\n+      speak(\"Can't go back any further.\");\r\n+    }\r\n+  };\r\n+\r\n+  const goForward = () => {\r\n+    if (\r\n+      window.history.state &&\r\n+      window.history.state.idx < window.history.length - 1\r\n+    ) {\r\n+      window.history.forward();\r\n+      speak(\"Going forward\");\r\n+    } else {\r\n+      speak(\"No forward history available.\");\r\n+    }\r\n+  };\r\n+\r\n+  const scrollAmount = window.innerHeight * 0.82;\r\n+\r\n+  const scrollUp = () => {\r\n+    if (window.pageYOffset === 0) {\r\n+      speak(\"Already at the top of the page.\");\r\n+    } else {\r\n+      window.scrollBy(0, -scrollAmount);\r\n+      speak(\"Scrolled up.\");\r\n+    }\r\n+  };\r\n+\r\n+  const scrollDown = () => {\r\n+    const maxScrollTop =\r\n+      document.documentElement.scrollHeight - window.innerHeight;\r\n+    if (window.pageYOffset >= maxScrollTop) {\r\n+      speak(\"Already at the bottom of the page.\");\r\n+    } else {\r\n+      window.scrollBy(0, scrollAmount);\r\n+      speak(\"Scrolled down.\");\r\n+    }\r\n+  };\r\n+\r\n+  const scrollToTop = () => {\r\n+    if (window.pageYOffset === 0) {\r\n+      speak(\"Already at the top of the page.\");\r\n+    } else {\r\n+      window.scrollTo(0, 0);\r\n+      speak(\"Scrolled to the top of the page.\");\r\n+    }\r\n+  };\r\n+\r\n+  const scrollToBottom = () => {\r\n+    const maxScrollTop =\r\n+      document.documentElement.scrollHeight - window.innerHeight;\r\n+    if (window.pageYOffset >= maxScrollTop) {\r\n+      speak(\"Already at the bottom of the page.\");\r\n+    } else {\r\n+      window.scrollTo(0, document.body.scrollHeight);\r\n+      speak(\"Scrolled to the bottom of the page.\");\r\n+    }\r\n+  };\r\n+\r\n+  const controlVideo = (videoId, action) => {\r\n+    const videoRef = videoRefs.current.get(videoId);\r\n+    if (videoRef && videoRef.current) {\r\n+      switch (action) {\r\n+        case \"play\":\r\n+          videoRef.current.play();\r\n+          break;\r\n+        case \"pause\":\r\n+          videoRef.current.pause();\r\n+          break;\r\n+        case \"mute\":\r\n+          videoRef.current.muted = true;\r\n+          break;\r\n+        case \"unmute\":\r\n+          videoRef.current.muted = false;\r\n+          break;\r\n+        case \"fullscreen\":\r\n+          if (videoRef.current.requestFullscreen) {\r\n+            videoRef.current.requestFullscreen();\r\n+          } else if (videoRef.current.webkitRequestFullscreen) {\r\n+            // Safari\r\n+            videoRef.current.webkitRequestFullscreen();\r\n+          } else if (videoRef.current.msRequestFullscreen) {\r\n+            // IE11\r\n+            videoRef.current.msRequestFullscreen();\r\n+          }\r\n+          break;\r\n+        case \"exitFullscreen\":\r\n+          if (document.exitFullscreen) {\r\n+            document.exitFullscreen();\r\n+          } else if (document.webkitExitFullscreen) {\r\n+            // Safari\r\n+            document.webkitExitFullscreen();\r\n+          } else if (document.msExitFullscreen) {\r\n+            // IE11\r\n+            document.msExitFullscreen();\r\n+          }\r\n+          break;\r\n+        case \"increaseVolume\":\r\n+          if (videoRef.current.volume < 1) {\r\n+            videoRef.current.volume = Math.min(\r\n+              1,\r\n+              videoRef.current.volume + 0.1\r\n+            );\r\n+          }\r\n+          break;\r\n+        case \"decreaseVolume\":\r\n+          if (videoRef.current.volume > 0) {\r\n+            videoRef.current.volume = Math.max(\r\n+              0,\r\n+              videoRef.current.volume - 0.1\r\n+            );\r\n+          }\r\n+          break;\r\n+        // Add other cases as needed\r\n+      }\r\n+      speak(\r\n+        `${\r\n+          action.charAt(0).toUpperCase() +\r\n+          action\r\n+            .slice(1)\r\n+            .replace(/([A-Z])/g, \" $1\")\r\n+            .toLowerCase()\r\n+        }ing video.`\r\n+      );\r\n+    } else {\r\n+      speak(`Video not found.`);\r\n+    }\r\n+  };\r\n+\r\n+  const speak = (message) => {\r\n+    const utterance = new SpeechSynthesisUtterance(message);\r\n+    utterance.onend = () => {\r\n+      setIsSpeaking(false);\r\n+      // Restart recognition after speaking has ended\r\n+      if (isListening) {\r\n+        restartRecognition();\r\n+      }\r\n+    };\r\n+\r\n+    setIsSpeaking(true);\r\n+    // Stop recognition when the bot starts speaking\r\n+    if (recognition.current) {\r\n+      recognition.current.abort();\r\n+    }\r\n+    speechSynthesis.current.speak(utterance);\r\n+  };\r\n+\r\n+  const restartRecognition = () => {\r\n+    // Check if recognition is not already started and if the bot is set to listen\r\n+    if (\r\n+      recognition.current &&\r\n+      !recognition.current.starting &&\r\n+      isListening &&\r\n+      !isSpeaking\r\n+    ) {\r\n+      recognition.current.abort(); // Ensure any ongoing recognition is stopped\r\n+      recognition.current.starting = true;\r\n+      recognition.current.start();\r\n+    }\r\n+  };\r\n+\r\n+  // Restart recognition when bot finishes speaking and isListening is true\r\n+  useEffect(() => {\r\n+    if (!isSpeaking && isListening) {\r\n+      restartRecognition();\r\n+    }\r\n+  }, [isSpeaking, isListening]);\r\n+\r\n+  const onResult = (event) => {\r\n+    const resultIndex = event.resultIndex;\r\n+    const transcript = event.results[resultIndex][0].transcript\r\n+      .trim()\r\n+      .toLowerCase();\r\n+\r\n+    if (event.results[resultIndex].isFinal) {\r\n+      console.log(`Recognized text: ${transcript}`);\r\n+      if (transcript.includes(\"brain\")) {\r\n+        console.log(\"Wake word heard, processing command...\");\r\n+        handleCommandWithFuse(transcript.replace(\"brain\", \"\"));\r\n+      }\r\n+    }\r\n+  };\r\n+\r\n+  const onRecognitionEnd = () => {\r\n+    recognition.current.starting = false;\r\n+    if (isListening && !isSpeaking) {\r\n+      restartRecognition();\r\n+    }\r\n+  };\r\n+\r\n+  useEffect(() => {\r\n+    if (isListening && !hasGreeted) {\r\n+      speak(\"Hello, I'm Brane. How can I help you today?\");\r\n+      setHasGreeted(true);\r\n+    }\r\n+  }, [isListening, hasGreeted]);\r\n+\r\n+  // Updated startListening function\r\n+  const startListening = () => {\r\n+    setIsListening(true);\r\n+    if (!recognition.current.starting) {\r\n+      restartRecognition();\r\n+    }\r\n+  };\r\n+\r\n+  // Updated stopListening function\r\n+  const stopListening = () => {\r\n+    setIsListening(false);\r\n+    if (speechSynthesis.current.speaking) {\r\n+      speechSynthesis.current.cancel();\r\n+    }\r\n+    recognition.current.abort();\r\n+  };\r\n+\r\n+  const handleCommandWithFuse = (command) => {\r\n+    const fuse = new Fuse(commands, { keys: [\"utterance\"], threshold: 0.4 });\r\n+    const results = fuse.search(command);\r\n+    const foundCommand = results.length ? results[0].item : null;\r\n+\r\n+    if (foundCommand) {\r\n+      console.log(\"Command text to process:\", command);\r\n+      console.log(\"Command found:\", foundCommand.utterance);\r\n+      if (foundCommand.action) {\r\n+        foundCommand.action(command); // Pass the command text to the action function\r\n+      } else if (foundCommand.route) {\r\n+        navigate(foundCommand.route);\r\n+      }\r\n+\r\n+      // Speak after performing the action or navigation\r\n+      speak(foundCommand.response);\r\n+    } else {\r\n+      console.log(\"No command found.\");\r\n+      speak(\"I'm not sure how to respond to that.\");\r\n+    }\r\n+  };\r\n+\r\n+  const extractNumber = (spokenText) => {\r\n+    if (!spokenText) return null; // Return null if spokenText is undefined or null\r\n+  \r\n+    const sanitizedText = spokenText.replace(/[.,]/g, '');\r\n+    const matches = sanitizedText.match(/\\d+/);\r\n+    return matches ? matches[0] : null;\r\n+  };\r\n+\r\n+\r\n+  const commands = [\r\n+    {\r\n+      utterance: \"Hello who are you ?\",\r\n+\r\n+      response:\r\n+        \"Hi! This is Brane! your Voice bot from Brane Education How can I Assist you Today ?\",\r\n+    },\r\n+\r\n+    {\r\n+      utterance: \"Hello\",\r\n+\r\n+      response: \"Hi! How can I assist you today?\",\r\n+    },\r\n+\r\n+    {\r\n+      utterance: \"hello\",\r\n+\r\n+      response: \"Hi! How can I assist you today?\",\r\n+    },\r\n+\r\n+    {\r\n+      utterance: \"Hi.\",\r\n+\r\n+      response: \"Hello! How can I assist you today?\",\r\n+    },\r\n+\r\n+    {\r\n+      utterance: \"Hey there\",\r\n+\r\n+      response: \"Hi! How can I assist you today?\",\r\n+    },\r\n+\r\n+    {\r\n+      utterance: \"Good morning Brane.\",\r\n+\r\n+      response: \"Hey Hiii! Good morning  ! How can I help you?\",\r\n+    },\r\n+\r\n+    {\r\n+      utterance: \"Good afternoon Brane.\",\r\n+\r\n+      response: \"Hey Hiii! Good after noon ! How can I help you?\",\r\n+    },\r\n+\r\n+    {\r\n+      utterance: \"Good evening Brane.\",\r\n+\r\n+      response: \"Hey Hiii! Good evening ! How can I help you?\",\r\n+    },\r\n+\r\n+    {\r\n+      utterance: \"take me to homepage\",\r\n+\r\n+      route: \"/\",\r\n+\r\n+      response: \"You're in Homepage now\",\r\n+    },\r\n+    {\r\n+      utterance: \"open homepage\",\r\n+\r\n+      route: \"/\",\r\n+\r\n+      response: \"You're in Homepage now\",\r\n+    },\r\n+    {\r\n+      utterance: \"go to homepage\",\r\n+\r\n+      route: \"/\",\r\n+\r\n+      response: \"You're in Homepage now\",\r\n+    },\r\n+    {\r\n+      utterance: \"go back to homepage\",\r\n+\r\n+      route: \"/\",\r\n+\r\n+      response: \"You're in Homepage now\",\r\n+    },\r\n+    {\r\n+      utterance: \"can you please take me to login page\",\r\n+\r\n+      route: \"/login\",\r\n+\r\n+      response: \"Here's the Login Page, Please Login\",\r\n+    },\r\n+\r\n+    {\r\n+      utterance: \"please take me to login page\",\r\n+\r\n+      route: \"/login\",\r\n+\r\n+      response: \"Here's the Login Page, Please Login\",\r\n+    },\r\n+\r\n+    {\r\n+      utterance: \"Go to login page\",\r\n+\r\n+      route: \"/login\",\r\n+\r\n+      response: \"Here's the Login Page, Please Login\",\r\n+    },\r\n+\r\n+    {\r\n+      utterance: \"open login page\",\r\n+\r\n+      route: \"/login\",\r\n+\r\n+      response: \"Here's the Login Page, Please Login\",\r\n+    },\r\n+\r\n+    {\r\n+      utterance: \"can you please take me to signup page\",\r\n+\r\n+      route: \"/signup\",\r\n+\r\n+      response: \"Here's the signup page. Please proceed With Registration.\",\r\n+    },\r\n+\r\n+    {\r\n+      utterance: \"take me to signup page\",\r\n+\r\n+      route: \"/signup\",\r\n+\r\n+      response: \"Here's the signup page. Please proceed With Registration.\",\r\n+    },\r\n+\r\n+    {\r\n+      utterance: \"Go to signup page\",\r\n+\r\n+      route: \"/signup\",\r\n+\r\n+      response: \"Here's the signup page. Please proceed With Registration.\",\r\n+    },\r\n+\r\n+    {\r\n+      utterance: \"open signup page\",\r\n+\r\n+      route: \"/signup\",\r\n+\r\n+      response: \"Here's the signup page. Please proceed With Registration.\",\r\n+    },\r\n+\r\n+    {\r\n+      utterance: \"Go to face id\",\r\n+\r\n+      route: \"/login/faceid\",\r\n+\r\n+      response: \"Here's Face ID Login. Please proceed.\",\r\n+    },\r\n+\r\n+    {\r\n+      utterance: \"Go to face id login\",\r\n+\r\n+      route: \"/login/faceid\",\r\n+\r\n+      response: \"Here's Face ID Login. Please proceed.\",\r\n+    },\r\n+    {\r\n+      utterance: \"Go to face login\",\r\n+\r\n+      route: \"/login/faceid\",\r\n+\r\n+      response: \"Here's Face ID Login. Please proceed.\",\r\n+    },\r\n+\r\n+    {\r\n+      utterance: \"login with face id\",\r\n+\r\n+      route: \"/login/faceid\",\r\n+\r\n+      response: \"Here's Face ID Login. Please proceed.\",\r\n+    },\r\n+\r\n+    {\r\n+      utterance: \"login with face\",\r\n+\r\n+      route: \"/login/faceid\",\r\n+\r\n+      response: \"Here's Face ID Login. Please proceed.\",\r\n+    },\r\n+\r\n+    {\r\n+      utterance: \"i want to login with face\",\r\n+\r\n+      route: \"/login/faceid\",\r\n+\r\n+      response: \"Here's Face ID Login. Please proceed.\",\r\n+    },\r\n+\r\n+    {\r\n+      utterance: \"login with voice\",\r\n+\r\n+      route: \"/login/voiceid\",\r\n+\r\n+      response: \"Here's Voice Login. Please proceed.\",\r\n+    },\r\n+\r\n+    {\r\n+      utterance: \"i want to login with voice\",\r\n+\r\n+      route: \"/login/voiceid\",\r\n+\r\n+      response: \"Here's Voice Login. Please proceed.\",\r\n+    },\r\n+\r\n+    {\r\n+      utterance: \"go to voice login\",\r\n+\r\n+      route: \"/login/voiceid\",\r\n+\r\n+      response: \"Here's Voice Login. Please proceed.\",\r\n+    },\r\n+\r\n+    {\r\n+      utterance: \"login with voice\",\r\n+\r\n+      route: \"/login/voiceid\",\r\n+\r\n+      response: \"Here's Voice Login. Please proceed.\",\r\n+    },\r\n+\r\n+    {\r\n+      utterance: \"login with mobile\",\r\n+\r\n+      route: \"/login/mobile\",\r\n+\r\n+      response: \"Here's Mobile Login. Please proceed.\",\r\n+    },\r\n+\r\n+    {\r\n+      utterance: \"i want to login with mobile\",\r\n+\r\n+      route: \"/login/mobile\",\r\n+\r\n+      response: \"Here's Mobile Login. Please proceed.\",\r\n+    },\r\n+    {\r\n+      utterance: \"go to mobile login\",\r\n+\r\n+      route: \"/login/mobile\",\r\n+\r\n+      response: \"Here's Mobile Login. Please proceed.\",\r\n+    },\r\n+    {\r\n+      utterance: \"go to about page\",\r\n+\r\n+      route: \"/aboutus\",\r\n+\r\n+      response: \"This is About us.\",\r\n+    },\r\n+    {\r\n+      utterance: \"go to about us page\",\r\n+\r\n+      route: \"/aboutus\",\r\n+\r\n+      response: \"This is About us.\",\r\n+    },\r\n+    {\r\n+      utterance: \"open about us page\",\r\n+\r\n+      route: \"/aboutus\",\r\n+\r\n+      response: \"This is About us.\",\r\n+    },\r\n+    {\r\n+      utterance: \"open about page\",\r\n+\r\n+      route: \"/aboutus\",\r\n+\r\n+      response: \"This is About us.\",\r\n+    },\r\n+    {\r\n+      utterance: \"take me to about page\",\r\n+\r\n+      route: \"/aboutus\",\r\n+\r\n+      response: \"This is About us.\",\r\n+    },\r\n+    {\r\n+      utterance: \"take me to about us page\",\r\n+\r\n+      route: \"/aboutus\",\r\n+\r\n+      response: \"This is About us.\",\r\n+    },\r\n+\r\n+    {\r\n+      utterance: \"go to contact page\",\r\n+\r\n+      route: \"/contactus\",\r\n+\r\n+      response: \"You can contact us from here\",\r\n+    },\r\n+    {\r\n+      utterance: \"go to contact us page\",\r\n+\r\n+      route: \"/contactus\",\r\n+\r\n+      response: \"You can contact us from here\",\r\n+    },\r\n+    {\r\n+      utterance: \"open contact us page\",\r\n+\r\n+      route: \"/contactus\",\r\n+\r\n+      response: \"You can contact us from here\",\r\n+    },\r\n+    {\r\n+      utterance: \"open contact page\",\r\n+\r\n+      route: \"/contactus\",\r\n+\r\n+      response: \"You can contact us from here\",\r\n+    },\r\n+    {\r\n+      utterance: \"take me to about page\",\r\n+\r\n+      route: \"/contactus\",\r\n+\r\n+      response: \"You can contact us from here\",\r\n+    },\r\n+    {\r\n+      utterance: \"take me to contact us page\",\r\n+\r\n+      route: \"/contactus\",\r\n+\r\n+      response: \"You can contact us from here\",\r\n+    },\r\n+\r\n+    {\r\n+      utterance: \"what are platform features\",\r\n+\r\n+      response:\r\n+        \"Dashboard, Dynamic time table, Learning Networks, Little Masters, Video Based Dictionary, General Search.\",\r\n+    },\r\n+\r\n+    {\r\n+      utterance: \"Features of platform\",\r\n+\r\n+      response:\r\n+        \"Dashboard, Dynamic time table, Learning Networks, Little Masters, Video Based Dictionary, General Search.\",\r\n+    },\r\n+\r\n+    {\r\n+      utterance: \"What does the platform offer\",\r\n+\r\n+      response:\r\n+        \"Dashboard, Dynamic time table, Learning Networks, Little Masters, Video Based Dictionary, General Search.\",\r\n+    },\r\n+\r\n+    {\r\n+      utterance: \"Say me the features of platform\",\r\n+\r\n+      response:\r\n+        \"Dashboard, Dynamic time table, Learning Networks, Little Masters, Video Based Dictionary, General Search.\",\r\n+    },\r\n+\r\n+    {\r\n+      utterance: \"Say me the services of platform\",\r\n+\r\n+      response:\r\n+        \"Dashboard, Dynamic time table, Learning Networks, Little Masters, Video Based Dictionary, General Search.\",\r\n+    },\r\n+\r\n+    {\r\n+      utterance: \"tell me the services offered by the platform\",\r\n+\r\n+      response:\r\n+        \"Dashboard, Dynamic time table, Learning Networks, Little Masters, Video Based Dictionary, General Search.\",\r\n+    },\r\n+\r\n+    {\r\n+      utterance: \"explain platform services\",\r\n+\r\n+      response:\r\n+        \"Dashboard, Dynamic time table, Learning Networks, Little Masters, Video Based Dictionary, General Search.\",\r\n+    },\r\n+\r\n+    {\r\n+      utterance: \"Give me the Parent voice of Julia Harris\",\r\n+\r\n+      response:\r\n+        \"Brane education has helped my son a lot in his studies. He improved a lot in his studies and is now able to score good marks in his exams\",\r\n+    },\r\n+\r\n+    {\r\n+      utterance: \"Leaders Voice\",\r\n+\r\n+      response:\r\n+        \"This Voice-interactive AI Platform is a game Changer. It revolutionizes education.\",\r\n+    },\r\n+\r\n+    {\r\n+      utterance: \"Curriculum Supported by Brane Education\",\r\n+\r\n+      response:\r\n+        \"we support multiple Boards let me say few Telangana State Board Andhra Pradesh Board Maharashtra Board Assam Board\",\r\n+    },\r\n+\r\n+    {\r\n+      utterance: \"Boards supported by the platform\",\r\n+\r\n+      response:\r\n+        \"we support multiple Boards let me say few Telangana State Board Andhra Pradesh Board Maharashtra Board Assam Board\",\r\n+    },\r\n+\r\n+    {\r\n+      utterance: \"Curriculum\",\r\n+\r\n+      response:\r\n+        \"we support multiple Boards let me say few Telangana State Board Andhra Pradesh Board Maharashtra Board Assam Board\",\r\n+    },\r\n+\r\n+    {\r\n+      utterance: \"what is today's quote\",\r\n+\r\n+      response:\r\n+        \"Determination is the power that sees us through all our frustration and obstacles. It helps in building our willpower which is the very basis of success.\",\r\n+\r\n+      route: \"/childpage\",\r\n+    },\r\n+\r\n+    {\r\n+      utterance: \"Today's Inspirational quote\",\r\n+\r\n+      response:\r\n+        \"Determination is the power that sees us through all our frustration and obstacles. It helps in building our willpower which is the very basis of success.\",\r\n+\r\n+      route: \"/childpage\",\r\n+    },\r\n+\r\n+    {\r\n+      utterance: \"say me today's quote\",\r\n+\r\n+      response:\r\n+        \"Determination is the power that sees us through all our frustration and obstacles. It helps in building our willpower which is the very basis of success.\",\r\n+\r\n+      route: \"/childpage\",\r\n+    },\r\n+    {\r\n+      utterance: \"go back\",\r\n+      response: \"\",\r\n+      action: goBack, // Note the use of an action property\r\n+    },\r\n+    {\r\n+      utterance: \"go forward\",\r\n+      response: \"\",\r\n+      action: goForward,\r\n+    },\r\n+    // {\r\n+    //   utterance: \"play video\",\r\n+    //   // response: \"Playing video.\",\r\n+    //   action: playVideo,\r\n+    // },\r\n+    // {\r\n+    //   utterance: \"pause video\",\r\n+    //   // response: \"Pausing video.\",\r\n+    //   action: pauseVideo,\r\n+    // },\r\n+    // {\r\n+    //   utterance: \"start video\",\r\n+    //   // response: \"Playing video.\",\r\n+    //   action: playVideo,\r\n+    // },\r\n+    // {\r\n+    //   utterance: \"stop video\",\r\n+    //   // response: \"Playing video.\",\r\n+    //   action: pauseVideo,\r\n+    // },\r\n+    {\r\n+      utterance: \"scroll up\",\r\n+      // response: \"Scrolling up.\",\r\n+      action: scrollUp,\r\n+    },\r\n+    {\r\n+      utterance: \"scroll down\",\r\n+      // response: \"Scrolling down.\",\r\n+      action: scrollDown,\r\n+    },\r\n+    {\r\n+      utterance: \"go up\",\r\n+\r\n+      // response: \"Scrolling up.\",\r\n+      action: scrollUp,\r\n+    },\r\n+    {\r\n+      utterance: \"go down\",\r\n+      // response: \"Scrolling down.\",\r\n+      action: scrollDown,\r\n+    },\r\n+    {\r\n+      utterance: \"scroll to top\",\r\n+      action: scrollToTop,\r\n+    },\r\n+    {\r\n+      utterance: \"scroll to bottom\",\r\n+      action: scrollToBottom,\r\n+    },\r\n+    {\r\n+      utterance: \"brane stop\",\r\n+      action: stopListening,\r\n+    },\r\n+    {\r\n+      utterance: \"brane turn off\",\r\n+      action: stopListening,\r\n+    },\r\n+    {\r\n+      utterance: \"brane stop the bot\",\r\n+      action: stopListening,\r\n+    },\r\n+    // {\r\n+    //   utterance: \"mute the video\",\r\n+    //   action: muteVideo,\r\n+    // },\r\n+    // {\r\n+    //   utterance: \"unmute the video\",\r\n+    //   action: unmuteVideo,\r\n+    // },\r\n+    // {\r\n+    //   utterance: \"stop the video sound\",\r\n+    //   action: muteVideo,\r\n+    // },\r\n+    // {\r\n+    //   utterance: \"play the video sound\",\r\n+    //   action: unmuteVideo,\r\n+    // },\r\n+    {\r\n+      utterance: \"play transforming education video\",\r\n+      action: () => controlVideo(\"ourProjectsVideo\", \"play\"),\r\n+    },\r\n+    {\r\n+      utterance: \"start transforming education video\",\r\n+      action: () => controlVideo(\"ourProjectsVideo\", \"play\"),\r\n+    },\r\n+    {\r\n+      utterance: \"pause transforming education video\",\r\n+      action: () => controlVideo(\"ourProjectsVideo\", \"pause\"),\r\n+    },\r\n+    {\r\n+      utterance: \"stop transforming education video\",\r\n+      action: () => controlVideo(\"ourProjectsVideo\", \"pause\"),\r\n+    },\r\n+    {\r\n+      utterance: \"mute transforming education video\",\r\n+      action: () => controlVideo(\"ourProjectsVideo\", \"mute\"),\r\n+    },\r\n+    {\r\n+      utterance: \"unmute transforming education video\",\r\n+      action: () => controlVideo(\"ourProjectsVideo\", \"unmute\"),\r\n+    },\r\n+    {\r\n+      utterance: \"fullscreen transforming education video\",\r\n+      action: () => controlVideo(\"ourProjectsVideo\", \"fullscreen\"),\r\n+    },\r\n+    {\r\n+      utterance: \"exit fullscreen transforming education video\",\r\n+      action: () => controlVideo(\"ourProjectsVideo\", \"exitFullscreen\"),\r\n+    },\r\n+    {\r\n+      utterance: \"increase volume transforming education video\",\r\n+      action: () => controlVideo(\"ourProjectsVideo\", \"increaseVolume\"),\r\n+    },\r\n+    {\r\n+      utterance: \"decrease volume transforming education video\",\r\n+      action: () => controlVideo(\"ourProjectsVideo\", \"decreaseVolume\"),\r\n+    },\r\n+    {\r\n+      utterance: \"play the video about transforming education\",\r\n+      action: () => controlVideo(\"ourProjectsVideo\", \"play\"),\r\n+    },\r\n+    {\r\n+      utterance: \"start the transforming education video\",\r\n+      action: () => controlVideo(\"ourProjectsVideo\", \"play\"),\r\n+    },\r\n+    {\r\n+      utterance: \"can you pause the video on transforming education\",\r\n+      action: () => controlVideo(\"ourProjectsVideo\", \"pause\"),\r\n+    },\r\n+    {\r\n+      utterance: \"stop the video about transforming education\",\r\n+      action: () => controlVideo(\"ourProjectsVideo\", \"pause\"),\r\n+    },\r\n+    {\r\n+      utterance: \"mute the transforming education video\",\r\n+      action: () => controlVideo(\"ourProjectsVideo\", \"mute\"),\r\n+    },\r\n+    {\r\n+      utterance: \"unmute the video on transforming education\",\r\n+      action: () => controlVideo(\"ourProjectsVideo\", \"unmute\"),\r\n+    },\r\n+    {\r\n+      utterance: \"make the transforming education video fullscreen\",\r\n+      action: () => controlVideo(\"ourProjectsVideo\", \"fullscreen\"),\r\n+    },\r\n+    {\r\n+      utterance: \"exit fullscreen on the transforming education video\",\r\n+      action: () => controlVideo(\"ourProjectsVideo\", \"exitFullscreen\"),\r\n+    },\r\n+    {\r\n+      utterance: \"increase the volume of the transforming education video\",\r\n+      action: () => controlVideo(\"ourProjectsVideo\", \"increaseVolume\"),\r\n+    },\r\n+    {\r\n+      utterance: \"decrease the volume of the transforming education video\",\r\n+      action: () => controlVideo(\"ourProjectsVideo\", \"decreaseVolume\"),\r\n+    },\r\n+\r\n+    {\r\n+      utterance: \"play leaders voice video\",\r\n+      action: () => controlVideo(\"leadersVoiceVideo\", \"play\"),\r\n+    },\r\n+    {\r\n+      utterance: \"start leaders voice video\",\r\n+      action: () => controlVideo(\"leadersVoiceVideo\", \"play\"),\r\n+    },\r\n+    {\r\n+      utterance: \"pause leaders voice video\",\r\n+      action: () => controlVideo(\"leadersVoiceVideo\", \"pause\"),\r\n+    },\r\n+    {\r\n+      utterance: \"stop leaders voice video\",\r\n+      action: () => controlVideo(\"leadersVoiceVideo\", \"pause\"),\r\n+    },\r\n+    {\r\n+      utterance: \"mute leaders voice video\",\r\n+      action: () => controlVideo(\"leadersVoiceVideo\", \"mute\"),\r\n+    },\r\n+    {\r\n+      utterance: \"unmute leaders voice video\",\r\n+      action: () => controlVideo(\"leadersVoiceVideo\", \"unmute\"),\r\n+    },\r\n+    {\r\n+      utterance: \"fullscreen leaders voice video\",\r\n+      action: () => controlVideo(\"leadersVoiceVideo\", \"fullscreen\"),\r\n+    },\r\n+    {\r\n+      utterance: \"exit fullscreen leaders voice video\",\r\n+      action: () => controlVideo(\"leadersVoiceVideo\", \"exitFullscreen\"),\r\n+    },\r\n+    {\r\n+      utterance: \"increase volume leaders voice video\",\r\n+      action: () => controlVideo(\"leadersVoiceVideo\", \"increaseVolume\"),\r\n+    },\r\n+    {\r\n+      utterance: \"decrease volume leaders voice video\",\r\n+      action: () => controlVideo(\"leadersVoiceVideo\", \"decreaseVolume\"),\r\n+    },\r\n+\r\n+    {\r\n+      utterance: \"set mobile number to *\",\r\n+      action: (spokenText) => {\r\n+        if (!spokenText) {\r\n+          speak(\"I couldn't understand the command.\");\r\n+          return;\r\n+        }\r\n+        const mobileNumber = extractNumber(spokenText);\r\n+        if (mobileNumber) {\r\n+          setMobileNumber(mobileNumber);\r\n+        } else {\r\n+          speak(\"I couldn't find a number in your command.\");\r\n+        }\r\n+      },\r\n+    },\r\n+    {\r\n+      utterance: \"enter mobile number as *\",\r\n+      action: (spokenText) => {\r\n+        if (!spokenText) {\r\n+          speak(\"I couldn't understand the command.\");\r\n+          return;\r\n+        }\r\n+        const mobileNumber = extractNumber(spokenText);\r\n+        if (mobileNumber) {\r\n+          setMobileNumber(mobileNumber);\r\n+        } else {\r\n+          speak(\"I couldn't find a number in your command.\");\r\n+        }\r\n+      },\r\n+    },\r\n+    {\r\n+      utterance: \"enter my mobile number as *\",\r\n+      action: (spokenText) => {\r\n+        if (!spokenText) {\r\n+          speak(\"I couldn't understand the command.\");\r\n+          return;\r\n+        }\r\n+        const mobileNumber = extractNumber(spokenText);\r\n+        if (mobileNumber) {\r\n+          setMobileNumber(mobileNumber);\r\n+        } else {\r\n+          speak(\"I couldn't find a number in your command.\");\r\n+        }\r\n+      },\r\n+    },\r\n+    {\r\n+      utterance: \"set mobile number as *\",\r\n+      action: (spokenText) => {\r\n+        if (!spokenText) {\r\n+          speak(\"I couldn't understand the command.\");\r\n+          return;\r\n+        }\r\n+        const mobileNumber = extractNumber(spokenText);\r\n+        if (mobileNumber) {\r\n+          setMobileNumber(mobileNumber);\r\n+        } else {\r\n+          speak(\"I couldn't find a number in your command.\");\r\n+        }\r\n+      },\r\n+    },\r\n+    {\r\n+      utterance: \"fill mobile number as *\",\r\n+      action: (spokenText) => {\r\n+        if (!spokenText) {\r\n+          speak(\"I couldn't understand the command.\");\r\n+          return;\r\n+        }\r\n+        const mobileNumber = extractNumber(spokenText);\r\n+        if (mobileNumber) {\r\n+          setMobileNumber(mobileNumber);\r\n+        } else {\r\n+          speak(\"I couldn't find a number in your command.\");\r\n+        }\r\n+      },\r\n+    },\r\n+    {\r\n+      utterance: \"set password as *\",\r\n+      action: (spokenText) => {\r\n+        if (!spokenText) {\r\n+          speak(\"I couldn't understand the command.\");\r\n+          return;\r\n+        }\r\n+        const pin = extractNumber(spokenText);\r\n+        if (pin) {\r\n+          setPin(pin);\r\n+        } else {\r\n+          speak(\"I couldn't find a number in your command.\");\r\n+        }\r\n+      },\r\n+    },\r\n+    {\r\n+      utterance: \"enter password as *\",\r\n+      action: (spokenText) => {\r\n+        if (!spokenText) {\r\n+          speak(\"I couldn't understand the command.\");\r\n+          return;\r\n+        }\r\n+        const pin = extractNumber(spokenText);\r\n+        if (pin) {\r\n+          setPin(pin);\r\n+        } else {\r\n+          speak(\"I couldn't find a number in your command.\");\r\n+        }\r\n+      },\r\n+    },\r\n+    {\r\n+      utterance: \"change password to *\",\r\n+      action: (spokenText) => {\r\n+        if (!spokenText) {\r\n+          speak(\"I couldn't understand the command.\");\r\n+          return;\r\n+        }\r\n+        const pin = extractNumber(spokenText);\r\n+        if (pin) {\r\n+          setPin(pin);\r\n+        } else {\r\n+          speak(\"I couldn't find a number in your command.\");\r\n+        }\r\n+      },\r\n+    },\r\n+    {\r\n+      utterance: \"fill password as *\",\r\n+      action: (spokenText) => {\r\n+        if (!spokenText) {\r\n+          speak(\"I couldn't understand the command.\");\r\n+          return;\r\n+        }\r\n+        const pin = extractNumber(spokenText);\r\n+        if (pin) {\r\n+          setPin(pin);\r\n+        } else {\r\n+          speak(\"I couldn't find a number in your command.\");\r\n+        }\r\n+      },\r\n+    },\r\n+    {\r\n+      utterance: \"set pin as *\",\r\n+      action: (spokenText) => {\r\n+        if (!spokenText) {\r\n+          speak(\"I couldn't understand the command.\");\r\n+          return;\r\n+        }\r\n+        const pin = extractNumber(spokenText);\r\n+        if (pin) {\r\n+          setPin(pin);\r\n+        } else {\r\n+          speak(\"I couldn't find a number in your command.\");\r\n+        }\r\n+      },\r\n+    },\r\n+    {\r\n+      utterance: \"press login\",\r\n+      action: () => {\r\n+        triggerLogin();\r\n+        speak(\"Attempting to log in.\");\r\n+      },\r\n+    },\r\n+    {\r\n+      utterance: \"press record audio\",\r\n+      action: () => {\r\n+        console.log(\"Record Audio command detected\");\r\n+        setTriggerRecordAudio(true);\r\n+      },\r\n+      response: \"Started\"\r\n+    },\r\n+    \r\n+  ];\r\n+\r\n+  return (\r\n+    <div className=\"speech-bot-container\">\r\n+      <div\r\n+        className={`button-container ${\r\n+          isListening ? \"voicebotframeactive\" : \"voicebotframe\"\r\n+        }`}\r\n+      >\r\n+        {/* <button onClick={isListening ? stopListening : startListening}>\r\n+          {isListening ? \"Stop\" : \"Start\"} Animation\r\n+        </button> */}\r\n+        <img\r\n+          className=\"botimage\"\r\n+          src={chatbotimage}\r\n+          alt=\"\"\r\n+          onClick={isListening ? stopListening : startListening}\r\n+        />\r\n+      </div>\r\n+    </div>\r\n+  );\r\n+};\r\n+\r\n+export default VoiceBot;\r\n+\r\n+{\r\n+  /* // import React, { useState, useEffect, useRef } from \"react\";\r\n+// import { useNavigate, useLocation } from \"react-router-dom\";\r\n+// import Fuse from \"fuse.js\";\r\n+// import \"./VoiceBot.css\";\r\n+\r\n+// const VoiceBot = ({ videoRef }) => {\r\n+//   const [isListening, setIsListening] = useState(false);\r\n+//   const [isSpeaking, setIsSpeaking] = useState(false);\r\n+//   const recognition = useRef(null);\r\n+//   const speechSynthesis = useRef(window.speechSynthesis);\r\n+//   const [hasGreeted, setHasGreeted] = useState(false);\r\n+//   const navigate = useNavigate();\r\n+\r\n+//   useEffect(() => {\r\n+//     recognition.current = new window.webkitSpeechRecognition();\r\n+//     recognition.current.continuous = true;\r\n+//     recognition.current.interimResults = false;\r\n+//     recognition.current.onresult = onResult;\r\n+//     recognition.current.onend = onRecognitionEnd;\r\n+//     recognition.current.starting = false;\r\n+\r\n+//     // Simplified error handling, removed specific handling for 'no-speech'\r\n+//     recognition.current.onerror = (event) => {\r\n+//       console.error(\"Recognition error:\", event.error);\r\n+//       // Check if listening is true and the bot isn't speaking\r\n+//       if (isListening && !isSpeaking) {\r\n+//         // Restart recognition\r\n+//         restartRecognition();\r\n+//       }\r\n+//     };\r\n+\r\n+//     return () => {\r\n+//       if (recognition.current) {\r\n+//         recognition.current.abort();\r\n+//       }\r\n+//     };\r\n+//   }, []);\r\n+\r\n+//   useEffect(() => {\r\n+//     const checkRecognition = () => {\r\n+//       if (isListening && !isSpeaking && !recognition.current.starting) {\r\n+//         console.log(\"Restarting recognition because it's not active.\");\r\n+//         recognition.current.starting = true;\r\n+//         recognition.current.start();\r\n+//         console.log(\"Restarted recognition.\");\r\n+//       }\r\n+//     };\r\n+\r\n+//     const recognitionCheckInterval = setInterval(checkRecognition, 100); // Check every 1 second\r\n+\r\n+//     return () => {\r\n+//       clearInterval(recognitionCheckInterval);\r\n+//     };\r\n+//   }, [isListening, isSpeaking]);\r\n+\r\n+//   const restartRecognition = () => {\r\n+//     if (recognition.current.starting) {\r\n+//       console.log(\"Recognition is already starting or running.\");\r\n+//       return;\r\n+//     }\r\n+\r\n+//     recognition.current.abort(); // Stop any existing recognition process\r\n+//     recognition.current.starting = true;\r\n+//     recognition.current.start();\r\n+//     console.log(\"Recognition restarted.\");\r\n+//   };\r\n+\r\n+//   const historyStack = useRef([]);\r\n+\r\n+//   useEffect(() => {\r\n+//     return () => {\r\n+//       // Clean up the listener when the component unmounts\r\n+//       window.removeEventListener(\"popstate\", handlePopState);\r\n+//     };\r\n+//   }, []);\r\n+\r\n+//   const handlePopState = () => {\r\n+//     // This needs to handle both back and forward browser actions\r\n+//     // Use some logic to determine whether it's a back or forward action\r\n+//     // For simplicity, assume it's always back\r\n+//     historyStack.current.pop();\r\n+//     forwardStack.current.length = 0; // Clear forward stack on manual navigation\r\n+//   };\r\n+  \r\n+\r\n+//   // Add a new entry to the stack whenever navigate is called\r\n+//   const customNavigate = (to, options) => {\r\n+//     historyStack.current.push(to);\r\n+//     navigate(to, options);\r\n+//   };\r\n+\r\n+//   // Listen to popstate events to update the history stack\r\n+//   useEffect(() => {\r\n+//     window.addEventListener(\"popstate\", handlePopState);\r\n+//   }, []);\r\n+\r\n+//   const forwardStack = useRef([]);\r\n+\r\n+//   const goBack = () => {\r\n+//     if (window.history.state && window.history.state.idx > 0) {\r\n+//       window.history.back();\r\n+//       speak(\"Going back\");\r\n+//     } else {\r\n+//       speak(\"Can't go back any further.\");\r\n+//     }\r\n+//   };\r\n+\r\n+//   const goForward = () => {\r\n+//     if (window.history.state && window.history.state.idx < window.history.length - 1) {\r\n+//       window.history.forward();\r\n+//       speak(\"Going forward\");\r\n+//     } else {\r\n+//       speak(\"No forward history available.\");\r\n+//     }\r\n+//   };\r\n+\r\n+//   const playVideo = () => {\r\n+//     if (videoRef.current) {\r\n+//       videoRef.current.play();\r\n+//       speak(\"Playing video.\");\r\n+//     } else {\r\n+//       speak(\"No video to play.\");\r\n+//     }\r\n+//   };\r\n+\r\n+//   const pauseVideo = () => {\r\n+//     if (videoRef.current) {\r\n+//       videoRef.current.pause();\r\n+//       speak(\"Video paused.\");\r\n+//     } else {\r\n+//       speak(\"No video to pause.\");\r\n+//     }\r\n+//   };\r\n+\r\n+//   const scrollAmount = window.innerHeight * 0.82;\r\n+\r\n+//   const scrollUp = () => {\r\n+//     if (window.pageYOffset === 0) {\r\n+//       speak(\"Already at the top of the page.\");\r\n+//     } else {\r\n+//       window.scrollBy(0, -scrollAmount);\r\n+//       speak(\"Scrolled up.\");\r\n+//     }\r\n+//   };\r\n+\r\n+//   const scrollDown = () => {\r\n+//     const maxScrollTop =\r\n+//       document.documentElement.scrollHeight - window.innerHeight;\r\n+//     if (window.pageYOffset >= maxScrollTop) {\r\n+//       speak(\"Already at the bottom of the page.\");\r\n+//     } else {\r\n+//       window.scrollBy(0, scrollAmount);\r\n+//       speak(\"Scrolled down.\");\r\n+//     }\r\n+//   };\r\n+\r\n+//   const scrollToTop = () => {\r\n+//     if (window.pageYOffset === 0) {\r\n+//       speak(\"Already at the top of the page.\");\r\n+//     } else {\r\n+//       window.scrollTo(0, 0);\r\n+//       speak(\"Scrolled to the top of the page.\");\r\n+//     }\r\n+//   };\r\n+\r\n+//   const scrollToBottom = () => {\r\n+//     const maxScrollTop =\r\n+//       document.documentElement.scrollHeight - window.innerHeight;\r\n+//     if (window.pageYOffset >= maxScrollTop) {\r\n+//       speak(\"Already at the bottom of the page.\");\r\n+//     } else {\r\n+//       window.scrollTo(0, document.body.scrollHeight);\r\n+//       speak(\"Scrolled to the bottom of the page.\");\r\n+//     }\r\n+//   };\r\n+\r\n+//   const speak = (message) => {\r\n+//     console.log(\"speak function called with message:\", message);\r\n+//     const utterance = new SpeechSynthesisUtterance(message);\r\n+//     utterance.onend = () => {\r\n+//       setIsSpeaking(false);\r\n+//       console.log(\"Speaking ended.\");\r\n+//       if (isListening && !recognition.current.starting) {\r\n+//         console.log(\"Restarting recognition after speaking.\");\r\n+//         recognition.current.starting = true;\r\n+//         recognition.current.start();\r\n+//         console.log(\"Restarted recognition after speaking.\");\r\n+//       }\r\n+//     };\r\n+\r\n+//     setIsSpeaking(true);\r\n+//     console.log(\"Speaking started.\");\r\n+//     recognition.current.stop(); // Ensure to stop recognition before speaking\r\n+//     speechSynthesis.current.speak(utterance);\r\n+//   };\r\n+\r\n+//   const onResult = (event) => {\r\n+//     const resultIndex = event.resultIndex;\r\n+//     const transcript = event.results[resultIndex][0].transcript\r\n+//       .trim()\r\n+//       .toLowerCase();\r\n+\r\n+//     if (event.results[resultIndex].isFinal) {\r\n+//       console.log(`Recognized text: ${transcript}`);\r\n+//       if (transcript.includes(\"brain\")) {\r\n+//         console.log(\"Wake word heard, processing command...\");\r\n+//         handleCommandWithFuse(transcript.replace(\"brain\", \"\"));\r\n+//       }\r\n+//     }\r\n+//   };\r\n+\r\n+//   const onRecognitionEnd = () => {\r\n+//     recognition.current.starting = false;\r\n+//     if (isListening && !isSpeaking) {\r\n+//       restartRecognition();\r\n+//     }\r\n+//   };\r\n+\r\n+//   useEffect(() => {\r\n+//     if (isListening) {\r\n+//       if (!hasGreeted) {\r\n+//         speak(\"Hello, I'm Brane. How can I help you today?\");\r\n+//         setHasGreeted(true);\r\n+//       } else {\r\n+//         speak(\"Listening.\");\r\n+//       }\r\n+//     }\r\n+//   }, [isListening, hasGreeted]);\r\n+\r\n+\r\n+//   const startListening = () => {\r\n+//     if (!recognition.current.starting) {\r\n+//       setIsListening(true);\r\n+//       restartRecognition();\r\n+//     }\r\n+//   };\r\n+\r\n+//   const stopListening = () => {\r\n+//     setIsListening(false);\r\n+//     recognition.current.abort();\r\n+//     if (speechSynthesis.current.speaking) {\r\n+//       speechSynthesis.current.cancel();\r\n+//     }\r\n+//   };\r\n+\r\n+//   const handleCommandWithFuse = (command) => {\r\n+//     const fuse = new Fuse(commands, { keys: [\"utterance\"], threshold: 0.4 });\r\n+//     const results = fuse.search(command);\r\n+//     const foundCommand = results.length ? results[0].item : null;\r\n+\r\n+//     if (foundCommand) {\r\n+//       console.log(\"Command found:\", foundCommand.utterance);\r\n+\r\n+//       if (foundCommand.action) {\r\n+//         foundCommand.action();\r\n+//       } else if (foundCommand.route) {\r\n+//         navigate(foundCommand.route);\r\n+//       }\r\n+\r\n+//       // Speak after performing the action or navigation\r\n+//       speak(foundCommand.response);\r\n+//     } else {\r\n+//       console.log(\"No command found.\");\r\n+//       speak(\"I'm not sure how to respond to that.\");\r\n+//     }\r\n+//   };\r\n+\r\n+//   const commands = [\r\n+//     {\r\n+//       utterance: \"Hello who are you ?\",\r\n+\r\n+//       response:\r\n+//         \"Hi! This is Brane! your Voice bot from Brane Education How can I Assist you Today ?\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"Hello\",\r\n+\r\n+//       response: \"Hi! How can I assist you today?\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"hello\",\r\n+\r\n+//       response: \"Hi! How can I assist you today?\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"Hi.\",\r\n+\r\n+//       response: \"Hello! How can I assist you today?\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"Hey there\",\r\n+\r\n+//       response: \"Hi! How can I assist you today?\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"Good morning Brane.\",\r\n+\r\n+//       response: \"Hey Hiii! Good morning  ! How can I help you?\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"Good afternoon Brane.\",\r\n+\r\n+//       response: \"Hey Hiii! Good after noon ! How can I help you?\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"Good evening Brane.\",\r\n+\r\n+//       response: \"Hey Hiii! Good evening ! How can I help you?\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"can you please take me to login page\",\r\n+\r\n+//       route: \"/login\",\r\n+\r\n+//       response: \"Here's the Login Page, Please Login\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"please take me to login page\",\r\n+\r\n+//       route: \"/login\",\r\n+\r\n+//       response: \"Here's the Login Page, Please Login\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"Go to login page\",\r\n+\r\n+//       route: \"/login\",\r\n+\r\n+//       response: \"Here's the Login Page, Please Login\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"open login page\",\r\n+\r\n+//       route: \"/login\",\r\n+\r\n+//       response: \"Here's the Login Page, Please Login\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"can you please take me to signup page\",\r\n+\r\n+//       route: \"/signup\",\r\n+\r\n+//       response: \"Here's the signup page. Please proceed With Registration.\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"take me to signup page\",\r\n+\r\n+//       route: \"/signup\",\r\n+\r\n+//       response: \"Here's the signup page. Please proceed With Registration.\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"Go to signup page\",\r\n+\r\n+//       route: \"/signup\",\r\n+\r\n+//       response: \"Here's the signup page. Please proceed With Registration.\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"open signup page\",\r\n+\r\n+//       route: \"/signup\",\r\n+\r\n+//       response: \"Here's the signup page. Please proceed With Registration.\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"Go to face id\",\r\n+\r\n+//       route: \"/login/faceid\",\r\n+\r\n+//       response: \"Here's Face ID Login. Please proceed.\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"Go to face id login\",\r\n+\r\n+//       route: \"/login/faceid\",\r\n+\r\n+//       response: \"Here's Face ID Login. Please proceed.\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"login with face id\",\r\n+\r\n+//       route: \"/login/faceid\",\r\n+\r\n+//       response: \"Here's Face ID Login. Please proceed.\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"login with face\",\r\n+\r\n+//       route: \"/login/faceid\",\r\n+\r\n+//       response: \"Here's Face ID Login. Please proceed.\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"i want to login with face\",\r\n+\r\n+//       route: \"/login/faceid\",\r\n+\r\n+//       response: \"Here's Face ID Login. Please proceed.\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"login with voice\",\r\n+\r\n+//       route: \"/login/voiceid\",\r\n+\r\n+//       response: \"Here's Voice Login. Please proceed.\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"i want to login with voice\",\r\n+\r\n+//       route: \"/login/voiceid\",\r\n+\r\n+//       response: \"Here's Voice Login. Please proceed.\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"go to voice login\",\r\n+\r\n+//       route: \"/login/voiceid\",\r\n+\r\n+//       response: \"Here's Voice Login. Please proceed.\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"login with voice\",\r\n+\r\n+//       route: \"/login/voiceid\",\r\n+\r\n+//       response: \"Here's Voice Login. Please proceed.\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"login with mobile\",\r\n+\r\n+//       route: \"/login/mobile\",\r\n+\r\n+//       response: \"Here's Mobile Login. Please proceed.\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"i want to login with mobile\",\r\n+\r\n+//       route: \"/login/mobile\",\r\n+\r\n+//       response: \"Here's Mobile Login. Please proceed.\",\r\n+//     },\r\n+//     {\r\n+//       utterance: \"go to mobile login\",\r\n+\r\n+//       route: \"/login/mobile\",\r\n+\r\n+//       response: \"Here's Mobile Login. Please proceed.\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"what are platform features\",\r\n+\r\n+//       response:\r\n+//         \"Dashboard, Dynamic time table, Learning Networks, Little Masters, Video Based Dictionary, General Search.\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"Features of platform\",\r\n+\r\n+//       response:\r\n+//         \"Dashboard, Dynamic time table, Learning Networks, Little Masters, Video Based Dictionary, General Search.\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"What does the platform offer\",\r\n+\r\n+//       response:\r\n+//         \"Dashboard, Dynamic time table, Learning Networks, Little Masters, Video Based Dictionary, General Search.\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"Say me the features of platform\",\r\n+\r\n+//       response:\r\n+//         \"Dashboard, Dynamic time table, Learning Networks, Little Masters, Video Based Dictionary, General Search.\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"Say me the services of platform\",\r\n+\r\n+//       response:\r\n+//         \"Dashboard, Dynamic time table, Learning Networks, Little Masters, Video Based Dictionary, General Search.\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"tell me the services offered by the platform\",\r\n+\r\n+//       response:\r\n+//         \"Dashboard, Dynamic time table, Learning Networks, Little Masters, Video Based Dictionary, General Search.\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"explain platform services\",\r\n+\r\n+//       response:\r\n+//         \"Dashboard, Dynamic time table, Learning Networks, Little Masters, Video Based Dictionary, General Search.\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"Give me the Parent voice of Julia Harris\",\r\n+\r\n+//       response:\r\n+//         \"Brane education has helped my son a lot in his studies. He improved a lot in his studies and is now able to score good marks in his exams\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"Play today's motivational video\",\r\n+\r\n+//       response: \"I am playing the video\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"Play today's video\",\r\n+\r\n+//       response: \"I am playing Motivational video\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"Leaders Voice\",\r\n+\r\n+//       response:\r\n+//         \"This Voice-interactive AI Platform is a game Changer. It revolutionizes education.\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"Curriculum Supported by Brane Education\",\r\n+\r\n+//       response:\r\n+//         \"we support multiple Boards let me say few Telangana State Board Andhra Pradesh Board Maharashtra Board Assam Board\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"Boards supported by the platform\",\r\n+\r\n+//       response:\r\n+//         \"we support multiple Boards let me say few Telangana State Board Andhra Pradesh Board Maharashtra Board Assam Board\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"Curriculum\",\r\n+\r\n+//       response:\r\n+//         \"we support multiple Boards let me say few Telangana State Board Andhra Pradesh Board Maharashtra Board Assam Board\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"Go to landing page\",\r\n+\r\n+//       response: \"Okay, I am taking you to the landing page.\",\r\n+\r\n+//       route: \"/childpage\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"take me to landing page\",\r\n+\r\n+//       response: \"Okay, I am taking you to the landing page.\",\r\n+\r\n+//       route: \"/childpage\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"move to landing page\",\r\n+\r\n+//       response: \"Okay, I am taking you to the landing page.\",\r\n+\r\n+//       route: \"/childpage\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"roll back to landing page\",\r\n+\r\n+//       response: \"Okay, I am taking you to the landing page.\",\r\n+\r\n+//       route: \"/childpage\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"move to landing page\",\r\n+\r\n+//       response: \"Okay, I am taking you to the landing page.\",\r\n+\r\n+//       route: \"/childpage\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"what is today's quote\",\r\n+\r\n+//       response:\r\n+//         \"Determination is the power that sees us through all our frustration and obstacles. It helps in building our willpower which is the very basis of success.\",\r\n+\r\n+//       route: \"/childpage\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"Today's Inspirational quote\",\r\n+\r\n+//       response:\r\n+//         \"Determination is the power that sees us through all our frustration and obstacles. It helps in building our willpower which is the very basis of success.\",\r\n+\r\n+//       route: \"/childpage\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"say me today's quote\",\r\n+\r\n+//       response:\r\n+//         \"Determination is the power that sees us through all our frustration and obstacles. It helps in building our willpower which is the very basis of success.\",\r\n+\r\n+//       route: \"/childpage\",\r\n+//     },\r\n+//     {\r\n+//       utterance: \"go back\",\r\n+//       response: \"\",\r\n+//       action: goBack, // Note the use of an action property\r\n+//     },\r\n+//     {\r\n+//       utterance: \"go forward\",\r\n+//       response: \"\",\r\n+//       action: goForward,\r\n+//     },\r\n+//     {\r\n+//       utterance: \"play video\",\r\n+//       // response: \"Playing video.\",\r\n+//       action: playVideo,\r\n+//     },\r\n+//     {\r\n+//       utterance: \"pause video\",\r\n+//       // response: \"Pausing video.\",\r\n+//       action: pauseVideo,\r\n+//     },\r\n+//     {\r\n+//       utterance: \"start video\",\r\n+//       // response: \"Playing video.\",\r\n+//       action: playVideo,\r\n+//     },\r\n+//     {\r\n+//       utterance: \"stop video\",\r\n+//       // response: \"Playing video.\",\r\n+//       action: pauseVideo,\r\n+//     },\r\n+//     {\r\n+//       utterance: \"scroll up\",\r\n+//       // response: \"Scrolling up.\",\r\n+//       action: scrollUp,\r\n+//     },\r\n+//     {\r\n+//       utterance: \"scroll down\",\r\n+//       // response: \"Scrolling down.\",\r\n+//       action: scrollDown,\r\n+//     },\r\n+//     {\r\n+//       utterance: \"go up\",\r\n+\r\n+//       // response: \"Scrolling up.\",\r\n+//       action: scrollUp,\r\n+//     },\r\n+//     {\r\n+//       utterance: \"go down\",\r\n+//       // response: \"Scrolling down.\",\r\n+//       action: scrollDown,\r\n+//     },\r\n+//     {\r\n+//       utterance: \"scroll to top\",\r\n+//       action: scrollToTop,\r\n+//     },\r\n+//     {\r\n+//       utterance: \"scroll to bottom\",\r\n+//       action: scrollToBottom,\r\n+//     },\r\n+//     {\r\n+//       utterance: \"brane stop\",\r\n+//       action: stopListening,\r\n+//     },\r\n+//     {\r\n+//       utterance: \"brane turn off\",\r\n+//       action: stopListening,\r\n+//     },\r\n+//     {\r\n+//       utterance: \"brane stop the bot\",\r\n+//       action: stopListening,\r\n+//     },\r\n+//   ];\r\n+\r\n+//   return (\r\n+//     <div className=\"speech-bot-container\">\r\n+//       <div\r\n+//         className={`button-container ${\r\n+//           isListening ? \"voicebotframeactive\" : \"voicebotframe\"\r\n+//         }`}\r\n+//       >\r\n+//         <button onClick={isListening ? stopListening : startListening}>\r\n+//           {isListening ? \"Stop\" : \"Start\"} Animation\r\n+//         </button>\r\n+//         {/* <button onClick={toggleBotActive}>\r\n+//         {isBotActive ? 'Deactivate Bot' : 'Activate Bot'}\r\n+//       </button> \r\n+//       </div>\r\n+//     </div>\r\n+//   );\r\n+// };\r\n+\r\n+// export default VoiceBot; */\r\n+}\r\n+\r\n+//iska v1\r\n+\r\n+// import React, { useState, useEffect, useRef } from \"react\";\r\n+// import { useNavigate, useLocation } from \"react-router-dom\";\r\n+// import Fuse from \"fuse.js\";\r\n+// import \"./VoiceBot.css\";\r\n+\r\n+// const VoiceBot = ({ videoRef}) => {\r\n+//   const [isListening, setIsListening] = useState(false);\r\n+//   const [isSpeaking, setIsSpeaking] = useState(false);\r\n+//   const recognition = useRef(null);\r\n+//   const speechSynthesis = useRef(window.speechSynthesis);\r\n+//   const [hasGreeted, setHasGreeted] = useState(false);\r\n+//   const navigate = useNavigate();\r\n+\r\n+//  // Initialize speech recognition\r\n+//  useEffect(() => {\r\n+//   recognition.current = new window.webkitSpeechRecognition();\r\n+//   recognition.current.continuous = true;\r\n+//   recognition.current.interimResults = false;\r\n+//   recognition.current.onresult = onResult;\r\n+//   recognition.current.onend = onRecognitionEnd;\r\n+//   recognition.current.starting = false;\r\n+\r\n+//   recognition.current.onerror = (event) => {\r\n+//     console.error(\"Recognition error:\", event.error);\r\n+//     if (isListening && !isSpeaking) {\r\n+//       restartRecognition();\r\n+//     }\r\n+//   };\r\n+\r\n+//   return () => {\r\n+//     if (recognition.current) {\r\n+//       recognition.current.abort();\r\n+//     }\r\n+//   };\r\n+// }, []);\r\n+\r\n+//   // useEffect(() => {\r\n+//   //   const checkRecognition = () => {\r\n+//   //     if (isListening && !isSpeaking && !recognition.current.starting) {\r\n+//   //       console.log(\"Restarting recognition because it's not active.\");\r\n+//   //       recognition.current.starting = true;\r\n+//   //       recognition.current.start();\r\n+//   //       console.log(\"Restarted recognition.\");\r\n+//   //     }\r\n+//   //   };\r\n+\r\n+//   //   const recognitionCheckInterval = setInterval(checkRecognition, 100); // Check every .5 second\r\n+\r\n+//   //   return () => {\r\n+//   //     clearInterval(recognitionCheckInterval);\r\n+//   //   };\r\n+//   // }, [isListening, isSpeaking]);\r\n+\r\n+//   const historyStack = useRef([]);\r\n+\r\n+//   useEffect(() => {\r\n+//     return () => {\r\n+//       // Clean up the listener when the component unmounts\r\n+//       window.removeEventListener(\"popstate\", handlePopState);\r\n+//     };\r\n+//   }, []);\r\n+\r\n+//   const handlePopState = () => {\r\n+//     // This needs to handle both back and forward browser actions\r\n+//     // Use some logic to determine whether it's a back or forward action\r\n+//     // For simplicity, assume it's always back\r\n+//     historyStack.current.pop();\r\n+//     forwardStack.current.length = 0; // Clear forward stack on manual navigation\r\n+//   };\r\n+\r\n+//   // Add a new entry to the stack whenever navigate is called\r\n+//   const customNavigate = (to, options) => {\r\n+//     historyStack.current.push(to);\r\n+//     navigate(to, options);\r\n+//   };\r\n+\r\n+//   // Listen to popstate events to update the history stack\r\n+//   useEffect(() => {\r\n+//     window.addEventListener(\"popstate\", handlePopState);\r\n+//   }, []);\r\n+\r\n+//   const forwardStack = useRef([]);\r\n+\r\n+//   const goBack = () => {\r\n+//     if (window.history.state && window.history.state.idx > 0) {\r\n+//       window.history.back();\r\n+//       speak(\"Going back\");\r\n+//     } else {\r\n+//       speak(\"Can't go back any further.\");\r\n+//     }\r\n+//   };\r\n+\r\n+//   const goForward = () => {\r\n+//     if (window.history.state && window.history.state.idx < window.history.length - 1) {\r\n+//       window.history.forward();\r\n+//       speak(\"Going forward\");\r\n+//     } else {\r\n+//       speak(\"No forward history available.\");\r\n+//     }\r\n+//   };\r\n+\r\n+//   const playVideo = () => {\r\n+//     if (videoRef.current) {\r\n+//       videoRef.current.play();\r\n+//       speak(\"Playing video.\");\r\n+//     } else {\r\n+//       speak(\"No video to play.\");\r\n+//     }\r\n+//   };\r\n+\r\n+//   const pauseVideo = () => {\r\n+//     if (videoRef.current) {\r\n+//       videoRef.current.pause();\r\n+//       speak(\"Video paused.\");\r\n+//     } else {\r\n+//       speak(\"No video to pause.\");\r\n+//     }\r\n+//   };\r\n+\r\n+//   const scrollAmount = window.innerHeight * 0.82;\r\n+\r\n+//   const scrollUp = () => {\r\n+//     if (window.pageYOffset === 0) {\r\n+//       speak(\"Already at the top of the page.\");\r\n+//     } else {\r\n+//       window.scrollBy(0, -scrollAmount);\r\n+//       speak(\"Scrolled up.\");\r\n+//     }\r\n+//   };\r\n+\r\n+//   const scrollDown = () => {\r\n+//     const maxScrollTop =\r\n+//       document.documentElement.scrollHeight - window.innerHeight;\r\n+//     if (window.pageYOffset >= maxScrollTop) {\r\n+//       speak(\"Already at the bottom of the page.\");\r\n+//     } else {\r\n+//       window.scrollBy(0, scrollAmount);\r\n+//       speak(\"Scrolled down.\");\r\n+//     }\r\n+//   };\r\n+\r\n+//   const scrollToTop = () => {\r\n+//     if (window.pageYOffset === 0) {\r\n+//       speak(\"Already at the top of the page.\");\r\n+//     } else {\r\n+//       window.scrollTo(0, 0);\r\n+//       speak(\"Scrolled to the top of the page.\");\r\n+//     }\r\n+//   };\r\n+\r\n+//   const scrollToBottom = () => {\r\n+//     const maxScrollTop =\r\n+//       document.documentElement.scrollHeight - window.innerHeight;\r\n+//     if (window.pageYOffset >= maxScrollTop) {\r\n+//       speak(\"Already at the bottom of the page.\");\r\n+//     } else {\r\n+//       window.scrollTo(0, document.body.scrollHeight);\r\n+//       speak(\"Scrolled to the bottom of the page.\");\r\n+//     }\r\n+//   };\r\n+\r\n+//   const speak = (message) => {\r\n+//     const utterance = new SpeechSynthesisUtterance(message);\r\n+//     utterance.onend = () => {\r\n+//       setIsSpeaking(false);\r\n+//       // Restart recognition after speaking has ended\r\n+//       if (isListening) {\r\n+//         restartRecognition();\r\n+//       }\r\n+//     };\r\n+\r\n+//     setIsSpeaking(true);\r\n+//     // Stop recognition when the bot starts speaking\r\n+//     if (recognition.current) {\r\n+//       recognition.current.abort();\r\n+//     }\r\n+//     speechSynthesis.current.speak(utterance);\r\n+//   };\r\n+\r\n+//   const restartRecognition = () => {\r\n+//     // Check if recognition is not already started and if the bot is set to listen\r\n+//     if (recognition.current && !recognition.current.starting && isListening && !isSpeaking) {\r\n+//       // Only start recognition if it's not already active\r\n+//       if (recognition.current.state !== 'active') {\r\n+//         recognition.current.abort(); // Ensure any ongoing recognition is stopped\r\n+//         recognition.current.starting = true;\r\n+//         recognition.current.start();\r\n+//       }\r\n+//     }\r\n+//   };\r\n+\r\n+//     // Restart recognition when bot finishes speaking and isListening is true\r\n+//     useEffect(() => {\r\n+//       if (!isSpeaking && isListening) {\r\n+//         restartRecognition();\r\n+//       }\r\n+//     }, [isSpeaking, isListening]);\r\n+\r\n+//   const onResult = (event) => {\r\n+//     const resultIndex = event.resultIndex;\r\n+//     const transcript = event.results[resultIndex][0].transcript\r\n+//       .trim()\r\n+//       .toLowerCase();\r\n+\r\n+//     if (event.results[resultIndex].isFinal) {\r\n+//       console.log(`Recognized text: ${transcript}`);\r\n+//       if (transcript.includes(\"brain\")) {\r\n+//         console.log(\"Wake word heard, processing command...\");\r\n+//         handleCommandWithFuse(transcript.replace(\"brain\", \"\"));\r\n+//       }\r\n+//     }\r\n+//   };\r\n+\r\n+//   const onRecognitionEnd = () => {\r\n+//     recognition.current.starting = false;\r\n+//     if (isListening && !isSpeaking) {\r\n+//       restartRecognition();\r\n+//     }\r\n+//   };\r\n+\r\n+//   useEffect(() => {\r\n+//     if (isListening && !hasGreeted) {\r\n+//       speak(\"Hello, I'm Brane. How can I help you today?\");\r\n+//       setHasGreeted(true);\r\n+//     }\r\n+//   }, [isListening, hasGreeted]);\r\n+\r\n+// // Updated startListening function\r\n+// const startListening = () => {\r\n+//   setIsListening(true);\r\n+//   if (recognition.current && !recognition.current.starting) {\r\n+//     recognition.current.start();\r\n+//   }\r\n+// };\r\n+\r\n+// // Updated stopListening function\r\n+// const stopListening = () => {\r\n+//   setIsListening(false);\r\n+//   setIsSpeaking(false); // Reset speaking state\r\n+//   setHasGreeted(false); // Reset greeting state if needed\r\n+//   if (recognition.current) {\r\n+//     recognition.current.abort(); // Stop any ongoing speech recognition\r\n+//   }\r\n+//   if (speechSynthesis.current.speaking) {\r\n+//     speechSynthesis.current.cancel(); // Stop any ongoing speech synthesis\r\n+//   }\r\n+// };\r\n+\r\n+//   const handleCommandWithFuse = (command) => {\r\n+//     const fuse = new Fuse(commands, { keys: [\"utterance\"], threshold: 0.4 });\r\n+//     const results = fuse.search(command);\r\n+//     const foundCommand = results.length ? results[0].item : null;\r\n+\r\n+//     if (foundCommand) {\r\n+//       console.log(\"Command found:\", foundCommand.utterance);\r\n+\r\n+//       if (foundCommand.action) {\r\n+//         foundCommand.action();\r\n+//       } else if (foundCommand.route) {\r\n+//         navigate(foundCommand.route);\r\n+//       }\r\n+\r\n+//       // Speak after performing the action or navigation\r\n+//       speak(foundCommand.response);\r\n+//     } else {\r\n+//       console.log(\"No command found.\");\r\n+//       speak(\"I'm not sure how to respond to that.\");\r\n+//     }\r\n+//   };\r\n+\r\n+//   const commands = [\r\n+//     {\r\n+//       utterance: \"Hello who are you ?\",\r\n+\r\n+//       response:\r\n+//         \"Hi! This is Brane! your Voice bot from Brane Education How can I Assist you Today ?\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"Hello\",\r\n+\r\n+//       response: \"Hi! How can I assist you today?\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"hello\",\r\n+\r\n+//       response: \"Hi! How can I assist you today?\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"Hi.\",\r\n+\r\n+//       response: \"Hello! How can I assist you today?\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"Hey there\",\r\n+\r\n+//       response: \"Hi! How can I assist you today?\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"Good morning Brane.\",\r\n+\r\n+//       response: \"Hey Hiii! Good morning  ! How can I help you?\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"Good afternoon Brane.\",\r\n+\r\n+//       response: \"Hey Hiii! Good after noon ! How can I help you?\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"Good evening Brane.\",\r\n+\r\n+//       response: \"Hey Hiii! Good evening ! How can I help you?\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"can you please take me to login page\",\r\n+\r\n+//       route: \"/login\",\r\n+\r\n+//       response: \"Here's the Login Page, Please Login\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"please take me to login page\",\r\n+\r\n+//       route: \"/login\",\r\n+\r\n+//       response: \"Here's the Login Page, Please Login\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"Go to login page\",\r\n+\r\n+//       route: \"/login\",\r\n+\r\n+//       response: \"Here's the Login Page, Please Login\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"open login page\",\r\n+\r\n+//       route: \"/login\",\r\n+\r\n+//       response: \"Here's the Login Page, Please Login\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"can you please take me to signup page\",\r\n+\r\n+//       route: \"/signup\",\r\n+\r\n+//       response: \"Here's the signup page. Please proceed With Registration.\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"take me to signup page\",\r\n+\r\n+//       route: \"/signup\",\r\n+\r\n+//       response: \"Here's the signup page. Please proceed With Registration.\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"Go to signup page\",\r\n+\r\n+//       route: \"/signup\",\r\n+\r\n+//       response: \"Here's the signup page. Please proceed With Registration.\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"open signup page\",\r\n+\r\n+//       route: \"/signup\",\r\n+\r\n+//       response: \"Here's the signup page. Please proceed With Registration.\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"Go to face id\",\r\n+\r\n+//       route: \"/login/faceid\",\r\n+\r\n+//       response: \"Here's Face ID Login. Please proceed.\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"Go to face id login\",\r\n+\r\n+//       route: \"/login/faceid\",\r\n+\r\n+//       response: \"Here's Face ID Login. Please proceed.\",\r\n+//     },\r\n+//     {\r\n+//       utterance: \"Go to face login\",\r\n+\r\n+//       route: \"/login/faceid\",\r\n+\r\n+//       response: \"Here's Face ID Login. Please proceed.\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"login with face id\",\r\n+\r\n+//       route: \"/login/faceid\",\r\n+\r\n+//       response: \"Here's Face ID Login. Please proceed.\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"login with face\",\r\n+\r\n+//       route: \"/login/faceid\",\r\n+\r\n+//       response: \"Here's Face ID Login. Please proceed.\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"i want to login with face\",\r\n+\r\n+//       route: \"/login/faceid\",\r\n+\r\n+//       response: \"Here's Face ID Login. Please proceed.\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"login with voice\",\r\n+\r\n+//       route: \"/login/voiceid\",\r\n+\r\n+//       response: \"Here's Voice Login. Please proceed.\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"i want to login with voice\",\r\n+\r\n+//       route: \"/login/voiceid\",\r\n+\r\n+//       response: \"Here's Voice Login. Please proceed.\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"go to voice login\",\r\n+\r\n+//       route: \"/login/voiceid\",\r\n+\r\n+//       response: \"Here's Voice Login. Please proceed.\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"login with voice\",\r\n+\r\n+//       route: \"/login/voiceid\",\r\n+\r\n+//       response: \"Here's Voice Login. Please proceed.\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"login with mobile\",\r\n+\r\n+//       route: \"/login/mobile\",\r\n+\r\n+//       response: \"Here's Mobile Login. Please proceed.\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"i want to login with mobile\",\r\n+\r\n+//       route: \"/login/mobile\",\r\n+\r\n+//       response: \"Here's Mobile Login. Please proceed.\",\r\n+//     },\r\n+//     {\r\n+//       utterance: \"go to mobile login\",\r\n+\r\n+//       route: \"/login/mobile\",\r\n+\r\n+//       response: \"Here's Mobile Login. Please proceed.\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"what are platform features\",\r\n+\r\n+//       response:\r\n+//         \"Dashboard, Dynamic time table, Learning Networks, Little Masters, Video Based Dictionary, General Search.\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"Features of platform\",\r\n+\r\n+//       response:\r\n+//         \"Dashboard, Dynamic time table, Learning Networks, Little Masters, Video Based Dictionary, General Search.\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"What does the platform offer\",\r\n+\r\n+//       response:\r\n+//         \"Dashboard, Dynamic time table, Learning Networks, Little Masters, Video Based Dictionary, General Search.\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"Say me the features of platform\",\r\n+\r\n+//       response:\r\n+//         \"Dashboard, Dynamic time table, Learning Networks, Little Masters, Video Based Dictionary, General Search.\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"Say me the services of platform\",\r\n+\r\n+//       response:\r\n+//         \"Dashboard, Dynamic time table, Learning Networks, Little Masters, Video Based Dictionary, General Search.\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"tell me the services offered by the platform\",\r\n+\r\n+//       response:\r\n+//         \"Dashboard, Dynamic time table, Learning Networks, Little Masters, Video Based Dictionary, General Search.\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"explain platform services\",\r\n+\r\n+//       response:\r\n+//         \"Dashboard, Dynamic time table, Learning Networks, Little Masters, Video Based Dictionary, General Search.\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"Give me the Parent voice of Julia Harris\",\r\n+\r\n+//       response:\r\n+//         \"Brane education has helped my son a lot in his studies. He improved a lot in his studies and is now able to score good marks in his exams\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"Play today's motivational video\",\r\n+\r\n+//       response: \"I am playing the video\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"Play today's video\",\r\n+\r\n+//       response: \"I am playing Motivational video\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"Leaders Voice\",\r\n+\r\n+//       response:\r\n+//         \"This Voice-interactive AI Platform is a game Changer. It revolutionizes education.\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"Curriculum Supported by Brane Education\",\r\n+\r\n+//       response:\r\n+//         \"we support multiple Boards let me say few Telangana State Board Andhra Pradesh Board Maharashtra Board Assam Board\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"Boards supported by the platform\",\r\n+\r\n+//       response:\r\n+//         \"we support multiple Boards let me say few Telangana State Board Andhra Pradesh Board Maharashtra Board Assam Board\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"Curriculum\",\r\n+\r\n+//       response:\r\n+//         \"we support multiple Boards let me say few Telangana State Board Andhra Pradesh Board Maharashtra Board Assam Board\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"Go to landing page\",\r\n+\r\n+//       response: \"Okay, I am taking you to the landing page.\",\r\n+\r\n+//       route: \"/childpage\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"take me to landing page\",\r\n+\r\n+//       response: \"Okay, I am taking you to the landing page.\",\r\n+\r\n+//       route: \"/childpage\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"move to landing page\",\r\n+\r\n+//       response: \"Okay, I am taking you to the landing page.\",\r\n+\r\n+//       route: \"/childpage\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"roll back to landing page\",\r\n+\r\n+//       response: \"Okay, I am taking you to the landing page.\",\r\n+\r\n+//       route: \"/childpage\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"move to landing page\",\r\n+\r\n+//       response: \"Okay, I am taking you to the landing page.\",\r\n+\r\n+//       route: \"/childpage\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"what is today's quote\",\r\n+\r\n+//       response:\r\n+//         \"Determination is the power that sees us through all our frustration and obstacles. It helps in building our willpower which is the very basis of success.\",\r\n+\r\n+//       route: \"/childpage\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"Today's Inspirational quote\",\r\n+\r\n+//       response:\r\n+//         \"Determination is the power that sees us through all our frustration and obstacles. It helps in building our willpower which is the very basis of success.\",\r\n+\r\n+//       route: \"/childpage\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"say me today's quote\",\r\n+\r\n+//       response:\r\n+//         \"Determination is the power that sees us through all our frustration and obstacles. It helps in building our willpower which is the very basis of success.\",\r\n+\r\n+//       route: \"/childpage\",\r\n+//     },\r\n+//     {\r\n+//       utterance: \"go back\",\r\n+//       response: \"\",\r\n+//       action: goBack, // Note the use of an action property\r\n+//     },\r\n+//     {\r\n+//       utterance: \"go forward\",\r\n+//       response: \"\",\r\n+//       action: goForward,\r\n+//     },\r\n+//     {\r\n+//       utterance: \"play video\",\r\n+//       // response: \"Playing video.\",\r\n+//       action: playVideo,\r\n+//     },\r\n+//     {\r\n+//       utterance: \"pause video\",\r\n+//       // response: \"Pausing video.\",\r\n+//       action: pauseVideo,\r\n+//     },\r\n+//     {\r\n+//       utterance: \"start video\",\r\n+//       // response: \"Playing video.\",\r\n+//       action: playVideo,\r\n+//     },\r\n+//     {\r\n+//       utterance: \"stop video\",\r\n+//       // response: \"Playing video.\",\r\n+//       action: pauseVideo,\r\n+//     },\r\n+//     {\r\n+//       utterance: \"scroll up\",\r\n+//       // response: \"Scrolling up.\",\r\n+//       action: scrollUp,\r\n+//     },\r\n+//     {\r\n+//       utterance: \"scroll down\",\r\n+//       // response: \"Scrolling down.\",\r\n+//       action: scrollDown,\r\n+//     },\r\n+//     {\r\n+//       utterance: \"go up\",\r\n+\r\n+//       // response: \"Scrolling up.\",\r\n+//       action: scrollUp,\r\n+//     },\r\n+//     {\r\n+//       utterance: \"go down\",\r\n+//       // response: \"Scrolling down.\",\r\n+//       action: scrollDown,\r\n+//     },\r\n+//     {\r\n+//       utterance: \"scroll to top\",\r\n+//       action: scrollToTop,\r\n+//     },\r\n+//     {\r\n+//       utterance: \"scroll to bottom\",\r\n+//       action: scrollToBottom,\r\n+//     },\r\n+//     {\r\n+//       utterance: \"brane stop\",\r\n+//       action: stopListening,\r\n+//     },\r\n+//     {\r\n+//       utterance: \"brane turn off\",\r\n+//       action: stopListening,\r\n+//     },\r\n+//     {\r\n+//       utterance: \"brane stop the bot\",\r\n+//       action: stopListening,\r\n+//     },\r\n+//   ];\r\n+\r\n+//   return (\r\n+//     <div className=\"speech-bot-container\">\r\n+//       <div\r\n+//         className={`button-container ${\r\n+//           isListening ? \"voicebotframeactive\" : \"voicebotframe\"\r\n+//         }`}\r\n+//       >\r\n+//         <button onClick={isListening ? stopListening : startListening}>\r\n+//           {isListening ? \"Stop\" : \"Start\"} Animation\r\n+//         </button>\r\n+//         {/* <button onClick={toggleBotActive}>\r\n+//         {isBotActive ? 'Deactivate Bot' : 'Activate Bot'}\r\n+//       </button> */}\r\n+//       </div>\r\n+//     </div>\r\n+//   );\r\n+// };\r\n+\r\n+// export default VoiceBot;\r\n+\r\n+//Bot Video added but some start issues\r\n+\r\n+// import React, { useState, useEffect, useRef } from \"react\";\r\n+// import { useNavigate, useLocation } from \"react-router-dom\";\r\n+// import Fuse from \"fuse.js\";\r\n+// import \"./VoiceBot.css\";\r\n+\r\n+// const VoiceBot = ({ videoRef }) => {\r\n+//   const [isListening, setIsListening] = useState(false);\r\n+//   const [isSpeaking, setIsSpeaking] = useState(false);\r\n+//   const recognition = useRef(null);\r\n+//   const speechSynthesis = useRef(window.speechSynthesis);\r\n+//   const hasGreeted = useRef(false);\r\n+//   const restartRecognitionTimeout = useRef(null);\r\n+//   const navigate = useNavigate();\r\n+//   const location = useLocation();\r\n+//   const [isRecognitionActive, setIsRecognitionActive] = useState(false); // New state to track recognition status\r\n+\r\n+//   useEffect(() => {\r\n+//     recognition.current = new window.webkitSpeechRecognition();\r\n+//     recognition.current.continuous = true;\r\n+//     recognition.current.interimResults = false;\r\n+//     recognition.current.onresult = onResult;\r\n+//     recognition.current.onend = () => {\r\n+//       console.log(\"Recognition ended.\");\r\n+//       if (isListening) {\r\n+//         startListening();\r\n+//       }\r\n+//     };\r\n+//     recognition.current.onerror = (event) => {\r\n+//       console.error(\"Recognition error:\", event.error);\r\n+//     };\r\n+\r\n+//     return () => {\r\n+//       recognition.current.abort();\r\n+//     };\r\n+//   }, []);\r\n+\r\n+//   // Update useEffect for managing the recognition state based on isListening and isRecognitionActive\r\n+//   useEffect(() => {\r\n+//     if (isListening && !isRecognitionActive) {\r\n+//       startListening();\r\n+//     } else if (!isListening && isRecognitionActive) {\r\n+//       stopListening();\r\n+//     }\r\n+//   }, [isListening, isRecognitionActive]);\r\n+\r\n+//   const goBack = () => {\r\n+//     if (window.history.length > 1) {\r\n+//       navigate(-1);\r\n+//     } else {\r\n+//       speak(\"Can't go back any further.\");\r\n+//     }\r\n+//   };\r\n+\r\n+//   const goForward = () => {\r\n+//     // Unfortunately, there's no direct way to check if you can go forward in the history.\r\n+//     // You might need to manage this state manually based on user navigation.\r\n+//     navigate(1);\r\n+//   };\r\n+\r\n+//   const playVideo = () => {\r\n+//     if (videoRef.current && !videoRef.current.paused) {\r\n+//       speak(\"Video is already playing.\");\r\n+//     } else if (videoRef.current) {\r\n+//       videoRef.current.play();\r\n+//       speak(\"Playing video.\");\r\n+//     } else {\r\n+//       speak(\"No video to play.\");\r\n+//     }\r\n+//   };\r\n+\r\n+//   const pauseVideo = () => {\r\n+//     if (videoRef.current && videoRef.current.paused) {\r\n+//       speak(\"Video is already paused.\");\r\n+//     } else if (videoRef.current) {\r\n+//       videoRef.current.pause();\r\n+//       speak(\"Video paused.\");\r\n+//     } else {\r\n+//       speak(\"No video to pause.\");\r\n+//     }\r\n+//   };\r\n+\r\n+//   const scrollAmount = window.innerHeight * 0.82;\r\n+\r\n+//   const scrollUp = () => {\r\n+//     if (window.pageYOffset === 0) {\r\n+//       speak(\"Already at the top of the page.\");\r\n+//     } else {\r\n+//       window.scrollBy(0, -scrollAmount);\r\n+//       speak(\"Scrolled up.\");\r\n+//     }\r\n+//   };\r\n+\r\n+//   const scrollDown = () => {\r\n+//     const maxScrollTop =\r\n+//       document.documentElement.scrollHeight - window.innerHeight;\r\n+//     if (window.pageYOffset >= maxScrollTop) {\r\n+//       speak(\"Already at the bottom of the page.\");\r\n+//     } else {\r\n+//       window.scrollBy(0, scrollAmount);\r\n+//       speak(\"Scrolled down.\");\r\n+//     }\r\n+//   };\r\n+\r\n+//   const scrollToTop = () => {\r\n+//     if (window.pageYOffset === 0) {\r\n+//       speak(\"Already at the top of the page.\");\r\n+//     } else {\r\n+//       window.scrollTo(0, 0);\r\n+//       speak(\"Scrolled to the top of the page.\");\r\n+//     }\r\n+//   };\r\n+\r\n+//   const scrollToBottom = () => {\r\n+//     const maxScrollTop =\r\n+//       document.documentElement.scrollHeight - window.innerHeight;\r\n+//     if (window.pageYOffset >= maxScrollTop) {\r\n+//       speak(\"Already at the bottom of the page.\");\r\n+//     } else {\r\n+//       window.scrollTo(0, document.body.scrollHeight);\r\n+//       speak(\"Scrolled to the bottom of the page.\");\r\n+//     }\r\n+//   };\r\n+\r\n+//   // const speak = (message) => {\r\n+//   //   const utterance = new SpeechSynthesisUtterance(message);\r\n+//   //   utterance.onend = () => {\r\n+//   //     setIsSpeaking(false);\r\n+//   //     console.log(\"Speaking ended.\");\r\n+//   //     // Only restart recognition if we're still supposed to be listening\r\n+//   //     // if (isListening) {\r\n+//   //     //   if (restartRecognitionTimeout.current) {\r\n+//   //     //     clearTimeout(restartRecognitionTimeout.current);\r\n+//   //     //   }\r\n+//   //     //   restartRecognitionTimeout.current = setTimeout(() => {\r\n+//   //     //     console.log(\"Recognition restarted.\");\r\n+//   //     //     recognition.current.start();\r\n+//   //     //   }, 100); // Delay to prevent immediate restart\r\n+//   //     // }\r\n+//   //     if (isListening && !recognition.current.starting) { // Check the flag before restarting\r\n+//   //       recognition.current.starting = true; // Set the flag when starting recognition\r\n+//   //       recognition.current.start();\r\n+//   //     }\r\n+//   //   };\r\n+\r\n+//   //   setIsSpeaking(true);\r\n+//   //   console.log(\"Speaking started.\");\r\n+//   //   recognition.current.stop(); // Stop recognition when the bot starts speaking\r\n+//   //   speechSynthesis.current.speak(utterance);\r\n+//   // };\r\n+\r\n+//   const speak = (message) => {\r\n+//     console.log(\"speak function called with message:\", message);\r\n+//     const utterance = new SpeechSynthesisUtterance(message);\r\n+//     utterance.onend = () => {\r\n+//       setIsSpeaking(false);\r\n+//       console.log(\"Speaking ended.\");\r\n+//       // Directly handle the restart of recognition here if needed\r\n+//       if (isListening) {\r\n+//         startListening();\r\n+//       }\r\n+//     };\r\n+\r\n+//     setIsSpeaking(true);\r\n+//     console.log(\"Speaking started.\");\r\n+//     recognition.current.stop(); // Ensure to stop recognition before speaking\r\n+//     speechSynthesis.current.speak(utterance);\r\n+//   };\r\n+\r\n+//   const onResult = (event) => {\r\n+//     const resultIndex = event.resultIndex;\r\n+//     const transcript = event.results[resultIndex][0].transcript\r\n+//       .trim()\r\n+//       .toLowerCase();\r\n+\r\n+//     if (event.results[resultIndex].isFinal) {\r\n+//       console.log(`Recognized text: ${transcript}`);\r\n+//       if (transcript.includes(\"brain\")) {\r\n+//         console.log(\"Wake word heard, processing command...\");\r\n+//         handleCommandWithFuse(transcript.replace(\"brain\", \"\"));\r\n+//       }\r\n+//     }\r\n+//   };\r\n+\r\n+//   // const onRecognitionEnd = () => {\r\n+//   //   console.log(\"Recognition ended.\");\r\n+//   //   setIsRecognitionActive(false); // Update state when recognition ends\r\n+//   //   recognition.current.starting = false; // Reset the flag when recognition ends\r\n+//   //   // We now check if the recognition is already running before starting it again\r\n+//   //   if (isListening && !isSpeaking && !recognition.current?.starting) {\r\n+//   //     console.log(\"Restarting recognition.\");\r\n+//   //     recognition.current.start();\r\n+//   //   }\r\n+//   // };\r\n+\r\n+//   // useEffect(() => {\r\n+//   //   if (isListening && !hasGreeted.current) {\r\n+//   //     speak(\"Hello, I'm Brane. How can I assist you today?\");\r\n+//   //     hasGreeted.current = true;\r\n+//   //   } else if (isListening && !isSpeaking) {\r\n+//   //     recognition.current.start();\r\n+//   //   }\r\n+//   // }, [isListening, isSpeaking]);\r\n+\r\n+//   useEffect(() => {\r\n+//     if (isListening && !hasGreeted.current) {\r\n+//       speak(\"Hello, I'm Brane. How can I assist you today?\");\r\n+//       hasGreeted.current = true;\r\n+//     } else if (isListening && !isSpeaking && !recognition.current.starting) {\r\n+//       // Check the flag before starting\r\n+//       recognition.current.starting = true; // Set the flag when starting recognition\r\n+//       recognition.current.start();\r\n+//     }\r\n+//   }, [isListening, isSpeaking]);\r\n+\r\n+//   // const startListening = () => {\r\n+//   //   console.log(\"Attempting to start listening.\");\r\n+//   //   if (recognition.current && !recognition.current.starting) {\r\n+//   //     setIsListening(true);\r\n+//   //     recognition.current.starting = true; // Set the flag when starting recognition\r\n+//   //     recognition.current.start();\r\n+//   //     console.log(\"Listening started.\");\r\n+//   //   }\r\n+//   // };\r\n+\r\n+//   // const stopListening = () => {\r\n+//   //   console.log(\"Stopping listening.\");\r\n+\r\n+//   //   setIsListening(false);\r\n+//   //   recognition.current.stop();\r\n+//   //   if (speechSynthesis.current.speaking) {\r\n+//   //     speechSynthesis.current.cancel();\r\n+//   //   }\r\n+//   //   if (restartRecognitionTimeout.current) {\r\n+//   //     clearTimeout(restartRecognitionTimeout.current);\r\n+//   //   }\r\n+//   //   console.log(\"Listening stopped.\");\r\n+//   // };\r\n+//   // Handle start and stop listening logic\r\n+//   const startListening = () => {\r\n+//     console.log(\"Attempting to start listening.\");\r\n+//     if (!recognition.current.starting) {\r\n+//       setIsListening(true);\r\n+//       recognition.current.starting = true;\r\n+//       recognition.current.start();\r\n+//       console.log(\"Listening started.\");\r\n+//     } else {\r\n+//       console.log(\"Recognition already active.\");\r\n+//     }\r\n+//   };\r\n+\r\n+//   const stopListening = () => {\r\n+//     console.log(\"Stopping listening.\");\r\n+//     if (recognition.current.starting) {\r\n+//       setIsListening(false);\r\n+//       recognition.current.starting = false;\r\n+//       recognition.current.stop();\r\n+//       console.log(\"Listening stopped.\");\r\n+//     } else {\r\n+//       console.log(\"Recognition already inactive.\");\r\n+//     }\r\n+//   };\r\n+\r\n+//   // const handleCommandWithFuse = (command) => {\r\n+//   //   const fuse = new Fuse(commands, { keys: [\"utterance\"], threshold: 0.4 });\r\n+//   //   const results = fuse.search(command);\r\n+//   //   const foundCommand = results.length ? results[0].item : null;\r\n+\r\n+//   //   if (foundCommand) {\r\n+//   //     console.log(\"Command found:\", foundCommand.utterance);\r\n+//   //     speak(foundCommand.response);\r\n+//   //     if (foundCommand.route) {\r\n+//   //       navigate(foundCommand.route); // Navigate to the route specified in the command\r\n+//   //     }\r\n+//   //   } else {\r\n+//   //     console.log(\"No command found.\");\r\n+//   //     speak(\"I'm not sure how to respond to that.\");\r\n+//   //   }\r\n+//   // };\r\n+\r\n+//   const handleCommandWithFuse = (command) => {\r\n+//     const fuse = new Fuse(commands, { keys: [\"utterance\"], threshold: 0.4 });\r\n+//     const results = fuse.search(command);\r\n+//     const foundCommand = results.length ? results[0].item : null;\r\n+\r\n+//     if (foundCommand) {\r\n+//       console.log(\"Command found:\", foundCommand.utterance);\r\n+\r\n+//       if (foundCommand.route) {\r\n+//         if (location.pathname !== foundCommand.route) {\r\n+//           navigate(foundCommand.route);\r\n+//           speak(\r\n+//             `Navigating to ${\r\n+//               foundCommand.routeDescription || \"requested page\"\r\n+//             }.`\r\n+//           );\r\n+//         } else {\r\n+//           speak(\r\n+//             `You are already on the ${\r\n+//               foundCommand.routeDescription || \"requested page\"\r\n+//             }.`\r\n+//           );\r\n+//         }\r\n+//       } else if (foundCommand.action) {\r\n+//         foundCommand.action();\r\n+//       }\r\n+\r\n+//       if (foundCommand.response) {\r\n+//         speak(foundCommand.response);\r\n+//       }\r\n+//     } else {\r\n+//       console.log(\"No command found.\");\r\n+//       speak(\"I'm not sure how to respond to that.\");\r\n+//     }\r\n+//   };\r\n+\r\n+//   const commands = [\r\n+//     {\r\n+//       utterance: \"Hello who are you ?\",\r\n+\r\n+//       response:\r\n+//         \"Hi! This is Brane! your Voice bot from Brane Education How can I Assist you Today ?\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"Hello\",\r\n+\r\n+//       response: \"Hi! How can I assist you today?\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"hello\",\r\n+\r\n+//       response: \"Hi! How can I assist you today?\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"Hi.\",\r\n+\r\n+//       response: \"Hello! How can I assist you today?\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"Hey there\",\r\n+\r\n+//       response: \"Hi! How can I assist you today?\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"Good morning Brane.\",\r\n+\r\n+//       response: \"Hey Hiii! Good morning  ! How can I help you?\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"Good afternoon Brane.\",\r\n+\r\n+//       response: \"Hey Hiii! Good after noon ! How can I help you?\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"Good evening Brane.\",\r\n+\r\n+//       response: \"Hey Hiii! Good evening ! How can I help you?\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"can you please take me to login page\",\r\n+//       route: \"/login\",\r\n+//       routeDescription: \"login page\",\r\n+//       response: \"Navigating to the login page.\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"go to login page\",\r\n+//       route: \"/login\",\r\n+//       routeDescription: \"login page\",\r\n+//       response: \"Navigating to the login page.\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"please take me to login page\",\r\n+//       route: \"/login\",\r\n+//       routeDescription: \"login page\",\r\n+//       response: \"Navigating to the login page.\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"Go to login page\",\r\n+//       route: \"/login\",\r\n+//       routeDescription: \"login page\",\r\n+//       response: \"Navigating to the login page.\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"open login page\",\r\n+//       route: \"/login\",\r\n+//       routeDescription: \"login page\",\r\n+//       response: \"Navigating to the login page.\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"can you please take me to signup page\",\r\n+//       route: \"/signup\",\r\n+//       routeDescription: \"signup page\",\r\n+//       response: \"Navigating to the signup page.\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"take me to signup page\",\r\n+//       route: \"/signup\",\r\n+//       routeDescription: \"signup page\",\r\n+//       response: \"Navigating to the signup page.\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"Go to signup page\",\r\n+//       route: \"/signup\",\r\n+//       routeDescription: \"signup page\",\r\n+//       response: \"Navigating to the signup page.\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"open signup page\",\r\n+//       route: \"/signup\",\r\n+//       routeDescription: \"signup page\",\r\n+//       response: \"Navigating to the signup page.\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"what are platform features\",\r\n+\r\n+//       response:\r\n+//         \"Dashboard, Dynamic time table, Learning Networks, Little Masters, Video Based Dictionary, General Search.\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"Features of platform\",\r\n+\r\n+//       response:\r\n+//         \"Dashboard, Dynamic time table, Learning Networks, Little Masters, Video Based Dictionary, General Search.\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"What does the platform offer\",\r\n+\r\n+//       response:\r\n+//         \"Dashboard, Dynamic time table, Learning Networks, Little Masters, Video Based Dictionary, General Search.\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"Say me the features of platform\",\r\n+\r\n+//       response:\r\n+//         \"Dashboard, Dynamic time table, Learning Networks, Little Masters, Video Based Dictionary, General Search.\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"Say me the services of platform\",\r\n+\r\n+//       response:\r\n+//         \"Dashboard, Dynamic time table, Learning Networks, Little Masters, Video Based Dictionary, General Search.\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"tell me the services offered by the platform\",\r\n+\r\n+//       response:\r\n+//         \"Dashboard, Dynamic time table, Learning Networks, Little Masters, Video Based Dictionary, General Search.\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"explain platform services\",\r\n+\r\n+//       response:\r\n+//         \"Dashboard, Dynamic time table, Learning Networks, Little Masters, Video Based Dictionary, General Search.\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"Give me the Parent voice of Julia Harris\",\r\n+\r\n+//       response:\r\n+//         \"Brane education has helped my son a lot in his studies. He improved a lot in his studies and is now able to score good marks in his exams\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"Play today's motivational video\",\r\n+\r\n+//       response: \"I am playing the video\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"Play today's video\",\r\n+\r\n+//       response: \"I am playing Motivational video\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"Leaders Voice\",\r\n+\r\n+//       response:\r\n+//         \"This Voice-interactive AI Platform is a game Changer. It revolutionizes education.\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"Curriculum Supported by Brane Education\",\r\n+\r\n+//       response:\r\n+//         \"we support multiple Boards let me say few Telangana State Board Andhra Pradesh Board Maharashtra Board Assam Board\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"Boards supported by the platform\",\r\n+\r\n+//       response:\r\n+//         \"we support multiple Boards let me say few Telangana State Board Andhra Pradesh Board Maharashtra Board Assam Board\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"Curriculum\",\r\n+\r\n+//       response:\r\n+//         \"we support multiple Boards let me say few Telangana State Board Andhra Pradesh Board Maharashtra Board Assam Board\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"Go to landing page\",\r\n+\r\n+//       response: \"Okay, I am taking you to the landing page.\",\r\n+\r\n+//       route: \"/childpage\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"take me to landing page\",\r\n+\r\n+//       response: \"Okay, I am taking you to the landing page.\",\r\n+\r\n+//       route: \"/childpage\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"move to landing page\",\r\n+\r\n+//       response: \"Okay, I am taking you to the landing page.\",\r\n+\r\n+//       route: \"/childpage\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"roll back to landing page\",\r\n+\r\n+//       response: \"Okay, I am taking you to the landing page.\",\r\n+\r\n+//       route: \"/childpage\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"move to landing page\",\r\n+\r\n+//       response: \"Okay, I am taking you to the landing page.\",\r\n+\r\n+//       route: \"/childpage\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"what is today's quote\",\r\n+\r\n+//       response:\r\n+//         \"Determination is the power that sees us through all our frustration and obstacles. It helps in building our willpower which is the very basis of success.\",\r\n+\r\n+//       // route: \"/childpage\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"Today's Inspirational quote\",\r\n+\r\n+//       response:\r\n+//         \"Determination is the power that sees us through all our frustration and obstacles. It helps in building our willpower which is the very basis of success.\",\r\n+\r\n+//       // route: \"/childpage\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"say me today's quote\",\r\n+\r\n+//       response:\r\n+//         \"Determination is the power that sees us through all our frustration and obstacles. It helps in building our willpower which is the very basis of success.\",\r\n+\r\n+//       // route: \"/childpage\",\r\n+//     },\r\n+//     {\r\n+//       utterance: \"go back\",\r\n+//       response: \"Going back.\",\r\n+//       action: goBack, // Note the use of an action property\r\n+//     },\r\n+//     {\r\n+//       utterance: \"go forward\",\r\n+//       response: \"Going forward.\",\r\n+//       action: goForward,\r\n+//     },\r\n+//     {\r\n+//       utterance: \"play video\",\r\n+//       // response: \"Playing video.\",\r\n+//       action: playVideo,\r\n+//     },\r\n+//     {\r\n+//       utterance: \"pause video\",\r\n+//       // response: \"Pausing video.\",\r\n+//       action: pauseVideo,\r\n+//     },\r\n+//     {\r\n+//       utterance: \"start video\",\r\n+//       // response: \"Playing video.\",\r\n+//       action: playVideo,\r\n+//     },\r\n+//     {\r\n+//       utterance: \"stop video\",\r\n+//       // response: \"Playing video.\",\r\n+//       action: pauseVideo,\r\n+//     },\r\n+//     {\r\n+//       utterance: \"scroll up\",\r\n+//       // response: \"Scrolling up.\",\r\n+//       action: scrollUp,\r\n+//     },\r\n+//     {\r\n+//       utterance: \"scroll down\",\r\n+//       // response: \"Scrolling down.\",\r\n+//       action: scrollDown,\r\n+//     },\r\n+//     {\r\n+//       utterance: \"go up\",\r\n+\r\n+//       // response: \"Scrolling up.\",\r\n+//       action: scrollUp,\r\n+//     },\r\n+//     {\r\n+//       utterance: \"go down\",\r\n+//       // response: \"Scrolling down.\",\r\n+//       action: scrollDown,\r\n+//     },\r\n+//     {\r\n+//       utterance: \"scroll to top\",\r\n+//       action: scrollToTop,\r\n+//     },\r\n+//     {\r\n+//       utterance: \"scroll to bottom\",\r\n+//       action: scrollToBottom,\r\n+//     },\r\n+//   ];\r\n+//   return (\r\n+//     <div className=\"speech-bot-container\">\r\n+//       <div\r\n+//         className={`button-container ${\r\n+//           isListening ? \"voicebotframeactive\" : \"voicebotframe\"\r\n+//         }`}\r\n+//       >\r\n+//         <div onClick={isListening ? stopListening : startListening}>\r\n+//           <iframe\r\n+//             src={\r\n+//               isListening\r\n+//                 ? \"https://lottie.host/?file=a89aca3f-5407-4052-82c3-2048afca7a9f/NpCdWzLSKD.json\"\r\n+//                 : \"https://lottie.host/?file=d2b6cc0e-fe95-4847-85b5-35365fca7e00/vTudpCuPZq.json\"\r\n+//             }\r\n+//             width=\"120\" // Set your desired width\r\n+//             height=\"120\" // Set your desired height\r\n+//             title={isListening ? \"Stop Animation\" : \"Start Animation\"}\r\n+//             className={isListening ? \"voicebotframeactive\" : \"voicebotframe\"}\r\n+//           ></iframe>\r\n+//           {isListening ? (\r\n+//             <div className=\"overlay\" onClick={stopListening}></div>\r\n+//           ) : (\r\n+//             <div className=\"overlay\" onClick={startListening}></div>\r\n+//           )}\r\n+//         </div>\r\n+//       </div>\r\n+//     </div>\r\n+//   );\r\n+// };\r\n+\r\n+// export default VoiceBot;\r\n+\r\n+// All functionalities but messed up\r\n+\r\n+// import React, { useState, useEffect, useRef } from \"react\";\r\n+// import { useNavigate, useLocation } from \"react-router-dom\";\r\n+// import Fuse from \"fuse.js\";\r\n+// import \"./VoiceBot.css\";\r\n+\r\n+// const VoiceBot = ({ videoRef, takeTestRef, goBackRef }) => {\r\n+//   const [isListening, setIsListening] = useState(false);\r\n+//   const [isSpeaking, setIsSpeaking] = useState(false);\r\n+//   const recognition = useRef(null);\r\n+//   const speechSynthesis = useRef(window.speechSynthesis);\r\n+//   const hasGreeted = useRef(false);\r\n+//   const navigate = useNavigate();\r\n+//   const location = useLocation();\r\n+//   const isRecognitionActive = useRef(false);\r\n+\r\n+//   useEffect(() => {\r\n+//     recognition.current = new window.webkitSpeechRecognition();\r\n+//     recognition.current.continuous = true;\r\n+//     recognition.current.interimResults = false;\r\n+//     recognition.current.onresult = onResult;\r\n+//     recognition.current.onend = onRecognitionEnd;\r\n+\r\n+//     return () => {\r\n+//       if (recognition.current) {\r\n+//         recognition.current.abort();\r\n+//       }\r\n+//     };\r\n+//   }, [location.pathname]);\r\n+\r\n+//   const onResult = (event) => {\r\n+//     const resultIndex = event.resultIndex;\r\n+//     const transcript = event.results[resultIndex][0].transcript\r\n+//       .trim()\r\n+//       .toLowerCase();\r\n+\r\n+//     if (event.results[resultIndex].isFinal) {\r\n+//       console.log(`Recognized text: ${transcript}`);\r\n+//       if (transcript.includes(\"brain\")) {\r\n+//         console.log(\"Wake word heard, processing command...\");\r\n+//         handleCommandWithFuse(transcript.replace(\"brain\", \"\"));\r\n+//       }\r\n+//     }\r\n+//   };\r\n+\r\n+//   const startListening = () => {\r\n+//     if (!isRecognitionActive.current) {\r\n+//       setIsListening(true);\r\n+//       recognition.current.start();\r\n+//       isRecognitionActive.current = true;\r\n+//     }\r\n+//   };\r\n+\r\n+//   const stopListening = () => {\r\n+//     if (isRecognitionActive.current) {\r\n+//       setIsListening(false);\r\n+//       recognition.current.stop();\r\n+//       isRecognitionActive.current = false;\r\n+//     }\r\n+//   };\r\n+\r\n+//   const onRecognitionEnd = () => {\r\n+//     isRecognitionActive.current = false;\r\n+//     if (isListening) {\r\n+//       startListening();\r\n+//     }\r\n+//   };\r\n+\r\n+//   const speak = (message) => {\r\n+//     const utterance = new SpeechSynthesisUtterance(message);\r\n+//     utterance.onend = () => {\r\n+//       setIsSpeaking(false);\r\n+//       if (isListening && !isRecognitionActive.current) {\r\n+//         startListening();\r\n+//       }\r\n+//     };\r\n+\r\n+//     setIsSpeaking(true);\r\n+//     if (isRecognitionActive.current) {\r\n+//       stopListening(); // Adjusted to use stopListening\r\n+//     }\r\n+//     speechSynthesis.current.speak(utterance);\r\n+//   };\r\n+\r\n+//   useEffect(() => {\r\n+//     if (isListening && !hasGreeted.current) {\r\n+//       speak(\"Hello, I'm Brane. How can I assist you today?\");\r\n+//       hasGreeted.current = true;\r\n+//     }\r\n+//   }, [isListening]);\r\n+\r\n+//   const goBack = () => {\r\n+//     if (window.history.length > 1) {\r\n+//       navigate(-1);\r\n+//     } else {\r\n+//       speak(\"Can't go back any further.\");\r\n+//     }\r\n+//   };\r\n+\r\n+//   const goForward = () => {\r\n+//     // Unfortunately, there's no direct way to check if you can go forward in the history.\r\n+//     // You might need to manage this state manually based on user navigation.\r\n+//     navigate(1);\r\n+//   };\r\n+\r\n+//   const playVideo = () => {\r\n+//     if (videoRef.current && !videoRef.current.paused) {\r\n+//       speak(\"Video is already playing.\");\r\n+//     } else if (videoRef.current) {\r\n+//       videoRef.current.play();\r\n+//       speak(\"Playing video.\");\r\n+//     } else {\r\n+//       speak(\"No video to play.\");\r\n+//     }\r\n+//   };\r\n+\r\n+//   const pauseVideo = () => {\r\n+//     if (videoRef.current && videoRef.current.paused) {\r\n+//       speak(\"Video is already paused.\");\r\n+//     } else if (videoRef.current) {\r\n+//       videoRef.current.pause();\r\n+//       speak(\"Video paused.\");\r\n+//     } else {\r\n+//       speak(\"No video to pause.\");\r\n+//     }\r\n+//   };\r\n+\r\n+//   const scrollAmount = window.innerHeight * 0.82;\r\n+\r\n+//   const scrollUp = () => {\r\n+//     if (window.pageYOffset === 0) {\r\n+//       speak(\"Already at the top of the page.\");\r\n+//     } else {\r\n+//       window.scrollBy(0, -scrollAmount);\r\n+//       speak(\"Scrolled up.\");\r\n+//     }\r\n+//   };\r\n+\r\n+//   const scrollDown = () => {\r\n+//     const maxScrollTop =\r\n+//       document.documentElement.scrollHeight - window.innerHeight;\r\n+//     if (window.pageYOffset >= maxScrollTop) {\r\n+//       speak(\"Already at the bottom of the page.\");\r\n+//     } else {\r\n+//       window.scrollBy(0, scrollAmount);\r\n+//       speak(\"Scrolled down.\");\r\n+//     }\r\n+//   };\r\n+\r\n+//   const scrollToTop = () => {\r\n+//     if (window.pageYOffset === 0) {\r\n+//       speak(\"Already at the top of the page.\");\r\n+//     } else {\r\n+//       window.scrollTo(0, 0);\r\n+//       speak(\"Scrolled to the top of the page.\");\r\n+//     }\r\n+//   };\r\n+\r\n+//   const scrollToBottom = () => {\r\n+//     const maxScrollTop =\r\n+//       document.documentElement.scrollHeight - window.innerHeight;\r\n+//     if (window.pageYOffset >= maxScrollTop) {\r\n+//       speak(\"Already at the bottom of the page.\");\r\n+//     } else {\r\n+//       window.scrollTo(0, document.body.scrollHeight);\r\n+//       speak(\"Scrolled to the bottom of the page.\");\r\n+//     }\r\n+//   };\r\n+\r\n+//   // const speak = (message) => {\r\n+//   //   const utterance = new SpeechSynthesisUtterance(message);\r\n+//   //   utterance.onend = () => {\r\n+//   //     setIsSpeaking(false);\r\n+//   //     console.log(\"Speaking ended.\");\r\n+//   //     // Only restart recognition if we're still supposed to be listening\r\n+//   //     // if (isListening) {\r\n+//   //     //   if (restartRecognitionTimeout.current) {\r\n+//   //     //     clearTimeout(restartRecognitionTimeout.current);\r\n+//   //     //   }\r\n+//   //     //   restartRecognitionTimeout.current = setTimeout(() => {\r\n+//   //     //     console.log(\"Recognition restarted.\");\r\n+//   //     //     recognition.current.start();\r\n+//   //     //   }, 100); // Delay to prevent immediate restart\r\n+//   //     // }\r\n+//   //     if (isListening && !recognition.current.starting) { // Check the flag before restarting\r\n+//   //       recognition.current.starting = true; // Set the flag when starting recognition\r\n+//   //       recognition.current.start();\r\n+//   //     }\r\n+//   //   };\r\n+\r\n+//   //   setIsSpeaking(true);\r\n+//   //   console.log(\"Speaking started.\");\r\n+//   //   recognition.current.stop(); // Stop recognition when the bot starts speaking\r\n+//   //   speechSynthesis.current.speak(utterance);\r\n+//   // };\r\n+\r\n+//   // const onRecognitionEnd = () => {\r\n+//   //   console.log(\"Recognition ended.\");\r\n+//   //   setIsRecognitionActive(false); // Update state when recognition ends\r\n+//   //   recognition.current.starting = false; // Reset the flag when recognition ends\r\n+//   //   // We now check if the recognition is already running before starting it again\r\n+//   //   if (isListening && !isSpeaking && !recognition.current?.starting) {\r\n+//   //     console.log(\"Restarting recognition.\");\r\n+//   //     recognition.current.start();\r\n+//   //   }\r\n+//   // };\r\n+\r\n+//   // useEffect(() => {\r\n+//   //   if (isListening && !hasGreeted.current) {\r\n+//   //     speak(\"Hello, I'm Brane. How can I assist you today?\");\r\n+//   //     hasGreeted.current = true;\r\n+//   //   } else if (isListening && !isSpeaking) {\r\n+//   //     recognition.current.start();\r\n+//   //   }\r\n+//   // }, [isListening, isSpeaking]);\r\n+\r\n+//   // const startListening = () => {\r\n+//   //   console.log(\"Attempting to start listening.\");\r\n+//   //   if (recognition.current && !recognition.current.starting) {\r\n+//   //     setIsListening(true);\r\n+//   //     recognition.current.starting = true; // Set the flag when starting recognition\r\n+//   //     recognition.current.start();\r\n+//   //     console.log(\"Listening started.\");\r\n+//   //   }\r\n+//   // };\r\n+\r\n+//   // const stopListening = () => {\r\n+//   //   console.log(\"Stopping listening.\");\r\n+\r\n+//   //   setIsListening(false);\r\n+//   //   recognition.current.stop();\r\n+//   //   if (speechSynthesis.current.speaking) {\r\n+//   //     speechSynthesis.current.cancel();\r\n+//   //   }\r\n+//   //   if (restartRecognitionTimeout.current) {\r\n+//   //     clearTimeout(restartRecognitionTimeout.current);\r\n+//   //   }\r\n+//   //   console.log(\"Listening stopped.\");\r\n+//   // };\r\n+//   // Handle start and stop listening logic\r\n+\r\n+//   useEffect(() => {\r\n+//     if (isListening && !hasGreeted.current) {\r\n+//       speak(\"Hello, I'm Brane. How can I assist you today?\");\r\n+//       hasGreeted.current = true;\r\n+//     }\r\n+//   }, [isListening]);\r\n+\r\n+//   // const handleCommandWithFuse = (command) => {\r\n+//   //   const fuse = new Fuse(commands, { keys: [\"utterance\"], threshold: 0.4 });\r\n+//   //   const results = fuse.search(command);\r\n+//   //   const foundCommand = results.length ? results[0].item : null;\r\n+\r\n+//   //   if (foundCommand) {\r\n+//   //     console.log(\"Command found:\", foundCommand.utterance);\r\n+//   //     speak(foundCommand.response);\r\n+//   //     if (foundCommand.route) {\r\n+//   //       navigate(foundCommand.route); // Navigate to the route specified in the command\r\n+//   //     }\r\n+//   //   } else {\r\n+//   //     console.log(\"No command found.\");\r\n+//   //     speak(\"I'm not sure how to respond to that.\");\r\n+//   //   }\r\n+//   // };\r\n+\r\n+//   const handleCommandWithFuse = (command) => {\r\n+//     const fuse = new Fuse(commands, { keys: [\"utterance\"], threshold: 0.4 });\r\n+//     const results = fuse.search(command);\r\n+//     const foundCommand = results.length ? results[0].item : null;\r\n+\r\n+//     if (foundCommand) {\r\n+//       console.log(\"Command found:\", foundCommand.utterance);\r\n+\r\n+//       if (foundCommand.action) {\r\n+//         foundCommand.action();\r\n+//       } else if (foundCommand.route) {\r\n+//         navigate(foundCommand.route);\r\n+//       }\r\n+\r\n+//       if (foundCommand.response) {\r\n+//         speak(foundCommand.response);\r\n+//       }\r\n+//     } else {\r\n+//       console.log(\"No command found.\");\r\n+//       speak(\"I'm not sure how to respond to that.\");\r\n+//     }\r\n+//   };\r\n+\r\n+//   const commands = [\r\n+//     {\r\n+//       utterance: \"Hello who are you ?\",\r\n+\r\n+//       response:\r\n+//         \"Hi! This is Brane! your Voice bot from Brane Education How can I Assist you Today ?\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"Hello\",\r\n+\r\n+//       response: \"Hi! How can I assist you today?\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"hello\",\r\n+\r\n+//       response: \"Hi! How can I assist you today?\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"Hi.\",\r\n+\r\n+//       response: \"Hello! How can I assist you today?\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"Hey there\",\r\n+\r\n+//       response: \"Hi! How can I assist you today?\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"Good morning Brane.\",\r\n+\r\n+//       response: \"Hey Hiii! Good morning  ! How can I help you?\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"Good afternoon Brane.\",\r\n+\r\n+//       response: \"Hey Hiii! Good after noon ! How can I help you?\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"Good evening Brane.\",\r\n+\r\n+//       response: \"Hey Hiii! Good evening ! How can I help you?\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"can you please take me to login page\",\r\n+//       route: \"/login\",\r\n+//       routeDescription: \"login page\",\r\n+//       response: \"Navigating to the login page.\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"go to login page\",\r\n+//       route: \"/login\",\r\n+//       routeDescription: \"login page\",\r\n+//       response: \"Navigating to the login page.\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"please take me to login page\",\r\n+//       route: \"/login\",\r\n+//       routeDescription: \"login page\",\r\n+//       response: \"Navigating to the login page.\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"Go to login page\",\r\n+//       route: \"/login\",\r\n+//       routeDescription: \"login page\",\r\n+//       response: \"Navigating to the login page.\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"open login page\",\r\n+//       route: \"/login\",\r\n+//       routeDescription: \"login page\",\r\n+//       response: \"Navigating to the login page.\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"can you please take me to signup page\",\r\n+//       route: \"/signup\",\r\n+//       routeDescription: \"signup page\",\r\n+//       response: \"Navigating to the signup page.\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"take me to signup page\",\r\n+//       route: \"/signup\",\r\n+//       routeDescription: \"signup page\",\r\n+//       response: \"Navigating to the signup page.\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"Go to signup page\",\r\n+//       route: \"/signup\",\r\n+//       routeDescription: \"signup page\",\r\n+//       response: \"Navigating to the signup page.\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"open signup page\",\r\n+//       route: \"/signup\",\r\n+//       routeDescription: \"signup page\",\r\n+//       response: \"Navigating to the signup page.\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"what are platform features\",\r\n+\r\n+//       response:\r\n+//         \"Dashboard, Dynamic time table, Learning Networks, Little Masters, Video Based Dictionary, General Search.\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"Features of platform\",\r\n+\r\n+//       response:\r\n+//         \"Dashboard, Dynamic time table, Learning Networks, Little Masters, Video Based Dictionary, General Search.\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"What does the platform offer\",\r\n+\r\n+//       response:\r\n+//         \"Dashboard, Dynamic time table, Learning Networks, Little Masters, Video Based Dictionary, General Search.\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"Say me the features of platform\",\r\n+\r\n+//       response:\r\n+//         \"Dashboard, Dynamic time table, Learning Networks, Little Masters, Video Based Dictionary, General Search.\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"Say me the services of platform\",\r\n+\r\n+//       response:\r\n+//         \"Dashboard, Dynamic time table, Learning Networks, Little Masters, Video Based Dictionary, General Search.\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"tell me the services offered by the platform\",\r\n+\r\n+//       response:\r\n+//         \"Dashboard, Dynamic time table, Learning Networks, Little Masters, Video Based Dictionary, General Search.\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"explain platform services\",\r\n+\r\n+//       response:\r\n+//         \"Dashboard, Dynamic time table, Learning Networks, Little Masters, Video Based Dictionary, General Search.\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"Give me the Parent voice of Julia Harris\",\r\n+\r\n+//       response:\r\n+//         \"Brane education has helped my son a lot in his studies. He improved a lot in his studies and is now able to score good marks in his exams\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"Play today's motivational video\",\r\n+\r\n+//       response: \"I am playing the video\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"Play today's video\",\r\n+\r\n+//       response: \"I am playing Motivational video\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"Leaders Voice\",\r\n+\r\n+//       response:\r\n+//         \"This Voice-interactive AI Platform is a game Changer. It revolutionizes education.\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"Curriculum Supported by Brane Education\",\r\n+\r\n+//       response:\r\n+//         \"we support multiple Boards let me say few Telangana State Board Andhra Pradesh Board Maharashtra Board Assam Board\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"Boards supported by the platform\",\r\n+\r\n+//       response:\r\n+//         \"we support multiple Boards let me say few Telangana State Board Andhra Pradesh Board Maharashtra Board Assam Board\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"Curriculum\",\r\n+\r\n+//       response:\r\n+//         \"we support multiple Boards let me say few Telangana State Board Andhra Pradesh Board Maharashtra Board Assam Board\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"Go to landing page\",\r\n+\r\n+//       response: \"Okay, I am taking you to the landing page.\",\r\n+\r\n+//       route: \"/childpage\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"take me to landing page\",\r\n+\r\n+//       response: \"Okay, I am taking you to the landing page.\",\r\n+\r\n+//       route: \"/childpage\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"move to landing page\",\r\n+\r\n+//       response: \"Okay, I am taking you to the landing page.\",\r\n+\r\n+//       route: \"/childpage\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"roll back to landing page\",\r\n+\r\n+//       response: \"Okay, I am taking you to the landing page.\",\r\n+\r\n+//       route: \"/childpage\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"move to landing page\",\r\n+\r\n+//       response: \"Okay, I am taking you to the landing page.\",\r\n+\r\n+//       route: \"/childpage\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"what is today's quote\",\r\n+\r\n+//       response:\r\n+//         \"Determination is the power that sees us through all our frustration and obstacles. It helps in building our willpower which is the very basis of success.\",\r\n+\r\n+//       // route: \"/childpage\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"Today's Inspirational quote\",\r\n+\r\n+//       response:\r\n+//         \"Determination is the power that sees us through all our frustration and obstacles. It helps in building our willpower which is the very basis of success.\",\r\n+\r\n+//       // route: \"/childpage\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"say me today's quote\",\r\n+\r\n+//       response:\r\n+//         \"Determination is the power that sees us through all our frustration and obstacles. It helps in building our willpower which is the very basis of success.\",\r\n+\r\n+//       // route: \"/childpage\",\r\n+//     },\r\n+//     {\r\n+//       utterance: \"go back\",\r\n+//       response: \"Going back.\",\r\n+//       action: goBack, // Note the use of an action property\r\n+//     },\r\n+//     {\r\n+//       utterance: \"go forward\",\r\n+//       response: \"Going forward.\",\r\n+//       action: goForward,\r\n+//     },\r\n+//     {\r\n+//       utterance: \"play video\",\r\n+//       // response: \"Playing video.\",\r\n+//       action: playVideo,\r\n+//     },\r\n+//     {\r\n+//       utterance: \"pause video\",\r\n+//       // response: \"Pausing video.\",\r\n+//       action: pauseVideo,\r\n+//     },\r\n+//     {\r\n+//       utterance: \"start video\",\r\n+//       // response: \"Playing video.\",\r\n+//       action: playVideo,\r\n+//     },\r\n+//     {\r\n+//       utterance: \"stop video\",\r\n+//       // response: \"Playing video.\",\r\n+//       action: pauseVideo,\r\n+//     },\r\n+//     {\r\n+//       utterance: \"scroll up\",\r\n+//       // response: \"Scrolling up.\",\r\n+//       action: scrollUp,\r\n+//     },\r\n+//     {\r\n+//       utterance: \"scroll down\",\r\n+//       // response: \"Scrolling down.\",\r\n+//       action: scrollDown,\r\n+//     },\r\n+//     {\r\n+//       utterance: \"go up\",\r\n+\r\n+//       // response: \"Scrolling up.\",\r\n+//       action: scrollUp,\r\n+//     },\r\n+//     {\r\n+//       utterance: \"go down\",\r\n+//       // response: \"Scrolling down.\",\r\n+//       action: scrollDown,\r\n+//     },\r\n+//     {\r\n+//       utterance: \"scroll to top\",\r\n+//       action: scrollToTop,\r\n+//     },\r\n+//     {\r\n+//       utterance: \"scroll to bottom\",\r\n+//       action: scrollToBottom,\r\n+//     },\r\n+//     {\r\n+//       utterance: \"go back\",\r\n+//       action: goBackRef?.current?.click, // Use goBackRef directly\r\n+//       response: \"Going back.\",\r\n+//     },\r\n+//     {\r\n+//       utterance: \"take test\",\r\n+//       action: takeTestRef?.current?.click, // Use takeTestRef directly\r\n+//       response: \"Starting the test.\",\r\n+//     },\r\n+//   ];\r\n+//   return (\r\n+//     <div className=\"speech-bot-container\">\r\n+//       <div\r\n+//         className={`button-container ${\r\n+//           isListening ? \"voicebotframeactive\" : \"voicebotframe\"\r\n+//         }`}\r\n+//       >\r\n+//         <div onClick={isListening ? stopListening : startListening}>\r\n+//           <iframe\r\n+//             src={\r\n+//               isListening\r\n+//                 ? \"https://lottie.host/?file=a89aca3f-5407-4052-82c3-2048afca7a9f/NpCdWzLSKD.json\"\r\n+//                 : \"https://lottie.host/?file=d2b6cc0e-fe95-4847-85b5-35365fca7e00/vTudpCuPZq.json\"\r\n+//             }\r\n+//             width=\"120\" // Set your desired width\r\n+//             height=\"120\" // Set your desired height\r\n+//             title={isListening ? \"Stop Animation\" : \"Start Animation\"}\r\n+//             className={isListening ? \"voicebotframeactive\" : \"voicebotframe\"}\r\n+//           ></iframe>\r\n+//           {isListening ? (\r\n+//             <div className=\"overlay\" onClick={stopListening}></div>\r\n+//           ) : (\r\n+//             <div className=\"overlay\" onClick={startListening}></div>\r\n+//           )}\r\n+//         </div>\r\n+//       </div>\r\n+//     </div>\r\n+//   );\r\n+// };\r\n+\r\n+// export default VoiceBot;\r\n"
                },
                {
                    "date": 1700825847645,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1123,3930 +1123,14 @@\n         }\r\n       },\r\n     },\r\n     {\r\n-      utterance: \"press login\",\r\n-      action: () => {\r\n-        triggerLogin();\r\n-        speak(\"Attempting to log in.\");\r\n-      },\r\n-    },\r\n-    {\r\n-      utterance: \"press record audio\",\r\n-      action: () => {\r\n-        console.log(\"Record Audio command detected\");\r\n-        setTriggerRecordAudio(true);\r\n-      },\r\n-      response: \"Started\"\r\n-    },\r\n-    \r\n-  ];\r\n-\r\n-  return (\r\n-    <div className=\"speech-bot-container\">\r\n-      <div\r\n-        className={`button-container ${\r\n-          isListening ? \"voicebotframeactive\" : \"voicebotframe\"\r\n-        }`}\r\n-      >\r\n-        {/* <button onClick={isListening ? stopListening : startListening}>\r\n-          {isListening ? \"Stop\" : \"Start\"} Animation\r\n-        </button> */}\r\n-        <img\r\n-          className=\"botimage\"\r\n-          src={chatbotimage}\r\n-          alt=\"\"\r\n-          onClick={isListening ? stopListening : startListening}\r\n-        />\r\n-      </div>\r\n-    </div>\r\n-  );\r\n-};\r\n-\r\n-export default VoiceBot;\r\n-\r\n-{\r\n-  /* // import React, { useState, useEffect, useRef } from \"react\";\r\n-// import { useNavigate, useLocation } from \"react-router-dom\";\r\n-// import Fuse from \"fuse.js\";\r\n-// import \"./VoiceBot.css\";\r\n-\r\n-// const VoiceBot = ({ videoRef }) => {\r\n-//   const [isListening, setIsListening] = useState(false);\r\n-//   const [isSpeaking, setIsSpeaking] = useState(false);\r\n-//   const recognition = useRef(null);\r\n-//   const speechSynthesis = useRef(window.speechSynthesis);\r\n-//   const [hasGreeted, setHasGreeted] = useState(false);\r\n-//   const navigate = useNavigate();\r\n-\r\n-//   useEffect(() => {\r\n-//     recognition.current = new window.webkitSpeechRecognition();\r\n-//     recognition.current.continuous = true;\r\n-//     recognition.current.interimResults = false;\r\n-//     recognition.current.onresult = onResult;\r\n-//     recognition.current.onend = onRecognitionEnd;\r\n-//     recognition.current.starting = false;\r\n-\r\n-//     // Simplified error handling, removed specific handling for 'no-speech'\r\n-//     recognition.current.onerror = (event) => {\r\n-//       console.error(\"Recognition error:\", event.error);\r\n-//       // Check if listening is true and the bot isn't speaking\r\n-//       if (isListening && !isSpeaking) {\r\n-//         // Restart recognition\r\n-//         restartRecognition();\r\n-//       }\r\n-//     };\r\n-\r\n-//     return () => {\r\n-//       if (recognition.current) {\r\n-//         recognition.current.abort();\r\n-//       }\r\n-//     };\r\n-//   }, []);\r\n-\r\n-//   useEffect(() => {\r\n-//     const checkRecognition = () => {\r\n-//       if (isListening && !isSpeaking && !recognition.current.starting) {\r\n-//         console.log(\"Restarting recognition because it's not active.\");\r\n-//         recognition.current.starting = true;\r\n-//         recognition.current.start();\r\n-//         console.log(\"Restarted recognition.\");\r\n-//       }\r\n-//     };\r\n-\r\n-//     const recognitionCheckInterval = setInterval(checkRecognition, 100); // Check every 1 second\r\n-\r\n-//     return () => {\r\n-//       clearInterval(recognitionCheckInterval);\r\n-//     };\r\n-//   }, [isListening, isSpeaking]);\r\n-\r\n-//   const restartRecognition = () => {\r\n-//     if (recognition.current.starting) {\r\n-//       console.log(\"Recognition is already starting or running.\");\r\n-//       return;\r\n-//     }\r\n-\r\n-//     recognition.current.abort(); // Stop any existing recognition process\r\n-//     recognition.current.starting = true;\r\n-//     recognition.current.start();\r\n-//     console.log(\"Recognition restarted.\");\r\n-//   };\r\n-\r\n-//   const historyStack = useRef([]);\r\n-\r\n-//   useEffect(() => {\r\n-//     return () => {\r\n-//       // Clean up the listener when the component unmounts\r\n-//       window.removeEventListener(\"popstate\", handlePopState);\r\n-//     };\r\n-//   }, []);\r\n-\r\n-//   const handlePopState = () => {\r\n-//     // This needs to handle both back and forward browser actions\r\n-//     // Use some logic to determine whether it's a back or forward action\r\n-//     // For simplicity, assume it's always back\r\n-//     historyStack.current.pop();\r\n-//     forwardStack.current.length = 0; // Clear forward stack on manual navigation\r\n-//   };\r\n-  \r\n-\r\n-//   // Add a new entry to the stack whenever navigate is called\r\n-//   const customNavigate = (to, options) => {\r\n-//     historyStack.current.push(to);\r\n-//     navigate(to, options);\r\n-//   };\r\n-\r\n-//   // Listen to popstate events to update the history stack\r\n-//   useEffect(() => {\r\n-//     window.addEventListener(\"popstate\", handlePopState);\r\n-//   }, []);\r\n-\r\n-//   const forwardStack = useRef([]);\r\n-\r\n-//   const goBack = () => {\r\n-//     if (window.history.state && window.history.state.idx > 0) {\r\n-//       window.history.back();\r\n-//       speak(\"Going back\");\r\n-//     } else {\r\n-//       speak(\"Can't go back any further.\");\r\n-//     }\r\n-//   };\r\n-\r\n-//   const goForward = () => {\r\n-//     if (window.history.state && window.history.state.idx < window.history.length - 1) {\r\n-//       window.history.forward();\r\n-//       speak(\"Going forward\");\r\n-//     } else {\r\n-//       speak(\"No forward history available.\");\r\n-//     }\r\n-//   };\r\n-\r\n-//   const playVideo = () => {\r\n-//     if (videoRef.current) {\r\n-//       videoRef.current.play();\r\n-//       speak(\"Playing video.\");\r\n-//     } else {\r\n-//       speak(\"No video to play.\");\r\n-//     }\r\n-//   };\r\n-\r\n-//   const pauseVideo = () => {\r\n-//     if (videoRef.current) {\r\n-//       videoRef.current.pause();\r\n-//       speak(\"Video paused.\");\r\n-//     } else {\r\n-//       speak(\"No video to pause.\");\r\n-//     }\r\n-//   };\r\n-\r\n-//   const scrollAmount = window.innerHeight * 0.82;\r\n-\r\n-//   const scrollUp = () => {\r\n-//     if (window.pageYOffset === 0) {\r\n-//       speak(\"Already at the top of the page.\");\r\n-//     } else {\r\n-//       window.scrollBy(0, -scrollAmount);\r\n-//       speak(\"Scrolled up.\");\r\n-//     }\r\n-//   };\r\n-\r\n-//   const scrollDown = () => {\r\n-//     const maxScrollTop =\r\n-//       document.documentElement.scrollHeight - window.innerHeight;\r\n-//     if (window.pageYOffset >= maxScrollTop) {\r\n-//       speak(\"Already at the bottom of the page.\");\r\n-//     } else {\r\n-//       window.scrollBy(0, scrollAmount);\r\n-//       speak(\"Scrolled down.\");\r\n-//     }\r\n-//   };\r\n-\r\n-//   const scrollToTop = () => {\r\n-//     if (window.pageYOffset === 0) {\r\n-//       speak(\"Already at the top of the page.\");\r\n-//     } else {\r\n-//       window.scrollTo(0, 0);\r\n-//       speak(\"Scrolled to the top of the page.\");\r\n-//     }\r\n-//   };\r\n-\r\n-//   const scrollToBottom = () => {\r\n-//     const maxScrollTop =\r\n-//       document.documentElement.scrollHeight - window.innerHeight;\r\n-//     if (window.pageYOffset >= maxScrollTop) {\r\n-//       speak(\"Already at the bottom of the page.\");\r\n-//     } else {\r\n-//       window.scrollTo(0, document.body.scrollHeight);\r\n-//       speak(\"Scrolled to the bottom of the page.\");\r\n-//     }\r\n-//   };\r\n-\r\n-//   const speak = (message) => {\r\n-//     console.log(\"speak function called with message:\", message);\r\n-//     const utterance = new SpeechSynthesisUtterance(message);\r\n-//     utterance.onend = () => {\r\n-//       setIsSpeaking(false);\r\n-//       console.log(\"Speaking ended.\");\r\n-//       if (isListening && !recognition.current.starting) {\r\n-//         console.log(\"Restarting recognition after speaking.\");\r\n-//         recognition.current.starting = true;\r\n-//         recognition.current.start();\r\n-//         console.log(\"Restarted recognition after speaking.\");\r\n-//       }\r\n-//     };\r\n-\r\n-//     setIsSpeaking(true);\r\n-//     console.log(\"Speaking started.\");\r\n-//     recognition.current.stop(); // Ensure to stop recognition before speaking\r\n-//     speechSynthesis.current.speak(utterance);\r\n-//   };\r\n-\r\n-//   const onResult = (event) => {\r\n-//     const resultIndex = event.resultIndex;\r\n-//     const transcript = event.results[resultIndex][0].transcript\r\n-//       .trim()\r\n-//       .toLowerCase();\r\n-\r\n-//     if (event.results[resultIndex].isFinal) {\r\n-//       console.log(`Recognized text: ${transcript}`);\r\n-//       if (transcript.includes(\"brain\")) {\r\n-//         console.log(\"Wake word heard, processing command...\");\r\n-//         handleCommandWithFuse(transcript.replace(\"brain\", \"\"));\r\n-//       }\r\n-//     }\r\n-//   };\r\n-\r\n-//   const onRecognitionEnd = () => {\r\n-//     recognition.current.starting = false;\r\n-//     if (isListening && !isSpeaking) {\r\n-//       restartRecognition();\r\n-//     }\r\n-//   };\r\n-\r\n-//   useEffect(() => {\r\n-//     if (isListening) {\r\n-//       if (!hasGreeted) {\r\n-//         speak(\"Hello, I'm Brane. How can I help you today?\");\r\n-//         setHasGreeted(true);\r\n-//       } else {\r\n-//         speak(\"Listening.\");\r\n-//       }\r\n-//     }\r\n-//   }, [isListening, hasGreeted]);\r\n-\r\n-\r\n-//   const startListening = () => {\r\n-//     if (!recognition.current.starting) {\r\n-//       setIsListening(true);\r\n-//       restartRecognition();\r\n-//     }\r\n-//   };\r\n-\r\n-//   const stopListening = () => {\r\n-//     setIsListening(false);\r\n-//     recognition.current.abort();\r\n-//     if (speechSynthesis.current.speaking) {\r\n-//       speechSynthesis.current.cancel();\r\n-//     }\r\n-//   };\r\n-\r\n-//   const handleCommandWithFuse = (command) => {\r\n-//     const fuse = new Fuse(commands, { keys: [\"utterance\"], threshold: 0.4 });\r\n-//     const results = fuse.search(command);\r\n-//     const foundCommand = results.length ? results[0].item : null;\r\n-\r\n-//     if (foundCommand) {\r\n-//       console.log(\"Command found:\", foundCommand.utterance);\r\n-\r\n-//       if (foundCommand.action) {\r\n-//         foundCommand.action();\r\n-//       } else if (foundCommand.route) {\r\n-//         navigate(foundCommand.route);\r\n-//       }\r\n-\r\n-//       // Speak after performing the action or navigation\r\n-//       speak(foundCommand.response);\r\n-//     } else {\r\n-//       console.log(\"No command found.\");\r\n-//       speak(\"I'm not sure how to respond to that.\");\r\n-//     }\r\n-//   };\r\n-\r\n-//   const commands = [\r\n-//     {\r\n-//       utterance: \"Hello who are you ?\",\r\n-\r\n-//       response:\r\n-//         \"Hi! This is Brane! your Voice bot from Brane Education How can I Assist you Today ?\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"Hello\",\r\n-\r\n-//       response: \"Hi! How can I assist you today?\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"hello\",\r\n-\r\n-//       response: \"Hi! How can I assist you today?\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"Hi.\",\r\n-\r\n-//       response: \"Hello! How can I assist you today?\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"Hey there\",\r\n-\r\n-//       response: \"Hi! How can I assist you today?\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"Good morning Brane.\",\r\n-\r\n-//       response: \"Hey Hiii! Good morning  ! How can I help you?\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"Good afternoon Brane.\",\r\n-\r\n-//       response: \"Hey Hiii! Good after noon ! How can I help you?\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"Good evening Brane.\",\r\n-\r\n-//       response: \"Hey Hiii! Good evening ! How can I help you?\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"can you please take me to login page\",\r\n-\r\n-//       route: \"/login\",\r\n-\r\n-//       response: \"Here's the Login Page, Please Login\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"please take me to login page\",\r\n-\r\n-//       route: \"/login\",\r\n-\r\n-//       response: \"Here's the Login Page, Please Login\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"Go to login page\",\r\n-\r\n-//       route: \"/login\",\r\n-\r\n-//       response: \"Here's the Login Page, Please Login\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"open login page\",\r\n-\r\n-//       route: \"/login\",\r\n-\r\n-//       response: \"Here's the Login Page, Please Login\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"can you please take me to signup page\",\r\n-\r\n-//       route: \"/signup\",\r\n-\r\n-//       response: \"Here's the signup page. Please proceed With Registration.\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"take me to signup page\",\r\n-\r\n-//       route: \"/signup\",\r\n-\r\n-//       response: \"Here's the signup page. Please proceed With Registration.\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"Go to signup page\",\r\n-\r\n-//       route: \"/signup\",\r\n-\r\n-//       response: \"Here's the signup page. Please proceed With Registration.\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"open signup page\",\r\n-\r\n-//       route: \"/signup\",\r\n-\r\n-//       response: \"Here's the signup page. Please proceed With Registration.\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"Go to face id\",\r\n-\r\n-//       route: \"/login/faceid\",\r\n-\r\n-//       response: \"Here's Face ID Login. Please proceed.\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"Go to face id login\",\r\n-\r\n-//       route: \"/login/faceid\",\r\n-\r\n-//       response: \"Here's Face ID Login. Please proceed.\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"login with face id\",\r\n-\r\n-//       route: \"/login/faceid\",\r\n-\r\n-//       response: \"Here's Face ID Login. Please proceed.\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"login with face\",\r\n-\r\n-//       route: \"/login/faceid\",\r\n-\r\n-//       response: \"Here's Face ID Login. Please proceed.\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"i want to login with face\",\r\n-\r\n-//       route: \"/login/faceid\",\r\n-\r\n-//       response: \"Here's Face ID Login. Please proceed.\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"login with voice\",\r\n-\r\n-//       route: \"/login/voiceid\",\r\n-\r\n-//       response: \"Here's Voice Login. Please proceed.\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"i want to login with voice\",\r\n-\r\n-//       route: \"/login/voiceid\",\r\n-\r\n-//       response: \"Here's Voice Login. Please proceed.\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"go to voice login\",\r\n-\r\n-//       route: \"/login/voiceid\",\r\n-\r\n-//       response: \"Here's Voice Login. Please proceed.\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"login with voice\",\r\n-\r\n-//       route: \"/login/voiceid\",\r\n-\r\n-//       response: \"Here's Voice Login. Please proceed.\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"login with mobile\",\r\n-\r\n-//       route: \"/login/mobile\",\r\n-\r\n-//       response: \"Here's Mobile Login. Please proceed.\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"i want to login with mobile\",\r\n-\r\n-//       route: \"/login/mobile\",\r\n-\r\n-//       response: \"Here's Mobile Login. Please proceed.\",\r\n-//     },\r\n-//     {\r\n-//       utterance: \"go to mobile login\",\r\n-\r\n-//       route: \"/login/mobile\",\r\n-\r\n-//       response: \"Here's Mobile Login. Please proceed.\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"what are platform features\",\r\n-\r\n-//       response:\r\n-//         \"Dashboard, Dynamic time table, Learning Networks, Little Masters, Video Based Dictionary, General Search.\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"Features of platform\",\r\n-\r\n-//       response:\r\n-//         \"Dashboard, Dynamic time table, Learning Networks, Little Masters, Video Based Dictionary, General Search.\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"What does the platform offer\",\r\n-\r\n-//       response:\r\n-//         \"Dashboard, Dynamic time table, Learning Networks, Little Masters, Video Based Dictionary, General Search.\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"Say me the features of platform\",\r\n-\r\n-//       response:\r\n-//         \"Dashboard, Dynamic time table, Learning Networks, Little Masters, Video Based Dictionary, General Search.\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"Say me the services of platform\",\r\n-\r\n-//       response:\r\n-//         \"Dashboard, Dynamic time table, Learning Networks, Little Masters, Video Based Dictionary, General Search.\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"tell me the services offered by the platform\",\r\n-\r\n-//       response:\r\n-//         \"Dashboard, Dynamic time table, Learning Networks, Little Masters, Video Based Dictionary, General Search.\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"explain platform services\",\r\n-\r\n-//       response:\r\n-//         \"Dashboard, Dynamic time table, Learning Networks, Little Masters, Video Based Dictionary, General Search.\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"Give me the Parent voice of Julia Harris\",\r\n-\r\n-//       response:\r\n-//         \"Brane education has helped my son a lot in his studies. He improved a lot in his studies and is now able to score good marks in his exams\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"Play today's motivational video\",\r\n-\r\n-//       response: \"I am playing the video\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"Play today's video\",\r\n-\r\n-//       response: \"I am playing Motivational video\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"Leaders Voice\",\r\n-\r\n-//       response:\r\n-//         \"This Voice-interactive AI Platform is a game Changer. It revolutionizes education.\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"Curriculum Supported by Brane Education\",\r\n-\r\n-//       response:\r\n-//         \"we support multiple Boards let me say few Telangana State Board Andhra Pradesh Board Maharashtra Board Assam Board\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"Boards supported by the platform\",\r\n-\r\n-//       response:\r\n-//         \"we support multiple Boards let me say few Telangana State Board Andhra Pradesh Board Maharashtra Board Assam Board\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"Curriculum\",\r\n-\r\n-//       response:\r\n-//         \"we support multiple Boards let me say few Telangana State Board Andhra Pradesh Board Maharashtra Board Assam Board\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"Go to landing page\",\r\n-\r\n-//       response: \"Okay, I am taking you to the landing page.\",\r\n-\r\n-//       route: \"/childpage\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"take me to landing page\",\r\n-\r\n-//       response: \"Okay, I am taking you to the landing page.\",\r\n-\r\n-//       route: \"/childpage\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"move to landing page\",\r\n-\r\n-//       response: \"Okay, I am taking you to the landing page.\",\r\n-\r\n-//       route: \"/childpage\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"roll back to landing page\",\r\n-\r\n-//       response: \"Okay, I am taking you to the landing page.\",\r\n-\r\n-//       route: \"/childpage\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"move to landing page\",\r\n-\r\n-//       response: \"Okay, I am taking you to the landing page.\",\r\n-\r\n-//       route: \"/childpage\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"what is today's quote\",\r\n-\r\n-//       response:\r\n-//         \"Determination is the power that sees us through all our frustration and obstacles. It helps in building our willpower which is the very basis of success.\",\r\n-\r\n-//       route: \"/childpage\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"Today's Inspirational quote\",\r\n-\r\n-//       response:\r\n-//         \"Determination is the power that sees us through all our frustration and obstacles. It helps in building our willpower which is the very basis of success.\",\r\n-\r\n-//       route: \"/childpage\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"say me today's quote\",\r\n-\r\n-//       response:\r\n-//         \"Determination is the power that sees us through all our frustration and obstacles. It helps in building our willpower which is the very basis of success.\",\r\n-\r\n-//       route: \"/childpage\",\r\n-//     },\r\n-//     {\r\n-//       utterance: \"go back\",\r\n-//       response: \"\",\r\n-//       action: goBack, // Note the use of an action property\r\n-//     },\r\n-//     {\r\n-//       utterance: \"go forward\",\r\n-//       response: \"\",\r\n-//       action: goForward,\r\n-//     },\r\n-//     {\r\n-//       utterance: \"play video\",\r\n-//       // response: \"Playing video.\",\r\n-//       action: playVideo,\r\n-//     },\r\n-//     {\r\n-//       utterance: \"pause video\",\r\n-//       // response: \"Pausing video.\",\r\n-//       action: pauseVideo,\r\n-//     },\r\n-//     {\r\n-//       utterance: \"start video\",\r\n-//       // response: \"Playing video.\",\r\n-//       action: playVideo,\r\n-//     },\r\n-//     {\r\n-//       utterance: \"stop video\",\r\n-//       // response: \"Playing video.\",\r\n-//       action: pauseVideo,\r\n-//     },\r\n-//     {\r\n-//       utterance: \"scroll up\",\r\n-//       // response: \"Scrolling up.\",\r\n-//       action: scrollUp,\r\n-//     },\r\n-//     {\r\n-//       utterance: \"scroll down\",\r\n-//       // response: \"Scrolling down.\",\r\n-//       action: scrollDown,\r\n-//     },\r\n-//     {\r\n-//       utterance: \"go up\",\r\n-\r\n-//       // response: \"Scrolling up.\",\r\n-//       action: scrollUp,\r\n-//     },\r\n-//     {\r\n-//       utterance: \"go down\",\r\n-//       // response: \"Scrolling down.\",\r\n-//       action: scrollDown,\r\n-//     },\r\n-//     {\r\n-//       utterance: \"scroll to top\",\r\n-//       action: scrollToTop,\r\n-//     },\r\n-//     {\r\n-//       utterance: \"scroll to bottom\",\r\n-//       action: scrollToBottom,\r\n-//     },\r\n-//     {\r\n-//       utterance: \"brane stop\",\r\n-//       action: stopListening,\r\n-//     },\r\n-//     {\r\n-//       utterance: \"brane turn off\",\r\n-//       action: stopListening,\r\n-//     },\r\n-//     {\r\n-//       utterance: \"brane stop the bot\",\r\n-//       action: stopListening,\r\n-//     },\r\n-//   ];\r\n-\r\n-//   return (\r\n-//     <div className=\"speech-bot-container\">\r\n-//       <div\r\n-//         className={`button-container ${\r\n-//           isListening ? \"voicebotframeactive\" : \"voicebotframe\"\r\n-//         }`}\r\n-//       >\r\n-//         <button onClick={isListening ? stopListening : startListening}>\r\n-//           {isListening ? \"Stop\" : \"Start\"} Animation\r\n-//         </button>\r\n-//         {/* <button onClick={toggleBotActive}>\r\n-//         {isBotActive ? 'Deactivate Bot' : 'Activate Bot'}\r\n-//       </button> \r\n-//       </div>\r\n-//     </div>\r\n-//   );\r\n-// };\r\n-\r\n-// export default VoiceBot; */\r\n-}\r\n-\r\n-//iska v1\r\n-\r\n-// import React, { useState, useEffect, useRef } from \"react\";\r\n-// import { useNavigate, useLocation } from \"react-router-dom\";\r\n-// import Fuse from \"fuse.js\";\r\n-// import \"./VoiceBot.css\";\r\n-\r\n-// const VoiceBot = ({ videoRef}) => {\r\n-//   const [isListening, setIsListening] = useState(false);\r\n-//   const [isSpeaking, setIsSpeaking] = useState(false);\r\n-//   const recognition = useRef(null);\r\n-//   const speechSynthesis = useRef(window.speechSynthesis);\r\n-//   const [hasGreeted, setHasGreeted] = useState(false);\r\n-//   const navigate = useNavigate();\r\n-\r\n-//  // Initialize speech recognition\r\n-//  useEffect(() => {\r\n-//   recognition.current = new window.webkitSpeechRecognition();\r\n-//   recognition.current.continuous = true;\r\n-//   recognition.current.interimResults = false;\r\n-//   recognition.current.onresult = onResult;\r\n-//   recognition.current.onend = onRecognitionEnd;\r\n-//   recognition.current.starting = false;\r\n-\r\n-//   recognition.current.onerror = (event) => {\r\n-//     console.error(\"Recognition error:\", event.error);\r\n-//     if (isListening && !isSpeaking) {\r\n-//       restartRecognition();\r\n-//     }\r\n-//   };\r\n-\r\n-//   return () => {\r\n-//     if (recognition.current) {\r\n-//       recognition.current.abort();\r\n-//     }\r\n-//   };\r\n-// }, []);\r\n-\r\n-//   // useEffect(() => {\r\n-//   //   const checkRecognition = () => {\r\n-//   //     if (isListening && !isSpeaking && !recognition.current.starting) {\r\n-//   //       console.log(\"Restarting recognition because it's not active.\");\r\n-//   //       recognition.current.starting = true;\r\n-//   //       recognition.current.start();\r\n-//   //       console.log(\"Restarted recognition.\");\r\n-//   //     }\r\n-//   //   };\r\n-\r\n-//   //   const recognitionCheckInterval = setInterval(checkRecognition, 100); // Check every .5 second\r\n-\r\n-//   //   return () => {\r\n-//   //     clearInterval(recognitionCheckInterval);\r\n-//   //   };\r\n-//   // }, [isListening, isSpeaking]);\r\n-\r\n-//   const historyStack = useRef([]);\r\n-\r\n-//   useEffect(() => {\r\n-//     return () => {\r\n-//       // Clean up the listener when the component unmounts\r\n-//       window.removeEventListener(\"popstate\", handlePopState);\r\n-//     };\r\n-//   }, []);\r\n-\r\n-//   const handlePopState = () => {\r\n-//     // This needs to handle both back and forward browser actions\r\n-//     // Use some logic to determine whether it's a back or forward action\r\n-//     // For simplicity, assume it's always back\r\n-//     historyStack.current.pop();\r\n-//     forwardStack.current.length = 0; // Clear forward stack on manual navigation\r\n-//   };\r\n-\r\n-//   // Add a new entry to the stack whenever navigate is called\r\n-//   const customNavigate = (to, options) => {\r\n-//     historyStack.current.push(to);\r\n-//     navigate(to, options);\r\n-//   };\r\n-\r\n-//   // Listen to popstate events to update the history stack\r\n-//   useEffect(() => {\r\n-//     window.addEventListener(\"popstate\", handlePopState);\r\n-//   }, []);\r\n-\r\n-//   const forwardStack = useRef([]);\r\n-\r\n-//   const goBack = () => {\r\n-//     if (window.history.state && window.history.state.idx > 0) {\r\n-//       window.history.back();\r\n-//       speak(\"Going back\");\r\n-//     } else {\r\n-//       speak(\"Can't go back any further.\");\r\n-//     }\r\n-//   };\r\n-\r\n-//   const goForward = () => {\r\n-//     if (window.history.state && window.history.state.idx < window.history.length - 1) {\r\n-//       window.history.forward();\r\n-//       speak(\"Going forward\");\r\n-//     } else {\r\n-//       speak(\"No forward history available.\");\r\n-//     }\r\n-//   };\r\n-\r\n-//   const playVideo = () => {\r\n-//     if (videoRef.current) {\r\n-//       videoRef.current.play();\r\n-//       speak(\"Playing video.\");\r\n-//     } else {\r\n-//       speak(\"No video to play.\");\r\n-//     }\r\n-//   };\r\n-\r\n-//   const pauseVideo = () => {\r\n-//     if (videoRef.current) {\r\n-//       videoRef.current.pause();\r\n-//       speak(\"Video paused.\");\r\n-//     } else {\r\n-//       speak(\"No video to pause.\");\r\n-//     }\r\n-//   };\r\n-\r\n-//   const scrollAmount = window.innerHeight * 0.82;\r\n-\r\n-//   const scrollUp = () => {\r\n-//     if (window.pageYOffset === 0) {\r\n-//       speak(\"Already at the top of the page.\");\r\n-//     } else {\r\n-//       window.scrollBy(0, -scrollAmount);\r\n-//       speak(\"Scrolled up.\");\r\n-//     }\r\n-//   };\r\n-\r\n-//   const scrollDown = () => {\r\n-//     const maxScrollTop =\r\n-//       document.documentElement.scrollHeight - window.innerHeight;\r\n-//     if (window.pageYOffset >= maxScrollTop) {\r\n-//       speak(\"Already at the bottom of the page.\");\r\n-//     } else {\r\n-//       window.scrollBy(0, scrollAmount);\r\n-//       speak(\"Scrolled down.\");\r\n-//     }\r\n-//   };\r\n-\r\n-//   const scrollToTop = () => {\r\n-//     if (window.pageYOffset === 0) {\r\n-//       speak(\"Already at the top of the page.\");\r\n-//     } else {\r\n-//       window.scrollTo(0, 0);\r\n-//       speak(\"Scrolled to the top of the page.\");\r\n-//     }\r\n-//   };\r\n-\r\n-//   const scrollToBottom = () => {\r\n-//     const maxScrollTop =\r\n-//       document.documentElement.scrollHeight - window.innerHeight;\r\n-//     if (window.pageYOffset >= maxScrollTop) {\r\n-//       speak(\"Already at the bottom of the page.\");\r\n-//     } else {\r\n-//       window.scrollTo(0, document.body.scrollHeight);\r\n-//       speak(\"Scrolled to the bottom of the page.\");\r\n-//     }\r\n-//   };\r\n-\r\n-//   const speak = (message) => {\r\n-//     const utterance = new SpeechSynthesisUtterance(message);\r\n-//     utterance.onend = () => {\r\n-//       setIsSpeaking(false);\r\n-//       // Restart recognition after speaking has ended\r\n-//       if (isListening) {\r\n-//         restartRecognition();\r\n-//       }\r\n-//     };\r\n-\r\n-//     setIsSpeaking(true);\r\n-//     // Stop recognition when the bot starts speaking\r\n-//     if (recognition.current) {\r\n-//       recognition.current.abort();\r\n-//     }\r\n-//     speechSynthesis.current.speak(utterance);\r\n-//   };\r\n-\r\n-//   const restartRecognition = () => {\r\n-//     // Check if recognition is not already started and if the bot is set to listen\r\n-//     if (recognition.current && !recognition.current.starting && isListening && !isSpeaking) {\r\n-//       // Only start recognition if it's not already active\r\n-//       if (recognition.current.state !== 'active') {\r\n-//         recognition.current.abort(); // Ensure any ongoing recognition is stopped\r\n-//         recognition.current.starting = true;\r\n-//         recognition.current.start();\r\n-//       }\r\n-//     }\r\n-//   };\r\n-\r\n-//     // Restart recognition when bot finishes speaking and isListening is true\r\n-//     useEffect(() => {\r\n-//       if (!isSpeaking && isListening) {\r\n-//         restartRecognition();\r\n-//       }\r\n-//     }, [isSpeaking, isListening]);\r\n-\r\n-//   const onResult = (event) => {\r\n-//     const resultIndex = event.resultIndex;\r\n-//     const transcript = event.results[resultIndex][0].transcript\r\n-//       .trim()\r\n-//       .toLowerCase();\r\n-\r\n-//     if (event.results[resultIndex].isFinal) {\r\n-//       console.log(`Recognized text: ${transcript}`);\r\n-//       if (transcript.includes(\"brain\")) {\r\n-//         console.log(\"Wake word heard, processing command...\");\r\n-//         handleCommandWithFuse(transcript.replace(\"brain\", \"\"));\r\n-//       }\r\n-//     }\r\n-//   };\r\n-\r\n-//   const onRecognitionEnd = () => {\r\n-//     recognition.current.starting = false;\r\n-//     if (isListening && !isSpeaking) {\r\n-//       restartRecognition();\r\n-//     }\r\n-//   };\r\n-\r\n-//   useEffect(() => {\r\n-//     if (isListening && !hasGreeted) {\r\n-//       speak(\"Hello, I'm Brane. How can I help you today?\");\r\n-//       setHasGreeted(true);\r\n-//     }\r\n-//   }, [isListening, hasGreeted]);\r\n-\r\n-// // Updated startListening function\r\n-// const startListening = () => {\r\n-//   setIsListening(true);\r\n-//   if (recognition.current && !recognition.current.starting) {\r\n-//     recognition.current.start();\r\n-//   }\r\n-// };\r\n-\r\n-// // Updated stopListening function\r\n-// const stopListening = () => {\r\n-//   setIsListening(false);\r\n-//   setIsSpeaking(false); // Reset speaking state\r\n-//   setHasGreeted(false); // Reset greeting state if needed\r\n-//   if (recognition.current) {\r\n-//     recognition.current.abort(); // Stop any ongoing speech recognition\r\n-//   }\r\n-//   if (speechSynthesis.current.speaking) {\r\n-//     speechSynthesis.current.cancel(); // Stop any ongoing speech synthesis\r\n-//   }\r\n-// };\r\n-\r\n-//   const handleCommandWithFuse = (command) => {\r\n-//     const fuse = new Fuse(commands, { keys: [\"utterance\"], threshold: 0.4 });\r\n-//     const results = fuse.search(command);\r\n-//     const foundCommand = results.length ? results[0].item : null;\r\n-\r\n-//     if (foundCommand) {\r\n-//       console.log(\"Command found:\", foundCommand.utterance);\r\n-\r\n-//       if (foundCommand.action) {\r\n-//         foundCommand.action();\r\n-//       } else if (foundCommand.route) {\r\n-//         navigate(foundCommand.route);\r\n-//       }\r\n-\r\n-//       // Speak after performing the action or navigation\r\n-//       speak(foundCommand.response);\r\n-//     } else {\r\n-//       console.log(\"No command found.\");\r\n-//       speak(\"I'm not sure how to respond to that.\");\r\n-//     }\r\n-//   };\r\n-\r\n-//   const commands = [\r\n-//     {\r\n-//       utterance: \"Hello who are you ?\",\r\n-\r\n-//       response:\r\n-//         \"Hi! This is Brane! your Voice bot from Brane Education How can I Assist you Today ?\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"Hello\",\r\n-\r\n-//       response: \"Hi! How can I assist you today?\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"hello\",\r\n-\r\n-//       response: \"Hi! How can I assist you today?\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"Hi.\",\r\n-\r\n-//       response: \"Hello! How can I assist you today?\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"Hey there\",\r\n-\r\n-//       response: \"Hi! How can I assist you today?\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"Good morning Brane.\",\r\n-\r\n-//       response: \"Hey Hiii! Good morning  ! How can I help you?\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"Good afternoon Brane.\",\r\n-\r\n-//       response: \"Hey Hiii! Good after noon ! How can I help you?\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"Good evening Brane.\",\r\n-\r\n-//       response: \"Hey Hiii! Good evening ! How can I help you?\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"can you please take me to login page\",\r\n-\r\n-//       route: \"/login\",\r\n-\r\n-//       response: \"Here's the Login Page, Please Login\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"please take me to login page\",\r\n-\r\n-//       route: \"/login\",\r\n-\r\n-//       response: \"Here's the Login Page, Please Login\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"Go to login page\",\r\n-\r\n-//       route: \"/login\",\r\n-\r\n-//       response: \"Here's the Login Page, Please Login\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"open login page\",\r\n-\r\n-//       route: \"/login\",\r\n-\r\n-//       response: \"Here's the Login Page, Please Login\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"can you please take me to signup page\",\r\n-\r\n-//       route: \"/signup\",\r\n-\r\n-//       response: \"Here's the signup page. Please proceed With Registration.\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"take me to signup page\",\r\n-\r\n-//       route: \"/signup\",\r\n-\r\n-//       response: \"Here's the signup page. Please proceed With Registration.\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"Go to signup page\",\r\n-\r\n-//       route: \"/signup\",\r\n-\r\n-//       response: \"Here's the signup page. Please proceed With Registration.\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"open signup page\",\r\n-\r\n-//       route: \"/signup\",\r\n-\r\n-//       response: \"Here's the signup page. Please proceed With Registration.\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"Go to face id\",\r\n-\r\n-//       route: \"/login/faceid\",\r\n-\r\n-//       response: \"Here's Face ID Login. Please proceed.\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"Go to face id login\",\r\n-\r\n-//       route: \"/login/faceid\",\r\n-\r\n-//       response: \"Here's Face ID Login. Please proceed.\",\r\n-//     },\r\n-//     {\r\n-//       utterance: \"Go to face login\",\r\n-\r\n-//       route: \"/login/faceid\",\r\n-\r\n-//       response: \"Here's Face ID Login. Please proceed.\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"login with face id\",\r\n-\r\n-//       route: \"/login/faceid\",\r\n-\r\n-//       response: \"Here's Face ID Login. Please proceed.\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"login with face\",\r\n-\r\n-//       route: \"/login/faceid\",\r\n-\r\n-//       response: \"Here's Face ID Login. Please proceed.\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"i want to login with face\",\r\n-\r\n-//       route: \"/login/faceid\",\r\n-\r\n-//       response: \"Here's Face ID Login. Please proceed.\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"login with voice\",\r\n-\r\n-//       route: \"/login/voiceid\",\r\n-\r\n-//       response: \"Here's Voice Login. Please proceed.\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"i want to login with voice\",\r\n-\r\n-//       route: \"/login/voiceid\",\r\n-\r\n-//       response: \"Here's Voice Login. Please proceed.\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"go to voice login\",\r\n-\r\n-//       route: \"/login/voiceid\",\r\n-\r\n-//       response: \"Here's Voice Login. Please proceed.\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"login with voice\",\r\n-\r\n-//       route: \"/login/voiceid\",\r\n-\r\n-//       response: \"Here's Voice Login. Please proceed.\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"login with mobile\",\r\n-\r\n-//       route: \"/login/mobile\",\r\n-\r\n-//       response: \"Here's Mobile Login. Please proceed.\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"i want to login with mobile\",\r\n-\r\n-//       route: \"/login/mobile\",\r\n-\r\n-//       response: \"Here's Mobile Login. Please proceed.\",\r\n-//     },\r\n-//     {\r\n-//       utterance: \"go to mobile login\",\r\n-\r\n-//       route: \"/login/mobile\",\r\n-\r\n-//       response: \"Here's Mobile Login. Please proceed.\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"what are platform features\",\r\n-\r\n-//       response:\r\n-//         \"Dashboard, Dynamic time table, Learning Networks, Little Masters, Video Based Dictionary, General Search.\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"Features of platform\",\r\n-\r\n-//       response:\r\n-//         \"Dashboard, Dynamic time table, Learning Networks, Little Masters, Video Based Dictionary, General Search.\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"What does the platform offer\",\r\n-\r\n-//       response:\r\n-//         \"Dashboard, Dynamic time table, Learning Networks, Little Masters, Video Based Dictionary, General Search.\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"Say me the features of platform\",\r\n-\r\n-//       response:\r\n-//         \"Dashboard, Dynamic time table, Learning Networks, Little Masters, Video Based Dictionary, General Search.\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"Say me the services of platform\",\r\n-\r\n-//       response:\r\n-//         \"Dashboard, Dynamic time table, Learning Networks, Little Masters, Video Based Dictionary, General Search.\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"tell me the services offered by the platform\",\r\n-\r\n-//       response:\r\n-//         \"Dashboard, Dynamic time table, Learning Networks, Little Masters, Video Based Dictionary, General Search.\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"explain platform services\",\r\n-\r\n-//       response:\r\n-//         \"Dashboard, Dynamic time table, Learning Networks, Little Masters, Video Based Dictionary, General Search.\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"Give me the Parent voice of Julia Harris\",\r\n-\r\n-//       response:\r\n-//         \"Brane education has helped my son a lot in his studies. He improved a lot in his studies and is now able to score good marks in his exams\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"Play today's motivational video\",\r\n-\r\n-//       response: \"I am playing the video\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"Play today's video\",\r\n-\r\n-//       response: \"I am playing Motivational video\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"Leaders Voice\",\r\n-\r\n-//       response:\r\n-//         \"This Voice-interactive AI Platform is a game Changer. It revolutionizes education.\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"Curriculum Supported by Brane Education\",\r\n-\r\n-//       response:\r\n-//         \"we support multiple Boards let me say few Telangana State Board Andhra Pradesh Board Maharashtra Board Assam Board\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"Boards supported by the platform\",\r\n-\r\n-//       response:\r\n-//         \"we support multiple Boards let me say few Telangana State Board Andhra Pradesh Board Maharashtra Board Assam Board\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"Curriculum\",\r\n-\r\n-//       response:\r\n-//         \"we support multiple Boards let me say few Telangana State Board Andhra Pradesh Board Maharashtra Board Assam Board\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"Go to landing page\",\r\n-\r\n-//       response: \"Okay, I am taking you to the landing page.\",\r\n-\r\n-//       route: \"/childpage\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"take me to landing page\",\r\n-\r\n-//       response: \"Okay, I am taking you to the landing page.\",\r\n-\r\n-//       route: \"/childpage\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"move to landing page\",\r\n-\r\n-//       response: \"Okay, I am taking you to the landing page.\",\r\n-\r\n-//       route: \"/childpage\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"roll back to landing page\",\r\n-\r\n-//       response: \"Okay, I am taking you to the landing page.\",\r\n-\r\n-//       route: \"/childpage\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"move to landing page\",\r\n-\r\n-//       response: \"Okay, I am taking you to the landing page.\",\r\n-\r\n-//       route: \"/childpage\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"what is today's quote\",\r\n-\r\n-//       response:\r\n-//         \"Determination is the power that sees us through all our frustration and obstacles. It helps in building our willpower which is the very basis of success.\",\r\n-\r\n-//       route: \"/childpage\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"Today's Inspirational quote\",\r\n-\r\n-//       response:\r\n-//         \"Determination is the power that sees us through all our frustration and obstacles. It helps in building our willpower which is the very basis of success.\",\r\n-\r\n-//       route: \"/childpage\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"say me today's quote\",\r\n-\r\n-//       response:\r\n-//         \"Determination is the power that sees us through all our frustration and obstacles. It helps in building our willpower which is the very basis of success.\",\r\n-\r\n-//       route: \"/childpage\",\r\n-//     },\r\n-//     {\r\n-//       utterance: \"go back\",\r\n-//       response: \"\",\r\n-//       action: goBack, // Note the use of an action property\r\n-//     },\r\n-//     {\r\n-//       utterance: \"go forward\",\r\n-//       response: \"\",\r\n-//       action: goForward,\r\n-//     },\r\n-//     {\r\n-//       utterance: \"play video\",\r\n-//       // response: \"Playing video.\",\r\n-//       action: playVideo,\r\n-//     },\r\n-//     {\r\n-//       utterance: \"pause video\",\r\n-//       // response: \"Pausing video.\",\r\n-//       action: pauseVideo,\r\n-//     },\r\n-//     {\r\n-//       utterance: \"start video\",\r\n-//       // response: \"Playing video.\",\r\n-//       action: playVideo,\r\n-//     },\r\n-//     {\r\n-//       utterance: \"stop video\",\r\n-//       // response: \"Playing video.\",\r\n-//       action: pauseVideo,\r\n-//     },\r\n-//     {\r\n-//       utterance: \"scroll up\",\r\n-//       // response: \"Scrolling up.\",\r\n-//       action: scrollUp,\r\n-//     },\r\n-//     {\r\n-//       utterance: \"scroll down\",\r\n-//       // response: \"Scrolling down.\",\r\n-//       action: scrollDown,\r\n-//     },\r\n-//     {\r\n-//       utterance: \"go up\",\r\n-\r\n-//       // response: \"Scrolling up.\",\r\n-//       action: scrollUp,\r\n-//     },\r\n-//     {\r\n-//       utterance: \"go down\",\r\n-//       // response: \"Scrolling down.\",\r\n-//       action: scrollDown,\r\n-//     },\r\n-//     {\r\n-//       utterance: \"scroll to top\",\r\n-//       action: scrollToTop,\r\n-//     },\r\n-//     {\r\n-//       utterance: \"scroll to bottom\",\r\n-//       action: scrollToBottom,\r\n-//     },\r\n-//     {\r\n-//       utterance: \"brane stop\",\r\n-//       action: stopListening,\r\n-//     },\r\n-//     {\r\n-//       utterance: \"brane turn off\",\r\n-//       action: stopListening,\r\n-//     },\r\n-//     {\r\n-//       utterance: \"brane stop the bot\",\r\n-//       action: stopListening,\r\n-//     },\r\n-//   ];\r\n-\r\n-//   return (\r\n-//     <div className=\"speech-bot-container\">\r\n-//       <div\r\n-//         className={`button-container ${\r\n-//           isListening ? \"voicebotframeactive\" : \"voicebotframe\"\r\n-//         }`}\r\n-//       >\r\n-//         <button onClick={isListening ? stopListening : startListening}>\r\n-//           {isListening ? \"Stop\" : \"Start\"} Animation\r\n-//         </button>\r\n-//         {/* <button onClick={toggleBotActive}>\r\n-//         {isBotActive ? 'Deactivate Bot' : 'Activate Bot'}\r\n-//       </button> */}\r\n-//       </div>\r\n-//     </div>\r\n-//   );\r\n-// };\r\n-\r\n-// export default VoiceBot;\r\n-\r\n-//Bot Video added but some start issues\r\n-\r\n-// import React, { useState, useEffect, useRef } from \"react\";\r\n-// import { useNavigate, useLocation } from \"react-router-dom\";\r\n-// import Fuse from \"fuse.js\";\r\n-// import \"./VoiceBot.css\";\r\n-\r\n-// const VoiceBot = ({ videoRef }) => {\r\n-//   const [isListening, setIsListening] = useState(false);\r\n-//   const [isSpeaking, setIsSpeaking] = useState(false);\r\n-//   const recognition = useRef(null);\r\n-//   const speechSynthesis = useRef(window.speechSynthesis);\r\n-//   const hasGreeted = useRef(false);\r\n-//   const restartRecognitionTimeout = useRef(null);\r\n-//   const navigate = useNavigate();\r\n-//   const location = useLocation();\r\n-//   const [isRecognitionActive, setIsRecognitionActive] = useState(false); // New state to track recognition status\r\n-\r\n-//   useEffect(() => {\r\n-//     recognition.current = new window.webkitSpeechRecognition();\r\n-//     recognition.current.continuous = true;\r\n-//     recognition.current.interimResults = false;\r\n-//     recognition.current.onresult = onResult;\r\n-//     recognition.current.onend = () => {\r\n-//       console.log(\"Recognition ended.\");\r\n-//       if (isListening) {\r\n-//         startListening();\r\n-//       }\r\n-//     };\r\n-//     recognition.current.onerror = (event) => {\r\n-//       console.error(\"Recognition error:\", event.error);\r\n-//     };\r\n-\r\n-//     return () => {\r\n-//       recognition.current.abort();\r\n-//     };\r\n-//   }, []);\r\n-\r\n-//   // Update useEffect for managing the recognition state based on isListening and isRecognitionActive\r\n-//   useEffect(() => {\r\n-//     if (isListening && !isRecognitionActive) {\r\n-//       startListening();\r\n-//     } else if (!isListening && isRecognitionActive) {\r\n-//       stopListening();\r\n-//     }\r\n-//   }, [isListening, isRecognitionActive]);\r\n-\r\n-//   const goBack = () => {\r\n-//     if (window.history.length > 1) {\r\n-//       navigate(-1);\r\n-//     } else {\r\n-//       speak(\"Can't go back any further.\");\r\n-//     }\r\n-//   };\r\n-\r\n-//   const goForward = () => {\r\n-//     // Unfortunately, there's no direct way to check if you can go forward in the history.\r\n-//     // You might need to manage this state manually based on user navigation.\r\n-//     navigate(1);\r\n-//   };\r\n-\r\n-//   const playVideo = () => {\r\n-//     if (videoRef.current && !videoRef.current.paused) {\r\n-//       speak(\"Video is already playing.\");\r\n-//     } else if (videoRef.current) {\r\n-//       videoRef.current.play();\r\n-//       speak(\"Playing video.\");\r\n-//     } else {\r\n-//       speak(\"No video to play.\");\r\n-//     }\r\n-//   };\r\n-\r\n-//   const pauseVideo = () => {\r\n-//     if (videoRef.current && videoRef.current.paused) {\r\n-//       speak(\"Video is already paused.\");\r\n-//     } else if (videoRef.current) {\r\n-//       videoRef.current.pause();\r\n-//       speak(\"Video paused.\");\r\n-//     } else {\r\n-//       speak(\"No video to pause.\");\r\n-//     }\r\n-//   };\r\n-\r\n-//   const scrollAmount = window.innerHeight * 0.82;\r\n-\r\n-//   const scrollUp = () => {\r\n-//     if (window.pageYOffset === 0) {\r\n-//       speak(\"Already at the top of the page.\");\r\n-//     } else {\r\n-//       window.scrollBy(0, -scrollAmount);\r\n-//       speak(\"Scrolled up.\");\r\n-//     }\r\n-//   };\r\n-\r\n-//   const scrollDown = () => {\r\n-//     const maxScrollTop =\r\n-//       document.documentElement.scrollHeight - window.innerHeight;\r\n-//     if (window.pageYOffset >= maxScrollTop) {\r\n-//       speak(\"Already at the bottom of the page.\");\r\n-//     } else {\r\n-//       window.scrollBy(0, scrollAmount);\r\n-//       speak(\"Scrolled down.\");\r\n-//     }\r\n-//   };\r\n-\r\n-//   const scrollToTop = () => {\r\n-//     if (window.pageYOffset === 0) {\r\n-//       speak(\"Already at the top of the page.\");\r\n-//     } else {\r\n-//       window.scrollTo(0, 0);\r\n-//       speak(\"Scrolled to the top of the page.\");\r\n-//     }\r\n-//   };\r\n-\r\n-//   const scrollToBottom = () => {\r\n-//     const maxScrollTop =\r\n-//       document.documentElement.scrollHeight - window.innerHeight;\r\n-//     if (window.pageYOffset >= maxScrollTop) {\r\n-//       speak(\"Already at the bottom of the page.\");\r\n-//     } else {\r\n-//       window.scrollTo(0, document.body.scrollHeight);\r\n-//       speak(\"Scrolled to the bottom of the page.\");\r\n-//     }\r\n-//   };\r\n-\r\n-//   // const speak = (message) => {\r\n-//   //   const utterance = new SpeechSynthesisUtterance(message);\r\n-//   //   utterance.onend = () => {\r\n-//   //     setIsSpeaking(false);\r\n-//   //     console.log(\"Speaking ended.\");\r\n-//   //     // Only restart recognition if we're still supposed to be listening\r\n-//   //     // if (isListening) {\r\n-//   //     //   if (restartRecognitionTimeout.current) {\r\n-//   //     //     clearTimeout(restartRecognitionTimeout.current);\r\n-//   //     //   }\r\n-//   //     //   restartRecognitionTimeout.current = setTimeout(() => {\r\n-//   //     //     console.log(\"Recognition restarted.\");\r\n-//   //     //     recognition.current.start();\r\n-//   //     //   }, 100); // Delay to prevent immediate restart\r\n-//   //     // }\r\n-//   //     if (isListening && !recognition.current.starting) { // Check the flag before restarting\r\n-//   //       recognition.current.starting = true; // Set the flag when starting recognition\r\n-//   //       recognition.current.start();\r\n-//   //     }\r\n-//   //   };\r\n-\r\n-//   //   setIsSpeaking(true);\r\n-//   //   console.log(\"Speaking started.\");\r\n-//   //   recognition.current.stop(); // Stop recognition when the bot starts speaking\r\n-//   //   speechSynthesis.current.speak(utterance);\r\n-//   // };\r\n-\r\n-//   const speak = (message) => {\r\n-//     console.log(\"speak function called with message:\", message);\r\n-//     const utterance = new SpeechSynthesisUtterance(message);\r\n-//     utterance.onend = () => {\r\n-//       setIsSpeaking(false);\r\n-//       console.log(\"Speaking ended.\");\r\n-//       // Directly handle the restart of recognition here if needed\r\n-//       if (isListening) {\r\n-//         startListening();\r\n-//       }\r\n-//     };\r\n-\r\n-//     setIsSpeaking(true);\r\n-//     console.log(\"Speaking started.\");\r\n-//     recognition.current.stop(); // Ensure to stop recognition before speaking\r\n-//     speechSynthesis.current.speak(utterance);\r\n-//   };\r\n-\r\n-//   const onResult = (event) => {\r\n-//     const resultIndex = event.resultIndex;\r\n-//     const transcript = event.results[resultIndex][0].transcript\r\n-//       .trim()\r\n-//       .toLowerCase();\r\n-\r\n-//     if (event.results[resultIndex].isFinal) {\r\n-//       console.log(`Recognized text: ${transcript}`);\r\n-//       if (transcript.includes(\"brain\")) {\r\n-//         console.log(\"Wake word heard, processing command...\");\r\n-//         handleCommandWithFuse(transcript.replace(\"brain\", \"\"));\r\n-//       }\r\n-//     }\r\n-//   };\r\n-\r\n-//   // const onRecognitionEnd = () => {\r\n-//   //   console.log(\"Recognition ended.\");\r\n-//   //   setIsRecognitionActive(false); // Update state when recognition ends\r\n-//   //   recognition.current.starting = false; // Reset the flag when recognition ends\r\n-//   //   // We now check if the recognition is already running before starting it again\r\n-//   //   if (isListening && !isSpeaking && !recognition.current?.starting) {\r\n-//   //     console.log(\"Restarting recognition.\");\r\n-//   //     recognition.current.start();\r\n-//   //   }\r\n-//   // };\r\n-\r\n-//   // useEffect(() => {\r\n-//   //   if (isListening && !hasGreeted.current) {\r\n-//   //     speak(\"Hello, I'm Brane. How can I assist you today?\");\r\n-//   //     hasGreeted.current = true;\r\n-//   //   } else if (isListening && !isSpeaking) {\r\n-//   //     recognition.current.start();\r\n-//   //   }\r\n-//   // }, [isListening, isSpeaking]);\r\n-\r\n-//   useEffect(() => {\r\n-//     if (isListening && !hasGreeted.current) {\r\n-//       speak(\"Hello, I'm Brane. How can I assist you today?\");\r\n-//       hasGreeted.current = true;\r\n-//     } else if (isListening && !isSpeaking && !recognition.current.starting) {\r\n-//       // Check the flag before starting\r\n-//       recognition.current.starting = true; // Set the flag when starting recognition\r\n-//       recognition.current.start();\r\n-//     }\r\n-//   }, [isListening, isSpeaking]);\r\n-\r\n-//   // const startListening = () => {\r\n-//   //   console.log(\"Attempting to start listening.\");\r\n-//   //   if (recognition.current && !recognition.current.starting) {\r\n-//   //     setIsListening(true);\r\n-//   //     recognition.current.starting = true; // Set the flag when starting recognition\r\n-//   //     recognition.current.start();\r\n-//   //     console.log(\"Listening started.\");\r\n-//   //   }\r\n-//   // };\r\n-\r\n-//   // const stopListening = () => {\r\n-//   //   console.log(\"Stopping listening.\");\r\n-\r\n-//   //   setIsListening(false);\r\n-//   //   recognition.current.stop();\r\n-//   //   if (speechSynthesis.current.speaking) {\r\n-//   //     speechSynthesis.current.cancel();\r\n-//   //   }\r\n-//   //   if (restartRecognitionTimeout.current) {\r\n-//   //     clearTimeout(restartRecognitionTimeout.current);\r\n-//   //   }\r\n-//   //   console.log(\"Listening stopped.\");\r\n-//   // };\r\n-//   // Handle start and stop listening logic\r\n-//   const startListening = () => {\r\n-//     console.log(\"Attempting to start listening.\");\r\n-//     if (!recognition.current.starting) {\r\n-//       setIsListening(true);\r\n-//       recognition.current.starting = true;\r\n-//       recognition.current.start();\r\n-//       console.log(\"Listening started.\");\r\n-//     } else {\r\n-//       console.log(\"Recognition already active.\");\r\n-//     }\r\n-//   };\r\n-\r\n-//   const stopListening = () => {\r\n-//     console.log(\"Stopping listening.\");\r\n-//     if (recognition.current.starting) {\r\n-//       setIsListening(false);\r\n-//       recognition.current.starting = false;\r\n-//       recognition.current.stop();\r\n-//       console.log(\"Listening stopped.\");\r\n-//     } else {\r\n-//       console.log(\"Recognition already inactive.\");\r\n-//     }\r\n-//   };\r\n-\r\n-//   // const handleCommandWithFuse = (command) => {\r\n-//   //   const fuse = new Fuse(commands, { keys: [\"utterance\"], threshold: 0.4 });\r\n-//   //   const results = fuse.search(command);\r\n-//   //   const foundCommand = results.length ? results[0].item : null;\r\n-\r\n-//   //   if (foundCommand) {\r\n-//   //     console.log(\"Command found:\", foundCommand.utterance);\r\n-//   //     speak(foundCommand.response);\r\n-//   //     if (foundCommand.route) {\r\n-//   //       navigate(foundCommand.route); // Navigate to the route specified in the command\r\n-//   //     }\r\n-//   //   } else {\r\n-//   //     console.log(\"No command found.\");\r\n-//   //     speak(\"I'm not sure how to respond to that.\");\r\n-//   //   }\r\n-//   // };\r\n-\r\n-//   const handleCommandWithFuse = (command) => {\r\n-//     const fuse = new Fuse(commands, { keys: [\"utterance\"], threshold: 0.4 });\r\n-//     const results = fuse.search(command);\r\n-//     const foundCommand = results.length ? results[0].item : null;\r\n-\r\n-//     if (foundCommand) {\r\n-//       console.log(\"Command found:\", foundCommand.utterance);\r\n-\r\n-//       if (foundCommand.route) {\r\n-//         if (location.pathname !== foundCommand.route) {\r\n-//           navigate(foundCommand.route);\r\n-//           speak(\r\n-//             `Navigating to ${\r\n-//               foundCommand.routeDescription || \"requested page\"\r\n-//             }.`\r\n-//           );\r\n-//         } else {\r\n-//           speak(\r\n-//             `You are already on the ${\r\n-//               foundCommand.routeDescription || \"requested page\"\r\n-//             }.`\r\n-//           );\r\n-//         }\r\n-//       } else if (foundCommand.action) {\r\n-//         foundCommand.action();\r\n-//       }\r\n-\r\n-//       if (foundCommand.response) {\r\n-//         speak(foundCommand.response);\r\n-//       }\r\n-//     } else {\r\n-//       console.log(\"No command found.\");\r\n-//       speak(\"I'm not sure how to respond to that.\");\r\n-//     }\r\n-//   };\r\n-\r\n-//   const commands = [\r\n-//     {\r\n-//       utterance: \"Hello who are you ?\",\r\n-\r\n-//       response:\r\n-//         \"Hi! This is Brane! your Voice bot from Brane Education How can I Assist you Today ?\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"Hello\",\r\n-\r\n-//       response: \"Hi! How can I assist you today?\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"hello\",\r\n-\r\n-//       response: \"Hi! How can I assist you today?\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"Hi.\",\r\n-\r\n-//       response: \"Hello! How can I assist you today?\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"Hey there\",\r\n-\r\n-//       response: \"Hi! How can I assist you today?\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"Good morning Brane.\",\r\n-\r\n-//       response: \"Hey Hiii! Good morning  ! How can I help you?\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"Good afternoon Brane.\",\r\n-\r\n-//       response: \"Hey Hiii! Good after noon ! How can I help you?\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"Good evening Brane.\",\r\n-\r\n-//       response: \"Hey Hiii! Good evening ! How can I help you?\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"can you please take me to login page\",\r\n-//       route: \"/login\",\r\n-//       routeDescription: \"login page\",\r\n-//       response: \"Navigating to the login page.\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"go to login page\",\r\n-//       route: \"/login\",\r\n-//       routeDescription: \"login page\",\r\n-//       response: \"Navigating to the login page.\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"please take me to login page\",\r\n-//       route: \"/login\",\r\n-//       routeDescription: \"login page\",\r\n-//       response: \"Navigating to the login page.\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"Go to login page\",\r\n-//       route: \"/login\",\r\n-//       routeDescription: \"login page\",\r\n-//       response: \"Navigating to the login page.\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"open login page\",\r\n-//       route: \"/login\",\r\n-//       routeDescription: \"login page\",\r\n-//       response: \"Navigating to the login page.\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"can you please take me to signup page\",\r\n-//       route: \"/signup\",\r\n-//       routeDescription: \"signup page\",\r\n-//       response: \"Navigating to the signup page.\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"take me to signup page\",\r\n-//       route: \"/signup\",\r\n-//       routeDescription: \"signup page\",\r\n-//       response: \"Navigating to the signup page.\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"Go to signup page\",\r\n-//       route: \"/signup\",\r\n-//       routeDescription: \"signup page\",\r\n-//       response: \"Navigating to the signup page.\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"open signup page\",\r\n-//       route: \"/signup\",\r\n-//       routeDescription: \"signup page\",\r\n-//       response: \"Navigating to the signup page.\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"what are platform features\",\r\n-\r\n-//       response:\r\n-//         \"Dashboard, Dynamic time table, Learning Networks, Little Masters, Video Based Dictionary, General Search.\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"Features of platform\",\r\n-\r\n-//       response:\r\n-//         \"Dashboard, Dynamic time table, Learning Networks, Little Masters, Video Based Dictionary, General Search.\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"What does the platform offer\",\r\n-\r\n-//       response:\r\n-//         \"Dashboard, Dynamic time table, Learning Networks, Little Masters, Video Based Dictionary, General Search.\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"Say me the features of platform\",\r\n-\r\n-//       response:\r\n-//         \"Dashboard, Dynamic time table, Learning Networks, Little Masters, Video Based Dictionary, General Search.\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"Say me the services of platform\",\r\n-\r\n-//       response:\r\n-//         \"Dashboard, Dynamic time table, Learning Networks, Little Masters, Video Based Dictionary, General Search.\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"tell me the services offered by the platform\",\r\n-\r\n-//       response:\r\n-//         \"Dashboard, Dynamic time table, Learning Networks, Little Masters, Video Based Dictionary, General Search.\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"explain platform services\",\r\n-\r\n-//       response:\r\n-//         \"Dashboard, Dynamic time table, Learning Networks, Little Masters, Video Based Dictionary, General Search.\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"Give me the Parent voice of Julia Harris\",\r\n-\r\n-//       response:\r\n-//         \"Brane education has helped my son a lot in his studies. He improved a lot in his studies and is now able to score good marks in his exams\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"Play today's motivational video\",\r\n-\r\n-//       response: \"I am playing the video\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"Play today's video\",\r\n-\r\n-//       response: \"I am playing Motivational video\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"Leaders Voice\",\r\n-\r\n-//       response:\r\n-//         \"This Voice-interactive AI Platform is a game Changer. It revolutionizes education.\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"Curriculum Supported by Brane Education\",\r\n-\r\n-//       response:\r\n-//         \"we support multiple Boards let me say few Telangana State Board Andhra Pradesh Board Maharashtra Board Assam Board\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"Boards supported by the platform\",\r\n-\r\n-//       response:\r\n-//         \"we support multiple Boards let me say few Telangana State Board Andhra Pradesh Board Maharashtra Board Assam Board\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"Curriculum\",\r\n-\r\n-//       response:\r\n-//         \"we support multiple Boards let me say few Telangana State Board Andhra Pradesh Board Maharashtra Board Assam Board\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"Go to landing page\",\r\n-\r\n-//       response: \"Okay, I am taking you to the landing page.\",\r\n-\r\n-//       route: \"/childpage\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"take me to landing page\",\r\n-\r\n-//       response: \"Okay, I am taking you to the landing page.\",\r\n-\r\n-//       route: \"/childpage\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"move to landing page\",\r\n-\r\n-//       response: \"Okay, I am taking you to the landing page.\",\r\n-\r\n-//       route: \"/childpage\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"roll back to landing page\",\r\n-\r\n-//       response: \"Okay, I am taking you to the landing page.\",\r\n-\r\n-//       route: \"/childpage\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"move to landing page\",\r\n-\r\n-//       response: \"Okay, I am taking you to the landing page.\",\r\n-\r\n-//       route: \"/childpage\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"what is today's quote\",\r\n-\r\n-//       response:\r\n-//         \"Determination is the power that sees us through all our frustration and obstacles. It helps in building our willpower which is the very basis of success.\",\r\n-\r\n-//       // route: \"/childpage\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"Today's Inspirational quote\",\r\n-\r\n-//       response:\r\n-//         \"Determination is the power that sees us through all our frustration and obstacles. It helps in building our willpower which is the very basis of success.\",\r\n-\r\n-//       // route: \"/childpage\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"say me today's quote\",\r\n-\r\n-//       response:\r\n-//         \"Determination is the power that sees us through all our frustration and obstacles. It helps in building our willpower which is the very basis of success.\",\r\n-\r\n-//       // route: \"/childpage\",\r\n-//     },\r\n-//     {\r\n-//       utterance: \"go back\",\r\n-//       response: \"Going back.\",\r\n-//       action: goBack, // Note the use of an action property\r\n-//     },\r\n-//     {\r\n-//       utterance: \"go forward\",\r\n-//       response: \"Going forward.\",\r\n-//       action: goForward,\r\n-//     },\r\n-//     {\r\n-//       utterance: \"play video\",\r\n-//       // response: \"Playing video.\",\r\n-//       action: playVideo,\r\n-//     },\r\n-//     {\r\n-//       utterance: \"pause video\",\r\n-//       // response: \"Pausing video.\",\r\n-//       action: pauseVideo,\r\n-//     },\r\n-//     {\r\n-//       utterance: \"start video\",\r\n-//       // response: \"Playing video.\",\r\n-//       action: playVideo,\r\n-//     },\r\n-//     {\r\n-//       utterance: \"stop video\",\r\n-//       // response: \"Playing video.\",\r\n-//       action: pauseVideo,\r\n-//     },\r\n-//     {\r\n-//       utterance: \"scroll up\",\r\n-//       // response: \"Scrolling up.\",\r\n-//       action: scrollUp,\r\n-//     },\r\n-//     {\r\n-//       utterance: \"scroll down\",\r\n-//       // response: \"Scrolling down.\",\r\n-//       action: scrollDown,\r\n-//     },\r\n-//     {\r\n-//       utterance: \"go up\",\r\n-\r\n-//       // response: \"Scrolling up.\",\r\n-//       action: scrollUp,\r\n-//     },\r\n-//     {\r\n-//       utterance: \"go down\",\r\n-//       // response: \"Scrolling down.\",\r\n-//       action: scrollDown,\r\n-//     },\r\n-//     {\r\n-//       utterance: \"scroll to top\",\r\n-//       action: scrollToTop,\r\n-//     },\r\n-//     {\r\n-//       utterance: \"scroll to bottom\",\r\n-//       action: scrollToBottom,\r\n-//     },\r\n-//   ];\r\n-//   return (\r\n-//     <div className=\"speech-bot-container\">\r\n-//       <div\r\n-//         className={`button-container ${\r\n-//           isListening ? \"voicebotframeactive\" : \"voicebotframe\"\r\n-//         }`}\r\n-//       >\r\n-//         <div onClick={isListening ? stopListening : startListening}>\r\n-//           <iframe\r\n-//             src={\r\n-//               isListening\r\n-//                 ? \"https://lottie.host/?file=a89aca3f-5407-4052-82c3-2048afca7a9f/NpCdWzLSKD.json\"\r\n-//                 : \"https://lottie.host/?file=d2b6cc0e-fe95-4847-85b5-35365fca7e00/vTudpCuPZq.json\"\r\n-//             }\r\n-//             width=\"120\" // Set your desired width\r\n-//             height=\"120\" // Set your desired height\r\n-//             title={isListening ? \"Stop Animation\" : \"Start Animation\"}\r\n-//             className={isListening ? \"voicebotframeactive\" : \"voicebotframe\"}\r\n-//           ></iframe>\r\n-//           {isListening ? (\r\n-//             <div className=\"overlay\" onClick={stopListening}></div>\r\n-//           ) : (\r\n-//             <div className=\"overlay\" onClick={startListening}></div>\r\n-//           )}\r\n-//         </div>\r\n-//       </div>\r\n-//     </div>\r\n-//   );\r\n-// };\r\n-\r\n-// export default VoiceBot;\r\n-\r\n-// All functionalities but messed up\r\n-\r\n-// import React, { useState, useEffect, useRef } from \"react\";\r\n-// import { useNavigate, useLocation } from \"react-router-dom\";\r\n-// import Fuse from \"fuse.js\";\r\n-// import \"./VoiceBot.css\";\r\n-\r\n-// const VoiceBot = ({ videoRef, takeTestRef, goBackRef }) => {\r\n-//   const [isListening, setIsListening] = useState(false);\r\n-//   const [isSpeaking, setIsSpeaking] = useState(false);\r\n-//   const recognition = useRef(null);\r\n-//   const speechSynthesis = useRef(window.speechSynthesis);\r\n-//   const hasGreeted = useRef(false);\r\n-//   const navigate = useNavigate();\r\n-//   const location = useLocation();\r\n-//   const isRecognitionActive = useRef(false);\r\n-\r\n-//   useEffect(() => {\r\n-//     recognition.current = new window.webkitSpeechRecognition();\r\n-//     recognition.current.continuous = true;\r\n-//     recognition.current.interimResults = false;\r\n-//     recognition.current.onresult = onResult;\r\n-//     recognition.current.onend = onRecognitionEnd;\r\n-\r\n-//     return () => {\r\n-//       if (recognition.current) {\r\n-//         recognition.current.abort();\r\n-//       }\r\n-//     };\r\n-//   }, [location.pathname]);\r\n-\r\n-//   const onResult = (event) => {\r\n-//     const resultIndex = event.resultIndex;\r\n-//     const transcript = event.results[resultIndex][0].transcript\r\n-//       .trim()\r\n-//       .toLowerCase();\r\n-\r\n-//     if (event.results[resultIndex].isFinal) {\r\n-//       console.log(`Recognized text: ${transcript}`);\r\n-//       if (transcript.includes(\"brain\")) {\r\n-//         console.log(\"Wake word heard, processing command...\");\r\n-//         handleCommandWithFuse(transcript.replace(\"brain\", \"\"));\r\n-//       }\r\n-//     }\r\n-//   };\r\n-\r\n-//   const startListening = () => {\r\n-//     if (!isRecognitionActive.current) {\r\n-//       setIsListening(true);\r\n-//       recognition.current.start();\r\n-//       isRecognitionActive.current = true;\r\n-//     }\r\n-//   };\r\n-\r\n-//   const stopListening = () => {\r\n-//     if (isRecognitionActive.current) {\r\n-//       setIsListening(false);\r\n-//       recognition.current.stop();\r\n-//       isRecognitionActive.current = false;\r\n-//     }\r\n-//   };\r\n-\r\n-//   const onRecognitionEnd = () => {\r\n-//     isRecognitionActive.current = false;\r\n-//     if (isListening) {\r\n-//       startListening();\r\n-//     }\r\n-//   };\r\n-\r\n-//   const speak = (message) => {\r\n-//     const utterance = new SpeechSynthesisUtterance(message);\r\n-//     utterance.onend = () => {\r\n-//       setIsSpeaking(false);\r\n-//       if (isListening && !isRecognitionActive.current) {\r\n-//         startListening();\r\n-//       }\r\n-//     };\r\n-\r\n-//     setIsSpeaking(true);\r\n-//     if (isRecognitionActive.current) {\r\n-//       stopListening(); // Adjusted to use stopListening\r\n-//     }\r\n-//     speechSynthesis.current.speak(utterance);\r\n-//   };\r\n-\r\n-//   useEffect(() => {\r\n-//     if (isListening && !hasGreeted.current) {\r\n-//       speak(\"Hello, I'm Brane. How can I assist you today?\");\r\n-//       hasGreeted.current = true;\r\n-//     }\r\n-//   }, [isListening]);\r\n-\r\n-//   const goBack = () => {\r\n-//     if (window.history.length > 1) {\r\n-//       navigate(-1);\r\n-//     } else {\r\n-//       speak(\"Can't go back any further.\");\r\n-//     }\r\n-//   };\r\n-\r\n-//   const goForward = () => {\r\n-//     // Unfortunately, there's no direct way to check if you can go forward in the history.\r\n-//     // You might need to manage this state manually based on user navigation.\r\n-//     navigate(1);\r\n-//   };\r\n-\r\n-//   const playVideo = () => {\r\n-//     if (videoRef.current && !videoRef.current.paused) {\r\n-//       speak(\"Video is already playing.\");\r\n-//     } else if (videoRef.current) {\r\n-//       videoRef.current.play();\r\n-//       speak(\"Playing video.\");\r\n-//     } else {\r\n-//       speak(\"No video to play.\");\r\n-//     }\r\n-//   };\r\n-\r\n-//   const pauseVideo = () => {\r\n-//     if (videoRef.current && videoRef.current.paused) {\r\n-//       speak(\"Video is already paused.\");\r\n-//     } else if (videoRef.current) {\r\n-//       videoRef.current.pause();\r\n-//       speak(\"Video paused.\");\r\n-//     } else {\r\n-//       speak(\"No video to pause.\");\r\n-//     }\r\n-//   };\r\n-\r\n-//   const scrollAmount = window.innerHeight * 0.82;\r\n-\r\n-//   const scrollUp = () => {\r\n-//     if (window.pageYOffset === 0) {\r\n-//       speak(\"Already at the top of the page.\");\r\n-//     } else {\r\n-//       window.scrollBy(0, -scrollAmount);\r\n-//       speak(\"Scrolled up.\");\r\n-//     }\r\n-//   };\r\n-\r\n-//   const scrollDown = () => {\r\n-//     const maxScrollTop =\r\n-//       document.documentElement.scrollHeight - window.innerHeight;\r\n-//     if (window.pageYOffset >= maxScrollTop) {\r\n-//       speak(\"Already at the bottom of the page.\");\r\n-//     } else {\r\n-//       window.scrollBy(0, scrollAmount);\r\n-//       speak(\"Scrolled down.\");\r\n-//     }\r\n-//   };\r\n-\r\n-//   const scrollToTop = () => {\r\n-//     if (window.pageYOffset === 0) {\r\n-//       speak(\"Already at the top of the page.\");\r\n-//     } else {\r\n-//       window.scrollTo(0, 0);\r\n-//       speak(\"Scrolled to the top of the page.\");\r\n-//     }\r\n-//   };\r\n-\r\n-//   const scrollToBottom = () => {\r\n-//     const maxScrollTop =\r\n-//       document.documentElement.scrollHeight - window.innerHeight;\r\n-//     if (window.pageYOffset >= maxScrollTop) {\r\n-//       speak(\"Already at the bottom of the page.\");\r\n-//     } else {\r\n-//       window.scrollTo(0, document.body.scrollHeight);\r\n-//       speak(\"Scrolled to the bottom of the page.\");\r\n-//     }\r\n-//   };\r\n-\r\n-//   // const speak = (message) => {\r\n-//   //   const utterance = new SpeechSynthesisUtterance(message);\r\n-//   //   utterance.onend = () => {\r\n-//   //     setIsSpeaking(false);\r\n-//   //     console.log(\"Speaking ended.\");\r\n-//   //     // Only restart recognition if we're still supposed to be listening\r\n-//   //     // if (isListening) {\r\n-//   //     //   if (restartRecognitionTimeout.current) {\r\n-//   //     //     clearTimeout(restartRecognitionTimeout.current);\r\n-//   //     //   }\r\n-//   //     //   restartRecognitionTimeout.current = setTimeout(() => {\r\n-//   //     //     console.log(\"Recognition restarted.\");\r\n-//   //     //     recognition.current.start();\r\n-//   //     //   }, 100); // Delay to prevent immediate restart\r\n-//   //     // }\r\n-//   //     if (isListening && !recognition.current.starting) { // Check the flag before restarting\r\n-//   //       recognition.current.starting = true; // Set the flag when starting recognition\r\n-//   //       recognition.current.start();\r\n-//   //     }\r\n-//   //   };\r\n-\r\n-//   //   setIsSpeaking(true);\r\n-//   //   console.log(\"Speaking started.\");\r\n-//   //   recognition.current.stop(); // Stop recognition when the bot starts speaking\r\n-//   //   speechSynthesis.current.speak(utterance);\r\n-//   // };\r\n-\r\n-//   // const onRecognitionEnd = () => {\r\n-//   //   console.log(\"Recognition ended.\");\r\n-//   //   setIsRecognitionActive(false); // Update state when recognition ends\r\n-//   //   recognition.current.starting = false; // Reset the flag when recognition ends\r\n-//   //   // We now check if the recognition is already running before starting it again\r\n-//   //   if (isListening && !isSpeaking && !recognition.current?.starting) {\r\n-//   //     console.log(\"Restarting recognition.\");\r\n-//   //     recognition.current.start();\r\n-//   //   }\r\n-//   // };\r\n-\r\n-//   // useEffect(() => {\r\n-//   //   if (isListening && !hasGreeted.current) {\r\n-//   //     speak(\"Hello, I'm Brane. How can I assist you today?\");\r\n-//   //     hasGreeted.current = true;\r\n-//   //   } else if (isListening && !isSpeaking) {\r\n-//   //     recognition.current.start();\r\n-//   //   }\r\n-//   // }, [isListening, isSpeaking]);\r\n-\r\n-//   // const startListening = () => {\r\n-//   //   console.log(\"Attempting to start listening.\");\r\n-//   //   if (recognition.current && !recognition.current.starting) {\r\n-//   //     setIsListening(true);\r\n-//   //     recognition.current.starting = true; // Set the flag when starting recognition\r\n-//   //     recognition.current.start();\r\n-//   //     console.log(\"Listening started.\");\r\n-//   //   }\r\n-//   // };\r\n-\r\n-//   // const stopListening = () => {\r\n-//   //   console.log(\"Stopping listening.\");\r\n-\r\n-//   //   setIsListening(false);\r\n-//   //   recognition.current.stop();\r\n-//   //   if (speechSynthesis.current.speaking) {\r\n-//   //     speechSynthesis.current.cancel();\r\n-//   //   }\r\n-//   //   if (restartRecognitionTimeout.current) {\r\n-//   //     clearTimeout(restartRecognitionTimeout.current);\r\n-//   //   }\r\n-//   //   console.log(\"Listening stopped.\");\r\n-//   // };\r\n-//   // Handle start and stop listening logic\r\n-\r\n-//   useEffect(() => {\r\n-//     if (isListening && !hasGreeted.current) {\r\n-//       speak(\"Hello, I'm Brane. How can I assist you today?\");\r\n-//       hasGreeted.current = true;\r\n-//     }\r\n-//   }, [isListening]);\r\n-\r\n-//   // const handleCommandWithFuse = (command) => {\r\n-//   //   const fuse = new Fuse(commands, { keys: [\"utterance\"], threshold: 0.4 });\r\n-//   //   const results = fuse.search(command);\r\n-//   //   const foundCommand = results.length ? results[0].item : null;\r\n-\r\n-//   //   if (foundCommand) {\r\n-//   //     console.log(\"Command found:\", foundCommand.utterance);\r\n-//   //     speak(foundCommand.response);\r\n-//   //     if (foundCommand.route) {\r\n-//   //       navigate(foundCommand.route); // Navigate to the route specified in the command\r\n-//   //     }\r\n-//   //   } else {\r\n-//   //     console.log(\"No command found.\");\r\n-//   //     speak(\"I'm not sure how to respond to that.\");\r\n-//   //   }\r\n-//   // };\r\n-\r\n-//   const handleCommandWithFuse = (command) => {\r\n-//     const fuse = new Fuse(commands, { keys: [\"utterance\"], threshold: 0.4 });\r\n-//     const results = fuse.search(command);\r\n-//     const foundCommand = results.length ? results[0].item : null;\r\n-\r\n-//     if (foundCommand) {\r\n-//       console.log(\"Command found:\", foundCommand.utterance);\r\n-\r\n-//       if (foundCommand.action) {\r\n-//         foundCommand.action();\r\n-//       } else if (foundCommand.route) {\r\n-//         navigate(foundCommand.route);\r\n-//       }\r\n-\r\n-//       if (foundCommand.response) {\r\n-//         speak(foundCommand.response);\r\n-//       }\r\n-//     } else {\r\n-//       console.log(\"No command found.\");\r\n-//       speak(\"I'm not sure how to respond to that.\");\r\n-//     }\r\n-//   };\r\n-\r\n-//   const commands = [\r\n-//     {\r\n-//       utterance: \"Hello who are you ?\",\r\n-\r\n-//       response:\r\n-//         \"Hi! This is Brane! your Voice bot from Brane Education How can I Assist you Today ?\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"Hello\",\r\n-\r\n-//       response: \"Hi! How can I assist you today?\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"hello\",\r\n-\r\n-//       response: \"Hi! How can I assist you today?\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"Hi.\",\r\n-\r\n-//       response: \"Hello! How can I assist you today?\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"Hey there\",\r\n-\r\n-//       response: \"Hi! How can I assist you today?\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"Good morning Brane.\",\r\n-\r\n-//       response: \"Hey Hiii! Good morning  ! How can I help you?\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"Good afternoon Brane.\",\r\n-\r\n-//       response: \"Hey Hiii! Good after noon ! How can I help you?\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"Good evening Brane.\",\r\n-\r\n-//       response: \"Hey Hiii! Good evening ! How can I help you?\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"can you please take me to login page\",\r\n-//       route: \"/login\",\r\n-//       routeDescription: \"login page\",\r\n-//       response: \"Navigating to the login page.\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"go to login page\",\r\n-//       route: \"/login\",\r\n-//       routeDescription: \"login page\",\r\n-//       response: \"Navigating to the login page.\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"please take me to login page\",\r\n-//       route: \"/login\",\r\n-//       routeDescription: \"login page\",\r\n-//       response: \"Navigating to the login page.\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"Go to login page\",\r\n-//       route: \"/login\",\r\n-//       routeDescription: \"login page\",\r\n-//       response: \"Navigating to the login page.\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"open login page\",\r\n-//       route: \"/login\",\r\n-//       routeDescription: \"login page\",\r\n-//       response: \"Navigating to the login page.\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"can you please take me to signup page\",\r\n-//       route: \"/signup\",\r\n-//       routeDescription: \"signup page\",\r\n-//       response: \"Navigating to the signup page.\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"take me to signup page\",\r\n-//       route: \"/signup\",\r\n-//       routeDescription: \"signup page\",\r\n-//       response: \"Navigating to the signup page.\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"Go to signup page\",\r\n-//       route: \"/signup\",\r\n-//       routeDescription: \"signup page\",\r\n-//       response: \"Navigating to the signup page.\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"open signup page\",\r\n-//       route: \"/signup\",\r\n-//       routeDescription: \"signup page\",\r\n-//       response: \"Navigating to the signup page.\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"what are platform features\",\r\n-\r\n-//       response:\r\n-//         \"Dashboard, Dynamic time table, Learning Networks, Little Masters, Video Based Dictionary, General Search.\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"Features of platform\",\r\n-\r\n-//       response:\r\n-//         \"Dashboard, Dynamic time table, Learning Networks, Little Masters, Video Based Dictionary, General Search.\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"What does the platform offer\",\r\n-\r\n-//       response:\r\n-//         \"Dashboard, Dynamic time table, Learning Networks, Little Masters, Video Based Dictionary, General Search.\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"Say me the features of platform\",\r\n-\r\n-//       response:\r\n-//         \"Dashboard, Dynamic time table, Learning Networks, Little Masters, Video Based Dictionary, General Search.\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"Say me the services of platform\",\r\n-\r\n-//       response:\r\n-//         \"Dashboard, Dynamic time table, Learning Networks, Little Masters, Video Based Dictionary, General Search.\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"tell me the services offered by the platform\",\r\n-\r\n-//       response:\r\n-//         \"Dashboard, Dynamic time table, Learning Networks, Little Masters, Video Based Dictionary, General Search.\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"explain platform services\",\r\n-\r\n-//       response:\r\n-//         \"Dashboard, Dynamic time table, Learning Networks, Little Masters, Video Based Dictionary, General Search.\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"Give me the Parent voice of Julia Harris\",\r\n-\r\n-//       response:\r\n-//         \"Brane education has helped my son a lot in his studies. He improved a lot in his studies and is now able to score good marks in his exams\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"Play today's motivational video\",\r\n-\r\n-//       response: \"I am playing the video\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"Play today's video\",\r\n-\r\n-//       response: \"I am playing Motivational video\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"Leaders Voice\",\r\n-\r\n-//       response:\r\n-//         \"This Voice-interactive AI Platform is a game Changer. It revolutionizes education.\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"Curriculum Supported by Brane Education\",\r\n-\r\n-//       response:\r\n-//         \"we support multiple Boards let me say few Telangana State Board Andhra Pradesh Board Maharashtra Board Assam Board\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"Boards supported by the platform\",\r\n-\r\n-//       response:\r\n-//         \"we support multiple Boards let me say few Telangana State Board Andhra Pradesh Board Maharashtra Board Assam Board\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"Curriculum\",\r\n-\r\n-//       response:\r\n-//         \"we support multiple Boards let me say few Telangana State Board Andhra Pradesh Board Maharashtra Board Assam Board\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"Go to landing page\",\r\n-\r\n-//       response: \"Okay, I am taking you to the landing page.\",\r\n-\r\n-//       route: \"/childpage\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"take me to landing page\",\r\n-\r\n-//       response: \"Okay, I am taking you to the landing page.\",\r\n-\r\n-//       route: \"/childpage\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"move to landing page\",\r\n-\r\n-//       response: \"Okay, I am taking you to the landing page.\",\r\n-\r\n-//       route: \"/childpage\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"roll back to landing page\",\r\n-\r\n-//       response: \"Okay, I am taking you to the landing page.\",\r\n-\r\n-//       route: \"/childpage\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"move to landing page\",\r\n-\r\n-//       response: \"Okay, I am taking you to the landing page.\",\r\n-\r\n-//       route: \"/childpage\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"what is today's quote\",\r\n-\r\n-//       response:\r\n-//         \"Determination is the power that sees us through all our frustration and obstacles. It helps in building our willpower which is the very basis of success.\",\r\n-\r\n-//       // route: \"/childpage\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"Today's Inspirational quote\",\r\n-\r\n-//       response:\r\n-//         \"Determination is the power that sees us through all our frustration and obstacles. It helps in building our willpower which is the very basis of success.\",\r\n-\r\n-//       // route: \"/childpage\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"say me today's quote\",\r\n-\r\n-//       response:\r\n-//         \"Determination is the power that sees us through all our frustration and obstacles. It helps in building our willpower which is the very basis of success.\",\r\n-\r\n-//       // route: \"/childpage\",\r\n-//     },\r\n-//     {\r\n-//       utterance: \"go back\",\r\n-//       response: \"Going back.\",\r\n-//       action: goBack, // Note the use of an action property\r\n-//     },\r\n-//     {\r\n-//       utterance: \"go forward\",\r\n-//       response: \"Going forward.\",\r\n-//       action: goForward,\r\n-//     },\r\n-//     {\r\n-//       utterance: \"play video\",\r\n-//       // response: \"Playing video.\",\r\n-//       action: playVideo,\r\n-//     },\r\n-//     {\r\n-//       utterance: \"pause video\",\r\n-//       // response: \"Pausing video.\",\r\n-//       action: pauseVideo,\r\n-//     },\r\n-//     {\r\n-//       utterance: \"start video\",\r\n-//       // response: \"Playing video.\",\r\n-//       action: playVideo,\r\n-//     },\r\n-//     {\r\n-//       utterance: \"stop video\",\r\n-//       // response: \"Playing video.\",\r\n-//       action: pauseVideo,\r\n-//     },\r\n-//     {\r\n-//       utterance: \"scroll up\",\r\n-//       // response: \"Scrolling up.\",\r\n-//       action: scrollUp,\r\n-//     },\r\n-//     {\r\n-//       utterance: \"scroll down\",\r\n-//       // response: \"Scrolling down.\",\r\n-//       action: scrollDown,\r\n-//     },\r\n-//     {\r\n-//       utterance: \"go up\",\r\n-\r\n-//       // response: \"Scrolling up.\",\r\n-//       action: scrollUp,\r\n-//     },\r\n-//     {\r\n-//       utterance: \"go down\",\r\n-//       // response: \"Scrolling down.\",\r\n-//       action: scrollDown,\r\n-//     },\r\n-//     {\r\n-//       utterance: \"scroll to top\",\r\n-//       action: scrollToTop,\r\n-//     },\r\n-//     {\r\n-//       utterance: \"scroll to bottom\",\r\n-//       action: scrollToBottom,\r\n-//     },\r\n-//     {\r\n-//       utterance: \"go back\",\r\n-//       action: goBackRef?.current?.click, // Use goBackRef directly\r\n-//       response: \"Going back.\",\r\n-//     },\r\n-//     {\r\n-//       utterance: \"take test\",\r\n-//       action: takeTestRef?.current?.click, // Use takeTestRef directly\r\n-//       response: \"Starting the test.\",\r\n-//     },\r\n-//   ];\r\n-//   return (\r\n-//     <div className=\"speech-bot-container\">\r\n-//       <div\r\n-//         className={`button-container ${\r\n-//           isListening ? \"voicebotframeactive\" : \"voicebotframe\"\r\n-//         }`}\r\n-//       >\r\n-//         <div onClick={isListening ? stopListening : startListening}>\r\n-//           <iframe\r\n-//             src={\r\n-//               isListening\r\n-//                 ? \"https://lottie.host/?file=a89aca3f-5407-4052-82c3-2048afca7a9f/NpCdWzLSKD.json\"\r\n-//                 : \"https://lottie.host/?file=d2b6cc0e-fe95-4847-85b5-35365fca7e00/vTudpCuPZq.json\"\r\n-//             }\r\n-//             width=\"120\" // Set your desired width\r\n-//             height=\"120\" // Set your desired height\r\n-//             title={isListening ? \"Stop Animation\" : \"Start Animation\"}\r\n-//             className={isListening ? \"voicebotframeactive\" : \"voicebotframe\"}\r\n-//           ></iframe>\r\n-//           {isListening ? (\r\n-//             <div className=\"overlay\" onClick={stopListening}></div>\r\n-//           ) : (\r\n-//             <div className=\"overlay\" onClick={startListening}></div>\r\n-//           )}\r\n-//         </div>\r\n-//       </div>\r\n-//     </div>\r\n-//   );\r\n-// };\r\n-\r\n-// export default VoiceBot;\r\n-import React, { useState, useEffect, useRef } from \"react\";\r\n-import { useNavigate, useLocation } from \"react-router-dom\";\r\n-import Fuse from \"fuse.js\";\r\n-import \"./VoiceBot.css\";\r\n-import chatbotimage from \"../../assets/chatbotgif.gif\";\r\n-\r\n-const VoiceBot = ({ videoRefs,setMobileNumber,setPin,triggerLogin, setTriggerRecordAudio }) => {\r\n-  const [isListening, setIsListening] = useState(false);\r\n-  const [isSpeaking, setIsSpeaking] = useState(false);\r\n-  const recognition = useRef(null);\r\n-  const speechSynthesis = useRef(window.speechSynthesis);\r\n-  const [hasGreeted, setHasGreeted] = useState(false);\r\n-  const navigate = useNavigate();\r\n-\r\n-  // Initialize speech recognition\r\n-  useEffect(() => {\r\n-    recognition.current = new window.webkitSpeechRecognition();\r\n-    recognition.current.continuous = true;\r\n-    recognition.current.interimResults = false;\r\n-    recognition.current.onresult = onResult;\r\n-    recognition.current.onend = onRecognitionEnd;\r\n-    recognition.current.starting = false;\r\n-\r\n-    recognition.current.onerror = (event) => {\r\n-      console.error(\"Recognition error:\", event.error);\r\n-      if (isListening && !isSpeaking) {\r\n-        restartRecognition();\r\n-      }\r\n-    };\r\n-\r\n-    return () => {\r\n-      if (recognition.current) {\r\n-        recognition.current.abort();\r\n-      }\r\n-    };\r\n-  }, []);\r\n-\r\n-  useEffect(() => {\r\n-    const checkRecognition = () => {\r\n-      if (isListening && !isSpeaking && !recognition.current.starting) {\r\n-        console.log(\"Restarting recognition because it's not active.\");\r\n-        recognition.current.starting = true;\r\n-        recognition.current.start();\r\n-        console.log(\"Restarted recognition.\");\r\n-      }\r\n-    };\r\n-\r\n-    const recognitionCheckInterval = setInterval(checkRecognition, 500); // Check every .5 second\r\n-\r\n-    return () => {\r\n-      clearInterval(recognitionCheckInterval);\r\n-    };\r\n-  }, [isListening, isSpeaking]);\r\n-\r\n-  const historyStack = useRef([]);\r\n-\r\n-  useEffect(() => {\r\n-    return () => {\r\n-      // Clean up the listener when the component unmounts\r\n-      window.removeEventListener(\"popstate\", handlePopState);\r\n-    };\r\n-  }, []);\r\n-\r\n-  const handlePopState = () => {\r\n-    // This needs to handle both back and forward browser actions\r\n-    // Use some logic to determine whether it's a back or forward action\r\n-    // For simplicity, assume it's always back\r\n-    historyStack.current.pop();\r\n-    forwardStack.current.length = 0; // Clear forward stack on manual navigation\r\n-  };\r\n-\r\n-  // Listen to popstate events to update the history stack\r\n-  useEffect(() => {\r\n-    window.addEventListener(\"popstate\", handlePopState);\r\n-  }, []);\r\n-\r\n-  const forwardStack = useRef([]);\r\n-\r\n-  const goBack = () => {\r\n-    if (window.history.state && window.history.state.idx > 0) {\r\n-      window.history.back();\r\n-      speak(\"Going back\");\r\n-    } else {\r\n-      speak(\"Can't go back any further.\");\r\n-    }\r\n-  };\r\n-\r\n-  const goForward = () => {\r\n-    if (\r\n-      window.history.state &&\r\n-      window.history.state.idx < window.history.length - 1\r\n-    ) {\r\n-      window.history.forward();\r\n-      speak(\"Going forward\");\r\n-    } else {\r\n-      speak(\"No forward history available.\");\r\n-    }\r\n-  };\r\n-\r\n-  const scrollAmount = window.innerHeight * 0.82;\r\n-\r\n-  const scrollUp = () => {\r\n-    if (window.pageYOffset === 0) {\r\n-      speak(\"Already at the top of the page.\");\r\n-    } else {\r\n-      window.scrollBy(0, -scrollAmount);\r\n-      speak(\"Scrolled up.\");\r\n-    }\r\n-  };\r\n-\r\n-  const scrollDown = () => {\r\n-    const maxScrollTop =\r\n-      document.documentElement.scrollHeight - window.innerHeight;\r\n-    if (window.pageYOffset >= maxScrollTop) {\r\n-      speak(\"Already at the bottom of the page.\");\r\n-    } else {\r\n-      window.scrollBy(0, scrollAmount);\r\n-      speak(\"Scrolled down.\");\r\n-    }\r\n-  };\r\n-\r\n-  const scrollToTop = () => {\r\n-    if (window.pageYOffset === 0) {\r\n-      speak(\"Already at the top of the page.\");\r\n-    } else {\r\n-      window.scrollTo(0, 0);\r\n-      speak(\"Scrolled to the top of the page.\");\r\n-    }\r\n-  };\r\n-\r\n-  const scrollToBottom = () => {\r\n-    const maxScrollTop =\r\n-      document.documentElement.scrollHeight - window.innerHeight;\r\n-    if (window.pageYOffset >= maxScrollTop) {\r\n-      speak(\"Already at the bottom of the page.\");\r\n-    } else {\r\n-      window.scrollTo(0, document.body.scrollHeight);\r\n-      speak(\"Scrolled to the bottom of the page.\");\r\n-    }\r\n-  };\r\n-\r\n-  const controlVideo = (videoId, action) => {\r\n-    const videoRef = videoRefs.current.get(videoId);\r\n-    if (videoRef && videoRef.current) {\r\n-      switch (action) {\r\n-        case \"play\":\r\n-          videoRef.current.play();\r\n-          break;\r\n-        case \"pause\":\r\n-          videoRef.current.pause();\r\n-          break;\r\n-        case \"mute\":\r\n-          videoRef.current.muted = true;\r\n-          break;\r\n-        case \"unmute\":\r\n-          videoRef.current.muted = false;\r\n-          break;\r\n-        case \"fullscreen\":\r\n-          if (videoRef.current.requestFullscreen) {\r\n-            videoRef.current.requestFullscreen();\r\n-          } else if (videoRef.current.webkitRequestFullscreen) {\r\n-            // Safari\r\n-            videoRef.current.webkitRequestFullscreen();\r\n-          } else if (videoRef.current.msRequestFullscreen) {\r\n-            // IE11\r\n-            videoRef.current.msRequestFullscreen();\r\n-          }\r\n-          break;\r\n-        case \"exitFullscreen\":\r\n-          if (document.exitFullscreen) {\r\n-            document.exitFullscreen();\r\n-          } else if (document.webkitExitFullscreen) {\r\n-            // Safari\r\n-            document.webkitExitFullscreen();\r\n-          } else if (document.msExitFullscreen) {\r\n-            // IE11\r\n-            document.msExitFullscreen();\r\n-          }\r\n-          break;\r\n-        case \"increaseVolume\":\r\n-          if (videoRef.current.volume < 1) {\r\n-            videoRef.current.volume = Math.min(\r\n-              1,\r\n-              videoRef.current.volume + 0.1\r\n-            );\r\n-          }\r\n-          break;\r\n-        case \"decreaseVolume\":\r\n-          if (videoRef.current.volume > 0) {\r\n-            videoRef.current.volume = Math.max(\r\n-              0,\r\n-              videoRef.current.volume - 0.1\r\n-            );\r\n-          }\r\n-          break;\r\n-        // Add other cases as needed\r\n-      }\r\n-      speak(\r\n-        `${\r\n-          action.charAt(0).toUpperCase() +\r\n-          action\r\n-            .slice(1)\r\n-            .replace(/([A-Z])/g, \" $1\")\r\n-            .toLowerCase()\r\n-        }ing video.`\r\n-      );\r\n-    } else {\r\n-      speak(`Video not found.`);\r\n-    }\r\n-  };\r\n-\r\n-  const speak = (message) => {\r\n-    const utterance = new SpeechSynthesisUtterance(message);\r\n-    utterance.onend = () => {\r\n-      setIsSpeaking(false);\r\n-      // Restart recognition after speaking has ended\r\n-      if (isListening) {\r\n-        restartRecognition();\r\n-      }\r\n-    };\r\n-\r\n-    setIsSpeaking(true);\r\n-    // Stop recognition when the bot starts speaking\r\n-    if (recognition.current) {\r\n-      recognition.current.abort();\r\n-    }\r\n-    speechSynthesis.current.speak(utterance);\r\n-  };\r\n-\r\n-  const restartRecognition = () => {\r\n-    // Check if recognition is not already started and if the bot is set to listen\r\n-    if (\r\n-      recognition.current &&\r\n-      !recognition.current.starting &&\r\n-      isListening &&\r\n-      !isSpeaking\r\n-    ) {\r\n-      recognition.current.abort(); // Ensure any ongoing recognition is stopped\r\n-      recognition.current.starting = true;\r\n-      recognition.current.start();\r\n-    }\r\n-  };\r\n-\r\n-  // Restart recognition when bot finishes speaking and isListening is true\r\n-  useEffect(() => {\r\n-    if (!isSpeaking && isListening) {\r\n-      restartRecognition();\r\n-    }\r\n-  }, [isSpeaking, isListening]);\r\n-\r\n-  const onResult = (event) => {\r\n-    const resultIndex = event.resultIndex;\r\n-    const transcript = event.results[resultIndex][0].transcript\r\n-      .trim()\r\n-      .toLowerCase();\r\n-\r\n-    if (event.results[resultIndex].isFinal) {\r\n-      console.log(`Recognized text: ${transcript}`);\r\n-      if (transcript.includes(\"brain\")) {\r\n-        console.log(\"Wake word heard, processing command...\");\r\n-        handleCommandWithFuse(transcript.replace(\"brain\", \"\"));\r\n-      }\r\n-    }\r\n-  };\r\n-\r\n-  const onRecognitionEnd = () => {\r\n-    recognition.current.starting = false;\r\n-    if (isListening && !isSpeaking) {\r\n-      restartRecognition();\r\n-    }\r\n-  };\r\n-\r\n-  useEffect(() => {\r\n-    if (isListening && !hasGreeted) {\r\n-      speak(\"Hello, I'm Brane. How can I help you today?\");\r\n-      setHasGreeted(true);\r\n-    }\r\n-  }, [isListening, hasGreeted]);\r\n-\r\n-  // Updated startListening function\r\n-  const startListening = () => {\r\n-    setIsListening(true);\r\n-    if (!recognition.current.starting) {\r\n-      restartRecognition();\r\n-    }\r\n-  };\r\n-\r\n-  // Updated stopListening function\r\n-  const stopListening = () => {\r\n-    setIsListening(false);\r\n-    if (speechSynthesis.current.speaking) {\r\n-      speechSynthesis.current.cancel();\r\n-    }\r\n-    recognition.current.abort();\r\n-  };\r\n-\r\n-  const handleCommandWithFuse = (command) => {\r\n-    const fuse = new Fuse(commands, { keys: [\"utterance\"], threshold: 0.4 });\r\n-    const results = fuse.search(command);\r\n-    const foundCommand = results.length ? results[0].item : null;\r\n-\r\n-    if (foundCommand) {\r\n-      console.log(\"Command text to process:\", command);\r\n-      console.log(\"Command found:\", foundCommand.utterance);\r\n-      if (foundCommand.action) {\r\n-        foundCommand.action(command); // Pass the command text to the action function\r\n-      } else if (foundCommand.route) {\r\n-        navigate(foundCommand.route);\r\n-      }\r\n-\r\n-      // Speak after performing the action or navigation\r\n-      speak(foundCommand.response);\r\n-    } else {\r\n-      console.log(\"No command found.\");\r\n-      speak(\"I'm not sure how to respond to that.\");\r\n-    }\r\n-  };\r\n-\r\n-  const extractNumber = (spokenText) => {\r\n-    if (!spokenText) return null; // Return null if spokenText is undefined or null\r\n-  \r\n-    const sanitizedText = spokenText.replace(/[.,]/g, '');\r\n-    const matches = sanitizedText.match(/\\d+/);\r\n-    return matches ? matches[0] : null;\r\n-  };\r\n-\r\n-\r\n-  const commands = [\r\n-    {\r\n-      utterance: \"Hello who are you ?\",\r\n-\r\n-      response:\r\n-        \"Hi! This is Brane! your Voice bot from Brane Education How can I Assist you Today ?\",\r\n-    },\r\n-\r\n-    {\r\n-      utterance: \"Hello\",\r\n-\r\n-      response: \"Hi! How can I assist you today?\",\r\n-    },\r\n-\r\n-    {\r\n-      utterance: \"hello\",\r\n-\r\n-      response: \"Hi! How can I assist you today?\",\r\n-    },\r\n-\r\n-    {\r\n-      utterance: \"Hi.\",\r\n-\r\n-      response: \"Hello! How can I assist you today?\",\r\n-    },\r\n-\r\n-    {\r\n-      utterance: \"Hey there\",\r\n-\r\n-      response: \"Hi! How can I assist you today?\",\r\n-    },\r\n-\r\n-    {\r\n-      utterance: \"Good morning Brane.\",\r\n-\r\n-      response: \"Hey Hiii! Good morning  ! How can I help you?\",\r\n-    },\r\n-\r\n-    {\r\n-      utterance: \"Good afternoon Brane.\",\r\n-\r\n-      response: \"Hey Hiii! Good after noon ! How can I help you?\",\r\n-    },\r\n-\r\n-    {\r\n-      utterance: \"Good evening Brane.\",\r\n-\r\n-      response: \"Hey Hiii! Good evening ! How can I help you?\",\r\n-    },\r\n-\r\n-    {\r\n-      utterance: \"take me to homepage\",\r\n-\r\n-      route: \"/\",\r\n-\r\n-      response: \"You're in Homepage now\",\r\n-    },\r\n-    {\r\n-      utterance: \"open homepage\",\r\n-\r\n-      route: \"/\",\r\n-\r\n-      response: \"You're in Homepage now\",\r\n-    },\r\n-    {\r\n-      utterance: \"go to homepage\",\r\n-\r\n-      route: \"/\",\r\n-\r\n-      response: \"You're in Homepage now\",\r\n-    },\r\n-    {\r\n-      utterance: \"go back to homepage\",\r\n-\r\n-      route: \"/\",\r\n-\r\n-      response: \"You're in Homepage now\",\r\n-    },\r\n-    {\r\n-      utterance: \"can you please take me to login page\",\r\n-\r\n-      route: \"/login\",\r\n-\r\n-      response: \"Here's the Login Page, Please Login\",\r\n-    },\r\n-\r\n-    {\r\n-      utterance: \"please take me to login page\",\r\n-\r\n-      route: \"/login\",\r\n-\r\n-      response: \"Here's the Login Page, Please Login\",\r\n-    },\r\n-\r\n-    {\r\n-      utterance: \"Go to login page\",\r\n-\r\n-      route: \"/login\",\r\n-\r\n-      response: \"Here's the Login Page, Please Login\",\r\n-    },\r\n-\r\n-    {\r\n-      utterance: \"open login page\",\r\n-\r\n-      route: \"/login\",\r\n-\r\n-      response: \"Here's the Login Page, Please Login\",\r\n-    },\r\n-\r\n-    {\r\n-      utterance: \"can you please take me to signup page\",\r\n-\r\n-      route: \"/signup\",\r\n-\r\n-      response: \"Here's the signup page. Please proceed With Registration.\",\r\n-    },\r\n-\r\n-    {\r\n-      utterance: \"take me to signup page\",\r\n-\r\n-      route: \"/signup\",\r\n-\r\n-      response: \"Here's the signup page. Please proceed With Registration.\",\r\n-    },\r\n-\r\n-    {\r\n-      utterance: \"Go to signup page\",\r\n-\r\n-      route: \"/signup\",\r\n-\r\n-      response: \"Here's the signup page. Please proceed With Registration.\",\r\n-    },\r\n-\r\n-    {\r\n-      utterance: \"open signup page\",\r\n-\r\n-      route: \"/signup\",\r\n-\r\n-      response: \"Here's the signup page. Please proceed With Registration.\",\r\n-    },\r\n-\r\n-    {\r\n-      utterance: \"Go to face id\",\r\n-\r\n-      route: \"/login/faceid\",\r\n-\r\n-      response: \"Here's Face ID Login. Please proceed.\",\r\n-    },\r\n-\r\n-    {\r\n-      utterance: \"Go to face id login\",\r\n-\r\n-      route: \"/login/faceid\",\r\n-\r\n-      response: \"Here's Face ID Login. Please proceed.\",\r\n-    },\r\n-    {\r\n-      utterance: \"Go to face login\",\r\n-\r\n-      route: \"/login/faceid\",\r\n-\r\n-      response: \"Here's Face ID Login. Please proceed.\",\r\n-    },\r\n-\r\n-    {\r\n-      utterance: \"login with face id\",\r\n-\r\n-      route: \"/login/faceid\",\r\n-\r\n-      response: \"Here's Face ID Login. Please proceed.\",\r\n-    },\r\n-\r\n-    {\r\n-      utterance: \"login with face\",\r\n-\r\n-      route: \"/login/faceid\",\r\n-\r\n-      response: \"Here's Face ID Login. Please proceed.\",\r\n-    },\r\n-\r\n-    {\r\n-      utterance: \"i want to login with face\",\r\n-\r\n-      route: \"/login/faceid\",\r\n-\r\n-      response: \"Here's Face ID Login. Please proceed.\",\r\n-    },\r\n-\r\n-    {\r\n-      utterance: \"login with voice\",\r\n-\r\n-      route: \"/login/voiceid\",\r\n-\r\n-      response: \"Here's Voice Login. Please proceed.\",\r\n-    },\r\n-\r\n-    {\r\n-      utterance: \"i want to login with voice\",\r\n-\r\n-      route: \"/login/voiceid\",\r\n-\r\n-      response: \"Here's Voice Login. Please proceed.\",\r\n-    },\r\n-\r\n-    {\r\n-      utterance: \"go to voice login\",\r\n-\r\n-      route: \"/login/voiceid\",\r\n-\r\n-      response: \"Here's Voice Login. Please proceed.\",\r\n-    },\r\n-\r\n-    {\r\n-      utterance: \"login with voice\",\r\n-\r\n-      route: \"/login/voiceid\",\r\n-\r\n-      response: \"Here's Voice Login. Please proceed.\",\r\n-    },\r\n-\r\n-    {\r\n-      utterance: \"login with mobile\",\r\n-\r\n-      route: \"/login/mobile\",\r\n-\r\n-      response: \"Here's Mobile Login. Please proceed.\",\r\n-    },\r\n-\r\n-    {\r\n-      utterance: \"i want to login with mobile\",\r\n-\r\n-      route: \"/login/mobile\",\r\n-\r\n-      response: \"Here's Mobile Login. Please proceed.\",\r\n-    },\r\n-    {\r\n-      utterance: \"go to mobile login\",\r\n-\r\n-      route: \"/login/mobile\",\r\n-\r\n-      response: \"Here's Mobile Login. Please proceed.\",\r\n-    },\r\n-    {\r\n-      utterance: \"go to about page\",\r\n-\r\n-      route: \"/aboutus\",\r\n-\r\n-      response: \"This is About us.\",\r\n-    },\r\n-    {\r\n-      utterance: \"go to about us page\",\r\n-\r\n-      route: \"/aboutus\",\r\n-\r\n-      response: \"This is About us.\",\r\n-    },\r\n-    {\r\n-      utterance: \"open about us page\",\r\n-\r\n-      route: \"/aboutus\",\r\n-\r\n-      response: \"This is About us.\",\r\n-    },\r\n-    {\r\n-      utterance: \"open about page\",\r\n-\r\n-      route: \"/aboutus\",\r\n-\r\n-      response: \"This is About us.\",\r\n-    },\r\n-    {\r\n-      utterance: \"take me to about page\",\r\n-\r\n-      route: \"/aboutus\",\r\n-\r\n-      response: \"This is About us.\",\r\n-    },\r\n-    {\r\n-      utterance: \"take me to about us page\",\r\n-\r\n-      route: \"/aboutus\",\r\n-\r\n-      response: \"This is About us.\",\r\n-    },\r\n-\r\n-    {\r\n-      utterance: \"go to contact page\",\r\n-\r\n-      route: \"/contactus\",\r\n-\r\n-      response: \"You can contact us from here\",\r\n-    },\r\n-    {\r\n-      utterance: \"go to contact us page\",\r\n-\r\n-      route: \"/contactus\",\r\n-\r\n-      response: \"You can contact us from here\",\r\n-    },\r\n-    {\r\n-      utterance: \"open contact us page\",\r\n-\r\n-      route: \"/contactus\",\r\n-\r\n-      response: \"You can contact us from here\",\r\n-    },\r\n-    {\r\n-      utterance: \"open contact page\",\r\n-\r\n-      route: \"/contactus\",\r\n-\r\n-      response: \"You can contact us from here\",\r\n-    },\r\n-    {\r\n-      utterance: \"take me to about page\",\r\n-\r\n-      route: \"/contactus\",\r\n-\r\n-      response: \"You can contact us from here\",\r\n-    },\r\n-    {\r\n-      utterance: \"take me to contact us page\",\r\n-\r\n-      route: \"/contactus\",\r\n-\r\n-      response: \"You can contact us from here\",\r\n-    },\r\n-\r\n-    {\r\n-      utterance: \"what are platform features\",\r\n-\r\n-      response:\r\n-        \"Dashboard, Dynamic time table, Learning Networks, Little Masters, Video Based Dictionary, General Search.\",\r\n-    },\r\n-\r\n-    {\r\n-      utterance: \"Features of platform\",\r\n-\r\n-      response:\r\n-        \"Dashboard, Dynamic time table, Learning Networks, Little Masters, Video Based Dictionary, General Search.\",\r\n-    },\r\n-\r\n-    {\r\n-      utterance: \"What does the platform offer\",\r\n-\r\n-      response:\r\n-        \"Dashboard, Dynamic time table, Learning Networks, Little Masters, Video Based Dictionary, General Search.\",\r\n-    },\r\n-\r\n-    {\r\n-      utterance: \"Say me the features of platform\",\r\n-\r\n-      response:\r\n-        \"Dashboard, Dynamic time table, Learning Networks, Little Masters, Video Based Dictionary, General Search.\",\r\n-    },\r\n-\r\n-    {\r\n-      utterance: \"Say me the services of platform\",\r\n-\r\n-      response:\r\n-        \"Dashboard, Dynamic time table, Learning Networks, Little Masters, Video Based Dictionary, General Search.\",\r\n-    },\r\n-\r\n-    {\r\n-      utterance: \"tell me the services offered by the platform\",\r\n-\r\n-      response:\r\n-        \"Dashboard, Dynamic time table, Learning Networks, Little Masters, Video Based Dictionary, General Search.\",\r\n-    },\r\n-\r\n-    {\r\n-      utterance: \"explain platform services\",\r\n-\r\n-      response:\r\n-        \"Dashboard, Dynamic time table, Learning Networks, Little Masters, Video Based Dictionary, General Search.\",\r\n-    },\r\n-\r\n-    {\r\n-      utterance: \"Give me the Parent voice of Julia Harris\",\r\n-\r\n-      response:\r\n-        \"Brane education has helped my son a lot in his studies. He improved a lot in his studies and is now able to score good marks in his exams\",\r\n-    },\r\n-\r\n-    {\r\n-      utterance: \"Leaders Voice\",\r\n-\r\n-      response:\r\n-        \"This Voice-interactive AI Platform is a game Changer. It revolutionizes education.\",\r\n-    },\r\n-\r\n-    {\r\n-      utterance: \"Curriculum Supported by Brane Education\",\r\n-\r\n-      response:\r\n-        \"we support multiple Boards let me say few Telangana State Board Andhra Pradesh Board Maharashtra Board Assam Board\",\r\n-    },\r\n-\r\n-    {\r\n-      utterance: \"Boards supported by the platform\",\r\n-\r\n-      response:\r\n-        \"we support multiple Boards let me say few Telangana State Board Andhra Pradesh Board Maharashtra Board Assam Board\",\r\n-    },\r\n-\r\n-    {\r\n-      utterance: \"Curriculum\",\r\n-\r\n-      response:\r\n-        \"we support multiple Boards let me say few Telangana State Board Andhra Pradesh Board Maharashtra Board Assam Board\",\r\n-    },\r\n-\r\n-    {\r\n-      utterance: \"what is today's quote\",\r\n-\r\n-      response:\r\n-        \"Determination is the power that sees us through all our frustration and obstacles. It helps in building our willpower which is the very basis of success.\",\r\n-\r\n-      route: \"/childpage\",\r\n-    },\r\n-\r\n-    {\r\n-      utterance: \"Today's Inspirational quote\",\r\n-\r\n-      response:\r\n-        \"Determination is the power that sees us through all our frustration and obstacles. It helps in building our willpower which is the very basis of success.\",\r\n-\r\n-      route: \"/childpage\",\r\n-    },\r\n-\r\n-    {\r\n-      utterance: \"say me today's quote\",\r\n-\r\n-      response:\r\n-        \"Determination is the power that sees us through all our frustration and obstacles. It helps in building our willpower which is the very basis of success.\",\r\n-\r\n-      route: \"/childpage\",\r\n-    },\r\n-    {\r\n-      utterance: \"go back\",\r\n-      response: \"\",\r\n-      action: goBack, // Note the use of an action property\r\n-    },\r\n-    {\r\n-      utterance: \"go forward\",\r\n-      response: \"\",\r\n-      action: goForward,\r\n-    },\r\n-    // {\r\n-    //   utterance: \"play video\",\r\n-    //   // response: \"Playing video.\",\r\n-    //   action: playVideo,\r\n-    // },\r\n-    // {\r\n-    //   utterance: \"pause video\",\r\n-    //   // response: \"Pausing video.\",\r\n-    //   action: pauseVideo,\r\n-    // },\r\n-    // {\r\n-    //   utterance: \"start video\",\r\n-    //   // response: \"Playing video.\",\r\n-    //   action: playVideo,\r\n-    // },\r\n-    // {\r\n-    //   utterance: \"stop video\",\r\n-    //   // response: \"Playing video.\",\r\n-    //   action: pauseVideo,\r\n-    // },\r\n-    {\r\n-      utterance: \"scroll up\",\r\n-      // response: \"Scrolling up.\",\r\n-      action: scrollUp,\r\n-    },\r\n-    {\r\n-      utterance: \"scroll down\",\r\n-      // response: \"Scrolling down.\",\r\n-      action: scrollDown,\r\n-    },\r\n-    {\r\n-      utterance: \"go up\",\r\n-\r\n-      // response: \"Scrolling up.\",\r\n-      action: scrollUp,\r\n-    },\r\n-    {\r\n-      utterance: \"go down\",\r\n-      // response: \"Scrolling down.\",\r\n-      action: scrollDown,\r\n-    },\r\n-    {\r\n-      utterance: \"scroll to top\",\r\n-      action: scrollToTop,\r\n-    },\r\n-    {\r\n-      utterance: \"scroll to bottom\",\r\n-      action: scrollToBottom,\r\n-    },\r\n-    {\r\n-      utterance: \"brane stop\",\r\n-      action: stopListening,\r\n-    },\r\n-    {\r\n-      utterance: \"brane turn off\",\r\n-      action: stopListening,\r\n-    },\r\n-    {\r\n-      utterance: \"brane stop the bot\",\r\n-      action: stopListening,\r\n-    },\r\n-    // {\r\n-    //   utterance: \"mute the video\",\r\n-    //   action: muteVideo,\r\n-    // },\r\n-    // {\r\n-    //   utterance: \"unmute the video\",\r\n-    //   action: unmuteVideo,\r\n-    // },\r\n-    // {\r\n-    //   utterance: \"stop the video sound\",\r\n-    //   action: muteVideo,\r\n-    // },\r\n-    // {\r\n-    //   utterance: \"play the video sound\",\r\n-    //   action: unmuteVideo,\r\n-    // },\r\n-    {\r\n-      utterance: \"play transforming education video\",\r\n-      action: () => controlVideo(\"ourProjectsVideo\", \"play\"),\r\n-    },\r\n-    {\r\n-      utterance: \"start transforming education video\",\r\n-      action: () => controlVideo(\"ourProjectsVideo\", \"play\"),\r\n-    },\r\n-    {\r\n-      utterance: \"pause transforming education video\",\r\n-      action: () => controlVideo(\"ourProjectsVideo\", \"pause\"),\r\n-    },\r\n-    {\r\n-      utterance: \"stop transforming education video\",\r\n-      action: () => controlVideo(\"ourProjectsVideo\", \"pause\"),\r\n-    },\r\n-    {\r\n-      utterance: \"mute transforming education video\",\r\n-      action: () => controlVideo(\"ourProjectsVideo\", \"mute\"),\r\n-    },\r\n-    {\r\n-      utterance: \"unmute transforming education video\",\r\n-      action: () => controlVideo(\"ourProjectsVideo\", \"unmute\"),\r\n-    },\r\n-    {\r\n-      utterance: \"fullscreen transforming education video\",\r\n-      action: () => controlVideo(\"ourProjectsVideo\", \"fullscreen\"),\r\n-    },\r\n-    {\r\n-      utterance: \"exit fullscreen transforming education video\",\r\n-      action: () => controlVideo(\"ourProjectsVideo\", \"exitFullscreen\"),\r\n-    },\r\n-    {\r\n-      utterance: \"increase volume transforming education video\",\r\n-      action: () => controlVideo(\"ourProjectsVideo\", \"increaseVolume\"),\r\n-    },\r\n-    {\r\n-      utterance: \"decrease volume transforming education video\",\r\n-      action: () => controlVideo(\"ourProjectsVideo\", \"decreaseVolume\"),\r\n-    },\r\n-    {\r\n-      utterance: \"play the video about transforming education\",\r\n-      action: () => controlVideo(\"ourProjectsVideo\", \"play\"),\r\n-    },\r\n-    {\r\n-      utterance: \"start the transforming education video\",\r\n-      action: () => controlVideo(\"ourProjectsVideo\", \"play\"),\r\n-    },\r\n-    {\r\n-      utterance: \"can you pause the video on transforming education\",\r\n-      action: () => controlVideo(\"ourProjectsVideo\", \"pause\"),\r\n-    },\r\n-    {\r\n-      utterance: \"stop the video about transforming education\",\r\n-      action: () => controlVideo(\"ourProjectsVideo\", \"pause\"),\r\n-    },\r\n-    {\r\n-      utterance: \"mute the transforming education video\",\r\n-      action: () => controlVideo(\"ourProjectsVideo\", \"mute\"),\r\n-    },\r\n-    {\r\n-      utterance: \"unmute the video on transforming education\",\r\n-      action: () => controlVideo(\"ourProjectsVideo\", \"unmute\"),\r\n-    },\r\n-    {\r\n-      utterance: \"make the transforming education video fullscreen\",\r\n-      action: () => controlVideo(\"ourProjectsVideo\", \"fullscreen\"),\r\n-    },\r\n-    {\r\n-      utterance: \"exit fullscreen on the transforming education video\",\r\n-      action: () => controlVideo(\"ourProjectsVideo\", \"exitFullscreen\"),\r\n-    },\r\n-    {\r\n-      utterance: \"increase the volume of the transforming education video\",\r\n-      action: () => controlVideo(\"ourProjectsVideo\", \"increaseVolume\"),\r\n-    },\r\n-    {\r\n-      utterance: \"decrease the volume of the transforming education video\",\r\n-      action: () => controlVideo(\"ourProjectsVideo\", \"decreaseVolume\"),\r\n-    },\r\n-\r\n-    {\r\n-      utterance: \"play leaders voice video\",\r\n-      action: () => controlVideo(\"leadersVoiceVideo\", \"play\"),\r\n-    },\r\n-    {\r\n-      utterance: \"start leaders voice video\",\r\n-      action: () => controlVideo(\"leadersVoiceVideo\", \"play\"),\r\n-    },\r\n-    {\r\n-      utterance: \"pause leaders voice video\",\r\n-      action: () => controlVideo(\"leadersVoiceVideo\", \"pause\"),\r\n-    },\r\n-    {\r\n-      utterance: \"stop leaders voice video\",\r\n-      action: () => controlVideo(\"leadersVoiceVideo\", \"pause\"),\r\n-    },\r\n-    {\r\n-      utterance: \"mute leaders voice video\",\r\n-      action: () => controlVideo(\"leadersVoiceVideo\", \"mute\"),\r\n-    },\r\n-    {\r\n-      utterance: \"unmute leaders voice video\",\r\n-      action: () => controlVideo(\"leadersVoiceVideo\", \"unmute\"),\r\n-    },\r\n-    {\r\n-      utterance: \"fullscreen leaders voice video\",\r\n-      action: () => controlVideo(\"leadersVoiceVideo\", \"fullscreen\"),\r\n-    },\r\n-    {\r\n-      utterance: \"exit fullscreen leaders voice video\",\r\n-      action: () => controlVideo(\"leadersVoiceVideo\", \"exitFullscreen\"),\r\n-    },\r\n-    {\r\n-      utterance: \"increase volume leaders voice video\",\r\n-      action: () => controlVideo(\"leadersVoiceVideo\", \"increaseVolume\"),\r\n-    },\r\n-    {\r\n-      utterance: \"decrease volume leaders voice video\",\r\n-      action: () => controlVideo(\"leadersVoiceVideo\", \"decreaseVolume\"),\r\n-    },\r\n-\r\n-    {\r\n-      utterance: \"set mobile number to *\",\r\n+      utterance: \"set pin to *\",\r\n       action: (spokenText) => {\r\n         if (!spokenText) {\r\n           speak(\"I couldn't understand the command.\");\r\n           return;\r\n         }\r\n-        const mobileNumber = extractNumber(spokenText);\r\n-        if (mobileNumber) {\r\n-          setMobileNumber(mobileNumber);\r\n-        } else {\r\n-          speak(\"I couldn't find a number in your command.\");\r\n-        }\r\n-      },\r\n-    },\r\n-    {\r\n-      utterance: \"enter mobile number as *\",\r\n-      action: (spokenText) => {\r\n-        if (!spokenText) {\r\n-          speak(\"I couldn't understand the command.\");\r\n-          return;\r\n-        }\r\n-        const mobileNumber = extractNumber(spokenText);\r\n-        if (mobileNumber) {\r\n-          setMobileNumber(mobileNumber);\r\n-        } else {\r\n-          speak(\"I couldn't find a number in your command.\");\r\n-        }\r\n-      },\r\n-    },\r\n-    {\r\n-      utterance: \"enter my mobile number as *\",\r\n-      action: (spokenText) => {\r\n-        if (!spokenText) {\r\n-          speak(\"I couldn't understand the command.\");\r\n-          return;\r\n-        }\r\n-        const mobileNumber = extractNumber(spokenText);\r\n-        if (mobileNumber) {\r\n-          setMobileNumber(mobileNumber);\r\n-        } else {\r\n-          speak(\"I couldn't find a number in your command.\");\r\n-        }\r\n-      },\r\n-    },\r\n-    {\r\n-      utterance: \"set mobile number as *\",\r\n-      action: (spokenText) => {\r\n-        if (!spokenText) {\r\n-          speak(\"I couldn't understand the command.\");\r\n-          return;\r\n-        }\r\n-        const mobileNumber = extractNumber(spokenText);\r\n-        if (mobileNumber) {\r\n-          setMobileNumber(mobileNumber);\r\n-        } else {\r\n-          speak(\"I couldn't find a number in your command.\");\r\n-        }\r\n-      },\r\n-    },\r\n-    {\r\n-      utterance: \"fill mobile number as *\",\r\n-      action: (spokenText) => {\r\n-        if (!spokenText) {\r\n-          speak(\"I couldn't understand the command.\");\r\n-          return;\r\n-        }\r\n-        const mobileNumber = extractNumber(spokenText);\r\n-        if (mobileNumber) {\r\n-          setMobileNumber(mobileNumber);\r\n-        } else {\r\n-          speak(\"I couldn't find a number in your command.\");\r\n-        }\r\n-      },\r\n-    },\r\n-    {\r\n-      utterance: \"set password as *\",\r\n-      action: (spokenText) => {\r\n-        if (!spokenText) {\r\n-          speak(\"I couldn't understand the command.\");\r\n-          return;\r\n-        }\r\n         const pin = extractNumber(spokenText);\r\n         if (pin) {\r\n           setPin(pin);\r\n         } else {\r\n@@ -5054,53 +1138,8 @@\n         }\r\n       },\r\n     },\r\n     {\r\n-      utterance: \"enter password as *\",\r\n-      action: (spokenText) => {\r\n-        if (!spokenText) {\r\n-          speak(\"I couldn't understand the command.\");\r\n-          return;\r\n-        }\r\n-        const pin = extractNumber(spokenText);\r\n-        if (pin) {\r\n-          setPin(pin);\r\n-        } else {\r\n-          speak(\"I couldn't find a number in your command.\");\r\n-        }\r\n-      },\r\n-    },\r\n-    {\r\n-      utterance: \"change password to *\",\r\n-      action: (spokenText) => {\r\n-        if (!spokenText) {\r\n-          speak(\"I couldn't understand the command.\");\r\n-          return;\r\n-        }\r\n-        const pin = extractNumber(spokenText);\r\n-        if (pin) {\r\n-          setPin(pin);\r\n-        } else {\r\n-          speak(\"I couldn't find a number in your command.\");\r\n-        }\r\n-      },\r\n-    },\r\n-    {\r\n-      utterance: \"fill password *\",\r\n-      action: (spokenText) => {\r\n-        if (!spokenText) {\r\n-          speak(\"I couldn't understand the command.\");\r\n-          return;\r\n-        }\r\n-        const pin = extractNumber(spokenText);\r\n-        if (pin) {\r\n-          setPin(pin);\r\n-        } else {\r\n-          speak(\"I couldn't find a number in your command.\");\r\n-        }\r\n-      },\r\n-    },\r\n-    {\r\n       utterance: \"press login\",\r\n       action: () => {\r\n         triggerLogin();\r\n         speak(\"Attempting to log in.\");\r\n@@ -7964,3965 +4003,4 @@\n //   );\r\n // };\r\n \r\n // export default VoiceBot;\r\n-import React, { useState, useEffect, useRef } from \"react\";\r\n-import { useNavigate, useLocation } from \"react-router-dom\";\r\n-import Fuse from \"fuse.js\";\r\n-import \"./VoiceBot.css\";\r\n-import chatbotimage from \"../../assets/chatbotgif.gif\";\r\n-\r\n-const VoiceBot = ({ videoRefs,setMobileNumber,setPin,triggerLogin, setTriggerRecordAudio }) => {\r\n-  const [isListening, setIsListening] = useState(false);\r\n-  const [isSpeaking, setIsSpeaking] = useState(false);\r\n-  const recognition = useRef(null);\r\n-  const speechSynthesis = useRef(window.speechSynthesis);\r\n-  const [hasGreeted, setHasGreeted] = useState(false);\r\n-  const navigate = useNavigate();\r\n-\r\n-  // Initialize speech recognition\r\n-  useEffect(() => {\r\n-    recognition.current = new window.webkitSpeechRecognition();\r\n-    recognition.current.continuous = true;\r\n-    recognition.current.interimResults = false;\r\n-    recognition.current.onresult = onResult;\r\n-    recognition.current.onend = onRecognitionEnd;\r\n-    recognition.current.starting = false;\r\n-\r\n-    recognition.current.onerror = (event) => {\r\n-      console.error(\"Recognition error:\", event.error);\r\n-      if (isListening && !isSpeaking) {\r\n-        restartRecognition();\r\n-      }\r\n-    };\r\n-\r\n-    return () => {\r\n-      if (recognition.current) {\r\n-        recognition.current.abort();\r\n-      }\r\n-    };\r\n-  }, []);\r\n-\r\n-  useEffect(() => {\r\n-    const checkRecognition = () => {\r\n-      if (isListening && !isSpeaking && !recognition.current.starting) {\r\n-        console.log(\"Restarting recognition because it's not active.\");\r\n-        recognition.current.starting = true;\r\n-        recognition.current.start();\r\n-        console.log(\"Restarted recognition.\");\r\n-      }\r\n-    };\r\n-\r\n-    const recognitionCheckInterval = setInterval(checkRecognition, 500); // Check every .5 second\r\n-\r\n-    return () => {\r\n-      clearInterval(recognitionCheckInterval);\r\n-    };\r\n-  }, [isListening, isSpeaking]);\r\n-\r\n-  const historyStack = useRef([]);\r\n-\r\n-  useEffect(() => {\r\n-    return () => {\r\n-      // Clean up the listener when the component unmounts\r\n-      window.removeEventListener(\"popstate\", handlePopState);\r\n-    };\r\n-  }, []);\r\n-\r\n-  const handlePopState = () => {\r\n-    // This needs to handle both back and forward browser actions\r\n-    // Use some logic to determine whether it's a back or forward action\r\n-    // For simplicity, assume it's always back\r\n-    historyStack.current.pop();\r\n-    forwardStack.current.length = 0; // Clear forward stack on manual navigation\r\n-  };\r\n-\r\n-  // Listen to popstate events to update the history stack\r\n-  useEffect(() => {\r\n-    window.addEventListener(\"popstate\", handlePopState);\r\n-  }, []);\r\n-\r\n-  const forwardStack = useRef([]);\r\n-\r\n-  const goBack = () => {\r\n-    if (window.history.state && window.history.state.idx > 0) {\r\n-      window.history.back();\r\n-      speak(\"Going back\");\r\n-    } else {\r\n-      speak(\"Can't go back any further.\");\r\n-    }\r\n-  };\r\n-\r\n-  const goForward = () => {\r\n-    if (\r\n-      window.history.state &&\r\n-      window.history.state.idx < window.history.length - 1\r\n-    ) {\r\n-      window.history.forward();\r\n-      speak(\"Going forward\");\r\n-    } else {\r\n-      speak(\"No forward history available.\");\r\n-    }\r\n-  };\r\n-\r\n-  const scrollAmount = window.innerHeight * 0.82;\r\n-\r\n-  const scrollUp = () => {\r\n-    if (window.pageYOffset === 0) {\r\n-      speak(\"Already at the top of the page.\");\r\n-    } else {\r\n-      window.scrollBy(0, -scrollAmount);\r\n-      speak(\"Scrolled up.\");\r\n-    }\r\n-  };\r\n-\r\n-  const scrollDown = () => {\r\n-    const maxScrollTop =\r\n-      document.documentElement.scrollHeight - window.innerHeight;\r\n-    if (window.pageYOffset >= maxScrollTop) {\r\n-      speak(\"Already at the bottom of the page.\");\r\n-    } else {\r\n-      window.scrollBy(0, scrollAmount);\r\n-      speak(\"Scrolled down.\");\r\n-    }\r\n-  };\r\n-\r\n-  const scrollToTop = () => {\r\n-    if (window.pageYOffset === 0) {\r\n-      speak(\"Already at the top of the page.\");\r\n-    } else {\r\n-      window.scrollTo(0, 0);\r\n-      speak(\"Scrolled to the top of the page.\");\r\n-    }\r\n-  };\r\n-\r\n-  const scrollToBottom = () => {\r\n-    const maxScrollTop =\r\n-      document.documentElement.scrollHeight - window.innerHeight;\r\n-    if (window.pageYOffset >= maxScrollTop) {\r\n-      speak(\"Already at the bottom of the page.\");\r\n-    } else {\r\n-      window.scrollTo(0, document.body.scrollHeight);\r\n-      speak(\"Scrolled to the bottom of the page.\");\r\n-    }\r\n-  };\r\n-\r\n-  const controlVideo = (videoId, action) => {\r\n-    const videoRef = videoRefs.current.get(videoId);\r\n-    if (videoRef && videoRef.current) {\r\n-      switch (action) {\r\n-        case \"play\":\r\n-          videoRef.current.play();\r\n-          break;\r\n-        case \"pause\":\r\n-          videoRef.current.pause();\r\n-          break;\r\n-        case \"mute\":\r\n-          videoRef.current.muted = true;\r\n-          break;\r\n-        case \"unmute\":\r\n-          videoRef.current.muted = false;\r\n-          break;\r\n-        case \"fullscreen\":\r\n-          if (videoRef.current.requestFullscreen) {\r\n-            videoRef.current.requestFullscreen();\r\n-          } else if (videoRef.current.webkitRequestFullscreen) {\r\n-            // Safari\r\n-            videoRef.current.webkitRequestFullscreen();\r\n-          } else if (videoRef.current.msRequestFullscreen) {\r\n-            // IE11\r\n-            videoRef.current.msRequestFullscreen();\r\n-          }\r\n-          break;\r\n-        case \"exitFullscreen\":\r\n-          if (document.exitFullscreen) {\r\n-            document.exitFullscreen();\r\n-          } else if (document.webkitExitFullscreen) {\r\n-            // Safari\r\n-            document.webkitExitFullscreen();\r\n-          } else if (document.msExitFullscreen) {\r\n-            // IE11\r\n-            document.msExitFullscreen();\r\n-          }\r\n-          break;\r\n-        case \"increaseVolume\":\r\n-          if (videoRef.current.volume < 1) {\r\n-            videoRef.current.volume = Math.min(\r\n-              1,\r\n-              videoRef.current.volume + 0.1\r\n-            );\r\n-          }\r\n-          break;\r\n-        case \"decreaseVolume\":\r\n-          if (videoRef.current.volume > 0) {\r\n-            videoRef.current.volume = Math.max(\r\n-              0,\r\n-              videoRef.current.volume - 0.1\r\n-            );\r\n-          }\r\n-          break;\r\n-        // Add other cases as needed\r\n-      }\r\n-      speak(\r\n-        `${\r\n-          action.charAt(0).toUpperCase() +\r\n-          action\r\n-            .slice(1)\r\n-            .replace(/([A-Z])/g, \" $1\")\r\n-            .toLowerCase()\r\n-        }ing video.`\r\n-      );\r\n-    } else {\r\n-      speak(`Video not found.`);\r\n-    }\r\n-  };\r\n-\r\n-  const speak = (message) => {\r\n-    const utterance = new SpeechSynthesisUtterance(message);\r\n-    utterance.onend = () => {\r\n-      setIsSpeaking(false);\r\n-      // Restart recognition after speaking has ended\r\n-      if (isListening) {\r\n-        restartRecognition();\r\n-      }\r\n-    };\r\n-\r\n-    setIsSpeaking(true);\r\n-    // Stop recognition when the bot starts speaking\r\n-    if (recognition.current) {\r\n-      recognition.current.abort();\r\n-    }\r\n-    speechSynthesis.current.speak(utterance);\r\n-  };\r\n-\r\n-  const restartRecognition = () => {\r\n-    // Check if recognition is not already started and if the bot is set to listen\r\n-    if (\r\n-      recognition.current &&\r\n-      !recognition.current.starting &&\r\n-      isListening &&\r\n-      !isSpeaking\r\n-    ) {\r\n-      recognition.current.abort(); // Ensure any ongoing recognition is stopped\r\n-      recognition.current.starting = true;\r\n-      recognition.current.start();\r\n-    }\r\n-  };\r\n-\r\n-  // Restart recognition when bot finishes speaking and isListening is true\r\n-  useEffect(() => {\r\n-    if (!isSpeaking && isListening) {\r\n-      restartRecognition();\r\n-    }\r\n-  }, [isSpeaking, isListening]);\r\n-\r\n-  const onResult = (event) => {\r\n-    const resultIndex = event.resultIndex;\r\n-    const transcript = event.results[resultIndex][0].transcript\r\n-      .trim()\r\n-      .toLowerCase();\r\n-\r\n-    if (event.results[resultIndex].isFinal) {\r\n-      console.log(`Recognized text: ${transcript}`);\r\n-      if (transcript.includes(\"brain\")) {\r\n-        console.log(\"Wake word heard, processing command...\");\r\n-        handleCommandWithFuse(transcript.replace(\"brain\", \"\"));\r\n-      }\r\n-    }\r\n-  };\r\n-\r\n-  const onRecognitionEnd = () => {\r\n-    recognition.current.starting = false;\r\n-    if (isListening && !isSpeaking) {\r\n-      restartRecognition();\r\n-    }\r\n-  };\r\n-\r\n-  useEffect(() => {\r\n-    if (isListening && !hasGreeted) {\r\n-      speak(\"Hello, I'm Brane. How can I help you today?\");\r\n-      setHasGreeted(true);\r\n-    }\r\n-  }, [isListening, hasGreeted]);\r\n-\r\n-  // Updated startListening function\r\n-  const startListening = () => {\r\n-    setIsListening(true);\r\n-    if (!recognition.current.starting) {\r\n-      restartRecognition();\r\n-    }\r\n-  };\r\n-\r\n-  // Updated stopListening function\r\n-  const stopListening = () => {\r\n-    setIsListening(false);\r\n-    if (speechSynthesis.current.speaking) {\r\n-      speechSynthesis.current.cancel();\r\n-    }\r\n-    recognition.current.abort();\r\n-  };\r\n-\r\n-  const handleCommandWithFuse = (command) => {\r\n-    const fuse = new Fuse(commands, { keys: [\"utterance\"], threshold: 0.4 });\r\n-    const results = fuse.search(command);\r\n-    const foundCommand = results.length ? results[0].item : null;\r\n-\r\n-    if (foundCommand) {\r\n-      console.log(\"Command text to process:\", command);\r\n-      console.log(\"Command found:\", foundCommand.utterance);\r\n-      if (foundCommand.action) {\r\n-        foundCommand.action(command); // Pass the command text to the action function\r\n-      } else if (foundCommand.route) {\r\n-        navigate(foundCommand.route);\r\n-      }\r\n-\r\n-      // Speak after performing the action or navigation\r\n-      speak(foundCommand.response);\r\n-    } else {\r\n-      console.log(\"No command found.\");\r\n-      speak(\"I'm not sure how to respond to that.\");\r\n-    }\r\n-  };\r\n-\r\n-  const extractNumber = (spokenText) => {\r\n-    if (!spokenText) return null; // Return null if spokenText is undefined or null\r\n-  \r\n-    const sanitizedText = spokenText.replace(/[.,]/g, '');\r\n-    const matches = sanitizedText.match(/\\d+/);\r\n-    return matches ? matches[0] : null;\r\n-  };\r\n-\r\n-\r\n-  const commands = [\r\n-    {\r\n-      utterance: \"Hello who are you ?\",\r\n-\r\n-      response:\r\n-        \"Hi! This is Brane! your Voice bot from Brane Education How can I Assist you Today ?\",\r\n-    },\r\n-\r\n-    {\r\n-      utterance: \"Hello\",\r\n-\r\n-      response: \"Hi! How can I assist you today?\",\r\n-    },\r\n-\r\n-    {\r\n-      utterance: \"hello\",\r\n-\r\n-      response: \"Hi! How can I assist you today?\",\r\n-    },\r\n-\r\n-    {\r\n-      utterance: \"Hi.\",\r\n-\r\n-      response: \"Hello! How can I assist you today?\",\r\n-    },\r\n-\r\n-    {\r\n-      utterance: \"Hey there\",\r\n-\r\n-      response: \"Hi! How can I assist you today?\",\r\n-    },\r\n-\r\n-    {\r\n-      utterance: \"Good morning Brane.\",\r\n-\r\n-      response: \"Hey Hiii! Good morning  ! How can I help you?\",\r\n-    },\r\n-\r\n-    {\r\n-      utterance: \"Good afternoon Brane.\",\r\n-\r\n-      response: \"Hey Hiii! Good after noon ! How can I help you?\",\r\n-    },\r\n-\r\n-    {\r\n-      utterance: \"Good evening Brane.\",\r\n-\r\n-      response: \"Hey Hiii! Good evening ! How can I help you?\",\r\n-    },\r\n-\r\n-    {\r\n-      utterance: \"take me to homepage\",\r\n-\r\n-      route: \"/\",\r\n-\r\n-      response: \"You're in Homepage now\",\r\n-    },\r\n-    {\r\n-      utterance: \"open homepage\",\r\n-\r\n-      route: \"/\",\r\n-\r\n-      response: \"You're in Homepage now\",\r\n-    },\r\n-    {\r\n-      utterance: \"go to homepage\",\r\n-\r\n-      route: \"/\",\r\n-\r\n-      response: \"You're in Homepage now\",\r\n-    },\r\n-    {\r\n-      utterance: \"go back to homepage\",\r\n-\r\n-      route: \"/\",\r\n-\r\n-      response: \"You're in Homepage now\",\r\n-    },\r\n-    {\r\n-      utterance: \"can you please take me to login page\",\r\n-\r\n-      route: \"/login\",\r\n-\r\n-      response: \"Here's the Login Page, Please Login\",\r\n-    },\r\n-\r\n-    {\r\n-      utterance: \"please take me to login page\",\r\n-\r\n-      route: \"/login\",\r\n-\r\n-      response: \"Here's the Login Page, Please Login\",\r\n-    },\r\n-\r\n-    {\r\n-      utterance: \"Go to login page\",\r\n-\r\n-      route: \"/login\",\r\n-\r\n-      response: \"Here's the Login Page, Please Login\",\r\n-    },\r\n-\r\n-    {\r\n-      utterance: \"open login page\",\r\n-\r\n-      route: \"/login\",\r\n-\r\n-      response: \"Here's the Login Page, Please Login\",\r\n-    },\r\n-\r\n-    {\r\n-      utterance: \"can you please take me to signup page\",\r\n-\r\n-      route: \"/signup\",\r\n-\r\n-      response: \"Here's the signup page. Please proceed With Registration.\",\r\n-    },\r\n-\r\n-    {\r\n-      utterance: \"take me to signup page\",\r\n-\r\n-      route: \"/signup\",\r\n-\r\n-      response: \"Here's the signup page. Please proceed With Registration.\",\r\n-    },\r\n-\r\n-    {\r\n-      utterance: \"Go to signup page\",\r\n-\r\n-      route: \"/signup\",\r\n-\r\n-      response: \"Here's the signup page. Please proceed With Registration.\",\r\n-    },\r\n-\r\n-    {\r\n-      utterance: \"open signup page\",\r\n-\r\n-      route: \"/signup\",\r\n-\r\n-      response: \"Here's the signup page. Please proceed With Registration.\",\r\n-    },\r\n-\r\n-    {\r\n-      utterance: \"Go to face id\",\r\n-\r\n-      route: \"/login/faceid\",\r\n-\r\n-      response: \"Here's Face ID Login. Please proceed.\",\r\n-    },\r\n-\r\n-    {\r\n-      utterance: \"Go to face id login\",\r\n-\r\n-      route: \"/login/faceid\",\r\n-\r\n-      response: \"Here's Face ID Login. Please proceed.\",\r\n-    },\r\n-    {\r\n-      utterance: \"Go to face login\",\r\n-\r\n-      route: \"/login/faceid\",\r\n-\r\n-      response: \"Here's Face ID Login. Please proceed.\",\r\n-    },\r\n-\r\n-    {\r\n-      utterance: \"login with face id\",\r\n-\r\n-      route: \"/login/faceid\",\r\n-\r\n-      response: \"Here's Face ID Login. Please proceed.\",\r\n-    },\r\n-\r\n-    {\r\n-      utterance: \"login with face\",\r\n-\r\n-      route: \"/login/faceid\",\r\n-\r\n-      response: \"Here's Face ID Login. Please proceed.\",\r\n-    },\r\n-\r\n-    {\r\n-      utterance: \"i want to login with face\",\r\n-\r\n-      route: \"/login/faceid\",\r\n-\r\n-      response: \"Here's Face ID Login. Please proceed.\",\r\n-    },\r\n-\r\n-    {\r\n-      utterance: \"login with voice\",\r\n-\r\n-      route: \"/login/voiceid\",\r\n-\r\n-      response: \"Here's Voice Login. Please proceed.\",\r\n-    },\r\n-\r\n-    {\r\n-      utterance: \"i want to login with voice\",\r\n-\r\n-      route: \"/login/voiceid\",\r\n-\r\n-      response: \"Here's Voice Login. Please proceed.\",\r\n-    },\r\n-\r\n-    {\r\n-      utterance: \"go to voice login\",\r\n-\r\n-      route: \"/login/voiceid\",\r\n-\r\n-      response: \"Here's Voice Login. Please proceed.\",\r\n-    },\r\n-\r\n-    {\r\n-      utterance: \"login with voice\",\r\n-\r\n-      route: \"/login/voiceid\",\r\n-\r\n-      response: \"Here's Voice Login. Please proceed.\",\r\n-    },\r\n-\r\n-    {\r\n-      utterance: \"login with mobile\",\r\n-\r\n-      route: \"/login/mobile\",\r\n-\r\n-      response: \"Here's Mobile Login. Please proceed.\",\r\n-    },\r\n-\r\n-    {\r\n-      utterance: \"i want to login with mobile\",\r\n-\r\n-      route: \"/login/mobile\",\r\n-\r\n-      response: \"Here's Mobile Login. Please proceed.\",\r\n-    },\r\n-    {\r\n-      utterance: \"go to mobile login\",\r\n-\r\n-      route: \"/login/mobile\",\r\n-\r\n-      response: \"Here's Mobile Login. Please proceed.\",\r\n-    },\r\n-    {\r\n-      utterance: \"go to about page\",\r\n-\r\n-      route: \"/aboutus\",\r\n-\r\n-      response: \"This is About us.\",\r\n-    },\r\n-    {\r\n-      utterance: \"go to about us page\",\r\n-\r\n-      route: \"/aboutus\",\r\n-\r\n-      response: \"This is About us.\",\r\n-    },\r\n-    {\r\n-      utterance: \"open about us page\",\r\n-\r\n-      route: \"/aboutus\",\r\n-\r\n-      response: \"This is About us.\",\r\n-    },\r\n-    {\r\n-      utterance: \"open about page\",\r\n-\r\n-      route: \"/aboutus\",\r\n-\r\n-      response: \"This is About us.\",\r\n-    },\r\n-    {\r\n-      utterance: \"take me to about page\",\r\n-\r\n-      route: \"/aboutus\",\r\n-\r\n-      response: \"This is About us.\",\r\n-    },\r\n-    {\r\n-      utterance: \"take me to about us page\",\r\n-\r\n-      route: \"/aboutus\",\r\n-\r\n-      response: \"This is About us.\",\r\n-    },\r\n-\r\n-    {\r\n-      utterance: \"go to contact page\",\r\n-\r\n-      route: \"/contactus\",\r\n-\r\n-      response: \"You can contact us from here\",\r\n-    },\r\n-    {\r\n-      utterance: \"go to contact us page\",\r\n-\r\n-      route: \"/contactus\",\r\n-\r\n-      response: \"You can contact us from here\",\r\n-    },\r\n-    {\r\n-      utterance: \"open contact us page\",\r\n-\r\n-      route: \"/contactus\",\r\n-\r\n-      response: \"You can contact us from here\",\r\n-    },\r\n-    {\r\n-      utterance: \"open contact page\",\r\n-\r\n-      route: \"/contactus\",\r\n-\r\n-      response: \"You can contact us from here\",\r\n-    },\r\n-    {\r\n-      utterance: \"take me to about page\",\r\n-\r\n-      route: \"/contactus\",\r\n-\r\n-      response: \"You can contact us from here\",\r\n-    },\r\n-    {\r\n-      utterance: \"take me to contact us page\",\r\n-\r\n-      route: \"/contactus\",\r\n-\r\n-      response: \"You can contact us from here\",\r\n-    },\r\n-\r\n-    {\r\n-      utterance: \"what are platform features\",\r\n-\r\n-      response:\r\n-        \"Dashboard, Dynamic time table, Learning Networks, Little Masters, Video Based Dictionary, General Search.\",\r\n-    },\r\n-\r\n-    {\r\n-      utterance: \"Features of platform\",\r\n-\r\n-      response:\r\n-        \"Dashboard, Dynamic time table, Learning Networks, Little Masters, Video Based Dictionary, General Search.\",\r\n-    },\r\n-\r\n-    {\r\n-      utterance: \"What does the platform offer\",\r\n-\r\n-      response:\r\n-        \"Dashboard, Dynamic time table, Learning Networks, Little Masters, Video Based Dictionary, General Search.\",\r\n-    },\r\n-\r\n-    {\r\n-      utterance: \"Say me the features of platform\",\r\n-\r\n-      response:\r\n-        \"Dashboard, Dynamic time table, Learning Networks, Little Masters, Video Based Dictionary, General Search.\",\r\n-    },\r\n-\r\n-    {\r\n-      utterance: \"Say me the services of platform\",\r\n-\r\n-      response:\r\n-        \"Dashboard, Dynamic time table, Learning Networks, Little Masters, Video Based Dictionary, General Search.\",\r\n-    },\r\n-\r\n-    {\r\n-      utterance: \"tell me the services offered by the platform\",\r\n-\r\n-      response:\r\n-        \"Dashboard, Dynamic time table, Learning Networks, Little Masters, Video Based Dictionary, General Search.\",\r\n-    },\r\n-\r\n-    {\r\n-      utterance: \"explain platform services\",\r\n-\r\n-      response:\r\n-        \"Dashboard, Dynamic time table, Learning Networks, Little Masters, Video Based Dictionary, General Search.\",\r\n-    },\r\n-\r\n-    {\r\n-      utterance: \"Give me the Parent voice of Julia Harris\",\r\n-\r\n-      response:\r\n-        \"Brane education has helped my son a lot in his studies. He improved a lot in his studies and is now able to score good marks in his exams\",\r\n-    },\r\n-\r\n-    {\r\n-      utterance: \"Leaders Voice\",\r\n-\r\n-      response:\r\n-        \"This Voice-interactive AI Platform is a game Changer. It revolutionizes education.\",\r\n-    },\r\n-\r\n-    {\r\n-      utterance: \"Curriculum Supported by Brane Education\",\r\n-\r\n-      response:\r\n-        \"we support multiple Boards let me say few Telangana State Board Andhra Pradesh Board Maharashtra Board Assam Board\",\r\n-    },\r\n-\r\n-    {\r\n-      utterance: \"Boards supported by the platform\",\r\n-\r\n-      response:\r\n-        \"we support multiple Boards let me say few Telangana State Board Andhra Pradesh Board Maharashtra Board Assam Board\",\r\n-    },\r\n-\r\n-    {\r\n-      utterance: \"Curriculum\",\r\n-\r\n-      response:\r\n-        \"we support multiple Boards let me say few Telangana State Board Andhra Pradesh Board Maharashtra Board Assam Board\",\r\n-    },\r\n-\r\n-    {\r\n-      utterance: \"what is today's quote\",\r\n-\r\n-      response:\r\n-        \"Determination is the power that sees us through all our frustration and obstacles. It helps in building our willpower which is the very basis of success.\",\r\n-\r\n-      route: \"/childpage\",\r\n-    },\r\n-\r\n-    {\r\n-      utterance: \"Today's Inspirational quote\",\r\n-\r\n-      response:\r\n-        \"Determination is the power that sees us through all our frustration and obstacles. It helps in building our willpower which is the very basis of success.\",\r\n-\r\n-      route: \"/childpage\",\r\n-    },\r\n-\r\n-    {\r\n-      utterance: \"say me today's quote\",\r\n-\r\n-      response:\r\n-        \"Determination is the power that sees us through all our frustration and obstacles. It helps in building our willpower which is the very basis of success.\",\r\n-\r\n-      route: \"/childpage\",\r\n-    },\r\n-    {\r\n-      utterance: \"go back\",\r\n-      response: \"\",\r\n-      action: goBack, // Note the use of an action property\r\n-    },\r\n-    {\r\n-      utterance: \"go forward\",\r\n-      response: \"\",\r\n-      action: goForward,\r\n-    },\r\n-    // {\r\n-    //   utterance: \"play video\",\r\n-    //   // response: \"Playing video.\",\r\n-    //   action: playVideo,\r\n-    // },\r\n-    // {\r\n-    //   utterance: \"pause video\",\r\n-    //   // response: \"Pausing video.\",\r\n-    //   action: pauseVideo,\r\n-    // },\r\n-    // {\r\n-    //   utterance: \"start video\",\r\n-    //   // response: \"Playing video.\",\r\n-    //   action: playVideo,\r\n-    // },\r\n-    // {\r\n-    //   utterance: \"stop video\",\r\n-    //   // response: \"Playing video.\",\r\n-    //   action: pauseVideo,\r\n-    // },\r\n-    {\r\n-      utterance: \"scroll up\",\r\n-      // response: \"Scrolling up.\",\r\n-      action: scrollUp,\r\n-    },\r\n-    {\r\n-      utterance: \"scroll down\",\r\n-      // response: \"Scrolling down.\",\r\n-      action: scrollDown,\r\n-    },\r\n-    {\r\n-      utterance: \"go up\",\r\n-\r\n-      // response: \"Scrolling up.\",\r\n-      action: scrollUp,\r\n-    },\r\n-    {\r\n-      utterance: \"go down\",\r\n-      // response: \"Scrolling down.\",\r\n-      action: scrollDown,\r\n-    },\r\n-    {\r\n-      utterance: \"scroll to top\",\r\n-      action: scrollToTop,\r\n-    },\r\n-    {\r\n-      utterance: \"scroll to bottom\",\r\n-      action: scrollToBottom,\r\n-    },\r\n-    {\r\n-      utterance: \"brane stop\",\r\n-      action: stopListening,\r\n-    },\r\n-    {\r\n-      utterance: \"brane turn off\",\r\n-      action: stopListening,\r\n-    },\r\n-    {\r\n-      utterance: \"brane stop the bot\",\r\n-      action: stopListening,\r\n-    },\r\n-    // {\r\n-    //   utterance: \"mute the video\",\r\n-    //   action: muteVideo,\r\n-    // },\r\n-    // {\r\n-    //   utterance: \"unmute the video\",\r\n-    //   action: unmuteVideo,\r\n-    // },\r\n-    // {\r\n-    //   utterance: \"stop the video sound\",\r\n-    //   action: muteVideo,\r\n-    // },\r\n-    // {\r\n-    //   utterance: \"play the video sound\",\r\n-    //   action: unmuteVideo,\r\n-    // },\r\n-    {\r\n-      utterance: \"play transforming education video\",\r\n-      action: () => controlVideo(\"ourProjectsVideo\", \"play\"),\r\n-    },\r\n-    {\r\n-      utterance: \"start transforming education video\",\r\n-      action: () => controlVideo(\"ourProjectsVideo\", \"play\"),\r\n-    },\r\n-    {\r\n-      utterance: \"pause transforming education video\",\r\n-      action: () => controlVideo(\"ourProjectsVideo\", \"pause\"),\r\n-    },\r\n-    {\r\n-      utterance: \"stop transforming education video\",\r\n-      action: () => controlVideo(\"ourProjectsVideo\", \"pause\"),\r\n-    },\r\n-    {\r\n-      utterance: \"mute transforming education video\",\r\n-      action: () => controlVideo(\"ourProjectsVideo\", \"mute\"),\r\n-    },\r\n-    {\r\n-      utterance: \"unmute transforming education video\",\r\n-      action: () => controlVideo(\"ourProjectsVideo\", \"unmute\"),\r\n-    },\r\n-    {\r\n-      utterance: \"fullscreen transforming education video\",\r\n-      action: () => controlVideo(\"ourProjectsVideo\", \"fullscreen\"),\r\n-    },\r\n-    {\r\n-      utterance: \"exit fullscreen transforming education video\",\r\n-      action: () => controlVideo(\"ourProjectsVideo\", \"exitFullscreen\"),\r\n-    },\r\n-    {\r\n-      utterance: \"increase volume transforming education video\",\r\n-      action: () => controlVideo(\"ourProjectsVideo\", \"increaseVolume\"),\r\n-    },\r\n-    {\r\n-      utterance: \"decrease volume transforming education video\",\r\n-      action: () => controlVideo(\"ourProjectsVideo\", \"decreaseVolume\"),\r\n-    },\r\n-    {\r\n-      utterance: \"play the video about transforming education\",\r\n-      action: () => controlVideo(\"ourProjectsVideo\", \"play\"),\r\n-    },\r\n-    {\r\n-      utterance: \"start the transforming education video\",\r\n-      action: () => controlVideo(\"ourProjectsVideo\", \"play\"),\r\n-    },\r\n-    {\r\n-      utterance: \"can you pause the video on transforming education\",\r\n-      action: () => controlVideo(\"ourProjectsVideo\", \"pause\"),\r\n-    },\r\n-    {\r\n-      utterance: \"stop the video about transforming education\",\r\n-      action: () => controlVideo(\"ourProjectsVideo\", \"pause\"),\r\n-    },\r\n-    {\r\n-      utterance: \"mute the transforming education video\",\r\n-      action: () => controlVideo(\"ourProjectsVideo\", \"mute\"),\r\n-    },\r\n-    {\r\n-      utterance: \"unmute the video on transforming education\",\r\n-      action: () => controlVideo(\"ourProjectsVideo\", \"unmute\"),\r\n-    },\r\n-    {\r\n-      utterance: \"make the transforming education video fullscreen\",\r\n-      action: () => controlVideo(\"ourProjectsVideo\", \"fullscreen\"),\r\n-    },\r\n-    {\r\n-      utterance: \"exit fullscreen on the transforming education video\",\r\n-      action: () => controlVideo(\"ourProjectsVideo\", \"exitFullscreen\"),\r\n-    },\r\n-    {\r\n-      utterance: \"increase the volume of the transforming education video\",\r\n-      action: () => controlVideo(\"ourProjectsVideo\", \"increaseVolume\"),\r\n-    },\r\n-    {\r\n-      utterance: \"decrease the volume of the transforming education video\",\r\n-      action: () => controlVideo(\"ourProjectsVideo\", \"decreaseVolume\"),\r\n-    },\r\n-\r\n-    {\r\n-      utterance: \"play leaders voice video\",\r\n-      action: () => controlVideo(\"leadersVoiceVideo\", \"play\"),\r\n-    },\r\n-    {\r\n-      utterance: \"start leaders voice video\",\r\n-      action: () => controlVideo(\"leadersVoiceVideo\", \"play\"),\r\n-    },\r\n-    {\r\n-      utterance: \"pause leaders voice video\",\r\n-      action: () => controlVideo(\"leadersVoiceVideo\", \"pause\"),\r\n-    },\r\n-    {\r\n-      utterance: \"stop leaders voice video\",\r\n-      action: () => controlVideo(\"leadersVoiceVideo\", \"pause\"),\r\n-    },\r\n-    {\r\n-      utterance: \"mute leaders voice video\",\r\n-      action: () => controlVideo(\"leadersVoiceVideo\", \"mute\"),\r\n-    },\r\n-    {\r\n-      utterance: \"unmute leaders voice video\",\r\n-      action: () => controlVideo(\"leadersVoiceVideo\", \"unmute\"),\r\n-    },\r\n-    {\r\n-      utterance: \"fullscreen leaders voice video\",\r\n-      action: () => controlVideo(\"leadersVoiceVideo\", \"fullscreen\"),\r\n-    },\r\n-    {\r\n-      utterance: \"exit fullscreen leaders voice video\",\r\n-      action: () => controlVideo(\"leadersVoiceVideo\", \"exitFullscreen\"),\r\n-    },\r\n-    {\r\n-      utterance: \"increase volume leaders voice video\",\r\n-      action: () => controlVideo(\"leadersVoiceVideo\", \"increaseVolume\"),\r\n-    },\r\n-    {\r\n-      utterance: \"decrease volume leaders voice video\",\r\n-      action: () => controlVideo(\"leadersVoiceVideo\", \"decreaseVolume\"),\r\n-    },\r\n-\r\n-    {\r\n-      utterance: \"set mobile number to *\",\r\n-      action: (spokenText) => {\r\n-        if (!spokenText) {\r\n-          speak(\"I couldn't understand the command.\");\r\n-          return;\r\n-        }\r\n-        const mobileNumber = extractNumber(spokenText);\r\n-        if (mobileNumber) {\r\n-          setMobileNumber(mobileNumber);\r\n-        } else {\r\n-          speak(\"I couldn't find a number in your command.\");\r\n-        }\r\n-      },\r\n-    },\r\n-    {\r\n-      utterance: \"enter mobile number as *\",\r\n-      action: (spokenText) => {\r\n-        if (!spokenText) {\r\n-          speak(\"I couldn't understand the command.\");\r\n-          return;\r\n-        }\r\n-        const mobileNumber = extractNumber(spokenText);\r\n-        if (mobileNumber) {\r\n-          setMobileNumber(mobileNumber);\r\n-        } else {\r\n-          speak(\"I couldn't find a number in your command.\");\r\n-        }\r\n-      },\r\n-    },\r\n-    {\r\n-      utterance: \"enter my mobile number as *\",\r\n-      action: (spokenText) => {\r\n-        if (!spokenText) {\r\n-          speak(\"I couldn't understand the command.\");\r\n-          return;\r\n-        }\r\n-        const mobileNumber = extractNumber(spokenText);\r\n-        if (mobileNumber) {\r\n-          setMobileNumber(mobileNumber);\r\n-        } else {\r\n-          speak(\"I couldn't find a number in your command.\");\r\n-        }\r\n-      },\r\n-    },\r\n-    {\r\n-      utterance: \"set mobile number as *\",\r\n-      action: (spokenText) => {\r\n-        if (!spokenText) {\r\n-          speak(\"I couldn't understand the command.\");\r\n-          return;\r\n-        }\r\n-        const mobileNumber = extractNumber(spokenText);\r\n-        if (mobileNumber) {\r\n-          setMobileNumber(mobileNumber);\r\n-        } else {\r\n-          speak(\"I couldn't find a number in your command.\");\r\n-        }\r\n-      },\r\n-    },\r\n-    {\r\n-      utterance: \"fill mobile number as *\",\r\n-      action: (spokenText) => {\r\n-        if (!spokenText) {\r\n-          speak(\"I couldn't understand the command.\");\r\n-          return;\r\n-        }\r\n-        const mobileNumber = extractNumber(spokenText);\r\n-        if (mobileNumber) {\r\n-          setMobileNumber(mobileNumber);\r\n-        } else {\r\n-          speak(\"I couldn't find a number in your command.\");\r\n-        }\r\n-      },\r\n-    },\r\n-    {\r\n-      utterance: \"set password as *\",\r\n-      action: (spokenText) => {\r\n-        if (!spokenText) {\r\n-          speak(\"I couldn't understand the command.\");\r\n-          return;\r\n-        }\r\n-        const pin = extractNumber(spokenText);\r\n-        if (pin) {\r\n-          setPin(pin);\r\n-        } else {\r\n-          speak(\"I couldn't find a number in your command.\");\r\n-        }\r\n-      },\r\n-    },\r\n-    {\r\n-      utterance: \"enter password as *\",\r\n-      action: (spokenText) => {\r\n-        if (!spokenText) {\r\n-          speak(\"I couldn't understand the command.\");\r\n-          return;\r\n-        }\r\n-        const pin = extractNumber(spokenText);\r\n-        if (pin) {\r\n-          setPin(pin);\r\n-        } else {\r\n-          speak(\"I couldn't find a number in your command.\");\r\n-        }\r\n-      },\r\n-    },\r\n-    {\r\n-      utterance: \"change password to *\",\r\n-      action: (spokenText) => {\r\n-        if (!spokenText) {\r\n-          speak(\"I couldn't understand the command.\");\r\n-          return;\r\n-        }\r\n-        const pin = extractNumber(spokenText);\r\n-        if (pin) {\r\n-          setPin(pin);\r\n-        } else {\r\n-          speak(\"I couldn't find a number in your command.\");\r\n-        }\r\n-      },\r\n-    },\r\n-    {\r\n-      utterance: \"press login\",\r\n-      action: () => {\r\n-        triggerLogin();\r\n-        speak(\"Attempting to log in.\");\r\n-      },\r\n-    },\r\n-    {\r\n-      utterance: \"press record audio\",\r\n-      action: () => {\r\n-        console.log(\"Record Audio command detected\");\r\n-        setTriggerRecordAudio(true);\r\n-      },\r\n-      response: \"Started\"\r\n-    },\r\n-    \r\n-  ];\r\n-\r\n-  return (\r\n-    <div className=\"speech-bot-container\">\r\n-      <div\r\n-        className={`button-container ${\r\n-          isListening ? \"voicebotframeactive\" : \"voicebotframe\"\r\n-        }`}\r\n-      >\r\n-        {/* <button onClick={isListening ? stopListening : startListening}>\r\n-          {isListening ? \"Stop\" : \"Start\"} Animation\r\n-        </button> */}\r\n-        <img\r\n-          className=\"botimage\"\r\n-          src={chatbotimage}\r\n-          alt=\"\"\r\n-          onClick={isListening ? stopListening : startListening}\r\n-        />\r\n-      </div>\r\n-    </div>\r\n-  );\r\n-};\r\n-\r\n-export default VoiceBot;\r\n-\r\n-{\r\n-  /* // import React, { useState, useEffect, useRef } from \"react\";\r\n-// import { useNavigate, useLocation } from \"react-router-dom\";\r\n-// import Fuse from \"fuse.js\";\r\n-// import \"./VoiceBot.css\";\r\n-\r\n-// const VoiceBot = ({ videoRef }) => {\r\n-//   const [isListening, setIsListening] = useState(false);\r\n-//   const [isSpeaking, setIsSpeaking] = useState(false);\r\n-//   const recognition = useRef(null);\r\n-//   const speechSynthesis = useRef(window.speechSynthesis);\r\n-//   const [hasGreeted, setHasGreeted] = useState(false);\r\n-//   const navigate = useNavigate();\r\n-\r\n-//   useEffect(() => {\r\n-//     recognition.current = new window.webkitSpeechRecognition();\r\n-//     recognition.current.continuous = true;\r\n-//     recognition.current.interimResults = false;\r\n-//     recognition.current.onresult = onResult;\r\n-//     recognition.current.onend = onRecognitionEnd;\r\n-//     recognition.current.starting = false;\r\n-\r\n-//     // Simplified error handling, removed specific handling for 'no-speech'\r\n-//     recognition.current.onerror = (event) => {\r\n-//       console.error(\"Recognition error:\", event.error);\r\n-//       // Check if listening is true and the bot isn't speaking\r\n-//       if (isListening && !isSpeaking) {\r\n-//         // Restart recognition\r\n-//         restartRecognition();\r\n-//       }\r\n-//     };\r\n-\r\n-//     return () => {\r\n-//       if (recognition.current) {\r\n-//         recognition.current.abort();\r\n-//       }\r\n-//     };\r\n-//   }, []);\r\n-\r\n-//   useEffect(() => {\r\n-//     const checkRecognition = () => {\r\n-//       if (isListening && !isSpeaking && !recognition.current.starting) {\r\n-//         console.log(\"Restarting recognition because it's not active.\");\r\n-//         recognition.current.starting = true;\r\n-//         recognition.current.start();\r\n-//         console.log(\"Restarted recognition.\");\r\n-//       }\r\n-//     };\r\n-\r\n-//     const recognitionCheckInterval = setInterval(checkRecognition, 100); // Check every 1 second\r\n-\r\n-//     return () => {\r\n-//       clearInterval(recognitionCheckInterval);\r\n-//     };\r\n-//   }, [isListening, isSpeaking]);\r\n-\r\n-//   const restartRecognition = () => {\r\n-//     if (recognition.current.starting) {\r\n-//       console.log(\"Recognition is already starting or running.\");\r\n-//       return;\r\n-//     }\r\n-\r\n-//     recognition.current.abort(); // Stop any existing recognition process\r\n-//     recognition.current.starting = true;\r\n-//     recognition.current.start();\r\n-//     console.log(\"Recognition restarted.\");\r\n-//   };\r\n-\r\n-//   const historyStack = useRef([]);\r\n-\r\n-//   useEffect(() => {\r\n-//     return () => {\r\n-//       // Clean up the listener when the component unmounts\r\n-//       window.removeEventListener(\"popstate\", handlePopState);\r\n-//     };\r\n-//   }, []);\r\n-\r\n-//   const handlePopState = () => {\r\n-//     // This needs to handle both back and forward browser actions\r\n-//     // Use some logic to determine whether it's a back or forward action\r\n-//     // For simplicity, assume it's always back\r\n-//     historyStack.current.pop();\r\n-//     forwardStack.current.length = 0; // Clear forward stack on manual navigation\r\n-//   };\r\n-  \r\n-\r\n-//   // Add a new entry to the stack whenever navigate is called\r\n-//   const customNavigate = (to, options) => {\r\n-//     historyStack.current.push(to);\r\n-//     navigate(to, options);\r\n-//   };\r\n-\r\n-//   // Listen to popstate events to update the history stack\r\n-//   useEffect(() => {\r\n-//     window.addEventListener(\"popstate\", handlePopState);\r\n-//   }, []);\r\n-\r\n-//   const forwardStack = useRef([]);\r\n-\r\n-//   const goBack = () => {\r\n-//     if (window.history.state && window.history.state.idx > 0) {\r\n-//       window.history.back();\r\n-//       speak(\"Going back\");\r\n-//     } else {\r\n-//       speak(\"Can't go back any further.\");\r\n-//     }\r\n-//   };\r\n-\r\n-//   const goForward = () => {\r\n-//     if (window.history.state && window.history.state.idx < window.history.length - 1) {\r\n-//       window.history.forward();\r\n-//       speak(\"Going forward\");\r\n-//     } else {\r\n-//       speak(\"No forward history available.\");\r\n-//     }\r\n-//   };\r\n-\r\n-//   const playVideo = () => {\r\n-//     if (videoRef.current) {\r\n-//       videoRef.current.play();\r\n-//       speak(\"Playing video.\");\r\n-//     } else {\r\n-//       speak(\"No video to play.\");\r\n-//     }\r\n-//   };\r\n-\r\n-//   const pauseVideo = () => {\r\n-//     if (videoRef.current) {\r\n-//       videoRef.current.pause();\r\n-//       speak(\"Video paused.\");\r\n-//     } else {\r\n-//       speak(\"No video to pause.\");\r\n-//     }\r\n-//   };\r\n-\r\n-//   const scrollAmount = window.innerHeight * 0.82;\r\n-\r\n-//   const scrollUp = () => {\r\n-//     if (window.pageYOffset === 0) {\r\n-//       speak(\"Already at the top of the page.\");\r\n-//     } else {\r\n-//       window.scrollBy(0, -scrollAmount);\r\n-//       speak(\"Scrolled up.\");\r\n-//     }\r\n-//   };\r\n-\r\n-//   const scrollDown = () => {\r\n-//     const maxScrollTop =\r\n-//       document.documentElement.scrollHeight - window.innerHeight;\r\n-//     if (window.pageYOffset >= maxScrollTop) {\r\n-//       speak(\"Already at the bottom of the page.\");\r\n-//     } else {\r\n-//       window.scrollBy(0, scrollAmount);\r\n-//       speak(\"Scrolled down.\");\r\n-//     }\r\n-//   };\r\n-\r\n-//   const scrollToTop = () => {\r\n-//     if (window.pageYOffset === 0) {\r\n-//       speak(\"Already at the top of the page.\");\r\n-//     } else {\r\n-//       window.scrollTo(0, 0);\r\n-//       speak(\"Scrolled to the top of the page.\");\r\n-//     }\r\n-//   };\r\n-\r\n-//   const scrollToBottom = () => {\r\n-//     const maxScrollTop =\r\n-//       document.documentElement.scrollHeight - window.innerHeight;\r\n-//     if (window.pageYOffset >= maxScrollTop) {\r\n-//       speak(\"Already at the bottom of the page.\");\r\n-//     } else {\r\n-//       window.scrollTo(0, document.body.scrollHeight);\r\n-//       speak(\"Scrolled to the bottom of the page.\");\r\n-//     }\r\n-//   };\r\n-\r\n-//   const speak = (message) => {\r\n-//     console.log(\"speak function called with message:\", message);\r\n-//     const utterance = new SpeechSynthesisUtterance(message);\r\n-//     utterance.onend = () => {\r\n-//       setIsSpeaking(false);\r\n-//       console.log(\"Speaking ended.\");\r\n-//       if (isListening && !recognition.current.starting) {\r\n-//         console.log(\"Restarting recognition after speaking.\");\r\n-//         recognition.current.starting = true;\r\n-//         recognition.current.start();\r\n-//         console.log(\"Restarted recognition after speaking.\");\r\n-//       }\r\n-//     };\r\n-\r\n-//     setIsSpeaking(true);\r\n-//     console.log(\"Speaking started.\");\r\n-//     recognition.current.stop(); // Ensure to stop recognition before speaking\r\n-//     speechSynthesis.current.speak(utterance);\r\n-//   };\r\n-\r\n-//   const onResult = (event) => {\r\n-//     const resultIndex = event.resultIndex;\r\n-//     const transcript = event.results[resultIndex][0].transcript\r\n-//       .trim()\r\n-//       .toLowerCase();\r\n-\r\n-//     if (event.results[resultIndex].isFinal) {\r\n-//       console.log(`Recognized text: ${transcript}`);\r\n-//       if (transcript.includes(\"brain\")) {\r\n-//         console.log(\"Wake word heard, processing command...\");\r\n-//         handleCommandWithFuse(transcript.replace(\"brain\", \"\"));\r\n-//       }\r\n-//     }\r\n-//   };\r\n-\r\n-//   const onRecognitionEnd = () => {\r\n-//     recognition.current.starting = false;\r\n-//     if (isListening && !isSpeaking) {\r\n-//       restartRecognition();\r\n-//     }\r\n-//   };\r\n-\r\n-//   useEffect(() => {\r\n-//     if (isListening) {\r\n-//       if (!hasGreeted) {\r\n-//         speak(\"Hello, I'm Brane. How can I help you today?\");\r\n-//         setHasGreeted(true);\r\n-//       } else {\r\n-//         speak(\"Listening.\");\r\n-//       }\r\n-//     }\r\n-//   }, [isListening, hasGreeted]);\r\n-\r\n-\r\n-//   const startListening = () => {\r\n-//     if (!recognition.current.starting) {\r\n-//       setIsListening(true);\r\n-//       restartRecognition();\r\n-//     }\r\n-//   };\r\n-\r\n-//   const stopListening = () => {\r\n-//     setIsListening(false);\r\n-//     recognition.current.abort();\r\n-//     if (speechSynthesis.current.speaking) {\r\n-//       speechSynthesis.current.cancel();\r\n-//     }\r\n-//   };\r\n-\r\n-//   const handleCommandWithFuse = (command) => {\r\n-//     const fuse = new Fuse(commands, { keys: [\"utterance\"], threshold: 0.4 });\r\n-//     const results = fuse.search(command);\r\n-//     const foundCommand = results.length ? results[0].item : null;\r\n-\r\n-//     if (foundCommand) {\r\n-//       console.log(\"Command found:\", foundCommand.utterance);\r\n-\r\n-//       if (foundCommand.action) {\r\n-//         foundCommand.action();\r\n-//       } else if (foundCommand.route) {\r\n-//         navigate(foundCommand.route);\r\n-//       }\r\n-\r\n-//       // Speak after performing the action or navigation\r\n-//       speak(foundCommand.response);\r\n-//     } else {\r\n-//       console.log(\"No command found.\");\r\n-//       speak(\"I'm not sure how to respond to that.\");\r\n-//     }\r\n-//   };\r\n-\r\n-//   const commands = [\r\n-//     {\r\n-//       utterance: \"Hello who are you ?\",\r\n-\r\n-//       response:\r\n-//         \"Hi! This is Brane! your Voice bot from Brane Education How can I Assist you Today ?\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"Hello\",\r\n-\r\n-//       response: \"Hi! How can I assist you today?\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"hello\",\r\n-\r\n-//       response: \"Hi! How can I assist you today?\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"Hi.\",\r\n-\r\n-//       response: \"Hello! How can I assist you today?\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"Hey there\",\r\n-\r\n-//       response: \"Hi! How can I assist you today?\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"Good morning Brane.\",\r\n-\r\n-//       response: \"Hey Hiii! Good morning  ! How can I help you?\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"Good afternoon Brane.\",\r\n-\r\n-//       response: \"Hey Hiii! Good after noon ! How can I help you?\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"Good evening Brane.\",\r\n-\r\n-//       response: \"Hey Hiii! Good evening ! How can I help you?\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"can you please take me to login page\",\r\n-\r\n-//       route: \"/login\",\r\n-\r\n-//       response: \"Here's the Login Page, Please Login\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"please take me to login page\",\r\n-\r\n-//       route: \"/login\",\r\n-\r\n-//       response: \"Here's the Login Page, Please Login\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"Go to login page\",\r\n-\r\n-//       route: \"/login\",\r\n-\r\n-//       response: \"Here's the Login Page, Please Login\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"open login page\",\r\n-\r\n-//       route: \"/login\",\r\n-\r\n-//       response: \"Here's the Login Page, Please Login\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"can you please take me to signup page\",\r\n-\r\n-//       route: \"/signup\",\r\n-\r\n-//       response: \"Here's the signup page. Please proceed With Registration.\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"take me to signup page\",\r\n-\r\n-//       route: \"/signup\",\r\n-\r\n-//       response: \"Here's the signup page. Please proceed With Registration.\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"Go to signup page\",\r\n-\r\n-//       route: \"/signup\",\r\n-\r\n-//       response: \"Here's the signup page. Please proceed With Registration.\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"open signup page\",\r\n-\r\n-//       route: \"/signup\",\r\n-\r\n-//       response: \"Here's the signup page. Please proceed With Registration.\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"Go to face id\",\r\n-\r\n-//       route: \"/login/faceid\",\r\n-\r\n-//       response: \"Here's Face ID Login. Please proceed.\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"Go to face id login\",\r\n-\r\n-//       route: \"/login/faceid\",\r\n-\r\n-//       response: \"Here's Face ID Login. Please proceed.\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"login with face id\",\r\n-\r\n-//       route: \"/login/faceid\",\r\n-\r\n-//       response: \"Here's Face ID Login. Please proceed.\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"login with face\",\r\n-\r\n-//       route: \"/login/faceid\",\r\n-\r\n-//       response: \"Here's Face ID Login. Please proceed.\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"i want to login with face\",\r\n-\r\n-//       route: \"/login/faceid\",\r\n-\r\n-//       response: \"Here's Face ID Login. Please proceed.\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"login with voice\",\r\n-\r\n-//       route: \"/login/voiceid\",\r\n-\r\n-//       response: \"Here's Voice Login. Please proceed.\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"i want to login with voice\",\r\n-\r\n-//       route: \"/login/voiceid\",\r\n-\r\n-//       response: \"Here's Voice Login. Please proceed.\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"go to voice login\",\r\n-\r\n-//       route: \"/login/voiceid\",\r\n-\r\n-//       response: \"Here's Voice Login. Please proceed.\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"login with voice\",\r\n-\r\n-//       route: \"/login/voiceid\",\r\n-\r\n-//       response: \"Here's Voice Login. Please proceed.\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"login with mobile\",\r\n-\r\n-//       route: \"/login/mobile\",\r\n-\r\n-//       response: \"Here's Mobile Login. Please proceed.\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"i want to login with mobile\",\r\n-\r\n-//       route: \"/login/mobile\",\r\n-\r\n-//       response: \"Here's Mobile Login. Please proceed.\",\r\n-//     },\r\n-//     {\r\n-//       utterance: \"go to mobile login\",\r\n-\r\n-//       route: \"/login/mobile\",\r\n-\r\n-//       response: \"Here's Mobile Login. Please proceed.\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"what are platform features\",\r\n-\r\n-//       response:\r\n-//         \"Dashboard, Dynamic time table, Learning Networks, Little Masters, Video Based Dictionary, General Search.\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"Features of platform\",\r\n-\r\n-//       response:\r\n-//         \"Dashboard, Dynamic time table, Learning Networks, Little Masters, Video Based Dictionary, General Search.\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"What does the platform offer\",\r\n-\r\n-//       response:\r\n-//         \"Dashboard, Dynamic time table, Learning Networks, Little Masters, Video Based Dictionary, General Search.\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"Say me the features of platform\",\r\n-\r\n-//       response:\r\n-//         \"Dashboard, Dynamic time table, Learning Networks, Little Masters, Video Based Dictionary, General Search.\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"Say me the services of platform\",\r\n-\r\n-//       response:\r\n-//         \"Dashboard, Dynamic time table, Learning Networks, Little Masters, Video Based Dictionary, General Search.\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"tell me the services offered by the platform\",\r\n-\r\n-//       response:\r\n-//         \"Dashboard, Dynamic time table, Learning Networks, Little Masters, Video Based Dictionary, General Search.\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"explain platform services\",\r\n-\r\n-//       response:\r\n-//         \"Dashboard, Dynamic time table, Learning Networks, Little Masters, Video Based Dictionary, General Search.\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"Give me the Parent voice of Julia Harris\",\r\n-\r\n-//       response:\r\n-//         \"Brane education has helped my son a lot in his studies. He improved a lot in his studies and is now able to score good marks in his exams\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"Play today's motivational video\",\r\n-\r\n-//       response: \"I am playing the video\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"Play today's video\",\r\n-\r\n-//       response: \"I am playing Motivational video\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"Leaders Voice\",\r\n-\r\n-//       response:\r\n-//         \"This Voice-interactive AI Platform is a game Changer. It revolutionizes education.\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"Curriculum Supported by Brane Education\",\r\n-\r\n-//       response:\r\n-//         \"we support multiple Boards let me say few Telangana State Board Andhra Pradesh Board Maharashtra Board Assam Board\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"Boards supported by the platform\",\r\n-\r\n-//       response:\r\n-//         \"we support multiple Boards let me say few Telangana State Board Andhra Pradesh Board Maharashtra Board Assam Board\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"Curriculum\",\r\n-\r\n-//       response:\r\n-//         \"we support multiple Boards let me say few Telangana State Board Andhra Pradesh Board Maharashtra Board Assam Board\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"Go to landing page\",\r\n-\r\n-//       response: \"Okay, I am taking you to the landing page.\",\r\n-\r\n-//       route: \"/childpage\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"take me to landing page\",\r\n-\r\n-//       response: \"Okay, I am taking you to the landing page.\",\r\n-\r\n-//       route: \"/childpage\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"move to landing page\",\r\n-\r\n-//       response: \"Okay, I am taking you to the landing page.\",\r\n-\r\n-//       route: \"/childpage\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"roll back to landing page\",\r\n-\r\n-//       response: \"Okay, I am taking you to the landing page.\",\r\n-\r\n-//       route: \"/childpage\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"move to landing page\",\r\n-\r\n-//       response: \"Okay, I am taking you to the landing page.\",\r\n-\r\n-//       route: \"/childpage\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"what is today's quote\",\r\n-\r\n-//       response:\r\n-//         \"Determination is the power that sees us through all our frustration and obstacles. It helps in building our willpower which is the very basis of success.\",\r\n-\r\n-//       route: \"/childpage\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"Today's Inspirational quote\",\r\n-\r\n-//       response:\r\n-//         \"Determination is the power that sees us through all our frustration and obstacles. It helps in building our willpower which is the very basis of success.\",\r\n-\r\n-//       route: \"/childpage\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"say me today's quote\",\r\n-\r\n-//       response:\r\n-//         \"Determination is the power that sees us through all our frustration and obstacles. It helps in building our willpower which is the very basis of success.\",\r\n-\r\n-//       route: \"/childpage\",\r\n-//     },\r\n-//     {\r\n-//       utterance: \"go back\",\r\n-//       response: \"\",\r\n-//       action: goBack, // Note the use of an action property\r\n-//     },\r\n-//     {\r\n-//       utterance: \"go forward\",\r\n-//       response: \"\",\r\n-//       action: goForward,\r\n-//     },\r\n-//     {\r\n-//       utterance: \"play video\",\r\n-//       // response: \"Playing video.\",\r\n-//       action: playVideo,\r\n-//     },\r\n-//     {\r\n-//       utterance: \"pause video\",\r\n-//       // response: \"Pausing video.\",\r\n-//       action: pauseVideo,\r\n-//     },\r\n-//     {\r\n-//       utterance: \"start video\",\r\n-//       // response: \"Playing video.\",\r\n-//       action: playVideo,\r\n-//     },\r\n-//     {\r\n-//       utterance: \"stop video\",\r\n-//       // response: \"Playing video.\",\r\n-//       action: pauseVideo,\r\n-//     },\r\n-//     {\r\n-//       utterance: \"scroll up\",\r\n-//       // response: \"Scrolling up.\",\r\n-//       action: scrollUp,\r\n-//     },\r\n-//     {\r\n-//       utterance: \"scroll down\",\r\n-//       // response: \"Scrolling down.\",\r\n-//       action: scrollDown,\r\n-//     },\r\n-//     {\r\n-//       utterance: \"go up\",\r\n-\r\n-//       // response: \"Scrolling up.\",\r\n-//       action: scrollUp,\r\n-//     },\r\n-//     {\r\n-//       utterance: \"go down\",\r\n-//       // response: \"Scrolling down.\",\r\n-//       action: scrollDown,\r\n-//     },\r\n-//     {\r\n-//       utterance: \"scroll to top\",\r\n-//       action: scrollToTop,\r\n-//     },\r\n-//     {\r\n-//       utterance: \"scroll to bottom\",\r\n-//       action: scrollToBottom,\r\n-//     },\r\n-//     {\r\n-//       utterance: \"brane stop\",\r\n-//       action: stopListening,\r\n-//     },\r\n-//     {\r\n-//       utterance: \"brane turn off\",\r\n-//       action: stopListening,\r\n-//     },\r\n-//     {\r\n-//       utterance: \"brane stop the bot\",\r\n-//       action: stopListening,\r\n-//     },\r\n-//   ];\r\n-\r\n-//   return (\r\n-//     <div className=\"speech-bot-container\">\r\n-//       <div\r\n-//         className={`button-container ${\r\n-//           isListening ? \"voicebotframeactive\" : \"voicebotframe\"\r\n-//         }`}\r\n-//       >\r\n-//         <button onClick={isListening ? stopListening : startListening}>\r\n-//           {isListening ? \"Stop\" : \"Start\"} Animation\r\n-//         </button>\r\n-//         {/* <button onClick={toggleBotActive}>\r\n-//         {isBotActive ? 'Deactivate Bot' : 'Activate Bot'}\r\n-//       </button> \r\n-//       </div>\r\n-//     </div>\r\n-//   );\r\n-// };\r\n-\r\n-// export default VoiceBot; */\r\n-}\r\n-\r\n-//iska v1\r\n-\r\n-// import React, { useState, useEffect, useRef } from \"react\";\r\n-// import { useNavigate, useLocation } from \"react-router-dom\";\r\n-// import Fuse from \"fuse.js\";\r\n-// import \"./VoiceBot.css\";\r\n-\r\n-// const VoiceBot = ({ videoRef}) => {\r\n-//   const [isListening, setIsListening] = useState(false);\r\n-//   const [isSpeaking, setIsSpeaking] = useState(false);\r\n-//   const recognition = useRef(null);\r\n-//   const speechSynthesis = useRef(window.speechSynthesis);\r\n-//   const [hasGreeted, setHasGreeted] = useState(false);\r\n-//   const navigate = useNavigate();\r\n-\r\n-//  // Initialize speech recognition\r\n-//  useEffect(() => {\r\n-//   recognition.current = new window.webkitSpeechRecognition();\r\n-//   recognition.current.continuous = true;\r\n-//   recognition.current.interimResults = false;\r\n-//   recognition.current.onresult = onResult;\r\n-//   recognition.current.onend = onRecognitionEnd;\r\n-//   recognition.current.starting = false;\r\n-\r\n-//   recognition.current.onerror = (event) => {\r\n-//     console.error(\"Recognition error:\", event.error);\r\n-//     if (isListening && !isSpeaking) {\r\n-//       restartRecognition();\r\n-//     }\r\n-//   };\r\n-\r\n-//   return () => {\r\n-//     if (recognition.current) {\r\n-//       recognition.current.abort();\r\n-//     }\r\n-//   };\r\n-// }, []);\r\n-\r\n-//   // useEffect(() => {\r\n-//   //   const checkRecognition = () => {\r\n-//   //     if (isListening && !isSpeaking && !recognition.current.starting) {\r\n-//   //       console.log(\"Restarting recognition because it's not active.\");\r\n-//   //       recognition.current.starting = true;\r\n-//   //       recognition.current.start();\r\n-//   //       console.log(\"Restarted recognition.\");\r\n-//   //     }\r\n-//   //   };\r\n-\r\n-//   //   const recognitionCheckInterval = setInterval(checkRecognition, 100); // Check every .5 second\r\n-\r\n-//   //   return () => {\r\n-//   //     clearInterval(recognitionCheckInterval);\r\n-//   //   };\r\n-//   // }, [isListening, isSpeaking]);\r\n-\r\n-//   const historyStack = useRef([]);\r\n-\r\n-//   useEffect(() => {\r\n-//     return () => {\r\n-//       // Clean up the listener when the component unmounts\r\n-//       window.removeEventListener(\"popstate\", handlePopState);\r\n-//     };\r\n-//   }, []);\r\n-\r\n-//   const handlePopState = () => {\r\n-//     // This needs to handle both back and forward browser actions\r\n-//     // Use some logic to determine whether it's a back or forward action\r\n-//     // For simplicity, assume it's always back\r\n-//     historyStack.current.pop();\r\n-//     forwardStack.current.length = 0; // Clear forward stack on manual navigation\r\n-//   };\r\n-\r\n-//   // Add a new entry to the stack whenever navigate is called\r\n-//   const customNavigate = (to, options) => {\r\n-//     historyStack.current.push(to);\r\n-//     navigate(to, options);\r\n-//   };\r\n-\r\n-//   // Listen to popstate events to update the history stack\r\n-//   useEffect(() => {\r\n-//     window.addEventListener(\"popstate\", handlePopState);\r\n-//   }, []);\r\n-\r\n-//   const forwardStack = useRef([]);\r\n-\r\n-//   const goBack = () => {\r\n-//     if (window.history.state && window.history.state.idx > 0) {\r\n-//       window.history.back();\r\n-//       speak(\"Going back\");\r\n-//     } else {\r\n-//       speak(\"Can't go back any further.\");\r\n-//     }\r\n-//   };\r\n-\r\n-//   const goForward = () => {\r\n-//     if (window.history.state && window.history.state.idx < window.history.length - 1) {\r\n-//       window.history.forward();\r\n-//       speak(\"Going forward\");\r\n-//     } else {\r\n-//       speak(\"No forward history available.\");\r\n-//     }\r\n-//   };\r\n-\r\n-//   const playVideo = () => {\r\n-//     if (videoRef.current) {\r\n-//       videoRef.current.play();\r\n-//       speak(\"Playing video.\");\r\n-//     } else {\r\n-//       speak(\"No video to play.\");\r\n-//     }\r\n-//   };\r\n-\r\n-//   const pauseVideo = () => {\r\n-//     if (videoRef.current) {\r\n-//       videoRef.current.pause();\r\n-//       speak(\"Video paused.\");\r\n-//     } else {\r\n-//       speak(\"No video to pause.\");\r\n-//     }\r\n-//   };\r\n-\r\n-//   const scrollAmount = window.innerHeight * 0.82;\r\n-\r\n-//   const scrollUp = () => {\r\n-//     if (window.pageYOffset === 0) {\r\n-//       speak(\"Already at the top of the page.\");\r\n-//     } else {\r\n-//       window.scrollBy(0, -scrollAmount);\r\n-//       speak(\"Scrolled up.\");\r\n-//     }\r\n-//   };\r\n-\r\n-//   const scrollDown = () => {\r\n-//     const maxScrollTop =\r\n-//       document.documentElement.scrollHeight - window.innerHeight;\r\n-//     if (window.pageYOffset >= maxScrollTop) {\r\n-//       speak(\"Already at the bottom of the page.\");\r\n-//     } else {\r\n-//       window.scrollBy(0, scrollAmount);\r\n-//       speak(\"Scrolled down.\");\r\n-//     }\r\n-//   };\r\n-\r\n-//   const scrollToTop = () => {\r\n-//     if (window.pageYOffset === 0) {\r\n-//       speak(\"Already at the top of the page.\");\r\n-//     } else {\r\n-//       window.scrollTo(0, 0);\r\n-//       speak(\"Scrolled to the top of the page.\");\r\n-//     }\r\n-//   };\r\n-\r\n-//   const scrollToBottom = () => {\r\n-//     const maxScrollTop =\r\n-//       document.documentElement.scrollHeight - window.innerHeight;\r\n-//     if (window.pageYOffset >= maxScrollTop) {\r\n-//       speak(\"Already at the bottom of the page.\");\r\n-//     } else {\r\n-//       window.scrollTo(0, document.body.scrollHeight);\r\n-//       speak(\"Scrolled to the bottom of the page.\");\r\n-//     }\r\n-//   };\r\n-\r\n-//   const speak = (message) => {\r\n-//     const utterance = new SpeechSynthesisUtterance(message);\r\n-//     utterance.onend = () => {\r\n-//       setIsSpeaking(false);\r\n-//       // Restart recognition after speaking has ended\r\n-//       if (isListening) {\r\n-//         restartRecognition();\r\n-//       }\r\n-//     };\r\n-\r\n-//     setIsSpeaking(true);\r\n-//     // Stop recognition when the bot starts speaking\r\n-//     if (recognition.current) {\r\n-//       recognition.current.abort();\r\n-//     }\r\n-//     speechSynthesis.current.speak(utterance);\r\n-//   };\r\n-\r\n-//   const restartRecognition = () => {\r\n-//     // Check if recognition is not already started and if the bot is set to listen\r\n-//     if (recognition.current && !recognition.current.starting && isListening && !isSpeaking) {\r\n-//       // Only start recognition if it's not already active\r\n-//       if (recognition.current.state !== 'active') {\r\n-//         recognition.current.abort(); // Ensure any ongoing recognition is stopped\r\n-//         recognition.current.starting = true;\r\n-//         recognition.current.start();\r\n-//       }\r\n-//     }\r\n-//   };\r\n-\r\n-//     // Restart recognition when bot finishes speaking and isListening is true\r\n-//     useEffect(() => {\r\n-//       if (!isSpeaking && isListening) {\r\n-//         restartRecognition();\r\n-//       }\r\n-//     }, [isSpeaking, isListening]);\r\n-\r\n-//   const onResult = (event) => {\r\n-//     const resultIndex = event.resultIndex;\r\n-//     const transcript = event.results[resultIndex][0].transcript\r\n-//       .trim()\r\n-//       .toLowerCase();\r\n-\r\n-//     if (event.results[resultIndex].isFinal) {\r\n-//       console.log(`Recognized text: ${transcript}`);\r\n-//       if (transcript.includes(\"brain\")) {\r\n-//         console.log(\"Wake word heard, processing command...\");\r\n-//         handleCommandWithFuse(transcript.replace(\"brain\", \"\"));\r\n-//       }\r\n-//     }\r\n-//   };\r\n-\r\n-//   const onRecognitionEnd = () => {\r\n-//     recognition.current.starting = false;\r\n-//     if (isListening && !isSpeaking) {\r\n-//       restartRecognition();\r\n-//     }\r\n-//   };\r\n-\r\n-//   useEffect(() => {\r\n-//     if (isListening && !hasGreeted) {\r\n-//       speak(\"Hello, I'm Brane. How can I help you today?\");\r\n-//       setHasGreeted(true);\r\n-//     }\r\n-//   }, [isListening, hasGreeted]);\r\n-\r\n-// // Updated startListening function\r\n-// const startListening = () => {\r\n-//   setIsListening(true);\r\n-//   if (recognition.current && !recognition.current.starting) {\r\n-//     recognition.current.start();\r\n-//   }\r\n-// };\r\n-\r\n-// // Updated stopListening function\r\n-// const stopListening = () => {\r\n-//   setIsListening(false);\r\n-//   setIsSpeaking(false); // Reset speaking state\r\n-//   setHasGreeted(false); // Reset greeting state if needed\r\n-//   if (recognition.current) {\r\n-//     recognition.current.abort(); // Stop any ongoing speech recognition\r\n-//   }\r\n-//   if (speechSynthesis.current.speaking) {\r\n-//     speechSynthesis.current.cancel(); // Stop any ongoing speech synthesis\r\n-//   }\r\n-// };\r\n-\r\n-//   const handleCommandWithFuse = (command) => {\r\n-//     const fuse = new Fuse(commands, { keys: [\"utterance\"], threshold: 0.4 });\r\n-//     const results = fuse.search(command);\r\n-//     const foundCommand = results.length ? results[0].item : null;\r\n-\r\n-//     if (foundCommand) {\r\n-//       console.log(\"Command found:\", foundCommand.utterance);\r\n-\r\n-//       if (foundCommand.action) {\r\n-//         foundCommand.action();\r\n-//       } else if (foundCommand.route) {\r\n-//         navigate(foundCommand.route);\r\n-//       }\r\n-\r\n-//       // Speak after performing the action or navigation\r\n-//       speak(foundCommand.response);\r\n-//     } else {\r\n-//       console.log(\"No command found.\");\r\n-//       speak(\"I'm not sure how to respond to that.\");\r\n-//     }\r\n-//   };\r\n-\r\n-//   const commands = [\r\n-//     {\r\n-//       utterance: \"Hello who are you ?\",\r\n-\r\n-//       response:\r\n-//         \"Hi! This is Brane! your Voice bot from Brane Education How can I Assist you Today ?\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"Hello\",\r\n-\r\n-//       response: \"Hi! How can I assist you today?\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"hello\",\r\n-\r\n-//       response: \"Hi! How can I assist you today?\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"Hi.\",\r\n-\r\n-//       response: \"Hello! How can I assist you today?\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"Hey there\",\r\n-\r\n-//       response: \"Hi! How can I assist you today?\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"Good morning Brane.\",\r\n-\r\n-//       response: \"Hey Hiii! Good morning  ! How can I help you?\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"Good afternoon Brane.\",\r\n-\r\n-//       response: \"Hey Hiii! Good after noon ! How can I help you?\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"Good evening Brane.\",\r\n-\r\n-//       response: \"Hey Hiii! Good evening ! How can I help you?\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"can you please take me to login page\",\r\n-\r\n-//       route: \"/login\",\r\n-\r\n-//       response: \"Here's the Login Page, Please Login\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"please take me to login page\",\r\n-\r\n-//       route: \"/login\",\r\n-\r\n-//       response: \"Here's the Login Page, Please Login\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"Go to login page\",\r\n-\r\n-//       route: \"/login\",\r\n-\r\n-//       response: \"Here's the Login Page, Please Login\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"open login page\",\r\n-\r\n-//       route: \"/login\",\r\n-\r\n-//       response: \"Here's the Login Page, Please Login\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"can you please take me to signup page\",\r\n-\r\n-//       route: \"/signup\",\r\n-\r\n-//       response: \"Here's the signup page. Please proceed With Registration.\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"take me to signup page\",\r\n-\r\n-//       route: \"/signup\",\r\n-\r\n-//       response: \"Here's the signup page. Please proceed With Registration.\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"Go to signup page\",\r\n-\r\n-//       route: \"/signup\",\r\n-\r\n-//       response: \"Here's the signup page. Please proceed With Registration.\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"open signup page\",\r\n-\r\n-//       route: \"/signup\",\r\n-\r\n-//       response: \"Here's the signup page. Please proceed With Registration.\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"Go to face id\",\r\n-\r\n-//       route: \"/login/faceid\",\r\n-\r\n-//       response: \"Here's Face ID Login. Please proceed.\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"Go to face id login\",\r\n-\r\n-//       route: \"/login/faceid\",\r\n-\r\n-//       response: \"Here's Face ID Login. Please proceed.\",\r\n-//     },\r\n-//     {\r\n-//       utterance: \"Go to face login\",\r\n-\r\n-//       route: \"/login/faceid\",\r\n-\r\n-//       response: \"Here's Face ID Login. Please proceed.\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"login with face id\",\r\n-\r\n-//       route: \"/login/faceid\",\r\n-\r\n-//       response: \"Here's Face ID Login. Please proceed.\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"login with face\",\r\n-\r\n-//       route: \"/login/faceid\",\r\n-\r\n-//       response: \"Here's Face ID Login. Please proceed.\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"i want to login with face\",\r\n-\r\n-//       route: \"/login/faceid\",\r\n-\r\n-//       response: \"Here's Face ID Login. Please proceed.\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"login with voice\",\r\n-\r\n-//       route: \"/login/voiceid\",\r\n-\r\n-//       response: \"Here's Voice Login. Please proceed.\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"i want to login with voice\",\r\n-\r\n-//       route: \"/login/voiceid\",\r\n-\r\n-//       response: \"Here's Voice Login. Please proceed.\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"go to voice login\",\r\n-\r\n-//       route: \"/login/voiceid\",\r\n-\r\n-//       response: \"Here's Voice Login. Please proceed.\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"login with voice\",\r\n-\r\n-//       route: \"/login/voiceid\",\r\n-\r\n-//       response: \"Here's Voice Login. Please proceed.\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"login with mobile\",\r\n-\r\n-//       route: \"/login/mobile\",\r\n-\r\n-//       response: \"Here's Mobile Login. Please proceed.\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"i want to login with mobile\",\r\n-\r\n-//       route: \"/login/mobile\",\r\n-\r\n-//       response: \"Here's Mobile Login. Please proceed.\",\r\n-//     },\r\n-//     {\r\n-//       utterance: \"go to mobile login\",\r\n-\r\n-//       route: \"/login/mobile\",\r\n-\r\n-//       response: \"Here's Mobile Login. Please proceed.\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"what are platform features\",\r\n-\r\n-//       response:\r\n-//         \"Dashboard, Dynamic time table, Learning Networks, Little Masters, Video Based Dictionary, General Search.\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"Features of platform\",\r\n-\r\n-//       response:\r\n-//         \"Dashboard, Dynamic time table, Learning Networks, Little Masters, Video Based Dictionary, General Search.\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"What does the platform offer\",\r\n-\r\n-//       response:\r\n-//         \"Dashboard, Dynamic time table, Learning Networks, Little Masters, Video Based Dictionary, General Search.\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"Say me the features of platform\",\r\n-\r\n-//       response:\r\n-//         \"Dashboard, Dynamic time table, Learning Networks, Little Masters, Video Based Dictionary, General Search.\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"Say me the services of platform\",\r\n-\r\n-//       response:\r\n-//         \"Dashboard, Dynamic time table, Learning Networks, Little Masters, Video Based Dictionary, General Search.\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"tell me the services offered by the platform\",\r\n-\r\n-//       response:\r\n-//         \"Dashboard, Dynamic time table, Learning Networks, Little Masters, Video Based Dictionary, General Search.\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"explain platform services\",\r\n-\r\n-//       response:\r\n-//         \"Dashboard, Dynamic time table, Learning Networks, Little Masters, Video Based Dictionary, General Search.\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"Give me the Parent voice of Julia Harris\",\r\n-\r\n-//       response:\r\n-//         \"Brane education has helped my son a lot in his studies. He improved a lot in his studies and is now able to score good marks in his exams\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"Play today's motivational video\",\r\n-\r\n-//       response: \"I am playing the video\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"Play today's video\",\r\n-\r\n-//       response: \"I am playing Motivational video\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"Leaders Voice\",\r\n-\r\n-//       response:\r\n-//         \"This Voice-interactive AI Platform is a game Changer. It revolutionizes education.\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"Curriculum Supported by Brane Education\",\r\n-\r\n-//       response:\r\n-//         \"we support multiple Boards let me say few Telangana State Board Andhra Pradesh Board Maharashtra Board Assam Board\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"Boards supported by the platform\",\r\n-\r\n-//       response:\r\n-//         \"we support multiple Boards let me say few Telangana State Board Andhra Pradesh Board Maharashtra Board Assam Board\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"Curriculum\",\r\n-\r\n-//       response:\r\n-//         \"we support multiple Boards let me say few Telangana State Board Andhra Pradesh Board Maharashtra Board Assam Board\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"Go to landing page\",\r\n-\r\n-//       response: \"Okay, I am taking you to the landing page.\",\r\n-\r\n-//       route: \"/childpage\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"take me to landing page\",\r\n-\r\n-//       response: \"Okay, I am taking you to the landing page.\",\r\n-\r\n-//       route: \"/childpage\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"move to landing page\",\r\n-\r\n-//       response: \"Okay, I am taking you to the landing page.\",\r\n-\r\n-//       route: \"/childpage\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"roll back to landing page\",\r\n-\r\n-//       response: \"Okay, I am taking you to the landing page.\",\r\n-\r\n-//       route: \"/childpage\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"move to landing page\",\r\n-\r\n-//       response: \"Okay, I am taking you to the landing page.\",\r\n-\r\n-//       route: \"/childpage\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"what is today's quote\",\r\n-\r\n-//       response:\r\n-//         \"Determination is the power that sees us through all our frustration and obstacles. It helps in building our willpower which is the very basis of success.\",\r\n-\r\n-//       route: \"/childpage\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"Today's Inspirational quote\",\r\n-\r\n-//       response:\r\n-//         \"Determination is the power that sees us through all our frustration and obstacles. It helps in building our willpower which is the very basis of success.\",\r\n-\r\n-//       route: \"/childpage\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"say me today's quote\",\r\n-\r\n-//       response:\r\n-//         \"Determination is the power that sees us through all our frustration and obstacles. It helps in building our willpower which is the very basis of success.\",\r\n-\r\n-//       route: \"/childpage\",\r\n-//     },\r\n-//     {\r\n-//       utterance: \"go back\",\r\n-//       response: \"\",\r\n-//       action: goBack, // Note the use of an action property\r\n-//     },\r\n-//     {\r\n-//       utterance: \"go forward\",\r\n-//       response: \"\",\r\n-//       action: goForward,\r\n-//     },\r\n-//     {\r\n-//       utterance: \"play video\",\r\n-//       // response: \"Playing video.\",\r\n-//       action: playVideo,\r\n-//     },\r\n-//     {\r\n-//       utterance: \"pause video\",\r\n-//       // response: \"Pausing video.\",\r\n-//       action: pauseVideo,\r\n-//     },\r\n-//     {\r\n-//       utterance: \"start video\",\r\n-//       // response: \"Playing video.\",\r\n-//       action: playVideo,\r\n-//     },\r\n-//     {\r\n-//       utterance: \"stop video\",\r\n-//       // response: \"Playing video.\",\r\n-//       action: pauseVideo,\r\n-//     },\r\n-//     {\r\n-//       utterance: \"scroll up\",\r\n-//       // response: \"Scrolling up.\",\r\n-//       action: scrollUp,\r\n-//     },\r\n-//     {\r\n-//       utterance: \"scroll down\",\r\n-//       // response: \"Scrolling down.\",\r\n-//       action: scrollDown,\r\n-//     },\r\n-//     {\r\n-//       utterance: \"go up\",\r\n-\r\n-//       // response: \"Scrolling up.\",\r\n-//       action: scrollUp,\r\n-//     },\r\n-//     {\r\n-//       utterance: \"go down\",\r\n-//       // response: \"Scrolling down.\",\r\n-//       action: scrollDown,\r\n-//     },\r\n-//     {\r\n-//       utterance: \"scroll to top\",\r\n-//       action: scrollToTop,\r\n-//     },\r\n-//     {\r\n-//       utterance: \"scroll to bottom\",\r\n-//       action: scrollToBottom,\r\n-//     },\r\n-//     {\r\n-//       utterance: \"brane stop\",\r\n-//       action: stopListening,\r\n-//     },\r\n-//     {\r\n-//       utterance: \"brane turn off\",\r\n-//       action: stopListening,\r\n-//     },\r\n-//     {\r\n-//       utterance: \"brane stop the bot\",\r\n-//       action: stopListening,\r\n-//     },\r\n-//   ];\r\n-\r\n-//   return (\r\n-//     <div className=\"speech-bot-container\">\r\n-//       <div\r\n-//         className={`button-container ${\r\n-//           isListening ? \"voicebotframeactive\" : \"voicebotframe\"\r\n-//         }`}\r\n-//       >\r\n-//         <button onClick={isListening ? stopListening : startListening}>\r\n-//           {isListening ? \"Stop\" : \"Start\"} Animation\r\n-//         </button>\r\n-//         {/* <button onClick={toggleBotActive}>\r\n-//         {isBotActive ? 'Deactivate Bot' : 'Activate Bot'}\r\n-//       </button> */}\r\n-//       </div>\r\n-//     </div>\r\n-//   );\r\n-// };\r\n-\r\n-// export default VoiceBot;\r\n-\r\n-//Bot Video added but some start issues\r\n-\r\n-// import React, { useState, useEffect, useRef } from \"react\";\r\n-// import { useNavigate, useLocation } from \"react-router-dom\";\r\n-// import Fuse from \"fuse.js\";\r\n-// import \"./VoiceBot.css\";\r\n-\r\n-// const VoiceBot = ({ videoRef }) => {\r\n-//   const [isListening, setIsListening] = useState(false);\r\n-//   const [isSpeaking, setIsSpeaking] = useState(false);\r\n-//   const recognition = useRef(null);\r\n-//   const speechSynthesis = useRef(window.speechSynthesis);\r\n-//   const hasGreeted = useRef(false);\r\n-//   const restartRecognitionTimeout = useRef(null);\r\n-//   const navigate = useNavigate();\r\n-//   const location = useLocation();\r\n-//   const [isRecognitionActive, setIsRecognitionActive] = useState(false); // New state to track recognition status\r\n-\r\n-//   useEffect(() => {\r\n-//     recognition.current = new window.webkitSpeechRecognition();\r\n-//     recognition.current.continuous = true;\r\n-//     recognition.current.interimResults = false;\r\n-//     recognition.current.onresult = onResult;\r\n-//     recognition.current.onend = () => {\r\n-//       console.log(\"Recognition ended.\");\r\n-//       if (isListening) {\r\n-//         startListening();\r\n-//       }\r\n-//     };\r\n-//     recognition.current.onerror = (event) => {\r\n-//       console.error(\"Recognition error:\", event.error);\r\n-//     };\r\n-\r\n-//     return () => {\r\n-//       recognition.current.abort();\r\n-//     };\r\n-//   }, []);\r\n-\r\n-//   // Update useEffect for managing the recognition state based on isListening and isRecognitionActive\r\n-//   useEffect(() => {\r\n-//     if (isListening && !isRecognitionActive) {\r\n-//       startListening();\r\n-//     } else if (!isListening && isRecognitionActive) {\r\n-//       stopListening();\r\n-//     }\r\n-//   }, [isListening, isRecognitionActive]);\r\n-\r\n-//   const goBack = () => {\r\n-//     if (window.history.length > 1) {\r\n-//       navigate(-1);\r\n-//     } else {\r\n-//       speak(\"Can't go back any further.\");\r\n-//     }\r\n-//   };\r\n-\r\n-//   const goForward = () => {\r\n-//     // Unfortunately, there's no direct way to check if you can go forward in the history.\r\n-//     // You might need to manage this state manually based on user navigation.\r\n-//     navigate(1);\r\n-//   };\r\n-\r\n-//   const playVideo = () => {\r\n-//     if (videoRef.current && !videoRef.current.paused) {\r\n-//       speak(\"Video is already playing.\");\r\n-//     } else if (videoRef.current) {\r\n-//       videoRef.current.play();\r\n-//       speak(\"Playing video.\");\r\n-//     } else {\r\n-//       speak(\"No video to play.\");\r\n-//     }\r\n-//   };\r\n-\r\n-//   const pauseVideo = () => {\r\n-//     if (videoRef.current && videoRef.current.paused) {\r\n-//       speak(\"Video is already paused.\");\r\n-//     } else if (videoRef.current) {\r\n-//       videoRef.current.pause();\r\n-//       speak(\"Video paused.\");\r\n-//     } else {\r\n-//       speak(\"No video to pause.\");\r\n-//     }\r\n-//   };\r\n-\r\n-//   const scrollAmount = window.innerHeight * 0.82;\r\n-\r\n-//   const scrollUp = () => {\r\n-//     if (window.pageYOffset === 0) {\r\n-//       speak(\"Already at the top of the page.\");\r\n-//     } else {\r\n-//       window.scrollBy(0, -scrollAmount);\r\n-//       speak(\"Scrolled up.\");\r\n-//     }\r\n-//   };\r\n-\r\n-//   const scrollDown = () => {\r\n-//     const maxScrollTop =\r\n-//       document.documentElement.scrollHeight - window.innerHeight;\r\n-//     if (window.pageYOffset >= maxScrollTop) {\r\n-//       speak(\"Already at the bottom of the page.\");\r\n-//     } else {\r\n-//       window.scrollBy(0, scrollAmount);\r\n-//       speak(\"Scrolled down.\");\r\n-//     }\r\n-//   };\r\n-\r\n-//   const scrollToTop = () => {\r\n-//     if (window.pageYOffset === 0) {\r\n-//       speak(\"Already at the top of the page.\");\r\n-//     } else {\r\n-//       window.scrollTo(0, 0);\r\n-//       speak(\"Scrolled to the top of the page.\");\r\n-//     }\r\n-//   };\r\n-\r\n-//   const scrollToBottom = () => {\r\n-//     const maxScrollTop =\r\n-//       document.documentElement.scrollHeight - window.innerHeight;\r\n-//     if (window.pageYOffset >= maxScrollTop) {\r\n-//       speak(\"Already at the bottom of the page.\");\r\n-//     } else {\r\n-//       window.scrollTo(0, document.body.scrollHeight);\r\n-//       speak(\"Scrolled to the bottom of the page.\");\r\n-//     }\r\n-//   };\r\n-\r\n-//   // const speak = (message) => {\r\n-//   //   const utterance = new SpeechSynthesisUtterance(message);\r\n-//   //   utterance.onend = () => {\r\n-//   //     setIsSpeaking(false);\r\n-//   //     console.log(\"Speaking ended.\");\r\n-//   //     // Only restart recognition if we're still supposed to be listening\r\n-//   //     // if (isListening) {\r\n-//   //     //   if (restartRecognitionTimeout.current) {\r\n-//   //     //     clearTimeout(restartRecognitionTimeout.current);\r\n-//   //     //   }\r\n-//   //     //   restartRecognitionTimeout.current = setTimeout(() => {\r\n-//   //     //     console.log(\"Recognition restarted.\");\r\n-//   //     //     recognition.current.start();\r\n-//   //     //   }, 100); // Delay to prevent immediate restart\r\n-//   //     // }\r\n-//   //     if (isListening && !recognition.current.starting) { // Check the flag before restarting\r\n-//   //       recognition.current.starting = true; // Set the flag when starting recognition\r\n-//   //       recognition.current.start();\r\n-//   //     }\r\n-//   //   };\r\n-\r\n-//   //   setIsSpeaking(true);\r\n-//   //   console.log(\"Speaking started.\");\r\n-//   //   recognition.current.stop(); // Stop recognition when the bot starts speaking\r\n-//   //   speechSynthesis.current.speak(utterance);\r\n-//   // };\r\n-\r\n-//   const speak = (message) => {\r\n-//     console.log(\"speak function called with message:\", message);\r\n-//     const utterance = new SpeechSynthesisUtterance(message);\r\n-//     utterance.onend = () => {\r\n-//       setIsSpeaking(false);\r\n-//       console.log(\"Speaking ended.\");\r\n-//       // Directly handle the restart of recognition here if needed\r\n-//       if (isListening) {\r\n-//         startListening();\r\n-//       }\r\n-//     };\r\n-\r\n-//     setIsSpeaking(true);\r\n-//     console.log(\"Speaking started.\");\r\n-//     recognition.current.stop(); // Ensure to stop recognition before speaking\r\n-//     speechSynthesis.current.speak(utterance);\r\n-//   };\r\n-\r\n-//   const onResult = (event) => {\r\n-//     const resultIndex = event.resultIndex;\r\n-//     const transcript = event.results[resultIndex][0].transcript\r\n-//       .trim()\r\n-//       .toLowerCase();\r\n-\r\n-//     if (event.results[resultIndex].isFinal) {\r\n-//       console.log(`Recognized text: ${transcript}`);\r\n-//       if (transcript.includes(\"brain\")) {\r\n-//         console.log(\"Wake word heard, processing command...\");\r\n-//         handleCommandWithFuse(transcript.replace(\"brain\", \"\"));\r\n-//       }\r\n-//     }\r\n-//   };\r\n-\r\n-//   // const onRecognitionEnd = () => {\r\n-//   //   console.log(\"Recognition ended.\");\r\n-//   //   setIsRecognitionActive(false); // Update state when recognition ends\r\n-//   //   recognition.current.starting = false; // Reset the flag when recognition ends\r\n-//   //   // We now check if the recognition is already running before starting it again\r\n-//   //   if (isListening && !isSpeaking && !recognition.current?.starting) {\r\n-//   //     console.log(\"Restarting recognition.\");\r\n-//   //     recognition.current.start();\r\n-//   //   }\r\n-//   // };\r\n-\r\n-//   // useEffect(() => {\r\n-//   //   if (isListening && !hasGreeted.current) {\r\n-//   //     speak(\"Hello, I'm Brane. How can I assist you today?\");\r\n-//   //     hasGreeted.current = true;\r\n-//   //   } else if (isListening && !isSpeaking) {\r\n-//   //     recognition.current.start();\r\n-//   //   }\r\n-//   // }, [isListening, isSpeaking]);\r\n-\r\n-//   useEffect(() => {\r\n-//     if (isListening && !hasGreeted.current) {\r\n-//       speak(\"Hello, I'm Brane. How can I assist you today?\");\r\n-//       hasGreeted.current = true;\r\n-//     } else if (isListening && !isSpeaking && !recognition.current.starting) {\r\n-//       // Check the flag before starting\r\n-//       recognition.current.starting = true; // Set the flag when starting recognition\r\n-//       recognition.current.start();\r\n-//     }\r\n-//   }, [isListening, isSpeaking]);\r\n-\r\n-//   // const startListening = () => {\r\n-//   //   console.log(\"Attempting to start listening.\");\r\n-//   //   if (recognition.current && !recognition.current.starting) {\r\n-//   //     setIsListening(true);\r\n-//   //     recognition.current.starting = true; // Set the flag when starting recognition\r\n-//   //     recognition.current.start();\r\n-//   //     console.log(\"Listening started.\");\r\n-//   //   }\r\n-//   // };\r\n-\r\n-//   // const stopListening = () => {\r\n-//   //   console.log(\"Stopping listening.\");\r\n-\r\n-//   //   setIsListening(false);\r\n-//   //   recognition.current.stop();\r\n-//   //   if (speechSynthesis.current.speaking) {\r\n-//   //     speechSynthesis.current.cancel();\r\n-//   //   }\r\n-//   //   if (restartRecognitionTimeout.current) {\r\n-//   //     clearTimeout(restartRecognitionTimeout.current);\r\n-//   //   }\r\n-//   //   console.log(\"Listening stopped.\");\r\n-//   // };\r\n-//   // Handle start and stop listening logic\r\n-//   const startListening = () => {\r\n-//     console.log(\"Attempting to start listening.\");\r\n-//     if (!recognition.current.starting) {\r\n-//       setIsListening(true);\r\n-//       recognition.current.starting = true;\r\n-//       recognition.current.start();\r\n-//       console.log(\"Listening started.\");\r\n-//     } else {\r\n-//       console.log(\"Recognition already active.\");\r\n-//     }\r\n-//   };\r\n-\r\n-//   const stopListening = () => {\r\n-//     console.log(\"Stopping listening.\");\r\n-//     if (recognition.current.starting) {\r\n-//       setIsListening(false);\r\n-//       recognition.current.starting = false;\r\n-//       recognition.current.stop();\r\n-//       console.log(\"Listening stopped.\");\r\n-//     } else {\r\n-//       console.log(\"Recognition already inactive.\");\r\n-//     }\r\n-//   };\r\n-\r\n-//   // const handleCommandWithFuse = (command) => {\r\n-//   //   const fuse = new Fuse(commands, { keys: [\"utterance\"], threshold: 0.4 });\r\n-//   //   const results = fuse.search(command);\r\n-//   //   const foundCommand = results.length ? results[0].item : null;\r\n-\r\n-//   //   if (foundCommand) {\r\n-//   //     console.log(\"Command found:\", foundCommand.utterance);\r\n-//   //     speak(foundCommand.response);\r\n-//   //     if (foundCommand.route) {\r\n-//   //       navigate(foundCommand.route); // Navigate to the route specified in the command\r\n-//   //     }\r\n-//   //   } else {\r\n-//   //     console.log(\"No command found.\");\r\n-//   //     speak(\"I'm not sure how to respond to that.\");\r\n-//   //   }\r\n-//   // };\r\n-\r\n-//   const handleCommandWithFuse = (command) => {\r\n-//     const fuse = new Fuse(commands, { keys: [\"utterance\"], threshold: 0.4 });\r\n-//     const results = fuse.search(command);\r\n-//     const foundCommand = results.length ? results[0].item : null;\r\n-\r\n-//     if (foundCommand) {\r\n-//       console.log(\"Command found:\", foundCommand.utterance);\r\n-\r\n-//       if (foundCommand.route) {\r\n-//         if (location.pathname !== foundCommand.route) {\r\n-//           navigate(foundCommand.route);\r\n-//           speak(\r\n-//             `Navigating to ${\r\n-//               foundCommand.routeDescription || \"requested page\"\r\n-//             }.`\r\n-//           );\r\n-//         } else {\r\n-//           speak(\r\n-//             `You are already on the ${\r\n-//               foundCommand.routeDescription || \"requested page\"\r\n-//             }.`\r\n-//           );\r\n-//         }\r\n-//       } else if (foundCommand.action) {\r\n-//         foundCommand.action();\r\n-//       }\r\n-\r\n-//       if (foundCommand.response) {\r\n-//         speak(foundCommand.response);\r\n-//       }\r\n-//     } else {\r\n-//       console.log(\"No command found.\");\r\n-//       speak(\"I'm not sure how to respond to that.\");\r\n-//     }\r\n-//   };\r\n-\r\n-//   const commands = [\r\n-//     {\r\n-//       utterance: \"Hello who are you ?\",\r\n-\r\n-//       response:\r\n-//         \"Hi! This is Brane! your Voice bot from Brane Education How can I Assist you Today ?\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"Hello\",\r\n-\r\n-//       response: \"Hi! How can I assist you today?\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"hello\",\r\n-\r\n-//       response: \"Hi! How can I assist you today?\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"Hi.\",\r\n-\r\n-//       response: \"Hello! How can I assist you today?\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"Hey there\",\r\n-\r\n-//       response: \"Hi! How can I assist you today?\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"Good morning Brane.\",\r\n-\r\n-//       response: \"Hey Hiii! Good morning  ! How can I help you?\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"Good afternoon Brane.\",\r\n-\r\n-//       response: \"Hey Hiii! Good after noon ! How can I help you?\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"Good evening Brane.\",\r\n-\r\n-//       response: \"Hey Hiii! Good evening ! How can I help you?\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"can you please take me to login page\",\r\n-//       route: \"/login\",\r\n-//       routeDescription: \"login page\",\r\n-//       response: \"Navigating to the login page.\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"go to login page\",\r\n-//       route: \"/login\",\r\n-//       routeDescription: \"login page\",\r\n-//       response: \"Navigating to the login page.\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"please take me to login page\",\r\n-//       route: \"/login\",\r\n-//       routeDescription: \"login page\",\r\n-//       response: \"Navigating to the login page.\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"Go to login page\",\r\n-//       route: \"/login\",\r\n-//       routeDescription: \"login page\",\r\n-//       response: \"Navigating to the login page.\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"open login page\",\r\n-//       route: \"/login\",\r\n-//       routeDescription: \"login page\",\r\n-//       response: \"Navigating to the login page.\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"can you please take me to signup page\",\r\n-//       route: \"/signup\",\r\n-//       routeDescription: \"signup page\",\r\n-//       response: \"Navigating to the signup page.\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"take me to signup page\",\r\n-//       route: \"/signup\",\r\n-//       routeDescription: \"signup page\",\r\n-//       response: \"Navigating to the signup page.\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"Go to signup page\",\r\n-//       route: \"/signup\",\r\n-//       routeDescription: \"signup page\",\r\n-//       response: \"Navigating to the signup page.\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"open signup page\",\r\n-//       route: \"/signup\",\r\n-//       routeDescription: \"signup page\",\r\n-//       response: \"Navigating to the signup page.\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"what are platform features\",\r\n-\r\n-//       response:\r\n-//         \"Dashboard, Dynamic time table, Learning Networks, Little Masters, Video Based Dictionary, General Search.\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"Features of platform\",\r\n-\r\n-//       response:\r\n-//         \"Dashboard, Dynamic time table, Learning Networks, Little Masters, Video Based Dictionary, General Search.\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"What does the platform offer\",\r\n-\r\n-//       response:\r\n-//         \"Dashboard, Dynamic time table, Learning Networks, Little Masters, Video Based Dictionary, General Search.\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"Say me the features of platform\",\r\n-\r\n-//       response:\r\n-//         \"Dashboard, Dynamic time table, Learning Networks, Little Masters, Video Based Dictionary, General Search.\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"Say me the services of platform\",\r\n-\r\n-//       response:\r\n-//         \"Dashboard, Dynamic time table, Learning Networks, Little Masters, Video Based Dictionary, General Search.\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"tell me the services offered by the platform\",\r\n-\r\n-//       response:\r\n-//         \"Dashboard, Dynamic time table, Learning Networks, Little Masters, Video Based Dictionary, General Search.\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"explain platform services\",\r\n-\r\n-//       response:\r\n-//         \"Dashboard, Dynamic time table, Learning Networks, Little Masters, Video Based Dictionary, General Search.\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"Give me the Parent voice of Julia Harris\",\r\n-\r\n-//       response:\r\n-//         \"Brane education has helped my son a lot in his studies. He improved a lot in his studies and is now able to score good marks in his exams\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"Play today's motivational video\",\r\n-\r\n-//       response: \"I am playing the video\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"Play today's video\",\r\n-\r\n-//       response: \"I am playing Motivational video\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"Leaders Voice\",\r\n-\r\n-//       response:\r\n-//         \"This Voice-interactive AI Platform is a game Changer. It revolutionizes education.\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"Curriculum Supported by Brane Education\",\r\n-\r\n-//       response:\r\n-//         \"we support multiple Boards let me say few Telangana State Board Andhra Pradesh Board Maharashtra Board Assam Board\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"Boards supported by the platform\",\r\n-\r\n-//       response:\r\n-//         \"we support multiple Boards let me say few Telangana State Board Andhra Pradesh Board Maharashtra Board Assam Board\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"Curriculum\",\r\n-\r\n-//       response:\r\n-//         \"we support multiple Boards let me say few Telangana State Board Andhra Pradesh Board Maharashtra Board Assam Board\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"Go to landing page\",\r\n-\r\n-//       response: \"Okay, I am taking you to the landing page.\",\r\n-\r\n-//       route: \"/childpage\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"take me to landing page\",\r\n-\r\n-//       response: \"Okay, I am taking you to the landing page.\",\r\n-\r\n-//       route: \"/childpage\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"move to landing page\",\r\n-\r\n-//       response: \"Okay, I am taking you to the landing page.\",\r\n-\r\n-//       route: \"/childpage\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"roll back to landing page\",\r\n-\r\n-//       response: \"Okay, I am taking you to the landing page.\",\r\n-\r\n-//       route: \"/childpage\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"move to landing page\",\r\n-\r\n-//       response: \"Okay, I am taking you to the landing page.\",\r\n-\r\n-//       route: \"/childpage\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"what is today's quote\",\r\n-\r\n-//       response:\r\n-//         \"Determination is the power that sees us through all our frustration and obstacles. It helps in building our willpower which is the very basis of success.\",\r\n-\r\n-//       // route: \"/childpage\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"Today's Inspirational quote\",\r\n-\r\n-//       response:\r\n-//         \"Determination is the power that sees us through all our frustration and obstacles. It helps in building our willpower which is the very basis of success.\",\r\n-\r\n-//       // route: \"/childpage\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"say me today's quote\",\r\n-\r\n-//       response:\r\n-//         \"Determination is the power that sees us through all our frustration and obstacles. It helps in building our willpower which is the very basis of success.\",\r\n-\r\n-//       // route: \"/childpage\",\r\n-//     },\r\n-//     {\r\n-//       utterance: \"go back\",\r\n-//       response: \"Going back.\",\r\n-//       action: goBack, // Note the use of an action property\r\n-//     },\r\n-//     {\r\n-//       utterance: \"go forward\",\r\n-//       response: \"Going forward.\",\r\n-//       action: goForward,\r\n-//     },\r\n-//     {\r\n-//       utterance: \"play video\",\r\n-//       // response: \"Playing video.\",\r\n-//       action: playVideo,\r\n-//     },\r\n-//     {\r\n-//       utterance: \"pause video\",\r\n-//       // response: \"Pausing video.\",\r\n-//       action: pauseVideo,\r\n-//     },\r\n-//     {\r\n-//       utterance: \"start video\",\r\n-//       // response: \"Playing video.\",\r\n-//       action: playVideo,\r\n-//     },\r\n-//     {\r\n-//       utterance: \"stop video\",\r\n-//       // response: \"Playing video.\",\r\n-//       action: pauseVideo,\r\n-//     },\r\n-//     {\r\n-//       utterance: \"scroll up\",\r\n-//       // response: \"Scrolling up.\",\r\n-//       action: scrollUp,\r\n-//     },\r\n-//     {\r\n-//       utterance: \"scroll down\",\r\n-//       // response: \"Scrolling down.\",\r\n-//       action: scrollDown,\r\n-//     },\r\n-//     {\r\n-//       utterance: \"go up\",\r\n-\r\n-//       // response: \"Scrolling up.\",\r\n-//       action: scrollUp,\r\n-//     },\r\n-//     {\r\n-//       utterance: \"go down\",\r\n-//       // response: \"Scrolling down.\",\r\n-//       action: scrollDown,\r\n-//     },\r\n-//     {\r\n-//       utterance: \"scroll to top\",\r\n-//       action: scrollToTop,\r\n-//     },\r\n-//     {\r\n-//       utterance: \"scroll to bottom\",\r\n-//       action: scrollToBottom,\r\n-//     },\r\n-//   ];\r\n-//   return (\r\n-//     <div className=\"speech-bot-container\">\r\n-//       <div\r\n-//         className={`button-container ${\r\n-//           isListening ? \"voicebotframeactive\" : \"voicebotframe\"\r\n-//         }`}\r\n-//       >\r\n-//         <div onClick={isListening ? stopListening : startListening}>\r\n-//           <iframe\r\n-//             src={\r\n-//               isListening\r\n-//                 ? \"https://lottie.host/?file=a89aca3f-5407-4052-82c3-2048afca7a9f/NpCdWzLSKD.json\"\r\n-//                 : \"https://lottie.host/?file=d2b6cc0e-fe95-4847-85b5-35365fca7e00/vTudpCuPZq.json\"\r\n-//             }\r\n-//             width=\"120\" // Set your desired width\r\n-//             height=\"120\" // Set your desired height\r\n-//             title={isListening ? \"Stop Animation\" : \"Start Animation\"}\r\n-//             className={isListening ? \"voicebotframeactive\" : \"voicebotframe\"}\r\n-//           ></iframe>\r\n-//           {isListening ? (\r\n-//             <div className=\"overlay\" onClick={stopListening}></div>\r\n-//           ) : (\r\n-//             <div className=\"overlay\" onClick={startListening}></div>\r\n-//           )}\r\n-//         </div>\r\n-//       </div>\r\n-//     </div>\r\n-//   );\r\n-// };\r\n-\r\n-// export default VoiceBot;\r\n-\r\n-// All functionalities but messed up\r\n-\r\n-// import React, { useState, useEffect, useRef } from \"react\";\r\n-// import { useNavigate, useLocation } from \"react-router-dom\";\r\n-// import Fuse from \"fuse.js\";\r\n-// import \"./VoiceBot.css\";\r\n-\r\n-// const VoiceBot = ({ videoRef, takeTestRef, goBackRef }) => {\r\n-//   const [isListening, setIsListening] = useState(false);\r\n-//   const [isSpeaking, setIsSpeaking] = useState(false);\r\n-//   const recognition = useRef(null);\r\n-//   const speechSynthesis = useRef(window.speechSynthesis);\r\n-//   const hasGreeted = useRef(false);\r\n-//   const navigate = useNavigate();\r\n-//   const location = useLocation();\r\n-//   const isRecognitionActive = useRef(false);\r\n-\r\n-//   useEffect(() => {\r\n-//     recognition.current = new window.webkitSpeechRecognition();\r\n-//     recognition.current.continuous = true;\r\n-//     recognition.current.interimResults = false;\r\n-//     recognition.current.onresult = onResult;\r\n-//     recognition.current.onend = onRecognitionEnd;\r\n-\r\n-//     return () => {\r\n-//       if (recognition.current) {\r\n-//         recognition.current.abort();\r\n-//       }\r\n-//     };\r\n-//   }, [location.pathname]);\r\n-\r\n-//   const onResult = (event) => {\r\n-//     const resultIndex = event.resultIndex;\r\n-//     const transcript = event.results[resultIndex][0].transcript\r\n-//       .trim()\r\n-//       .toLowerCase();\r\n-\r\n-//     if (event.results[resultIndex].isFinal) {\r\n-//       console.log(`Recognized text: ${transcript}`);\r\n-//       if (transcript.includes(\"brain\")) {\r\n-//         console.log(\"Wake word heard, processing command...\");\r\n-//         handleCommandWithFuse(transcript.replace(\"brain\", \"\"));\r\n-//       }\r\n-//     }\r\n-//   };\r\n-\r\n-//   const startListening = () => {\r\n-//     if (!isRecognitionActive.current) {\r\n-//       setIsListening(true);\r\n-//       recognition.current.start();\r\n-//       isRecognitionActive.current = true;\r\n-//     }\r\n-//   };\r\n-\r\n-//   const stopListening = () => {\r\n-//     if (isRecognitionActive.current) {\r\n-//       setIsListening(false);\r\n-//       recognition.current.stop();\r\n-//       isRecognitionActive.current = false;\r\n-//     }\r\n-//   };\r\n-\r\n-//   const onRecognitionEnd = () => {\r\n-//     isRecognitionActive.current = false;\r\n-//     if (isListening) {\r\n-//       startListening();\r\n-//     }\r\n-//   };\r\n-\r\n-//   const speak = (message) => {\r\n-//     const utterance = new SpeechSynthesisUtterance(message);\r\n-//     utterance.onend = () => {\r\n-//       setIsSpeaking(false);\r\n-//       if (isListening && !isRecognitionActive.current) {\r\n-//         startListening();\r\n-//       }\r\n-//     };\r\n-\r\n-//     setIsSpeaking(true);\r\n-//     if (isRecognitionActive.current) {\r\n-//       stopListening(); // Adjusted to use stopListening\r\n-//     }\r\n-//     speechSynthesis.current.speak(utterance);\r\n-//   };\r\n-\r\n-//   useEffect(() => {\r\n-//     if (isListening && !hasGreeted.current) {\r\n-//       speak(\"Hello, I'm Brane. How can I assist you today?\");\r\n-//       hasGreeted.current = true;\r\n-//     }\r\n-//   }, [isListening]);\r\n-\r\n-//   const goBack = () => {\r\n-//     if (window.history.length > 1) {\r\n-//       navigate(-1);\r\n-//     } else {\r\n-//       speak(\"Can't go back any further.\");\r\n-//     }\r\n-//   };\r\n-\r\n-//   const goForward = () => {\r\n-//     // Unfortunately, there's no direct way to check if you can go forward in the history.\r\n-//     // You might need to manage this state manually based on user navigation.\r\n-//     navigate(1);\r\n-//   };\r\n-\r\n-//   const playVideo = () => {\r\n-//     if (videoRef.current && !videoRef.current.paused) {\r\n-//       speak(\"Video is already playing.\");\r\n-//     } else if (videoRef.current) {\r\n-//       videoRef.current.play();\r\n-//       speak(\"Playing video.\");\r\n-//     } else {\r\n-//       speak(\"No video to play.\");\r\n-//     }\r\n-//   };\r\n-\r\n-//   const pauseVideo = () => {\r\n-//     if (videoRef.current && videoRef.current.paused) {\r\n-//       speak(\"Video is already paused.\");\r\n-//     } else if (videoRef.current) {\r\n-//       videoRef.current.pause();\r\n-//       speak(\"Video paused.\");\r\n-//     } else {\r\n-//       speak(\"No video to pause.\");\r\n-//     }\r\n-//   };\r\n-\r\n-//   const scrollAmount = window.innerHeight * 0.82;\r\n-\r\n-//   const scrollUp = () => {\r\n-//     if (window.pageYOffset === 0) {\r\n-//       speak(\"Already at the top of the page.\");\r\n-//     } else {\r\n-//       window.scrollBy(0, -scrollAmount);\r\n-//       speak(\"Scrolled up.\");\r\n-//     }\r\n-//   };\r\n-\r\n-//   const scrollDown = () => {\r\n-//     const maxScrollTop =\r\n-//       document.documentElement.scrollHeight - window.innerHeight;\r\n-//     if (window.pageYOffset >= maxScrollTop) {\r\n-//       speak(\"Already at the bottom of the page.\");\r\n-//     } else {\r\n-//       window.scrollBy(0, scrollAmount);\r\n-//       speak(\"Scrolled down.\");\r\n-//     }\r\n-//   };\r\n-\r\n-//   const scrollToTop = () => {\r\n-//     if (window.pageYOffset === 0) {\r\n-//       speak(\"Already at the top of the page.\");\r\n-//     } else {\r\n-//       window.scrollTo(0, 0);\r\n-//       speak(\"Scrolled to the top of the page.\");\r\n-//     }\r\n-//   };\r\n-\r\n-//   const scrollToBottom = () => {\r\n-//     const maxScrollTop =\r\n-//       document.documentElement.scrollHeight - window.innerHeight;\r\n-//     if (window.pageYOffset >= maxScrollTop) {\r\n-//       speak(\"Already at the bottom of the page.\");\r\n-//     } else {\r\n-//       window.scrollTo(0, document.body.scrollHeight);\r\n-//       speak(\"Scrolled to the bottom of the page.\");\r\n-//     }\r\n-//   };\r\n-\r\n-//   // const speak = (message) => {\r\n-//   //   const utterance = new SpeechSynthesisUtterance(message);\r\n-//   //   utterance.onend = () => {\r\n-//   //     setIsSpeaking(false);\r\n-//   //     console.log(\"Speaking ended.\");\r\n-//   //     // Only restart recognition if we're still supposed to be listening\r\n-//   //     // if (isListening) {\r\n-//   //     //   if (restartRecognitionTimeout.current) {\r\n-//   //     //     clearTimeout(restartRecognitionTimeout.current);\r\n-//   //     //   }\r\n-//   //     //   restartRecognitionTimeout.current = setTimeout(() => {\r\n-//   //     //     console.log(\"Recognition restarted.\");\r\n-//   //     //     recognition.current.start();\r\n-//   //     //   }, 100); // Delay to prevent immediate restart\r\n-//   //     // }\r\n-//   //     if (isListening && !recognition.current.starting) { // Check the flag before restarting\r\n-//   //       recognition.current.starting = true; // Set the flag when starting recognition\r\n-//   //       recognition.current.start();\r\n-//   //     }\r\n-//   //   };\r\n-\r\n-//   //   setIsSpeaking(true);\r\n-//   //   console.log(\"Speaking started.\");\r\n-//   //   recognition.current.stop(); // Stop recognition when the bot starts speaking\r\n-//   //   speechSynthesis.current.speak(utterance);\r\n-//   // };\r\n-\r\n-//   // const onRecognitionEnd = () => {\r\n-//   //   console.log(\"Recognition ended.\");\r\n-//   //   setIsRecognitionActive(false); // Update state when recognition ends\r\n-//   //   recognition.current.starting = false; // Reset the flag when recognition ends\r\n-//   //   // We now check if the recognition is already running before starting it again\r\n-//   //   if (isListening && !isSpeaking && !recognition.current?.starting) {\r\n-//   //     console.log(\"Restarting recognition.\");\r\n-//   //     recognition.current.start();\r\n-//   //   }\r\n-//   // };\r\n-\r\n-//   // useEffect(() => {\r\n-//   //   if (isListening && !hasGreeted.current) {\r\n-//   //     speak(\"Hello, I'm Brane. How can I assist you today?\");\r\n-//   //     hasGreeted.current = true;\r\n-//   //   } else if (isListening && !isSpeaking) {\r\n-//   //     recognition.current.start();\r\n-//   //   }\r\n-//   // }, [isListening, isSpeaking]);\r\n-\r\n-//   // const startListening = () => {\r\n-//   //   console.log(\"Attempting to start listening.\");\r\n-//   //   if (recognition.current && !recognition.current.starting) {\r\n-//   //     setIsListening(true);\r\n-//   //     recognition.current.starting = true; // Set the flag when starting recognition\r\n-//   //     recognition.current.start();\r\n-//   //     console.log(\"Listening started.\");\r\n-//   //   }\r\n-//   // };\r\n-\r\n-//   // const stopListening = () => {\r\n-//   //   console.log(\"Stopping listening.\");\r\n-\r\n-//   //   setIsListening(false);\r\n-//   //   recognition.current.stop();\r\n-//   //   if (speechSynthesis.current.speaking) {\r\n-//   //     speechSynthesis.current.cancel();\r\n-//   //   }\r\n-//   //   if (restartRecognitionTimeout.current) {\r\n-//   //     clearTimeout(restartRecognitionTimeout.current);\r\n-//   //   }\r\n-//   //   console.log(\"Listening stopped.\");\r\n-//   // };\r\n-//   // Handle start and stop listening logic\r\n-\r\n-//   useEffect(() => {\r\n-//     if (isListening && !hasGreeted.current) {\r\n-//       speak(\"Hello, I'm Brane. How can I assist you today?\");\r\n-//       hasGreeted.current = true;\r\n-//     }\r\n-//   }, [isListening]);\r\n-\r\n-//   // const handleCommandWithFuse = (command) => {\r\n-//   //   const fuse = new Fuse(commands, { keys: [\"utterance\"], threshold: 0.4 });\r\n-//   //   const results = fuse.search(command);\r\n-//   //   const foundCommand = results.length ? results[0].item : null;\r\n-\r\n-//   //   if (foundCommand) {\r\n-//   //     console.log(\"Command found:\", foundCommand.utterance);\r\n-//   //     speak(foundCommand.response);\r\n-//   //     if (foundCommand.route) {\r\n-//   //       navigate(foundCommand.route); // Navigate to the route specified in the command\r\n-//   //     }\r\n-//   //   } else {\r\n-//   //     console.log(\"No command found.\");\r\n-//   //     speak(\"I'm not sure how to respond to that.\");\r\n-//   //   }\r\n-//   // };\r\n-\r\n-//   const handleCommandWithFuse = (command) => {\r\n-//     const fuse = new Fuse(commands, { keys: [\"utterance\"], threshold: 0.4 });\r\n-//     const results = fuse.search(command);\r\n-//     const foundCommand = results.length ? results[0].item : null;\r\n-\r\n-//     if (foundCommand) {\r\n-//       console.log(\"Command found:\", foundCommand.utterance);\r\n-\r\n-//       if (foundCommand.action) {\r\n-//         foundCommand.action();\r\n-//       } else if (foundCommand.route) {\r\n-//         navigate(foundCommand.route);\r\n-//       }\r\n-\r\n-//       if (foundCommand.response) {\r\n-//         speak(foundCommand.response);\r\n-//       }\r\n-//     } else {\r\n-//       console.log(\"No command found.\");\r\n-//       speak(\"I'm not sure how to respond to that.\");\r\n-//     }\r\n-//   };\r\n-\r\n-//   const commands = [\r\n-//     {\r\n-//       utterance: \"Hello who are you ?\",\r\n-\r\n-//       response:\r\n-//         \"Hi! This is Brane! your Voice bot from Brane Education How can I Assist you Today ?\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"Hello\",\r\n-\r\n-//       response: \"Hi! How can I assist you today?\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"hello\",\r\n-\r\n-//       response: \"Hi! How can I assist you today?\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"Hi.\",\r\n-\r\n-//       response: \"Hello! How can I assist you today?\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"Hey there\",\r\n-\r\n-//       response: \"Hi! How can I assist you today?\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"Good morning Brane.\",\r\n-\r\n-//       response: \"Hey Hiii! Good morning  ! How can I help you?\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"Good afternoon Brane.\",\r\n-\r\n-//       response: \"Hey Hiii! Good after noon ! How can I help you?\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"Good evening Brane.\",\r\n-\r\n-//       response: \"Hey Hiii! Good evening ! How can I help you?\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"can you please take me to login page\",\r\n-//       route: \"/login\",\r\n-//       routeDescription: \"login page\",\r\n-//       response: \"Navigating to the login page.\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"go to login page\",\r\n-//       route: \"/login\",\r\n-//       routeDescription: \"login page\",\r\n-//       response: \"Navigating to the login page.\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"please take me to login page\",\r\n-//       route: \"/login\",\r\n-//       routeDescription: \"login page\",\r\n-//       response: \"Navigating to the login page.\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"Go to login page\",\r\n-//       route: \"/login\",\r\n-//       routeDescription: \"login page\",\r\n-//       response: \"Navigating to the login page.\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"open login page\",\r\n-//       route: \"/login\",\r\n-//       routeDescription: \"login page\",\r\n-//       response: \"Navigating to the login page.\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"can you please take me to signup page\",\r\n-//       route: \"/signup\",\r\n-//       routeDescription: \"signup page\",\r\n-//       response: \"Navigating to the signup page.\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"take me to signup page\",\r\n-//       route: \"/signup\",\r\n-//       routeDescription: \"signup page\",\r\n-//       response: \"Navigating to the signup page.\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"Go to signup page\",\r\n-//       route: \"/signup\",\r\n-//       routeDescription: \"signup page\",\r\n-//       response: \"Navigating to the signup page.\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"open signup page\",\r\n-//       route: \"/signup\",\r\n-//       routeDescription: \"signup page\",\r\n-//       response: \"Navigating to the signup page.\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"what are platform features\",\r\n-\r\n-//       response:\r\n-//         \"Dashboard, Dynamic time table, Learning Networks, Little Masters, Video Based Dictionary, General Search.\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"Features of platform\",\r\n-\r\n-//       response:\r\n-//         \"Dashboard, Dynamic time table, Learning Networks, Little Masters, Video Based Dictionary, General Search.\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"What does the platform offer\",\r\n-\r\n-//       response:\r\n-//         \"Dashboard, Dynamic time table, Learning Networks, Little Masters, Video Based Dictionary, General Search.\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"Say me the features of platform\",\r\n-\r\n-//       response:\r\n-//         \"Dashboard, Dynamic time table, Learning Networks, Little Masters, Video Based Dictionary, General Search.\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"Say me the services of platform\",\r\n-\r\n-//       response:\r\n-//         \"Dashboard, Dynamic time table, Learning Networks, Little Masters, Video Based Dictionary, General Search.\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"tell me the services offered by the platform\",\r\n-\r\n-//       response:\r\n-//         \"Dashboard, Dynamic time table, Learning Networks, Little Masters, Video Based Dictionary, General Search.\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"explain platform services\",\r\n-\r\n-//       response:\r\n-//         \"Dashboard, Dynamic time table, Learning Networks, Little Masters, Video Based Dictionary, General Search.\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"Give me the Parent voice of Julia Harris\",\r\n-\r\n-//       response:\r\n-//         \"Brane education has helped my son a lot in his studies. He improved a lot in his studies and is now able to score good marks in his exams\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"Play today's motivational video\",\r\n-\r\n-//       response: \"I am playing the video\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"Play today's video\",\r\n-\r\n-//       response: \"I am playing Motivational video\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"Leaders Voice\",\r\n-\r\n-//       response:\r\n-//         \"This Voice-interactive AI Platform is a game Changer. It revolutionizes education.\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"Curriculum Supported by Brane Education\",\r\n-\r\n-//       response:\r\n-//         \"we support multiple Boards let me say few Telangana State Board Andhra Pradesh Board Maharashtra Board Assam Board\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"Boards supported by the platform\",\r\n-\r\n-//       response:\r\n-//         \"we support multiple Boards let me say few Telangana State Board Andhra Pradesh Board Maharashtra Board Assam Board\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"Curriculum\",\r\n-\r\n-//       response:\r\n-//         \"we support multiple Boards let me say few Telangana State Board Andhra Pradesh Board Maharashtra Board Assam Board\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"Go to landing page\",\r\n-\r\n-//       response: \"Okay, I am taking you to the landing page.\",\r\n-\r\n-//       route: \"/childpage\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"take me to landing page\",\r\n-\r\n-//       response: \"Okay, I am taking you to the landing page.\",\r\n-\r\n-//       route: \"/childpage\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"move to landing page\",\r\n-\r\n-//       response: \"Okay, I am taking you to the landing page.\",\r\n-\r\n-//       route: \"/childpage\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"roll back to landing page\",\r\n-\r\n-//       response: \"Okay, I am taking you to the landing page.\",\r\n-\r\n-//       route: \"/childpage\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"move to landing page\",\r\n-\r\n-//       response: \"Okay, I am taking you to the landing page.\",\r\n-\r\n-//       route: \"/childpage\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"what is today's quote\",\r\n-\r\n-//       response:\r\n-//         \"Determination is the power that sees us through all our frustration and obstacles. It helps in building our willpower which is the very basis of success.\",\r\n-\r\n-//       // route: \"/childpage\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"Today's Inspirational quote\",\r\n-\r\n-//       response:\r\n-//         \"Determination is the power that sees us through all our frustration and obstacles. It helps in building our willpower which is the very basis of success.\",\r\n-\r\n-//       // route: \"/childpage\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"say me today's quote\",\r\n-\r\n-//       response:\r\n-//         \"Determination is the power that sees us through all our frustration and obstacles. It helps in building our willpower which is the very basis of success.\",\r\n-\r\n-//       // route: \"/childpage\",\r\n-//     },\r\n-//     {\r\n-//       utterance: \"go back\",\r\n-//       response: \"Going back.\",\r\n-//       action: goBack, // Note the use of an action property\r\n-//     },\r\n-//     {\r\n-//       utterance: \"go forward\",\r\n-//       response: \"Going forward.\",\r\n-//       action: goForward,\r\n-//     },\r\n-//     {\r\n-//       utterance: \"play video\",\r\n-//       // response: \"Playing video.\",\r\n-//       action: playVideo,\r\n-//     },\r\n-//     {\r\n-//       utterance: \"pause video\",\r\n-//       // response: \"Pausing video.\",\r\n-//       action: pauseVideo,\r\n-//     },\r\n-//     {\r\n-//       utterance: \"start video\",\r\n-//       // response: \"Playing video.\",\r\n-//       action: playVideo,\r\n-//     },\r\n-//     {\r\n-//       utterance: \"stop video\",\r\n-//       // response: \"Playing video.\",\r\n-//       action: pauseVideo,\r\n-//     },\r\n-//     {\r\n-//       utterance: \"scroll up\",\r\n-//       // response: \"Scrolling up.\",\r\n-//       action: scrollUp,\r\n-//     },\r\n-//     {\r\n-//       utterance: \"scroll down\",\r\n-//       // response: \"Scrolling down.\",\r\n-//       action: scrollDown,\r\n-//     },\r\n-//     {\r\n-//       utterance: \"go up\",\r\n-\r\n-//       // response: \"Scrolling up.\",\r\n-//       action: scrollUp,\r\n-//     },\r\n-//     {\r\n-//       utterance: \"go down\",\r\n-//       // response: \"Scrolling down.\",\r\n-//       action: scrollDown,\r\n-//     },\r\n-//     {\r\n-//       utterance: \"scroll to top\",\r\n-//       action: scrollToTop,\r\n-//     },\r\n-//     {\r\n-//       utterance: \"scroll to bottom\",\r\n-//       action: scrollToBottom,\r\n-//     },\r\n-//     {\r\n-//       utterance: \"go back\",\r\n-//       action: goBackRef?.current?.click, // Use goBackRef directly\r\n-//       response: \"Going back.\",\r\n-//     },\r\n-//     {\r\n-//       utterance: \"take test\",\r\n-//       action: takeTestRef?.current?.click, // Use takeTestRef directly\r\n-//       response: \"Starting the test.\",\r\n-//     },\r\n-//   ];\r\n-//   return (\r\n-//     <div className=\"speech-bot-container\">\r\n-//       <div\r\n-//         className={`button-container ${\r\n-//           isListening ? \"voicebotframeactive\" : \"voicebotframe\"\r\n-//         }`}\r\n-//       >\r\n-//         <div onClick={isListening ? stopListening : startListening}>\r\n-//           <iframe\r\n-//             src={\r\n-//               isListening\r\n-//                 ? \"https://lottie.host/?file=a89aca3f-5407-4052-82c3-2048afca7a9f/NpCdWzLSKD.json\"\r\n-//                 : \"https://lottie.host/?file=d2b6cc0e-fe95-4847-85b5-35365fca7e00/vTudpCuPZq.json\"\r\n-//             }\r\n-//             width=\"120\" // Set your desired width\r\n-//             height=\"120\" // Set your desired height\r\n-//             title={isListening ? \"Stop Animation\" : \"Start Animation\"}\r\n-//             className={isListening ? \"voicebotframeactive\" : \"voicebotframe\"}\r\n-//           ></iframe>\r\n-//           {isListening ? (\r\n-//             <div className=\"overlay\" onClick={stopListening}></div>\r\n-//           ) : (\r\n-//             <div className=\"overlay\" onClick={startListening}></div>\r\n-//           )}\r\n-//         </div>\r\n-//       </div>\r\n-//     </div>\r\n-//   );\r\n-// };\r\n-\r\n-// export default VoiceBot;\r\n"
                },
                {
                    "date": 1700825878798,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1138,8 +1138,23 @@\n         }\r\n       },\r\n     },\r\n     {\r\n+      utterance: \"enter pin as *\",\r\n+      action: (spokenText) => {\r\n+        if (!spokenText) {\r\n+          speak(\"I couldn't understand the command.\");\r\n+          return;\r\n+        }\r\n+        const pin = extractNumber(spokenText);\r\n+        if (pin) {\r\n+          setPin(pin);\r\n+        } else {\r\n+          speak(\"I couldn't find a number in your command.\");\r\n+        }\r\n+      },\r\n+    },\r\n+    {\r\n       utterance: \"press login\",\r\n       action: () => {\r\n         triggerLogin();\r\n         speak(\"Attempting to log in.\");\r\n"
                },
                {
                    "date": 1700825901599,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,4036 @@\n+import React, { useState, useEffect, useRef } from \"react\";\r\n+import { useNavigate, useLocation } from \"react-router-dom\";\r\n+import Fuse from \"fuse.js\";\r\n+import \"./VoiceBot.css\";\r\n+import chatbotimage from \"../../assets/chatbotgif.gif\";\r\n+\r\n+const VoiceBot = ({ videoRefs,setMobileNumber,setPin,triggerLogin, setTriggerRecordAudio }) => {\r\n+  const [isListening, setIsListening] = useState(false);\r\n+  const [isSpeaking, setIsSpeaking] = useState(false);\r\n+  const recognition = useRef(null);\r\n+  const speechSynthesis = useRef(window.speechSynthesis);\r\n+  const [hasGreeted, setHasGreeted] = useState(false);\r\n+  const navigate = useNavigate();\r\n+\r\n+  // Initialize speech recognition\r\n+  useEffect(() => {\r\n+    recognition.current = new window.webkitSpeechRecognition();\r\n+    recognition.current.continuous = true;\r\n+    recognition.current.interimResults = false;\r\n+    recognition.current.onresult = onResult;\r\n+    recognition.current.onend = onRecognitionEnd;\r\n+    recognition.current.starting = false;\r\n+\r\n+    recognition.current.onerror = (event) => {\r\n+      console.error(\"Recognition error:\", event.error);\r\n+      if (isListening && !isSpeaking) {\r\n+        restartRecognition();\r\n+      }\r\n+    };\r\n+\r\n+    return () => {\r\n+      if (recognition.current) {\r\n+        recognition.current.abort();\r\n+      }\r\n+    };\r\n+  }, []);\r\n+\r\n+  useEffect(() => {\r\n+    const checkRecognition = () => {\r\n+      if (isListening && !isSpeaking && !recognition.current.starting) {\r\n+        console.log(\"Restarting recognition because it's not active.\");\r\n+        recognition.current.starting = true;\r\n+        recognition.current.start();\r\n+        console.log(\"Restarted recognition.\");\r\n+      }\r\n+    };\r\n+\r\n+    const recognitionCheckInterval = setInterval(checkRecognition, 500); // Check every .5 second\r\n+\r\n+    return () => {\r\n+      clearInterval(recognitionCheckInterval);\r\n+    };\r\n+  }, [isListening, isSpeaking]);\r\n+\r\n+  const historyStack = useRef([]);\r\n+\r\n+  useEffect(() => {\r\n+    return () => {\r\n+      // Clean up the listener when the component unmounts\r\n+      window.removeEventListener(\"popstate\", handlePopState);\r\n+    };\r\n+  }, []);\r\n+\r\n+  const handlePopState = () => {\r\n+    // This needs to handle both back and forward browser actions\r\n+    // Use some logic to determine whether it's a back or forward action\r\n+    // For simplicity, assume it's always back\r\n+    historyStack.current.pop();\r\n+    forwardStack.current.length = 0; // Clear forward stack on manual navigation\r\n+  };\r\n+\r\n+  // Listen to popstate events to update the history stack\r\n+  useEffect(() => {\r\n+    window.addEventListener(\"popstate\", handlePopState);\r\n+  }, []);\r\n+\r\n+  const forwardStack = useRef([]);\r\n+\r\n+  const goBack = () => {\r\n+    if (window.history.state && window.history.state.idx > 0) {\r\n+      window.history.back();\r\n+      speak(\"Going back\");\r\n+    } else {\r\n+      speak(\"Can't go back any further.\");\r\n+    }\r\n+  };\r\n+\r\n+  const goForward = () => {\r\n+    if (\r\n+      window.history.state &&\r\n+      window.history.state.idx < window.history.length - 1\r\n+    ) {\r\n+      window.history.forward();\r\n+      speak(\"Going forward\");\r\n+    } else {\r\n+      speak(\"No forward history available.\");\r\n+    }\r\n+  };\r\n+\r\n+  const scrollAmount = window.innerHeight * 0.82;\r\n+\r\n+  const scrollUp = () => {\r\n+    if (window.pageYOffset === 0) {\r\n+      speak(\"Already at the top of the page.\");\r\n+    } else {\r\n+      window.scrollBy(0, -scrollAmount);\r\n+      speak(\"Scrolled up.\");\r\n+    }\r\n+  };\r\n+\r\n+  const scrollDown = () => {\r\n+    const maxScrollTop =\r\n+      document.documentElement.scrollHeight - window.innerHeight;\r\n+    if (window.pageYOffset >= maxScrollTop) {\r\n+      speak(\"Already at the bottom of the page.\");\r\n+    } else {\r\n+      window.scrollBy(0, scrollAmount);\r\n+      speak(\"Scrolled down.\");\r\n+    }\r\n+  };\r\n+\r\n+  const scrollToTop = () => {\r\n+    if (window.pageYOffset === 0) {\r\n+      speak(\"Already at the top of the page.\");\r\n+    } else {\r\n+      window.scrollTo(0, 0);\r\n+      speak(\"Scrolled to the top of the page.\");\r\n+    }\r\n+  };\r\n+\r\n+  const scrollToBottom = () => {\r\n+    const maxScrollTop =\r\n+      document.documentElement.scrollHeight - window.innerHeight;\r\n+    if (window.pageYOffset >= maxScrollTop) {\r\n+      speak(\"Already at the bottom of the page.\");\r\n+    } else {\r\n+      window.scrollTo(0, document.body.scrollHeight);\r\n+      speak(\"Scrolled to the bottom of the page.\");\r\n+    }\r\n+  };\r\n+\r\n+  const controlVideo = (videoId, action) => {\r\n+    const videoRef = videoRefs.current.get(videoId);\r\n+    if (videoRef && videoRef.current) {\r\n+      switch (action) {\r\n+        case \"play\":\r\n+          videoRef.current.play();\r\n+          break;\r\n+        case \"pause\":\r\n+          videoRef.current.pause();\r\n+          break;\r\n+        case \"mute\":\r\n+          videoRef.current.muted = true;\r\n+          break;\r\n+        case \"unmute\":\r\n+          videoRef.current.muted = false;\r\n+          break;\r\n+        case \"fullscreen\":\r\n+          if (videoRef.current.requestFullscreen) {\r\n+            videoRef.current.requestFullscreen();\r\n+          } else if (videoRef.current.webkitRequestFullscreen) {\r\n+            // Safari\r\n+            videoRef.current.webkitRequestFullscreen();\r\n+          } else if (videoRef.current.msRequestFullscreen) {\r\n+            // IE11\r\n+            videoRef.current.msRequestFullscreen();\r\n+          }\r\n+          break;\r\n+        case \"exitFullscreen\":\r\n+          if (document.exitFullscreen) {\r\n+            document.exitFullscreen();\r\n+          } else if (document.webkitExitFullscreen) {\r\n+            // Safari\r\n+            document.webkitExitFullscreen();\r\n+          } else if (document.msExitFullscreen) {\r\n+            // IE11\r\n+            document.msExitFullscreen();\r\n+          }\r\n+          break;\r\n+        case \"increaseVolume\":\r\n+          if (videoRef.current.volume < 1) {\r\n+            videoRef.current.volume = Math.min(\r\n+              1,\r\n+              videoRef.current.volume + 0.1\r\n+            );\r\n+          }\r\n+          break;\r\n+        case \"decreaseVolume\":\r\n+          if (videoRef.current.volume > 0) {\r\n+            videoRef.current.volume = Math.max(\r\n+              0,\r\n+              videoRef.current.volume - 0.1\r\n+            );\r\n+          }\r\n+          break;\r\n+        // Add other cases as needed\r\n+      }\r\n+      speak(\r\n+        `${\r\n+          action.charAt(0).toUpperCase() +\r\n+          action\r\n+            .slice(1)\r\n+            .replace(/([A-Z])/g, \" $1\")\r\n+            .toLowerCase()\r\n+        }ing video.`\r\n+      );\r\n+    } else {\r\n+      speak(`Video not found.`);\r\n+    }\r\n+  };\r\n+\r\n+  const speak = (message) => {\r\n+    const utterance = new SpeechSynthesisUtterance(message);\r\n+    utterance.onend = () => {\r\n+      setIsSpeaking(false);\r\n+      // Restart recognition after speaking has ended\r\n+      if (isListening) {\r\n+        restartRecognition();\r\n+      }\r\n+    };\r\n+\r\n+    setIsSpeaking(true);\r\n+    // Stop recognition when the bot starts speaking\r\n+    if (recognition.current) {\r\n+      recognition.current.abort();\r\n+    }\r\n+    speechSynthesis.current.speak(utterance);\r\n+  };\r\n+\r\n+  const restartRecognition = () => {\r\n+    // Check if recognition is not already started and if the bot is set to listen\r\n+    if (\r\n+      recognition.current &&\r\n+      !recognition.current.starting &&\r\n+      isListening &&\r\n+      !isSpeaking\r\n+    ) {\r\n+      recognition.current.abort(); // Ensure any ongoing recognition is stopped\r\n+      recognition.current.starting = true;\r\n+      recognition.current.start();\r\n+    }\r\n+  };\r\n+\r\n+  // Restart recognition when bot finishes speaking and isListening is true\r\n+  useEffect(() => {\r\n+    if (!isSpeaking && isListening) {\r\n+      restartRecognition();\r\n+    }\r\n+  }, [isSpeaking, isListening]);\r\n+\r\n+  const onResult = (event) => {\r\n+    const resultIndex = event.resultIndex;\r\n+    const transcript = event.results[resultIndex][0].transcript\r\n+      .trim()\r\n+      .toLowerCase();\r\n+\r\n+    if (event.results[resultIndex].isFinal) {\r\n+      console.log(`Recognized text: ${transcript}`);\r\n+      if (transcript.includes(\"brain\")) {\r\n+        console.log(\"Wake word heard, processing command...\");\r\n+        handleCommandWithFuse(transcript.replace(\"brain\", \"\"));\r\n+      }\r\n+    }\r\n+  };\r\n+\r\n+  const onRecognitionEnd = () => {\r\n+    recognition.current.starting = false;\r\n+    if (isListening && !isSpeaking) {\r\n+      restartRecognition();\r\n+    }\r\n+  };\r\n+\r\n+  useEffect(() => {\r\n+    if (isListening && !hasGreeted) {\r\n+      speak(\"Hello, I'm Brane. How can I help you today?\");\r\n+      setHasGreeted(true);\r\n+    }\r\n+  }, [isListening, hasGreeted]);\r\n+\r\n+  // Updated startListening function\r\n+  const startListening = () => {\r\n+    setIsListening(true);\r\n+    if (!recognition.current.starting) {\r\n+      restartRecognition();\r\n+    }\r\n+  };\r\n+\r\n+  // Updated stopListening function\r\n+  const stopListening = () => {\r\n+    setIsListening(false);\r\n+    if (speechSynthesis.current.speaking) {\r\n+      speechSynthesis.current.cancel();\r\n+    }\r\n+    recognition.current.abort();\r\n+  };\r\n+\r\n+  const handleCommandWithFuse = (command) => {\r\n+    const fuse = new Fuse(commands, { keys: [\"utterance\"], threshold: 0.4 });\r\n+    const results = fuse.search(command);\r\n+    const foundCommand = results.length ? results[0].item : null;\r\n+\r\n+    if (foundCommand) {\r\n+      console.log(\"Command text to process:\", command);\r\n+      console.log(\"Command found:\", foundCommand.utterance);\r\n+      if (foundCommand.action) {\r\n+        foundCommand.action(command); // Pass the command text to the action function\r\n+      } else if (foundCommand.route) {\r\n+        navigate(foundCommand.route);\r\n+      }\r\n+\r\n+      // Speak after performing the action or navigation\r\n+      speak(foundCommand.response);\r\n+    } else {\r\n+      console.log(\"No command found.\");\r\n+      speak(\"I'm not sure how to respond to that.\");\r\n+    }\r\n+  };\r\n+\r\n+  const extractNumber = (spokenText) => {\r\n+    if (!spokenText) return null; // Return null if spokenText is undefined or null\r\n+  \r\n+    const sanitizedText = spokenText.replace(/[.,]/g, '');\r\n+    const matches = sanitizedText.match(/\\d+/);\r\n+    return matches ? matches[0] : null;\r\n+  };\r\n+\r\n+\r\n+  const commands = [\r\n+    {\r\n+      utterance: \"Hello who are you ?\",\r\n+\r\n+      response:\r\n+        \"Hi! This is Brane! your Voice bot from Brane Education How can I Assist you Today ?\",\r\n+    },\r\n+\r\n+    {\r\n+      utterance: \"Hello\",\r\n+\r\n+      response: \"Hi! How can I assist you today?\",\r\n+    },\r\n+\r\n+    {\r\n+      utterance: \"hello\",\r\n+\r\n+      response: \"Hi! How can I assist you today?\",\r\n+    },\r\n+\r\n+    {\r\n+      utterance: \"Hi.\",\r\n+\r\n+      response: \"Hello! How can I assist you today?\",\r\n+    },\r\n+\r\n+    {\r\n+      utterance: \"Hey there\",\r\n+\r\n+      response: \"Hi! How can I assist you today?\",\r\n+    },\r\n+\r\n+    {\r\n+      utterance: \"Good morning Brane.\",\r\n+\r\n+      response: \"Hey Hiii! Good morning  ! How can I help you?\",\r\n+    },\r\n+\r\n+    {\r\n+      utterance: \"Good afternoon Brane.\",\r\n+\r\n+      response: \"Hey Hiii! Good after noon ! How can I help you?\",\r\n+    },\r\n+\r\n+    {\r\n+      utterance: \"Good evening Brane.\",\r\n+\r\n+      response: \"Hey Hiii! Good evening ! How can I help you?\",\r\n+    },\r\n+\r\n+    {\r\n+      utterance: \"take me to homepage\",\r\n+\r\n+      route: \"/\",\r\n+\r\n+      response: \"You're in Homepage now\",\r\n+    },\r\n+    {\r\n+      utterance: \"open homepage\",\r\n+\r\n+      route: \"/\",\r\n+\r\n+      response: \"You're in Homepage now\",\r\n+    },\r\n+    {\r\n+      utterance: \"go to homepage\",\r\n+\r\n+      route: \"/\",\r\n+\r\n+      response: \"You're in Homepage now\",\r\n+    },\r\n+    {\r\n+      utterance: \"go back to homepage\",\r\n+\r\n+      route: \"/\",\r\n+\r\n+      response: \"You're in Homepage now\",\r\n+    },\r\n+    {\r\n+      utterance: \"can you please take me to login page\",\r\n+\r\n+      route: \"/login\",\r\n+\r\n+      response: \"Here's the Login Page, Please Login\",\r\n+    },\r\n+\r\n+    {\r\n+      utterance: \"please take me to login page\",\r\n+\r\n+      route: \"/login\",\r\n+\r\n+      response: \"Here's the Login Page, Please Login\",\r\n+    },\r\n+\r\n+    {\r\n+      utterance: \"Go to login page\",\r\n+\r\n+      route: \"/login\",\r\n+\r\n+      response: \"Here's the Login Page, Please Login\",\r\n+    },\r\n+\r\n+    {\r\n+      utterance: \"open login page\",\r\n+\r\n+      route: \"/login\",\r\n+\r\n+      response: \"Here's the Login Page, Please Login\",\r\n+    },\r\n+\r\n+    {\r\n+      utterance: \"can you please take me to signup page\",\r\n+\r\n+      route: \"/signup\",\r\n+\r\n+      response: \"Here's the signup page. Please proceed With Registration.\",\r\n+    },\r\n+\r\n+    {\r\n+      utterance: \"take me to signup page\",\r\n+\r\n+      route: \"/signup\",\r\n+\r\n+      response: \"Here's the signup page. Please proceed With Registration.\",\r\n+    },\r\n+\r\n+    {\r\n+      utterance: \"Go to signup page\",\r\n+\r\n+      route: \"/signup\",\r\n+\r\n+      response: \"Here's the signup page. Please proceed With Registration.\",\r\n+    },\r\n+\r\n+    {\r\n+      utterance: \"open signup page\",\r\n+\r\n+      route: \"/signup\",\r\n+\r\n+      response: \"Here's the signup page. Please proceed With Registration.\",\r\n+    },\r\n+\r\n+    {\r\n+      utterance: \"Go to face id\",\r\n+\r\n+      route: \"/login/faceid\",\r\n+\r\n+      response: \"Here's Face ID Login. Please proceed.\",\r\n+    },\r\n+\r\n+    {\r\n+      utterance: \"Go to face id login\",\r\n+\r\n+      route: \"/login/faceid\",\r\n+\r\n+      response: \"Here's Face ID Login. Please proceed.\",\r\n+    },\r\n+    {\r\n+      utterance: \"Go to face login\",\r\n+\r\n+      route: \"/login/faceid\",\r\n+\r\n+      response: \"Here's Face ID Login. Please proceed.\",\r\n+    },\r\n+\r\n+    {\r\n+      utterance: \"login with face id\",\r\n+\r\n+      route: \"/login/faceid\",\r\n+\r\n+      response: \"Here's Face ID Login. Please proceed.\",\r\n+    },\r\n+\r\n+    {\r\n+      utterance: \"login with face\",\r\n+\r\n+      route: \"/login/faceid\",\r\n+\r\n+      response: \"Here's Face ID Login. Please proceed.\",\r\n+    },\r\n+\r\n+    {\r\n+      utterance: \"i want to login with face\",\r\n+\r\n+      route: \"/login/faceid\",\r\n+\r\n+      response: \"Here's Face ID Login. Please proceed.\",\r\n+    },\r\n+\r\n+    {\r\n+      utterance: \"login with voice\",\r\n+\r\n+      route: \"/login/voiceid\",\r\n+\r\n+      response: \"Here's Voice Login. Please proceed.\",\r\n+    },\r\n+\r\n+    {\r\n+      utterance: \"i want to login with voice\",\r\n+\r\n+      route: \"/login/voiceid\",\r\n+\r\n+      response: \"Here's Voice Login. Please proceed.\",\r\n+    },\r\n+\r\n+    {\r\n+      utterance: \"go to voice login\",\r\n+\r\n+      route: \"/login/voiceid\",\r\n+\r\n+      response: \"Here's Voice Login. Please proceed.\",\r\n+    },\r\n+\r\n+    {\r\n+      utterance: \"login with voice\",\r\n+\r\n+      route: \"/login/voiceid\",\r\n+\r\n+      response: \"Here's Voice Login. Please proceed.\",\r\n+    },\r\n+\r\n+    {\r\n+      utterance: \"login with mobile\",\r\n+\r\n+      route: \"/login/mobile\",\r\n+\r\n+      response: \"Here's Mobile Login. Please proceed.\",\r\n+    },\r\n+\r\n+    {\r\n+      utterance: \"i want to login with mobile\",\r\n+\r\n+      route: \"/login/mobile\",\r\n+\r\n+      response: \"Here's Mobile Login. Please proceed.\",\r\n+    },\r\n+    {\r\n+      utterance: \"go to mobile login\",\r\n+\r\n+      route: \"/login/mobile\",\r\n+\r\n+      response: \"Here's Mobile Login. Please proceed.\",\r\n+    },\r\n+    {\r\n+      utterance: \"go to about page\",\r\n+\r\n+      route: \"/aboutus\",\r\n+\r\n+      response: \"This is About us.\",\r\n+    },\r\n+    {\r\n+      utterance: \"go to about us page\",\r\n+\r\n+      route: \"/aboutus\",\r\n+\r\n+      response: \"This is About us.\",\r\n+    },\r\n+    {\r\n+      utterance: \"open about us page\",\r\n+\r\n+      route: \"/aboutus\",\r\n+\r\n+      response: \"This is About us.\",\r\n+    },\r\n+    {\r\n+      utterance: \"open about page\",\r\n+\r\n+      route: \"/aboutus\",\r\n+\r\n+      response: \"This is About us.\",\r\n+    },\r\n+    {\r\n+      utterance: \"take me to about page\",\r\n+\r\n+      route: \"/aboutus\",\r\n+\r\n+      response: \"This is About us.\",\r\n+    },\r\n+    {\r\n+      utterance: \"take me to about us page\",\r\n+\r\n+      route: \"/aboutus\",\r\n+\r\n+      response: \"This is About us.\",\r\n+    },\r\n+\r\n+    {\r\n+      utterance: \"go to contact page\",\r\n+\r\n+      route: \"/contactus\",\r\n+\r\n+      response: \"You can contact us from here\",\r\n+    },\r\n+    {\r\n+      utterance: \"go to contact us page\",\r\n+\r\n+      route: \"/contactus\",\r\n+\r\n+      response: \"You can contact us from here\",\r\n+    },\r\n+    {\r\n+      utterance: \"open contact us page\",\r\n+\r\n+      route: \"/contactus\",\r\n+\r\n+      response: \"You can contact us from here\",\r\n+    },\r\n+    {\r\n+      utterance: \"open contact page\",\r\n+\r\n+      route: \"/contactus\",\r\n+\r\n+      response: \"You can contact us from here\",\r\n+    },\r\n+    {\r\n+      utterance: \"take me to about page\",\r\n+\r\n+      route: \"/contactus\",\r\n+\r\n+      response: \"You can contact us from here\",\r\n+    },\r\n+    {\r\n+      utterance: \"take me to contact us page\",\r\n+\r\n+      route: \"/contactus\",\r\n+\r\n+      response: \"You can contact us from here\",\r\n+    },\r\n+\r\n+    {\r\n+      utterance: \"what are platform features\",\r\n+\r\n+      response:\r\n+        \"Dashboard, Dynamic time table, Learning Networks, Little Masters, Video Based Dictionary, General Search.\",\r\n+    },\r\n+\r\n+    {\r\n+      utterance: \"Features of platform\",\r\n+\r\n+      response:\r\n+        \"Dashboard, Dynamic time table, Learning Networks, Little Masters, Video Based Dictionary, General Search.\",\r\n+    },\r\n+\r\n+    {\r\n+      utterance: \"What does the platform offer\",\r\n+\r\n+      response:\r\n+        \"Dashboard, Dynamic time table, Learning Networks, Little Masters, Video Based Dictionary, General Search.\",\r\n+    },\r\n+\r\n+    {\r\n+      utterance: \"Say me the features of platform\",\r\n+\r\n+      response:\r\n+        \"Dashboard, Dynamic time table, Learning Networks, Little Masters, Video Based Dictionary, General Search.\",\r\n+    },\r\n+\r\n+    {\r\n+      utterance: \"Say me the services of platform\",\r\n+\r\n+      response:\r\n+        \"Dashboard, Dynamic time table, Learning Networks, Little Masters, Video Based Dictionary, General Search.\",\r\n+    },\r\n+\r\n+    {\r\n+      utterance: \"tell me the services offered by the platform\",\r\n+\r\n+      response:\r\n+        \"Dashboard, Dynamic time table, Learning Networks, Little Masters, Video Based Dictionary, General Search.\",\r\n+    },\r\n+\r\n+    {\r\n+      utterance: \"explain platform services\",\r\n+\r\n+      response:\r\n+        \"Dashboard, Dynamic time table, Learning Networks, Little Masters, Video Based Dictionary, General Search.\",\r\n+    },\r\n+\r\n+    {\r\n+      utterance: \"Give me the Parent voice of Julia Harris\",\r\n+\r\n+      response:\r\n+        \"Brane education has helped my son a lot in his studies. He improved a lot in his studies and is now able to score good marks in his exams\",\r\n+    },\r\n+\r\n+    {\r\n+      utterance: \"Leaders Voice\",\r\n+\r\n+      response:\r\n+        \"This Voice-interactive AI Platform is a game Changer. It revolutionizes education.\",\r\n+    },\r\n+\r\n+    {\r\n+      utterance: \"Curriculum Supported by Brane Education\",\r\n+\r\n+      response:\r\n+        \"we support multiple Boards let me say few Telangana State Board Andhra Pradesh Board Maharashtra Board Assam Board\",\r\n+    },\r\n+\r\n+    {\r\n+      utterance: \"Boards supported by the platform\",\r\n+\r\n+      response:\r\n+        \"we support multiple Boards let me say few Telangana State Board Andhra Pradesh Board Maharashtra Board Assam Board\",\r\n+    },\r\n+\r\n+    {\r\n+      utterance: \"Curriculum\",\r\n+\r\n+      response:\r\n+        \"we support multiple Boards let me say few Telangana State Board Andhra Pradesh Board Maharashtra Board Assam Board\",\r\n+    },\r\n+\r\n+    {\r\n+      utterance: \"what is today's quote\",\r\n+\r\n+      response:\r\n+        \"Determination is the power that sees us through all our frustration and obstacles. It helps in building our willpower which is the very basis of success.\",\r\n+\r\n+      route: \"/childpage\",\r\n+    },\r\n+\r\n+    {\r\n+      utterance: \"Today's Inspirational quote\",\r\n+\r\n+      response:\r\n+        \"Determination is the power that sees us through all our frustration and obstacles. It helps in building our willpower which is the very basis of success.\",\r\n+\r\n+      route: \"/childpage\",\r\n+    },\r\n+\r\n+    {\r\n+      utterance: \"say me today's quote\",\r\n+\r\n+      response:\r\n+        \"Determination is the power that sees us through all our frustration and obstacles. It helps in building our willpower which is the very basis of success.\",\r\n+\r\n+      route: \"/childpage\",\r\n+    },\r\n+    {\r\n+      utterance: \"go back\",\r\n+      response: \"\",\r\n+      action: goBack, // Note the use of an action property\r\n+    },\r\n+    {\r\n+      utterance: \"go forward\",\r\n+      response: \"\",\r\n+      action: goForward,\r\n+    },\r\n+    // {\r\n+    //   utterance: \"play video\",\r\n+    //   // response: \"Playing video.\",\r\n+    //   action: playVideo,\r\n+    // },\r\n+    // {\r\n+    //   utterance: \"pause video\",\r\n+    //   // response: \"Pausing video.\",\r\n+    //   action: pauseVideo,\r\n+    // },\r\n+    // {\r\n+    //   utterance: \"start video\",\r\n+    //   // response: \"Playing video.\",\r\n+    //   action: playVideo,\r\n+    // },\r\n+    // {\r\n+    //   utterance: \"stop video\",\r\n+    //   // response: \"Playing video.\",\r\n+    //   action: pauseVideo,\r\n+    // },\r\n+    {\r\n+      utterance: \"scroll up\",\r\n+      // response: \"Scrolling up.\",\r\n+      action: scrollUp,\r\n+    },\r\n+    {\r\n+      utterance: \"scroll down\",\r\n+      // response: \"Scrolling down.\",\r\n+      action: scrollDown,\r\n+    },\r\n+    {\r\n+      utterance: \"go up\",\r\n+\r\n+      // response: \"Scrolling up.\",\r\n+      action: scrollUp,\r\n+    },\r\n+    {\r\n+      utterance: \"go down\",\r\n+      // response: \"Scrolling down.\",\r\n+      action: scrollDown,\r\n+    },\r\n+    {\r\n+      utterance: \"scroll to top\",\r\n+      action: scrollToTop,\r\n+    },\r\n+    {\r\n+      utterance: \"scroll to bottom\",\r\n+      action: scrollToBottom,\r\n+    },\r\n+    {\r\n+      utterance: \"brane stop\",\r\n+      action: stopListening,\r\n+    },\r\n+    {\r\n+      utterance: \"brane turn off\",\r\n+      action: stopListening,\r\n+    },\r\n+    {\r\n+      utterance: \"brane stop the bot\",\r\n+      action: stopListening,\r\n+    },\r\n+    // {\r\n+    //   utterance: \"mute the video\",\r\n+    //   action: muteVideo,\r\n+    // },\r\n+    // {\r\n+    //   utterance: \"unmute the video\",\r\n+    //   action: unmuteVideo,\r\n+    // },\r\n+    // {\r\n+    //   utterance: \"stop the video sound\",\r\n+    //   action: muteVideo,\r\n+    // },\r\n+    // {\r\n+    //   utterance: \"play the video sound\",\r\n+    //   action: unmuteVideo,\r\n+    // },\r\n+    {\r\n+      utterance: \"play transforming education video\",\r\n+      action: () => controlVideo(\"ourProjectsVideo\", \"play\"),\r\n+    },\r\n+    {\r\n+      utterance: \"start transforming education video\",\r\n+      action: () => controlVideo(\"ourProjectsVideo\", \"play\"),\r\n+    },\r\n+    {\r\n+      utterance: \"pause transforming education video\",\r\n+      action: () => controlVideo(\"ourProjectsVideo\", \"pause\"),\r\n+    },\r\n+    {\r\n+      utterance: \"stop transforming education video\",\r\n+      action: () => controlVideo(\"ourProjectsVideo\", \"pause\"),\r\n+    },\r\n+    {\r\n+      utterance: \"mute transforming education video\",\r\n+      action: () => controlVideo(\"ourProjectsVideo\", \"mute\"),\r\n+    },\r\n+    {\r\n+      utterance: \"unmute transforming education video\",\r\n+      action: () => controlVideo(\"ourProjectsVideo\", \"unmute\"),\r\n+    },\r\n+    {\r\n+      utterance: \"fullscreen transforming education video\",\r\n+      action: () => controlVideo(\"ourProjectsVideo\", \"fullscreen\"),\r\n+    },\r\n+    {\r\n+      utterance: \"exit fullscreen transforming education video\",\r\n+      action: () => controlVideo(\"ourProjectsVideo\", \"exitFullscreen\"),\r\n+    },\r\n+    {\r\n+      utterance: \"increase volume transforming education video\",\r\n+      action: () => controlVideo(\"ourProjectsVideo\", \"increaseVolume\"),\r\n+    },\r\n+    {\r\n+      utterance: \"decrease volume transforming education video\",\r\n+      action: () => controlVideo(\"ourProjectsVideo\", \"decreaseVolume\"),\r\n+    },\r\n+    {\r\n+      utterance: \"play the video about transforming education\",\r\n+      action: () => controlVideo(\"ourProjectsVideo\", \"play\"),\r\n+    },\r\n+    {\r\n+      utterance: \"start the transforming education video\",\r\n+      action: () => controlVideo(\"ourProjectsVideo\", \"play\"),\r\n+    },\r\n+    {\r\n+      utterance: \"can you pause the video on transforming education\",\r\n+      action: () => controlVideo(\"ourProjectsVideo\", \"pause\"),\r\n+    },\r\n+    {\r\n+      utterance: \"stop the video about transforming education\",\r\n+      action: () => controlVideo(\"ourProjectsVideo\", \"pause\"),\r\n+    },\r\n+    {\r\n+      utterance: \"mute the transforming education video\",\r\n+      action: () => controlVideo(\"ourProjectsVideo\", \"mute\"),\r\n+    },\r\n+    {\r\n+      utterance: \"unmute the video on transforming education\",\r\n+      action: () => controlVideo(\"ourProjectsVideo\", \"unmute\"),\r\n+    },\r\n+    {\r\n+      utterance: \"make the transforming education video fullscreen\",\r\n+      action: () => controlVideo(\"ourProjectsVideo\", \"fullscreen\"),\r\n+    },\r\n+    {\r\n+      utterance: \"exit fullscreen on the transforming education video\",\r\n+      action: () => controlVideo(\"ourProjectsVideo\", \"exitFullscreen\"),\r\n+    },\r\n+    {\r\n+      utterance: \"increase the volume of the transforming education video\",\r\n+      action: () => controlVideo(\"ourProjectsVideo\", \"increaseVolume\"),\r\n+    },\r\n+    {\r\n+      utterance: \"decrease the volume of the transforming education video\",\r\n+      action: () => controlVideo(\"ourProjectsVideo\", \"decreaseVolume\"),\r\n+    },\r\n+\r\n+    {\r\n+      utterance: \"play leaders voice video\",\r\n+      action: () => controlVideo(\"leadersVoiceVideo\", \"play\"),\r\n+    },\r\n+    {\r\n+      utterance: \"start leaders voice video\",\r\n+      action: () => controlVideo(\"leadersVoiceVideo\", \"play\"),\r\n+    },\r\n+    {\r\n+      utterance: \"pause leaders voice video\",\r\n+      action: () => controlVideo(\"leadersVoiceVideo\", \"pause\"),\r\n+    },\r\n+    {\r\n+      utterance: \"stop leaders voice video\",\r\n+      action: () => controlVideo(\"leadersVoiceVideo\", \"pause\"),\r\n+    },\r\n+    {\r\n+      utterance: \"mute leaders voice video\",\r\n+      action: () => controlVideo(\"leadersVoiceVideo\", \"mute\"),\r\n+    },\r\n+    {\r\n+      utterance: \"unmute leaders voice video\",\r\n+      action: () => controlVideo(\"leadersVoiceVideo\", \"unmute\"),\r\n+    },\r\n+    {\r\n+      utterance: \"fullscreen leaders voice video\",\r\n+      action: () => controlVideo(\"leadersVoiceVideo\", \"fullscreen\"),\r\n+    },\r\n+    {\r\n+      utterance: \"exit fullscreen leaders voice video\",\r\n+      action: () => controlVideo(\"leadersVoiceVideo\", \"exitFullscreen\"),\r\n+    },\r\n+    {\r\n+      utterance: \"increase volume leaders voice video\",\r\n+      action: () => controlVideo(\"leadersVoiceVideo\", \"increaseVolume\"),\r\n+    },\r\n+    {\r\n+      utterance: \"decrease volume leaders voice video\",\r\n+      action: () => controlVideo(\"leadersVoiceVideo\", \"decreaseVolume\"),\r\n+    },\r\n+\r\n+    {\r\n+      utterance: \"set mobile number to *\",\r\n+      action: (spokenText) => {\r\n+        if (!spokenText) {\r\n+          speak(\"I couldn't understand the command.\");\r\n+          return;\r\n+        }\r\n+        const mobileNumber = extractNumber(spokenText);\r\n+        if (mobileNumber) {\r\n+          setMobileNumber(mobileNumber);\r\n+        } else {\r\n+          speak(\"I couldn't find a number in your command.\");\r\n+        }\r\n+      },\r\n+    },\r\n+    {\r\n+      utterance: \"enter mobile number as *\",\r\n+      action: (spokenText) => {\r\n+        if (!spokenText) {\r\n+          speak(\"I couldn't understand the command.\");\r\n+          return;\r\n+        }\r\n+        const mobileNumber = extractNumber(spokenText);\r\n+        if (mobileNumber) {\r\n+          setMobileNumber(mobileNumber);\r\n+        } else {\r\n+          speak(\"I couldn't find a number in your command.\");\r\n+        }\r\n+      },\r\n+    },\r\n+    {\r\n+      utterance: \"enter my mobile number as *\",\r\n+      action: (spokenText) => {\r\n+        if (!spokenText) {\r\n+          speak(\"I couldn't understand the command.\");\r\n+          return;\r\n+        }\r\n+        const mobileNumber = extractNumber(spokenText);\r\n+        if (mobileNumber) {\r\n+          setMobileNumber(mobileNumber);\r\n+        } else {\r\n+          speak(\"I couldn't find a number in your command.\");\r\n+        }\r\n+      },\r\n+    },\r\n+    {\r\n+      utterance: \"set mobile number as *\",\r\n+      action: (spokenText) => {\r\n+        if (!spokenText) {\r\n+          speak(\"I couldn't understand the command.\");\r\n+          return;\r\n+        }\r\n+        const mobileNumber = extractNumber(spokenText);\r\n+        if (mobileNumber) {\r\n+          setMobileNumber(mobileNumber);\r\n+        } else {\r\n+          speak(\"I couldn't find a number in your command.\");\r\n+        }\r\n+      },\r\n+    },\r\n+    {\r\n+      utterance: \"fill mobile number as *\",\r\n+      action: (spokenText) => {\r\n+        if (!spokenText) {\r\n+          speak(\"I couldn't understand the command.\");\r\n+          return;\r\n+        }\r\n+        const mobileNumber = extractNumber(spokenText);\r\n+        if (mobileNumber) {\r\n+          setMobileNumber(mobileNumber);\r\n+        } else {\r\n+          speak(\"I couldn't find a number in your command.\");\r\n+        }\r\n+      },\r\n+    },\r\n+    {\r\n+      utterance: \"set password as *\",\r\n+      action: (spokenText) => {\r\n+        if (!spokenText) {\r\n+          speak(\"I couldn't understand the command.\");\r\n+          return;\r\n+        }\r\n+        const pin = extractNumber(spokenText);\r\n+        if (pin) {\r\n+          setPin(pin);\r\n+        } else {\r\n+          speak(\"I couldn't find a number in your command.\");\r\n+        }\r\n+      },\r\n+    },\r\n+    {\r\n+      utterance: \"enter password as *\",\r\n+      action: (spokenText) => {\r\n+        if (!spokenText) {\r\n+          speak(\"I couldn't understand the command.\");\r\n+          return;\r\n+        }\r\n+        const pin = extractNumber(spokenText);\r\n+        if (pin) {\r\n+          setPin(pin);\r\n+        } else {\r\n+          speak(\"I couldn't find a number in your command.\");\r\n+        }\r\n+      },\r\n+    },\r\n+    {\r\n+      utterance: \"change password to *\",\r\n+      action: (spokenText) => {\r\n+        if (!spokenText) {\r\n+          speak(\"I couldn't understand the command.\");\r\n+          return;\r\n+        }\r\n+        const pin = extractNumber(spokenText);\r\n+        if (pin) {\r\n+          setPin(pin);\r\n+        } else {\r\n+          speak(\"I couldn't find a number in your command.\");\r\n+        }\r\n+      },\r\n+    },\r\n+    {\r\n+      utterance: \"fill password as *\",\r\n+      action: (spokenText) => {\r\n+        if (!spokenText) {\r\n+          speak(\"I couldn't understand the command.\");\r\n+          return;\r\n+        }\r\n+        const pin = extractNumber(spokenText);\r\n+        if (pin) {\r\n+          setPin(pin);\r\n+        } else {\r\n+          speak(\"I couldn't find a number in your command.\");\r\n+        }\r\n+      },\r\n+    },\r\n+    {\r\n+      utterance: \"set pin as *\",\r\n+      action: (spokenText) => {\r\n+        if (!spokenText) {\r\n+          speak(\"I couldn't understand the command.\");\r\n+          return;\r\n+        }\r\n+        const pin = extractNumber(spokenText);\r\n+        if (pin) {\r\n+          setPin(pin);\r\n+        } else {\r\n+          speak(\"I couldn't find a number in your command.\");\r\n+        }\r\n+      },\r\n+    },\r\n+    {\r\n+      utterance: \"set pin to *\",\r\n+      action: (spokenText) => {\r\n+        if (!spokenText) {\r\n+          speak(\"I couldn't understand the command.\");\r\n+          return;\r\n+        }\r\n+        const pin = extractNumber(spokenText);\r\n+        if (pin) {\r\n+          setPin(pin);\r\n+        } else {\r\n+          speak(\"I couldn't find a number in your command.\");\r\n+        }\r\n+      },\r\n+    },\r\n+    {\r\n+      utterance: \"enter pin as *\",\r\n+      action: (spokenText) => {\r\n+        if (!spokenText) {\r\n+          speak(\"I couldn't understand the command.\");\r\n+          return;\r\n+        }\r\n+        const pin = extractNumber(spokenText);\r\n+        if (pin) {\r\n+          setPin(pin);\r\n+        } else {\r\n+          speak(\"I couldn't find a number in your command.\");\r\n+        }\r\n+      },\r\n+    },\r\n+    {\r\n+      utterance: \"fill pin as *\",\r\n+      action: (spokenText) => {\r\n+        if (!spokenText) {\r\n+          speak(\"I couldn't understand the command.\");\r\n+          return;\r\n+        }\r\n+        const pin = extractNumber(spokenText);\r\n+        if (pin) {\r\n+          setPin(pin);\r\n+        } else {\r\n+          speak(\"I couldn't find a number in your command.\");\r\n+        }\r\n+      },\r\n+    },\r\n+    {\r\n+      utterance: \"press login\",\r\n+      action: () => {\r\n+        triggerLogin();\r\n+        speak(\"Attempting to log in.\");\r\n+      },\r\n+    },\r\n+    {\r\n+      utterance: \"press record audio\",\r\n+      action: () => {\r\n+        console.log(\"Record Audio command detected\");\r\n+        setTriggerRecordAudio(true);\r\n+      },\r\n+      response: \"Started\"\r\n+    },\r\n+    \r\n+  ];\r\n+\r\n+  return (\r\n+    <div className=\"speech-bot-container\">\r\n+      <div\r\n+        className={`button-container ${\r\n+          isListening ? \"voicebotframeactive\" : \"voicebotframe\"\r\n+        }`}\r\n+      >\r\n+        {/* <button onClick={isListening ? stopListening : startListening}>\r\n+          {isListening ? \"Stop\" : \"Start\"} Animation\r\n+        </button> */}\r\n+        <img\r\n+          className=\"botimage\"\r\n+          src={chatbotimage}\r\n+          alt=\"\"\r\n+          onClick={isListening ? stopListening : startListening}\r\n+        />\r\n+      </div>\r\n+    </div>\r\n+  );\r\n+};\r\n+\r\n+export default VoiceBot;\r\n+\r\n+{\r\n+  /* // import React, { useState, useEffect, useRef } from \"react\";\r\n+// import { useNavigate, useLocation } from \"react-router-dom\";\r\n+// import Fuse from \"fuse.js\";\r\n+// import \"./VoiceBot.css\";\r\n+\r\n+// const VoiceBot = ({ videoRef }) => {\r\n+//   const [isListening, setIsListening] = useState(false);\r\n+//   const [isSpeaking, setIsSpeaking] = useState(false);\r\n+//   const recognition = useRef(null);\r\n+//   const speechSynthesis = useRef(window.speechSynthesis);\r\n+//   const [hasGreeted, setHasGreeted] = useState(false);\r\n+//   const navigate = useNavigate();\r\n+\r\n+//   useEffect(() => {\r\n+//     recognition.current = new window.webkitSpeechRecognition();\r\n+//     recognition.current.continuous = true;\r\n+//     recognition.current.interimResults = false;\r\n+//     recognition.current.onresult = onResult;\r\n+//     recognition.current.onend = onRecognitionEnd;\r\n+//     recognition.current.starting = false;\r\n+\r\n+//     // Simplified error handling, removed specific handling for 'no-speech'\r\n+//     recognition.current.onerror = (event) => {\r\n+//       console.error(\"Recognition error:\", event.error);\r\n+//       // Check if listening is true and the bot isn't speaking\r\n+//       if (isListening && !isSpeaking) {\r\n+//         // Restart recognition\r\n+//         restartRecognition();\r\n+//       }\r\n+//     };\r\n+\r\n+//     return () => {\r\n+//       if (recognition.current) {\r\n+//         recognition.current.abort();\r\n+//       }\r\n+//     };\r\n+//   }, []);\r\n+\r\n+//   useEffect(() => {\r\n+//     const checkRecognition = () => {\r\n+//       if (isListening && !isSpeaking && !recognition.current.starting) {\r\n+//         console.log(\"Restarting recognition because it's not active.\");\r\n+//         recognition.current.starting = true;\r\n+//         recognition.current.start();\r\n+//         console.log(\"Restarted recognition.\");\r\n+//       }\r\n+//     };\r\n+\r\n+//     const recognitionCheckInterval = setInterval(checkRecognition, 100); // Check every 1 second\r\n+\r\n+//     return () => {\r\n+//       clearInterval(recognitionCheckInterval);\r\n+//     };\r\n+//   }, [isListening, isSpeaking]);\r\n+\r\n+//   const restartRecognition = () => {\r\n+//     if (recognition.current.starting) {\r\n+//       console.log(\"Recognition is already starting or running.\");\r\n+//       return;\r\n+//     }\r\n+\r\n+//     recognition.current.abort(); // Stop any existing recognition process\r\n+//     recognition.current.starting = true;\r\n+//     recognition.current.start();\r\n+//     console.log(\"Recognition restarted.\");\r\n+//   };\r\n+\r\n+//   const historyStack = useRef([]);\r\n+\r\n+//   useEffect(() => {\r\n+//     return () => {\r\n+//       // Clean up the listener when the component unmounts\r\n+//       window.removeEventListener(\"popstate\", handlePopState);\r\n+//     };\r\n+//   }, []);\r\n+\r\n+//   const handlePopState = () => {\r\n+//     // This needs to handle both back and forward browser actions\r\n+//     // Use some logic to determine whether it's a back or forward action\r\n+//     // For simplicity, assume it's always back\r\n+//     historyStack.current.pop();\r\n+//     forwardStack.current.length = 0; // Clear forward stack on manual navigation\r\n+//   };\r\n+  \r\n+\r\n+//   // Add a new entry to the stack whenever navigate is called\r\n+//   const customNavigate = (to, options) => {\r\n+//     historyStack.current.push(to);\r\n+//     navigate(to, options);\r\n+//   };\r\n+\r\n+//   // Listen to popstate events to update the history stack\r\n+//   useEffect(() => {\r\n+//     window.addEventListener(\"popstate\", handlePopState);\r\n+//   }, []);\r\n+\r\n+//   const forwardStack = useRef([]);\r\n+\r\n+//   const goBack = () => {\r\n+//     if (window.history.state && window.history.state.idx > 0) {\r\n+//       window.history.back();\r\n+//       speak(\"Going back\");\r\n+//     } else {\r\n+//       speak(\"Can't go back any further.\");\r\n+//     }\r\n+//   };\r\n+\r\n+//   const goForward = () => {\r\n+//     if (window.history.state && window.history.state.idx < window.history.length - 1) {\r\n+//       window.history.forward();\r\n+//       speak(\"Going forward\");\r\n+//     } else {\r\n+//       speak(\"No forward history available.\");\r\n+//     }\r\n+//   };\r\n+\r\n+//   const playVideo = () => {\r\n+//     if (videoRef.current) {\r\n+//       videoRef.current.play();\r\n+//       speak(\"Playing video.\");\r\n+//     } else {\r\n+//       speak(\"No video to play.\");\r\n+//     }\r\n+//   };\r\n+\r\n+//   const pauseVideo = () => {\r\n+//     if (videoRef.current) {\r\n+//       videoRef.current.pause();\r\n+//       speak(\"Video paused.\");\r\n+//     } else {\r\n+//       speak(\"No video to pause.\");\r\n+//     }\r\n+//   };\r\n+\r\n+//   const scrollAmount = window.innerHeight * 0.82;\r\n+\r\n+//   const scrollUp = () => {\r\n+//     if (window.pageYOffset === 0) {\r\n+//       speak(\"Already at the top of the page.\");\r\n+//     } else {\r\n+//       window.scrollBy(0, -scrollAmount);\r\n+//       speak(\"Scrolled up.\");\r\n+//     }\r\n+//   };\r\n+\r\n+//   const scrollDown = () => {\r\n+//     const maxScrollTop =\r\n+//       document.documentElement.scrollHeight - window.innerHeight;\r\n+//     if (window.pageYOffset >= maxScrollTop) {\r\n+//       speak(\"Already at the bottom of the page.\");\r\n+//     } else {\r\n+//       window.scrollBy(0, scrollAmount);\r\n+//       speak(\"Scrolled down.\");\r\n+//     }\r\n+//   };\r\n+\r\n+//   const scrollToTop = () => {\r\n+//     if (window.pageYOffset === 0) {\r\n+//       speak(\"Already at the top of the page.\");\r\n+//     } else {\r\n+//       window.scrollTo(0, 0);\r\n+//       speak(\"Scrolled to the top of the page.\");\r\n+//     }\r\n+//   };\r\n+\r\n+//   const scrollToBottom = () => {\r\n+//     const maxScrollTop =\r\n+//       document.documentElement.scrollHeight - window.innerHeight;\r\n+//     if (window.pageYOffset >= maxScrollTop) {\r\n+//       speak(\"Already at the bottom of the page.\");\r\n+//     } else {\r\n+//       window.scrollTo(0, document.body.scrollHeight);\r\n+//       speak(\"Scrolled to the bottom of the page.\");\r\n+//     }\r\n+//   };\r\n+\r\n+//   const speak = (message) => {\r\n+//     console.log(\"speak function called with message:\", message);\r\n+//     const utterance = new SpeechSynthesisUtterance(message);\r\n+//     utterance.onend = () => {\r\n+//       setIsSpeaking(false);\r\n+//       console.log(\"Speaking ended.\");\r\n+//       if (isListening && !recognition.current.starting) {\r\n+//         console.log(\"Restarting recognition after speaking.\");\r\n+//         recognition.current.starting = true;\r\n+//         recognition.current.start();\r\n+//         console.log(\"Restarted recognition after speaking.\");\r\n+//       }\r\n+//     };\r\n+\r\n+//     setIsSpeaking(true);\r\n+//     console.log(\"Speaking started.\");\r\n+//     recognition.current.stop(); // Ensure to stop recognition before speaking\r\n+//     speechSynthesis.current.speak(utterance);\r\n+//   };\r\n+\r\n+//   const onResult = (event) => {\r\n+//     const resultIndex = event.resultIndex;\r\n+//     const transcript = event.results[resultIndex][0].transcript\r\n+//       .trim()\r\n+//       .toLowerCase();\r\n+\r\n+//     if (event.results[resultIndex].isFinal) {\r\n+//       console.log(`Recognized text: ${transcript}`);\r\n+//       if (transcript.includes(\"brain\")) {\r\n+//         console.log(\"Wake word heard, processing command...\");\r\n+//         handleCommandWithFuse(transcript.replace(\"brain\", \"\"));\r\n+//       }\r\n+//     }\r\n+//   };\r\n+\r\n+//   const onRecognitionEnd = () => {\r\n+//     recognition.current.starting = false;\r\n+//     if (isListening && !isSpeaking) {\r\n+//       restartRecognition();\r\n+//     }\r\n+//   };\r\n+\r\n+//   useEffect(() => {\r\n+//     if (isListening) {\r\n+//       if (!hasGreeted) {\r\n+//         speak(\"Hello, I'm Brane. How can I help you today?\");\r\n+//         setHasGreeted(true);\r\n+//       } else {\r\n+//         speak(\"Listening.\");\r\n+//       }\r\n+//     }\r\n+//   }, [isListening, hasGreeted]);\r\n+\r\n+\r\n+//   const startListening = () => {\r\n+//     if (!recognition.current.starting) {\r\n+//       setIsListening(true);\r\n+//       restartRecognition();\r\n+//     }\r\n+//   };\r\n+\r\n+//   const stopListening = () => {\r\n+//     setIsListening(false);\r\n+//     recognition.current.abort();\r\n+//     if (speechSynthesis.current.speaking) {\r\n+//       speechSynthesis.current.cancel();\r\n+//     }\r\n+//   };\r\n+\r\n+//   const handleCommandWithFuse = (command) => {\r\n+//     const fuse = new Fuse(commands, { keys: [\"utterance\"], threshold: 0.4 });\r\n+//     const results = fuse.search(command);\r\n+//     const foundCommand = results.length ? results[0].item : null;\r\n+\r\n+//     if (foundCommand) {\r\n+//       console.log(\"Command found:\", foundCommand.utterance);\r\n+\r\n+//       if (foundCommand.action) {\r\n+//         foundCommand.action();\r\n+//       } else if (foundCommand.route) {\r\n+//         navigate(foundCommand.route);\r\n+//       }\r\n+\r\n+//       // Speak after performing the action or navigation\r\n+//       speak(foundCommand.response);\r\n+//     } else {\r\n+//       console.log(\"No command found.\");\r\n+//       speak(\"I'm not sure how to respond to that.\");\r\n+//     }\r\n+//   };\r\n+\r\n+//   const commands = [\r\n+//     {\r\n+//       utterance: \"Hello who are you ?\",\r\n+\r\n+//       response:\r\n+//         \"Hi! This is Brane! your Voice bot from Brane Education How can I Assist you Today ?\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"Hello\",\r\n+\r\n+//       response: \"Hi! How can I assist you today?\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"hello\",\r\n+\r\n+//       response: \"Hi! How can I assist you today?\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"Hi.\",\r\n+\r\n+//       response: \"Hello! How can I assist you today?\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"Hey there\",\r\n+\r\n+//       response: \"Hi! How can I assist you today?\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"Good morning Brane.\",\r\n+\r\n+//       response: \"Hey Hiii! Good morning  ! How can I help you?\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"Good afternoon Brane.\",\r\n+\r\n+//       response: \"Hey Hiii! Good after noon ! How can I help you?\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"Good evening Brane.\",\r\n+\r\n+//       response: \"Hey Hiii! Good evening ! How can I help you?\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"can you please take me to login page\",\r\n+\r\n+//       route: \"/login\",\r\n+\r\n+//       response: \"Here's the Login Page, Please Login\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"please take me to login page\",\r\n+\r\n+//       route: \"/login\",\r\n+\r\n+//       response: \"Here's the Login Page, Please Login\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"Go to login page\",\r\n+\r\n+//       route: \"/login\",\r\n+\r\n+//       response: \"Here's the Login Page, Please Login\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"open login page\",\r\n+\r\n+//       route: \"/login\",\r\n+\r\n+//       response: \"Here's the Login Page, Please Login\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"can you please take me to signup page\",\r\n+\r\n+//       route: \"/signup\",\r\n+\r\n+//       response: \"Here's the signup page. Please proceed With Registration.\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"take me to signup page\",\r\n+\r\n+//       route: \"/signup\",\r\n+\r\n+//       response: \"Here's the signup page. Please proceed With Registration.\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"Go to signup page\",\r\n+\r\n+//       route: \"/signup\",\r\n+\r\n+//       response: \"Here's the signup page. Please proceed With Registration.\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"open signup page\",\r\n+\r\n+//       route: \"/signup\",\r\n+\r\n+//       response: \"Here's the signup page. Please proceed With Registration.\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"Go to face id\",\r\n+\r\n+//       route: \"/login/faceid\",\r\n+\r\n+//       response: \"Here's Face ID Login. Please proceed.\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"Go to face id login\",\r\n+\r\n+//       route: \"/login/faceid\",\r\n+\r\n+//       response: \"Here's Face ID Login. Please proceed.\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"login with face id\",\r\n+\r\n+//       route: \"/login/faceid\",\r\n+\r\n+//       response: \"Here's Face ID Login. Please proceed.\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"login with face\",\r\n+\r\n+//       route: \"/login/faceid\",\r\n+\r\n+//       response: \"Here's Face ID Login. Please proceed.\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"i want to login with face\",\r\n+\r\n+//       route: \"/login/faceid\",\r\n+\r\n+//       response: \"Here's Face ID Login. Please proceed.\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"login with voice\",\r\n+\r\n+//       route: \"/login/voiceid\",\r\n+\r\n+//       response: \"Here's Voice Login. Please proceed.\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"i want to login with voice\",\r\n+\r\n+//       route: \"/login/voiceid\",\r\n+\r\n+//       response: \"Here's Voice Login. Please proceed.\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"go to voice login\",\r\n+\r\n+//       route: \"/login/voiceid\",\r\n+\r\n+//       response: \"Here's Voice Login. Please proceed.\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"login with voice\",\r\n+\r\n+//       route: \"/login/voiceid\",\r\n+\r\n+//       response: \"Here's Voice Login. Please proceed.\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"login with mobile\",\r\n+\r\n+//       route: \"/login/mobile\",\r\n+\r\n+//       response: \"Here's Mobile Login. Please proceed.\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"i want to login with mobile\",\r\n+\r\n+//       route: \"/login/mobile\",\r\n+\r\n+//       response: \"Here's Mobile Login. Please proceed.\",\r\n+//     },\r\n+//     {\r\n+//       utterance: \"go to mobile login\",\r\n+\r\n+//       route: \"/login/mobile\",\r\n+\r\n+//       response: \"Here's Mobile Login. Please proceed.\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"what are platform features\",\r\n+\r\n+//       response:\r\n+//         \"Dashboard, Dynamic time table, Learning Networks, Little Masters, Video Based Dictionary, General Search.\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"Features of platform\",\r\n+\r\n+//       response:\r\n+//         \"Dashboard, Dynamic time table, Learning Networks, Little Masters, Video Based Dictionary, General Search.\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"What does the platform offer\",\r\n+\r\n+//       response:\r\n+//         \"Dashboard, Dynamic time table, Learning Networks, Little Masters, Video Based Dictionary, General Search.\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"Say me the features of platform\",\r\n+\r\n+//       response:\r\n+//         \"Dashboard, Dynamic time table, Learning Networks, Little Masters, Video Based Dictionary, General Search.\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"Say me the services of platform\",\r\n+\r\n+//       response:\r\n+//         \"Dashboard, Dynamic time table, Learning Networks, Little Masters, Video Based Dictionary, General Search.\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"tell me the services offered by the platform\",\r\n+\r\n+//       response:\r\n+//         \"Dashboard, Dynamic time table, Learning Networks, Little Masters, Video Based Dictionary, General Search.\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"explain platform services\",\r\n+\r\n+//       response:\r\n+//         \"Dashboard, Dynamic time table, Learning Networks, Little Masters, Video Based Dictionary, General Search.\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"Give me the Parent voice of Julia Harris\",\r\n+\r\n+//       response:\r\n+//         \"Brane education has helped my son a lot in his studies. He improved a lot in his studies and is now able to score good marks in his exams\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"Play today's motivational video\",\r\n+\r\n+//       response: \"I am playing the video\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"Play today's video\",\r\n+\r\n+//       response: \"I am playing Motivational video\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"Leaders Voice\",\r\n+\r\n+//       response:\r\n+//         \"This Voice-interactive AI Platform is a game Changer. It revolutionizes education.\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"Curriculum Supported by Brane Education\",\r\n+\r\n+//       response:\r\n+//         \"we support multiple Boards let me say few Telangana State Board Andhra Pradesh Board Maharashtra Board Assam Board\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"Boards supported by the platform\",\r\n+\r\n+//       response:\r\n+//         \"we support multiple Boards let me say few Telangana State Board Andhra Pradesh Board Maharashtra Board Assam Board\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"Curriculum\",\r\n+\r\n+//       response:\r\n+//         \"we support multiple Boards let me say few Telangana State Board Andhra Pradesh Board Maharashtra Board Assam Board\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"Go to landing page\",\r\n+\r\n+//       response: \"Okay, I am taking you to the landing page.\",\r\n+\r\n+//       route: \"/childpage\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"take me to landing page\",\r\n+\r\n+//       response: \"Okay, I am taking you to the landing page.\",\r\n+\r\n+//       route: \"/childpage\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"move to landing page\",\r\n+\r\n+//       response: \"Okay, I am taking you to the landing page.\",\r\n+\r\n+//       route: \"/childpage\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"roll back to landing page\",\r\n+\r\n+//       response: \"Okay, I am taking you to the landing page.\",\r\n+\r\n+//       route: \"/childpage\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"move to landing page\",\r\n+\r\n+//       response: \"Okay, I am taking you to the landing page.\",\r\n+\r\n+//       route: \"/childpage\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"what is today's quote\",\r\n+\r\n+//       response:\r\n+//         \"Determination is the power that sees us through all our frustration and obstacles. It helps in building our willpower which is the very basis of success.\",\r\n+\r\n+//       route: \"/childpage\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"Today's Inspirational quote\",\r\n+\r\n+//       response:\r\n+//         \"Determination is the power that sees us through all our frustration and obstacles. It helps in building our willpower which is the very basis of success.\",\r\n+\r\n+//       route: \"/childpage\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"say me today's quote\",\r\n+\r\n+//       response:\r\n+//         \"Determination is the power that sees us through all our frustration and obstacles. It helps in building our willpower which is the very basis of success.\",\r\n+\r\n+//       route: \"/childpage\",\r\n+//     },\r\n+//     {\r\n+//       utterance: \"go back\",\r\n+//       response: \"\",\r\n+//       action: goBack, // Note the use of an action property\r\n+//     },\r\n+//     {\r\n+//       utterance: \"go forward\",\r\n+//       response: \"\",\r\n+//       action: goForward,\r\n+//     },\r\n+//     {\r\n+//       utterance: \"play video\",\r\n+//       // response: \"Playing video.\",\r\n+//       action: playVideo,\r\n+//     },\r\n+//     {\r\n+//       utterance: \"pause video\",\r\n+//       // response: \"Pausing video.\",\r\n+//       action: pauseVideo,\r\n+//     },\r\n+//     {\r\n+//       utterance: \"start video\",\r\n+//       // response: \"Playing video.\",\r\n+//       action: playVideo,\r\n+//     },\r\n+//     {\r\n+//       utterance: \"stop video\",\r\n+//       // response: \"Playing video.\",\r\n+//       action: pauseVideo,\r\n+//     },\r\n+//     {\r\n+//       utterance: \"scroll up\",\r\n+//       // response: \"Scrolling up.\",\r\n+//       action: scrollUp,\r\n+//     },\r\n+//     {\r\n+//       utterance: \"scroll down\",\r\n+//       // response: \"Scrolling down.\",\r\n+//       action: scrollDown,\r\n+//     },\r\n+//     {\r\n+//       utterance: \"go up\",\r\n+\r\n+//       // response: \"Scrolling up.\",\r\n+//       action: scrollUp,\r\n+//     },\r\n+//     {\r\n+//       utterance: \"go down\",\r\n+//       // response: \"Scrolling down.\",\r\n+//       action: scrollDown,\r\n+//     },\r\n+//     {\r\n+//       utterance: \"scroll to top\",\r\n+//       action: scrollToTop,\r\n+//     },\r\n+//     {\r\n+//       utterance: \"scroll to bottom\",\r\n+//       action: scrollToBottom,\r\n+//     },\r\n+//     {\r\n+//       utterance: \"brane stop\",\r\n+//       action: stopListening,\r\n+//     },\r\n+//     {\r\n+//       utterance: \"brane turn off\",\r\n+//       action: stopListening,\r\n+//     },\r\n+//     {\r\n+//       utterance: \"brane stop the bot\",\r\n+//       action: stopListening,\r\n+//     },\r\n+//   ];\r\n+\r\n+//   return (\r\n+//     <div className=\"speech-bot-container\">\r\n+//       <div\r\n+//         className={`button-container ${\r\n+//           isListening ? \"voicebotframeactive\" : \"voicebotframe\"\r\n+//         }`}\r\n+//       >\r\n+//         <button onClick={isListening ? stopListening : startListening}>\r\n+//           {isListening ? \"Stop\" : \"Start\"} Animation\r\n+//         </button>\r\n+//         {/* <button onClick={toggleBotActive}>\r\n+//         {isBotActive ? 'Deactivate Bot' : 'Activate Bot'}\r\n+//       </button> \r\n+//       </div>\r\n+//     </div>\r\n+//   );\r\n+// };\r\n+\r\n+// export default VoiceBot; */\r\n+}\r\n+\r\n+//iska v1\r\n+\r\n+// import React, { useState, useEffect, useRef } from \"react\";\r\n+// import { useNavigate, useLocation } from \"react-router-dom\";\r\n+// import Fuse from \"fuse.js\";\r\n+// import \"./VoiceBot.css\";\r\n+\r\n+// const VoiceBot = ({ videoRef}) => {\r\n+//   const [isListening, setIsListening] = useState(false);\r\n+//   const [isSpeaking, setIsSpeaking] = useState(false);\r\n+//   const recognition = useRef(null);\r\n+//   const speechSynthesis = useRef(window.speechSynthesis);\r\n+//   const [hasGreeted, setHasGreeted] = useState(false);\r\n+//   const navigate = useNavigate();\r\n+\r\n+//  // Initialize speech recognition\r\n+//  useEffect(() => {\r\n+//   recognition.current = new window.webkitSpeechRecognition();\r\n+//   recognition.current.continuous = true;\r\n+//   recognition.current.interimResults = false;\r\n+//   recognition.current.onresult = onResult;\r\n+//   recognition.current.onend = onRecognitionEnd;\r\n+//   recognition.current.starting = false;\r\n+\r\n+//   recognition.current.onerror = (event) => {\r\n+//     console.error(\"Recognition error:\", event.error);\r\n+//     if (isListening && !isSpeaking) {\r\n+//       restartRecognition();\r\n+//     }\r\n+//   };\r\n+\r\n+//   return () => {\r\n+//     if (recognition.current) {\r\n+//       recognition.current.abort();\r\n+//     }\r\n+//   };\r\n+// }, []);\r\n+\r\n+//   // useEffect(() => {\r\n+//   //   const checkRecognition = () => {\r\n+//   //     if (isListening && !isSpeaking && !recognition.current.starting) {\r\n+//   //       console.log(\"Restarting recognition because it's not active.\");\r\n+//   //       recognition.current.starting = true;\r\n+//   //       recognition.current.start();\r\n+//   //       console.log(\"Restarted recognition.\");\r\n+//   //     }\r\n+//   //   };\r\n+\r\n+//   //   const recognitionCheckInterval = setInterval(checkRecognition, 100); // Check every .5 second\r\n+\r\n+//   //   return () => {\r\n+//   //     clearInterval(recognitionCheckInterval);\r\n+//   //   };\r\n+//   // }, [isListening, isSpeaking]);\r\n+\r\n+//   const historyStack = useRef([]);\r\n+\r\n+//   useEffect(() => {\r\n+//     return () => {\r\n+//       // Clean up the listener when the component unmounts\r\n+//       window.removeEventListener(\"popstate\", handlePopState);\r\n+//     };\r\n+//   }, []);\r\n+\r\n+//   const handlePopState = () => {\r\n+//     // This needs to handle both back and forward browser actions\r\n+//     // Use some logic to determine whether it's a back or forward action\r\n+//     // For simplicity, assume it's always back\r\n+//     historyStack.current.pop();\r\n+//     forwardStack.current.length = 0; // Clear forward stack on manual navigation\r\n+//   };\r\n+\r\n+//   // Add a new entry to the stack whenever navigate is called\r\n+//   const customNavigate = (to, options) => {\r\n+//     historyStack.current.push(to);\r\n+//     navigate(to, options);\r\n+//   };\r\n+\r\n+//   // Listen to popstate events to update the history stack\r\n+//   useEffect(() => {\r\n+//     window.addEventListener(\"popstate\", handlePopState);\r\n+//   }, []);\r\n+\r\n+//   const forwardStack = useRef([]);\r\n+\r\n+//   const goBack = () => {\r\n+//     if (window.history.state && window.history.state.idx > 0) {\r\n+//       window.history.back();\r\n+//       speak(\"Going back\");\r\n+//     } else {\r\n+//       speak(\"Can't go back any further.\");\r\n+//     }\r\n+//   };\r\n+\r\n+//   const goForward = () => {\r\n+//     if (window.history.state && window.history.state.idx < window.history.length - 1) {\r\n+//       window.history.forward();\r\n+//       speak(\"Going forward\");\r\n+//     } else {\r\n+//       speak(\"No forward history available.\");\r\n+//     }\r\n+//   };\r\n+\r\n+//   const playVideo = () => {\r\n+//     if (videoRef.current) {\r\n+//       videoRef.current.play();\r\n+//       speak(\"Playing video.\");\r\n+//     } else {\r\n+//       speak(\"No video to play.\");\r\n+//     }\r\n+//   };\r\n+\r\n+//   const pauseVideo = () => {\r\n+//     if (videoRef.current) {\r\n+//       videoRef.current.pause();\r\n+//       speak(\"Video paused.\");\r\n+//     } else {\r\n+//       speak(\"No video to pause.\");\r\n+//     }\r\n+//   };\r\n+\r\n+//   const scrollAmount = window.innerHeight * 0.82;\r\n+\r\n+//   const scrollUp = () => {\r\n+//     if (window.pageYOffset === 0) {\r\n+//       speak(\"Already at the top of the page.\");\r\n+//     } else {\r\n+//       window.scrollBy(0, -scrollAmount);\r\n+//       speak(\"Scrolled up.\");\r\n+//     }\r\n+//   };\r\n+\r\n+//   const scrollDown = () => {\r\n+//     const maxScrollTop =\r\n+//       document.documentElement.scrollHeight - window.innerHeight;\r\n+//     if (window.pageYOffset >= maxScrollTop) {\r\n+//       speak(\"Already at the bottom of the page.\");\r\n+//     } else {\r\n+//       window.scrollBy(0, scrollAmount);\r\n+//       speak(\"Scrolled down.\");\r\n+//     }\r\n+//   };\r\n+\r\n+//   const scrollToTop = () => {\r\n+//     if (window.pageYOffset === 0) {\r\n+//       speak(\"Already at the top of the page.\");\r\n+//     } else {\r\n+//       window.scrollTo(0, 0);\r\n+//       speak(\"Scrolled to the top of the page.\");\r\n+//     }\r\n+//   };\r\n+\r\n+//   const scrollToBottom = () => {\r\n+//     const maxScrollTop =\r\n+//       document.documentElement.scrollHeight - window.innerHeight;\r\n+//     if (window.pageYOffset >= maxScrollTop) {\r\n+//       speak(\"Already at the bottom of the page.\");\r\n+//     } else {\r\n+//       window.scrollTo(0, document.body.scrollHeight);\r\n+//       speak(\"Scrolled to the bottom of the page.\");\r\n+//     }\r\n+//   };\r\n+\r\n+//   const speak = (message) => {\r\n+//     const utterance = new SpeechSynthesisUtterance(message);\r\n+//     utterance.onend = () => {\r\n+//       setIsSpeaking(false);\r\n+//       // Restart recognition after speaking has ended\r\n+//       if (isListening) {\r\n+//         restartRecognition();\r\n+//       }\r\n+//     };\r\n+\r\n+//     setIsSpeaking(true);\r\n+//     // Stop recognition when the bot starts speaking\r\n+//     if (recognition.current) {\r\n+//       recognition.current.abort();\r\n+//     }\r\n+//     speechSynthesis.current.speak(utterance);\r\n+//   };\r\n+\r\n+//   const restartRecognition = () => {\r\n+//     // Check if recognition is not already started and if the bot is set to listen\r\n+//     if (recognition.current && !recognition.current.starting && isListening && !isSpeaking) {\r\n+//       // Only start recognition if it's not already active\r\n+//       if (recognition.current.state !== 'active') {\r\n+//         recognition.current.abort(); // Ensure any ongoing recognition is stopped\r\n+//         recognition.current.starting = true;\r\n+//         recognition.current.start();\r\n+//       }\r\n+//     }\r\n+//   };\r\n+\r\n+//     // Restart recognition when bot finishes speaking and isListening is true\r\n+//     useEffect(() => {\r\n+//       if (!isSpeaking && isListening) {\r\n+//         restartRecognition();\r\n+//       }\r\n+//     }, [isSpeaking, isListening]);\r\n+\r\n+//   const onResult = (event) => {\r\n+//     const resultIndex = event.resultIndex;\r\n+//     const transcript = event.results[resultIndex][0].transcript\r\n+//       .trim()\r\n+//       .toLowerCase();\r\n+\r\n+//     if (event.results[resultIndex].isFinal) {\r\n+//       console.log(`Recognized text: ${transcript}`);\r\n+//       if (transcript.includes(\"brain\")) {\r\n+//         console.log(\"Wake word heard, processing command...\");\r\n+//         handleCommandWithFuse(transcript.replace(\"brain\", \"\"));\r\n+//       }\r\n+//     }\r\n+//   };\r\n+\r\n+//   const onRecognitionEnd = () => {\r\n+//     recognition.current.starting = false;\r\n+//     if (isListening && !isSpeaking) {\r\n+//       restartRecognition();\r\n+//     }\r\n+//   };\r\n+\r\n+//   useEffect(() => {\r\n+//     if (isListening && !hasGreeted) {\r\n+//       speak(\"Hello, I'm Brane. How can I help you today?\");\r\n+//       setHasGreeted(true);\r\n+//     }\r\n+//   }, [isListening, hasGreeted]);\r\n+\r\n+// // Updated startListening function\r\n+// const startListening = () => {\r\n+//   setIsListening(true);\r\n+//   if (recognition.current && !recognition.current.starting) {\r\n+//     recognition.current.start();\r\n+//   }\r\n+// };\r\n+\r\n+// // Updated stopListening function\r\n+// const stopListening = () => {\r\n+//   setIsListening(false);\r\n+//   setIsSpeaking(false); // Reset speaking state\r\n+//   setHasGreeted(false); // Reset greeting state if needed\r\n+//   if (recognition.current) {\r\n+//     recognition.current.abort(); // Stop any ongoing speech recognition\r\n+//   }\r\n+//   if (speechSynthesis.current.speaking) {\r\n+//     speechSynthesis.current.cancel(); // Stop any ongoing speech synthesis\r\n+//   }\r\n+// };\r\n+\r\n+//   const handleCommandWithFuse = (command) => {\r\n+//     const fuse = new Fuse(commands, { keys: [\"utterance\"], threshold: 0.4 });\r\n+//     const results = fuse.search(command);\r\n+//     const foundCommand = results.length ? results[0].item : null;\r\n+\r\n+//     if (foundCommand) {\r\n+//       console.log(\"Command found:\", foundCommand.utterance);\r\n+\r\n+//       if (foundCommand.action) {\r\n+//         foundCommand.action();\r\n+//       } else if (foundCommand.route) {\r\n+//         navigate(foundCommand.route);\r\n+//       }\r\n+\r\n+//       // Speak after performing the action or navigation\r\n+//       speak(foundCommand.response);\r\n+//     } else {\r\n+//       console.log(\"No command found.\");\r\n+//       speak(\"I'm not sure how to respond to that.\");\r\n+//     }\r\n+//   };\r\n+\r\n+//   const commands = [\r\n+//     {\r\n+//       utterance: \"Hello who are you ?\",\r\n+\r\n+//       response:\r\n+//         \"Hi! This is Brane! your Voice bot from Brane Education How can I Assist you Today ?\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"Hello\",\r\n+\r\n+//       response: \"Hi! How can I assist you today?\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"hello\",\r\n+\r\n+//       response: \"Hi! How can I assist you today?\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"Hi.\",\r\n+\r\n+//       response: \"Hello! How can I assist you today?\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"Hey there\",\r\n+\r\n+//       response: \"Hi! How can I assist you today?\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"Good morning Brane.\",\r\n+\r\n+//       response: \"Hey Hiii! Good morning  ! How can I help you?\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"Good afternoon Brane.\",\r\n+\r\n+//       response: \"Hey Hiii! Good after noon ! How can I help you?\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"Good evening Brane.\",\r\n+\r\n+//       response: \"Hey Hiii! Good evening ! How can I help you?\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"can you please take me to login page\",\r\n+\r\n+//       route: \"/login\",\r\n+\r\n+//       response: \"Here's the Login Page, Please Login\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"please take me to login page\",\r\n+\r\n+//       route: \"/login\",\r\n+\r\n+//       response: \"Here's the Login Page, Please Login\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"Go to login page\",\r\n+\r\n+//       route: \"/login\",\r\n+\r\n+//       response: \"Here's the Login Page, Please Login\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"open login page\",\r\n+\r\n+//       route: \"/login\",\r\n+\r\n+//       response: \"Here's the Login Page, Please Login\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"can you please take me to signup page\",\r\n+\r\n+//       route: \"/signup\",\r\n+\r\n+//       response: \"Here's the signup page. Please proceed With Registration.\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"take me to signup page\",\r\n+\r\n+//       route: \"/signup\",\r\n+\r\n+//       response: \"Here's the signup page. Please proceed With Registration.\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"Go to signup page\",\r\n+\r\n+//       route: \"/signup\",\r\n+\r\n+//       response: \"Here's the signup page. Please proceed With Registration.\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"open signup page\",\r\n+\r\n+//       route: \"/signup\",\r\n+\r\n+//       response: \"Here's the signup page. Please proceed With Registration.\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"Go to face id\",\r\n+\r\n+//       route: \"/login/faceid\",\r\n+\r\n+//       response: \"Here's Face ID Login. Please proceed.\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"Go to face id login\",\r\n+\r\n+//       route: \"/login/faceid\",\r\n+\r\n+//       response: \"Here's Face ID Login. Please proceed.\",\r\n+//     },\r\n+//     {\r\n+//       utterance: \"Go to face login\",\r\n+\r\n+//       route: \"/login/faceid\",\r\n+\r\n+//       response: \"Here's Face ID Login. Please proceed.\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"login with face id\",\r\n+\r\n+//       route: \"/login/faceid\",\r\n+\r\n+//       response: \"Here's Face ID Login. Please proceed.\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"login with face\",\r\n+\r\n+//       route: \"/login/faceid\",\r\n+\r\n+//       response: \"Here's Face ID Login. Please proceed.\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"i want to login with face\",\r\n+\r\n+//       route: \"/login/faceid\",\r\n+\r\n+//       response: \"Here's Face ID Login. Please proceed.\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"login with voice\",\r\n+\r\n+//       route: \"/login/voiceid\",\r\n+\r\n+//       response: \"Here's Voice Login. Please proceed.\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"i want to login with voice\",\r\n+\r\n+//       route: \"/login/voiceid\",\r\n+\r\n+//       response: \"Here's Voice Login. Please proceed.\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"go to voice login\",\r\n+\r\n+//       route: \"/login/voiceid\",\r\n+\r\n+//       response: \"Here's Voice Login. Please proceed.\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"login with voice\",\r\n+\r\n+//       route: \"/login/voiceid\",\r\n+\r\n+//       response: \"Here's Voice Login. Please proceed.\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"login with mobile\",\r\n+\r\n+//       route: \"/login/mobile\",\r\n+\r\n+//       response: \"Here's Mobile Login. Please proceed.\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"i want to login with mobile\",\r\n+\r\n+//       route: \"/login/mobile\",\r\n+\r\n+//       response: \"Here's Mobile Login. Please proceed.\",\r\n+//     },\r\n+//     {\r\n+//       utterance: \"go to mobile login\",\r\n+\r\n+//       route: \"/login/mobile\",\r\n+\r\n+//       response: \"Here's Mobile Login. Please proceed.\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"what are platform features\",\r\n+\r\n+//       response:\r\n+//         \"Dashboard, Dynamic time table, Learning Networks, Little Masters, Video Based Dictionary, General Search.\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"Features of platform\",\r\n+\r\n+//       response:\r\n+//         \"Dashboard, Dynamic time table, Learning Networks, Little Masters, Video Based Dictionary, General Search.\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"What does the platform offer\",\r\n+\r\n+//       response:\r\n+//         \"Dashboard, Dynamic time table, Learning Networks, Little Masters, Video Based Dictionary, General Search.\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"Say me the features of platform\",\r\n+\r\n+//       response:\r\n+//         \"Dashboard, Dynamic time table, Learning Networks, Little Masters, Video Based Dictionary, General Search.\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"Say me the services of platform\",\r\n+\r\n+//       response:\r\n+//         \"Dashboard, Dynamic time table, Learning Networks, Little Masters, Video Based Dictionary, General Search.\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"tell me the services offered by the platform\",\r\n+\r\n+//       response:\r\n+//         \"Dashboard, Dynamic time table, Learning Networks, Little Masters, Video Based Dictionary, General Search.\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"explain platform services\",\r\n+\r\n+//       response:\r\n+//         \"Dashboard, Dynamic time table, Learning Networks, Little Masters, Video Based Dictionary, General Search.\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"Give me the Parent voice of Julia Harris\",\r\n+\r\n+//       response:\r\n+//         \"Brane education has helped my son a lot in his studies. He improved a lot in his studies and is now able to score good marks in his exams\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"Play today's motivational video\",\r\n+\r\n+//       response: \"I am playing the video\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"Play today's video\",\r\n+\r\n+//       response: \"I am playing Motivational video\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"Leaders Voice\",\r\n+\r\n+//       response:\r\n+//         \"This Voice-interactive AI Platform is a game Changer. It revolutionizes education.\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"Curriculum Supported by Brane Education\",\r\n+\r\n+//       response:\r\n+//         \"we support multiple Boards let me say few Telangana State Board Andhra Pradesh Board Maharashtra Board Assam Board\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"Boards supported by the platform\",\r\n+\r\n+//       response:\r\n+//         \"we support multiple Boards let me say few Telangana State Board Andhra Pradesh Board Maharashtra Board Assam Board\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"Curriculum\",\r\n+\r\n+//       response:\r\n+//         \"we support multiple Boards let me say few Telangana State Board Andhra Pradesh Board Maharashtra Board Assam Board\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"Go to landing page\",\r\n+\r\n+//       response: \"Okay, I am taking you to the landing page.\",\r\n+\r\n+//       route: \"/childpage\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"take me to landing page\",\r\n+\r\n+//       response: \"Okay, I am taking you to the landing page.\",\r\n+\r\n+//       route: \"/childpage\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"move to landing page\",\r\n+\r\n+//       response: \"Okay, I am taking you to the landing page.\",\r\n+\r\n+//       route: \"/childpage\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"roll back to landing page\",\r\n+\r\n+//       response: \"Okay, I am taking you to the landing page.\",\r\n+\r\n+//       route: \"/childpage\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"move to landing page\",\r\n+\r\n+//       response: \"Okay, I am taking you to the landing page.\",\r\n+\r\n+//       route: \"/childpage\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"what is today's quote\",\r\n+\r\n+//       response:\r\n+//         \"Determination is the power that sees us through all our frustration and obstacles. It helps in building our willpower which is the very basis of success.\",\r\n+\r\n+//       route: \"/childpage\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"Today's Inspirational quote\",\r\n+\r\n+//       response:\r\n+//         \"Determination is the power that sees us through all our frustration and obstacles. It helps in building our willpower which is the very basis of success.\",\r\n+\r\n+//       route: \"/childpage\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"say me today's quote\",\r\n+\r\n+//       response:\r\n+//         \"Determination is the power that sees us through all our frustration and obstacles. It helps in building our willpower which is the very basis of success.\",\r\n+\r\n+//       route: \"/childpage\",\r\n+//     },\r\n+//     {\r\n+//       utterance: \"go back\",\r\n+//       response: \"\",\r\n+//       action: goBack, // Note the use of an action property\r\n+//     },\r\n+//     {\r\n+//       utterance: \"go forward\",\r\n+//       response: \"\",\r\n+//       action: goForward,\r\n+//     },\r\n+//     {\r\n+//       utterance: \"play video\",\r\n+//       // response: \"Playing video.\",\r\n+//       action: playVideo,\r\n+//     },\r\n+//     {\r\n+//       utterance: \"pause video\",\r\n+//       // response: \"Pausing video.\",\r\n+//       action: pauseVideo,\r\n+//     },\r\n+//     {\r\n+//       utterance: \"start video\",\r\n+//       // response: \"Playing video.\",\r\n+//       action: playVideo,\r\n+//     },\r\n+//     {\r\n+//       utterance: \"stop video\",\r\n+//       // response: \"Playing video.\",\r\n+//       action: pauseVideo,\r\n+//     },\r\n+//     {\r\n+//       utterance: \"scroll up\",\r\n+//       // response: \"Scrolling up.\",\r\n+//       action: scrollUp,\r\n+//     },\r\n+//     {\r\n+//       utterance: \"scroll down\",\r\n+//       // response: \"Scrolling down.\",\r\n+//       action: scrollDown,\r\n+//     },\r\n+//     {\r\n+//       utterance: \"go up\",\r\n+\r\n+//       // response: \"Scrolling up.\",\r\n+//       action: scrollUp,\r\n+//     },\r\n+//     {\r\n+//       utterance: \"go down\",\r\n+//       // response: \"Scrolling down.\",\r\n+//       action: scrollDown,\r\n+//     },\r\n+//     {\r\n+//       utterance: \"scroll to top\",\r\n+//       action: scrollToTop,\r\n+//     },\r\n+//     {\r\n+//       utterance: \"scroll to bottom\",\r\n+//       action: scrollToBottom,\r\n+//     },\r\n+//     {\r\n+//       utterance: \"brane stop\",\r\n+//       action: stopListening,\r\n+//     },\r\n+//     {\r\n+//       utterance: \"brane turn off\",\r\n+//       action: stopListening,\r\n+//     },\r\n+//     {\r\n+//       utterance: \"brane stop the bot\",\r\n+//       action: stopListening,\r\n+//     },\r\n+//   ];\r\n+\r\n+//   return (\r\n+//     <div className=\"speech-bot-container\">\r\n+//       <div\r\n+//         className={`button-container ${\r\n+//           isListening ? \"voicebotframeactive\" : \"voicebotframe\"\r\n+//         }`}\r\n+//       >\r\n+//         <button onClick={isListening ? stopListening : startListening}>\r\n+//           {isListening ? \"Stop\" : \"Start\"} Animation\r\n+//         </button>\r\n+//         {/* <button onClick={toggleBotActive}>\r\n+//         {isBotActive ? 'Deactivate Bot' : 'Activate Bot'}\r\n+//       </button> */}\r\n+//       </div>\r\n+//     </div>\r\n+//   );\r\n+// };\r\n+\r\n+// export default VoiceBot;\r\n+\r\n+//Bot Video added but some start issues\r\n+\r\n+// import React, { useState, useEffect, useRef } from \"react\";\r\n+// import { useNavigate, useLocation } from \"react-router-dom\";\r\n+// import Fuse from \"fuse.js\";\r\n+// import \"./VoiceBot.css\";\r\n+\r\n+// const VoiceBot = ({ videoRef }) => {\r\n+//   const [isListening, setIsListening] = useState(false);\r\n+//   const [isSpeaking, setIsSpeaking] = useState(false);\r\n+//   const recognition = useRef(null);\r\n+//   const speechSynthesis = useRef(window.speechSynthesis);\r\n+//   const hasGreeted = useRef(false);\r\n+//   const restartRecognitionTimeout = useRef(null);\r\n+//   const navigate = useNavigate();\r\n+//   const location = useLocation();\r\n+//   const [isRecognitionActive, setIsRecognitionActive] = useState(false); // New state to track recognition status\r\n+\r\n+//   useEffect(() => {\r\n+//     recognition.current = new window.webkitSpeechRecognition();\r\n+//     recognition.current.continuous = true;\r\n+//     recognition.current.interimResults = false;\r\n+//     recognition.current.onresult = onResult;\r\n+//     recognition.current.onend = () => {\r\n+//       console.log(\"Recognition ended.\");\r\n+//       if (isListening) {\r\n+//         startListening();\r\n+//       }\r\n+//     };\r\n+//     recognition.current.onerror = (event) => {\r\n+//       console.error(\"Recognition error:\", event.error);\r\n+//     };\r\n+\r\n+//     return () => {\r\n+//       recognition.current.abort();\r\n+//     };\r\n+//   }, []);\r\n+\r\n+//   // Update useEffect for managing the recognition state based on isListening and isRecognitionActive\r\n+//   useEffect(() => {\r\n+//     if (isListening && !isRecognitionActive) {\r\n+//       startListening();\r\n+//     } else if (!isListening && isRecognitionActive) {\r\n+//       stopListening();\r\n+//     }\r\n+//   }, [isListening, isRecognitionActive]);\r\n+\r\n+//   const goBack = () => {\r\n+//     if (window.history.length > 1) {\r\n+//       navigate(-1);\r\n+//     } else {\r\n+//       speak(\"Can't go back any further.\");\r\n+//     }\r\n+//   };\r\n+\r\n+//   const goForward = () => {\r\n+//     // Unfortunately, there's no direct way to check if you can go forward in the history.\r\n+//     // You might need to manage this state manually based on user navigation.\r\n+//     navigate(1);\r\n+//   };\r\n+\r\n+//   const playVideo = () => {\r\n+//     if (videoRef.current && !videoRef.current.paused) {\r\n+//       speak(\"Video is already playing.\");\r\n+//     } else if (videoRef.current) {\r\n+//       videoRef.current.play();\r\n+//       speak(\"Playing video.\");\r\n+//     } else {\r\n+//       speak(\"No video to play.\");\r\n+//     }\r\n+//   };\r\n+\r\n+//   const pauseVideo = () => {\r\n+//     if (videoRef.current && videoRef.current.paused) {\r\n+//       speak(\"Video is already paused.\");\r\n+//     } else if (videoRef.current) {\r\n+//       videoRef.current.pause();\r\n+//       speak(\"Video paused.\");\r\n+//     } else {\r\n+//       speak(\"No video to pause.\");\r\n+//     }\r\n+//   };\r\n+\r\n+//   const scrollAmount = window.innerHeight * 0.82;\r\n+\r\n+//   const scrollUp = () => {\r\n+//     if (window.pageYOffset === 0) {\r\n+//       speak(\"Already at the top of the page.\");\r\n+//     } else {\r\n+//       window.scrollBy(0, -scrollAmount);\r\n+//       speak(\"Scrolled up.\");\r\n+//     }\r\n+//   };\r\n+\r\n+//   const scrollDown = () => {\r\n+//     const maxScrollTop =\r\n+//       document.documentElement.scrollHeight - window.innerHeight;\r\n+//     if (window.pageYOffset >= maxScrollTop) {\r\n+//       speak(\"Already at the bottom of the page.\");\r\n+//     } else {\r\n+//       window.scrollBy(0, scrollAmount);\r\n+//       speak(\"Scrolled down.\");\r\n+//     }\r\n+//   };\r\n+\r\n+//   const scrollToTop = () => {\r\n+//     if (window.pageYOffset === 0) {\r\n+//       speak(\"Already at the top of the page.\");\r\n+//     } else {\r\n+//       window.scrollTo(0, 0);\r\n+//       speak(\"Scrolled to the top of the page.\");\r\n+//     }\r\n+//   };\r\n+\r\n+//   const scrollToBottom = () => {\r\n+//     const maxScrollTop =\r\n+//       document.documentElement.scrollHeight - window.innerHeight;\r\n+//     if (window.pageYOffset >= maxScrollTop) {\r\n+//       speak(\"Already at the bottom of the page.\");\r\n+//     } else {\r\n+//       window.scrollTo(0, document.body.scrollHeight);\r\n+//       speak(\"Scrolled to the bottom of the page.\");\r\n+//     }\r\n+//   };\r\n+\r\n+//   // const speak = (message) => {\r\n+//   //   const utterance = new SpeechSynthesisUtterance(message);\r\n+//   //   utterance.onend = () => {\r\n+//   //     setIsSpeaking(false);\r\n+//   //     console.log(\"Speaking ended.\");\r\n+//   //     // Only restart recognition if we're still supposed to be listening\r\n+//   //     // if (isListening) {\r\n+//   //     //   if (restartRecognitionTimeout.current) {\r\n+//   //     //     clearTimeout(restartRecognitionTimeout.current);\r\n+//   //     //   }\r\n+//   //     //   restartRecognitionTimeout.current = setTimeout(() => {\r\n+//   //     //     console.log(\"Recognition restarted.\");\r\n+//   //     //     recognition.current.start();\r\n+//   //     //   }, 100); // Delay to prevent immediate restart\r\n+//   //     // }\r\n+//   //     if (isListening && !recognition.current.starting) { // Check the flag before restarting\r\n+//   //       recognition.current.starting = true; // Set the flag when starting recognition\r\n+//   //       recognition.current.start();\r\n+//   //     }\r\n+//   //   };\r\n+\r\n+//   //   setIsSpeaking(true);\r\n+//   //   console.log(\"Speaking started.\");\r\n+//   //   recognition.current.stop(); // Stop recognition when the bot starts speaking\r\n+//   //   speechSynthesis.current.speak(utterance);\r\n+//   // };\r\n+\r\n+//   const speak = (message) => {\r\n+//     console.log(\"speak function called with message:\", message);\r\n+//     const utterance = new SpeechSynthesisUtterance(message);\r\n+//     utterance.onend = () => {\r\n+//       setIsSpeaking(false);\r\n+//       console.log(\"Speaking ended.\");\r\n+//       // Directly handle the restart of recognition here if needed\r\n+//       if (isListening) {\r\n+//         startListening();\r\n+//       }\r\n+//     };\r\n+\r\n+//     setIsSpeaking(true);\r\n+//     console.log(\"Speaking started.\");\r\n+//     recognition.current.stop(); // Ensure to stop recognition before speaking\r\n+//     speechSynthesis.current.speak(utterance);\r\n+//   };\r\n+\r\n+//   const onResult = (event) => {\r\n+//     const resultIndex = event.resultIndex;\r\n+//     const transcript = event.results[resultIndex][0].transcript\r\n+//       .trim()\r\n+//       .toLowerCase();\r\n+\r\n+//     if (event.results[resultIndex].isFinal) {\r\n+//       console.log(`Recognized text: ${transcript}`);\r\n+//       if (transcript.includes(\"brain\")) {\r\n+//         console.log(\"Wake word heard, processing command...\");\r\n+//         handleCommandWithFuse(transcript.replace(\"brain\", \"\"));\r\n+//       }\r\n+//     }\r\n+//   };\r\n+\r\n+//   // const onRecognitionEnd = () => {\r\n+//   //   console.log(\"Recognition ended.\");\r\n+//   //   setIsRecognitionActive(false); // Update state when recognition ends\r\n+//   //   recognition.current.starting = false; // Reset the flag when recognition ends\r\n+//   //   // We now check if the recognition is already running before starting it again\r\n+//   //   if (isListening && !isSpeaking && !recognition.current?.starting) {\r\n+//   //     console.log(\"Restarting recognition.\");\r\n+//   //     recognition.current.start();\r\n+//   //   }\r\n+//   // };\r\n+\r\n+//   // useEffect(() => {\r\n+//   //   if (isListening && !hasGreeted.current) {\r\n+//   //     speak(\"Hello, I'm Brane. How can I assist you today?\");\r\n+//   //     hasGreeted.current = true;\r\n+//   //   } else if (isListening && !isSpeaking) {\r\n+//   //     recognition.current.start();\r\n+//   //   }\r\n+//   // }, [isListening, isSpeaking]);\r\n+\r\n+//   useEffect(() => {\r\n+//     if (isListening && !hasGreeted.current) {\r\n+//       speak(\"Hello, I'm Brane. How can I assist you today?\");\r\n+//       hasGreeted.current = true;\r\n+//     } else if (isListening && !isSpeaking && !recognition.current.starting) {\r\n+//       // Check the flag before starting\r\n+//       recognition.current.starting = true; // Set the flag when starting recognition\r\n+//       recognition.current.start();\r\n+//     }\r\n+//   }, [isListening, isSpeaking]);\r\n+\r\n+//   // const startListening = () => {\r\n+//   //   console.log(\"Attempting to start listening.\");\r\n+//   //   if (recognition.current && !recognition.current.starting) {\r\n+//   //     setIsListening(true);\r\n+//   //     recognition.current.starting = true; // Set the flag when starting recognition\r\n+//   //     recognition.current.start();\r\n+//   //     console.log(\"Listening started.\");\r\n+//   //   }\r\n+//   // };\r\n+\r\n+//   // const stopListening = () => {\r\n+//   //   console.log(\"Stopping listening.\");\r\n+\r\n+//   //   setIsListening(false);\r\n+//   //   recognition.current.stop();\r\n+//   //   if (speechSynthesis.current.speaking) {\r\n+//   //     speechSynthesis.current.cancel();\r\n+//   //   }\r\n+//   //   if (restartRecognitionTimeout.current) {\r\n+//   //     clearTimeout(restartRecognitionTimeout.current);\r\n+//   //   }\r\n+//   //   console.log(\"Listening stopped.\");\r\n+//   // };\r\n+//   // Handle start and stop listening logic\r\n+//   const startListening = () => {\r\n+//     console.log(\"Attempting to start listening.\");\r\n+//     if (!recognition.current.starting) {\r\n+//       setIsListening(true);\r\n+//       recognition.current.starting = true;\r\n+//       recognition.current.start();\r\n+//       console.log(\"Listening started.\");\r\n+//     } else {\r\n+//       console.log(\"Recognition already active.\");\r\n+//     }\r\n+//   };\r\n+\r\n+//   const stopListening = () => {\r\n+//     console.log(\"Stopping listening.\");\r\n+//     if (recognition.current.starting) {\r\n+//       setIsListening(false);\r\n+//       recognition.current.starting = false;\r\n+//       recognition.current.stop();\r\n+//       console.log(\"Listening stopped.\");\r\n+//     } else {\r\n+//       console.log(\"Recognition already inactive.\");\r\n+//     }\r\n+//   };\r\n+\r\n+//   // const handleCommandWithFuse = (command) => {\r\n+//   //   const fuse = new Fuse(commands, { keys: [\"utterance\"], threshold: 0.4 });\r\n+//   //   const results = fuse.search(command);\r\n+//   //   const foundCommand = results.length ? results[0].item : null;\r\n+\r\n+//   //   if (foundCommand) {\r\n+//   //     console.log(\"Command found:\", foundCommand.utterance);\r\n+//   //     speak(foundCommand.response);\r\n+//   //     if (foundCommand.route) {\r\n+//   //       navigate(foundCommand.route); // Navigate to the route specified in the command\r\n+//   //     }\r\n+//   //   } else {\r\n+//   //     console.log(\"No command found.\");\r\n+//   //     speak(\"I'm not sure how to respond to that.\");\r\n+//   //   }\r\n+//   // };\r\n+\r\n+//   const handleCommandWithFuse = (command) => {\r\n+//     const fuse = new Fuse(commands, { keys: [\"utterance\"], threshold: 0.4 });\r\n+//     const results = fuse.search(command);\r\n+//     const foundCommand = results.length ? results[0].item : null;\r\n+\r\n+//     if (foundCommand) {\r\n+//       console.log(\"Command found:\", foundCommand.utterance);\r\n+\r\n+//       if (foundCommand.route) {\r\n+//         if (location.pathname !== foundCommand.route) {\r\n+//           navigate(foundCommand.route);\r\n+//           speak(\r\n+//             `Navigating to ${\r\n+//               foundCommand.routeDescription || \"requested page\"\r\n+//             }.`\r\n+//           );\r\n+//         } else {\r\n+//           speak(\r\n+//             `You are already on the ${\r\n+//               foundCommand.routeDescription || \"requested page\"\r\n+//             }.`\r\n+//           );\r\n+//         }\r\n+//       } else if (foundCommand.action) {\r\n+//         foundCommand.action();\r\n+//       }\r\n+\r\n+//       if (foundCommand.response) {\r\n+//         speak(foundCommand.response);\r\n+//       }\r\n+//     } else {\r\n+//       console.log(\"No command found.\");\r\n+//       speak(\"I'm not sure how to respond to that.\");\r\n+//     }\r\n+//   };\r\n+\r\n+//   const commands = [\r\n+//     {\r\n+//       utterance: \"Hello who are you ?\",\r\n+\r\n+//       response:\r\n+//         \"Hi! This is Brane! your Voice bot from Brane Education How can I Assist you Today ?\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"Hello\",\r\n+\r\n+//       response: \"Hi! How can I assist you today?\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"hello\",\r\n+\r\n+//       response: \"Hi! How can I assist you today?\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"Hi.\",\r\n+\r\n+//       response: \"Hello! How can I assist you today?\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"Hey there\",\r\n+\r\n+//       response: \"Hi! How can I assist you today?\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"Good morning Brane.\",\r\n+\r\n+//       response: \"Hey Hiii! Good morning  ! How can I help you?\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"Good afternoon Brane.\",\r\n+\r\n+//       response: \"Hey Hiii! Good after noon ! How can I help you?\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"Good evening Brane.\",\r\n+\r\n+//       response: \"Hey Hiii! Good evening ! How can I help you?\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"can you please take me to login page\",\r\n+//       route: \"/login\",\r\n+//       routeDescription: \"login page\",\r\n+//       response: \"Navigating to the login page.\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"go to login page\",\r\n+//       route: \"/login\",\r\n+//       routeDescription: \"login page\",\r\n+//       response: \"Navigating to the login page.\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"please take me to login page\",\r\n+//       route: \"/login\",\r\n+//       routeDescription: \"login page\",\r\n+//       response: \"Navigating to the login page.\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"Go to login page\",\r\n+//       route: \"/login\",\r\n+//       routeDescription: \"login page\",\r\n+//       response: \"Navigating to the login page.\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"open login page\",\r\n+//       route: \"/login\",\r\n+//       routeDescription: \"login page\",\r\n+//       response: \"Navigating to the login page.\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"can you please take me to signup page\",\r\n+//       route: \"/signup\",\r\n+//       routeDescription: \"signup page\",\r\n+//       response: \"Navigating to the signup page.\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"take me to signup page\",\r\n+//       route: \"/signup\",\r\n+//       routeDescription: \"signup page\",\r\n+//       response: \"Navigating to the signup page.\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"Go to signup page\",\r\n+//       route: \"/signup\",\r\n+//       routeDescription: \"signup page\",\r\n+//       response: \"Navigating to the signup page.\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"open signup page\",\r\n+//       route: \"/signup\",\r\n+//       routeDescription: \"signup page\",\r\n+//       response: \"Navigating to the signup page.\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"what are platform features\",\r\n+\r\n+//       response:\r\n+//         \"Dashboard, Dynamic time table, Learning Networks, Little Masters, Video Based Dictionary, General Search.\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"Features of platform\",\r\n+\r\n+//       response:\r\n+//         \"Dashboard, Dynamic time table, Learning Networks, Little Masters, Video Based Dictionary, General Search.\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"What does the platform offer\",\r\n+\r\n+//       response:\r\n+//         \"Dashboard, Dynamic time table, Learning Networks, Little Masters, Video Based Dictionary, General Search.\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"Say me the features of platform\",\r\n+\r\n+//       response:\r\n+//         \"Dashboard, Dynamic time table, Learning Networks, Little Masters, Video Based Dictionary, General Search.\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"Say me the services of platform\",\r\n+\r\n+//       response:\r\n+//         \"Dashboard, Dynamic time table, Learning Networks, Little Masters, Video Based Dictionary, General Search.\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"tell me the services offered by the platform\",\r\n+\r\n+//       response:\r\n+//         \"Dashboard, Dynamic time table, Learning Networks, Little Masters, Video Based Dictionary, General Search.\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"explain platform services\",\r\n+\r\n+//       response:\r\n+//         \"Dashboard, Dynamic time table, Learning Networks, Little Masters, Video Based Dictionary, General Search.\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"Give me the Parent voice of Julia Harris\",\r\n+\r\n+//       response:\r\n+//         \"Brane education has helped my son a lot in his studies. He improved a lot in his studies and is now able to score good marks in his exams\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"Play today's motivational video\",\r\n+\r\n+//       response: \"I am playing the video\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"Play today's video\",\r\n+\r\n+//       response: \"I am playing Motivational video\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"Leaders Voice\",\r\n+\r\n+//       response:\r\n+//         \"This Voice-interactive AI Platform is a game Changer. It revolutionizes education.\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"Curriculum Supported by Brane Education\",\r\n+\r\n+//       response:\r\n+//         \"we support multiple Boards let me say few Telangana State Board Andhra Pradesh Board Maharashtra Board Assam Board\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"Boards supported by the platform\",\r\n+\r\n+//       response:\r\n+//         \"we support multiple Boards let me say few Telangana State Board Andhra Pradesh Board Maharashtra Board Assam Board\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"Curriculum\",\r\n+\r\n+//       response:\r\n+//         \"we support multiple Boards let me say few Telangana State Board Andhra Pradesh Board Maharashtra Board Assam Board\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"Go to landing page\",\r\n+\r\n+//       response: \"Okay, I am taking you to the landing page.\",\r\n+\r\n+//       route: \"/childpage\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"take me to landing page\",\r\n+\r\n+//       response: \"Okay, I am taking you to the landing page.\",\r\n+\r\n+//       route: \"/childpage\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"move to landing page\",\r\n+\r\n+//       response: \"Okay, I am taking you to the landing page.\",\r\n+\r\n+//       route: \"/childpage\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"roll back to landing page\",\r\n+\r\n+//       response: \"Okay, I am taking you to the landing page.\",\r\n+\r\n+//       route: \"/childpage\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"move to landing page\",\r\n+\r\n+//       response: \"Okay, I am taking you to the landing page.\",\r\n+\r\n+//       route: \"/childpage\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"what is today's quote\",\r\n+\r\n+//       response:\r\n+//         \"Determination is the power that sees us through all our frustration and obstacles. It helps in building our willpower which is the very basis of success.\",\r\n+\r\n+//       // route: \"/childpage\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"Today's Inspirational quote\",\r\n+\r\n+//       response:\r\n+//         \"Determination is the power that sees us through all our frustration and obstacles. It helps in building our willpower which is the very basis of success.\",\r\n+\r\n+//       // route: \"/childpage\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"say me today's quote\",\r\n+\r\n+//       response:\r\n+//         \"Determination is the power that sees us through all our frustration and obstacles. It helps in building our willpower which is the very basis of success.\",\r\n+\r\n+//       // route: \"/childpage\",\r\n+//     },\r\n+//     {\r\n+//       utterance: \"go back\",\r\n+//       response: \"Going back.\",\r\n+//       action: goBack, // Note the use of an action property\r\n+//     },\r\n+//     {\r\n+//       utterance: \"go forward\",\r\n+//       response: \"Going forward.\",\r\n+//       action: goForward,\r\n+//     },\r\n+//     {\r\n+//       utterance: \"play video\",\r\n+//       // response: \"Playing video.\",\r\n+//       action: playVideo,\r\n+//     },\r\n+//     {\r\n+//       utterance: \"pause video\",\r\n+//       // response: \"Pausing video.\",\r\n+//       action: pauseVideo,\r\n+//     },\r\n+//     {\r\n+//       utterance: \"start video\",\r\n+//       // response: \"Playing video.\",\r\n+//       action: playVideo,\r\n+//     },\r\n+//     {\r\n+//       utterance: \"stop video\",\r\n+//       // response: \"Playing video.\",\r\n+//       action: pauseVideo,\r\n+//     },\r\n+//     {\r\n+//       utterance: \"scroll up\",\r\n+//       // response: \"Scrolling up.\",\r\n+//       action: scrollUp,\r\n+//     },\r\n+//     {\r\n+//       utterance: \"scroll down\",\r\n+//       // response: \"Scrolling down.\",\r\n+//       action: scrollDown,\r\n+//     },\r\n+//     {\r\n+//       utterance: \"go up\",\r\n+\r\n+//       // response: \"Scrolling up.\",\r\n+//       action: scrollUp,\r\n+//     },\r\n+//     {\r\n+//       utterance: \"go down\",\r\n+//       // response: \"Scrolling down.\",\r\n+//       action: scrollDown,\r\n+//     },\r\n+//     {\r\n+//       utterance: \"scroll to top\",\r\n+//       action: scrollToTop,\r\n+//     },\r\n+//     {\r\n+//       utterance: \"scroll to bottom\",\r\n+//       action: scrollToBottom,\r\n+//     },\r\n+//   ];\r\n+//   return (\r\n+//     <div className=\"speech-bot-container\">\r\n+//       <div\r\n+//         className={`button-container ${\r\n+//           isListening ? \"voicebotframeactive\" : \"voicebotframe\"\r\n+//         }`}\r\n+//       >\r\n+//         <div onClick={isListening ? stopListening : startListening}>\r\n+//           <iframe\r\n+//             src={\r\n+//               isListening\r\n+//                 ? \"https://lottie.host/?file=a89aca3f-5407-4052-82c3-2048afca7a9f/NpCdWzLSKD.json\"\r\n+//                 : \"https://lottie.host/?file=d2b6cc0e-fe95-4847-85b5-35365fca7e00/vTudpCuPZq.json\"\r\n+//             }\r\n+//             width=\"120\" // Set your desired width\r\n+//             height=\"120\" // Set your desired height\r\n+//             title={isListening ? \"Stop Animation\" : \"Start Animation\"}\r\n+//             className={isListening ? \"voicebotframeactive\" : \"voicebotframe\"}\r\n+//           ></iframe>\r\n+//           {isListening ? (\r\n+//             <div className=\"overlay\" onClick={stopListening}></div>\r\n+//           ) : (\r\n+//             <div className=\"overlay\" onClick={startListening}></div>\r\n+//           )}\r\n+//         </div>\r\n+//       </div>\r\n+//     </div>\r\n+//   );\r\n+// };\r\n+\r\n+// export default VoiceBot;\r\n+\r\n+// All functionalities but messed up\r\n+\r\n+// import React, { useState, useEffect, useRef } from \"react\";\r\n+// import { useNavigate, useLocation } from \"react-router-dom\";\r\n+// import Fuse from \"fuse.js\";\r\n+// import \"./VoiceBot.css\";\r\n+\r\n+// const VoiceBot = ({ videoRef, takeTestRef, goBackRef }) => {\r\n+//   const [isListening, setIsListening] = useState(false);\r\n+//   const [isSpeaking, setIsSpeaking] = useState(false);\r\n+//   const recognition = useRef(null);\r\n+//   const speechSynthesis = useRef(window.speechSynthesis);\r\n+//   const hasGreeted = useRef(false);\r\n+//   const navigate = useNavigate();\r\n+//   const location = useLocation();\r\n+//   const isRecognitionActive = useRef(false);\r\n+\r\n+//   useEffect(() => {\r\n+//     recognition.current = new window.webkitSpeechRecognition();\r\n+//     recognition.current.continuous = true;\r\n+//     recognition.current.interimResults = false;\r\n+//     recognition.current.onresult = onResult;\r\n+//     recognition.current.onend = onRecognitionEnd;\r\n+\r\n+//     return () => {\r\n+//       if (recognition.current) {\r\n+//         recognition.current.abort();\r\n+//       }\r\n+//     };\r\n+//   }, [location.pathname]);\r\n+\r\n+//   const onResult = (event) => {\r\n+//     const resultIndex = event.resultIndex;\r\n+//     const transcript = event.results[resultIndex][0].transcript\r\n+//       .trim()\r\n+//       .toLowerCase();\r\n+\r\n+//     if (event.results[resultIndex].isFinal) {\r\n+//       console.log(`Recognized text: ${transcript}`);\r\n+//       if (transcript.includes(\"brain\")) {\r\n+//         console.log(\"Wake word heard, processing command...\");\r\n+//         handleCommandWithFuse(transcript.replace(\"brain\", \"\"));\r\n+//       }\r\n+//     }\r\n+//   };\r\n+\r\n+//   const startListening = () => {\r\n+//     if (!isRecognitionActive.current) {\r\n+//       setIsListening(true);\r\n+//       recognition.current.start();\r\n+//       isRecognitionActive.current = true;\r\n+//     }\r\n+//   };\r\n+\r\n+//   const stopListening = () => {\r\n+//     if (isRecognitionActive.current) {\r\n+//       setIsListening(false);\r\n+//       recognition.current.stop();\r\n+//       isRecognitionActive.current = false;\r\n+//     }\r\n+//   };\r\n+\r\n+//   const onRecognitionEnd = () => {\r\n+//     isRecognitionActive.current = false;\r\n+//     if (isListening) {\r\n+//       startListening();\r\n+//     }\r\n+//   };\r\n+\r\n+//   const speak = (message) => {\r\n+//     const utterance = new SpeechSynthesisUtterance(message);\r\n+//     utterance.onend = () => {\r\n+//       setIsSpeaking(false);\r\n+//       if (isListening && !isRecognitionActive.current) {\r\n+//         startListening();\r\n+//       }\r\n+//     };\r\n+\r\n+//     setIsSpeaking(true);\r\n+//     if (isRecognitionActive.current) {\r\n+//       stopListening(); // Adjusted to use stopListening\r\n+//     }\r\n+//     speechSynthesis.current.speak(utterance);\r\n+//   };\r\n+\r\n+//   useEffect(() => {\r\n+//     if (isListening && !hasGreeted.current) {\r\n+//       speak(\"Hello, I'm Brane. How can I assist you today?\");\r\n+//       hasGreeted.current = true;\r\n+//     }\r\n+//   }, [isListening]);\r\n+\r\n+//   const goBack = () => {\r\n+//     if (window.history.length > 1) {\r\n+//       navigate(-1);\r\n+//     } else {\r\n+//       speak(\"Can't go back any further.\");\r\n+//     }\r\n+//   };\r\n+\r\n+//   const goForward = () => {\r\n+//     // Unfortunately, there's no direct way to check if you can go forward in the history.\r\n+//     // You might need to manage this state manually based on user navigation.\r\n+//     navigate(1);\r\n+//   };\r\n+\r\n+//   const playVideo = () => {\r\n+//     if (videoRef.current && !videoRef.current.paused) {\r\n+//       speak(\"Video is already playing.\");\r\n+//     } else if (videoRef.current) {\r\n+//       videoRef.current.play();\r\n+//       speak(\"Playing video.\");\r\n+//     } else {\r\n+//       speak(\"No video to play.\");\r\n+//     }\r\n+//   };\r\n+\r\n+//   const pauseVideo = () => {\r\n+//     if (videoRef.current && videoRef.current.paused) {\r\n+//       speak(\"Video is already paused.\");\r\n+//     } else if (videoRef.current) {\r\n+//       videoRef.current.pause();\r\n+//       speak(\"Video paused.\");\r\n+//     } else {\r\n+//       speak(\"No video to pause.\");\r\n+//     }\r\n+//   };\r\n+\r\n+//   const scrollAmount = window.innerHeight * 0.82;\r\n+\r\n+//   const scrollUp = () => {\r\n+//     if (window.pageYOffset === 0) {\r\n+//       speak(\"Already at the top of the page.\");\r\n+//     } else {\r\n+//       window.scrollBy(0, -scrollAmount);\r\n+//       speak(\"Scrolled up.\");\r\n+//     }\r\n+//   };\r\n+\r\n+//   const scrollDown = () => {\r\n+//     const maxScrollTop =\r\n+//       document.documentElement.scrollHeight - window.innerHeight;\r\n+//     if (window.pageYOffset >= maxScrollTop) {\r\n+//       speak(\"Already at the bottom of the page.\");\r\n+//     } else {\r\n+//       window.scrollBy(0, scrollAmount);\r\n+//       speak(\"Scrolled down.\");\r\n+//     }\r\n+//   };\r\n+\r\n+//   const scrollToTop = () => {\r\n+//     if (window.pageYOffset === 0) {\r\n+//       speak(\"Already at the top of the page.\");\r\n+//     } else {\r\n+//       window.scrollTo(0, 0);\r\n+//       speak(\"Scrolled to the top of the page.\");\r\n+//     }\r\n+//   };\r\n+\r\n+//   const scrollToBottom = () => {\r\n+//     const maxScrollTop =\r\n+//       document.documentElement.scrollHeight - window.innerHeight;\r\n+//     if (window.pageYOffset >= maxScrollTop) {\r\n+//       speak(\"Already at the bottom of the page.\");\r\n+//     } else {\r\n+//       window.scrollTo(0, document.body.scrollHeight);\r\n+//       speak(\"Scrolled to the bottom of the page.\");\r\n+//     }\r\n+//   };\r\n+\r\n+//   // const speak = (message) => {\r\n+//   //   const utterance = new SpeechSynthesisUtterance(message);\r\n+//   //   utterance.onend = () => {\r\n+//   //     setIsSpeaking(false);\r\n+//   //     console.log(\"Speaking ended.\");\r\n+//   //     // Only restart recognition if we're still supposed to be listening\r\n+//   //     // if (isListening) {\r\n+//   //     //   if (restartRecognitionTimeout.current) {\r\n+//   //     //     clearTimeout(restartRecognitionTimeout.current);\r\n+//   //     //   }\r\n+//   //     //   restartRecognitionTimeout.current = setTimeout(() => {\r\n+//   //     //     console.log(\"Recognition restarted.\");\r\n+//   //     //     recognition.current.start();\r\n+//   //     //   }, 100); // Delay to prevent immediate restart\r\n+//   //     // }\r\n+//   //     if (isListening && !recognition.current.starting) { // Check the flag before restarting\r\n+//   //       recognition.current.starting = true; // Set the flag when starting recognition\r\n+//   //       recognition.current.start();\r\n+//   //     }\r\n+//   //   };\r\n+\r\n+//   //   setIsSpeaking(true);\r\n+//   //   console.log(\"Speaking started.\");\r\n+//   //   recognition.current.stop(); // Stop recognition when the bot starts speaking\r\n+//   //   speechSynthesis.current.speak(utterance);\r\n+//   // };\r\n+\r\n+//   // const onRecognitionEnd = () => {\r\n+//   //   console.log(\"Recognition ended.\");\r\n+//   //   setIsRecognitionActive(false); // Update state when recognition ends\r\n+//   //   recognition.current.starting = false; // Reset the flag when recognition ends\r\n+//   //   // We now check if the recognition is already running before starting it again\r\n+//   //   if (isListening && !isSpeaking && !recognition.current?.starting) {\r\n+//   //     console.log(\"Restarting recognition.\");\r\n+//   //     recognition.current.start();\r\n+//   //   }\r\n+//   // };\r\n+\r\n+//   // useEffect(() => {\r\n+//   //   if (isListening && !hasGreeted.current) {\r\n+//   //     speak(\"Hello, I'm Brane. How can I assist you today?\");\r\n+//   //     hasGreeted.current = true;\r\n+//   //   } else if (isListening && !isSpeaking) {\r\n+//   //     recognition.current.start();\r\n+//   //   }\r\n+//   // }, [isListening, isSpeaking]);\r\n+\r\n+//   // const startListening = () => {\r\n+//   //   console.log(\"Attempting to start listening.\");\r\n+//   //   if (recognition.current && !recognition.current.starting) {\r\n+//   //     setIsListening(true);\r\n+//   //     recognition.current.starting = true; // Set the flag when starting recognition\r\n+//   //     recognition.current.start();\r\n+//   //     console.log(\"Listening started.\");\r\n+//   //   }\r\n+//   // };\r\n+\r\n+//   // const stopListening = () => {\r\n+//   //   console.log(\"Stopping listening.\");\r\n+\r\n+//   //   setIsListening(false);\r\n+//   //   recognition.current.stop();\r\n+//   //   if (speechSynthesis.current.speaking) {\r\n+//   //     speechSynthesis.current.cancel();\r\n+//   //   }\r\n+//   //   if (restartRecognitionTimeout.current) {\r\n+//   //     clearTimeout(restartRecognitionTimeout.current);\r\n+//   //   }\r\n+//   //   console.log(\"Listening stopped.\");\r\n+//   // };\r\n+//   // Handle start and stop listening logic\r\n+\r\n+//   useEffect(() => {\r\n+//     if (isListening && !hasGreeted.current) {\r\n+//       speak(\"Hello, I'm Brane. How can I assist you today?\");\r\n+//       hasGreeted.current = true;\r\n+//     }\r\n+//   }, [isListening]);\r\n+\r\n+//   // const handleCommandWithFuse = (command) => {\r\n+//   //   const fuse = new Fuse(commands, { keys: [\"utterance\"], threshold: 0.4 });\r\n+//   //   const results = fuse.search(command);\r\n+//   //   const foundCommand = results.length ? results[0].item : null;\r\n+\r\n+//   //   if (foundCommand) {\r\n+//   //     console.log(\"Command found:\", foundCommand.utterance);\r\n+//   //     speak(foundCommand.response);\r\n+//   //     if (foundCommand.route) {\r\n+//   //       navigate(foundCommand.route); // Navigate to the route specified in the command\r\n+//   //     }\r\n+//   //   } else {\r\n+//   //     console.log(\"No command found.\");\r\n+//   //     speak(\"I'm not sure how to respond to that.\");\r\n+//   //   }\r\n+//   // };\r\n+\r\n+//   const handleCommandWithFuse = (command) => {\r\n+//     const fuse = new Fuse(commands, { keys: [\"utterance\"], threshold: 0.4 });\r\n+//     const results = fuse.search(command);\r\n+//     const foundCommand = results.length ? results[0].item : null;\r\n+\r\n+//     if (foundCommand) {\r\n+//       console.log(\"Command found:\", foundCommand.utterance);\r\n+\r\n+//       if (foundCommand.action) {\r\n+//         foundCommand.action();\r\n+//       } else if (foundCommand.route) {\r\n+//         navigate(foundCommand.route);\r\n+//       }\r\n+\r\n+//       if (foundCommand.response) {\r\n+//         speak(foundCommand.response);\r\n+//       }\r\n+//     } else {\r\n+//       console.log(\"No command found.\");\r\n+//       speak(\"I'm not sure how to respond to that.\");\r\n+//     }\r\n+//   };\r\n+\r\n+//   const commands = [\r\n+//     {\r\n+//       utterance: \"Hello who are you ?\",\r\n+\r\n+//       response:\r\n+//         \"Hi! This is Brane! your Voice bot from Brane Education How can I Assist you Today ?\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"Hello\",\r\n+\r\n+//       response: \"Hi! How can I assist you today?\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"hello\",\r\n+\r\n+//       response: \"Hi! How can I assist you today?\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"Hi.\",\r\n+\r\n+//       response: \"Hello! How can I assist you today?\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"Hey there\",\r\n+\r\n+//       response: \"Hi! How can I assist you today?\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"Good morning Brane.\",\r\n+\r\n+//       response: \"Hey Hiii! Good morning  ! How can I help you?\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"Good afternoon Brane.\",\r\n+\r\n+//       response: \"Hey Hiii! Good after noon ! How can I help you?\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"Good evening Brane.\",\r\n+\r\n+//       response: \"Hey Hiii! Good evening ! How can I help you?\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"can you please take me to login page\",\r\n+//       route: \"/login\",\r\n+//       routeDescription: \"login page\",\r\n+//       response: \"Navigating to the login page.\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"go to login page\",\r\n+//       route: \"/login\",\r\n+//       routeDescription: \"login page\",\r\n+//       response: \"Navigating to the login page.\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"please take me to login page\",\r\n+//       route: \"/login\",\r\n+//       routeDescription: \"login page\",\r\n+//       response: \"Navigating to the login page.\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"Go to login page\",\r\n+//       route: \"/login\",\r\n+//       routeDescription: \"login page\",\r\n+//       response: \"Navigating to the login page.\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"open login page\",\r\n+//       route: \"/login\",\r\n+//       routeDescription: \"login page\",\r\n+//       response: \"Navigating to the login page.\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"can you please take me to signup page\",\r\n+//       route: \"/signup\",\r\n+//       routeDescription: \"signup page\",\r\n+//       response: \"Navigating to the signup page.\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"take me to signup page\",\r\n+//       route: \"/signup\",\r\n+//       routeDescription: \"signup page\",\r\n+//       response: \"Navigating to the signup page.\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"Go to signup page\",\r\n+//       route: \"/signup\",\r\n+//       routeDescription: \"signup page\",\r\n+//       response: \"Navigating to the signup page.\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"open signup page\",\r\n+//       route: \"/signup\",\r\n+//       routeDescription: \"signup page\",\r\n+//       response: \"Navigating to the signup page.\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"what are platform features\",\r\n+\r\n+//       response:\r\n+//         \"Dashboard, Dynamic time table, Learning Networks, Little Masters, Video Based Dictionary, General Search.\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"Features of platform\",\r\n+\r\n+//       response:\r\n+//         \"Dashboard, Dynamic time table, Learning Networks, Little Masters, Video Based Dictionary, General Search.\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"What does the platform offer\",\r\n+\r\n+//       response:\r\n+//         \"Dashboard, Dynamic time table, Learning Networks, Little Masters, Video Based Dictionary, General Search.\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"Say me the features of platform\",\r\n+\r\n+//       response:\r\n+//         \"Dashboard, Dynamic time table, Learning Networks, Little Masters, Video Based Dictionary, General Search.\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"Say me the services of platform\",\r\n+\r\n+//       response:\r\n+//         \"Dashboard, Dynamic time table, Learning Networks, Little Masters, Video Based Dictionary, General Search.\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"tell me the services offered by the platform\",\r\n+\r\n+//       response:\r\n+//         \"Dashboard, Dynamic time table, Learning Networks, Little Masters, Video Based Dictionary, General Search.\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"explain platform services\",\r\n+\r\n+//       response:\r\n+//         \"Dashboard, Dynamic time table, Learning Networks, Little Masters, Video Based Dictionary, General Search.\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"Give me the Parent voice of Julia Harris\",\r\n+\r\n+//       response:\r\n+//         \"Brane education has helped my son a lot in his studies. He improved a lot in his studies and is now able to score good marks in his exams\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"Play today's motivational video\",\r\n+\r\n+//       response: \"I am playing the video\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"Play today's video\",\r\n+\r\n+//       response: \"I am playing Motivational video\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"Leaders Voice\",\r\n+\r\n+//       response:\r\n+//         \"This Voice-interactive AI Platform is a game Changer. It revolutionizes education.\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"Curriculum Supported by Brane Education\",\r\n+\r\n+//       response:\r\n+//         \"we support multiple Boards let me say few Telangana State Board Andhra Pradesh Board Maharashtra Board Assam Board\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"Boards supported by the platform\",\r\n+\r\n+//       response:\r\n+//         \"we support multiple Boards let me say few Telangana State Board Andhra Pradesh Board Maharashtra Board Assam Board\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"Curriculum\",\r\n+\r\n+//       response:\r\n+//         \"we support multiple Boards let me say few Telangana State Board Andhra Pradesh Board Maharashtra Board Assam Board\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"Go to landing page\",\r\n+\r\n+//       response: \"Okay, I am taking you to the landing page.\",\r\n+\r\n+//       route: \"/childpage\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"take me to landing page\",\r\n+\r\n+//       response: \"Okay, I am taking you to the landing page.\",\r\n+\r\n+//       route: \"/childpage\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"move to landing page\",\r\n+\r\n+//       response: \"Okay, I am taking you to the landing page.\",\r\n+\r\n+//       route: \"/childpage\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"roll back to landing page\",\r\n+\r\n+//       response: \"Okay, I am taking you to the landing page.\",\r\n+\r\n+//       route: \"/childpage\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"move to landing page\",\r\n+\r\n+//       response: \"Okay, I am taking you to the landing page.\",\r\n+\r\n+//       route: \"/childpage\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"what is today's quote\",\r\n+\r\n+//       response:\r\n+//         \"Determination is the power that sees us through all our frustration and obstacles. It helps in building our willpower which is the very basis of success.\",\r\n+\r\n+//       // route: \"/childpage\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"Today's Inspirational quote\",\r\n+\r\n+//       response:\r\n+//         \"Determination is the power that sees us through all our frustration and obstacles. It helps in building our willpower which is the very basis of success.\",\r\n+\r\n+//       // route: \"/childpage\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"say me today's quote\",\r\n+\r\n+//       response:\r\n+//         \"Determination is the power that sees us through all our frustration and obstacles. It helps in building our willpower which is the very basis of success.\",\r\n+\r\n+//       // route: \"/childpage\",\r\n+//     },\r\n+//     {\r\n+//       utterance: \"go back\",\r\n+//       response: \"Going back.\",\r\n+//       action: goBack, // Note the use of an action property\r\n+//     },\r\n+//     {\r\n+//       utterance: \"go forward\",\r\n+//       response: \"Going forward.\",\r\n+//       action: goForward,\r\n+//     },\r\n+//     {\r\n+//       utterance: \"play video\",\r\n+//       // response: \"Playing video.\",\r\n+//       action: playVideo,\r\n+//     },\r\n+//     {\r\n+//       utterance: \"pause video\",\r\n+//       // response: \"Pausing video.\",\r\n+//       action: pauseVideo,\r\n+//     },\r\n+//     {\r\n+//       utterance: \"start video\",\r\n+//       // response: \"Playing video.\",\r\n+//       action: playVideo,\r\n+//     },\r\n+//     {\r\n+//       utterance: \"stop video\",\r\n+//       // response: \"Playing video.\",\r\n+//       action: pauseVideo,\r\n+//     },\r\n+//     {\r\n+//       utterance: \"scroll up\",\r\n+//       // response: \"Scrolling up.\",\r\n+//       action: scrollUp,\r\n+//     },\r\n+//     {\r\n+//       utterance: \"scroll down\",\r\n+//       // response: \"Scrolling down.\",\r\n+//       action: scrollDown,\r\n+//     },\r\n+//     {\r\n+//       utterance: \"go up\",\r\n+\r\n+//       // response: \"Scrolling up.\",\r\n+//       action: scrollUp,\r\n+//     },\r\n+//     {\r\n+//       utterance: \"go down\",\r\n+//       // response: \"Scrolling down.\",\r\n+//       action: scrollDown,\r\n+//     },\r\n+//     {\r\n+//       utterance: \"scroll to top\",\r\n+//       action: scrollToTop,\r\n+//     },\r\n+//     {\r\n+//       utterance: \"scroll to bottom\",\r\n+//       action: scrollToBottom,\r\n+//     },\r\n+//     {\r\n+//       utterance: \"go back\",\r\n+//       action: goBackRef?.current?.click, // Use goBackRef directly\r\n+//       response: \"Going back.\",\r\n+//     },\r\n+//     {\r\n+//       utterance: \"take test\",\r\n+//       action: takeTestRef?.current?.click, // Use takeTestRef directly\r\n+//       response: \"Starting the test.\",\r\n+//     },\r\n+//   ];\r\n+//   return (\r\n+//     <div className=\"speech-bot-container\">\r\n+//       <div\r\n+//         className={`button-container ${\r\n+//           isListening ? \"voicebotframeactive\" : \"voicebotframe\"\r\n+//         }`}\r\n+//       >\r\n+//         <div onClick={isListening ? stopListening : startListening}>\r\n+//           <iframe\r\n+//             src={\r\n+//               isListening\r\n+//                 ? \"https://lottie.host/?file=a89aca3f-5407-4052-82c3-2048afca7a9f/NpCdWzLSKD.json\"\r\n+//                 : \"https://lottie.host/?file=d2b6cc0e-fe95-4847-85b5-35365fca7e00/vTudpCuPZq.json\"\r\n+//             }\r\n+//             width=\"120\" // Set your desired width\r\n+//             height=\"120\" // Set your desired height\r\n+//             title={isListening ? \"Stop Animation\" : \"Start Animation\"}\r\n+//             className={isListening ? \"voicebotframeactive\" : \"voicebotframe\"}\r\n+//           ></iframe>\r\n+//           {isListening ? (\r\n+//             <div className=\"overlay\" onClick={stopListening}></div>\r\n+//           ) : (\r\n+//             <div className=\"overlay\" onClick={startListening}></div>\r\n+//           )}\r\n+//         </div>\r\n+//       </div>\r\n+//     </div>\r\n+//   );\r\n+// };\r\n+\r\n+// export default VoiceBot;\r\n"
                },
                {
                    "date": 1700826016634,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1175,4024 +1175,10 @@\n         speak(\"Attempting to log in.\");\r\n       },\r\n     },\r\n     {\r\n-      utterance: \"press record audio\",\r\n+      utterance: \"press login button\",\r\n       action: () => {\r\n-        console.log(\"Record Audio command detected\");\r\n-        setTriggerRecordAudio(true);\r\n-      },\r\n-      response: \"Started\"\r\n-    },\r\n-    \r\n-  ];\r\n-\r\n-  return (\r\n-    <div className=\"speech-bot-container\">\r\n-      <div\r\n-        className={`button-container ${\r\n-          isListening ? \"voicebotframeactive\" : \"voicebotframe\"\r\n-        }`}\r\n-      >\r\n-        {/* <button onClick={isListening ? stopListening : startListening}>\r\n-          {isListening ? \"Stop\" : \"Start\"} Animation\r\n-        </button> */}\r\n-        <img\r\n-          className=\"botimage\"\r\n-          src={chatbotimage}\r\n-          alt=\"\"\r\n-          onClick={isListening ? stopListening : startListening}\r\n-        />\r\n-      </div>\r\n-    </div>\r\n-  );\r\n-};\r\n-\r\n-export default VoiceBot;\r\n-\r\n-{\r\n-  /* // import React, { useState, useEffect, useRef } from \"react\";\r\n-// import { useNavigate, useLocation } from \"react-router-dom\";\r\n-// import Fuse from \"fuse.js\";\r\n-// import \"./VoiceBot.css\";\r\n-\r\n-// const VoiceBot = ({ videoRef }) => {\r\n-//   const [isListening, setIsListening] = useState(false);\r\n-//   const [isSpeaking, setIsSpeaking] = useState(false);\r\n-//   const recognition = useRef(null);\r\n-//   const speechSynthesis = useRef(window.speechSynthesis);\r\n-//   const [hasGreeted, setHasGreeted] = useState(false);\r\n-//   const navigate = useNavigate();\r\n-\r\n-//   useEffect(() => {\r\n-//     recognition.current = new window.webkitSpeechRecognition();\r\n-//     recognition.current.continuous = true;\r\n-//     recognition.current.interimResults = false;\r\n-//     recognition.current.onresult = onResult;\r\n-//     recognition.current.onend = onRecognitionEnd;\r\n-//     recognition.current.starting = false;\r\n-\r\n-//     // Simplified error handling, removed specific handling for 'no-speech'\r\n-//     recognition.current.onerror = (event) => {\r\n-//       console.error(\"Recognition error:\", event.error);\r\n-//       // Check if listening is true and the bot isn't speaking\r\n-//       if (isListening && !isSpeaking) {\r\n-//         // Restart recognition\r\n-//         restartRecognition();\r\n-//       }\r\n-//     };\r\n-\r\n-//     return () => {\r\n-//       if (recognition.current) {\r\n-//         recognition.current.abort();\r\n-//       }\r\n-//     };\r\n-//   }, []);\r\n-\r\n-//   useEffect(() => {\r\n-//     const checkRecognition = () => {\r\n-//       if (isListening && !isSpeaking && !recognition.current.starting) {\r\n-//         console.log(\"Restarting recognition because it's not active.\");\r\n-//         recognition.current.starting = true;\r\n-//         recognition.current.start();\r\n-//         console.log(\"Restarted recognition.\");\r\n-//       }\r\n-//     };\r\n-\r\n-//     const recognitionCheckInterval = setInterval(checkRecognition, 100); // Check every 1 second\r\n-\r\n-//     return () => {\r\n-//       clearInterval(recognitionCheckInterval);\r\n-//     };\r\n-//   }, [isListening, isSpeaking]);\r\n-\r\n-//   const restartRecognition = () => {\r\n-//     if (recognition.current.starting) {\r\n-//       console.log(\"Recognition is already starting or running.\");\r\n-//       return;\r\n-//     }\r\n-\r\n-//     recognition.current.abort(); // Stop any existing recognition process\r\n-//     recognition.current.starting = true;\r\n-//     recognition.current.start();\r\n-//     console.log(\"Recognition restarted.\");\r\n-//   };\r\n-\r\n-//   const historyStack = useRef([]);\r\n-\r\n-//   useEffect(() => {\r\n-//     return () => {\r\n-//       // Clean up the listener when the component unmounts\r\n-//       window.removeEventListener(\"popstate\", handlePopState);\r\n-//     };\r\n-//   }, []);\r\n-\r\n-//   const handlePopState = () => {\r\n-//     // This needs to handle both back and forward browser actions\r\n-//     // Use some logic to determine whether it's a back or forward action\r\n-//     // For simplicity, assume it's always back\r\n-//     historyStack.current.pop();\r\n-//     forwardStack.current.length = 0; // Clear forward stack on manual navigation\r\n-//   };\r\n-  \r\n-\r\n-//   // Add a new entry to the stack whenever navigate is called\r\n-//   const customNavigate = (to, options) => {\r\n-//     historyStack.current.push(to);\r\n-//     navigate(to, options);\r\n-//   };\r\n-\r\n-//   // Listen to popstate events to update the history stack\r\n-//   useEffect(() => {\r\n-//     window.addEventListener(\"popstate\", handlePopState);\r\n-//   }, []);\r\n-\r\n-//   const forwardStack = useRef([]);\r\n-\r\n-//   const goBack = () => {\r\n-//     if (window.history.state && window.history.state.idx > 0) {\r\n-//       window.history.back();\r\n-//       speak(\"Going back\");\r\n-//     } else {\r\n-//       speak(\"Can't go back any further.\");\r\n-//     }\r\n-//   };\r\n-\r\n-//   const goForward = () => {\r\n-//     if (window.history.state && window.history.state.idx < window.history.length - 1) {\r\n-//       window.history.forward();\r\n-//       speak(\"Going forward\");\r\n-//     } else {\r\n-//       speak(\"No forward history available.\");\r\n-//     }\r\n-//   };\r\n-\r\n-//   const playVideo = () => {\r\n-//     if (videoRef.current) {\r\n-//       videoRef.current.play();\r\n-//       speak(\"Playing video.\");\r\n-//     } else {\r\n-//       speak(\"No video to play.\");\r\n-//     }\r\n-//   };\r\n-\r\n-//   const pauseVideo = () => {\r\n-//     if (videoRef.current) {\r\n-//       videoRef.current.pause();\r\n-//       speak(\"Video paused.\");\r\n-//     } else {\r\n-//       speak(\"No video to pause.\");\r\n-//     }\r\n-//   };\r\n-\r\n-//   const scrollAmount = window.innerHeight * 0.82;\r\n-\r\n-//   const scrollUp = () => {\r\n-//     if (window.pageYOffset === 0) {\r\n-//       speak(\"Already at the top of the page.\");\r\n-//     } else {\r\n-//       window.scrollBy(0, -scrollAmount);\r\n-//       speak(\"Scrolled up.\");\r\n-//     }\r\n-//   };\r\n-\r\n-//   const scrollDown = () => {\r\n-//     const maxScrollTop =\r\n-//       document.documentElement.scrollHeight - window.innerHeight;\r\n-//     if (window.pageYOffset >= maxScrollTop) {\r\n-//       speak(\"Already at the bottom of the page.\");\r\n-//     } else {\r\n-//       window.scrollBy(0, scrollAmount);\r\n-//       speak(\"Scrolled down.\");\r\n-//     }\r\n-//   };\r\n-\r\n-//   const scrollToTop = () => {\r\n-//     if (window.pageYOffset === 0) {\r\n-//       speak(\"Already at the top of the page.\");\r\n-//     } else {\r\n-//       window.scrollTo(0, 0);\r\n-//       speak(\"Scrolled to the top of the page.\");\r\n-//     }\r\n-//   };\r\n-\r\n-//   const scrollToBottom = () => {\r\n-//     const maxScrollTop =\r\n-//       document.documentElement.scrollHeight - window.innerHeight;\r\n-//     if (window.pageYOffset >= maxScrollTop) {\r\n-//       speak(\"Already at the bottom of the page.\");\r\n-//     } else {\r\n-//       window.scrollTo(0, document.body.scrollHeight);\r\n-//       speak(\"Scrolled to the bottom of the page.\");\r\n-//     }\r\n-//   };\r\n-\r\n-//   const speak = (message) => {\r\n-//     console.log(\"speak function called with message:\", message);\r\n-//     const utterance = new SpeechSynthesisUtterance(message);\r\n-//     utterance.onend = () => {\r\n-//       setIsSpeaking(false);\r\n-//       console.log(\"Speaking ended.\");\r\n-//       if (isListening && !recognition.current.starting) {\r\n-//         console.log(\"Restarting recognition after speaking.\");\r\n-//         recognition.current.starting = true;\r\n-//         recognition.current.start();\r\n-//         console.log(\"Restarted recognition after speaking.\");\r\n-//       }\r\n-//     };\r\n-\r\n-//     setIsSpeaking(true);\r\n-//     console.log(\"Speaking started.\");\r\n-//     recognition.current.stop(); // Ensure to stop recognition before speaking\r\n-//     speechSynthesis.current.speak(utterance);\r\n-//   };\r\n-\r\n-//   const onResult = (event) => {\r\n-//     const resultIndex = event.resultIndex;\r\n-//     const transcript = event.results[resultIndex][0].transcript\r\n-//       .trim()\r\n-//       .toLowerCase();\r\n-\r\n-//     if (event.results[resultIndex].isFinal) {\r\n-//       console.log(`Recognized text: ${transcript}`);\r\n-//       if (transcript.includes(\"brain\")) {\r\n-//         console.log(\"Wake word heard, processing command...\");\r\n-//         handleCommandWithFuse(transcript.replace(\"brain\", \"\"));\r\n-//       }\r\n-//     }\r\n-//   };\r\n-\r\n-//   const onRecognitionEnd = () => {\r\n-//     recognition.current.starting = false;\r\n-//     if (isListening && !isSpeaking) {\r\n-//       restartRecognition();\r\n-//     }\r\n-//   };\r\n-\r\n-//   useEffect(() => {\r\n-//     if (isListening) {\r\n-//       if (!hasGreeted) {\r\n-//         speak(\"Hello, I'm Brane. How can I help you today?\");\r\n-//         setHasGreeted(true);\r\n-//       } else {\r\n-//         speak(\"Listening.\");\r\n-//       }\r\n-//     }\r\n-//   }, [isListening, hasGreeted]);\r\n-\r\n-\r\n-//   const startListening = () => {\r\n-//     if (!recognition.current.starting) {\r\n-//       setIsListening(true);\r\n-//       restartRecognition();\r\n-//     }\r\n-//   };\r\n-\r\n-//   const stopListening = () => {\r\n-//     setIsListening(false);\r\n-//     recognition.current.abort();\r\n-//     if (speechSynthesis.current.speaking) {\r\n-//       speechSynthesis.current.cancel();\r\n-//     }\r\n-//   };\r\n-\r\n-//   const handleCommandWithFuse = (command) => {\r\n-//     const fuse = new Fuse(commands, { keys: [\"utterance\"], threshold: 0.4 });\r\n-//     const results = fuse.search(command);\r\n-//     const foundCommand = results.length ? results[0].item : null;\r\n-\r\n-//     if (foundCommand) {\r\n-//       console.log(\"Command found:\", foundCommand.utterance);\r\n-\r\n-//       if (foundCommand.action) {\r\n-//         foundCommand.action();\r\n-//       } else if (foundCommand.route) {\r\n-//         navigate(foundCommand.route);\r\n-//       }\r\n-\r\n-//       // Speak after performing the action or navigation\r\n-//       speak(foundCommand.response);\r\n-//     } else {\r\n-//       console.log(\"No command found.\");\r\n-//       speak(\"I'm not sure how to respond to that.\");\r\n-//     }\r\n-//   };\r\n-\r\n-//   const commands = [\r\n-//     {\r\n-//       utterance: \"Hello who are you ?\",\r\n-\r\n-//       response:\r\n-//         \"Hi! This is Brane! your Voice bot from Brane Education How can I Assist you Today ?\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"Hello\",\r\n-\r\n-//       response: \"Hi! How can I assist you today?\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"hello\",\r\n-\r\n-//       response: \"Hi! How can I assist you today?\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"Hi.\",\r\n-\r\n-//       response: \"Hello! How can I assist you today?\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"Hey there\",\r\n-\r\n-//       response: \"Hi! How can I assist you today?\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"Good morning Brane.\",\r\n-\r\n-//       response: \"Hey Hiii! Good morning  ! How can I help you?\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"Good afternoon Brane.\",\r\n-\r\n-//       response: \"Hey Hiii! Good after noon ! How can I help you?\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"Good evening Brane.\",\r\n-\r\n-//       response: \"Hey Hiii! Good evening ! How can I help you?\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"can you please take me to login page\",\r\n-\r\n-//       route: \"/login\",\r\n-\r\n-//       response: \"Here's the Login Page, Please Login\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"please take me to login page\",\r\n-\r\n-//       route: \"/login\",\r\n-\r\n-//       response: \"Here's the Login Page, Please Login\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"Go to login page\",\r\n-\r\n-//       route: \"/login\",\r\n-\r\n-//       response: \"Here's the Login Page, Please Login\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"open login page\",\r\n-\r\n-//       route: \"/login\",\r\n-\r\n-//       response: \"Here's the Login Page, Please Login\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"can you please take me to signup page\",\r\n-\r\n-//       route: \"/signup\",\r\n-\r\n-//       response: \"Here's the signup page. Please proceed With Registration.\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"take me to signup page\",\r\n-\r\n-//       route: \"/signup\",\r\n-\r\n-//       response: \"Here's the signup page. Please proceed With Registration.\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"Go to signup page\",\r\n-\r\n-//       route: \"/signup\",\r\n-\r\n-//       response: \"Here's the signup page. Please proceed With Registration.\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"open signup page\",\r\n-\r\n-//       route: \"/signup\",\r\n-\r\n-//       response: \"Here's the signup page. Please proceed With Registration.\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"Go to face id\",\r\n-\r\n-//       route: \"/login/faceid\",\r\n-\r\n-//       response: \"Here's Face ID Login. Please proceed.\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"Go to face id login\",\r\n-\r\n-//       route: \"/login/faceid\",\r\n-\r\n-//       response: \"Here's Face ID Login. Please proceed.\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"login with face id\",\r\n-\r\n-//       route: \"/login/faceid\",\r\n-\r\n-//       response: \"Here's Face ID Login. Please proceed.\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"login with face\",\r\n-\r\n-//       route: \"/login/faceid\",\r\n-\r\n-//       response: \"Here's Face ID Login. Please proceed.\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"i want to login with face\",\r\n-\r\n-//       route: \"/login/faceid\",\r\n-\r\n-//       response: \"Here's Face ID Login. Please proceed.\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"login with voice\",\r\n-\r\n-//       route: \"/login/voiceid\",\r\n-\r\n-//       response: \"Here's Voice Login. Please proceed.\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"i want to login with voice\",\r\n-\r\n-//       route: \"/login/voiceid\",\r\n-\r\n-//       response: \"Here's Voice Login. Please proceed.\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"go to voice login\",\r\n-\r\n-//       route: \"/login/voiceid\",\r\n-\r\n-//       response: \"Here's Voice Login. Please proceed.\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"login with voice\",\r\n-\r\n-//       route: \"/login/voiceid\",\r\n-\r\n-//       response: \"Here's Voice Login. Please proceed.\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"login with mobile\",\r\n-\r\n-//       route: \"/login/mobile\",\r\n-\r\n-//       response: \"Here's Mobile Login. Please proceed.\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"i want to login with mobile\",\r\n-\r\n-//       route: \"/login/mobile\",\r\n-\r\n-//       response: \"Here's Mobile Login. Please proceed.\",\r\n-//     },\r\n-//     {\r\n-//       utterance: \"go to mobile login\",\r\n-\r\n-//       route: \"/login/mobile\",\r\n-\r\n-//       response: \"Here's Mobile Login. Please proceed.\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"what are platform features\",\r\n-\r\n-//       response:\r\n-//         \"Dashboard, Dynamic time table, Learning Networks, Little Masters, Video Based Dictionary, General Search.\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"Features of platform\",\r\n-\r\n-//       response:\r\n-//         \"Dashboard, Dynamic time table, Learning Networks, Little Masters, Video Based Dictionary, General Search.\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"What does the platform offer\",\r\n-\r\n-//       response:\r\n-//         \"Dashboard, Dynamic time table, Learning Networks, Little Masters, Video Based Dictionary, General Search.\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"Say me the features of platform\",\r\n-\r\n-//       response:\r\n-//         \"Dashboard, Dynamic time table, Learning Networks, Little Masters, Video Based Dictionary, General Search.\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"Say me the services of platform\",\r\n-\r\n-//       response:\r\n-//         \"Dashboard, Dynamic time table, Learning Networks, Little Masters, Video Based Dictionary, General Search.\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"tell me the services offered by the platform\",\r\n-\r\n-//       response:\r\n-//         \"Dashboard, Dynamic time table, Learning Networks, Little Masters, Video Based Dictionary, General Search.\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"explain platform services\",\r\n-\r\n-//       response:\r\n-//         \"Dashboard, Dynamic time table, Learning Networks, Little Masters, Video Based Dictionary, General Search.\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"Give me the Parent voice of Julia Harris\",\r\n-\r\n-//       response:\r\n-//         \"Brane education has helped my son a lot in his studies. He improved a lot in his studies and is now able to score good marks in his exams\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"Play today's motivational video\",\r\n-\r\n-//       response: \"I am playing the video\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"Play today's video\",\r\n-\r\n-//       response: \"I am playing Motivational video\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"Leaders Voice\",\r\n-\r\n-//       response:\r\n-//         \"This Voice-interactive AI Platform is a game Changer. It revolutionizes education.\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"Curriculum Supported by Brane Education\",\r\n-\r\n-//       response:\r\n-//         \"we support multiple Boards let me say few Telangana State Board Andhra Pradesh Board Maharashtra Board Assam Board\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"Boards supported by the platform\",\r\n-\r\n-//       response:\r\n-//         \"we support multiple Boards let me say few Telangana State Board Andhra Pradesh Board Maharashtra Board Assam Board\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"Curriculum\",\r\n-\r\n-//       response:\r\n-//         \"we support multiple Boards let me say few Telangana State Board Andhra Pradesh Board Maharashtra Board Assam Board\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"Go to landing page\",\r\n-\r\n-//       response: \"Okay, I am taking you to the landing page.\",\r\n-\r\n-//       route: \"/childpage\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"take me to landing page\",\r\n-\r\n-//       response: \"Okay, I am taking you to the landing page.\",\r\n-\r\n-//       route: \"/childpage\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"move to landing page\",\r\n-\r\n-//       response: \"Okay, I am taking you to the landing page.\",\r\n-\r\n-//       route: \"/childpage\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"roll back to landing page\",\r\n-\r\n-//       response: \"Okay, I am taking you to the landing page.\",\r\n-\r\n-//       route: \"/childpage\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"move to landing page\",\r\n-\r\n-//       response: \"Okay, I am taking you to the landing page.\",\r\n-\r\n-//       route: \"/childpage\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"what is today's quote\",\r\n-\r\n-//       response:\r\n-//         \"Determination is the power that sees us through all our frustration and obstacles. It helps in building our willpower which is the very basis of success.\",\r\n-\r\n-//       route: \"/childpage\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"Today's Inspirational quote\",\r\n-\r\n-//       response:\r\n-//         \"Determination is the power that sees us through all our frustration and obstacles. It helps in building our willpower which is the very basis of success.\",\r\n-\r\n-//       route: \"/childpage\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"say me today's quote\",\r\n-\r\n-//       response:\r\n-//         \"Determination is the power that sees us through all our frustration and obstacles. It helps in building our willpower which is the very basis of success.\",\r\n-\r\n-//       route: \"/childpage\",\r\n-//     },\r\n-//     {\r\n-//       utterance: \"go back\",\r\n-//       response: \"\",\r\n-//       action: goBack, // Note the use of an action property\r\n-//     },\r\n-//     {\r\n-//       utterance: \"go forward\",\r\n-//       response: \"\",\r\n-//       action: goForward,\r\n-//     },\r\n-//     {\r\n-//       utterance: \"play video\",\r\n-//       // response: \"Playing video.\",\r\n-//       action: playVideo,\r\n-//     },\r\n-//     {\r\n-//       utterance: \"pause video\",\r\n-//       // response: \"Pausing video.\",\r\n-//       action: pauseVideo,\r\n-//     },\r\n-//     {\r\n-//       utterance: \"start video\",\r\n-//       // response: \"Playing video.\",\r\n-//       action: playVideo,\r\n-//     },\r\n-//     {\r\n-//       utterance: \"stop video\",\r\n-//       // response: \"Playing video.\",\r\n-//       action: pauseVideo,\r\n-//     },\r\n-//     {\r\n-//       utterance: \"scroll up\",\r\n-//       // response: \"Scrolling up.\",\r\n-//       action: scrollUp,\r\n-//     },\r\n-//     {\r\n-//       utterance: \"scroll down\",\r\n-//       // response: \"Scrolling down.\",\r\n-//       action: scrollDown,\r\n-//     },\r\n-//     {\r\n-//       utterance: \"go up\",\r\n-\r\n-//       // response: \"Scrolling up.\",\r\n-//       action: scrollUp,\r\n-//     },\r\n-//     {\r\n-//       utterance: \"go down\",\r\n-//       // response: \"Scrolling down.\",\r\n-//       action: scrollDown,\r\n-//     },\r\n-//     {\r\n-//       utterance: \"scroll to top\",\r\n-//       action: scrollToTop,\r\n-//     },\r\n-//     {\r\n-//       utterance: \"scroll to bottom\",\r\n-//       action: scrollToBottom,\r\n-//     },\r\n-//     {\r\n-//       utterance: \"brane stop\",\r\n-//       action: stopListening,\r\n-//     },\r\n-//     {\r\n-//       utterance: \"brane turn off\",\r\n-//       action: stopListening,\r\n-//     },\r\n-//     {\r\n-//       utterance: \"brane stop the bot\",\r\n-//       action: stopListening,\r\n-//     },\r\n-//   ];\r\n-\r\n-//   return (\r\n-//     <div className=\"speech-bot-container\">\r\n-//       <div\r\n-//         className={`button-container ${\r\n-//           isListening ? \"voicebotframeactive\" : \"voicebotframe\"\r\n-//         }`}\r\n-//       >\r\n-//         <button onClick={isListening ? stopListening : startListening}>\r\n-//           {isListening ? \"Stop\" : \"Start\"} Animation\r\n-//         </button>\r\n-//         {/* <button onClick={toggleBotActive}>\r\n-//         {isBotActive ? 'Deactivate Bot' : 'Activate Bot'}\r\n-//       </button> \r\n-//       </div>\r\n-//     </div>\r\n-//   );\r\n-// };\r\n-\r\n-// export default VoiceBot; */\r\n-}\r\n-\r\n-//iska v1\r\n-\r\n-// import React, { useState, useEffect, useRef } from \"react\";\r\n-// import { useNavigate, useLocation } from \"react-router-dom\";\r\n-// import Fuse from \"fuse.js\";\r\n-// import \"./VoiceBot.css\";\r\n-\r\n-// const VoiceBot = ({ videoRef}) => {\r\n-//   const [isListening, setIsListening] = useState(false);\r\n-//   const [isSpeaking, setIsSpeaking] = useState(false);\r\n-//   const recognition = useRef(null);\r\n-//   const speechSynthesis = useRef(window.speechSynthesis);\r\n-//   const [hasGreeted, setHasGreeted] = useState(false);\r\n-//   const navigate = useNavigate();\r\n-\r\n-//  // Initialize speech recognition\r\n-//  useEffect(() => {\r\n-//   recognition.current = new window.webkitSpeechRecognition();\r\n-//   recognition.current.continuous = true;\r\n-//   recognition.current.interimResults = false;\r\n-//   recognition.current.onresult = onResult;\r\n-//   recognition.current.onend = onRecognitionEnd;\r\n-//   recognition.current.starting = false;\r\n-\r\n-//   recognition.current.onerror = (event) => {\r\n-//     console.error(\"Recognition error:\", event.error);\r\n-//     if (isListening && !isSpeaking) {\r\n-//       restartRecognition();\r\n-//     }\r\n-//   };\r\n-\r\n-//   return () => {\r\n-//     if (recognition.current) {\r\n-//       recognition.current.abort();\r\n-//     }\r\n-//   };\r\n-// }, []);\r\n-\r\n-//   // useEffect(() => {\r\n-//   //   const checkRecognition = () => {\r\n-//   //     if (isListening && !isSpeaking && !recognition.current.starting) {\r\n-//   //       console.log(\"Restarting recognition because it's not active.\");\r\n-//   //       recognition.current.starting = true;\r\n-//   //       recognition.current.start();\r\n-//   //       console.log(\"Restarted recognition.\");\r\n-//   //     }\r\n-//   //   };\r\n-\r\n-//   //   const recognitionCheckInterval = setInterval(checkRecognition, 100); // Check every .5 second\r\n-\r\n-//   //   return () => {\r\n-//   //     clearInterval(recognitionCheckInterval);\r\n-//   //   };\r\n-//   // }, [isListening, isSpeaking]);\r\n-\r\n-//   const historyStack = useRef([]);\r\n-\r\n-//   useEffect(() => {\r\n-//     return () => {\r\n-//       // Clean up the listener when the component unmounts\r\n-//       window.removeEventListener(\"popstate\", handlePopState);\r\n-//     };\r\n-//   }, []);\r\n-\r\n-//   const handlePopState = () => {\r\n-//     // This needs to handle both back and forward browser actions\r\n-//     // Use some logic to determine whether it's a back or forward action\r\n-//     // For simplicity, assume it's always back\r\n-//     historyStack.current.pop();\r\n-//     forwardStack.current.length = 0; // Clear forward stack on manual navigation\r\n-//   };\r\n-\r\n-//   // Add a new entry to the stack whenever navigate is called\r\n-//   const customNavigate = (to, options) => {\r\n-//     historyStack.current.push(to);\r\n-//     navigate(to, options);\r\n-//   };\r\n-\r\n-//   // Listen to popstate events to update the history stack\r\n-//   useEffect(() => {\r\n-//     window.addEventListener(\"popstate\", handlePopState);\r\n-//   }, []);\r\n-\r\n-//   const forwardStack = useRef([]);\r\n-\r\n-//   const goBack = () => {\r\n-//     if (window.history.state && window.history.state.idx > 0) {\r\n-//       window.history.back();\r\n-//       speak(\"Going back\");\r\n-//     } else {\r\n-//       speak(\"Can't go back any further.\");\r\n-//     }\r\n-//   };\r\n-\r\n-//   const goForward = () => {\r\n-//     if (window.history.state && window.history.state.idx < window.history.length - 1) {\r\n-//       window.history.forward();\r\n-//       speak(\"Going forward\");\r\n-//     } else {\r\n-//       speak(\"No forward history available.\");\r\n-//     }\r\n-//   };\r\n-\r\n-//   const playVideo = () => {\r\n-//     if (videoRef.current) {\r\n-//       videoRef.current.play();\r\n-//       speak(\"Playing video.\");\r\n-//     } else {\r\n-//       speak(\"No video to play.\");\r\n-//     }\r\n-//   };\r\n-\r\n-//   const pauseVideo = () => {\r\n-//     if (videoRef.current) {\r\n-//       videoRef.current.pause();\r\n-//       speak(\"Video paused.\");\r\n-//     } else {\r\n-//       speak(\"No video to pause.\");\r\n-//     }\r\n-//   };\r\n-\r\n-//   const scrollAmount = window.innerHeight * 0.82;\r\n-\r\n-//   const scrollUp = () => {\r\n-//     if (window.pageYOffset === 0) {\r\n-//       speak(\"Already at the top of the page.\");\r\n-//     } else {\r\n-//       window.scrollBy(0, -scrollAmount);\r\n-//       speak(\"Scrolled up.\");\r\n-//     }\r\n-//   };\r\n-\r\n-//   const scrollDown = () => {\r\n-//     const maxScrollTop =\r\n-//       document.documentElement.scrollHeight - window.innerHeight;\r\n-//     if (window.pageYOffset >= maxScrollTop) {\r\n-//       speak(\"Already at the bottom of the page.\");\r\n-//     } else {\r\n-//       window.scrollBy(0, scrollAmount);\r\n-//       speak(\"Scrolled down.\");\r\n-//     }\r\n-//   };\r\n-\r\n-//   const scrollToTop = () => {\r\n-//     if (window.pageYOffset === 0) {\r\n-//       speak(\"Already at the top of the page.\");\r\n-//     } else {\r\n-//       window.scrollTo(0, 0);\r\n-//       speak(\"Scrolled to the top of the page.\");\r\n-//     }\r\n-//   };\r\n-\r\n-//   const scrollToBottom = () => {\r\n-//     const maxScrollTop =\r\n-//       document.documentElement.scrollHeight - window.innerHeight;\r\n-//     if (window.pageYOffset >= maxScrollTop) {\r\n-//       speak(\"Already at the bottom of the page.\");\r\n-//     } else {\r\n-//       window.scrollTo(0, document.body.scrollHeight);\r\n-//       speak(\"Scrolled to the bottom of the page.\");\r\n-//     }\r\n-//   };\r\n-\r\n-//   const speak = (message) => {\r\n-//     const utterance = new SpeechSynthesisUtterance(message);\r\n-//     utterance.onend = () => {\r\n-//       setIsSpeaking(false);\r\n-//       // Restart recognition after speaking has ended\r\n-//       if (isListening) {\r\n-//         restartRecognition();\r\n-//       }\r\n-//     };\r\n-\r\n-//     setIsSpeaking(true);\r\n-//     // Stop recognition when the bot starts speaking\r\n-//     if (recognition.current) {\r\n-//       recognition.current.abort();\r\n-//     }\r\n-//     speechSynthesis.current.speak(utterance);\r\n-//   };\r\n-\r\n-//   const restartRecognition = () => {\r\n-//     // Check if recognition is not already started and if the bot is set to listen\r\n-//     if (recognition.current && !recognition.current.starting && isListening && !isSpeaking) {\r\n-//       // Only start recognition if it's not already active\r\n-//       if (recognition.current.state !== 'active') {\r\n-//         recognition.current.abort(); // Ensure any ongoing recognition is stopped\r\n-//         recognition.current.starting = true;\r\n-//         recognition.current.start();\r\n-//       }\r\n-//     }\r\n-//   };\r\n-\r\n-//     // Restart recognition when bot finishes speaking and isListening is true\r\n-//     useEffect(() => {\r\n-//       if (!isSpeaking && isListening) {\r\n-//         restartRecognition();\r\n-//       }\r\n-//     }, [isSpeaking, isListening]);\r\n-\r\n-//   const onResult = (event) => {\r\n-//     const resultIndex = event.resultIndex;\r\n-//     const transcript = event.results[resultIndex][0].transcript\r\n-//       .trim()\r\n-//       .toLowerCase();\r\n-\r\n-//     if (event.results[resultIndex].isFinal) {\r\n-//       console.log(`Recognized text: ${transcript}`);\r\n-//       if (transcript.includes(\"brain\")) {\r\n-//         console.log(\"Wake word heard, processing command...\");\r\n-//         handleCommandWithFuse(transcript.replace(\"brain\", \"\"));\r\n-//       }\r\n-//     }\r\n-//   };\r\n-\r\n-//   const onRecognitionEnd = () => {\r\n-//     recognition.current.starting = false;\r\n-//     if (isListening && !isSpeaking) {\r\n-//       restartRecognition();\r\n-//     }\r\n-//   };\r\n-\r\n-//   useEffect(() => {\r\n-//     if (isListening && !hasGreeted) {\r\n-//       speak(\"Hello, I'm Brane. How can I help you today?\");\r\n-//       setHasGreeted(true);\r\n-//     }\r\n-//   }, [isListening, hasGreeted]);\r\n-\r\n-// // Updated startListening function\r\n-// const startListening = () => {\r\n-//   setIsListening(true);\r\n-//   if (recognition.current && !recognition.current.starting) {\r\n-//     recognition.current.start();\r\n-//   }\r\n-// };\r\n-\r\n-// // Updated stopListening function\r\n-// const stopListening = () => {\r\n-//   setIsListening(false);\r\n-//   setIsSpeaking(false); // Reset speaking state\r\n-//   setHasGreeted(false); // Reset greeting state if needed\r\n-//   if (recognition.current) {\r\n-//     recognition.current.abort(); // Stop any ongoing speech recognition\r\n-//   }\r\n-//   if (speechSynthesis.current.speaking) {\r\n-//     speechSynthesis.current.cancel(); // Stop any ongoing speech synthesis\r\n-//   }\r\n-// };\r\n-\r\n-//   const handleCommandWithFuse = (command) => {\r\n-//     const fuse = new Fuse(commands, { keys: [\"utterance\"], threshold: 0.4 });\r\n-//     const results = fuse.search(command);\r\n-//     const foundCommand = results.length ? results[0].item : null;\r\n-\r\n-//     if (foundCommand) {\r\n-//       console.log(\"Command found:\", foundCommand.utterance);\r\n-\r\n-//       if (foundCommand.action) {\r\n-//         foundCommand.action();\r\n-//       } else if (foundCommand.route) {\r\n-//         navigate(foundCommand.route);\r\n-//       }\r\n-\r\n-//       // Speak after performing the action or navigation\r\n-//       speak(foundCommand.response);\r\n-//     } else {\r\n-//       console.log(\"No command found.\");\r\n-//       speak(\"I'm not sure how to respond to that.\");\r\n-//     }\r\n-//   };\r\n-\r\n-//   const commands = [\r\n-//     {\r\n-//       utterance: \"Hello who are you ?\",\r\n-\r\n-//       response:\r\n-//         \"Hi! This is Brane! your Voice bot from Brane Education How can I Assist you Today ?\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"Hello\",\r\n-\r\n-//       response: \"Hi! How can I assist you today?\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"hello\",\r\n-\r\n-//       response: \"Hi! How can I assist you today?\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"Hi.\",\r\n-\r\n-//       response: \"Hello! How can I assist you today?\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"Hey there\",\r\n-\r\n-//       response: \"Hi! How can I assist you today?\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"Good morning Brane.\",\r\n-\r\n-//       response: \"Hey Hiii! Good morning  ! How can I help you?\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"Good afternoon Brane.\",\r\n-\r\n-//       response: \"Hey Hiii! Good after noon ! How can I help you?\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"Good evening Brane.\",\r\n-\r\n-//       response: \"Hey Hiii! Good evening ! How can I help you?\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"can you please take me to login page\",\r\n-\r\n-//       route: \"/login\",\r\n-\r\n-//       response: \"Here's the Login Page, Please Login\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"please take me to login page\",\r\n-\r\n-//       route: \"/login\",\r\n-\r\n-//       response: \"Here's the Login Page, Please Login\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"Go to login page\",\r\n-\r\n-//       route: \"/login\",\r\n-\r\n-//       response: \"Here's the Login Page, Please Login\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"open login page\",\r\n-\r\n-//       route: \"/login\",\r\n-\r\n-//       response: \"Here's the Login Page, Please Login\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"can you please take me to signup page\",\r\n-\r\n-//       route: \"/signup\",\r\n-\r\n-//       response: \"Here's the signup page. Please proceed With Registration.\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"take me to signup page\",\r\n-\r\n-//       route: \"/signup\",\r\n-\r\n-//       response: \"Here's the signup page. Please proceed With Registration.\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"Go to signup page\",\r\n-\r\n-//       route: \"/signup\",\r\n-\r\n-//       response: \"Here's the signup page. Please proceed With Registration.\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"open signup page\",\r\n-\r\n-//       route: \"/signup\",\r\n-\r\n-//       response: \"Here's the signup page. Please proceed With Registration.\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"Go to face id\",\r\n-\r\n-//       route: \"/login/faceid\",\r\n-\r\n-//       response: \"Here's Face ID Login. Please proceed.\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"Go to face id login\",\r\n-\r\n-//       route: \"/login/faceid\",\r\n-\r\n-//       response: \"Here's Face ID Login. Please proceed.\",\r\n-//     },\r\n-//     {\r\n-//       utterance: \"Go to face login\",\r\n-\r\n-//       route: \"/login/faceid\",\r\n-\r\n-//       response: \"Here's Face ID Login. Please proceed.\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"login with face id\",\r\n-\r\n-//       route: \"/login/faceid\",\r\n-\r\n-//       response: \"Here's Face ID Login. Please proceed.\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"login with face\",\r\n-\r\n-//       route: \"/login/faceid\",\r\n-\r\n-//       response: \"Here's Face ID Login. Please proceed.\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"i want to login with face\",\r\n-\r\n-//       route: \"/login/faceid\",\r\n-\r\n-//       response: \"Here's Face ID Login. Please proceed.\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"login with voice\",\r\n-\r\n-//       route: \"/login/voiceid\",\r\n-\r\n-//       response: \"Here's Voice Login. Please proceed.\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"i want to login with voice\",\r\n-\r\n-//       route: \"/login/voiceid\",\r\n-\r\n-//       response: \"Here's Voice Login. Please proceed.\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"go to voice login\",\r\n-\r\n-//       route: \"/login/voiceid\",\r\n-\r\n-//       response: \"Here's Voice Login. Please proceed.\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"login with voice\",\r\n-\r\n-//       route: \"/login/voiceid\",\r\n-\r\n-//       response: \"Here's Voice Login. Please proceed.\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"login with mobile\",\r\n-\r\n-//       route: \"/login/mobile\",\r\n-\r\n-//       response: \"Here's Mobile Login. Please proceed.\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"i want to login with mobile\",\r\n-\r\n-//       route: \"/login/mobile\",\r\n-\r\n-//       response: \"Here's Mobile Login. Please proceed.\",\r\n-//     },\r\n-//     {\r\n-//       utterance: \"go to mobile login\",\r\n-\r\n-//       route: \"/login/mobile\",\r\n-\r\n-//       response: \"Here's Mobile Login. Please proceed.\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"what are platform features\",\r\n-\r\n-//       response:\r\n-//         \"Dashboard, Dynamic time table, Learning Networks, Little Masters, Video Based Dictionary, General Search.\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"Features of platform\",\r\n-\r\n-//       response:\r\n-//         \"Dashboard, Dynamic time table, Learning Networks, Little Masters, Video Based Dictionary, General Search.\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"What does the platform offer\",\r\n-\r\n-//       response:\r\n-//         \"Dashboard, Dynamic time table, Learning Networks, Little Masters, Video Based Dictionary, General Search.\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"Say me the features of platform\",\r\n-\r\n-//       response:\r\n-//         \"Dashboard, Dynamic time table, Learning Networks, Little Masters, Video Based Dictionary, General Search.\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"Say me the services of platform\",\r\n-\r\n-//       response:\r\n-//         \"Dashboard, Dynamic time table, Learning Networks, Little Masters, Video Based Dictionary, General Search.\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"tell me the services offered by the platform\",\r\n-\r\n-//       response:\r\n-//         \"Dashboard, Dynamic time table, Learning Networks, Little Masters, Video Based Dictionary, General Search.\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"explain platform services\",\r\n-\r\n-//       response:\r\n-//         \"Dashboard, Dynamic time table, Learning Networks, Little Masters, Video Based Dictionary, General Search.\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"Give me the Parent voice of Julia Harris\",\r\n-\r\n-//       response:\r\n-//         \"Brane education has helped my son a lot in his studies. He improved a lot in his studies and is now able to score good marks in his exams\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"Play today's motivational video\",\r\n-\r\n-//       response: \"I am playing the video\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"Play today's video\",\r\n-\r\n-//       response: \"I am playing Motivational video\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"Leaders Voice\",\r\n-\r\n-//       response:\r\n-//         \"This Voice-interactive AI Platform is a game Changer. It revolutionizes education.\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"Curriculum Supported by Brane Education\",\r\n-\r\n-//       response:\r\n-//         \"we support multiple Boards let me say few Telangana State Board Andhra Pradesh Board Maharashtra Board Assam Board\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"Boards supported by the platform\",\r\n-\r\n-//       response:\r\n-//         \"we support multiple Boards let me say few Telangana State Board Andhra Pradesh Board Maharashtra Board Assam Board\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"Curriculum\",\r\n-\r\n-//       response:\r\n-//         \"we support multiple Boards let me say few Telangana State Board Andhra Pradesh Board Maharashtra Board Assam Board\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"Go to landing page\",\r\n-\r\n-//       response: \"Okay, I am taking you to the landing page.\",\r\n-\r\n-//       route: \"/childpage\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"take me to landing page\",\r\n-\r\n-//       response: \"Okay, I am taking you to the landing page.\",\r\n-\r\n-//       route: \"/childpage\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"move to landing page\",\r\n-\r\n-//       response: \"Okay, I am taking you to the landing page.\",\r\n-\r\n-//       route: \"/childpage\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"roll back to landing page\",\r\n-\r\n-//       response: \"Okay, I am taking you to the landing page.\",\r\n-\r\n-//       route: \"/childpage\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"move to landing page\",\r\n-\r\n-//       response: \"Okay, I am taking you to the landing page.\",\r\n-\r\n-//       route: \"/childpage\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"what is today's quote\",\r\n-\r\n-//       response:\r\n-//         \"Determination is the power that sees us through all our frustration and obstacles. It helps in building our willpower which is the very basis of success.\",\r\n-\r\n-//       route: \"/childpage\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"Today's Inspirational quote\",\r\n-\r\n-//       response:\r\n-//         \"Determination is the power that sees us through all our frustration and obstacles. It helps in building our willpower which is the very basis of success.\",\r\n-\r\n-//       route: \"/childpage\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"say me today's quote\",\r\n-\r\n-//       response:\r\n-//         \"Determination is the power that sees us through all our frustration and obstacles. It helps in building our willpower which is the very basis of success.\",\r\n-\r\n-//       route: \"/childpage\",\r\n-//     },\r\n-//     {\r\n-//       utterance: \"go back\",\r\n-//       response: \"\",\r\n-//       action: goBack, // Note the use of an action property\r\n-//     },\r\n-//     {\r\n-//       utterance: \"go forward\",\r\n-//       response: \"\",\r\n-//       action: goForward,\r\n-//     },\r\n-//     {\r\n-//       utterance: \"play video\",\r\n-//       // response: \"Playing video.\",\r\n-//       action: playVideo,\r\n-//     },\r\n-//     {\r\n-//       utterance: \"pause video\",\r\n-//       // response: \"Pausing video.\",\r\n-//       action: pauseVideo,\r\n-//     },\r\n-//     {\r\n-//       utterance: \"start video\",\r\n-//       // response: \"Playing video.\",\r\n-//       action: playVideo,\r\n-//     },\r\n-//     {\r\n-//       utterance: \"stop video\",\r\n-//       // response: \"Playing video.\",\r\n-//       action: pauseVideo,\r\n-//     },\r\n-//     {\r\n-//       utterance: \"scroll up\",\r\n-//       // response: \"Scrolling up.\",\r\n-//       action: scrollUp,\r\n-//     },\r\n-//     {\r\n-//       utterance: \"scroll down\",\r\n-//       // response: \"Scrolling down.\",\r\n-//       action: scrollDown,\r\n-//     },\r\n-//     {\r\n-//       utterance: \"go up\",\r\n-\r\n-//       // response: \"Scrolling up.\",\r\n-//       action: scrollUp,\r\n-//     },\r\n-//     {\r\n-//       utterance: \"go down\",\r\n-//       // response: \"Scrolling down.\",\r\n-//       action: scrollDown,\r\n-//     },\r\n-//     {\r\n-//       utterance: \"scroll to top\",\r\n-//       action: scrollToTop,\r\n-//     },\r\n-//     {\r\n-//       utterance: \"scroll to bottom\",\r\n-//       action: scrollToBottom,\r\n-//     },\r\n-//     {\r\n-//       utterance: \"brane stop\",\r\n-//       action: stopListening,\r\n-//     },\r\n-//     {\r\n-//       utterance: \"brane turn off\",\r\n-//       action: stopListening,\r\n-//     },\r\n-//     {\r\n-//       utterance: \"brane stop the bot\",\r\n-//       action: stopListening,\r\n-//     },\r\n-//   ];\r\n-\r\n-//   return (\r\n-//     <div className=\"speech-bot-container\">\r\n-//       <div\r\n-//         className={`button-container ${\r\n-//           isListening ? \"voicebotframeactive\" : \"voicebotframe\"\r\n-//         }`}\r\n-//       >\r\n-//         <button onClick={isListening ? stopListening : startListening}>\r\n-//           {isListening ? \"Stop\" : \"Start\"} Animation\r\n-//         </button>\r\n-//         {/* <button onClick={toggleBotActive}>\r\n-//         {isBotActive ? 'Deactivate Bot' : 'Activate Bot'}\r\n-//       </button> */}\r\n-//       </div>\r\n-//     </div>\r\n-//   );\r\n-// };\r\n-\r\n-// export default VoiceBot;\r\n-\r\n-//Bot Video added but some start issues\r\n-\r\n-// import React, { useState, useEffect, useRef } from \"react\";\r\n-// import { useNavigate, useLocation } from \"react-router-dom\";\r\n-// import Fuse from \"fuse.js\";\r\n-// import \"./VoiceBot.css\";\r\n-\r\n-// const VoiceBot = ({ videoRef }) => {\r\n-//   const [isListening, setIsListening] = useState(false);\r\n-//   const [isSpeaking, setIsSpeaking] = useState(false);\r\n-//   const recognition = useRef(null);\r\n-//   const speechSynthesis = useRef(window.speechSynthesis);\r\n-//   const hasGreeted = useRef(false);\r\n-//   const restartRecognitionTimeout = useRef(null);\r\n-//   const navigate = useNavigate();\r\n-//   const location = useLocation();\r\n-//   const [isRecognitionActive, setIsRecognitionActive] = useState(false); // New state to track recognition status\r\n-\r\n-//   useEffect(() => {\r\n-//     recognition.current = new window.webkitSpeechRecognition();\r\n-//     recognition.current.continuous = true;\r\n-//     recognition.current.interimResults = false;\r\n-//     recognition.current.onresult = onResult;\r\n-//     recognition.current.onend = () => {\r\n-//       console.log(\"Recognition ended.\");\r\n-//       if (isListening) {\r\n-//         startListening();\r\n-//       }\r\n-//     };\r\n-//     recognition.current.onerror = (event) => {\r\n-//       console.error(\"Recognition error:\", event.error);\r\n-//     };\r\n-\r\n-//     return () => {\r\n-//       recognition.current.abort();\r\n-//     };\r\n-//   }, []);\r\n-\r\n-//   // Update useEffect for managing the recognition state based on isListening and isRecognitionActive\r\n-//   useEffect(() => {\r\n-//     if (isListening && !isRecognitionActive) {\r\n-//       startListening();\r\n-//     } else if (!isListening && isRecognitionActive) {\r\n-//       stopListening();\r\n-//     }\r\n-//   }, [isListening, isRecognitionActive]);\r\n-\r\n-//   const goBack = () => {\r\n-//     if (window.history.length > 1) {\r\n-//       navigate(-1);\r\n-//     } else {\r\n-//       speak(\"Can't go back any further.\");\r\n-//     }\r\n-//   };\r\n-\r\n-//   const goForward = () => {\r\n-//     // Unfortunately, there's no direct way to check if you can go forward in the history.\r\n-//     // You might need to manage this state manually based on user navigation.\r\n-//     navigate(1);\r\n-//   };\r\n-\r\n-//   const playVideo = () => {\r\n-//     if (videoRef.current && !videoRef.current.paused) {\r\n-//       speak(\"Video is already playing.\");\r\n-//     } else if (videoRef.current) {\r\n-//       videoRef.current.play();\r\n-//       speak(\"Playing video.\");\r\n-//     } else {\r\n-//       speak(\"No video to play.\");\r\n-//     }\r\n-//   };\r\n-\r\n-//   const pauseVideo = () => {\r\n-//     if (videoRef.current && videoRef.current.paused) {\r\n-//       speak(\"Video is already paused.\");\r\n-//     } else if (videoRef.current) {\r\n-//       videoRef.current.pause();\r\n-//       speak(\"Video paused.\");\r\n-//     } else {\r\n-//       speak(\"No video to pause.\");\r\n-//     }\r\n-//   };\r\n-\r\n-//   const scrollAmount = window.innerHeight * 0.82;\r\n-\r\n-//   const scrollUp = () => {\r\n-//     if (window.pageYOffset === 0) {\r\n-//       speak(\"Already at the top of the page.\");\r\n-//     } else {\r\n-//       window.scrollBy(0, -scrollAmount);\r\n-//       speak(\"Scrolled up.\");\r\n-//     }\r\n-//   };\r\n-\r\n-//   const scrollDown = () => {\r\n-//     const maxScrollTop =\r\n-//       document.documentElement.scrollHeight - window.innerHeight;\r\n-//     if (window.pageYOffset >= maxScrollTop) {\r\n-//       speak(\"Already at the bottom of the page.\");\r\n-//     } else {\r\n-//       window.scrollBy(0, scrollAmount);\r\n-//       speak(\"Scrolled down.\");\r\n-//     }\r\n-//   };\r\n-\r\n-//   const scrollToTop = () => {\r\n-//     if (window.pageYOffset === 0) {\r\n-//       speak(\"Already at the top of the page.\");\r\n-//     } else {\r\n-//       window.scrollTo(0, 0);\r\n-//       speak(\"Scrolled to the top of the page.\");\r\n-//     }\r\n-//   };\r\n-\r\n-//   const scrollToBottom = () => {\r\n-//     const maxScrollTop =\r\n-//       document.documentElement.scrollHeight - window.innerHeight;\r\n-//     if (window.pageYOffset >= maxScrollTop) {\r\n-//       speak(\"Already at the bottom of the page.\");\r\n-//     } else {\r\n-//       window.scrollTo(0, document.body.scrollHeight);\r\n-//       speak(\"Scrolled to the bottom of the page.\");\r\n-//     }\r\n-//   };\r\n-\r\n-//   // const speak = (message) => {\r\n-//   //   const utterance = new SpeechSynthesisUtterance(message);\r\n-//   //   utterance.onend = () => {\r\n-//   //     setIsSpeaking(false);\r\n-//   //     console.log(\"Speaking ended.\");\r\n-//   //     // Only restart recognition if we're still supposed to be listening\r\n-//   //     // if (isListening) {\r\n-//   //     //   if (restartRecognitionTimeout.current) {\r\n-//   //     //     clearTimeout(restartRecognitionTimeout.current);\r\n-//   //     //   }\r\n-//   //     //   restartRecognitionTimeout.current = setTimeout(() => {\r\n-//   //     //     console.log(\"Recognition restarted.\");\r\n-//   //     //     recognition.current.start();\r\n-//   //     //   }, 100); // Delay to prevent immediate restart\r\n-//   //     // }\r\n-//   //     if (isListening && !recognition.current.starting) { // Check the flag before restarting\r\n-//   //       recognition.current.starting = true; // Set the flag when starting recognition\r\n-//   //       recognition.current.start();\r\n-//   //     }\r\n-//   //   };\r\n-\r\n-//   //   setIsSpeaking(true);\r\n-//   //   console.log(\"Speaking started.\");\r\n-//   //   recognition.current.stop(); // Stop recognition when the bot starts speaking\r\n-//   //   speechSynthesis.current.speak(utterance);\r\n-//   // };\r\n-\r\n-//   const speak = (message) => {\r\n-//     console.log(\"speak function called with message:\", message);\r\n-//     const utterance = new SpeechSynthesisUtterance(message);\r\n-//     utterance.onend = () => {\r\n-//       setIsSpeaking(false);\r\n-//       console.log(\"Speaking ended.\");\r\n-//       // Directly handle the restart of recognition here if needed\r\n-//       if (isListening) {\r\n-//         startListening();\r\n-//       }\r\n-//     };\r\n-\r\n-//     setIsSpeaking(true);\r\n-//     console.log(\"Speaking started.\");\r\n-//     recognition.current.stop(); // Ensure to stop recognition before speaking\r\n-//     speechSynthesis.current.speak(utterance);\r\n-//   };\r\n-\r\n-//   const onResult = (event) => {\r\n-//     const resultIndex = event.resultIndex;\r\n-//     const transcript = event.results[resultIndex][0].transcript\r\n-//       .trim()\r\n-//       .toLowerCase();\r\n-\r\n-//     if (event.results[resultIndex].isFinal) {\r\n-//       console.log(`Recognized text: ${transcript}`);\r\n-//       if (transcript.includes(\"brain\")) {\r\n-//         console.log(\"Wake word heard, processing command...\");\r\n-//         handleCommandWithFuse(transcript.replace(\"brain\", \"\"));\r\n-//       }\r\n-//     }\r\n-//   };\r\n-\r\n-//   // const onRecognitionEnd = () => {\r\n-//   //   console.log(\"Recognition ended.\");\r\n-//   //   setIsRecognitionActive(false); // Update state when recognition ends\r\n-//   //   recognition.current.starting = false; // Reset the flag when recognition ends\r\n-//   //   // We now check if the recognition is already running before starting it again\r\n-//   //   if (isListening && !isSpeaking && !recognition.current?.starting) {\r\n-//   //     console.log(\"Restarting recognition.\");\r\n-//   //     recognition.current.start();\r\n-//   //   }\r\n-//   // };\r\n-\r\n-//   // useEffect(() => {\r\n-//   //   if (isListening && !hasGreeted.current) {\r\n-//   //     speak(\"Hello, I'm Brane. How can I assist you today?\");\r\n-//   //     hasGreeted.current = true;\r\n-//   //   } else if (isListening && !isSpeaking) {\r\n-//   //     recognition.current.start();\r\n-//   //   }\r\n-//   // }, [isListening, isSpeaking]);\r\n-\r\n-//   useEffect(() => {\r\n-//     if (isListening && !hasGreeted.current) {\r\n-//       speak(\"Hello, I'm Brane. How can I assist you today?\");\r\n-//       hasGreeted.current = true;\r\n-//     } else if (isListening && !isSpeaking && !recognition.current.starting) {\r\n-//       // Check the flag before starting\r\n-//       recognition.current.starting = true; // Set the flag when starting recognition\r\n-//       recognition.current.start();\r\n-//     }\r\n-//   }, [isListening, isSpeaking]);\r\n-\r\n-//   // const startListening = () => {\r\n-//   //   console.log(\"Attempting to start listening.\");\r\n-//   //   if (recognition.current && !recognition.current.starting) {\r\n-//   //     setIsListening(true);\r\n-//   //     recognition.current.starting = true; // Set the flag when starting recognition\r\n-//   //     recognition.current.start();\r\n-//   //     console.log(\"Listening started.\");\r\n-//   //   }\r\n-//   // };\r\n-\r\n-//   // const stopListening = () => {\r\n-//   //   console.log(\"Stopping listening.\");\r\n-\r\n-//   //   setIsListening(false);\r\n-//   //   recognition.current.stop();\r\n-//   //   if (speechSynthesis.current.speaking) {\r\n-//   //     speechSynthesis.current.cancel();\r\n-//   //   }\r\n-//   //   if (restartRecognitionTimeout.current) {\r\n-//   //     clearTimeout(restartRecognitionTimeout.current);\r\n-//   //   }\r\n-//   //   console.log(\"Listening stopped.\");\r\n-//   // };\r\n-//   // Handle start and stop listening logic\r\n-//   const startListening = () => {\r\n-//     console.log(\"Attempting to start listening.\");\r\n-//     if (!recognition.current.starting) {\r\n-//       setIsListening(true);\r\n-//       recognition.current.starting = true;\r\n-//       recognition.current.start();\r\n-//       console.log(\"Listening started.\");\r\n-//     } else {\r\n-//       console.log(\"Recognition already active.\");\r\n-//     }\r\n-//   };\r\n-\r\n-//   const stopListening = () => {\r\n-//     console.log(\"Stopping listening.\");\r\n-//     if (recognition.current.starting) {\r\n-//       setIsListening(false);\r\n-//       recognition.current.starting = false;\r\n-//       recognition.current.stop();\r\n-//       console.log(\"Listening stopped.\");\r\n-//     } else {\r\n-//       console.log(\"Recognition already inactive.\");\r\n-//     }\r\n-//   };\r\n-\r\n-//   // const handleCommandWithFuse = (command) => {\r\n-//   //   const fuse = new Fuse(commands, { keys: [\"utterance\"], threshold: 0.4 });\r\n-//   //   const results = fuse.search(command);\r\n-//   //   const foundCommand = results.length ? results[0].item : null;\r\n-\r\n-//   //   if (foundCommand) {\r\n-//   //     console.log(\"Command found:\", foundCommand.utterance);\r\n-//   //     speak(foundCommand.response);\r\n-//   //     if (foundCommand.route) {\r\n-//   //       navigate(foundCommand.route); // Navigate to the route specified in the command\r\n-//   //     }\r\n-//   //   } else {\r\n-//   //     console.log(\"No command found.\");\r\n-//   //     speak(\"I'm not sure how to respond to that.\");\r\n-//   //   }\r\n-//   // };\r\n-\r\n-//   const handleCommandWithFuse = (command) => {\r\n-//     const fuse = new Fuse(commands, { keys: [\"utterance\"], threshold: 0.4 });\r\n-//     const results = fuse.search(command);\r\n-//     const foundCommand = results.length ? results[0].item : null;\r\n-\r\n-//     if (foundCommand) {\r\n-//       console.log(\"Command found:\", foundCommand.utterance);\r\n-\r\n-//       if (foundCommand.route) {\r\n-//         if (location.pathname !== foundCommand.route) {\r\n-//           navigate(foundCommand.route);\r\n-//           speak(\r\n-//             `Navigating to ${\r\n-//               foundCommand.routeDescription || \"requested page\"\r\n-//             }.`\r\n-//           );\r\n-//         } else {\r\n-//           speak(\r\n-//             `You are already on the ${\r\n-//               foundCommand.routeDescription || \"requested page\"\r\n-//             }.`\r\n-//           );\r\n-//         }\r\n-//       } else if (foundCommand.action) {\r\n-//         foundCommand.action();\r\n-//       }\r\n-\r\n-//       if (foundCommand.response) {\r\n-//         speak(foundCommand.response);\r\n-//       }\r\n-//     } else {\r\n-//       console.log(\"No command found.\");\r\n-//       speak(\"I'm not sure how to respond to that.\");\r\n-//     }\r\n-//   };\r\n-\r\n-//   const commands = [\r\n-//     {\r\n-//       utterance: \"Hello who are you ?\",\r\n-\r\n-//       response:\r\n-//         \"Hi! This is Brane! your Voice bot from Brane Education How can I Assist you Today ?\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"Hello\",\r\n-\r\n-//       response: \"Hi! How can I assist you today?\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"hello\",\r\n-\r\n-//       response: \"Hi! How can I assist you today?\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"Hi.\",\r\n-\r\n-//       response: \"Hello! How can I assist you today?\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"Hey there\",\r\n-\r\n-//       response: \"Hi! How can I assist you today?\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"Good morning Brane.\",\r\n-\r\n-//       response: \"Hey Hiii! Good morning  ! How can I help you?\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"Good afternoon Brane.\",\r\n-\r\n-//       response: \"Hey Hiii! Good after noon ! How can I help you?\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"Good evening Brane.\",\r\n-\r\n-//       response: \"Hey Hiii! Good evening ! How can I help you?\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"can you please take me to login page\",\r\n-//       route: \"/login\",\r\n-//       routeDescription: \"login page\",\r\n-//       response: \"Navigating to the login page.\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"go to login page\",\r\n-//       route: \"/login\",\r\n-//       routeDescription: \"login page\",\r\n-//       response: \"Navigating to the login page.\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"please take me to login page\",\r\n-//       route: \"/login\",\r\n-//       routeDescription: \"login page\",\r\n-//       response: \"Navigating to the login page.\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"Go to login page\",\r\n-//       route: \"/login\",\r\n-//       routeDescription: \"login page\",\r\n-//       response: \"Navigating to the login page.\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"open login page\",\r\n-//       route: \"/login\",\r\n-//       routeDescription: \"login page\",\r\n-//       response: \"Navigating to the login page.\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"can you please take me to signup page\",\r\n-//       route: \"/signup\",\r\n-//       routeDescription: \"signup page\",\r\n-//       response: \"Navigating to the signup page.\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"take me to signup page\",\r\n-//       route: \"/signup\",\r\n-//       routeDescription: \"signup page\",\r\n-//       response: \"Navigating to the signup page.\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"Go to signup page\",\r\n-//       route: \"/signup\",\r\n-//       routeDescription: \"signup page\",\r\n-//       response: \"Navigating to the signup page.\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"open signup page\",\r\n-//       route: \"/signup\",\r\n-//       routeDescription: \"signup page\",\r\n-//       response: \"Navigating to the signup page.\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"what are platform features\",\r\n-\r\n-//       response:\r\n-//         \"Dashboard, Dynamic time table, Learning Networks, Little Masters, Video Based Dictionary, General Search.\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"Features of platform\",\r\n-\r\n-//       response:\r\n-//         \"Dashboard, Dynamic time table, Learning Networks, Little Masters, Video Based Dictionary, General Search.\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"What does the platform offer\",\r\n-\r\n-//       response:\r\n-//         \"Dashboard, Dynamic time table, Learning Networks, Little Masters, Video Based Dictionary, General Search.\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"Say me the features of platform\",\r\n-\r\n-//       response:\r\n-//         \"Dashboard, Dynamic time table, Learning Networks, Little Masters, Video Based Dictionary, General Search.\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"Say me the services of platform\",\r\n-\r\n-//       response:\r\n-//         \"Dashboard, Dynamic time table, Learning Networks, Little Masters, Video Based Dictionary, General Search.\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"tell me the services offered by the platform\",\r\n-\r\n-//       response:\r\n-//         \"Dashboard, Dynamic time table, Learning Networks, Little Masters, Video Based Dictionary, General Search.\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"explain platform services\",\r\n-\r\n-//       response:\r\n-//         \"Dashboard, Dynamic time table, Learning Networks, Little Masters, Video Based Dictionary, General Search.\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"Give me the Parent voice of Julia Harris\",\r\n-\r\n-//       response:\r\n-//         \"Brane education has helped my son a lot in his studies. He improved a lot in his studies and is now able to score good marks in his exams\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"Play today's motivational video\",\r\n-\r\n-//       response: \"I am playing the video\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"Play today's video\",\r\n-\r\n-//       response: \"I am playing Motivational video\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"Leaders Voice\",\r\n-\r\n-//       response:\r\n-//         \"This Voice-interactive AI Platform is a game Changer. It revolutionizes education.\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"Curriculum Supported by Brane Education\",\r\n-\r\n-//       response:\r\n-//         \"we support multiple Boards let me say few Telangana State Board Andhra Pradesh Board Maharashtra Board Assam Board\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"Boards supported by the platform\",\r\n-\r\n-//       response:\r\n-//         \"we support multiple Boards let me say few Telangana State Board Andhra Pradesh Board Maharashtra Board Assam Board\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"Curriculum\",\r\n-\r\n-//       response:\r\n-//         \"we support multiple Boards let me say few Telangana State Board Andhra Pradesh Board Maharashtra Board Assam Board\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"Go to landing page\",\r\n-\r\n-//       response: \"Okay, I am taking you to the landing page.\",\r\n-\r\n-//       route: \"/childpage\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"take me to landing page\",\r\n-\r\n-//       response: \"Okay, I am taking you to the landing page.\",\r\n-\r\n-//       route: \"/childpage\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"move to landing page\",\r\n-\r\n-//       response: \"Okay, I am taking you to the landing page.\",\r\n-\r\n-//       route: \"/childpage\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"roll back to landing page\",\r\n-\r\n-//       response: \"Okay, I am taking you to the landing page.\",\r\n-\r\n-//       route: \"/childpage\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"move to landing page\",\r\n-\r\n-//       response: \"Okay, I am taking you to the landing page.\",\r\n-\r\n-//       route: \"/childpage\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"what is today's quote\",\r\n-\r\n-//       response:\r\n-//         \"Determination is the power that sees us through all our frustration and obstacles. It helps in building our willpower which is the very basis of success.\",\r\n-\r\n-//       // route: \"/childpage\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"Today's Inspirational quote\",\r\n-\r\n-//       response:\r\n-//         \"Determination is the power that sees us through all our frustration and obstacles. It helps in building our willpower which is the very basis of success.\",\r\n-\r\n-//       // route: \"/childpage\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"say me today's quote\",\r\n-\r\n-//       response:\r\n-//         \"Determination is the power that sees us through all our frustration and obstacles. It helps in building our willpower which is the very basis of success.\",\r\n-\r\n-//       // route: \"/childpage\",\r\n-//     },\r\n-//     {\r\n-//       utterance: \"go back\",\r\n-//       response: \"Going back.\",\r\n-//       action: goBack, // Note the use of an action property\r\n-//     },\r\n-//     {\r\n-//       utterance: \"go forward\",\r\n-//       response: \"Going forward.\",\r\n-//       action: goForward,\r\n-//     },\r\n-//     {\r\n-//       utterance: \"play video\",\r\n-//       // response: \"Playing video.\",\r\n-//       action: playVideo,\r\n-//     },\r\n-//     {\r\n-//       utterance: \"pause video\",\r\n-//       // response: \"Pausing video.\",\r\n-//       action: pauseVideo,\r\n-//     },\r\n-//     {\r\n-//       utterance: \"start video\",\r\n-//       // response: \"Playing video.\",\r\n-//       action: playVideo,\r\n-//     },\r\n-//     {\r\n-//       utterance: \"stop video\",\r\n-//       // response: \"Playing video.\",\r\n-//       action: pauseVideo,\r\n-//     },\r\n-//     {\r\n-//       utterance: \"scroll up\",\r\n-//       // response: \"Scrolling up.\",\r\n-//       action: scrollUp,\r\n-//     },\r\n-//     {\r\n-//       utterance: \"scroll down\",\r\n-//       // response: \"Scrolling down.\",\r\n-//       action: scrollDown,\r\n-//     },\r\n-//     {\r\n-//       utterance: \"go up\",\r\n-\r\n-//       // response: \"Scrolling up.\",\r\n-//       action: scrollUp,\r\n-//     },\r\n-//     {\r\n-//       utterance: \"go down\",\r\n-//       // response: \"Scrolling down.\",\r\n-//       action: scrollDown,\r\n-//     },\r\n-//     {\r\n-//       utterance: \"scroll to top\",\r\n-//       action: scrollToTop,\r\n-//     },\r\n-//     {\r\n-//       utterance: \"scroll to bottom\",\r\n-//       action: scrollToBottom,\r\n-//     },\r\n-//   ];\r\n-//   return (\r\n-//     <div className=\"speech-bot-container\">\r\n-//       <div\r\n-//         className={`button-container ${\r\n-//           isListening ? \"voicebotframeactive\" : \"voicebotframe\"\r\n-//         }`}\r\n-//       >\r\n-//         <div onClick={isListening ? stopListening : startListening}>\r\n-//           <iframe\r\n-//             src={\r\n-//               isListening\r\n-//                 ? \"https://lottie.host/?file=a89aca3f-5407-4052-82c3-2048afca7a9f/NpCdWzLSKD.json\"\r\n-//                 : \"https://lottie.host/?file=d2b6cc0e-fe95-4847-85b5-35365fca7e00/vTudpCuPZq.json\"\r\n-//             }\r\n-//             width=\"120\" // Set your desired width\r\n-//             height=\"120\" // Set your desired height\r\n-//             title={isListening ? \"Stop Animation\" : \"Start Animation\"}\r\n-//             className={isListening ? \"voicebotframeactive\" : \"voicebotframe\"}\r\n-//           ></iframe>\r\n-//           {isListening ? (\r\n-//             <div className=\"overlay\" onClick={stopListening}></div>\r\n-//           ) : (\r\n-//             <div className=\"overlay\" onClick={startListening}></div>\r\n-//           )}\r\n-//         </div>\r\n-//       </div>\r\n-//     </div>\r\n-//   );\r\n-// };\r\n-\r\n-// export default VoiceBot;\r\n-\r\n-// All functionalities but messed up\r\n-\r\n-// import React, { useState, useEffect, useRef } from \"react\";\r\n-// import { useNavigate, useLocation } from \"react-router-dom\";\r\n-// import Fuse from \"fuse.js\";\r\n-// import \"./VoiceBot.css\";\r\n-\r\n-// const VoiceBot = ({ videoRef, takeTestRef, goBackRef }) => {\r\n-//   const [isListening, setIsListening] = useState(false);\r\n-//   const [isSpeaking, setIsSpeaking] = useState(false);\r\n-//   const recognition = useRef(null);\r\n-//   const speechSynthesis = useRef(window.speechSynthesis);\r\n-//   const hasGreeted = useRef(false);\r\n-//   const navigate = useNavigate();\r\n-//   const location = useLocation();\r\n-//   const isRecognitionActive = useRef(false);\r\n-\r\n-//   useEffect(() => {\r\n-//     recognition.current = new window.webkitSpeechRecognition();\r\n-//     recognition.current.continuous = true;\r\n-//     recognition.current.interimResults = false;\r\n-//     recognition.current.onresult = onResult;\r\n-//     recognition.current.onend = onRecognitionEnd;\r\n-\r\n-//     return () => {\r\n-//       if (recognition.current) {\r\n-//         recognition.current.abort();\r\n-//       }\r\n-//     };\r\n-//   }, [location.pathname]);\r\n-\r\n-//   const onResult = (event) => {\r\n-//     const resultIndex = event.resultIndex;\r\n-//     const transcript = event.results[resultIndex][0].transcript\r\n-//       .trim()\r\n-//       .toLowerCase();\r\n-\r\n-//     if (event.results[resultIndex].isFinal) {\r\n-//       console.log(`Recognized text: ${transcript}`);\r\n-//       if (transcript.includes(\"brain\")) {\r\n-//         console.log(\"Wake word heard, processing command...\");\r\n-//         handleCommandWithFuse(transcript.replace(\"brain\", \"\"));\r\n-//       }\r\n-//     }\r\n-//   };\r\n-\r\n-//   const startListening = () => {\r\n-//     if (!isRecognitionActive.current) {\r\n-//       setIsListening(true);\r\n-//       recognition.current.start();\r\n-//       isRecognitionActive.current = true;\r\n-//     }\r\n-//   };\r\n-\r\n-//   const stopListening = () => {\r\n-//     if (isRecognitionActive.current) {\r\n-//       setIsListening(false);\r\n-//       recognition.current.stop();\r\n-//       isRecognitionActive.current = false;\r\n-//     }\r\n-//   };\r\n-\r\n-//   const onRecognitionEnd = () => {\r\n-//     isRecognitionActive.current = false;\r\n-//     if (isListening) {\r\n-//       startListening();\r\n-//     }\r\n-//   };\r\n-\r\n-//   const speak = (message) => {\r\n-//     const utterance = new SpeechSynthesisUtterance(message);\r\n-//     utterance.onend = () => {\r\n-//       setIsSpeaking(false);\r\n-//       if (isListening && !isRecognitionActive.current) {\r\n-//         startListening();\r\n-//       }\r\n-//     };\r\n-\r\n-//     setIsSpeaking(true);\r\n-//     if (isRecognitionActive.current) {\r\n-//       stopListening(); // Adjusted to use stopListening\r\n-//     }\r\n-//     speechSynthesis.current.speak(utterance);\r\n-//   };\r\n-\r\n-//   useEffect(() => {\r\n-//     if (isListening && !hasGreeted.current) {\r\n-//       speak(\"Hello, I'm Brane. How can I assist you today?\");\r\n-//       hasGreeted.current = true;\r\n-//     }\r\n-//   }, [isListening]);\r\n-\r\n-//   const goBack = () => {\r\n-//     if (window.history.length > 1) {\r\n-//       navigate(-1);\r\n-//     } else {\r\n-//       speak(\"Can't go back any further.\");\r\n-//     }\r\n-//   };\r\n-\r\n-//   const goForward = () => {\r\n-//     // Unfortunately, there's no direct way to check if you can go forward in the history.\r\n-//     // You might need to manage this state manually based on user navigation.\r\n-//     navigate(1);\r\n-//   };\r\n-\r\n-//   const playVideo = () => {\r\n-//     if (videoRef.current && !videoRef.current.paused) {\r\n-//       speak(\"Video is already playing.\");\r\n-//     } else if (videoRef.current) {\r\n-//       videoRef.current.play();\r\n-//       speak(\"Playing video.\");\r\n-//     } else {\r\n-//       speak(\"No video to play.\");\r\n-//     }\r\n-//   };\r\n-\r\n-//   const pauseVideo = () => {\r\n-//     if (videoRef.current && videoRef.current.paused) {\r\n-//       speak(\"Video is already paused.\");\r\n-//     } else if (videoRef.current) {\r\n-//       videoRef.current.pause();\r\n-//       speak(\"Video paused.\");\r\n-//     } else {\r\n-//       speak(\"No video to pause.\");\r\n-//     }\r\n-//   };\r\n-\r\n-//   const scrollAmount = window.innerHeight * 0.82;\r\n-\r\n-//   const scrollUp = () => {\r\n-//     if (window.pageYOffset === 0) {\r\n-//       speak(\"Already at the top of the page.\");\r\n-//     } else {\r\n-//       window.scrollBy(0, -scrollAmount);\r\n-//       speak(\"Scrolled up.\");\r\n-//     }\r\n-//   };\r\n-\r\n-//   const scrollDown = () => {\r\n-//     const maxScrollTop =\r\n-//       document.documentElement.scrollHeight - window.innerHeight;\r\n-//     if (window.pageYOffset >= maxScrollTop) {\r\n-//       speak(\"Already at the bottom of the page.\");\r\n-//     } else {\r\n-//       window.scrollBy(0, scrollAmount);\r\n-//       speak(\"Scrolled down.\");\r\n-//     }\r\n-//   };\r\n-\r\n-//   const scrollToTop = () => {\r\n-//     if (window.pageYOffset === 0) {\r\n-//       speak(\"Already at the top of the page.\");\r\n-//     } else {\r\n-//       window.scrollTo(0, 0);\r\n-//       speak(\"Scrolled to the top of the page.\");\r\n-//     }\r\n-//   };\r\n-\r\n-//   const scrollToBottom = () => {\r\n-//     const maxScrollTop =\r\n-//       document.documentElement.scrollHeight - window.innerHeight;\r\n-//     if (window.pageYOffset >= maxScrollTop) {\r\n-//       speak(\"Already at the bottom of the page.\");\r\n-//     } else {\r\n-//       window.scrollTo(0, document.body.scrollHeight);\r\n-//       speak(\"Scrolled to the bottom of the page.\");\r\n-//     }\r\n-//   };\r\n-\r\n-//   // const speak = (message) => {\r\n-//   //   const utterance = new SpeechSynthesisUtterance(message);\r\n-//   //   utterance.onend = () => {\r\n-//   //     setIsSpeaking(false);\r\n-//   //     console.log(\"Speaking ended.\");\r\n-//   //     // Only restart recognition if we're still supposed to be listening\r\n-//   //     // if (isListening) {\r\n-//   //     //   if (restartRecognitionTimeout.current) {\r\n-//   //     //     clearTimeout(restartRecognitionTimeout.current);\r\n-//   //     //   }\r\n-//   //     //   restartRecognitionTimeout.current = setTimeout(() => {\r\n-//   //     //     console.log(\"Recognition restarted.\");\r\n-//   //     //     recognition.current.start();\r\n-//   //     //   }, 100); // Delay to prevent immediate restart\r\n-//   //     // }\r\n-//   //     if (isListening && !recognition.current.starting) { // Check the flag before restarting\r\n-//   //       recognition.current.starting = true; // Set the flag when starting recognition\r\n-//   //       recognition.current.start();\r\n-//   //     }\r\n-//   //   };\r\n-\r\n-//   //   setIsSpeaking(true);\r\n-//   //   console.log(\"Speaking started.\");\r\n-//   //   recognition.current.stop(); // Stop recognition when the bot starts speaking\r\n-//   //   speechSynthesis.current.speak(utterance);\r\n-//   // };\r\n-\r\n-//   // const onRecognitionEnd = () => {\r\n-//   //   console.log(\"Recognition ended.\");\r\n-//   //   setIsRecognitionActive(false); // Update state when recognition ends\r\n-//   //   recognition.current.starting = false; // Reset the flag when recognition ends\r\n-//   //   // We now check if the recognition is already running before starting it again\r\n-//   //   if (isListening && !isSpeaking && !recognition.current?.starting) {\r\n-//   //     console.log(\"Restarting recognition.\");\r\n-//   //     recognition.current.start();\r\n-//   //   }\r\n-//   // };\r\n-\r\n-//   // useEffect(() => {\r\n-//   //   if (isListening && !hasGreeted.current) {\r\n-//   //     speak(\"Hello, I'm Brane. How can I assist you today?\");\r\n-//   //     hasGreeted.current = true;\r\n-//   //   } else if (isListening && !isSpeaking) {\r\n-//   //     recognition.current.start();\r\n-//   //   }\r\n-//   // }, [isListening, isSpeaking]);\r\n-\r\n-//   // const startListening = () => {\r\n-//   //   console.log(\"Attempting to start listening.\");\r\n-//   //   if (recognition.current && !recognition.current.starting) {\r\n-//   //     setIsListening(true);\r\n-//   //     recognition.current.starting = true; // Set the flag when starting recognition\r\n-//   //     recognition.current.start();\r\n-//   //     console.log(\"Listening started.\");\r\n-//   //   }\r\n-//   // };\r\n-\r\n-//   // const stopListening = () => {\r\n-//   //   console.log(\"Stopping listening.\");\r\n-\r\n-//   //   setIsListening(false);\r\n-//   //   recognition.current.stop();\r\n-//   //   if (speechSynthesis.current.speaking) {\r\n-//   //     speechSynthesis.current.cancel();\r\n-//   //   }\r\n-//   //   if (restartRecognitionTimeout.current) {\r\n-//   //     clearTimeout(restartRecognitionTimeout.current);\r\n-//   //   }\r\n-//   //   console.log(\"Listening stopped.\");\r\n-//   // };\r\n-//   // Handle start and stop listening logic\r\n-\r\n-//   useEffect(() => {\r\n-//     if (isListening && !hasGreeted.current) {\r\n-//       speak(\"Hello, I'm Brane. How can I assist you today?\");\r\n-//       hasGreeted.current = true;\r\n-//     }\r\n-//   }, [isListening]);\r\n-\r\n-//   // const handleCommandWithFuse = (command) => {\r\n-//   //   const fuse = new Fuse(commands, { keys: [\"utterance\"], threshold: 0.4 });\r\n-//   //   const results = fuse.search(command);\r\n-//   //   const foundCommand = results.length ? results[0].item : null;\r\n-\r\n-//   //   if (foundCommand) {\r\n-//   //     console.log(\"Command found:\", foundCommand.utterance);\r\n-//   //     speak(foundCommand.response);\r\n-//   //     if (foundCommand.route) {\r\n-//   //       navigate(foundCommand.route); // Navigate to the route specified in the command\r\n-//   //     }\r\n-//   //   } else {\r\n-//   //     console.log(\"No command found.\");\r\n-//   //     speak(\"I'm not sure how to respond to that.\");\r\n-//   //   }\r\n-//   // };\r\n-\r\n-//   const handleCommandWithFuse = (command) => {\r\n-//     const fuse = new Fuse(commands, { keys: [\"utterance\"], threshold: 0.4 });\r\n-//     const results = fuse.search(command);\r\n-//     const foundCommand = results.length ? results[0].item : null;\r\n-\r\n-//     if (foundCommand) {\r\n-//       console.log(\"Command found:\", foundCommand.utterance);\r\n-\r\n-//       if (foundCommand.action) {\r\n-//         foundCommand.action();\r\n-//       } else if (foundCommand.route) {\r\n-//         navigate(foundCommand.route);\r\n-//       }\r\n-\r\n-//       if (foundCommand.response) {\r\n-//         speak(foundCommand.response);\r\n-//       }\r\n-//     } else {\r\n-//       console.log(\"No command found.\");\r\n-//       speak(\"I'm not sure how to respond to that.\");\r\n-//     }\r\n-//   };\r\n-\r\n-//   const commands = [\r\n-//     {\r\n-//       utterance: \"Hello who are you ?\",\r\n-\r\n-//       response:\r\n-//         \"Hi! This is Brane! your Voice bot from Brane Education How can I Assist you Today ?\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"Hello\",\r\n-\r\n-//       response: \"Hi! How can I assist you today?\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"hello\",\r\n-\r\n-//       response: \"Hi! How can I assist you today?\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"Hi.\",\r\n-\r\n-//       response: \"Hello! How can I assist you today?\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"Hey there\",\r\n-\r\n-//       response: \"Hi! How can I assist you today?\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"Good morning Brane.\",\r\n-\r\n-//       response: \"Hey Hiii! Good morning  ! How can I help you?\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"Good afternoon Brane.\",\r\n-\r\n-//       response: \"Hey Hiii! Good after noon ! How can I help you?\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"Good evening Brane.\",\r\n-\r\n-//       response: \"Hey Hiii! Good evening ! How can I help you?\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"can you please take me to login page\",\r\n-//       route: \"/login\",\r\n-//       routeDescription: \"login page\",\r\n-//       response: \"Navigating to the login page.\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"go to login page\",\r\n-//       route: \"/login\",\r\n-//       routeDescription: \"login page\",\r\n-//       response: \"Navigating to the login page.\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"please take me to login page\",\r\n-//       route: \"/login\",\r\n-//       routeDescription: \"login page\",\r\n-//       response: \"Navigating to the login page.\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"Go to login page\",\r\n-//       route: \"/login\",\r\n-//       routeDescription: \"login page\",\r\n-//       response: \"Navigating to the login page.\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"open login page\",\r\n-//       route: \"/login\",\r\n-//       routeDescription: \"login page\",\r\n-//       response: \"Navigating to the login page.\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"can you please take me to signup page\",\r\n-//       route: \"/signup\",\r\n-//       routeDescription: \"signup page\",\r\n-//       response: \"Navigating to the signup page.\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"take me to signup page\",\r\n-//       route: \"/signup\",\r\n-//       routeDescription: \"signup page\",\r\n-//       response: \"Navigating to the signup page.\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"Go to signup page\",\r\n-//       route: \"/signup\",\r\n-//       routeDescription: \"signup page\",\r\n-//       response: \"Navigating to the signup page.\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"open signup page\",\r\n-//       route: \"/signup\",\r\n-//       routeDescription: \"signup page\",\r\n-//       response: \"Navigating to the signup page.\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"what are platform features\",\r\n-\r\n-//       response:\r\n-//         \"Dashboard, Dynamic time table, Learning Networks, Little Masters, Video Based Dictionary, General Search.\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"Features of platform\",\r\n-\r\n-//       response:\r\n-//         \"Dashboard, Dynamic time table, Learning Networks, Little Masters, Video Based Dictionary, General Search.\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"What does the platform offer\",\r\n-\r\n-//       response:\r\n-//         \"Dashboard, Dynamic time table, Learning Networks, Little Masters, Video Based Dictionary, General Search.\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"Say me the features of platform\",\r\n-\r\n-//       response:\r\n-//         \"Dashboard, Dynamic time table, Learning Networks, Little Masters, Video Based Dictionary, General Search.\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"Say me the services of platform\",\r\n-\r\n-//       response:\r\n-//         \"Dashboard, Dynamic time table, Learning Networks, Little Masters, Video Based Dictionary, General Search.\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"tell me the services offered by the platform\",\r\n-\r\n-//       response:\r\n-//         \"Dashboard, Dynamic time table, Learning Networks, Little Masters, Video Based Dictionary, General Search.\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"explain platform services\",\r\n-\r\n-//       response:\r\n-//         \"Dashboard, Dynamic time table, Learning Networks, Little Masters, Video Based Dictionary, General Search.\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"Give me the Parent voice of Julia Harris\",\r\n-\r\n-//       response:\r\n-//         \"Brane education has helped my son a lot in his studies. He improved a lot in his studies and is now able to score good marks in his exams\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"Play today's motivational video\",\r\n-\r\n-//       response: \"I am playing the video\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"Play today's video\",\r\n-\r\n-//       response: \"I am playing Motivational video\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"Leaders Voice\",\r\n-\r\n-//       response:\r\n-//         \"This Voice-interactive AI Platform is a game Changer. It revolutionizes education.\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"Curriculum Supported by Brane Education\",\r\n-\r\n-//       response:\r\n-//         \"we support multiple Boards let me say few Telangana State Board Andhra Pradesh Board Maharashtra Board Assam Board\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"Boards supported by the platform\",\r\n-\r\n-//       response:\r\n-//         \"we support multiple Boards let me say few Telangana State Board Andhra Pradesh Board Maharashtra Board Assam Board\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"Curriculum\",\r\n-\r\n-//       response:\r\n-//         \"we support multiple Boards let me say few Telangana State Board Andhra Pradesh Board Maharashtra Board Assam Board\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"Go to landing page\",\r\n-\r\n-//       response: \"Okay, I am taking you to the landing page.\",\r\n-\r\n-//       route: \"/childpage\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"take me to landing page\",\r\n-\r\n-//       response: \"Okay, I am taking you to the landing page.\",\r\n-\r\n-//       route: \"/childpage\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"move to landing page\",\r\n-\r\n-//       response: \"Okay, I am taking you to the landing page.\",\r\n-\r\n-//       route: \"/childpage\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"roll back to landing page\",\r\n-\r\n-//       response: \"Okay, I am taking you to the landing page.\",\r\n-\r\n-//       route: \"/childpage\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"move to landing page\",\r\n-\r\n-//       response: \"Okay, I am taking you to the landing page.\",\r\n-\r\n-//       route: \"/childpage\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"what is today's quote\",\r\n-\r\n-//       response:\r\n-//         \"Determination is the power that sees us through all our frustration and obstacles. It helps in building our willpower which is the very basis of success.\",\r\n-\r\n-//       // route: \"/childpage\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"Today's Inspirational quote\",\r\n-\r\n-//       response:\r\n-//         \"Determination is the power that sees us through all our frustration and obstacles. It helps in building our willpower which is the very basis of success.\",\r\n-\r\n-//       // route: \"/childpage\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"say me today's quote\",\r\n-\r\n-//       response:\r\n-//         \"Determination is the power that sees us through all our frustration and obstacles. It helps in building our willpower which is the very basis of success.\",\r\n-\r\n-//       // route: \"/childpage\",\r\n-//     },\r\n-//     {\r\n-//       utterance: \"go back\",\r\n-//       response: \"Going back.\",\r\n-//       action: goBack, // Note the use of an action property\r\n-//     },\r\n-//     {\r\n-//       utterance: \"go forward\",\r\n-//       response: \"Going forward.\",\r\n-//       action: goForward,\r\n-//     },\r\n-//     {\r\n-//       utterance: \"play video\",\r\n-//       // response: \"Playing video.\",\r\n-//       action: playVideo,\r\n-//     },\r\n-//     {\r\n-//       utterance: \"pause video\",\r\n-//       // response: \"Pausing video.\",\r\n-//       action: pauseVideo,\r\n-//     },\r\n-//     {\r\n-//       utterance: \"start video\",\r\n-//       // response: \"Playing video.\",\r\n-//       action: playVideo,\r\n-//     },\r\n-//     {\r\n-//       utterance: \"stop video\",\r\n-//       // response: \"Playing video.\",\r\n-//       action: pauseVideo,\r\n-//     },\r\n-//     {\r\n-//       utterance: \"scroll up\",\r\n-//       // response: \"Scrolling up.\",\r\n-//       action: scrollUp,\r\n-//     },\r\n-//     {\r\n-//       utterance: \"scroll down\",\r\n-//       // response: \"Scrolling down.\",\r\n-//       action: scrollDown,\r\n-//     },\r\n-//     {\r\n-//       utterance: \"go up\",\r\n-\r\n-//       // response: \"Scrolling up.\",\r\n-//       action: scrollUp,\r\n-//     },\r\n-//     {\r\n-//       utterance: \"go down\",\r\n-//       // response: \"Scrolling down.\",\r\n-//       action: scrollDown,\r\n-//     },\r\n-//     {\r\n-//       utterance: \"scroll to top\",\r\n-//       action: scrollToTop,\r\n-//     },\r\n-//     {\r\n-//       utterance: \"scroll to bottom\",\r\n-//       action: scrollToBottom,\r\n-//     },\r\n-//     {\r\n-//       utterance: \"go back\",\r\n-//       action: goBackRef?.current?.click, // Use goBackRef directly\r\n-//       response: \"Going back.\",\r\n-//     },\r\n-//     {\r\n-//       utterance: \"take test\",\r\n-//       action: takeTestRef?.current?.click, // Use takeTestRef directly\r\n-//       response: \"Starting the test.\",\r\n-//     },\r\n-//   ];\r\n-//   return (\r\n-//     <div className=\"speech-bot-container\">\r\n-//       <div\r\n-//         className={`button-container ${\r\n-//           isListening ? \"voicebotframeactive\" : \"voicebotframe\"\r\n-//         }`}\r\n-//       >\r\n-//         <div onClick={isListening ? stopListening : startListening}>\r\n-//           <iframe\r\n-//             src={\r\n-//               isListening\r\n-//                 ? \"https://lottie.host/?file=a89aca3f-5407-4052-82c3-2048afca7a9f/NpCdWzLSKD.json\"\r\n-//                 : \"https://lottie.host/?file=d2b6cc0e-fe95-4847-85b5-35365fca7e00/vTudpCuPZq.json\"\r\n-//             }\r\n-//             width=\"120\" // Set your desired width\r\n-//             height=\"120\" // Set your desired height\r\n-//             title={isListening ? \"Stop Animation\" : \"Start Animation\"}\r\n-//             className={isListening ? \"voicebotframeactive\" : \"voicebotframe\"}\r\n-//           ></iframe>\r\n-//           {isListening ? (\r\n-//             <div className=\"overlay\" onClick={stopListening}></div>\r\n-//           ) : (\r\n-//             <div className=\"overlay\" onClick={startListening}></div>\r\n-//           )}\r\n-//         </div>\r\n-//       </div>\r\n-//     </div>\r\n-//   );\r\n-// };\r\n-\r\n-// export default VoiceBot;\r\n-import React, { useState, useEffect, useRef } from \"react\";\r\n-import { useNavigate, useLocation } from \"react-router-dom\";\r\n-import Fuse from \"fuse.js\";\r\n-import \"./VoiceBot.css\";\r\n-import chatbotimage from \"../../assets/chatbotgif.gif\";\r\n-\r\n-const VoiceBot = ({ videoRefs,setMobileNumber,setPin,triggerLogin, setTriggerRecordAudio }) => {\r\n-  const [isListening, setIsListening] = useState(false);\r\n-  const [isSpeaking, setIsSpeaking] = useState(false);\r\n-  const recognition = useRef(null);\r\n-  const speechSynthesis = useRef(window.speechSynthesis);\r\n-  const [hasGreeted, setHasGreeted] = useState(false);\r\n-  const navigate = useNavigate();\r\n-\r\n-  // Initialize speech recognition\r\n-  useEffect(() => {\r\n-    recognition.current = new window.webkitSpeechRecognition();\r\n-    recognition.current.continuous = true;\r\n-    recognition.current.interimResults = false;\r\n-    recognition.current.onresult = onResult;\r\n-    recognition.current.onend = onRecognitionEnd;\r\n-    recognition.current.starting = false;\r\n-\r\n-    recognition.current.onerror = (event) => {\r\n-      console.error(\"Recognition error:\", event.error);\r\n-      if (isListening && !isSpeaking) {\r\n-        restartRecognition();\r\n-      }\r\n-    };\r\n-\r\n-    return () => {\r\n-      if (recognition.current) {\r\n-        recognition.current.abort();\r\n-      }\r\n-    };\r\n-  }, []);\r\n-\r\n-  useEffect(() => {\r\n-    const checkRecognition = () => {\r\n-      if (isListening && !isSpeaking && !recognition.current.starting) {\r\n-        console.log(\"Restarting recognition because it's not active.\");\r\n-        recognition.current.starting = true;\r\n-        recognition.current.start();\r\n-        console.log(\"Restarted recognition.\");\r\n-      }\r\n-    };\r\n-\r\n-    const recognitionCheckInterval = setInterval(checkRecognition, 500); // Check every .5 second\r\n-\r\n-    return () => {\r\n-      clearInterval(recognitionCheckInterval);\r\n-    };\r\n-  }, [isListening, isSpeaking]);\r\n-\r\n-  const historyStack = useRef([]);\r\n-\r\n-  useEffect(() => {\r\n-    return () => {\r\n-      // Clean up the listener when the component unmounts\r\n-      window.removeEventListener(\"popstate\", handlePopState);\r\n-    };\r\n-  }, []);\r\n-\r\n-  const handlePopState = () => {\r\n-    // This needs to handle both back and forward browser actions\r\n-    // Use some logic to determine whether it's a back or forward action\r\n-    // For simplicity, assume it's always back\r\n-    historyStack.current.pop();\r\n-    forwardStack.current.length = 0; // Clear forward stack on manual navigation\r\n-  };\r\n-\r\n-  // Listen to popstate events to update the history stack\r\n-  useEffect(() => {\r\n-    window.addEventListener(\"popstate\", handlePopState);\r\n-  }, []);\r\n-\r\n-  const forwardStack = useRef([]);\r\n-\r\n-  const goBack = () => {\r\n-    if (window.history.state && window.history.state.idx > 0) {\r\n-      window.history.back();\r\n-      speak(\"Going back\");\r\n-    } else {\r\n-      speak(\"Can't go back any further.\");\r\n-    }\r\n-  };\r\n-\r\n-  const goForward = () => {\r\n-    if (\r\n-      window.history.state &&\r\n-      window.history.state.idx < window.history.length - 1\r\n-    ) {\r\n-      window.history.forward();\r\n-      speak(\"Going forward\");\r\n-    } else {\r\n-      speak(\"No forward history available.\");\r\n-    }\r\n-  };\r\n-\r\n-  const scrollAmount = window.innerHeight * 0.82;\r\n-\r\n-  const scrollUp = () => {\r\n-    if (window.pageYOffset === 0) {\r\n-      speak(\"Already at the top of the page.\");\r\n-    } else {\r\n-      window.scrollBy(0, -scrollAmount);\r\n-      speak(\"Scrolled up.\");\r\n-    }\r\n-  };\r\n-\r\n-  const scrollDown = () => {\r\n-    const maxScrollTop =\r\n-      document.documentElement.scrollHeight - window.innerHeight;\r\n-    if (window.pageYOffset >= maxScrollTop) {\r\n-      speak(\"Already at the bottom of the page.\");\r\n-    } else {\r\n-      window.scrollBy(0, scrollAmount);\r\n-      speak(\"Scrolled down.\");\r\n-    }\r\n-  };\r\n-\r\n-  const scrollToTop = () => {\r\n-    if (window.pageYOffset === 0) {\r\n-      speak(\"Already at the top of the page.\");\r\n-    } else {\r\n-      window.scrollTo(0, 0);\r\n-      speak(\"Scrolled to the top of the page.\");\r\n-    }\r\n-  };\r\n-\r\n-  const scrollToBottom = () => {\r\n-    const maxScrollTop =\r\n-      document.documentElement.scrollHeight - window.innerHeight;\r\n-    if (window.pageYOffset >= maxScrollTop) {\r\n-      speak(\"Already at the bottom of the page.\");\r\n-    } else {\r\n-      window.scrollTo(0, document.body.scrollHeight);\r\n-      speak(\"Scrolled to the bottom of the page.\");\r\n-    }\r\n-  };\r\n-\r\n-  const controlVideo = (videoId, action) => {\r\n-    const videoRef = videoRefs.current.get(videoId);\r\n-    if (videoRef && videoRef.current) {\r\n-      switch (action) {\r\n-        case \"play\":\r\n-          videoRef.current.play();\r\n-          break;\r\n-        case \"pause\":\r\n-          videoRef.current.pause();\r\n-          break;\r\n-        case \"mute\":\r\n-          videoRef.current.muted = true;\r\n-          break;\r\n-        case \"unmute\":\r\n-          videoRef.current.muted = false;\r\n-          break;\r\n-        case \"fullscreen\":\r\n-          if (videoRef.current.requestFullscreen) {\r\n-            videoRef.current.requestFullscreen();\r\n-          } else if (videoRef.current.webkitRequestFullscreen) {\r\n-            // Safari\r\n-            videoRef.current.webkitRequestFullscreen();\r\n-          } else if (videoRef.current.msRequestFullscreen) {\r\n-            // IE11\r\n-            videoRef.current.msRequestFullscreen();\r\n-          }\r\n-          break;\r\n-        case \"exitFullscreen\":\r\n-          if (document.exitFullscreen) {\r\n-            document.exitFullscreen();\r\n-          } else if (document.webkitExitFullscreen) {\r\n-            // Safari\r\n-            document.webkitExitFullscreen();\r\n-          } else if (document.msExitFullscreen) {\r\n-            // IE11\r\n-            document.msExitFullscreen();\r\n-          }\r\n-          break;\r\n-        case \"increaseVolume\":\r\n-          if (videoRef.current.volume < 1) {\r\n-            videoRef.current.volume = Math.min(\r\n-              1,\r\n-              videoRef.current.volume + 0.1\r\n-            );\r\n-          }\r\n-          break;\r\n-        case \"decreaseVolume\":\r\n-          if (videoRef.current.volume > 0) {\r\n-            videoRef.current.volume = Math.max(\r\n-              0,\r\n-              videoRef.current.volume - 0.1\r\n-            );\r\n-          }\r\n-          break;\r\n-        // Add other cases as needed\r\n-      }\r\n-      speak(\r\n-        `${\r\n-          action.charAt(0).toUpperCase() +\r\n-          action\r\n-            .slice(1)\r\n-            .replace(/([A-Z])/g, \" $1\")\r\n-            .toLowerCase()\r\n-        }ing video.`\r\n-      );\r\n-    } else {\r\n-      speak(`Video not found.`);\r\n-    }\r\n-  };\r\n-\r\n-  const speak = (message) => {\r\n-    const utterance = new SpeechSynthesisUtterance(message);\r\n-    utterance.onend = () => {\r\n-      setIsSpeaking(false);\r\n-      // Restart recognition after speaking has ended\r\n-      if (isListening) {\r\n-        restartRecognition();\r\n-      }\r\n-    };\r\n-\r\n-    setIsSpeaking(true);\r\n-    // Stop recognition when the bot starts speaking\r\n-    if (recognition.current) {\r\n-      recognition.current.abort();\r\n-    }\r\n-    speechSynthesis.current.speak(utterance);\r\n-  };\r\n-\r\n-  const restartRecognition = () => {\r\n-    // Check if recognition is not already started and if the bot is set to listen\r\n-    if (\r\n-      recognition.current &&\r\n-      !recognition.current.starting &&\r\n-      isListening &&\r\n-      !isSpeaking\r\n-    ) {\r\n-      recognition.current.abort(); // Ensure any ongoing recognition is stopped\r\n-      recognition.current.starting = true;\r\n-      recognition.current.start();\r\n-    }\r\n-  };\r\n-\r\n-  // Restart recognition when bot finishes speaking and isListening is true\r\n-  useEffect(() => {\r\n-    if (!isSpeaking && isListening) {\r\n-      restartRecognition();\r\n-    }\r\n-  }, [isSpeaking, isListening]);\r\n-\r\n-  const onResult = (event) => {\r\n-    const resultIndex = event.resultIndex;\r\n-    const transcript = event.results[resultIndex][0].transcript\r\n-      .trim()\r\n-      .toLowerCase();\r\n-\r\n-    if (event.results[resultIndex].isFinal) {\r\n-      console.log(`Recognized text: ${transcript}`);\r\n-      if (transcript.includes(\"brain\")) {\r\n-        console.log(\"Wake word heard, processing command...\");\r\n-        handleCommandWithFuse(transcript.replace(\"brain\", \"\"));\r\n-      }\r\n-    }\r\n-  };\r\n-\r\n-  const onRecognitionEnd = () => {\r\n-    recognition.current.starting = false;\r\n-    if (isListening && !isSpeaking) {\r\n-      restartRecognition();\r\n-    }\r\n-  };\r\n-\r\n-  useEffect(() => {\r\n-    if (isListening && !hasGreeted) {\r\n-      speak(\"Hello, I'm Brane. How can I help you today?\");\r\n-      setHasGreeted(true);\r\n-    }\r\n-  }, [isListening, hasGreeted]);\r\n-\r\n-  // Updated startListening function\r\n-  const startListening = () => {\r\n-    setIsListening(true);\r\n-    if (!recognition.current.starting) {\r\n-      restartRecognition();\r\n-    }\r\n-  };\r\n-\r\n-  // Updated stopListening function\r\n-  const stopListening = () => {\r\n-    setIsListening(false);\r\n-    if (speechSynthesis.current.speaking) {\r\n-      speechSynthesis.current.cancel();\r\n-    }\r\n-    recognition.current.abort();\r\n-  };\r\n-\r\n-  const handleCommandWithFuse = (command) => {\r\n-    const fuse = new Fuse(commands, { keys: [\"utterance\"], threshold: 0.4 });\r\n-    const results = fuse.search(command);\r\n-    const foundCommand = results.length ? results[0].item : null;\r\n-\r\n-    if (foundCommand) {\r\n-      console.log(\"Command text to process:\", command);\r\n-      console.log(\"Command found:\", foundCommand.utterance);\r\n-      if (foundCommand.action) {\r\n-        foundCommand.action(command); // Pass the command text to the action function\r\n-      } else if (foundCommand.route) {\r\n-        navigate(foundCommand.route);\r\n-      }\r\n-\r\n-      // Speak after performing the action or navigation\r\n-      speak(foundCommand.response);\r\n-    } else {\r\n-      console.log(\"No command found.\");\r\n-      speak(\"I'm not sure how to respond to that.\");\r\n-    }\r\n-  };\r\n-\r\n-  const extractNumber = (spokenText) => {\r\n-    if (!spokenText) return null; // Return null if spokenText is undefined or null\r\n-  \r\n-    const sanitizedText = spokenText.replace(/[.,]/g, '');\r\n-    const matches = sanitizedText.match(/\\d+/);\r\n-    return matches ? matches[0] : null;\r\n-  };\r\n-\r\n-\r\n-  const commands = [\r\n-    {\r\n-      utterance: \"Hello who are you ?\",\r\n-\r\n-      response:\r\n-        \"Hi! This is Brane! your Voice bot from Brane Education How can I Assist you Today ?\",\r\n-    },\r\n-\r\n-    {\r\n-      utterance: \"Hello\",\r\n-\r\n-      response: \"Hi! How can I assist you today?\",\r\n-    },\r\n-\r\n-    {\r\n-      utterance: \"hello\",\r\n-\r\n-      response: \"Hi! How can I assist you today?\",\r\n-    },\r\n-\r\n-    {\r\n-      utterance: \"Hi.\",\r\n-\r\n-      response: \"Hello! How can I assist you today?\",\r\n-    },\r\n-\r\n-    {\r\n-      utterance: \"Hey there\",\r\n-\r\n-      response: \"Hi! How can I assist you today?\",\r\n-    },\r\n-\r\n-    {\r\n-      utterance: \"Good morning Brane.\",\r\n-\r\n-      response: \"Hey Hiii! Good morning  ! How can I help you?\",\r\n-    },\r\n-\r\n-    {\r\n-      utterance: \"Good afternoon Brane.\",\r\n-\r\n-      response: \"Hey Hiii! Good after noon ! How can I help you?\",\r\n-    },\r\n-\r\n-    {\r\n-      utterance: \"Good evening Brane.\",\r\n-\r\n-      response: \"Hey Hiii! Good evening ! How can I help you?\",\r\n-    },\r\n-\r\n-    {\r\n-      utterance: \"take me to homepage\",\r\n-\r\n-      route: \"/\",\r\n-\r\n-      response: \"You're in Homepage now\",\r\n-    },\r\n-    {\r\n-      utterance: \"open homepage\",\r\n-\r\n-      route: \"/\",\r\n-\r\n-      response: \"You're in Homepage now\",\r\n-    },\r\n-    {\r\n-      utterance: \"go to homepage\",\r\n-\r\n-      route: \"/\",\r\n-\r\n-      response: \"You're in Homepage now\",\r\n-    },\r\n-    {\r\n-      utterance: \"go back to homepage\",\r\n-\r\n-      route: \"/\",\r\n-\r\n-      response: \"You're in Homepage now\",\r\n-    },\r\n-    {\r\n-      utterance: \"can you please take me to login page\",\r\n-\r\n-      route: \"/login\",\r\n-\r\n-      response: \"Here's the Login Page, Please Login\",\r\n-    },\r\n-\r\n-    {\r\n-      utterance: \"please take me to login page\",\r\n-\r\n-      route: \"/login\",\r\n-\r\n-      response: \"Here's the Login Page, Please Login\",\r\n-    },\r\n-\r\n-    {\r\n-      utterance: \"Go to login page\",\r\n-\r\n-      route: \"/login\",\r\n-\r\n-      response: \"Here's the Login Page, Please Login\",\r\n-    },\r\n-\r\n-    {\r\n-      utterance: \"open login page\",\r\n-\r\n-      route: \"/login\",\r\n-\r\n-      response: \"Here's the Login Page, Please Login\",\r\n-    },\r\n-\r\n-    {\r\n-      utterance: \"can you please take me to signup page\",\r\n-\r\n-      route: \"/signup\",\r\n-\r\n-      response: \"Here's the signup page. Please proceed With Registration.\",\r\n-    },\r\n-\r\n-    {\r\n-      utterance: \"take me to signup page\",\r\n-\r\n-      route: \"/signup\",\r\n-\r\n-      response: \"Here's the signup page. Please proceed With Registration.\",\r\n-    },\r\n-\r\n-    {\r\n-      utterance: \"Go to signup page\",\r\n-\r\n-      route: \"/signup\",\r\n-\r\n-      response: \"Here's the signup page. Please proceed With Registration.\",\r\n-    },\r\n-\r\n-    {\r\n-      utterance: \"open signup page\",\r\n-\r\n-      route: \"/signup\",\r\n-\r\n-      response: \"Here's the signup page. Please proceed With Registration.\",\r\n-    },\r\n-\r\n-    {\r\n-      utterance: \"Go to face id\",\r\n-\r\n-      route: \"/login/faceid\",\r\n-\r\n-      response: \"Here's Face ID Login. Please proceed.\",\r\n-    },\r\n-\r\n-    {\r\n-      utterance: \"Go to face id login\",\r\n-\r\n-      route: \"/login/faceid\",\r\n-\r\n-      response: \"Here's Face ID Login. Please proceed.\",\r\n-    },\r\n-    {\r\n-      utterance: \"Go to face login\",\r\n-\r\n-      route: \"/login/faceid\",\r\n-\r\n-      response: \"Here's Face ID Login. Please proceed.\",\r\n-    },\r\n-\r\n-    {\r\n-      utterance: \"login with face id\",\r\n-\r\n-      route: \"/login/faceid\",\r\n-\r\n-      response: \"Here's Face ID Login. Please proceed.\",\r\n-    },\r\n-\r\n-    {\r\n-      utterance: \"login with face\",\r\n-\r\n-      route: \"/login/faceid\",\r\n-\r\n-      response: \"Here's Face ID Login. Please proceed.\",\r\n-    },\r\n-\r\n-    {\r\n-      utterance: \"i want to login with face\",\r\n-\r\n-      route: \"/login/faceid\",\r\n-\r\n-      response: \"Here's Face ID Login. Please proceed.\",\r\n-    },\r\n-\r\n-    {\r\n-      utterance: \"login with voice\",\r\n-\r\n-      route: \"/login/voiceid\",\r\n-\r\n-      response: \"Here's Voice Login. Please proceed.\",\r\n-    },\r\n-\r\n-    {\r\n-      utterance: \"i want to login with voice\",\r\n-\r\n-      route: \"/login/voiceid\",\r\n-\r\n-      response: \"Here's Voice Login. Please proceed.\",\r\n-    },\r\n-\r\n-    {\r\n-      utterance: \"go to voice login\",\r\n-\r\n-      route: \"/login/voiceid\",\r\n-\r\n-      response: \"Here's Voice Login. Please proceed.\",\r\n-    },\r\n-\r\n-    {\r\n-      utterance: \"login with voice\",\r\n-\r\n-      route: \"/login/voiceid\",\r\n-\r\n-      response: \"Here's Voice Login. Please proceed.\",\r\n-    },\r\n-\r\n-    {\r\n-      utterance: \"login with mobile\",\r\n-\r\n-      route: \"/login/mobile\",\r\n-\r\n-      response: \"Here's Mobile Login. Please proceed.\",\r\n-    },\r\n-\r\n-    {\r\n-      utterance: \"i want to login with mobile\",\r\n-\r\n-      route: \"/login/mobile\",\r\n-\r\n-      response: \"Here's Mobile Login. Please proceed.\",\r\n-    },\r\n-    {\r\n-      utterance: \"go to mobile login\",\r\n-\r\n-      route: \"/login/mobile\",\r\n-\r\n-      response: \"Here's Mobile Login. Please proceed.\",\r\n-    },\r\n-    {\r\n-      utterance: \"go to about page\",\r\n-\r\n-      route: \"/aboutus\",\r\n-\r\n-      response: \"This is About us.\",\r\n-    },\r\n-    {\r\n-      utterance: \"go to about us page\",\r\n-\r\n-      route: \"/aboutus\",\r\n-\r\n-      response: \"This is About us.\",\r\n-    },\r\n-    {\r\n-      utterance: \"open about us page\",\r\n-\r\n-      route: \"/aboutus\",\r\n-\r\n-      response: \"This is About us.\",\r\n-    },\r\n-    {\r\n-      utterance: \"open about page\",\r\n-\r\n-      route: \"/aboutus\",\r\n-\r\n-      response: \"This is About us.\",\r\n-    },\r\n-    {\r\n-      utterance: \"take me to about page\",\r\n-\r\n-      route: \"/aboutus\",\r\n-\r\n-      response: \"This is About us.\",\r\n-    },\r\n-    {\r\n-      utterance: \"take me to about us page\",\r\n-\r\n-      route: \"/aboutus\",\r\n-\r\n-      response: \"This is About us.\",\r\n-    },\r\n-\r\n-    {\r\n-      utterance: \"go to contact page\",\r\n-\r\n-      route: \"/contactus\",\r\n-\r\n-      response: \"You can contact us from here\",\r\n-    },\r\n-    {\r\n-      utterance: \"go to contact us page\",\r\n-\r\n-      route: \"/contactus\",\r\n-\r\n-      response: \"You can contact us from here\",\r\n-    },\r\n-    {\r\n-      utterance: \"open contact us page\",\r\n-\r\n-      route: \"/contactus\",\r\n-\r\n-      response: \"You can contact us from here\",\r\n-    },\r\n-    {\r\n-      utterance: \"open contact page\",\r\n-\r\n-      route: \"/contactus\",\r\n-\r\n-      response: \"You can contact us from here\",\r\n-    },\r\n-    {\r\n-      utterance: \"take me to about page\",\r\n-\r\n-      route: \"/contactus\",\r\n-\r\n-      response: \"You can contact us from here\",\r\n-    },\r\n-    {\r\n-      utterance: \"take me to contact us page\",\r\n-\r\n-      route: \"/contactus\",\r\n-\r\n-      response: \"You can contact us from here\",\r\n-    },\r\n-\r\n-    {\r\n-      utterance: \"what are platform features\",\r\n-\r\n-      response:\r\n-        \"Dashboard, Dynamic time table, Learning Networks, Little Masters, Video Based Dictionary, General Search.\",\r\n-    },\r\n-\r\n-    {\r\n-      utterance: \"Features of platform\",\r\n-\r\n-      response:\r\n-        \"Dashboard, Dynamic time table, Learning Networks, Little Masters, Video Based Dictionary, General Search.\",\r\n-    },\r\n-\r\n-    {\r\n-      utterance: \"What does the platform offer\",\r\n-\r\n-      response:\r\n-        \"Dashboard, Dynamic time table, Learning Networks, Little Masters, Video Based Dictionary, General Search.\",\r\n-    },\r\n-\r\n-    {\r\n-      utterance: \"Say me the features of platform\",\r\n-\r\n-      response:\r\n-        \"Dashboard, Dynamic time table, Learning Networks, Little Masters, Video Based Dictionary, General Search.\",\r\n-    },\r\n-\r\n-    {\r\n-      utterance: \"Say me the services of platform\",\r\n-\r\n-      response:\r\n-        \"Dashboard, Dynamic time table, Learning Networks, Little Masters, Video Based Dictionary, General Search.\",\r\n-    },\r\n-\r\n-    {\r\n-      utterance: \"tell me the services offered by the platform\",\r\n-\r\n-      response:\r\n-        \"Dashboard, Dynamic time table, Learning Networks, Little Masters, Video Based Dictionary, General Search.\",\r\n-    },\r\n-\r\n-    {\r\n-      utterance: \"explain platform services\",\r\n-\r\n-      response:\r\n-        \"Dashboard, Dynamic time table, Learning Networks, Little Masters, Video Based Dictionary, General Search.\",\r\n-    },\r\n-\r\n-    {\r\n-      utterance: \"Give me the Parent voice of Julia Harris\",\r\n-\r\n-      response:\r\n-        \"Brane education has helped my son a lot in his studies. He improved a lot in his studies and is now able to score good marks in his exams\",\r\n-    },\r\n-\r\n-    {\r\n-      utterance: \"Leaders Voice\",\r\n-\r\n-      response:\r\n-        \"This Voice-interactive AI Platform is a game Changer. It revolutionizes education.\",\r\n-    },\r\n-\r\n-    {\r\n-      utterance: \"Curriculum Supported by Brane Education\",\r\n-\r\n-      response:\r\n-        \"we support multiple Boards let me say few Telangana State Board Andhra Pradesh Board Maharashtra Board Assam Board\",\r\n-    },\r\n-\r\n-    {\r\n-      utterance: \"Boards supported by the platform\",\r\n-\r\n-      response:\r\n-        \"we support multiple Boards let me say few Telangana State Board Andhra Pradesh Board Maharashtra Board Assam Board\",\r\n-    },\r\n-\r\n-    {\r\n-      utterance: \"Curriculum\",\r\n-\r\n-      response:\r\n-        \"we support multiple Boards let me say few Telangana State Board Andhra Pradesh Board Maharashtra Board Assam Board\",\r\n-    },\r\n-\r\n-    {\r\n-      utterance: \"what is today's quote\",\r\n-\r\n-      response:\r\n-        \"Determination is the power that sees us through all our frustration and obstacles. It helps in building our willpower which is the very basis of success.\",\r\n-\r\n-      route: \"/childpage\",\r\n-    },\r\n-\r\n-    {\r\n-      utterance: \"Today's Inspirational quote\",\r\n-\r\n-      response:\r\n-        \"Determination is the power that sees us through all our frustration and obstacles. It helps in building our willpower which is the very basis of success.\",\r\n-\r\n-      route: \"/childpage\",\r\n-    },\r\n-\r\n-    {\r\n-      utterance: \"say me today's quote\",\r\n-\r\n-      response:\r\n-        \"Determination is the power that sees us through all our frustration and obstacles. It helps in building our willpower which is the very basis of success.\",\r\n-\r\n-      route: \"/childpage\",\r\n-    },\r\n-    {\r\n-      utterance: \"go back\",\r\n-      response: \"\",\r\n-      action: goBack, // Note the use of an action property\r\n-    },\r\n-    {\r\n-      utterance: \"go forward\",\r\n-      response: \"\",\r\n-      action: goForward,\r\n-    },\r\n-    // {\r\n-    //   utterance: \"play video\",\r\n-    //   // response: \"Playing video.\",\r\n-    //   action: playVideo,\r\n-    // },\r\n-    // {\r\n-    //   utterance: \"pause video\",\r\n-    //   // response: \"Pausing video.\",\r\n-    //   action: pauseVideo,\r\n-    // },\r\n-    // {\r\n-    //   utterance: \"start video\",\r\n-    //   // response: \"Playing video.\",\r\n-    //   action: playVideo,\r\n-    // },\r\n-    // {\r\n-    //   utterance: \"stop video\",\r\n-    //   // response: \"Playing video.\",\r\n-    //   action: pauseVideo,\r\n-    // },\r\n-    {\r\n-      utterance: \"scroll up\",\r\n-      // response: \"Scrolling up.\",\r\n-      action: scrollUp,\r\n-    },\r\n-    {\r\n-      utterance: \"scroll down\",\r\n-      // response: \"Scrolling down.\",\r\n-      action: scrollDown,\r\n-    },\r\n-    {\r\n-      utterance: \"go up\",\r\n-\r\n-      // response: \"Scrolling up.\",\r\n-      action: scrollUp,\r\n-    },\r\n-    {\r\n-      utterance: \"go down\",\r\n-      // response: \"Scrolling down.\",\r\n-      action: scrollDown,\r\n-    },\r\n-    {\r\n-      utterance: \"scroll to top\",\r\n-      action: scrollToTop,\r\n-    },\r\n-    {\r\n-      utterance: \"scroll to bottom\",\r\n-      action: scrollToBottom,\r\n-    },\r\n-    {\r\n-      utterance: \"brane stop\",\r\n-      action: stopListening,\r\n-    },\r\n-    {\r\n-      utterance: \"brane turn off\",\r\n-      action: stopListening,\r\n-    },\r\n-    {\r\n-      utterance: \"brane stop the bot\",\r\n-      action: stopListening,\r\n-    },\r\n-    // {\r\n-    //   utterance: \"mute the video\",\r\n-    //   action: muteVideo,\r\n-    // },\r\n-    // {\r\n-    //   utterance: \"unmute the video\",\r\n-    //   action: unmuteVideo,\r\n-    // },\r\n-    // {\r\n-    //   utterance: \"stop the video sound\",\r\n-    //   action: muteVideo,\r\n-    // },\r\n-    // {\r\n-    //   utterance: \"play the video sound\",\r\n-    //   action: unmuteVideo,\r\n-    // },\r\n-    {\r\n-      utterance: \"play transforming education video\",\r\n-      action: () => controlVideo(\"ourProjectsVideo\", \"play\"),\r\n-    },\r\n-    {\r\n-      utterance: \"start transforming education video\",\r\n-      action: () => controlVideo(\"ourProjectsVideo\", \"play\"),\r\n-    },\r\n-    {\r\n-      utterance: \"pause transforming education video\",\r\n-      action: () => controlVideo(\"ourProjectsVideo\", \"pause\"),\r\n-    },\r\n-    {\r\n-      utterance: \"stop transforming education video\",\r\n-      action: () => controlVideo(\"ourProjectsVideo\", \"pause\"),\r\n-    },\r\n-    {\r\n-      utterance: \"mute transforming education video\",\r\n-      action: () => controlVideo(\"ourProjectsVideo\", \"mute\"),\r\n-    },\r\n-    {\r\n-      utterance: \"unmute transforming education video\",\r\n-      action: () => controlVideo(\"ourProjectsVideo\", \"unmute\"),\r\n-    },\r\n-    {\r\n-      utterance: \"fullscreen transforming education video\",\r\n-      action: () => controlVideo(\"ourProjectsVideo\", \"fullscreen\"),\r\n-    },\r\n-    {\r\n-      utterance: \"exit fullscreen transforming education video\",\r\n-      action: () => controlVideo(\"ourProjectsVideo\", \"exitFullscreen\"),\r\n-    },\r\n-    {\r\n-      utterance: \"increase volume transforming education video\",\r\n-      action: () => controlVideo(\"ourProjectsVideo\", \"increaseVolume\"),\r\n-    },\r\n-    {\r\n-      utterance: \"decrease volume transforming education video\",\r\n-      action: () => controlVideo(\"ourProjectsVideo\", \"decreaseVolume\"),\r\n-    },\r\n-    {\r\n-      utterance: \"play the video about transforming education\",\r\n-      action: () => controlVideo(\"ourProjectsVideo\", \"play\"),\r\n-    },\r\n-    {\r\n-      utterance: \"start the transforming education video\",\r\n-      action: () => controlVideo(\"ourProjectsVideo\", \"play\"),\r\n-    },\r\n-    {\r\n-      utterance: \"can you pause the video on transforming education\",\r\n-      action: () => controlVideo(\"ourProjectsVideo\", \"pause\"),\r\n-    },\r\n-    {\r\n-      utterance: \"stop the video about transforming education\",\r\n-      action: () => controlVideo(\"ourProjectsVideo\", \"pause\"),\r\n-    },\r\n-    {\r\n-      utterance: \"mute the transforming education video\",\r\n-      action: () => controlVideo(\"ourProjectsVideo\", \"mute\"),\r\n-    },\r\n-    {\r\n-      utterance: \"unmute the video on transforming education\",\r\n-      action: () => controlVideo(\"ourProjectsVideo\", \"unmute\"),\r\n-    },\r\n-    {\r\n-      utterance: \"make the transforming education video fullscreen\",\r\n-      action: () => controlVideo(\"ourProjectsVideo\", \"fullscreen\"),\r\n-    },\r\n-    {\r\n-      utterance: \"exit fullscreen on the transforming education video\",\r\n-      action: () => controlVideo(\"ourProjectsVideo\", \"exitFullscreen\"),\r\n-    },\r\n-    {\r\n-      utterance: \"increase the volume of the transforming education video\",\r\n-      action: () => controlVideo(\"ourProjectsVideo\", \"increaseVolume\"),\r\n-    },\r\n-    {\r\n-      utterance: \"decrease the volume of the transforming education video\",\r\n-      action: () => controlVideo(\"ourProjectsVideo\", \"decreaseVolume\"),\r\n-    },\r\n-\r\n-    {\r\n-      utterance: \"play leaders voice video\",\r\n-      action: () => controlVideo(\"leadersVoiceVideo\", \"play\"),\r\n-    },\r\n-    {\r\n-      utterance: \"start leaders voice video\",\r\n-      action: () => controlVideo(\"leadersVoiceVideo\", \"play\"),\r\n-    },\r\n-    {\r\n-      utterance: \"pause leaders voice video\",\r\n-      action: () => controlVideo(\"leadersVoiceVideo\", \"pause\"),\r\n-    },\r\n-    {\r\n-      utterance: \"stop leaders voice video\",\r\n-      action: () => controlVideo(\"leadersVoiceVideo\", \"pause\"),\r\n-    },\r\n-    {\r\n-      utterance: \"mute leaders voice video\",\r\n-      action: () => controlVideo(\"leadersVoiceVideo\", \"mute\"),\r\n-    },\r\n-    {\r\n-      utterance: \"unmute leaders voice video\",\r\n-      action: () => controlVideo(\"leadersVoiceVideo\", \"unmute\"),\r\n-    },\r\n-    {\r\n-      utterance: \"fullscreen leaders voice video\",\r\n-      action: () => controlVideo(\"leadersVoiceVideo\", \"fullscreen\"),\r\n-    },\r\n-    {\r\n-      utterance: \"exit fullscreen leaders voice video\",\r\n-      action: () => controlVideo(\"leadersVoiceVideo\", \"exitFullscreen\"),\r\n-    },\r\n-    {\r\n-      utterance: \"increase volume leaders voice video\",\r\n-      action: () => controlVideo(\"leadersVoiceVideo\", \"increaseVolume\"),\r\n-    },\r\n-    {\r\n-      utterance: \"decrease volume leaders voice video\",\r\n-      action: () => controlVideo(\"leadersVoiceVideo\", \"decreaseVolume\"),\r\n-    },\r\n-\r\n-    {\r\n-      utterance: \"set mobile number to *\",\r\n-      action: (spokenText) => {\r\n-        if (!spokenText) {\r\n-          speak(\"I couldn't understand the command.\");\r\n-          return;\r\n-        }\r\n-        const mobileNumber = extractNumber(spokenText);\r\n-        if (mobileNumber) {\r\n-          setMobileNumber(mobileNumber);\r\n-        } else {\r\n-          speak(\"I couldn't find a number in your command.\");\r\n-        }\r\n-      },\r\n-    },\r\n-    {\r\n-      utterance: \"enter mobile number as *\",\r\n-      action: (spokenText) => {\r\n-        if (!spokenText) {\r\n-          speak(\"I couldn't understand the command.\");\r\n-          return;\r\n-        }\r\n-        const mobileNumber = extractNumber(spokenText);\r\n-        if (mobileNumber) {\r\n-          setMobileNumber(mobileNumber);\r\n-        } else {\r\n-          speak(\"I couldn't find a number in your command.\");\r\n-        }\r\n-      },\r\n-    },\r\n-    {\r\n-      utterance: \"enter my mobile number as *\",\r\n-      action: (spokenText) => {\r\n-        if (!spokenText) {\r\n-          speak(\"I couldn't understand the command.\");\r\n-          return;\r\n-        }\r\n-        const mobileNumber = extractNumber(spokenText);\r\n-        if (mobileNumber) {\r\n-          setMobileNumber(mobileNumber);\r\n-        } else {\r\n-          speak(\"I couldn't find a number in your command.\");\r\n-        }\r\n-      },\r\n-    },\r\n-    {\r\n-      utterance: \"set mobile number as *\",\r\n-      action: (spokenText) => {\r\n-        if (!spokenText) {\r\n-          speak(\"I couldn't understand the command.\");\r\n-          return;\r\n-        }\r\n-        const mobileNumber = extractNumber(spokenText);\r\n-        if (mobileNumber) {\r\n-          setMobileNumber(mobileNumber);\r\n-        } else {\r\n-          speak(\"I couldn't find a number in your command.\");\r\n-        }\r\n-      },\r\n-    },\r\n-    {\r\n-      utterance: \"fill mobile number as *\",\r\n-      action: (spokenText) => {\r\n-        if (!spokenText) {\r\n-          speak(\"I couldn't understand the command.\");\r\n-          return;\r\n-        }\r\n-        const mobileNumber = extractNumber(spokenText);\r\n-        if (mobileNumber) {\r\n-          setMobileNumber(mobileNumber);\r\n-        } else {\r\n-          speak(\"I couldn't find a number in your command.\");\r\n-        }\r\n-      },\r\n-    },\r\n-    {\r\n-      utterance: \"set password as *\",\r\n-      action: (spokenText) => {\r\n-        if (!spokenText) {\r\n-          speak(\"I couldn't understand the command.\");\r\n-          return;\r\n-        }\r\n-        const pin = extractNumber(spokenText);\r\n-        if (pin) {\r\n-          setPin(pin);\r\n-        } else {\r\n-          speak(\"I couldn't find a number in your command.\");\r\n-        }\r\n-      },\r\n-    },\r\n-    {\r\n-      utterance: \"enter password as *\",\r\n-      action: (spokenText) => {\r\n-        if (!spokenText) {\r\n-          speak(\"I couldn't understand the command.\");\r\n-          return;\r\n-        }\r\n-        const pin = extractNumber(spokenText);\r\n-        if (pin) {\r\n-          setPin(pin);\r\n-        } else {\r\n-          speak(\"I couldn't find a number in your command.\");\r\n-        }\r\n-      },\r\n-    },\r\n-    {\r\n-      utterance: \"change password to *\",\r\n-      action: (spokenText) => {\r\n-        if (!spokenText) {\r\n-          speak(\"I couldn't understand the command.\");\r\n-          return;\r\n-        }\r\n-        const pin = extractNumber(spokenText);\r\n-        if (pin) {\r\n-          setPin(pin);\r\n-        } else {\r\n-          speak(\"I couldn't find a number in your command.\");\r\n-        }\r\n-      },\r\n-    },\r\n-    {\r\n-      utterance: \"fill password as *\",\r\n-      action: (spokenText) => {\r\n-        if (!spokenText) {\r\n-          speak(\"I couldn't understand the command.\");\r\n-          return;\r\n-        }\r\n-        const pin = extractNumber(spokenText);\r\n-        if (pin) {\r\n-          setPin(pin);\r\n-        } else {\r\n-          speak(\"I couldn't find a number in your command.\");\r\n-        }\r\n-      },\r\n-    },\r\n-    {\r\n-      utterance: \"set pin as *\",\r\n-      action: (spokenText) => {\r\n-        if (!spokenText) {\r\n-          speak(\"I couldn't understand the command.\");\r\n-          return;\r\n-        }\r\n-        const pin = extractNumber(spokenText);\r\n-        if (pin) {\r\n-          setPin(pin);\r\n-        } else {\r\n-          speak(\"I couldn't find a number in your command.\");\r\n-        }\r\n-      },\r\n-    },\r\n-    {\r\n-      utterance: \"set pin to *\",\r\n-      action: (spokenText) => {\r\n-        if (!spokenText) {\r\n-          speak(\"I couldn't understand the command.\");\r\n-          return;\r\n-        }\r\n-        const pin = extractNumber(spokenText);\r\n-        if (pin) {\r\n-          setPin(pin);\r\n-        } else {\r\n-          speak(\"I couldn't find a number in your command.\");\r\n-        }\r\n-      },\r\n-    },\r\n-    {\r\n-      utterance: \"enter pin as *\",\r\n-      action: (spokenText) => {\r\n-        if (!spokenText) {\r\n-          speak(\"I couldn't understand the command.\");\r\n-          return;\r\n-        }\r\n-        const pin = extractNumber(spokenText);\r\n-        if (pin) {\r\n-          setPin(pin);\r\n-        } else {\r\n-          speak(\"I couldn't find a number in your command.\");\r\n-        }\r\n-      },\r\n-    },\r\n-    {\r\n-      utterance: \"press login\",\r\n-      action: () => {\r\n         triggerLogin();\r\n         speak(\"Attempting to log in.\");\r\n       },\r\n     },\r\n"
                },
                {
                    "date": 1700826024981,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,4050 @@\n+import React, { useState, useEffect, useRef } from \"react\";\r\n+import { useNavigate, useLocation } from \"react-router-dom\";\r\n+import Fuse from \"fuse.js\";\r\n+import \"./VoiceBot.css\";\r\n+import chatbotimage from \"../../assets/chatbotgif.gif\";\r\n+\r\n+const VoiceBot = ({ videoRefs,setMobileNumber,setPin,triggerLogin, setTriggerRecordAudio }) => {\r\n+  const [isListening, setIsListening] = useState(false);\r\n+  const [isSpeaking, setIsSpeaking] = useState(false);\r\n+  const recognition = useRef(null);\r\n+  const speechSynthesis = useRef(window.speechSynthesis);\r\n+  const [hasGreeted, setHasGreeted] = useState(false);\r\n+  const navigate = useNavigate();\r\n+\r\n+  // Initialize speech recognition\r\n+  useEffect(() => {\r\n+    recognition.current = new window.webkitSpeechRecognition();\r\n+    recognition.current.continuous = true;\r\n+    recognition.current.interimResults = false;\r\n+    recognition.current.onresult = onResult;\r\n+    recognition.current.onend = onRecognitionEnd;\r\n+    recognition.current.starting = false;\r\n+\r\n+    recognition.current.onerror = (event) => {\r\n+      console.error(\"Recognition error:\", event.error);\r\n+      if (isListening && !isSpeaking) {\r\n+        restartRecognition();\r\n+      }\r\n+    };\r\n+\r\n+    return () => {\r\n+      if (recognition.current) {\r\n+        recognition.current.abort();\r\n+      }\r\n+    };\r\n+  }, []);\r\n+\r\n+  useEffect(() => {\r\n+    const checkRecognition = () => {\r\n+      if (isListening && !isSpeaking && !recognition.current.starting) {\r\n+        console.log(\"Restarting recognition because it's not active.\");\r\n+        recognition.current.starting = true;\r\n+        recognition.current.start();\r\n+        console.log(\"Restarted recognition.\");\r\n+      }\r\n+    };\r\n+\r\n+    const recognitionCheckInterval = setInterval(checkRecognition, 500); // Check every .5 second\r\n+\r\n+    return () => {\r\n+      clearInterval(recognitionCheckInterval);\r\n+    };\r\n+  }, [isListening, isSpeaking]);\r\n+\r\n+  const historyStack = useRef([]);\r\n+\r\n+  useEffect(() => {\r\n+    return () => {\r\n+      // Clean up the listener when the component unmounts\r\n+      window.removeEventListener(\"popstate\", handlePopState);\r\n+    };\r\n+  }, []);\r\n+\r\n+  const handlePopState = () => {\r\n+    // This needs to handle both back and forward browser actions\r\n+    // Use some logic to determine whether it's a back or forward action\r\n+    // For simplicity, assume it's always back\r\n+    historyStack.current.pop();\r\n+    forwardStack.current.length = 0; // Clear forward stack on manual navigation\r\n+  };\r\n+\r\n+  // Listen to popstate events to update the history stack\r\n+  useEffect(() => {\r\n+    window.addEventListener(\"popstate\", handlePopState);\r\n+  }, []);\r\n+\r\n+  const forwardStack = useRef([]);\r\n+\r\n+  const goBack = () => {\r\n+    if (window.history.state && window.history.state.idx > 0) {\r\n+      window.history.back();\r\n+      speak(\"Going back\");\r\n+    } else {\r\n+      speak(\"Can't go back any further.\");\r\n+    }\r\n+  };\r\n+\r\n+  const goForward = () => {\r\n+    if (\r\n+      window.history.state &&\r\n+      window.history.state.idx < window.history.length - 1\r\n+    ) {\r\n+      window.history.forward();\r\n+      speak(\"Going forward\");\r\n+    } else {\r\n+      speak(\"No forward history available.\");\r\n+    }\r\n+  };\r\n+\r\n+  const scrollAmount = window.innerHeight * 0.82;\r\n+\r\n+  const scrollUp = () => {\r\n+    if (window.pageYOffset === 0) {\r\n+      speak(\"Already at the top of the page.\");\r\n+    } else {\r\n+      window.scrollBy(0, -scrollAmount);\r\n+      speak(\"Scrolled up.\");\r\n+    }\r\n+  };\r\n+\r\n+  const scrollDown = () => {\r\n+    const maxScrollTop =\r\n+      document.documentElement.scrollHeight - window.innerHeight;\r\n+    if (window.pageYOffset >= maxScrollTop) {\r\n+      speak(\"Already at the bottom of the page.\");\r\n+    } else {\r\n+      window.scrollBy(0, scrollAmount);\r\n+      speak(\"Scrolled down.\");\r\n+    }\r\n+  };\r\n+\r\n+  const scrollToTop = () => {\r\n+    if (window.pageYOffset === 0) {\r\n+      speak(\"Already at the top of the page.\");\r\n+    } else {\r\n+      window.scrollTo(0, 0);\r\n+      speak(\"Scrolled to the top of the page.\");\r\n+    }\r\n+  };\r\n+\r\n+  const scrollToBottom = () => {\r\n+    const maxScrollTop =\r\n+      document.documentElement.scrollHeight - window.innerHeight;\r\n+    if (window.pageYOffset >= maxScrollTop) {\r\n+      speak(\"Already at the bottom of the page.\");\r\n+    } else {\r\n+      window.scrollTo(0, document.body.scrollHeight);\r\n+      speak(\"Scrolled to the bottom of the page.\");\r\n+    }\r\n+  };\r\n+\r\n+  const controlVideo = (videoId, action) => {\r\n+    const videoRef = videoRefs.current.get(videoId);\r\n+    if (videoRef && videoRef.current) {\r\n+      switch (action) {\r\n+        case \"play\":\r\n+          videoRef.current.play();\r\n+          break;\r\n+        case \"pause\":\r\n+          videoRef.current.pause();\r\n+          break;\r\n+        case \"mute\":\r\n+          videoRef.current.muted = true;\r\n+          break;\r\n+        case \"unmute\":\r\n+          videoRef.current.muted = false;\r\n+          break;\r\n+        case \"fullscreen\":\r\n+          if (videoRef.current.requestFullscreen) {\r\n+            videoRef.current.requestFullscreen();\r\n+          } else if (videoRef.current.webkitRequestFullscreen) {\r\n+            // Safari\r\n+            videoRef.current.webkitRequestFullscreen();\r\n+          } else if (videoRef.current.msRequestFullscreen) {\r\n+            // IE11\r\n+            videoRef.current.msRequestFullscreen();\r\n+          }\r\n+          break;\r\n+        case \"exitFullscreen\":\r\n+          if (document.exitFullscreen) {\r\n+            document.exitFullscreen();\r\n+          } else if (document.webkitExitFullscreen) {\r\n+            // Safari\r\n+            document.webkitExitFullscreen();\r\n+          } else if (document.msExitFullscreen) {\r\n+            // IE11\r\n+            document.msExitFullscreen();\r\n+          }\r\n+          break;\r\n+        case \"increaseVolume\":\r\n+          if (videoRef.current.volume < 1) {\r\n+            videoRef.current.volume = Math.min(\r\n+              1,\r\n+              videoRef.current.volume + 0.1\r\n+            );\r\n+          }\r\n+          break;\r\n+        case \"decreaseVolume\":\r\n+          if (videoRef.current.volume > 0) {\r\n+            videoRef.current.volume = Math.max(\r\n+              0,\r\n+              videoRef.current.volume - 0.1\r\n+            );\r\n+          }\r\n+          break;\r\n+        // Add other cases as needed\r\n+      }\r\n+      speak(\r\n+        `${\r\n+          action.charAt(0).toUpperCase() +\r\n+          action\r\n+            .slice(1)\r\n+            .replace(/([A-Z])/g, \" $1\")\r\n+            .toLowerCase()\r\n+        }ing video.`\r\n+      );\r\n+    } else {\r\n+      speak(`Video not found.`);\r\n+    }\r\n+  };\r\n+\r\n+  const speak = (message) => {\r\n+    const utterance = new SpeechSynthesisUtterance(message);\r\n+    utterance.onend = () => {\r\n+      setIsSpeaking(false);\r\n+      // Restart recognition after speaking has ended\r\n+      if (isListening) {\r\n+        restartRecognition();\r\n+      }\r\n+    };\r\n+\r\n+    setIsSpeaking(true);\r\n+    // Stop recognition when the bot starts speaking\r\n+    if (recognition.current) {\r\n+      recognition.current.abort();\r\n+    }\r\n+    speechSynthesis.current.speak(utterance);\r\n+  };\r\n+\r\n+  const restartRecognition = () => {\r\n+    // Check if recognition is not already started and if the bot is set to listen\r\n+    if (\r\n+      recognition.current &&\r\n+      !recognition.current.starting &&\r\n+      isListening &&\r\n+      !isSpeaking\r\n+    ) {\r\n+      recognition.current.abort(); // Ensure any ongoing recognition is stopped\r\n+      recognition.current.starting = true;\r\n+      recognition.current.start();\r\n+    }\r\n+  };\r\n+\r\n+  // Restart recognition when bot finishes speaking and isListening is true\r\n+  useEffect(() => {\r\n+    if (!isSpeaking && isListening) {\r\n+      restartRecognition();\r\n+    }\r\n+  }, [isSpeaking, isListening]);\r\n+\r\n+  const onResult = (event) => {\r\n+    const resultIndex = event.resultIndex;\r\n+    const transcript = event.results[resultIndex][0].transcript\r\n+      .trim()\r\n+      .toLowerCase();\r\n+\r\n+    if (event.results[resultIndex].isFinal) {\r\n+      console.log(`Recognized text: ${transcript}`);\r\n+      if (transcript.includes(\"brain\")) {\r\n+        console.log(\"Wake word heard, processing command...\");\r\n+        handleCommandWithFuse(transcript.replace(\"brain\", \"\"));\r\n+      }\r\n+    }\r\n+  };\r\n+\r\n+  const onRecognitionEnd = () => {\r\n+    recognition.current.starting = false;\r\n+    if (isListening && !isSpeaking) {\r\n+      restartRecognition();\r\n+    }\r\n+  };\r\n+\r\n+  useEffect(() => {\r\n+    if (isListening && !hasGreeted) {\r\n+      speak(\"Hello, I'm Brane. How can I help you today?\");\r\n+      setHasGreeted(true);\r\n+    }\r\n+  }, [isListening, hasGreeted]);\r\n+\r\n+  // Updated startListening function\r\n+  const startListening = () => {\r\n+    setIsListening(true);\r\n+    if (!recognition.current.starting) {\r\n+      restartRecognition();\r\n+    }\r\n+  };\r\n+\r\n+  // Updated stopListening function\r\n+  const stopListening = () => {\r\n+    setIsListening(false);\r\n+    if (speechSynthesis.current.speaking) {\r\n+      speechSynthesis.current.cancel();\r\n+    }\r\n+    recognition.current.abort();\r\n+  };\r\n+\r\n+  const handleCommandWithFuse = (command) => {\r\n+    const fuse = new Fuse(commands, { keys: [\"utterance\"], threshold: 0.4 });\r\n+    const results = fuse.search(command);\r\n+    const foundCommand = results.length ? results[0].item : null;\r\n+\r\n+    if (foundCommand) {\r\n+      console.log(\"Command text to process:\", command);\r\n+      console.log(\"Command found:\", foundCommand.utterance);\r\n+      if (foundCommand.action) {\r\n+        foundCommand.action(command); // Pass the command text to the action function\r\n+      } else if (foundCommand.route) {\r\n+        navigate(foundCommand.route);\r\n+      }\r\n+\r\n+      // Speak after performing the action or navigation\r\n+      speak(foundCommand.response);\r\n+    } else {\r\n+      console.log(\"No command found.\");\r\n+      speak(\"I'm not sure how to respond to that.\");\r\n+    }\r\n+  };\r\n+\r\n+  const extractNumber = (spokenText) => {\r\n+    if (!spokenText) return null; // Return null if spokenText is undefined or null\r\n+  \r\n+    const sanitizedText = spokenText.replace(/[.,]/g, '');\r\n+    const matches = sanitizedText.match(/\\d+/);\r\n+    return matches ? matches[0] : null;\r\n+  };\r\n+\r\n+\r\n+  const commands = [\r\n+    {\r\n+      utterance: \"Hello who are you ?\",\r\n+\r\n+      response:\r\n+        \"Hi! This is Brane! your Voice bot from Brane Education How can I Assist you Today ?\",\r\n+    },\r\n+\r\n+    {\r\n+      utterance: \"Hello\",\r\n+\r\n+      response: \"Hi! How can I assist you today?\",\r\n+    },\r\n+\r\n+    {\r\n+      utterance: \"hello\",\r\n+\r\n+      response: \"Hi! How can I assist you today?\",\r\n+    },\r\n+\r\n+    {\r\n+      utterance: \"Hi.\",\r\n+\r\n+      response: \"Hello! How can I assist you today?\",\r\n+    },\r\n+\r\n+    {\r\n+      utterance: \"Hey there\",\r\n+\r\n+      response: \"Hi! How can I assist you today?\",\r\n+    },\r\n+\r\n+    {\r\n+      utterance: \"Good morning Brane.\",\r\n+\r\n+      response: \"Hey Hiii! Good morning  ! How can I help you?\",\r\n+    },\r\n+\r\n+    {\r\n+      utterance: \"Good afternoon Brane.\",\r\n+\r\n+      response: \"Hey Hiii! Good after noon ! How can I help you?\",\r\n+    },\r\n+\r\n+    {\r\n+      utterance: \"Good evening Brane.\",\r\n+\r\n+      response: \"Hey Hiii! Good evening ! How can I help you?\",\r\n+    },\r\n+\r\n+    {\r\n+      utterance: \"take me to homepage\",\r\n+\r\n+      route: \"/\",\r\n+\r\n+      response: \"You're in Homepage now\",\r\n+    },\r\n+    {\r\n+      utterance: \"open homepage\",\r\n+\r\n+      route: \"/\",\r\n+\r\n+      response: \"You're in Homepage now\",\r\n+    },\r\n+    {\r\n+      utterance: \"go to homepage\",\r\n+\r\n+      route: \"/\",\r\n+\r\n+      response: \"You're in Homepage now\",\r\n+    },\r\n+    {\r\n+      utterance: \"go back to homepage\",\r\n+\r\n+      route: \"/\",\r\n+\r\n+      response: \"You're in Homepage now\",\r\n+    },\r\n+    {\r\n+      utterance: \"can you please take me to login page\",\r\n+\r\n+      route: \"/login\",\r\n+\r\n+      response: \"Here's the Login Page, Please Login\",\r\n+    },\r\n+\r\n+    {\r\n+      utterance: \"please take me to login page\",\r\n+\r\n+      route: \"/login\",\r\n+\r\n+      response: \"Here's the Login Page, Please Login\",\r\n+    },\r\n+\r\n+    {\r\n+      utterance: \"Go to login page\",\r\n+\r\n+      route: \"/login\",\r\n+\r\n+      response: \"Here's the Login Page, Please Login\",\r\n+    },\r\n+\r\n+    {\r\n+      utterance: \"open login page\",\r\n+\r\n+      route: \"/login\",\r\n+\r\n+      response: \"Here's the Login Page, Please Login\",\r\n+    },\r\n+\r\n+    {\r\n+      utterance: \"can you please take me to signup page\",\r\n+\r\n+      route: \"/signup\",\r\n+\r\n+      response: \"Here's the signup page. Please proceed With Registration.\",\r\n+    },\r\n+\r\n+    {\r\n+      utterance: \"take me to signup page\",\r\n+\r\n+      route: \"/signup\",\r\n+\r\n+      response: \"Here's the signup page. Please proceed With Registration.\",\r\n+    },\r\n+\r\n+    {\r\n+      utterance: \"Go to signup page\",\r\n+\r\n+      route: \"/signup\",\r\n+\r\n+      response: \"Here's the signup page. Please proceed With Registration.\",\r\n+    },\r\n+\r\n+    {\r\n+      utterance: \"open signup page\",\r\n+\r\n+      route: \"/signup\",\r\n+\r\n+      response: \"Here's the signup page. Please proceed With Registration.\",\r\n+    },\r\n+\r\n+    {\r\n+      utterance: \"Go to face id\",\r\n+\r\n+      route: \"/login/faceid\",\r\n+\r\n+      response: \"Here's Face ID Login. Please proceed.\",\r\n+    },\r\n+\r\n+    {\r\n+      utterance: \"Go to face id login\",\r\n+\r\n+      route: \"/login/faceid\",\r\n+\r\n+      response: \"Here's Face ID Login. Please proceed.\",\r\n+    },\r\n+    {\r\n+      utterance: \"Go to face login\",\r\n+\r\n+      route: \"/login/faceid\",\r\n+\r\n+      response: \"Here's Face ID Login. Please proceed.\",\r\n+    },\r\n+\r\n+    {\r\n+      utterance: \"login with face id\",\r\n+\r\n+      route: \"/login/faceid\",\r\n+\r\n+      response: \"Here's Face ID Login. Please proceed.\",\r\n+    },\r\n+\r\n+    {\r\n+      utterance: \"login with face\",\r\n+\r\n+      route: \"/login/faceid\",\r\n+\r\n+      response: \"Here's Face ID Login. Please proceed.\",\r\n+    },\r\n+\r\n+    {\r\n+      utterance: \"i want to login with face\",\r\n+\r\n+      route: \"/login/faceid\",\r\n+\r\n+      response: \"Here's Face ID Login. Please proceed.\",\r\n+    },\r\n+\r\n+    {\r\n+      utterance: \"login with voice\",\r\n+\r\n+      route: \"/login/voiceid\",\r\n+\r\n+      response: \"Here's Voice Login. Please proceed.\",\r\n+    },\r\n+\r\n+    {\r\n+      utterance: \"i want to login with voice\",\r\n+\r\n+      route: \"/login/voiceid\",\r\n+\r\n+      response: \"Here's Voice Login. Please proceed.\",\r\n+    },\r\n+\r\n+    {\r\n+      utterance: \"go to voice login\",\r\n+\r\n+      route: \"/login/voiceid\",\r\n+\r\n+      response: \"Here's Voice Login. Please proceed.\",\r\n+    },\r\n+\r\n+    {\r\n+      utterance: \"login with voice\",\r\n+\r\n+      route: \"/login/voiceid\",\r\n+\r\n+      response: \"Here's Voice Login. Please proceed.\",\r\n+    },\r\n+\r\n+    {\r\n+      utterance: \"login with mobile\",\r\n+\r\n+      route: \"/login/mobile\",\r\n+\r\n+      response: \"Here's Mobile Login. Please proceed.\",\r\n+    },\r\n+\r\n+    {\r\n+      utterance: \"i want to login with mobile\",\r\n+\r\n+      route: \"/login/mobile\",\r\n+\r\n+      response: \"Here's Mobile Login. Please proceed.\",\r\n+    },\r\n+    {\r\n+      utterance: \"go to mobile login\",\r\n+\r\n+      route: \"/login/mobile\",\r\n+\r\n+      response: \"Here's Mobile Login. Please proceed.\",\r\n+    },\r\n+    {\r\n+      utterance: \"go to about page\",\r\n+\r\n+      route: \"/aboutus\",\r\n+\r\n+      response: \"This is About us.\",\r\n+    },\r\n+    {\r\n+      utterance: \"go to about us page\",\r\n+\r\n+      route: \"/aboutus\",\r\n+\r\n+      response: \"This is About us.\",\r\n+    },\r\n+    {\r\n+      utterance: \"open about us page\",\r\n+\r\n+      route: \"/aboutus\",\r\n+\r\n+      response: \"This is About us.\",\r\n+    },\r\n+    {\r\n+      utterance: \"open about page\",\r\n+\r\n+      route: \"/aboutus\",\r\n+\r\n+      response: \"This is About us.\",\r\n+    },\r\n+    {\r\n+      utterance: \"take me to about page\",\r\n+\r\n+      route: \"/aboutus\",\r\n+\r\n+      response: \"This is About us.\",\r\n+    },\r\n+    {\r\n+      utterance: \"take me to about us page\",\r\n+\r\n+      route: \"/aboutus\",\r\n+\r\n+      response: \"This is About us.\",\r\n+    },\r\n+\r\n+    {\r\n+      utterance: \"go to contact page\",\r\n+\r\n+      route: \"/contactus\",\r\n+\r\n+      response: \"You can contact us from here\",\r\n+    },\r\n+    {\r\n+      utterance: \"go to contact us page\",\r\n+\r\n+      route: \"/contactus\",\r\n+\r\n+      response: \"You can contact us from here\",\r\n+    },\r\n+    {\r\n+      utterance: \"open contact us page\",\r\n+\r\n+      route: \"/contactus\",\r\n+\r\n+      response: \"You can contact us from here\",\r\n+    },\r\n+    {\r\n+      utterance: \"open contact page\",\r\n+\r\n+      route: \"/contactus\",\r\n+\r\n+      response: \"You can contact us from here\",\r\n+    },\r\n+    {\r\n+      utterance: \"take me to about page\",\r\n+\r\n+      route: \"/contactus\",\r\n+\r\n+      response: \"You can contact us from here\",\r\n+    },\r\n+    {\r\n+      utterance: \"take me to contact us page\",\r\n+\r\n+      route: \"/contactus\",\r\n+\r\n+      response: \"You can contact us from here\",\r\n+    },\r\n+\r\n+    {\r\n+      utterance: \"what are platform features\",\r\n+\r\n+      response:\r\n+        \"Dashboard, Dynamic time table, Learning Networks, Little Masters, Video Based Dictionary, General Search.\",\r\n+    },\r\n+\r\n+    {\r\n+      utterance: \"Features of platform\",\r\n+\r\n+      response:\r\n+        \"Dashboard, Dynamic time table, Learning Networks, Little Masters, Video Based Dictionary, General Search.\",\r\n+    },\r\n+\r\n+    {\r\n+      utterance: \"What does the platform offer\",\r\n+\r\n+      response:\r\n+        \"Dashboard, Dynamic time table, Learning Networks, Little Masters, Video Based Dictionary, General Search.\",\r\n+    },\r\n+\r\n+    {\r\n+      utterance: \"Say me the features of platform\",\r\n+\r\n+      response:\r\n+        \"Dashboard, Dynamic time table, Learning Networks, Little Masters, Video Based Dictionary, General Search.\",\r\n+    },\r\n+\r\n+    {\r\n+      utterance: \"Say me the services of platform\",\r\n+\r\n+      response:\r\n+        \"Dashboard, Dynamic time table, Learning Networks, Little Masters, Video Based Dictionary, General Search.\",\r\n+    },\r\n+\r\n+    {\r\n+      utterance: \"tell me the services offered by the platform\",\r\n+\r\n+      response:\r\n+        \"Dashboard, Dynamic time table, Learning Networks, Little Masters, Video Based Dictionary, General Search.\",\r\n+    },\r\n+\r\n+    {\r\n+      utterance: \"explain platform services\",\r\n+\r\n+      response:\r\n+        \"Dashboard, Dynamic time table, Learning Networks, Little Masters, Video Based Dictionary, General Search.\",\r\n+    },\r\n+\r\n+    {\r\n+      utterance: \"Give me the Parent voice of Julia Harris\",\r\n+\r\n+      response:\r\n+        \"Brane education has helped my son a lot in his studies. He improved a lot in his studies and is now able to score good marks in his exams\",\r\n+    },\r\n+\r\n+    {\r\n+      utterance: \"Leaders Voice\",\r\n+\r\n+      response:\r\n+        \"This Voice-interactive AI Platform is a game Changer. It revolutionizes education.\",\r\n+    },\r\n+\r\n+    {\r\n+      utterance: \"Curriculum Supported by Brane Education\",\r\n+\r\n+      response:\r\n+        \"we support multiple Boards let me say few Telangana State Board Andhra Pradesh Board Maharashtra Board Assam Board\",\r\n+    },\r\n+\r\n+    {\r\n+      utterance: \"Boards supported by the platform\",\r\n+\r\n+      response:\r\n+        \"we support multiple Boards let me say few Telangana State Board Andhra Pradesh Board Maharashtra Board Assam Board\",\r\n+    },\r\n+\r\n+    {\r\n+      utterance: \"Curriculum\",\r\n+\r\n+      response:\r\n+        \"we support multiple Boards let me say few Telangana State Board Andhra Pradesh Board Maharashtra Board Assam Board\",\r\n+    },\r\n+\r\n+    {\r\n+      utterance: \"what is today's quote\",\r\n+\r\n+      response:\r\n+        \"Determination is the power that sees us through all our frustration and obstacles. It helps in building our willpower which is the very basis of success.\",\r\n+\r\n+      route: \"/childpage\",\r\n+    },\r\n+\r\n+    {\r\n+      utterance: \"Today's Inspirational quote\",\r\n+\r\n+      response:\r\n+        \"Determination is the power that sees us through all our frustration and obstacles. It helps in building our willpower which is the very basis of success.\",\r\n+\r\n+      route: \"/childpage\",\r\n+    },\r\n+\r\n+    {\r\n+      utterance: \"say me today's quote\",\r\n+\r\n+      response:\r\n+        \"Determination is the power that sees us through all our frustration and obstacles. It helps in building our willpower which is the very basis of success.\",\r\n+\r\n+      route: \"/childpage\",\r\n+    },\r\n+    {\r\n+      utterance: \"go back\",\r\n+      response: \"\",\r\n+      action: goBack, // Note the use of an action property\r\n+    },\r\n+    {\r\n+      utterance: \"go forward\",\r\n+      response: \"\",\r\n+      action: goForward,\r\n+    },\r\n+    // {\r\n+    //   utterance: \"play video\",\r\n+    //   // response: \"Playing video.\",\r\n+    //   action: playVideo,\r\n+    // },\r\n+    // {\r\n+    //   utterance: \"pause video\",\r\n+    //   // response: \"Pausing video.\",\r\n+    //   action: pauseVideo,\r\n+    // },\r\n+    // {\r\n+    //   utterance: \"start video\",\r\n+    //   // response: \"Playing video.\",\r\n+    //   action: playVideo,\r\n+    // },\r\n+    // {\r\n+    //   utterance: \"stop video\",\r\n+    //   // response: \"Playing video.\",\r\n+    //   action: pauseVideo,\r\n+    // },\r\n+    {\r\n+      utterance: \"scroll up\",\r\n+      // response: \"Scrolling up.\",\r\n+      action: scrollUp,\r\n+    },\r\n+    {\r\n+      utterance: \"scroll down\",\r\n+      // response: \"Scrolling down.\",\r\n+      action: scrollDown,\r\n+    },\r\n+    {\r\n+      utterance: \"go up\",\r\n+\r\n+      // response: \"Scrolling up.\",\r\n+      action: scrollUp,\r\n+    },\r\n+    {\r\n+      utterance: \"go down\",\r\n+      // response: \"Scrolling down.\",\r\n+      action: scrollDown,\r\n+    },\r\n+    {\r\n+      utterance: \"scroll to top\",\r\n+      action: scrollToTop,\r\n+    },\r\n+    {\r\n+      utterance: \"scroll to bottom\",\r\n+      action: scrollToBottom,\r\n+    },\r\n+    {\r\n+      utterance: \"brane stop\",\r\n+      action: stopListening,\r\n+    },\r\n+    {\r\n+      utterance: \"brane turn off\",\r\n+      action: stopListening,\r\n+    },\r\n+    {\r\n+      utterance: \"brane stop the bot\",\r\n+      action: stopListening,\r\n+    },\r\n+    // {\r\n+    //   utterance: \"mute the video\",\r\n+    //   action: muteVideo,\r\n+    // },\r\n+    // {\r\n+    //   utterance: \"unmute the video\",\r\n+    //   action: unmuteVideo,\r\n+    // },\r\n+    // {\r\n+    //   utterance: \"stop the video sound\",\r\n+    //   action: muteVideo,\r\n+    // },\r\n+    // {\r\n+    //   utterance: \"play the video sound\",\r\n+    //   action: unmuteVideo,\r\n+    // },\r\n+    {\r\n+      utterance: \"play transforming education video\",\r\n+      action: () => controlVideo(\"ourProjectsVideo\", \"play\"),\r\n+    },\r\n+    {\r\n+      utterance: \"start transforming education video\",\r\n+      action: () => controlVideo(\"ourProjectsVideo\", \"play\"),\r\n+    },\r\n+    {\r\n+      utterance: \"pause transforming education video\",\r\n+      action: () => controlVideo(\"ourProjectsVideo\", \"pause\"),\r\n+    },\r\n+    {\r\n+      utterance: \"stop transforming education video\",\r\n+      action: () => controlVideo(\"ourProjectsVideo\", \"pause\"),\r\n+    },\r\n+    {\r\n+      utterance: \"mute transforming education video\",\r\n+      action: () => controlVideo(\"ourProjectsVideo\", \"mute\"),\r\n+    },\r\n+    {\r\n+      utterance: \"unmute transforming education video\",\r\n+      action: () => controlVideo(\"ourProjectsVideo\", \"unmute\"),\r\n+    },\r\n+    {\r\n+      utterance: \"fullscreen transforming education video\",\r\n+      action: () => controlVideo(\"ourProjectsVideo\", \"fullscreen\"),\r\n+    },\r\n+    {\r\n+      utterance: \"exit fullscreen transforming education video\",\r\n+      action: () => controlVideo(\"ourProjectsVideo\", \"exitFullscreen\"),\r\n+    },\r\n+    {\r\n+      utterance: \"increase volume transforming education video\",\r\n+      action: () => controlVideo(\"ourProjectsVideo\", \"increaseVolume\"),\r\n+    },\r\n+    {\r\n+      utterance: \"decrease volume transforming education video\",\r\n+      action: () => controlVideo(\"ourProjectsVideo\", \"decreaseVolume\"),\r\n+    },\r\n+    {\r\n+      utterance: \"play the video about transforming education\",\r\n+      action: () => controlVideo(\"ourProjectsVideo\", \"play\"),\r\n+    },\r\n+    {\r\n+      utterance: \"start the transforming education video\",\r\n+      action: () => controlVideo(\"ourProjectsVideo\", \"play\"),\r\n+    },\r\n+    {\r\n+      utterance: \"can you pause the video on transforming education\",\r\n+      action: () => controlVideo(\"ourProjectsVideo\", \"pause\"),\r\n+    },\r\n+    {\r\n+      utterance: \"stop the video about transforming education\",\r\n+      action: () => controlVideo(\"ourProjectsVideo\", \"pause\"),\r\n+    },\r\n+    {\r\n+      utterance: \"mute the transforming education video\",\r\n+      action: () => controlVideo(\"ourProjectsVideo\", \"mute\"),\r\n+    },\r\n+    {\r\n+      utterance: \"unmute the video on transforming education\",\r\n+      action: () => controlVideo(\"ourProjectsVideo\", \"unmute\"),\r\n+    },\r\n+    {\r\n+      utterance: \"make the transforming education video fullscreen\",\r\n+      action: () => controlVideo(\"ourProjectsVideo\", \"fullscreen\"),\r\n+    },\r\n+    {\r\n+      utterance: \"exit fullscreen on the transforming education video\",\r\n+      action: () => controlVideo(\"ourProjectsVideo\", \"exitFullscreen\"),\r\n+    },\r\n+    {\r\n+      utterance: \"increase the volume of the transforming education video\",\r\n+      action: () => controlVideo(\"ourProjectsVideo\", \"increaseVolume\"),\r\n+    },\r\n+    {\r\n+      utterance: \"decrease the volume of the transforming education video\",\r\n+      action: () => controlVideo(\"ourProjectsVideo\", \"decreaseVolume\"),\r\n+    },\r\n+\r\n+    {\r\n+      utterance: \"play leaders voice video\",\r\n+      action: () => controlVideo(\"leadersVoiceVideo\", \"play\"),\r\n+    },\r\n+    {\r\n+      utterance: \"start leaders voice video\",\r\n+      action: () => controlVideo(\"leadersVoiceVideo\", \"play\"),\r\n+    },\r\n+    {\r\n+      utterance: \"pause leaders voice video\",\r\n+      action: () => controlVideo(\"leadersVoiceVideo\", \"pause\"),\r\n+    },\r\n+    {\r\n+      utterance: \"stop leaders voice video\",\r\n+      action: () => controlVideo(\"leadersVoiceVideo\", \"pause\"),\r\n+    },\r\n+    {\r\n+      utterance: \"mute leaders voice video\",\r\n+      action: () => controlVideo(\"leadersVoiceVideo\", \"mute\"),\r\n+    },\r\n+    {\r\n+      utterance: \"unmute leaders voice video\",\r\n+      action: () => controlVideo(\"leadersVoiceVideo\", \"unmute\"),\r\n+    },\r\n+    {\r\n+      utterance: \"fullscreen leaders voice video\",\r\n+      action: () => controlVideo(\"leadersVoiceVideo\", \"fullscreen\"),\r\n+    },\r\n+    {\r\n+      utterance: \"exit fullscreen leaders voice video\",\r\n+      action: () => controlVideo(\"leadersVoiceVideo\", \"exitFullscreen\"),\r\n+    },\r\n+    {\r\n+      utterance: \"increase volume leaders voice video\",\r\n+      action: () => controlVideo(\"leadersVoiceVideo\", \"increaseVolume\"),\r\n+    },\r\n+    {\r\n+      utterance: \"decrease volume leaders voice video\",\r\n+      action: () => controlVideo(\"leadersVoiceVideo\", \"decreaseVolume\"),\r\n+    },\r\n+\r\n+    {\r\n+      utterance: \"set mobile number to *\",\r\n+      action: (spokenText) => {\r\n+        if (!spokenText) {\r\n+          speak(\"I couldn't understand the command.\");\r\n+          return;\r\n+        }\r\n+        const mobileNumber = extractNumber(spokenText);\r\n+        if (mobileNumber) {\r\n+          setMobileNumber(mobileNumber);\r\n+        } else {\r\n+          speak(\"I couldn't find a number in your command.\");\r\n+        }\r\n+      },\r\n+    },\r\n+    {\r\n+      utterance: \"enter mobile number as *\",\r\n+      action: (spokenText) => {\r\n+        if (!spokenText) {\r\n+          speak(\"I couldn't understand the command.\");\r\n+          return;\r\n+        }\r\n+        const mobileNumber = extractNumber(spokenText);\r\n+        if (mobileNumber) {\r\n+          setMobileNumber(mobileNumber);\r\n+        } else {\r\n+          speak(\"I couldn't find a number in your command.\");\r\n+        }\r\n+      },\r\n+    },\r\n+    {\r\n+      utterance: \"enter my mobile number as *\",\r\n+      action: (spokenText) => {\r\n+        if (!spokenText) {\r\n+          speak(\"I couldn't understand the command.\");\r\n+          return;\r\n+        }\r\n+        const mobileNumber = extractNumber(spokenText);\r\n+        if (mobileNumber) {\r\n+          setMobileNumber(mobileNumber);\r\n+        } else {\r\n+          speak(\"I couldn't find a number in your command.\");\r\n+        }\r\n+      },\r\n+    },\r\n+    {\r\n+      utterance: \"set mobile number as *\",\r\n+      action: (spokenText) => {\r\n+        if (!spokenText) {\r\n+          speak(\"I couldn't understand the command.\");\r\n+          return;\r\n+        }\r\n+        const mobileNumber = extractNumber(spokenText);\r\n+        if (mobileNumber) {\r\n+          setMobileNumber(mobileNumber);\r\n+        } else {\r\n+          speak(\"I couldn't find a number in your command.\");\r\n+        }\r\n+      },\r\n+    },\r\n+    {\r\n+      utterance: \"fill mobile number as *\",\r\n+      action: (spokenText) => {\r\n+        if (!spokenText) {\r\n+          speak(\"I couldn't understand the command.\");\r\n+          return;\r\n+        }\r\n+        const mobileNumber = extractNumber(spokenText);\r\n+        if (mobileNumber) {\r\n+          setMobileNumber(mobileNumber);\r\n+        } else {\r\n+          speak(\"I couldn't find a number in your command.\");\r\n+        }\r\n+      },\r\n+    },\r\n+    {\r\n+      utterance: \"set password as *\",\r\n+      action: (spokenText) => {\r\n+        if (!spokenText) {\r\n+          speak(\"I couldn't understand the command.\");\r\n+          return;\r\n+        }\r\n+        const pin = extractNumber(spokenText);\r\n+        if (pin) {\r\n+          setPin(pin);\r\n+        } else {\r\n+          speak(\"I couldn't find a number in your command.\");\r\n+        }\r\n+      },\r\n+    },\r\n+    {\r\n+      utterance: \"enter password as *\",\r\n+      action: (spokenText) => {\r\n+        if (!spokenText) {\r\n+          speak(\"I couldn't understand the command.\");\r\n+          return;\r\n+        }\r\n+        const pin = extractNumber(spokenText);\r\n+        if (pin) {\r\n+          setPin(pin);\r\n+        } else {\r\n+          speak(\"I couldn't find a number in your command.\");\r\n+        }\r\n+      },\r\n+    },\r\n+    {\r\n+      utterance: \"change password to *\",\r\n+      action: (spokenText) => {\r\n+        if (!spokenText) {\r\n+          speak(\"I couldn't understand the command.\");\r\n+          return;\r\n+        }\r\n+        const pin = extractNumber(spokenText);\r\n+        if (pin) {\r\n+          setPin(pin);\r\n+        } else {\r\n+          speak(\"I couldn't find a number in your command.\");\r\n+        }\r\n+      },\r\n+    },\r\n+    {\r\n+      utterance: \"fill password as *\",\r\n+      action: (spokenText) => {\r\n+        if (!spokenText) {\r\n+          speak(\"I couldn't understand the command.\");\r\n+          return;\r\n+        }\r\n+        const pin = extractNumber(spokenText);\r\n+        if (pin) {\r\n+          setPin(pin);\r\n+        } else {\r\n+          speak(\"I couldn't find a number in your command.\");\r\n+        }\r\n+      },\r\n+    },\r\n+    {\r\n+      utterance: \"set pin as *\",\r\n+      action: (spokenText) => {\r\n+        if (!spokenText) {\r\n+          speak(\"I couldn't understand the command.\");\r\n+          return;\r\n+        }\r\n+        const pin = extractNumber(spokenText);\r\n+        if (pin) {\r\n+          setPin(pin);\r\n+        } else {\r\n+          speak(\"I couldn't find a number in your command.\");\r\n+        }\r\n+      },\r\n+    },\r\n+    {\r\n+      utterance: \"set pin to *\",\r\n+      action: (spokenText) => {\r\n+        if (!spokenText) {\r\n+          speak(\"I couldn't understand the command.\");\r\n+          return;\r\n+        }\r\n+        const pin = extractNumber(spokenText);\r\n+        if (pin) {\r\n+          setPin(pin);\r\n+        } else {\r\n+          speak(\"I couldn't find a number in your command.\");\r\n+        }\r\n+      },\r\n+    },\r\n+    {\r\n+      utterance: \"enter pin as *\",\r\n+      action: (spokenText) => {\r\n+        if (!spokenText) {\r\n+          speak(\"I couldn't understand the command.\");\r\n+          return;\r\n+        }\r\n+        const pin = extractNumber(spokenText);\r\n+        if (pin) {\r\n+          setPin(pin);\r\n+        } else {\r\n+          speak(\"I couldn't find a number in your command.\");\r\n+        }\r\n+      },\r\n+    },\r\n+    {\r\n+      utterance: \"fill pin as *\",\r\n+      action: (spokenText) => {\r\n+        if (!spokenText) {\r\n+          speak(\"I couldn't understand the command.\");\r\n+          return;\r\n+        }\r\n+        const pin = extractNumber(spokenText);\r\n+        if (pin) {\r\n+          setPin(pin);\r\n+        } else {\r\n+          speak(\"I couldn't find a number in your command.\");\r\n+        }\r\n+      },\r\n+    },\r\n+    {\r\n+      utterance: \"press login\",\r\n+      action: () => {\r\n+        triggerLogin();\r\n+        speak(\"Attempting to log in.\");\r\n+      },\r\n+    },\r\n+    {\r\n+      utterance: \"press login button\",\r\n+      action: () => {\r\n+        triggerLogin();\r\n+        speak(\"Attempting to log in.\");\r\n+      },\r\n+    },\r\n+    {\r\n+      utterance: \"click login button\",\r\n+      action: () => {\r\n+        triggerLogin();\r\n+        speak(\"Attempting to log in.\");\r\n+      },\r\n+    },\r\n+    {\r\n+      utterance: \"press record audio\",\r\n+      action: () => {\r\n+        console.log(\"Record Audio command detected\");\r\n+        setTriggerRecordAudio(true);\r\n+      },\r\n+      response: \"Started\"\r\n+    },\r\n+    \r\n+  ];\r\n+\r\n+  return (\r\n+    <div className=\"speech-bot-container\">\r\n+      <div\r\n+        className={`button-container ${\r\n+          isListening ? \"voicebotframeactive\" : \"voicebotframe\"\r\n+        }`}\r\n+      >\r\n+        {/* <button onClick={isListening ? stopListening : startListening}>\r\n+          {isListening ? \"Stop\" : \"Start\"} Animation\r\n+        </button> */}\r\n+        <img\r\n+          className=\"botimage\"\r\n+          src={chatbotimage}\r\n+          alt=\"\"\r\n+          onClick={isListening ? stopListening : startListening}\r\n+        />\r\n+      </div>\r\n+    </div>\r\n+  );\r\n+};\r\n+\r\n+export default VoiceBot;\r\n+\r\n+{\r\n+  /* // import React, { useState, useEffect, useRef } from \"react\";\r\n+// import { useNavigate, useLocation } from \"react-router-dom\";\r\n+// import Fuse from \"fuse.js\";\r\n+// import \"./VoiceBot.css\";\r\n+\r\n+// const VoiceBot = ({ videoRef }) => {\r\n+//   const [isListening, setIsListening] = useState(false);\r\n+//   const [isSpeaking, setIsSpeaking] = useState(false);\r\n+//   const recognition = useRef(null);\r\n+//   const speechSynthesis = useRef(window.speechSynthesis);\r\n+//   const [hasGreeted, setHasGreeted] = useState(false);\r\n+//   const navigate = useNavigate();\r\n+\r\n+//   useEffect(() => {\r\n+//     recognition.current = new window.webkitSpeechRecognition();\r\n+//     recognition.current.continuous = true;\r\n+//     recognition.current.interimResults = false;\r\n+//     recognition.current.onresult = onResult;\r\n+//     recognition.current.onend = onRecognitionEnd;\r\n+//     recognition.current.starting = false;\r\n+\r\n+//     // Simplified error handling, removed specific handling for 'no-speech'\r\n+//     recognition.current.onerror = (event) => {\r\n+//       console.error(\"Recognition error:\", event.error);\r\n+//       // Check if listening is true and the bot isn't speaking\r\n+//       if (isListening && !isSpeaking) {\r\n+//         // Restart recognition\r\n+//         restartRecognition();\r\n+//       }\r\n+//     };\r\n+\r\n+//     return () => {\r\n+//       if (recognition.current) {\r\n+//         recognition.current.abort();\r\n+//       }\r\n+//     };\r\n+//   }, []);\r\n+\r\n+//   useEffect(() => {\r\n+//     const checkRecognition = () => {\r\n+//       if (isListening && !isSpeaking && !recognition.current.starting) {\r\n+//         console.log(\"Restarting recognition because it's not active.\");\r\n+//         recognition.current.starting = true;\r\n+//         recognition.current.start();\r\n+//         console.log(\"Restarted recognition.\");\r\n+//       }\r\n+//     };\r\n+\r\n+//     const recognitionCheckInterval = setInterval(checkRecognition, 100); // Check every 1 second\r\n+\r\n+//     return () => {\r\n+//       clearInterval(recognitionCheckInterval);\r\n+//     };\r\n+//   }, [isListening, isSpeaking]);\r\n+\r\n+//   const restartRecognition = () => {\r\n+//     if (recognition.current.starting) {\r\n+//       console.log(\"Recognition is already starting or running.\");\r\n+//       return;\r\n+//     }\r\n+\r\n+//     recognition.current.abort(); // Stop any existing recognition process\r\n+//     recognition.current.starting = true;\r\n+//     recognition.current.start();\r\n+//     console.log(\"Recognition restarted.\");\r\n+//   };\r\n+\r\n+//   const historyStack = useRef([]);\r\n+\r\n+//   useEffect(() => {\r\n+//     return () => {\r\n+//       // Clean up the listener when the component unmounts\r\n+//       window.removeEventListener(\"popstate\", handlePopState);\r\n+//     };\r\n+//   }, []);\r\n+\r\n+//   const handlePopState = () => {\r\n+//     // This needs to handle both back and forward browser actions\r\n+//     // Use some logic to determine whether it's a back or forward action\r\n+//     // For simplicity, assume it's always back\r\n+//     historyStack.current.pop();\r\n+//     forwardStack.current.length = 0; // Clear forward stack on manual navigation\r\n+//   };\r\n+  \r\n+\r\n+//   // Add a new entry to the stack whenever navigate is called\r\n+//   const customNavigate = (to, options) => {\r\n+//     historyStack.current.push(to);\r\n+//     navigate(to, options);\r\n+//   };\r\n+\r\n+//   // Listen to popstate events to update the history stack\r\n+//   useEffect(() => {\r\n+//     window.addEventListener(\"popstate\", handlePopState);\r\n+//   }, []);\r\n+\r\n+//   const forwardStack = useRef([]);\r\n+\r\n+//   const goBack = () => {\r\n+//     if (window.history.state && window.history.state.idx > 0) {\r\n+//       window.history.back();\r\n+//       speak(\"Going back\");\r\n+//     } else {\r\n+//       speak(\"Can't go back any further.\");\r\n+//     }\r\n+//   };\r\n+\r\n+//   const goForward = () => {\r\n+//     if (window.history.state && window.history.state.idx < window.history.length - 1) {\r\n+//       window.history.forward();\r\n+//       speak(\"Going forward\");\r\n+//     } else {\r\n+//       speak(\"No forward history available.\");\r\n+//     }\r\n+//   };\r\n+\r\n+//   const playVideo = () => {\r\n+//     if (videoRef.current) {\r\n+//       videoRef.current.play();\r\n+//       speak(\"Playing video.\");\r\n+//     } else {\r\n+//       speak(\"No video to play.\");\r\n+//     }\r\n+//   };\r\n+\r\n+//   const pauseVideo = () => {\r\n+//     if (videoRef.current) {\r\n+//       videoRef.current.pause();\r\n+//       speak(\"Video paused.\");\r\n+//     } else {\r\n+//       speak(\"No video to pause.\");\r\n+//     }\r\n+//   };\r\n+\r\n+//   const scrollAmount = window.innerHeight * 0.82;\r\n+\r\n+//   const scrollUp = () => {\r\n+//     if (window.pageYOffset === 0) {\r\n+//       speak(\"Already at the top of the page.\");\r\n+//     } else {\r\n+//       window.scrollBy(0, -scrollAmount);\r\n+//       speak(\"Scrolled up.\");\r\n+//     }\r\n+//   };\r\n+\r\n+//   const scrollDown = () => {\r\n+//     const maxScrollTop =\r\n+//       document.documentElement.scrollHeight - window.innerHeight;\r\n+//     if (window.pageYOffset >= maxScrollTop) {\r\n+//       speak(\"Already at the bottom of the page.\");\r\n+//     } else {\r\n+//       window.scrollBy(0, scrollAmount);\r\n+//       speak(\"Scrolled down.\");\r\n+//     }\r\n+//   };\r\n+\r\n+//   const scrollToTop = () => {\r\n+//     if (window.pageYOffset === 0) {\r\n+//       speak(\"Already at the top of the page.\");\r\n+//     } else {\r\n+//       window.scrollTo(0, 0);\r\n+//       speak(\"Scrolled to the top of the page.\");\r\n+//     }\r\n+//   };\r\n+\r\n+//   const scrollToBottom = () => {\r\n+//     const maxScrollTop =\r\n+//       document.documentElement.scrollHeight - window.innerHeight;\r\n+//     if (window.pageYOffset >= maxScrollTop) {\r\n+//       speak(\"Already at the bottom of the page.\");\r\n+//     } else {\r\n+//       window.scrollTo(0, document.body.scrollHeight);\r\n+//       speak(\"Scrolled to the bottom of the page.\");\r\n+//     }\r\n+//   };\r\n+\r\n+//   const speak = (message) => {\r\n+//     console.log(\"speak function called with message:\", message);\r\n+//     const utterance = new SpeechSynthesisUtterance(message);\r\n+//     utterance.onend = () => {\r\n+//       setIsSpeaking(false);\r\n+//       console.log(\"Speaking ended.\");\r\n+//       if (isListening && !recognition.current.starting) {\r\n+//         console.log(\"Restarting recognition after speaking.\");\r\n+//         recognition.current.starting = true;\r\n+//         recognition.current.start();\r\n+//         console.log(\"Restarted recognition after speaking.\");\r\n+//       }\r\n+//     };\r\n+\r\n+//     setIsSpeaking(true);\r\n+//     console.log(\"Speaking started.\");\r\n+//     recognition.current.stop(); // Ensure to stop recognition before speaking\r\n+//     speechSynthesis.current.speak(utterance);\r\n+//   };\r\n+\r\n+//   const onResult = (event) => {\r\n+//     const resultIndex = event.resultIndex;\r\n+//     const transcript = event.results[resultIndex][0].transcript\r\n+//       .trim()\r\n+//       .toLowerCase();\r\n+\r\n+//     if (event.results[resultIndex].isFinal) {\r\n+//       console.log(`Recognized text: ${transcript}`);\r\n+//       if (transcript.includes(\"brain\")) {\r\n+//         console.log(\"Wake word heard, processing command...\");\r\n+//         handleCommandWithFuse(transcript.replace(\"brain\", \"\"));\r\n+//       }\r\n+//     }\r\n+//   };\r\n+\r\n+//   const onRecognitionEnd = () => {\r\n+//     recognition.current.starting = false;\r\n+//     if (isListening && !isSpeaking) {\r\n+//       restartRecognition();\r\n+//     }\r\n+//   };\r\n+\r\n+//   useEffect(() => {\r\n+//     if (isListening) {\r\n+//       if (!hasGreeted) {\r\n+//         speak(\"Hello, I'm Brane. How can I help you today?\");\r\n+//         setHasGreeted(true);\r\n+//       } else {\r\n+//         speak(\"Listening.\");\r\n+//       }\r\n+//     }\r\n+//   }, [isListening, hasGreeted]);\r\n+\r\n+\r\n+//   const startListening = () => {\r\n+//     if (!recognition.current.starting) {\r\n+//       setIsListening(true);\r\n+//       restartRecognition();\r\n+//     }\r\n+//   };\r\n+\r\n+//   const stopListening = () => {\r\n+//     setIsListening(false);\r\n+//     recognition.current.abort();\r\n+//     if (speechSynthesis.current.speaking) {\r\n+//       speechSynthesis.current.cancel();\r\n+//     }\r\n+//   };\r\n+\r\n+//   const handleCommandWithFuse = (command) => {\r\n+//     const fuse = new Fuse(commands, { keys: [\"utterance\"], threshold: 0.4 });\r\n+//     const results = fuse.search(command);\r\n+//     const foundCommand = results.length ? results[0].item : null;\r\n+\r\n+//     if (foundCommand) {\r\n+//       console.log(\"Command found:\", foundCommand.utterance);\r\n+\r\n+//       if (foundCommand.action) {\r\n+//         foundCommand.action();\r\n+//       } else if (foundCommand.route) {\r\n+//         navigate(foundCommand.route);\r\n+//       }\r\n+\r\n+//       // Speak after performing the action or navigation\r\n+//       speak(foundCommand.response);\r\n+//     } else {\r\n+//       console.log(\"No command found.\");\r\n+//       speak(\"I'm not sure how to respond to that.\");\r\n+//     }\r\n+//   };\r\n+\r\n+//   const commands = [\r\n+//     {\r\n+//       utterance: \"Hello who are you ?\",\r\n+\r\n+//       response:\r\n+//         \"Hi! This is Brane! your Voice bot from Brane Education How can I Assist you Today ?\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"Hello\",\r\n+\r\n+//       response: \"Hi! How can I assist you today?\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"hello\",\r\n+\r\n+//       response: \"Hi! How can I assist you today?\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"Hi.\",\r\n+\r\n+//       response: \"Hello! How can I assist you today?\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"Hey there\",\r\n+\r\n+//       response: \"Hi! How can I assist you today?\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"Good morning Brane.\",\r\n+\r\n+//       response: \"Hey Hiii! Good morning  ! How can I help you?\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"Good afternoon Brane.\",\r\n+\r\n+//       response: \"Hey Hiii! Good after noon ! How can I help you?\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"Good evening Brane.\",\r\n+\r\n+//       response: \"Hey Hiii! Good evening ! How can I help you?\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"can you please take me to login page\",\r\n+\r\n+//       route: \"/login\",\r\n+\r\n+//       response: \"Here's the Login Page, Please Login\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"please take me to login page\",\r\n+\r\n+//       route: \"/login\",\r\n+\r\n+//       response: \"Here's the Login Page, Please Login\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"Go to login page\",\r\n+\r\n+//       route: \"/login\",\r\n+\r\n+//       response: \"Here's the Login Page, Please Login\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"open login page\",\r\n+\r\n+//       route: \"/login\",\r\n+\r\n+//       response: \"Here's the Login Page, Please Login\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"can you please take me to signup page\",\r\n+\r\n+//       route: \"/signup\",\r\n+\r\n+//       response: \"Here's the signup page. Please proceed With Registration.\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"take me to signup page\",\r\n+\r\n+//       route: \"/signup\",\r\n+\r\n+//       response: \"Here's the signup page. Please proceed With Registration.\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"Go to signup page\",\r\n+\r\n+//       route: \"/signup\",\r\n+\r\n+//       response: \"Here's the signup page. Please proceed With Registration.\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"open signup page\",\r\n+\r\n+//       route: \"/signup\",\r\n+\r\n+//       response: \"Here's the signup page. Please proceed With Registration.\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"Go to face id\",\r\n+\r\n+//       route: \"/login/faceid\",\r\n+\r\n+//       response: \"Here's Face ID Login. Please proceed.\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"Go to face id login\",\r\n+\r\n+//       route: \"/login/faceid\",\r\n+\r\n+//       response: \"Here's Face ID Login. Please proceed.\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"login with face id\",\r\n+\r\n+//       route: \"/login/faceid\",\r\n+\r\n+//       response: \"Here's Face ID Login. Please proceed.\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"login with face\",\r\n+\r\n+//       route: \"/login/faceid\",\r\n+\r\n+//       response: \"Here's Face ID Login. Please proceed.\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"i want to login with face\",\r\n+\r\n+//       route: \"/login/faceid\",\r\n+\r\n+//       response: \"Here's Face ID Login. Please proceed.\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"login with voice\",\r\n+\r\n+//       route: \"/login/voiceid\",\r\n+\r\n+//       response: \"Here's Voice Login. Please proceed.\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"i want to login with voice\",\r\n+\r\n+//       route: \"/login/voiceid\",\r\n+\r\n+//       response: \"Here's Voice Login. Please proceed.\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"go to voice login\",\r\n+\r\n+//       route: \"/login/voiceid\",\r\n+\r\n+//       response: \"Here's Voice Login. Please proceed.\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"login with voice\",\r\n+\r\n+//       route: \"/login/voiceid\",\r\n+\r\n+//       response: \"Here's Voice Login. Please proceed.\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"login with mobile\",\r\n+\r\n+//       route: \"/login/mobile\",\r\n+\r\n+//       response: \"Here's Mobile Login. Please proceed.\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"i want to login with mobile\",\r\n+\r\n+//       route: \"/login/mobile\",\r\n+\r\n+//       response: \"Here's Mobile Login. Please proceed.\",\r\n+//     },\r\n+//     {\r\n+//       utterance: \"go to mobile login\",\r\n+\r\n+//       route: \"/login/mobile\",\r\n+\r\n+//       response: \"Here's Mobile Login. Please proceed.\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"what are platform features\",\r\n+\r\n+//       response:\r\n+//         \"Dashboard, Dynamic time table, Learning Networks, Little Masters, Video Based Dictionary, General Search.\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"Features of platform\",\r\n+\r\n+//       response:\r\n+//         \"Dashboard, Dynamic time table, Learning Networks, Little Masters, Video Based Dictionary, General Search.\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"What does the platform offer\",\r\n+\r\n+//       response:\r\n+//         \"Dashboard, Dynamic time table, Learning Networks, Little Masters, Video Based Dictionary, General Search.\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"Say me the features of platform\",\r\n+\r\n+//       response:\r\n+//         \"Dashboard, Dynamic time table, Learning Networks, Little Masters, Video Based Dictionary, General Search.\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"Say me the services of platform\",\r\n+\r\n+//       response:\r\n+//         \"Dashboard, Dynamic time table, Learning Networks, Little Masters, Video Based Dictionary, General Search.\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"tell me the services offered by the platform\",\r\n+\r\n+//       response:\r\n+//         \"Dashboard, Dynamic time table, Learning Networks, Little Masters, Video Based Dictionary, General Search.\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"explain platform services\",\r\n+\r\n+//       response:\r\n+//         \"Dashboard, Dynamic time table, Learning Networks, Little Masters, Video Based Dictionary, General Search.\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"Give me the Parent voice of Julia Harris\",\r\n+\r\n+//       response:\r\n+//         \"Brane education has helped my son a lot in his studies. He improved a lot in his studies and is now able to score good marks in his exams\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"Play today's motivational video\",\r\n+\r\n+//       response: \"I am playing the video\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"Play today's video\",\r\n+\r\n+//       response: \"I am playing Motivational video\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"Leaders Voice\",\r\n+\r\n+//       response:\r\n+//         \"This Voice-interactive AI Platform is a game Changer. It revolutionizes education.\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"Curriculum Supported by Brane Education\",\r\n+\r\n+//       response:\r\n+//         \"we support multiple Boards let me say few Telangana State Board Andhra Pradesh Board Maharashtra Board Assam Board\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"Boards supported by the platform\",\r\n+\r\n+//       response:\r\n+//         \"we support multiple Boards let me say few Telangana State Board Andhra Pradesh Board Maharashtra Board Assam Board\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"Curriculum\",\r\n+\r\n+//       response:\r\n+//         \"we support multiple Boards let me say few Telangana State Board Andhra Pradesh Board Maharashtra Board Assam Board\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"Go to landing page\",\r\n+\r\n+//       response: \"Okay, I am taking you to the landing page.\",\r\n+\r\n+//       route: \"/childpage\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"take me to landing page\",\r\n+\r\n+//       response: \"Okay, I am taking you to the landing page.\",\r\n+\r\n+//       route: \"/childpage\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"move to landing page\",\r\n+\r\n+//       response: \"Okay, I am taking you to the landing page.\",\r\n+\r\n+//       route: \"/childpage\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"roll back to landing page\",\r\n+\r\n+//       response: \"Okay, I am taking you to the landing page.\",\r\n+\r\n+//       route: \"/childpage\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"move to landing page\",\r\n+\r\n+//       response: \"Okay, I am taking you to the landing page.\",\r\n+\r\n+//       route: \"/childpage\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"what is today's quote\",\r\n+\r\n+//       response:\r\n+//         \"Determination is the power that sees us through all our frustration and obstacles. It helps in building our willpower which is the very basis of success.\",\r\n+\r\n+//       route: \"/childpage\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"Today's Inspirational quote\",\r\n+\r\n+//       response:\r\n+//         \"Determination is the power that sees us through all our frustration and obstacles. It helps in building our willpower which is the very basis of success.\",\r\n+\r\n+//       route: \"/childpage\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"say me today's quote\",\r\n+\r\n+//       response:\r\n+//         \"Determination is the power that sees us through all our frustration and obstacles. It helps in building our willpower which is the very basis of success.\",\r\n+\r\n+//       route: \"/childpage\",\r\n+//     },\r\n+//     {\r\n+//       utterance: \"go back\",\r\n+//       response: \"\",\r\n+//       action: goBack, // Note the use of an action property\r\n+//     },\r\n+//     {\r\n+//       utterance: \"go forward\",\r\n+//       response: \"\",\r\n+//       action: goForward,\r\n+//     },\r\n+//     {\r\n+//       utterance: \"play video\",\r\n+//       // response: \"Playing video.\",\r\n+//       action: playVideo,\r\n+//     },\r\n+//     {\r\n+//       utterance: \"pause video\",\r\n+//       // response: \"Pausing video.\",\r\n+//       action: pauseVideo,\r\n+//     },\r\n+//     {\r\n+//       utterance: \"start video\",\r\n+//       // response: \"Playing video.\",\r\n+//       action: playVideo,\r\n+//     },\r\n+//     {\r\n+//       utterance: \"stop video\",\r\n+//       // response: \"Playing video.\",\r\n+//       action: pauseVideo,\r\n+//     },\r\n+//     {\r\n+//       utterance: \"scroll up\",\r\n+//       // response: \"Scrolling up.\",\r\n+//       action: scrollUp,\r\n+//     },\r\n+//     {\r\n+//       utterance: \"scroll down\",\r\n+//       // response: \"Scrolling down.\",\r\n+//       action: scrollDown,\r\n+//     },\r\n+//     {\r\n+//       utterance: \"go up\",\r\n+\r\n+//       // response: \"Scrolling up.\",\r\n+//       action: scrollUp,\r\n+//     },\r\n+//     {\r\n+//       utterance: \"go down\",\r\n+//       // response: \"Scrolling down.\",\r\n+//       action: scrollDown,\r\n+//     },\r\n+//     {\r\n+//       utterance: \"scroll to top\",\r\n+//       action: scrollToTop,\r\n+//     },\r\n+//     {\r\n+//       utterance: \"scroll to bottom\",\r\n+//       action: scrollToBottom,\r\n+//     },\r\n+//     {\r\n+//       utterance: \"brane stop\",\r\n+//       action: stopListening,\r\n+//     },\r\n+//     {\r\n+//       utterance: \"brane turn off\",\r\n+//       action: stopListening,\r\n+//     },\r\n+//     {\r\n+//       utterance: \"brane stop the bot\",\r\n+//       action: stopListening,\r\n+//     },\r\n+//   ];\r\n+\r\n+//   return (\r\n+//     <div className=\"speech-bot-container\">\r\n+//       <div\r\n+//         className={`button-container ${\r\n+//           isListening ? \"voicebotframeactive\" : \"voicebotframe\"\r\n+//         }`}\r\n+//       >\r\n+//         <button onClick={isListening ? stopListening : startListening}>\r\n+//           {isListening ? \"Stop\" : \"Start\"} Animation\r\n+//         </button>\r\n+//         {/* <button onClick={toggleBotActive}>\r\n+//         {isBotActive ? 'Deactivate Bot' : 'Activate Bot'}\r\n+//       </button> \r\n+//       </div>\r\n+//     </div>\r\n+//   );\r\n+// };\r\n+\r\n+// export default VoiceBot; */\r\n+}\r\n+\r\n+//iska v1\r\n+\r\n+// import React, { useState, useEffect, useRef } from \"react\";\r\n+// import { useNavigate, useLocation } from \"react-router-dom\";\r\n+// import Fuse from \"fuse.js\";\r\n+// import \"./VoiceBot.css\";\r\n+\r\n+// const VoiceBot = ({ videoRef}) => {\r\n+//   const [isListening, setIsListening] = useState(false);\r\n+//   const [isSpeaking, setIsSpeaking] = useState(false);\r\n+//   const recognition = useRef(null);\r\n+//   const speechSynthesis = useRef(window.speechSynthesis);\r\n+//   const [hasGreeted, setHasGreeted] = useState(false);\r\n+//   const navigate = useNavigate();\r\n+\r\n+//  // Initialize speech recognition\r\n+//  useEffect(() => {\r\n+//   recognition.current = new window.webkitSpeechRecognition();\r\n+//   recognition.current.continuous = true;\r\n+//   recognition.current.interimResults = false;\r\n+//   recognition.current.onresult = onResult;\r\n+//   recognition.current.onend = onRecognitionEnd;\r\n+//   recognition.current.starting = false;\r\n+\r\n+//   recognition.current.onerror = (event) => {\r\n+//     console.error(\"Recognition error:\", event.error);\r\n+//     if (isListening && !isSpeaking) {\r\n+//       restartRecognition();\r\n+//     }\r\n+//   };\r\n+\r\n+//   return () => {\r\n+//     if (recognition.current) {\r\n+//       recognition.current.abort();\r\n+//     }\r\n+//   };\r\n+// }, []);\r\n+\r\n+//   // useEffect(() => {\r\n+//   //   const checkRecognition = () => {\r\n+//   //     if (isListening && !isSpeaking && !recognition.current.starting) {\r\n+//   //       console.log(\"Restarting recognition because it's not active.\");\r\n+//   //       recognition.current.starting = true;\r\n+//   //       recognition.current.start();\r\n+//   //       console.log(\"Restarted recognition.\");\r\n+//   //     }\r\n+//   //   };\r\n+\r\n+//   //   const recognitionCheckInterval = setInterval(checkRecognition, 100); // Check every .5 second\r\n+\r\n+//   //   return () => {\r\n+//   //     clearInterval(recognitionCheckInterval);\r\n+//   //   };\r\n+//   // }, [isListening, isSpeaking]);\r\n+\r\n+//   const historyStack = useRef([]);\r\n+\r\n+//   useEffect(() => {\r\n+//     return () => {\r\n+//       // Clean up the listener when the component unmounts\r\n+//       window.removeEventListener(\"popstate\", handlePopState);\r\n+//     };\r\n+//   }, []);\r\n+\r\n+//   const handlePopState = () => {\r\n+//     // This needs to handle both back and forward browser actions\r\n+//     // Use some logic to determine whether it's a back or forward action\r\n+//     // For simplicity, assume it's always back\r\n+//     historyStack.current.pop();\r\n+//     forwardStack.current.length = 0; // Clear forward stack on manual navigation\r\n+//   };\r\n+\r\n+//   // Add a new entry to the stack whenever navigate is called\r\n+//   const customNavigate = (to, options) => {\r\n+//     historyStack.current.push(to);\r\n+//     navigate(to, options);\r\n+//   };\r\n+\r\n+//   // Listen to popstate events to update the history stack\r\n+//   useEffect(() => {\r\n+//     window.addEventListener(\"popstate\", handlePopState);\r\n+//   }, []);\r\n+\r\n+//   const forwardStack = useRef([]);\r\n+\r\n+//   const goBack = () => {\r\n+//     if (window.history.state && window.history.state.idx > 0) {\r\n+//       window.history.back();\r\n+//       speak(\"Going back\");\r\n+//     } else {\r\n+//       speak(\"Can't go back any further.\");\r\n+//     }\r\n+//   };\r\n+\r\n+//   const goForward = () => {\r\n+//     if (window.history.state && window.history.state.idx < window.history.length - 1) {\r\n+//       window.history.forward();\r\n+//       speak(\"Going forward\");\r\n+//     } else {\r\n+//       speak(\"No forward history available.\");\r\n+//     }\r\n+//   };\r\n+\r\n+//   const playVideo = () => {\r\n+//     if (videoRef.current) {\r\n+//       videoRef.current.play();\r\n+//       speak(\"Playing video.\");\r\n+//     } else {\r\n+//       speak(\"No video to play.\");\r\n+//     }\r\n+//   };\r\n+\r\n+//   const pauseVideo = () => {\r\n+//     if (videoRef.current) {\r\n+//       videoRef.current.pause();\r\n+//       speak(\"Video paused.\");\r\n+//     } else {\r\n+//       speak(\"No video to pause.\");\r\n+//     }\r\n+//   };\r\n+\r\n+//   const scrollAmount = window.innerHeight * 0.82;\r\n+\r\n+//   const scrollUp = () => {\r\n+//     if (window.pageYOffset === 0) {\r\n+//       speak(\"Already at the top of the page.\");\r\n+//     } else {\r\n+//       window.scrollBy(0, -scrollAmount);\r\n+//       speak(\"Scrolled up.\");\r\n+//     }\r\n+//   };\r\n+\r\n+//   const scrollDown = () => {\r\n+//     const maxScrollTop =\r\n+//       document.documentElement.scrollHeight - window.innerHeight;\r\n+//     if (window.pageYOffset >= maxScrollTop) {\r\n+//       speak(\"Already at the bottom of the page.\");\r\n+//     } else {\r\n+//       window.scrollBy(0, scrollAmount);\r\n+//       speak(\"Scrolled down.\");\r\n+//     }\r\n+//   };\r\n+\r\n+//   const scrollToTop = () => {\r\n+//     if (window.pageYOffset === 0) {\r\n+//       speak(\"Already at the top of the page.\");\r\n+//     } else {\r\n+//       window.scrollTo(0, 0);\r\n+//       speak(\"Scrolled to the top of the page.\");\r\n+//     }\r\n+//   };\r\n+\r\n+//   const scrollToBottom = () => {\r\n+//     const maxScrollTop =\r\n+//       document.documentElement.scrollHeight - window.innerHeight;\r\n+//     if (window.pageYOffset >= maxScrollTop) {\r\n+//       speak(\"Already at the bottom of the page.\");\r\n+//     } else {\r\n+//       window.scrollTo(0, document.body.scrollHeight);\r\n+//       speak(\"Scrolled to the bottom of the page.\");\r\n+//     }\r\n+//   };\r\n+\r\n+//   const speak = (message) => {\r\n+//     const utterance = new SpeechSynthesisUtterance(message);\r\n+//     utterance.onend = () => {\r\n+//       setIsSpeaking(false);\r\n+//       // Restart recognition after speaking has ended\r\n+//       if (isListening) {\r\n+//         restartRecognition();\r\n+//       }\r\n+//     };\r\n+\r\n+//     setIsSpeaking(true);\r\n+//     // Stop recognition when the bot starts speaking\r\n+//     if (recognition.current) {\r\n+//       recognition.current.abort();\r\n+//     }\r\n+//     speechSynthesis.current.speak(utterance);\r\n+//   };\r\n+\r\n+//   const restartRecognition = () => {\r\n+//     // Check if recognition is not already started and if the bot is set to listen\r\n+//     if (recognition.current && !recognition.current.starting && isListening && !isSpeaking) {\r\n+//       // Only start recognition if it's not already active\r\n+//       if (recognition.current.state !== 'active') {\r\n+//         recognition.current.abort(); // Ensure any ongoing recognition is stopped\r\n+//         recognition.current.starting = true;\r\n+//         recognition.current.start();\r\n+//       }\r\n+//     }\r\n+//   };\r\n+\r\n+//     // Restart recognition when bot finishes speaking and isListening is true\r\n+//     useEffect(() => {\r\n+//       if (!isSpeaking && isListening) {\r\n+//         restartRecognition();\r\n+//       }\r\n+//     }, [isSpeaking, isListening]);\r\n+\r\n+//   const onResult = (event) => {\r\n+//     const resultIndex = event.resultIndex;\r\n+//     const transcript = event.results[resultIndex][0].transcript\r\n+//       .trim()\r\n+//       .toLowerCase();\r\n+\r\n+//     if (event.results[resultIndex].isFinal) {\r\n+//       console.log(`Recognized text: ${transcript}`);\r\n+//       if (transcript.includes(\"brain\")) {\r\n+//         console.log(\"Wake word heard, processing command...\");\r\n+//         handleCommandWithFuse(transcript.replace(\"brain\", \"\"));\r\n+//       }\r\n+//     }\r\n+//   };\r\n+\r\n+//   const onRecognitionEnd = () => {\r\n+//     recognition.current.starting = false;\r\n+//     if (isListening && !isSpeaking) {\r\n+//       restartRecognition();\r\n+//     }\r\n+//   };\r\n+\r\n+//   useEffect(() => {\r\n+//     if (isListening && !hasGreeted) {\r\n+//       speak(\"Hello, I'm Brane. How can I help you today?\");\r\n+//       setHasGreeted(true);\r\n+//     }\r\n+//   }, [isListening, hasGreeted]);\r\n+\r\n+// // Updated startListening function\r\n+// const startListening = () => {\r\n+//   setIsListening(true);\r\n+//   if (recognition.current && !recognition.current.starting) {\r\n+//     recognition.current.start();\r\n+//   }\r\n+// };\r\n+\r\n+// // Updated stopListening function\r\n+// const stopListening = () => {\r\n+//   setIsListening(false);\r\n+//   setIsSpeaking(false); // Reset speaking state\r\n+//   setHasGreeted(false); // Reset greeting state if needed\r\n+//   if (recognition.current) {\r\n+//     recognition.current.abort(); // Stop any ongoing speech recognition\r\n+//   }\r\n+//   if (speechSynthesis.current.speaking) {\r\n+//     speechSynthesis.current.cancel(); // Stop any ongoing speech synthesis\r\n+//   }\r\n+// };\r\n+\r\n+//   const handleCommandWithFuse = (command) => {\r\n+//     const fuse = new Fuse(commands, { keys: [\"utterance\"], threshold: 0.4 });\r\n+//     const results = fuse.search(command);\r\n+//     const foundCommand = results.length ? results[0].item : null;\r\n+\r\n+//     if (foundCommand) {\r\n+//       console.log(\"Command found:\", foundCommand.utterance);\r\n+\r\n+//       if (foundCommand.action) {\r\n+//         foundCommand.action();\r\n+//       } else if (foundCommand.route) {\r\n+//         navigate(foundCommand.route);\r\n+//       }\r\n+\r\n+//       // Speak after performing the action or navigation\r\n+//       speak(foundCommand.response);\r\n+//     } else {\r\n+//       console.log(\"No command found.\");\r\n+//       speak(\"I'm not sure how to respond to that.\");\r\n+//     }\r\n+//   };\r\n+\r\n+//   const commands = [\r\n+//     {\r\n+//       utterance: \"Hello who are you ?\",\r\n+\r\n+//       response:\r\n+//         \"Hi! This is Brane! your Voice bot from Brane Education How can I Assist you Today ?\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"Hello\",\r\n+\r\n+//       response: \"Hi! How can I assist you today?\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"hello\",\r\n+\r\n+//       response: \"Hi! How can I assist you today?\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"Hi.\",\r\n+\r\n+//       response: \"Hello! How can I assist you today?\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"Hey there\",\r\n+\r\n+//       response: \"Hi! How can I assist you today?\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"Good morning Brane.\",\r\n+\r\n+//       response: \"Hey Hiii! Good morning  ! How can I help you?\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"Good afternoon Brane.\",\r\n+\r\n+//       response: \"Hey Hiii! Good after noon ! How can I help you?\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"Good evening Brane.\",\r\n+\r\n+//       response: \"Hey Hiii! Good evening ! How can I help you?\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"can you please take me to login page\",\r\n+\r\n+//       route: \"/login\",\r\n+\r\n+//       response: \"Here's the Login Page, Please Login\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"please take me to login page\",\r\n+\r\n+//       route: \"/login\",\r\n+\r\n+//       response: \"Here's the Login Page, Please Login\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"Go to login page\",\r\n+\r\n+//       route: \"/login\",\r\n+\r\n+//       response: \"Here's the Login Page, Please Login\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"open login page\",\r\n+\r\n+//       route: \"/login\",\r\n+\r\n+//       response: \"Here's the Login Page, Please Login\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"can you please take me to signup page\",\r\n+\r\n+//       route: \"/signup\",\r\n+\r\n+//       response: \"Here's the signup page. Please proceed With Registration.\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"take me to signup page\",\r\n+\r\n+//       route: \"/signup\",\r\n+\r\n+//       response: \"Here's the signup page. Please proceed With Registration.\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"Go to signup page\",\r\n+\r\n+//       route: \"/signup\",\r\n+\r\n+//       response: \"Here's the signup page. Please proceed With Registration.\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"open signup page\",\r\n+\r\n+//       route: \"/signup\",\r\n+\r\n+//       response: \"Here's the signup page. Please proceed With Registration.\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"Go to face id\",\r\n+\r\n+//       route: \"/login/faceid\",\r\n+\r\n+//       response: \"Here's Face ID Login. Please proceed.\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"Go to face id login\",\r\n+\r\n+//       route: \"/login/faceid\",\r\n+\r\n+//       response: \"Here's Face ID Login. Please proceed.\",\r\n+//     },\r\n+//     {\r\n+//       utterance: \"Go to face login\",\r\n+\r\n+//       route: \"/login/faceid\",\r\n+\r\n+//       response: \"Here's Face ID Login. Please proceed.\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"login with face id\",\r\n+\r\n+//       route: \"/login/faceid\",\r\n+\r\n+//       response: \"Here's Face ID Login. Please proceed.\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"login with face\",\r\n+\r\n+//       route: \"/login/faceid\",\r\n+\r\n+//       response: \"Here's Face ID Login. Please proceed.\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"i want to login with face\",\r\n+\r\n+//       route: \"/login/faceid\",\r\n+\r\n+//       response: \"Here's Face ID Login. Please proceed.\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"login with voice\",\r\n+\r\n+//       route: \"/login/voiceid\",\r\n+\r\n+//       response: \"Here's Voice Login. Please proceed.\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"i want to login with voice\",\r\n+\r\n+//       route: \"/login/voiceid\",\r\n+\r\n+//       response: \"Here's Voice Login. Please proceed.\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"go to voice login\",\r\n+\r\n+//       route: \"/login/voiceid\",\r\n+\r\n+//       response: \"Here's Voice Login. Please proceed.\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"login with voice\",\r\n+\r\n+//       route: \"/login/voiceid\",\r\n+\r\n+//       response: \"Here's Voice Login. Please proceed.\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"login with mobile\",\r\n+\r\n+//       route: \"/login/mobile\",\r\n+\r\n+//       response: \"Here's Mobile Login. Please proceed.\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"i want to login with mobile\",\r\n+\r\n+//       route: \"/login/mobile\",\r\n+\r\n+//       response: \"Here's Mobile Login. Please proceed.\",\r\n+//     },\r\n+//     {\r\n+//       utterance: \"go to mobile login\",\r\n+\r\n+//       route: \"/login/mobile\",\r\n+\r\n+//       response: \"Here's Mobile Login. Please proceed.\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"what are platform features\",\r\n+\r\n+//       response:\r\n+//         \"Dashboard, Dynamic time table, Learning Networks, Little Masters, Video Based Dictionary, General Search.\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"Features of platform\",\r\n+\r\n+//       response:\r\n+//         \"Dashboard, Dynamic time table, Learning Networks, Little Masters, Video Based Dictionary, General Search.\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"What does the platform offer\",\r\n+\r\n+//       response:\r\n+//         \"Dashboard, Dynamic time table, Learning Networks, Little Masters, Video Based Dictionary, General Search.\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"Say me the features of platform\",\r\n+\r\n+//       response:\r\n+//         \"Dashboard, Dynamic time table, Learning Networks, Little Masters, Video Based Dictionary, General Search.\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"Say me the services of platform\",\r\n+\r\n+//       response:\r\n+//         \"Dashboard, Dynamic time table, Learning Networks, Little Masters, Video Based Dictionary, General Search.\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"tell me the services offered by the platform\",\r\n+\r\n+//       response:\r\n+//         \"Dashboard, Dynamic time table, Learning Networks, Little Masters, Video Based Dictionary, General Search.\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"explain platform services\",\r\n+\r\n+//       response:\r\n+//         \"Dashboard, Dynamic time table, Learning Networks, Little Masters, Video Based Dictionary, General Search.\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"Give me the Parent voice of Julia Harris\",\r\n+\r\n+//       response:\r\n+//         \"Brane education has helped my son a lot in his studies. He improved a lot in his studies and is now able to score good marks in his exams\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"Play today's motivational video\",\r\n+\r\n+//       response: \"I am playing the video\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"Play today's video\",\r\n+\r\n+//       response: \"I am playing Motivational video\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"Leaders Voice\",\r\n+\r\n+//       response:\r\n+//         \"This Voice-interactive AI Platform is a game Changer. It revolutionizes education.\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"Curriculum Supported by Brane Education\",\r\n+\r\n+//       response:\r\n+//         \"we support multiple Boards let me say few Telangana State Board Andhra Pradesh Board Maharashtra Board Assam Board\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"Boards supported by the platform\",\r\n+\r\n+//       response:\r\n+//         \"we support multiple Boards let me say few Telangana State Board Andhra Pradesh Board Maharashtra Board Assam Board\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"Curriculum\",\r\n+\r\n+//       response:\r\n+//         \"we support multiple Boards let me say few Telangana State Board Andhra Pradesh Board Maharashtra Board Assam Board\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"Go to landing page\",\r\n+\r\n+//       response: \"Okay, I am taking you to the landing page.\",\r\n+\r\n+//       route: \"/childpage\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"take me to landing page\",\r\n+\r\n+//       response: \"Okay, I am taking you to the landing page.\",\r\n+\r\n+//       route: \"/childpage\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"move to landing page\",\r\n+\r\n+//       response: \"Okay, I am taking you to the landing page.\",\r\n+\r\n+//       route: \"/childpage\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"roll back to landing page\",\r\n+\r\n+//       response: \"Okay, I am taking you to the landing page.\",\r\n+\r\n+//       route: \"/childpage\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"move to landing page\",\r\n+\r\n+//       response: \"Okay, I am taking you to the landing page.\",\r\n+\r\n+//       route: \"/childpage\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"what is today's quote\",\r\n+\r\n+//       response:\r\n+//         \"Determination is the power that sees us through all our frustration and obstacles. It helps in building our willpower which is the very basis of success.\",\r\n+\r\n+//       route: \"/childpage\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"Today's Inspirational quote\",\r\n+\r\n+//       response:\r\n+//         \"Determination is the power that sees us through all our frustration and obstacles. It helps in building our willpower which is the very basis of success.\",\r\n+\r\n+//       route: \"/childpage\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"say me today's quote\",\r\n+\r\n+//       response:\r\n+//         \"Determination is the power that sees us through all our frustration and obstacles. It helps in building our willpower which is the very basis of success.\",\r\n+\r\n+//       route: \"/childpage\",\r\n+//     },\r\n+//     {\r\n+//       utterance: \"go back\",\r\n+//       response: \"\",\r\n+//       action: goBack, // Note the use of an action property\r\n+//     },\r\n+//     {\r\n+//       utterance: \"go forward\",\r\n+//       response: \"\",\r\n+//       action: goForward,\r\n+//     },\r\n+//     {\r\n+//       utterance: \"play video\",\r\n+//       // response: \"Playing video.\",\r\n+//       action: playVideo,\r\n+//     },\r\n+//     {\r\n+//       utterance: \"pause video\",\r\n+//       // response: \"Pausing video.\",\r\n+//       action: pauseVideo,\r\n+//     },\r\n+//     {\r\n+//       utterance: \"start video\",\r\n+//       // response: \"Playing video.\",\r\n+//       action: playVideo,\r\n+//     },\r\n+//     {\r\n+//       utterance: \"stop video\",\r\n+//       // response: \"Playing video.\",\r\n+//       action: pauseVideo,\r\n+//     },\r\n+//     {\r\n+//       utterance: \"scroll up\",\r\n+//       // response: \"Scrolling up.\",\r\n+//       action: scrollUp,\r\n+//     },\r\n+//     {\r\n+//       utterance: \"scroll down\",\r\n+//       // response: \"Scrolling down.\",\r\n+//       action: scrollDown,\r\n+//     },\r\n+//     {\r\n+//       utterance: \"go up\",\r\n+\r\n+//       // response: \"Scrolling up.\",\r\n+//       action: scrollUp,\r\n+//     },\r\n+//     {\r\n+//       utterance: \"go down\",\r\n+//       // response: \"Scrolling down.\",\r\n+//       action: scrollDown,\r\n+//     },\r\n+//     {\r\n+//       utterance: \"scroll to top\",\r\n+//       action: scrollToTop,\r\n+//     },\r\n+//     {\r\n+//       utterance: \"scroll to bottom\",\r\n+//       action: scrollToBottom,\r\n+//     },\r\n+//     {\r\n+//       utterance: \"brane stop\",\r\n+//       action: stopListening,\r\n+//     },\r\n+//     {\r\n+//       utterance: \"brane turn off\",\r\n+//       action: stopListening,\r\n+//     },\r\n+//     {\r\n+//       utterance: \"brane stop the bot\",\r\n+//       action: stopListening,\r\n+//     },\r\n+//   ];\r\n+\r\n+//   return (\r\n+//     <div className=\"speech-bot-container\">\r\n+//       <div\r\n+//         className={`button-container ${\r\n+//           isListening ? \"voicebotframeactive\" : \"voicebotframe\"\r\n+//         }`}\r\n+//       >\r\n+//         <button onClick={isListening ? stopListening : startListening}>\r\n+//           {isListening ? \"Stop\" : \"Start\"} Animation\r\n+//         </button>\r\n+//         {/* <button onClick={toggleBotActive}>\r\n+//         {isBotActive ? 'Deactivate Bot' : 'Activate Bot'}\r\n+//       </button> */}\r\n+//       </div>\r\n+//     </div>\r\n+//   );\r\n+// };\r\n+\r\n+// export default VoiceBot;\r\n+\r\n+//Bot Video added but some start issues\r\n+\r\n+// import React, { useState, useEffect, useRef } from \"react\";\r\n+// import { useNavigate, useLocation } from \"react-router-dom\";\r\n+// import Fuse from \"fuse.js\";\r\n+// import \"./VoiceBot.css\";\r\n+\r\n+// const VoiceBot = ({ videoRef }) => {\r\n+//   const [isListening, setIsListening] = useState(false);\r\n+//   const [isSpeaking, setIsSpeaking] = useState(false);\r\n+//   const recognition = useRef(null);\r\n+//   const speechSynthesis = useRef(window.speechSynthesis);\r\n+//   const hasGreeted = useRef(false);\r\n+//   const restartRecognitionTimeout = useRef(null);\r\n+//   const navigate = useNavigate();\r\n+//   const location = useLocation();\r\n+//   const [isRecognitionActive, setIsRecognitionActive] = useState(false); // New state to track recognition status\r\n+\r\n+//   useEffect(() => {\r\n+//     recognition.current = new window.webkitSpeechRecognition();\r\n+//     recognition.current.continuous = true;\r\n+//     recognition.current.interimResults = false;\r\n+//     recognition.current.onresult = onResult;\r\n+//     recognition.current.onend = () => {\r\n+//       console.log(\"Recognition ended.\");\r\n+//       if (isListening) {\r\n+//         startListening();\r\n+//       }\r\n+//     };\r\n+//     recognition.current.onerror = (event) => {\r\n+//       console.error(\"Recognition error:\", event.error);\r\n+//     };\r\n+\r\n+//     return () => {\r\n+//       recognition.current.abort();\r\n+//     };\r\n+//   }, []);\r\n+\r\n+//   // Update useEffect for managing the recognition state based on isListening and isRecognitionActive\r\n+//   useEffect(() => {\r\n+//     if (isListening && !isRecognitionActive) {\r\n+//       startListening();\r\n+//     } else if (!isListening && isRecognitionActive) {\r\n+//       stopListening();\r\n+//     }\r\n+//   }, [isListening, isRecognitionActive]);\r\n+\r\n+//   const goBack = () => {\r\n+//     if (window.history.length > 1) {\r\n+//       navigate(-1);\r\n+//     } else {\r\n+//       speak(\"Can't go back any further.\");\r\n+//     }\r\n+//   };\r\n+\r\n+//   const goForward = () => {\r\n+//     // Unfortunately, there's no direct way to check if you can go forward in the history.\r\n+//     // You might need to manage this state manually based on user navigation.\r\n+//     navigate(1);\r\n+//   };\r\n+\r\n+//   const playVideo = () => {\r\n+//     if (videoRef.current && !videoRef.current.paused) {\r\n+//       speak(\"Video is already playing.\");\r\n+//     } else if (videoRef.current) {\r\n+//       videoRef.current.play();\r\n+//       speak(\"Playing video.\");\r\n+//     } else {\r\n+//       speak(\"No video to play.\");\r\n+//     }\r\n+//   };\r\n+\r\n+//   const pauseVideo = () => {\r\n+//     if (videoRef.current && videoRef.current.paused) {\r\n+//       speak(\"Video is already paused.\");\r\n+//     } else if (videoRef.current) {\r\n+//       videoRef.current.pause();\r\n+//       speak(\"Video paused.\");\r\n+//     } else {\r\n+//       speak(\"No video to pause.\");\r\n+//     }\r\n+//   };\r\n+\r\n+//   const scrollAmount = window.innerHeight * 0.82;\r\n+\r\n+//   const scrollUp = () => {\r\n+//     if (window.pageYOffset === 0) {\r\n+//       speak(\"Already at the top of the page.\");\r\n+//     } else {\r\n+//       window.scrollBy(0, -scrollAmount);\r\n+//       speak(\"Scrolled up.\");\r\n+//     }\r\n+//   };\r\n+\r\n+//   const scrollDown = () => {\r\n+//     const maxScrollTop =\r\n+//       document.documentElement.scrollHeight - window.innerHeight;\r\n+//     if (window.pageYOffset >= maxScrollTop) {\r\n+//       speak(\"Already at the bottom of the page.\");\r\n+//     } else {\r\n+//       window.scrollBy(0, scrollAmount);\r\n+//       speak(\"Scrolled down.\");\r\n+//     }\r\n+//   };\r\n+\r\n+//   const scrollToTop = () => {\r\n+//     if (window.pageYOffset === 0) {\r\n+//       speak(\"Already at the top of the page.\");\r\n+//     } else {\r\n+//       window.scrollTo(0, 0);\r\n+//       speak(\"Scrolled to the top of the page.\");\r\n+//     }\r\n+//   };\r\n+\r\n+//   const scrollToBottom = () => {\r\n+//     const maxScrollTop =\r\n+//       document.documentElement.scrollHeight - window.innerHeight;\r\n+//     if (window.pageYOffset >= maxScrollTop) {\r\n+//       speak(\"Already at the bottom of the page.\");\r\n+//     } else {\r\n+//       window.scrollTo(0, document.body.scrollHeight);\r\n+//       speak(\"Scrolled to the bottom of the page.\");\r\n+//     }\r\n+//   };\r\n+\r\n+//   // const speak = (message) => {\r\n+//   //   const utterance = new SpeechSynthesisUtterance(message);\r\n+//   //   utterance.onend = () => {\r\n+//   //     setIsSpeaking(false);\r\n+//   //     console.log(\"Speaking ended.\");\r\n+//   //     // Only restart recognition if we're still supposed to be listening\r\n+//   //     // if (isListening) {\r\n+//   //     //   if (restartRecognitionTimeout.current) {\r\n+//   //     //     clearTimeout(restartRecognitionTimeout.current);\r\n+//   //     //   }\r\n+//   //     //   restartRecognitionTimeout.current = setTimeout(() => {\r\n+//   //     //     console.log(\"Recognition restarted.\");\r\n+//   //     //     recognition.current.start();\r\n+//   //     //   }, 100); // Delay to prevent immediate restart\r\n+//   //     // }\r\n+//   //     if (isListening && !recognition.current.starting) { // Check the flag before restarting\r\n+//   //       recognition.current.starting = true; // Set the flag when starting recognition\r\n+//   //       recognition.current.start();\r\n+//   //     }\r\n+//   //   };\r\n+\r\n+//   //   setIsSpeaking(true);\r\n+//   //   console.log(\"Speaking started.\");\r\n+//   //   recognition.current.stop(); // Stop recognition when the bot starts speaking\r\n+//   //   speechSynthesis.current.speak(utterance);\r\n+//   // };\r\n+\r\n+//   const speak = (message) => {\r\n+//     console.log(\"speak function called with message:\", message);\r\n+//     const utterance = new SpeechSynthesisUtterance(message);\r\n+//     utterance.onend = () => {\r\n+//       setIsSpeaking(false);\r\n+//       console.log(\"Speaking ended.\");\r\n+//       // Directly handle the restart of recognition here if needed\r\n+//       if (isListening) {\r\n+//         startListening();\r\n+//       }\r\n+//     };\r\n+\r\n+//     setIsSpeaking(true);\r\n+//     console.log(\"Speaking started.\");\r\n+//     recognition.current.stop(); // Ensure to stop recognition before speaking\r\n+//     speechSynthesis.current.speak(utterance);\r\n+//   };\r\n+\r\n+//   const onResult = (event) => {\r\n+//     const resultIndex = event.resultIndex;\r\n+//     const transcript = event.results[resultIndex][0].transcript\r\n+//       .trim()\r\n+//       .toLowerCase();\r\n+\r\n+//     if (event.results[resultIndex].isFinal) {\r\n+//       console.log(`Recognized text: ${transcript}`);\r\n+//       if (transcript.includes(\"brain\")) {\r\n+//         console.log(\"Wake word heard, processing command...\");\r\n+//         handleCommandWithFuse(transcript.replace(\"brain\", \"\"));\r\n+//       }\r\n+//     }\r\n+//   };\r\n+\r\n+//   // const onRecognitionEnd = () => {\r\n+//   //   console.log(\"Recognition ended.\");\r\n+//   //   setIsRecognitionActive(false); // Update state when recognition ends\r\n+//   //   recognition.current.starting = false; // Reset the flag when recognition ends\r\n+//   //   // We now check if the recognition is already running before starting it again\r\n+//   //   if (isListening && !isSpeaking && !recognition.current?.starting) {\r\n+//   //     console.log(\"Restarting recognition.\");\r\n+//   //     recognition.current.start();\r\n+//   //   }\r\n+//   // };\r\n+\r\n+//   // useEffect(() => {\r\n+//   //   if (isListening && !hasGreeted.current) {\r\n+//   //     speak(\"Hello, I'm Brane. How can I assist you today?\");\r\n+//   //     hasGreeted.current = true;\r\n+//   //   } else if (isListening && !isSpeaking) {\r\n+//   //     recognition.current.start();\r\n+//   //   }\r\n+//   // }, [isListening, isSpeaking]);\r\n+\r\n+//   useEffect(() => {\r\n+//     if (isListening && !hasGreeted.current) {\r\n+//       speak(\"Hello, I'm Brane. How can I assist you today?\");\r\n+//       hasGreeted.current = true;\r\n+//     } else if (isListening && !isSpeaking && !recognition.current.starting) {\r\n+//       // Check the flag before starting\r\n+//       recognition.current.starting = true; // Set the flag when starting recognition\r\n+//       recognition.current.start();\r\n+//     }\r\n+//   }, [isListening, isSpeaking]);\r\n+\r\n+//   // const startListening = () => {\r\n+//   //   console.log(\"Attempting to start listening.\");\r\n+//   //   if (recognition.current && !recognition.current.starting) {\r\n+//   //     setIsListening(true);\r\n+//   //     recognition.current.starting = true; // Set the flag when starting recognition\r\n+//   //     recognition.current.start();\r\n+//   //     console.log(\"Listening started.\");\r\n+//   //   }\r\n+//   // };\r\n+\r\n+//   // const stopListening = () => {\r\n+//   //   console.log(\"Stopping listening.\");\r\n+\r\n+//   //   setIsListening(false);\r\n+//   //   recognition.current.stop();\r\n+//   //   if (speechSynthesis.current.speaking) {\r\n+//   //     speechSynthesis.current.cancel();\r\n+//   //   }\r\n+//   //   if (restartRecognitionTimeout.current) {\r\n+//   //     clearTimeout(restartRecognitionTimeout.current);\r\n+//   //   }\r\n+//   //   console.log(\"Listening stopped.\");\r\n+//   // };\r\n+//   // Handle start and stop listening logic\r\n+//   const startListening = () => {\r\n+//     console.log(\"Attempting to start listening.\");\r\n+//     if (!recognition.current.starting) {\r\n+//       setIsListening(true);\r\n+//       recognition.current.starting = true;\r\n+//       recognition.current.start();\r\n+//       console.log(\"Listening started.\");\r\n+//     } else {\r\n+//       console.log(\"Recognition already active.\");\r\n+//     }\r\n+//   };\r\n+\r\n+//   const stopListening = () => {\r\n+//     console.log(\"Stopping listening.\");\r\n+//     if (recognition.current.starting) {\r\n+//       setIsListening(false);\r\n+//       recognition.current.starting = false;\r\n+//       recognition.current.stop();\r\n+//       console.log(\"Listening stopped.\");\r\n+//     } else {\r\n+//       console.log(\"Recognition already inactive.\");\r\n+//     }\r\n+//   };\r\n+\r\n+//   // const handleCommandWithFuse = (command) => {\r\n+//   //   const fuse = new Fuse(commands, { keys: [\"utterance\"], threshold: 0.4 });\r\n+//   //   const results = fuse.search(command);\r\n+//   //   const foundCommand = results.length ? results[0].item : null;\r\n+\r\n+//   //   if (foundCommand) {\r\n+//   //     console.log(\"Command found:\", foundCommand.utterance);\r\n+//   //     speak(foundCommand.response);\r\n+//   //     if (foundCommand.route) {\r\n+//   //       navigate(foundCommand.route); // Navigate to the route specified in the command\r\n+//   //     }\r\n+//   //   } else {\r\n+//   //     console.log(\"No command found.\");\r\n+//   //     speak(\"I'm not sure how to respond to that.\");\r\n+//   //   }\r\n+//   // };\r\n+\r\n+//   const handleCommandWithFuse = (command) => {\r\n+//     const fuse = new Fuse(commands, { keys: [\"utterance\"], threshold: 0.4 });\r\n+//     const results = fuse.search(command);\r\n+//     const foundCommand = results.length ? results[0].item : null;\r\n+\r\n+//     if (foundCommand) {\r\n+//       console.log(\"Command found:\", foundCommand.utterance);\r\n+\r\n+//       if (foundCommand.route) {\r\n+//         if (location.pathname !== foundCommand.route) {\r\n+//           navigate(foundCommand.route);\r\n+//           speak(\r\n+//             `Navigating to ${\r\n+//               foundCommand.routeDescription || \"requested page\"\r\n+//             }.`\r\n+//           );\r\n+//         } else {\r\n+//           speak(\r\n+//             `You are already on the ${\r\n+//               foundCommand.routeDescription || \"requested page\"\r\n+//             }.`\r\n+//           );\r\n+//         }\r\n+//       } else if (foundCommand.action) {\r\n+//         foundCommand.action();\r\n+//       }\r\n+\r\n+//       if (foundCommand.response) {\r\n+//         speak(foundCommand.response);\r\n+//       }\r\n+//     } else {\r\n+//       console.log(\"No command found.\");\r\n+//       speak(\"I'm not sure how to respond to that.\");\r\n+//     }\r\n+//   };\r\n+\r\n+//   const commands = [\r\n+//     {\r\n+//       utterance: \"Hello who are you ?\",\r\n+\r\n+//       response:\r\n+//         \"Hi! This is Brane! your Voice bot from Brane Education How can I Assist you Today ?\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"Hello\",\r\n+\r\n+//       response: \"Hi! How can I assist you today?\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"hello\",\r\n+\r\n+//       response: \"Hi! How can I assist you today?\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"Hi.\",\r\n+\r\n+//       response: \"Hello! How can I assist you today?\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"Hey there\",\r\n+\r\n+//       response: \"Hi! How can I assist you today?\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"Good morning Brane.\",\r\n+\r\n+//       response: \"Hey Hiii! Good morning  ! How can I help you?\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"Good afternoon Brane.\",\r\n+\r\n+//       response: \"Hey Hiii! Good after noon ! How can I help you?\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"Good evening Brane.\",\r\n+\r\n+//       response: \"Hey Hiii! Good evening ! How can I help you?\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"can you please take me to login page\",\r\n+//       route: \"/login\",\r\n+//       routeDescription: \"login page\",\r\n+//       response: \"Navigating to the login page.\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"go to login page\",\r\n+//       route: \"/login\",\r\n+//       routeDescription: \"login page\",\r\n+//       response: \"Navigating to the login page.\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"please take me to login page\",\r\n+//       route: \"/login\",\r\n+//       routeDescription: \"login page\",\r\n+//       response: \"Navigating to the login page.\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"Go to login page\",\r\n+//       route: \"/login\",\r\n+//       routeDescription: \"login page\",\r\n+//       response: \"Navigating to the login page.\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"open login page\",\r\n+//       route: \"/login\",\r\n+//       routeDescription: \"login page\",\r\n+//       response: \"Navigating to the login page.\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"can you please take me to signup page\",\r\n+//       route: \"/signup\",\r\n+//       routeDescription: \"signup page\",\r\n+//       response: \"Navigating to the signup page.\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"take me to signup page\",\r\n+//       route: \"/signup\",\r\n+//       routeDescription: \"signup page\",\r\n+//       response: \"Navigating to the signup page.\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"Go to signup page\",\r\n+//       route: \"/signup\",\r\n+//       routeDescription: \"signup page\",\r\n+//       response: \"Navigating to the signup page.\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"open signup page\",\r\n+//       route: \"/signup\",\r\n+//       routeDescription: \"signup page\",\r\n+//       response: \"Navigating to the signup page.\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"what are platform features\",\r\n+\r\n+//       response:\r\n+//         \"Dashboard, Dynamic time table, Learning Networks, Little Masters, Video Based Dictionary, General Search.\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"Features of platform\",\r\n+\r\n+//       response:\r\n+//         \"Dashboard, Dynamic time table, Learning Networks, Little Masters, Video Based Dictionary, General Search.\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"What does the platform offer\",\r\n+\r\n+//       response:\r\n+//         \"Dashboard, Dynamic time table, Learning Networks, Little Masters, Video Based Dictionary, General Search.\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"Say me the features of platform\",\r\n+\r\n+//       response:\r\n+//         \"Dashboard, Dynamic time table, Learning Networks, Little Masters, Video Based Dictionary, General Search.\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"Say me the services of platform\",\r\n+\r\n+//       response:\r\n+//         \"Dashboard, Dynamic time table, Learning Networks, Little Masters, Video Based Dictionary, General Search.\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"tell me the services offered by the platform\",\r\n+\r\n+//       response:\r\n+//         \"Dashboard, Dynamic time table, Learning Networks, Little Masters, Video Based Dictionary, General Search.\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"explain platform services\",\r\n+\r\n+//       response:\r\n+//         \"Dashboard, Dynamic time table, Learning Networks, Little Masters, Video Based Dictionary, General Search.\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"Give me the Parent voice of Julia Harris\",\r\n+\r\n+//       response:\r\n+//         \"Brane education has helped my son a lot in his studies. He improved a lot in his studies and is now able to score good marks in his exams\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"Play today's motivational video\",\r\n+\r\n+//       response: \"I am playing the video\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"Play today's video\",\r\n+\r\n+//       response: \"I am playing Motivational video\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"Leaders Voice\",\r\n+\r\n+//       response:\r\n+//         \"This Voice-interactive AI Platform is a game Changer. It revolutionizes education.\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"Curriculum Supported by Brane Education\",\r\n+\r\n+//       response:\r\n+//         \"we support multiple Boards let me say few Telangana State Board Andhra Pradesh Board Maharashtra Board Assam Board\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"Boards supported by the platform\",\r\n+\r\n+//       response:\r\n+//         \"we support multiple Boards let me say few Telangana State Board Andhra Pradesh Board Maharashtra Board Assam Board\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"Curriculum\",\r\n+\r\n+//       response:\r\n+//         \"we support multiple Boards let me say few Telangana State Board Andhra Pradesh Board Maharashtra Board Assam Board\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"Go to landing page\",\r\n+\r\n+//       response: \"Okay, I am taking you to the landing page.\",\r\n+\r\n+//       route: \"/childpage\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"take me to landing page\",\r\n+\r\n+//       response: \"Okay, I am taking you to the landing page.\",\r\n+\r\n+//       route: \"/childpage\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"move to landing page\",\r\n+\r\n+//       response: \"Okay, I am taking you to the landing page.\",\r\n+\r\n+//       route: \"/childpage\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"roll back to landing page\",\r\n+\r\n+//       response: \"Okay, I am taking you to the landing page.\",\r\n+\r\n+//       route: \"/childpage\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"move to landing page\",\r\n+\r\n+//       response: \"Okay, I am taking you to the landing page.\",\r\n+\r\n+//       route: \"/childpage\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"what is today's quote\",\r\n+\r\n+//       response:\r\n+//         \"Determination is the power that sees us through all our frustration and obstacles. It helps in building our willpower which is the very basis of success.\",\r\n+\r\n+//       // route: \"/childpage\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"Today's Inspirational quote\",\r\n+\r\n+//       response:\r\n+//         \"Determination is the power that sees us through all our frustration and obstacles. It helps in building our willpower which is the very basis of success.\",\r\n+\r\n+//       // route: \"/childpage\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"say me today's quote\",\r\n+\r\n+//       response:\r\n+//         \"Determination is the power that sees us through all our frustration and obstacles. It helps in building our willpower which is the very basis of success.\",\r\n+\r\n+//       // route: \"/childpage\",\r\n+//     },\r\n+//     {\r\n+//       utterance: \"go back\",\r\n+//       response: \"Going back.\",\r\n+//       action: goBack, // Note the use of an action property\r\n+//     },\r\n+//     {\r\n+//       utterance: \"go forward\",\r\n+//       response: \"Going forward.\",\r\n+//       action: goForward,\r\n+//     },\r\n+//     {\r\n+//       utterance: \"play video\",\r\n+//       // response: \"Playing video.\",\r\n+//       action: playVideo,\r\n+//     },\r\n+//     {\r\n+//       utterance: \"pause video\",\r\n+//       // response: \"Pausing video.\",\r\n+//       action: pauseVideo,\r\n+//     },\r\n+//     {\r\n+//       utterance: \"start video\",\r\n+//       // response: \"Playing video.\",\r\n+//       action: playVideo,\r\n+//     },\r\n+//     {\r\n+//       utterance: \"stop video\",\r\n+//       // response: \"Playing video.\",\r\n+//       action: pauseVideo,\r\n+//     },\r\n+//     {\r\n+//       utterance: \"scroll up\",\r\n+//       // response: \"Scrolling up.\",\r\n+//       action: scrollUp,\r\n+//     },\r\n+//     {\r\n+//       utterance: \"scroll down\",\r\n+//       // response: \"Scrolling down.\",\r\n+//       action: scrollDown,\r\n+//     },\r\n+//     {\r\n+//       utterance: \"go up\",\r\n+\r\n+//       // response: \"Scrolling up.\",\r\n+//       action: scrollUp,\r\n+//     },\r\n+//     {\r\n+//       utterance: \"go down\",\r\n+//       // response: \"Scrolling down.\",\r\n+//       action: scrollDown,\r\n+//     },\r\n+//     {\r\n+//       utterance: \"scroll to top\",\r\n+//       action: scrollToTop,\r\n+//     },\r\n+//     {\r\n+//       utterance: \"scroll to bottom\",\r\n+//       action: scrollToBottom,\r\n+//     },\r\n+//   ];\r\n+//   return (\r\n+//     <div className=\"speech-bot-container\">\r\n+//       <div\r\n+//         className={`button-container ${\r\n+//           isListening ? \"voicebotframeactive\" : \"voicebotframe\"\r\n+//         }`}\r\n+//       >\r\n+//         <div onClick={isListening ? stopListening : startListening}>\r\n+//           <iframe\r\n+//             src={\r\n+//               isListening\r\n+//                 ? \"https://lottie.host/?file=a89aca3f-5407-4052-82c3-2048afca7a9f/NpCdWzLSKD.json\"\r\n+//                 : \"https://lottie.host/?file=d2b6cc0e-fe95-4847-85b5-35365fca7e00/vTudpCuPZq.json\"\r\n+//             }\r\n+//             width=\"120\" // Set your desired width\r\n+//             height=\"120\" // Set your desired height\r\n+//             title={isListening ? \"Stop Animation\" : \"Start Animation\"}\r\n+//             className={isListening ? \"voicebotframeactive\" : \"voicebotframe\"}\r\n+//           ></iframe>\r\n+//           {isListening ? (\r\n+//             <div className=\"overlay\" onClick={stopListening}></div>\r\n+//           ) : (\r\n+//             <div className=\"overlay\" onClick={startListening}></div>\r\n+//           )}\r\n+//         </div>\r\n+//       </div>\r\n+//     </div>\r\n+//   );\r\n+// };\r\n+\r\n+// export default VoiceBot;\r\n+\r\n+// All functionalities but messed up\r\n+\r\n+// import React, { useState, useEffect, useRef } from \"react\";\r\n+// import { useNavigate, useLocation } from \"react-router-dom\";\r\n+// import Fuse from \"fuse.js\";\r\n+// import \"./VoiceBot.css\";\r\n+\r\n+// const VoiceBot = ({ videoRef, takeTestRef, goBackRef }) => {\r\n+//   const [isListening, setIsListening] = useState(false);\r\n+//   const [isSpeaking, setIsSpeaking] = useState(false);\r\n+//   const recognition = useRef(null);\r\n+//   const speechSynthesis = useRef(window.speechSynthesis);\r\n+//   const hasGreeted = useRef(false);\r\n+//   const navigate = useNavigate();\r\n+//   const location = useLocation();\r\n+//   const isRecognitionActive = useRef(false);\r\n+\r\n+//   useEffect(() => {\r\n+//     recognition.current = new window.webkitSpeechRecognition();\r\n+//     recognition.current.continuous = true;\r\n+//     recognition.current.interimResults = false;\r\n+//     recognition.current.onresult = onResult;\r\n+//     recognition.current.onend = onRecognitionEnd;\r\n+\r\n+//     return () => {\r\n+//       if (recognition.current) {\r\n+//         recognition.current.abort();\r\n+//       }\r\n+//     };\r\n+//   }, [location.pathname]);\r\n+\r\n+//   const onResult = (event) => {\r\n+//     const resultIndex = event.resultIndex;\r\n+//     const transcript = event.results[resultIndex][0].transcript\r\n+//       .trim()\r\n+//       .toLowerCase();\r\n+\r\n+//     if (event.results[resultIndex].isFinal) {\r\n+//       console.log(`Recognized text: ${transcript}`);\r\n+//       if (transcript.includes(\"brain\")) {\r\n+//         console.log(\"Wake word heard, processing command...\");\r\n+//         handleCommandWithFuse(transcript.replace(\"brain\", \"\"));\r\n+//       }\r\n+//     }\r\n+//   };\r\n+\r\n+//   const startListening = () => {\r\n+//     if (!isRecognitionActive.current) {\r\n+//       setIsListening(true);\r\n+//       recognition.current.start();\r\n+//       isRecognitionActive.current = true;\r\n+//     }\r\n+//   };\r\n+\r\n+//   const stopListening = () => {\r\n+//     if (isRecognitionActive.current) {\r\n+//       setIsListening(false);\r\n+//       recognition.current.stop();\r\n+//       isRecognitionActive.current = false;\r\n+//     }\r\n+//   };\r\n+\r\n+//   const onRecognitionEnd = () => {\r\n+//     isRecognitionActive.current = false;\r\n+//     if (isListening) {\r\n+//       startListening();\r\n+//     }\r\n+//   };\r\n+\r\n+//   const speak = (message) => {\r\n+//     const utterance = new SpeechSynthesisUtterance(message);\r\n+//     utterance.onend = () => {\r\n+//       setIsSpeaking(false);\r\n+//       if (isListening && !isRecognitionActive.current) {\r\n+//         startListening();\r\n+//       }\r\n+//     };\r\n+\r\n+//     setIsSpeaking(true);\r\n+//     if (isRecognitionActive.current) {\r\n+//       stopListening(); // Adjusted to use stopListening\r\n+//     }\r\n+//     speechSynthesis.current.speak(utterance);\r\n+//   };\r\n+\r\n+//   useEffect(() => {\r\n+//     if (isListening && !hasGreeted.current) {\r\n+//       speak(\"Hello, I'm Brane. How can I assist you today?\");\r\n+//       hasGreeted.current = true;\r\n+//     }\r\n+//   }, [isListening]);\r\n+\r\n+//   const goBack = () => {\r\n+//     if (window.history.length > 1) {\r\n+//       navigate(-1);\r\n+//     } else {\r\n+//       speak(\"Can't go back any further.\");\r\n+//     }\r\n+//   };\r\n+\r\n+//   const goForward = () => {\r\n+//     // Unfortunately, there's no direct way to check if you can go forward in the history.\r\n+//     // You might need to manage this state manually based on user navigation.\r\n+//     navigate(1);\r\n+//   };\r\n+\r\n+//   const playVideo = () => {\r\n+//     if (videoRef.current && !videoRef.current.paused) {\r\n+//       speak(\"Video is already playing.\");\r\n+//     } else if (videoRef.current) {\r\n+//       videoRef.current.play();\r\n+//       speak(\"Playing video.\");\r\n+//     } else {\r\n+//       speak(\"No video to play.\");\r\n+//     }\r\n+//   };\r\n+\r\n+//   const pauseVideo = () => {\r\n+//     if (videoRef.current && videoRef.current.paused) {\r\n+//       speak(\"Video is already paused.\");\r\n+//     } else if (videoRef.current) {\r\n+//       videoRef.current.pause();\r\n+//       speak(\"Video paused.\");\r\n+//     } else {\r\n+//       speak(\"No video to pause.\");\r\n+//     }\r\n+//   };\r\n+\r\n+//   const scrollAmount = window.innerHeight * 0.82;\r\n+\r\n+//   const scrollUp = () => {\r\n+//     if (window.pageYOffset === 0) {\r\n+//       speak(\"Already at the top of the page.\");\r\n+//     } else {\r\n+//       window.scrollBy(0, -scrollAmount);\r\n+//       speak(\"Scrolled up.\");\r\n+//     }\r\n+//   };\r\n+\r\n+//   const scrollDown = () => {\r\n+//     const maxScrollTop =\r\n+//       document.documentElement.scrollHeight - window.innerHeight;\r\n+//     if (window.pageYOffset >= maxScrollTop) {\r\n+//       speak(\"Already at the bottom of the page.\");\r\n+//     } else {\r\n+//       window.scrollBy(0, scrollAmount);\r\n+//       speak(\"Scrolled down.\");\r\n+//     }\r\n+//   };\r\n+\r\n+//   const scrollToTop = () => {\r\n+//     if (window.pageYOffset === 0) {\r\n+//       speak(\"Already at the top of the page.\");\r\n+//     } else {\r\n+//       window.scrollTo(0, 0);\r\n+//       speak(\"Scrolled to the top of the page.\");\r\n+//     }\r\n+//   };\r\n+\r\n+//   const scrollToBottom = () => {\r\n+//     const maxScrollTop =\r\n+//       document.documentElement.scrollHeight - window.innerHeight;\r\n+//     if (window.pageYOffset >= maxScrollTop) {\r\n+//       speak(\"Already at the bottom of the page.\");\r\n+//     } else {\r\n+//       window.scrollTo(0, document.body.scrollHeight);\r\n+//       speak(\"Scrolled to the bottom of the page.\");\r\n+//     }\r\n+//   };\r\n+\r\n+//   // const speak = (message) => {\r\n+//   //   const utterance = new SpeechSynthesisUtterance(message);\r\n+//   //   utterance.onend = () => {\r\n+//   //     setIsSpeaking(false);\r\n+//   //     console.log(\"Speaking ended.\");\r\n+//   //     // Only restart recognition if we're still supposed to be listening\r\n+//   //     // if (isListening) {\r\n+//   //     //   if (restartRecognitionTimeout.current) {\r\n+//   //     //     clearTimeout(restartRecognitionTimeout.current);\r\n+//   //     //   }\r\n+//   //     //   restartRecognitionTimeout.current = setTimeout(() => {\r\n+//   //     //     console.log(\"Recognition restarted.\");\r\n+//   //     //     recognition.current.start();\r\n+//   //     //   }, 100); // Delay to prevent immediate restart\r\n+//   //     // }\r\n+//   //     if (isListening && !recognition.current.starting) { // Check the flag before restarting\r\n+//   //       recognition.current.starting = true; // Set the flag when starting recognition\r\n+//   //       recognition.current.start();\r\n+//   //     }\r\n+//   //   };\r\n+\r\n+//   //   setIsSpeaking(true);\r\n+//   //   console.log(\"Speaking started.\");\r\n+//   //   recognition.current.stop(); // Stop recognition when the bot starts speaking\r\n+//   //   speechSynthesis.current.speak(utterance);\r\n+//   // };\r\n+\r\n+//   // const onRecognitionEnd = () => {\r\n+//   //   console.log(\"Recognition ended.\");\r\n+//   //   setIsRecognitionActive(false); // Update state when recognition ends\r\n+//   //   recognition.current.starting = false; // Reset the flag when recognition ends\r\n+//   //   // We now check if the recognition is already running before starting it again\r\n+//   //   if (isListening && !isSpeaking && !recognition.current?.starting) {\r\n+//   //     console.log(\"Restarting recognition.\");\r\n+//   //     recognition.current.start();\r\n+//   //   }\r\n+//   // };\r\n+\r\n+//   // useEffect(() => {\r\n+//   //   if (isListening && !hasGreeted.current) {\r\n+//   //     speak(\"Hello, I'm Brane. How can I assist you today?\");\r\n+//   //     hasGreeted.current = true;\r\n+//   //   } else if (isListening && !isSpeaking) {\r\n+//   //     recognition.current.start();\r\n+//   //   }\r\n+//   // }, [isListening, isSpeaking]);\r\n+\r\n+//   // const startListening = () => {\r\n+//   //   console.log(\"Attempting to start listening.\");\r\n+//   //   if (recognition.current && !recognition.current.starting) {\r\n+//   //     setIsListening(true);\r\n+//   //     recognition.current.starting = true; // Set the flag when starting recognition\r\n+//   //     recognition.current.start();\r\n+//   //     console.log(\"Listening started.\");\r\n+//   //   }\r\n+//   // };\r\n+\r\n+//   // const stopListening = () => {\r\n+//   //   console.log(\"Stopping listening.\");\r\n+\r\n+//   //   setIsListening(false);\r\n+//   //   recognition.current.stop();\r\n+//   //   if (speechSynthesis.current.speaking) {\r\n+//   //     speechSynthesis.current.cancel();\r\n+//   //   }\r\n+//   //   if (restartRecognitionTimeout.current) {\r\n+//   //     clearTimeout(restartRecognitionTimeout.current);\r\n+//   //   }\r\n+//   //   console.log(\"Listening stopped.\");\r\n+//   // };\r\n+//   // Handle start and stop listening logic\r\n+\r\n+//   useEffect(() => {\r\n+//     if (isListening && !hasGreeted.current) {\r\n+//       speak(\"Hello, I'm Brane. How can I assist you today?\");\r\n+//       hasGreeted.current = true;\r\n+//     }\r\n+//   }, [isListening]);\r\n+\r\n+//   // const handleCommandWithFuse = (command) => {\r\n+//   //   const fuse = new Fuse(commands, { keys: [\"utterance\"], threshold: 0.4 });\r\n+//   //   const results = fuse.search(command);\r\n+//   //   const foundCommand = results.length ? results[0].item : null;\r\n+\r\n+//   //   if (foundCommand) {\r\n+//   //     console.log(\"Command found:\", foundCommand.utterance);\r\n+//   //     speak(foundCommand.response);\r\n+//   //     if (foundCommand.route) {\r\n+//   //       navigate(foundCommand.route); // Navigate to the route specified in the command\r\n+//   //     }\r\n+//   //   } else {\r\n+//   //     console.log(\"No command found.\");\r\n+//   //     speak(\"I'm not sure how to respond to that.\");\r\n+//   //   }\r\n+//   // };\r\n+\r\n+//   const handleCommandWithFuse = (command) => {\r\n+//     const fuse = new Fuse(commands, { keys: [\"utterance\"], threshold: 0.4 });\r\n+//     const results = fuse.search(command);\r\n+//     const foundCommand = results.length ? results[0].item : null;\r\n+\r\n+//     if (foundCommand) {\r\n+//       console.log(\"Command found:\", foundCommand.utterance);\r\n+\r\n+//       if (foundCommand.action) {\r\n+//         foundCommand.action();\r\n+//       } else if (foundCommand.route) {\r\n+//         navigate(foundCommand.route);\r\n+//       }\r\n+\r\n+//       if (foundCommand.response) {\r\n+//         speak(foundCommand.response);\r\n+//       }\r\n+//     } else {\r\n+//       console.log(\"No command found.\");\r\n+//       speak(\"I'm not sure how to respond to that.\");\r\n+//     }\r\n+//   };\r\n+\r\n+//   const commands = [\r\n+//     {\r\n+//       utterance: \"Hello who are you ?\",\r\n+\r\n+//       response:\r\n+//         \"Hi! This is Brane! your Voice bot from Brane Education How can I Assist you Today ?\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"Hello\",\r\n+\r\n+//       response: \"Hi! How can I assist you today?\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"hello\",\r\n+\r\n+//       response: \"Hi! How can I assist you today?\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"Hi.\",\r\n+\r\n+//       response: \"Hello! How can I assist you today?\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"Hey there\",\r\n+\r\n+//       response: \"Hi! How can I assist you today?\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"Good morning Brane.\",\r\n+\r\n+//       response: \"Hey Hiii! Good morning  ! How can I help you?\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"Good afternoon Brane.\",\r\n+\r\n+//       response: \"Hey Hiii! Good after noon ! How can I help you?\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"Good evening Brane.\",\r\n+\r\n+//       response: \"Hey Hiii! Good evening ! How can I help you?\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"can you please take me to login page\",\r\n+//       route: \"/login\",\r\n+//       routeDescription: \"login page\",\r\n+//       response: \"Navigating to the login page.\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"go to login page\",\r\n+//       route: \"/login\",\r\n+//       routeDescription: \"login page\",\r\n+//       response: \"Navigating to the login page.\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"please take me to login page\",\r\n+//       route: \"/login\",\r\n+//       routeDescription: \"login page\",\r\n+//       response: \"Navigating to the login page.\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"Go to login page\",\r\n+//       route: \"/login\",\r\n+//       routeDescription: \"login page\",\r\n+//       response: \"Navigating to the login page.\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"open login page\",\r\n+//       route: \"/login\",\r\n+//       routeDescription: \"login page\",\r\n+//       response: \"Navigating to the login page.\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"can you please take me to signup page\",\r\n+//       route: \"/signup\",\r\n+//       routeDescription: \"signup page\",\r\n+//       response: \"Navigating to the signup page.\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"take me to signup page\",\r\n+//       route: \"/signup\",\r\n+//       routeDescription: \"signup page\",\r\n+//       response: \"Navigating to the signup page.\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"Go to signup page\",\r\n+//       route: \"/signup\",\r\n+//       routeDescription: \"signup page\",\r\n+//       response: \"Navigating to the signup page.\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"open signup page\",\r\n+//       route: \"/signup\",\r\n+//       routeDescription: \"signup page\",\r\n+//       response: \"Navigating to the signup page.\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"what are platform features\",\r\n+\r\n+//       response:\r\n+//         \"Dashboard, Dynamic time table, Learning Networks, Little Masters, Video Based Dictionary, General Search.\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"Features of platform\",\r\n+\r\n+//       response:\r\n+//         \"Dashboard, Dynamic time table, Learning Networks, Little Masters, Video Based Dictionary, General Search.\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"What does the platform offer\",\r\n+\r\n+//       response:\r\n+//         \"Dashboard, Dynamic time table, Learning Networks, Little Masters, Video Based Dictionary, General Search.\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"Say me the features of platform\",\r\n+\r\n+//       response:\r\n+//         \"Dashboard, Dynamic time table, Learning Networks, Little Masters, Video Based Dictionary, General Search.\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"Say me the services of platform\",\r\n+\r\n+//       response:\r\n+//         \"Dashboard, Dynamic time table, Learning Networks, Little Masters, Video Based Dictionary, General Search.\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"tell me the services offered by the platform\",\r\n+\r\n+//       response:\r\n+//         \"Dashboard, Dynamic time table, Learning Networks, Little Masters, Video Based Dictionary, General Search.\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"explain platform services\",\r\n+\r\n+//       response:\r\n+//         \"Dashboard, Dynamic time table, Learning Networks, Little Masters, Video Based Dictionary, General Search.\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"Give me the Parent voice of Julia Harris\",\r\n+\r\n+//       response:\r\n+//         \"Brane education has helped my son a lot in his studies. He improved a lot in his studies and is now able to score good marks in his exams\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"Play today's motivational video\",\r\n+\r\n+//       response: \"I am playing the video\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"Play today's video\",\r\n+\r\n+//       response: \"I am playing Motivational video\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"Leaders Voice\",\r\n+\r\n+//       response:\r\n+//         \"This Voice-interactive AI Platform is a game Changer. It revolutionizes education.\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"Curriculum Supported by Brane Education\",\r\n+\r\n+//       response:\r\n+//         \"we support multiple Boards let me say few Telangana State Board Andhra Pradesh Board Maharashtra Board Assam Board\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"Boards supported by the platform\",\r\n+\r\n+//       response:\r\n+//         \"we support multiple Boards let me say few Telangana State Board Andhra Pradesh Board Maharashtra Board Assam Board\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"Curriculum\",\r\n+\r\n+//       response:\r\n+//         \"we support multiple Boards let me say few Telangana State Board Andhra Pradesh Board Maharashtra Board Assam Board\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"Go to landing page\",\r\n+\r\n+//       response: \"Okay, I am taking you to the landing page.\",\r\n+\r\n+//       route: \"/childpage\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"take me to landing page\",\r\n+\r\n+//       response: \"Okay, I am taking you to the landing page.\",\r\n+\r\n+//       route: \"/childpage\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"move to landing page\",\r\n+\r\n+//       response: \"Okay, I am taking you to the landing page.\",\r\n+\r\n+//       route: \"/childpage\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"roll back to landing page\",\r\n+\r\n+//       response: \"Okay, I am taking you to the landing page.\",\r\n+\r\n+//       route: \"/childpage\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"move to landing page\",\r\n+\r\n+//       response: \"Okay, I am taking you to the landing page.\",\r\n+\r\n+//       route: \"/childpage\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"what is today's quote\",\r\n+\r\n+//       response:\r\n+//         \"Determination is the power that sees us through all our frustration and obstacles. It helps in building our willpower which is the very basis of success.\",\r\n+\r\n+//       // route: \"/childpage\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"Today's Inspirational quote\",\r\n+\r\n+//       response:\r\n+//         \"Determination is the power that sees us through all our frustration and obstacles. It helps in building our willpower which is the very basis of success.\",\r\n+\r\n+//       // route: \"/childpage\",\r\n+//     },\r\n+\r\n+//     {\r\n+//       utterance: \"say me today's quote\",\r\n+\r\n+//       response:\r\n+//         \"Determination is the power that sees us through all our frustration and obstacles. It helps in building our willpower which is the very basis of success.\",\r\n+\r\n+//       // route: \"/childpage\",\r\n+//     },\r\n+//     {\r\n+//       utterance: \"go back\",\r\n+//       response: \"Going back.\",\r\n+//       action: goBack, // Note the use of an action property\r\n+//     },\r\n+//     {\r\n+//       utterance: \"go forward\",\r\n+//       response: \"Going forward.\",\r\n+//       action: goForward,\r\n+//     },\r\n+//     {\r\n+//       utterance: \"play video\",\r\n+//       // response: \"Playing video.\",\r\n+//       action: playVideo,\r\n+//     },\r\n+//     {\r\n+//       utterance: \"pause video\",\r\n+//       // response: \"Pausing video.\",\r\n+//       action: pauseVideo,\r\n+//     },\r\n+//     {\r\n+//       utterance: \"start video\",\r\n+//       // response: \"Playing video.\",\r\n+//       action: playVideo,\r\n+//     },\r\n+//     {\r\n+//       utterance: \"stop video\",\r\n+//       // response: \"Playing video.\",\r\n+//       action: pauseVideo,\r\n+//     },\r\n+//     {\r\n+//       utterance: \"scroll up\",\r\n+//       // response: \"Scrolling up.\",\r\n+//       action: scrollUp,\r\n+//     },\r\n+//     {\r\n+//       utterance: \"scroll down\",\r\n+//       // response: \"Scrolling down.\",\r\n+//       action: scrollDown,\r\n+//     },\r\n+//     {\r\n+//       utterance: \"go up\",\r\n+\r\n+//       // response: \"Scrolling up.\",\r\n+//       action: scrollUp,\r\n+//     },\r\n+//     {\r\n+//       utterance: \"go down\",\r\n+//       // response: \"Scrolling down.\",\r\n+//       action: scrollDown,\r\n+//     },\r\n+//     {\r\n+//       utterance: \"scroll to top\",\r\n+//       action: scrollToTop,\r\n+//     },\r\n+//     {\r\n+//       utterance: \"scroll to bottom\",\r\n+//       action: scrollToBottom,\r\n+//     },\r\n+//     {\r\n+//       utterance: \"go back\",\r\n+//       action: goBackRef?.current?.click, // Use goBackRef directly\r\n+//       response: \"Going back.\",\r\n+//     },\r\n+//     {\r\n+//       utterance: \"take test\",\r\n+//       action: takeTestRef?.current?.click, // Use takeTestRef directly\r\n+//       response: \"Starting the test.\",\r\n+//     },\r\n+//   ];\r\n+//   return (\r\n+//     <div className=\"speech-bot-container\">\r\n+//       <div\r\n+//         className={`button-container ${\r\n+//           isListening ? \"voicebotframeactive\" : \"voicebotframe\"\r\n+//         }`}\r\n+//       >\r\n+//         <div onClick={isListening ? stopListening : startListening}>\r\n+//           <iframe\r\n+//             src={\r\n+//               isListening\r\n+//                 ? \"https://lottie.host/?file=a89aca3f-5407-4052-82c3-2048afca7a9f/NpCdWzLSKD.json\"\r\n+//                 : \"https://lottie.host/?file=d2b6cc0e-fe95-4847-85b5-35365fca7e00/vTudpCuPZq.json\"\r\n+//             }\r\n+//             width=\"120\" // Set your desired width\r\n+//             height=\"120\" // Set your desired height\r\n+//             title={isListening ? \"Stop Animation\" : \"Start Animation\"}\r\n+//             className={isListening ? \"voicebotframeactive\" : \"voicebotframe\"}\r\n+//           ></iframe>\r\n+//           {isListening ? (\r\n+//             <div className=\"overlay\" onClick={stopListening}></div>\r\n+//           ) : (\r\n+//             <div className=\"overlay\" onClick={startListening}></div>\r\n+//           )}\r\n+//         </div>\r\n+//       </div>\r\n+//     </div>\r\n+//   );\r\n+// };\r\n+\r\n+// export default VoiceBot;\r\n"
                },
                {
                    "date": 1700826033637,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1189,4051 +1189,15 @@\n         speak(\"Attempting to log in.\");\r\n       },\r\n     },\r\n     {\r\n-      utterance: \"press record audio\",\r\n+      utterance: \"click login\",\r\n       action: () => {\r\n-        console.log(\"Record Audio command detected\");\r\n-        setTriggerRecordAudio(true);\r\n-      },\r\n-      response: \"Started\"\r\n-    },\r\n-    \r\n-  ];\r\n-\r\n-  return (\r\n-    <div className=\"speech-bot-container\">\r\n-      <div\r\n-        className={`button-container ${\r\n-          isListening ? \"voicebotframeactive\" : \"voicebotframe\"\r\n-        }`}\r\n-      >\r\n-        {/* <button onClick={isListening ? stopListening : startListening}>\r\n-          {isListening ? \"Stop\" : \"Start\"} Animation\r\n-        </button> */}\r\n-        <img\r\n-          className=\"botimage\"\r\n-          src={chatbotimage}\r\n-          alt=\"\"\r\n-          onClick={isListening ? stopListening : startListening}\r\n-        />\r\n-      </div>\r\n-    </div>\r\n-  );\r\n-};\r\n-\r\n-export default VoiceBot;\r\n-\r\n-{\r\n-  /* // import React, { useState, useEffect, useRef } from \"react\";\r\n-// import { useNavigate, useLocation } from \"react-router-dom\";\r\n-// import Fuse from \"fuse.js\";\r\n-// import \"./VoiceBot.css\";\r\n-\r\n-// const VoiceBot = ({ videoRef }) => {\r\n-//   const [isListening, setIsListening] = useState(false);\r\n-//   const [isSpeaking, setIsSpeaking] = useState(false);\r\n-//   const recognition = useRef(null);\r\n-//   const speechSynthesis = useRef(window.speechSynthesis);\r\n-//   const [hasGreeted, setHasGreeted] = useState(false);\r\n-//   const navigate = useNavigate();\r\n-\r\n-//   useEffect(() => {\r\n-//     recognition.current = new window.webkitSpeechRecognition();\r\n-//     recognition.current.continuous = true;\r\n-//     recognition.current.interimResults = false;\r\n-//     recognition.current.onresult = onResult;\r\n-//     recognition.current.onend = onRecognitionEnd;\r\n-//     recognition.current.starting = false;\r\n-\r\n-//     // Simplified error handling, removed specific handling for 'no-speech'\r\n-//     recognition.current.onerror = (event) => {\r\n-//       console.error(\"Recognition error:\", event.error);\r\n-//       // Check if listening is true and the bot isn't speaking\r\n-//       if (isListening && !isSpeaking) {\r\n-//         // Restart recognition\r\n-//         restartRecognition();\r\n-//       }\r\n-//     };\r\n-\r\n-//     return () => {\r\n-//       if (recognition.current) {\r\n-//         recognition.current.abort();\r\n-//       }\r\n-//     };\r\n-//   }, []);\r\n-\r\n-//   useEffect(() => {\r\n-//     const checkRecognition = () => {\r\n-//       if (isListening && !isSpeaking && !recognition.current.starting) {\r\n-//         console.log(\"Restarting recognition because it's not active.\");\r\n-//         recognition.current.starting = true;\r\n-//         recognition.current.start();\r\n-//         console.log(\"Restarted recognition.\");\r\n-//       }\r\n-//     };\r\n-\r\n-//     const recognitionCheckInterval = setInterval(checkRecognition, 100); // Check every 1 second\r\n-\r\n-//     return () => {\r\n-//       clearInterval(recognitionCheckInterval);\r\n-//     };\r\n-//   }, [isListening, isSpeaking]);\r\n-\r\n-//   const restartRecognition = () => {\r\n-//     if (recognition.current.starting) {\r\n-//       console.log(\"Recognition is already starting or running.\");\r\n-//       return;\r\n-//     }\r\n-\r\n-//     recognition.current.abort(); // Stop any existing recognition process\r\n-//     recognition.current.starting = true;\r\n-//     recognition.current.start();\r\n-//     console.log(\"Recognition restarted.\");\r\n-//   };\r\n-\r\n-//   const historyStack = useRef([]);\r\n-\r\n-//   useEffect(() => {\r\n-//     return () => {\r\n-//       // Clean up the listener when the component unmounts\r\n-//       window.removeEventListener(\"popstate\", handlePopState);\r\n-//     };\r\n-//   }, []);\r\n-\r\n-//   const handlePopState = () => {\r\n-//     // This needs to handle both back and forward browser actions\r\n-//     // Use some logic to determine whether it's a back or forward action\r\n-//     // For simplicity, assume it's always back\r\n-//     historyStack.current.pop();\r\n-//     forwardStack.current.length = 0; // Clear forward stack on manual navigation\r\n-//   };\r\n-  \r\n-\r\n-//   // Add a new entry to the stack whenever navigate is called\r\n-//   const customNavigate = (to, options) => {\r\n-//     historyStack.current.push(to);\r\n-//     navigate(to, options);\r\n-//   };\r\n-\r\n-//   // Listen to popstate events to update the history stack\r\n-//   useEffect(() => {\r\n-//     window.addEventListener(\"popstate\", handlePopState);\r\n-//   }, []);\r\n-\r\n-//   const forwardStack = useRef([]);\r\n-\r\n-//   const goBack = () => {\r\n-//     if (window.history.state && window.history.state.idx > 0) {\r\n-//       window.history.back();\r\n-//       speak(\"Going back\");\r\n-//     } else {\r\n-//       speak(\"Can't go back any further.\");\r\n-//     }\r\n-//   };\r\n-\r\n-//   const goForward = () => {\r\n-//     if (window.history.state && window.history.state.idx < window.history.length - 1) {\r\n-//       window.history.forward();\r\n-//       speak(\"Going forward\");\r\n-//     } else {\r\n-//       speak(\"No forward history available.\");\r\n-//     }\r\n-//   };\r\n-\r\n-//   const playVideo = () => {\r\n-//     if (videoRef.current) {\r\n-//       videoRef.current.play();\r\n-//       speak(\"Playing video.\");\r\n-//     } else {\r\n-//       speak(\"No video to play.\");\r\n-//     }\r\n-//   };\r\n-\r\n-//   const pauseVideo = () => {\r\n-//     if (videoRef.current) {\r\n-//       videoRef.current.pause();\r\n-//       speak(\"Video paused.\");\r\n-//     } else {\r\n-//       speak(\"No video to pause.\");\r\n-//     }\r\n-//   };\r\n-\r\n-//   const scrollAmount = window.innerHeight * 0.82;\r\n-\r\n-//   const scrollUp = () => {\r\n-//     if (window.pageYOffset === 0) {\r\n-//       speak(\"Already at the top of the page.\");\r\n-//     } else {\r\n-//       window.scrollBy(0, -scrollAmount);\r\n-//       speak(\"Scrolled up.\");\r\n-//     }\r\n-//   };\r\n-\r\n-//   const scrollDown = () => {\r\n-//     const maxScrollTop =\r\n-//       document.documentElement.scrollHeight - window.innerHeight;\r\n-//     if (window.pageYOffset >= maxScrollTop) {\r\n-//       speak(\"Already at the bottom of the page.\");\r\n-//     } else {\r\n-//       window.scrollBy(0, scrollAmount);\r\n-//       speak(\"Scrolled down.\");\r\n-//     }\r\n-//   };\r\n-\r\n-//   const scrollToTop = () => {\r\n-//     if (window.pageYOffset === 0) {\r\n-//       speak(\"Already at the top of the page.\");\r\n-//     } else {\r\n-//       window.scrollTo(0, 0);\r\n-//       speak(\"Scrolled to the top of the page.\");\r\n-//     }\r\n-//   };\r\n-\r\n-//   const scrollToBottom = () => {\r\n-//     const maxScrollTop =\r\n-//       document.documentElement.scrollHeight - window.innerHeight;\r\n-//     if (window.pageYOffset >= maxScrollTop) {\r\n-//       speak(\"Already at the bottom of the page.\");\r\n-//     } else {\r\n-//       window.scrollTo(0, document.body.scrollHeight);\r\n-//       speak(\"Scrolled to the bottom of the page.\");\r\n-//     }\r\n-//   };\r\n-\r\n-//   const speak = (message) => {\r\n-//     console.log(\"speak function called with message:\", message);\r\n-//     const utterance = new SpeechSynthesisUtterance(message);\r\n-//     utterance.onend = () => {\r\n-//       setIsSpeaking(false);\r\n-//       console.log(\"Speaking ended.\");\r\n-//       if (isListening && !recognition.current.starting) {\r\n-//         console.log(\"Restarting recognition after speaking.\");\r\n-//         recognition.current.starting = true;\r\n-//         recognition.current.start();\r\n-//         console.log(\"Restarted recognition after speaking.\");\r\n-//       }\r\n-//     };\r\n-\r\n-//     setIsSpeaking(true);\r\n-//     console.log(\"Speaking started.\");\r\n-//     recognition.current.stop(); // Ensure to stop recognition before speaking\r\n-//     speechSynthesis.current.speak(utterance);\r\n-//   };\r\n-\r\n-//   const onResult = (event) => {\r\n-//     const resultIndex = event.resultIndex;\r\n-//     const transcript = event.results[resultIndex][0].transcript\r\n-//       .trim()\r\n-//       .toLowerCase();\r\n-\r\n-//     if (event.results[resultIndex].isFinal) {\r\n-//       console.log(`Recognized text: ${transcript}`);\r\n-//       if (transcript.includes(\"brain\")) {\r\n-//         console.log(\"Wake word heard, processing command...\");\r\n-//         handleCommandWithFuse(transcript.replace(\"brain\", \"\"));\r\n-//       }\r\n-//     }\r\n-//   };\r\n-\r\n-//   const onRecognitionEnd = () => {\r\n-//     recognition.current.starting = false;\r\n-//     if (isListening && !isSpeaking) {\r\n-//       restartRecognition();\r\n-//     }\r\n-//   };\r\n-\r\n-//   useEffect(() => {\r\n-//     if (isListening) {\r\n-//       if (!hasGreeted) {\r\n-//         speak(\"Hello, I'm Brane. How can I help you today?\");\r\n-//         setHasGreeted(true);\r\n-//       } else {\r\n-//         speak(\"Listening.\");\r\n-//       }\r\n-//     }\r\n-//   }, [isListening, hasGreeted]);\r\n-\r\n-\r\n-//   const startListening = () => {\r\n-//     if (!recognition.current.starting) {\r\n-//       setIsListening(true);\r\n-//       restartRecognition();\r\n-//     }\r\n-//   };\r\n-\r\n-//   const stopListening = () => {\r\n-//     setIsListening(false);\r\n-//     recognition.current.abort();\r\n-//     if (speechSynthesis.current.speaking) {\r\n-//       speechSynthesis.current.cancel();\r\n-//     }\r\n-//   };\r\n-\r\n-//   const handleCommandWithFuse = (command) => {\r\n-//     const fuse = new Fuse(commands, { keys: [\"utterance\"], threshold: 0.4 });\r\n-//     const results = fuse.search(command);\r\n-//     const foundCommand = results.length ? results[0].item : null;\r\n-\r\n-//     if (foundCommand) {\r\n-//       console.log(\"Command found:\", foundCommand.utterance);\r\n-\r\n-//       if (foundCommand.action) {\r\n-//         foundCommand.action();\r\n-//       } else if (foundCommand.route) {\r\n-//         navigate(foundCommand.route);\r\n-//       }\r\n-\r\n-//       // Speak after performing the action or navigation\r\n-//       speak(foundCommand.response);\r\n-//     } else {\r\n-//       console.log(\"No command found.\");\r\n-//       speak(\"I'm not sure how to respond to that.\");\r\n-//     }\r\n-//   };\r\n-\r\n-//   const commands = [\r\n-//     {\r\n-//       utterance: \"Hello who are you ?\",\r\n-\r\n-//       response:\r\n-//         \"Hi! This is Brane! your Voice bot from Brane Education How can I Assist you Today ?\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"Hello\",\r\n-\r\n-//       response: \"Hi! How can I assist you today?\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"hello\",\r\n-\r\n-//       response: \"Hi! How can I assist you today?\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"Hi.\",\r\n-\r\n-//       response: \"Hello! How can I assist you today?\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"Hey there\",\r\n-\r\n-//       response: \"Hi! How can I assist you today?\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"Good morning Brane.\",\r\n-\r\n-//       response: \"Hey Hiii! Good morning  ! How can I help you?\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"Good afternoon Brane.\",\r\n-\r\n-//       response: \"Hey Hiii! Good after noon ! How can I help you?\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"Good evening Brane.\",\r\n-\r\n-//       response: \"Hey Hiii! Good evening ! How can I help you?\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"can you please take me to login page\",\r\n-\r\n-//       route: \"/login\",\r\n-\r\n-//       response: \"Here's the Login Page, Please Login\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"please take me to login page\",\r\n-\r\n-//       route: \"/login\",\r\n-\r\n-//       response: \"Here's the Login Page, Please Login\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"Go to login page\",\r\n-\r\n-//       route: \"/login\",\r\n-\r\n-//       response: \"Here's the Login Page, Please Login\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"open login page\",\r\n-\r\n-//       route: \"/login\",\r\n-\r\n-//       response: \"Here's the Login Page, Please Login\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"can you please take me to signup page\",\r\n-\r\n-//       route: \"/signup\",\r\n-\r\n-//       response: \"Here's the signup page. Please proceed With Registration.\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"take me to signup page\",\r\n-\r\n-//       route: \"/signup\",\r\n-\r\n-//       response: \"Here's the signup page. Please proceed With Registration.\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"Go to signup page\",\r\n-\r\n-//       route: \"/signup\",\r\n-\r\n-//       response: \"Here's the signup page. Please proceed With Registration.\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"open signup page\",\r\n-\r\n-//       route: \"/signup\",\r\n-\r\n-//       response: \"Here's the signup page. Please proceed With Registration.\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"Go to face id\",\r\n-\r\n-//       route: \"/login/faceid\",\r\n-\r\n-//       response: \"Here's Face ID Login. Please proceed.\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"Go to face id login\",\r\n-\r\n-//       route: \"/login/faceid\",\r\n-\r\n-//       response: \"Here's Face ID Login. Please proceed.\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"login with face id\",\r\n-\r\n-//       route: \"/login/faceid\",\r\n-\r\n-//       response: \"Here's Face ID Login. Please proceed.\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"login with face\",\r\n-\r\n-//       route: \"/login/faceid\",\r\n-\r\n-//       response: \"Here's Face ID Login. Please proceed.\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"i want to login with face\",\r\n-\r\n-//       route: \"/login/faceid\",\r\n-\r\n-//       response: \"Here's Face ID Login. Please proceed.\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"login with voice\",\r\n-\r\n-//       route: \"/login/voiceid\",\r\n-\r\n-//       response: \"Here's Voice Login. Please proceed.\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"i want to login with voice\",\r\n-\r\n-//       route: \"/login/voiceid\",\r\n-\r\n-//       response: \"Here's Voice Login. Please proceed.\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"go to voice login\",\r\n-\r\n-//       route: \"/login/voiceid\",\r\n-\r\n-//       response: \"Here's Voice Login. Please proceed.\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"login with voice\",\r\n-\r\n-//       route: \"/login/voiceid\",\r\n-\r\n-//       response: \"Here's Voice Login. Please proceed.\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"login with mobile\",\r\n-\r\n-//       route: \"/login/mobile\",\r\n-\r\n-//       response: \"Here's Mobile Login. Please proceed.\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"i want to login with mobile\",\r\n-\r\n-//       route: \"/login/mobile\",\r\n-\r\n-//       response: \"Here's Mobile Login. Please proceed.\",\r\n-//     },\r\n-//     {\r\n-//       utterance: \"go to mobile login\",\r\n-\r\n-//       route: \"/login/mobile\",\r\n-\r\n-//       response: \"Here's Mobile Login. Please proceed.\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"what are platform features\",\r\n-\r\n-//       response:\r\n-//         \"Dashboard, Dynamic time table, Learning Networks, Little Masters, Video Based Dictionary, General Search.\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"Features of platform\",\r\n-\r\n-//       response:\r\n-//         \"Dashboard, Dynamic time table, Learning Networks, Little Masters, Video Based Dictionary, General Search.\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"What does the platform offer\",\r\n-\r\n-//       response:\r\n-//         \"Dashboard, Dynamic time table, Learning Networks, Little Masters, Video Based Dictionary, General Search.\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"Say me the features of platform\",\r\n-\r\n-//       response:\r\n-//         \"Dashboard, Dynamic time table, Learning Networks, Little Masters, Video Based Dictionary, General Search.\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"Say me the services of platform\",\r\n-\r\n-//       response:\r\n-//         \"Dashboard, Dynamic time table, Learning Networks, Little Masters, Video Based Dictionary, General Search.\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"tell me the services offered by the platform\",\r\n-\r\n-//       response:\r\n-//         \"Dashboard, Dynamic time table, Learning Networks, Little Masters, Video Based Dictionary, General Search.\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"explain platform services\",\r\n-\r\n-//       response:\r\n-//         \"Dashboard, Dynamic time table, Learning Networks, Little Masters, Video Based Dictionary, General Search.\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"Give me the Parent voice of Julia Harris\",\r\n-\r\n-//       response:\r\n-//         \"Brane education has helped my son a lot in his studies. He improved a lot in his studies and is now able to score good marks in his exams\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"Play today's motivational video\",\r\n-\r\n-//       response: \"I am playing the video\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"Play today's video\",\r\n-\r\n-//       response: \"I am playing Motivational video\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"Leaders Voice\",\r\n-\r\n-//       response:\r\n-//         \"This Voice-interactive AI Platform is a game Changer. It revolutionizes education.\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"Curriculum Supported by Brane Education\",\r\n-\r\n-//       response:\r\n-//         \"we support multiple Boards let me say few Telangana State Board Andhra Pradesh Board Maharashtra Board Assam Board\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"Boards supported by the platform\",\r\n-\r\n-//       response:\r\n-//         \"we support multiple Boards let me say few Telangana State Board Andhra Pradesh Board Maharashtra Board Assam Board\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"Curriculum\",\r\n-\r\n-//       response:\r\n-//         \"we support multiple Boards let me say few Telangana State Board Andhra Pradesh Board Maharashtra Board Assam Board\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"Go to landing page\",\r\n-\r\n-//       response: \"Okay, I am taking you to the landing page.\",\r\n-\r\n-//       route: \"/childpage\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"take me to landing page\",\r\n-\r\n-//       response: \"Okay, I am taking you to the landing page.\",\r\n-\r\n-//       route: \"/childpage\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"move to landing page\",\r\n-\r\n-//       response: \"Okay, I am taking you to the landing page.\",\r\n-\r\n-//       route: \"/childpage\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"roll back to landing page\",\r\n-\r\n-//       response: \"Okay, I am taking you to the landing page.\",\r\n-\r\n-//       route: \"/childpage\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"move to landing page\",\r\n-\r\n-//       response: \"Okay, I am taking you to the landing page.\",\r\n-\r\n-//       route: \"/childpage\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"what is today's quote\",\r\n-\r\n-//       response:\r\n-//         \"Determination is the power that sees us through all our frustration and obstacles. It helps in building our willpower which is the very basis of success.\",\r\n-\r\n-//       route: \"/childpage\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"Today's Inspirational quote\",\r\n-\r\n-//       response:\r\n-//         \"Determination is the power that sees us through all our frustration and obstacles. It helps in building our willpower which is the very basis of success.\",\r\n-\r\n-//       route: \"/childpage\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"say me today's quote\",\r\n-\r\n-//       response:\r\n-//         \"Determination is the power that sees us through all our frustration and obstacles. It helps in building our willpower which is the very basis of success.\",\r\n-\r\n-//       route: \"/childpage\",\r\n-//     },\r\n-//     {\r\n-//       utterance: \"go back\",\r\n-//       response: \"\",\r\n-//       action: goBack, // Note the use of an action property\r\n-//     },\r\n-//     {\r\n-//       utterance: \"go forward\",\r\n-//       response: \"\",\r\n-//       action: goForward,\r\n-//     },\r\n-//     {\r\n-//       utterance: \"play video\",\r\n-//       // response: \"Playing video.\",\r\n-//       action: playVideo,\r\n-//     },\r\n-//     {\r\n-//       utterance: \"pause video\",\r\n-//       // response: \"Pausing video.\",\r\n-//       action: pauseVideo,\r\n-//     },\r\n-//     {\r\n-//       utterance: \"start video\",\r\n-//       // response: \"Playing video.\",\r\n-//       action: playVideo,\r\n-//     },\r\n-//     {\r\n-//       utterance: \"stop video\",\r\n-//       // response: \"Playing video.\",\r\n-//       action: pauseVideo,\r\n-//     },\r\n-//     {\r\n-//       utterance: \"scroll up\",\r\n-//       // response: \"Scrolling up.\",\r\n-//       action: scrollUp,\r\n-//     },\r\n-//     {\r\n-//       utterance: \"scroll down\",\r\n-//       // response: \"Scrolling down.\",\r\n-//       action: scrollDown,\r\n-//     },\r\n-//     {\r\n-//       utterance: \"go up\",\r\n-\r\n-//       // response: \"Scrolling up.\",\r\n-//       action: scrollUp,\r\n-//     },\r\n-//     {\r\n-//       utterance: \"go down\",\r\n-//       // response: \"Scrolling down.\",\r\n-//       action: scrollDown,\r\n-//     },\r\n-//     {\r\n-//       utterance: \"scroll to top\",\r\n-//       action: scrollToTop,\r\n-//     },\r\n-//     {\r\n-//       utterance: \"scroll to bottom\",\r\n-//       action: scrollToBottom,\r\n-//     },\r\n-//     {\r\n-//       utterance: \"brane stop\",\r\n-//       action: stopListening,\r\n-//     },\r\n-//     {\r\n-//       utterance: \"brane turn off\",\r\n-//       action: stopListening,\r\n-//     },\r\n-//     {\r\n-//       utterance: \"brane stop the bot\",\r\n-//       action: stopListening,\r\n-//     },\r\n-//   ];\r\n-\r\n-//   return (\r\n-//     <div className=\"speech-bot-container\">\r\n-//       <div\r\n-//         className={`button-container ${\r\n-//           isListening ? \"voicebotframeactive\" : \"voicebotframe\"\r\n-//         }`}\r\n-//       >\r\n-//         <button onClick={isListening ? stopListening : startListening}>\r\n-//           {isListening ? \"Stop\" : \"Start\"} Animation\r\n-//         </button>\r\n-//         {/* <button onClick={toggleBotActive}>\r\n-//         {isBotActive ? 'Deactivate Bot' : 'Activate Bot'}\r\n-//       </button> \r\n-//       </div>\r\n-//     </div>\r\n-//   );\r\n-// };\r\n-\r\n-// export default VoiceBot; */\r\n-}\r\n-\r\n-//iska v1\r\n-\r\n-// import React, { useState, useEffect, useRef } from \"react\";\r\n-// import { useNavigate, useLocation } from \"react-router-dom\";\r\n-// import Fuse from \"fuse.js\";\r\n-// import \"./VoiceBot.css\";\r\n-\r\n-// const VoiceBot = ({ videoRef}) => {\r\n-//   const [isListening, setIsListening] = useState(false);\r\n-//   const [isSpeaking, setIsSpeaking] = useState(false);\r\n-//   const recognition = useRef(null);\r\n-//   const speechSynthesis = useRef(window.speechSynthesis);\r\n-//   const [hasGreeted, setHasGreeted] = useState(false);\r\n-//   const navigate = useNavigate();\r\n-\r\n-//  // Initialize speech recognition\r\n-//  useEffect(() => {\r\n-//   recognition.current = new window.webkitSpeechRecognition();\r\n-//   recognition.current.continuous = true;\r\n-//   recognition.current.interimResults = false;\r\n-//   recognition.current.onresult = onResult;\r\n-//   recognition.current.onend = onRecognitionEnd;\r\n-//   recognition.current.starting = false;\r\n-\r\n-//   recognition.current.onerror = (event) => {\r\n-//     console.error(\"Recognition error:\", event.error);\r\n-//     if (isListening && !isSpeaking) {\r\n-//       restartRecognition();\r\n-//     }\r\n-//   };\r\n-\r\n-//   return () => {\r\n-//     if (recognition.current) {\r\n-//       recognition.current.abort();\r\n-//     }\r\n-//   };\r\n-// }, []);\r\n-\r\n-//   // useEffect(() => {\r\n-//   //   const checkRecognition = () => {\r\n-//   //     if (isListening && !isSpeaking && !recognition.current.starting) {\r\n-//   //       console.log(\"Restarting recognition because it's not active.\");\r\n-//   //       recognition.current.starting = true;\r\n-//   //       recognition.current.start();\r\n-//   //       console.log(\"Restarted recognition.\");\r\n-//   //     }\r\n-//   //   };\r\n-\r\n-//   //   const recognitionCheckInterval = setInterval(checkRecognition, 100); // Check every .5 second\r\n-\r\n-//   //   return () => {\r\n-//   //     clearInterval(recognitionCheckInterval);\r\n-//   //   };\r\n-//   // }, [isListening, isSpeaking]);\r\n-\r\n-//   const historyStack = useRef([]);\r\n-\r\n-//   useEffect(() => {\r\n-//     return () => {\r\n-//       // Clean up the listener when the component unmounts\r\n-//       window.removeEventListener(\"popstate\", handlePopState);\r\n-//     };\r\n-//   }, []);\r\n-\r\n-//   const handlePopState = () => {\r\n-//     // This needs to handle both back and forward browser actions\r\n-//     // Use some logic to determine whether it's a back or forward action\r\n-//     // For simplicity, assume it's always back\r\n-//     historyStack.current.pop();\r\n-//     forwardStack.current.length = 0; // Clear forward stack on manual navigation\r\n-//   };\r\n-\r\n-//   // Add a new entry to the stack whenever navigate is called\r\n-//   const customNavigate = (to, options) => {\r\n-//     historyStack.current.push(to);\r\n-//     navigate(to, options);\r\n-//   };\r\n-\r\n-//   // Listen to popstate events to update the history stack\r\n-//   useEffect(() => {\r\n-//     window.addEventListener(\"popstate\", handlePopState);\r\n-//   }, []);\r\n-\r\n-//   const forwardStack = useRef([]);\r\n-\r\n-//   const goBack = () => {\r\n-//     if (window.history.state && window.history.state.idx > 0) {\r\n-//       window.history.back();\r\n-//       speak(\"Going back\");\r\n-//     } else {\r\n-//       speak(\"Can't go back any further.\");\r\n-//     }\r\n-//   };\r\n-\r\n-//   const goForward = () => {\r\n-//     if (window.history.state && window.history.state.idx < window.history.length - 1) {\r\n-//       window.history.forward();\r\n-//       speak(\"Going forward\");\r\n-//     } else {\r\n-//       speak(\"No forward history available.\");\r\n-//     }\r\n-//   };\r\n-\r\n-//   const playVideo = () => {\r\n-//     if (videoRef.current) {\r\n-//       videoRef.current.play();\r\n-//       speak(\"Playing video.\");\r\n-//     } else {\r\n-//       speak(\"No video to play.\");\r\n-//     }\r\n-//   };\r\n-\r\n-//   const pauseVideo = () => {\r\n-//     if (videoRef.current) {\r\n-//       videoRef.current.pause();\r\n-//       speak(\"Video paused.\");\r\n-//     } else {\r\n-//       speak(\"No video to pause.\");\r\n-//     }\r\n-//   };\r\n-\r\n-//   const scrollAmount = window.innerHeight * 0.82;\r\n-\r\n-//   const scrollUp = () => {\r\n-//     if (window.pageYOffset === 0) {\r\n-//       speak(\"Already at the top of the page.\");\r\n-//     } else {\r\n-//       window.scrollBy(0, -scrollAmount);\r\n-//       speak(\"Scrolled up.\");\r\n-//     }\r\n-//   };\r\n-\r\n-//   const scrollDown = () => {\r\n-//     const maxScrollTop =\r\n-//       document.documentElement.scrollHeight - window.innerHeight;\r\n-//     if (window.pageYOffset >= maxScrollTop) {\r\n-//       speak(\"Already at the bottom of the page.\");\r\n-//     } else {\r\n-//       window.scrollBy(0, scrollAmount);\r\n-//       speak(\"Scrolled down.\");\r\n-//     }\r\n-//   };\r\n-\r\n-//   const scrollToTop = () => {\r\n-//     if (window.pageYOffset === 0) {\r\n-//       speak(\"Already at the top of the page.\");\r\n-//     } else {\r\n-//       window.scrollTo(0, 0);\r\n-//       speak(\"Scrolled to the top of the page.\");\r\n-//     }\r\n-//   };\r\n-\r\n-//   const scrollToBottom = () => {\r\n-//     const maxScrollTop =\r\n-//       document.documentElement.scrollHeight - window.innerHeight;\r\n-//     if (window.pageYOffset >= maxScrollTop) {\r\n-//       speak(\"Already at the bottom of the page.\");\r\n-//     } else {\r\n-//       window.scrollTo(0, document.body.scrollHeight);\r\n-//       speak(\"Scrolled to the bottom of the page.\");\r\n-//     }\r\n-//   };\r\n-\r\n-//   const speak = (message) => {\r\n-//     const utterance = new SpeechSynthesisUtterance(message);\r\n-//     utterance.onend = () => {\r\n-//       setIsSpeaking(false);\r\n-//       // Restart recognition after speaking has ended\r\n-//       if (isListening) {\r\n-//         restartRecognition();\r\n-//       }\r\n-//     };\r\n-\r\n-//     setIsSpeaking(true);\r\n-//     // Stop recognition when the bot starts speaking\r\n-//     if (recognition.current) {\r\n-//       recognition.current.abort();\r\n-//     }\r\n-//     speechSynthesis.current.speak(utterance);\r\n-//   };\r\n-\r\n-//   const restartRecognition = () => {\r\n-//     // Check if recognition is not already started and if the bot is set to listen\r\n-//     if (recognition.current && !recognition.current.starting && isListening && !isSpeaking) {\r\n-//       // Only start recognition if it's not already active\r\n-//       if (recognition.current.state !== 'active') {\r\n-//         recognition.current.abort(); // Ensure any ongoing recognition is stopped\r\n-//         recognition.current.starting = true;\r\n-//         recognition.current.start();\r\n-//       }\r\n-//     }\r\n-//   };\r\n-\r\n-//     // Restart recognition when bot finishes speaking and isListening is true\r\n-//     useEffect(() => {\r\n-//       if (!isSpeaking && isListening) {\r\n-//         restartRecognition();\r\n-//       }\r\n-//     }, [isSpeaking, isListening]);\r\n-\r\n-//   const onResult = (event) => {\r\n-//     const resultIndex = event.resultIndex;\r\n-//     const transcript = event.results[resultIndex][0].transcript\r\n-//       .trim()\r\n-//       .toLowerCase();\r\n-\r\n-//     if (event.results[resultIndex].isFinal) {\r\n-//       console.log(`Recognized text: ${transcript}`);\r\n-//       if (transcript.includes(\"brain\")) {\r\n-//         console.log(\"Wake word heard, processing command...\");\r\n-//         handleCommandWithFuse(transcript.replace(\"brain\", \"\"));\r\n-//       }\r\n-//     }\r\n-//   };\r\n-\r\n-//   const onRecognitionEnd = () => {\r\n-//     recognition.current.starting = false;\r\n-//     if (isListening && !isSpeaking) {\r\n-//       restartRecognition();\r\n-//     }\r\n-//   };\r\n-\r\n-//   useEffect(() => {\r\n-//     if (isListening && !hasGreeted) {\r\n-//       speak(\"Hello, I'm Brane. How can I help you today?\");\r\n-//       setHasGreeted(true);\r\n-//     }\r\n-//   }, [isListening, hasGreeted]);\r\n-\r\n-// // Updated startListening function\r\n-// const startListening = () => {\r\n-//   setIsListening(true);\r\n-//   if (recognition.current && !recognition.current.starting) {\r\n-//     recognition.current.start();\r\n-//   }\r\n-// };\r\n-\r\n-// // Updated stopListening function\r\n-// const stopListening = () => {\r\n-//   setIsListening(false);\r\n-//   setIsSpeaking(false); // Reset speaking state\r\n-//   setHasGreeted(false); // Reset greeting state if needed\r\n-//   if (recognition.current) {\r\n-//     recognition.current.abort(); // Stop any ongoing speech recognition\r\n-//   }\r\n-//   if (speechSynthesis.current.speaking) {\r\n-//     speechSynthesis.current.cancel(); // Stop any ongoing speech synthesis\r\n-//   }\r\n-// };\r\n-\r\n-//   const handleCommandWithFuse = (command) => {\r\n-//     const fuse = new Fuse(commands, { keys: [\"utterance\"], threshold: 0.4 });\r\n-//     const results = fuse.search(command);\r\n-//     const foundCommand = results.length ? results[0].item : null;\r\n-\r\n-//     if (foundCommand) {\r\n-//       console.log(\"Command found:\", foundCommand.utterance);\r\n-\r\n-//       if (foundCommand.action) {\r\n-//         foundCommand.action();\r\n-//       } else if (foundCommand.route) {\r\n-//         navigate(foundCommand.route);\r\n-//       }\r\n-\r\n-//       // Speak after performing the action or navigation\r\n-//       speak(foundCommand.response);\r\n-//     } else {\r\n-//       console.log(\"No command found.\");\r\n-//       speak(\"I'm not sure how to respond to that.\");\r\n-//     }\r\n-//   };\r\n-\r\n-//   const commands = [\r\n-//     {\r\n-//       utterance: \"Hello who are you ?\",\r\n-\r\n-//       response:\r\n-//         \"Hi! This is Brane! your Voice bot from Brane Education How can I Assist you Today ?\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"Hello\",\r\n-\r\n-//       response: \"Hi! How can I assist you today?\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"hello\",\r\n-\r\n-//       response: \"Hi! How can I assist you today?\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"Hi.\",\r\n-\r\n-//       response: \"Hello! How can I assist you today?\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"Hey there\",\r\n-\r\n-//       response: \"Hi! How can I assist you today?\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"Good morning Brane.\",\r\n-\r\n-//       response: \"Hey Hiii! Good morning  ! How can I help you?\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"Good afternoon Brane.\",\r\n-\r\n-//       response: \"Hey Hiii! Good after noon ! How can I help you?\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"Good evening Brane.\",\r\n-\r\n-//       response: \"Hey Hiii! Good evening ! How can I help you?\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"can you please take me to login page\",\r\n-\r\n-//       route: \"/login\",\r\n-\r\n-//       response: \"Here's the Login Page, Please Login\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"please take me to login page\",\r\n-\r\n-//       route: \"/login\",\r\n-\r\n-//       response: \"Here's the Login Page, Please Login\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"Go to login page\",\r\n-\r\n-//       route: \"/login\",\r\n-\r\n-//       response: \"Here's the Login Page, Please Login\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"open login page\",\r\n-\r\n-//       route: \"/login\",\r\n-\r\n-//       response: \"Here's the Login Page, Please Login\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"can you please take me to signup page\",\r\n-\r\n-//       route: \"/signup\",\r\n-\r\n-//       response: \"Here's the signup page. Please proceed With Registration.\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"take me to signup page\",\r\n-\r\n-//       route: \"/signup\",\r\n-\r\n-//       response: \"Here's the signup page. Please proceed With Registration.\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"Go to signup page\",\r\n-\r\n-//       route: \"/signup\",\r\n-\r\n-//       response: \"Here's the signup page. Please proceed With Registration.\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"open signup page\",\r\n-\r\n-//       route: \"/signup\",\r\n-\r\n-//       response: \"Here's the signup page. Please proceed With Registration.\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"Go to face id\",\r\n-\r\n-//       route: \"/login/faceid\",\r\n-\r\n-//       response: \"Here's Face ID Login. Please proceed.\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"Go to face id login\",\r\n-\r\n-//       route: \"/login/faceid\",\r\n-\r\n-//       response: \"Here's Face ID Login. Please proceed.\",\r\n-//     },\r\n-//     {\r\n-//       utterance: \"Go to face login\",\r\n-\r\n-//       route: \"/login/faceid\",\r\n-\r\n-//       response: \"Here's Face ID Login. Please proceed.\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"login with face id\",\r\n-\r\n-//       route: \"/login/faceid\",\r\n-\r\n-//       response: \"Here's Face ID Login. Please proceed.\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"login with face\",\r\n-\r\n-//       route: \"/login/faceid\",\r\n-\r\n-//       response: \"Here's Face ID Login. Please proceed.\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"i want to login with face\",\r\n-\r\n-//       route: \"/login/faceid\",\r\n-\r\n-//       response: \"Here's Face ID Login. Please proceed.\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"login with voice\",\r\n-\r\n-//       route: \"/login/voiceid\",\r\n-\r\n-//       response: \"Here's Voice Login. Please proceed.\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"i want to login with voice\",\r\n-\r\n-//       route: \"/login/voiceid\",\r\n-\r\n-//       response: \"Here's Voice Login. Please proceed.\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"go to voice login\",\r\n-\r\n-//       route: \"/login/voiceid\",\r\n-\r\n-//       response: \"Here's Voice Login. Please proceed.\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"login with voice\",\r\n-\r\n-//       route: \"/login/voiceid\",\r\n-\r\n-//       response: \"Here's Voice Login. Please proceed.\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"login with mobile\",\r\n-\r\n-//       route: \"/login/mobile\",\r\n-\r\n-//       response: \"Here's Mobile Login. Please proceed.\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"i want to login with mobile\",\r\n-\r\n-//       route: \"/login/mobile\",\r\n-\r\n-//       response: \"Here's Mobile Login. Please proceed.\",\r\n-//     },\r\n-//     {\r\n-//       utterance: \"go to mobile login\",\r\n-\r\n-//       route: \"/login/mobile\",\r\n-\r\n-//       response: \"Here's Mobile Login. Please proceed.\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"what are platform features\",\r\n-\r\n-//       response:\r\n-//         \"Dashboard, Dynamic time table, Learning Networks, Little Masters, Video Based Dictionary, General Search.\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"Features of platform\",\r\n-\r\n-//       response:\r\n-//         \"Dashboard, Dynamic time table, Learning Networks, Little Masters, Video Based Dictionary, General Search.\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"What does the platform offer\",\r\n-\r\n-//       response:\r\n-//         \"Dashboard, Dynamic time table, Learning Networks, Little Masters, Video Based Dictionary, General Search.\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"Say me the features of platform\",\r\n-\r\n-//       response:\r\n-//         \"Dashboard, Dynamic time table, Learning Networks, Little Masters, Video Based Dictionary, General Search.\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"Say me the services of platform\",\r\n-\r\n-//       response:\r\n-//         \"Dashboard, Dynamic time table, Learning Networks, Little Masters, Video Based Dictionary, General Search.\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"tell me the services offered by the platform\",\r\n-\r\n-//       response:\r\n-//         \"Dashboard, Dynamic time table, Learning Networks, Little Masters, Video Based Dictionary, General Search.\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"explain platform services\",\r\n-\r\n-//       response:\r\n-//         \"Dashboard, Dynamic time table, Learning Networks, Little Masters, Video Based Dictionary, General Search.\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"Give me the Parent voice of Julia Harris\",\r\n-\r\n-//       response:\r\n-//         \"Brane education has helped my son a lot in his studies. He improved a lot in his studies and is now able to score good marks in his exams\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"Play today's motivational video\",\r\n-\r\n-//       response: \"I am playing the video\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"Play today's video\",\r\n-\r\n-//       response: \"I am playing Motivational video\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"Leaders Voice\",\r\n-\r\n-//       response:\r\n-//         \"This Voice-interactive AI Platform is a game Changer. It revolutionizes education.\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"Curriculum Supported by Brane Education\",\r\n-\r\n-//       response:\r\n-//         \"we support multiple Boards let me say few Telangana State Board Andhra Pradesh Board Maharashtra Board Assam Board\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"Boards supported by the platform\",\r\n-\r\n-//       response:\r\n-//         \"we support multiple Boards let me say few Telangana State Board Andhra Pradesh Board Maharashtra Board Assam Board\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"Curriculum\",\r\n-\r\n-//       response:\r\n-//         \"we support multiple Boards let me say few Telangana State Board Andhra Pradesh Board Maharashtra Board Assam Board\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"Go to landing page\",\r\n-\r\n-//       response: \"Okay, I am taking you to the landing page.\",\r\n-\r\n-//       route: \"/childpage\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"take me to landing page\",\r\n-\r\n-//       response: \"Okay, I am taking you to the landing page.\",\r\n-\r\n-//       route: \"/childpage\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"move to landing page\",\r\n-\r\n-//       response: \"Okay, I am taking you to the landing page.\",\r\n-\r\n-//       route: \"/childpage\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"roll back to landing page\",\r\n-\r\n-//       response: \"Okay, I am taking you to the landing page.\",\r\n-\r\n-//       route: \"/childpage\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"move to landing page\",\r\n-\r\n-//       response: \"Okay, I am taking you to the landing page.\",\r\n-\r\n-//       route: \"/childpage\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"what is today's quote\",\r\n-\r\n-//       response:\r\n-//         \"Determination is the power that sees us through all our frustration and obstacles. It helps in building our willpower which is the very basis of success.\",\r\n-\r\n-//       route: \"/childpage\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"Today's Inspirational quote\",\r\n-\r\n-//       response:\r\n-//         \"Determination is the power that sees us through all our frustration and obstacles. It helps in building our willpower which is the very basis of success.\",\r\n-\r\n-//       route: \"/childpage\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"say me today's quote\",\r\n-\r\n-//       response:\r\n-//         \"Determination is the power that sees us through all our frustration and obstacles. It helps in building our willpower which is the very basis of success.\",\r\n-\r\n-//       route: \"/childpage\",\r\n-//     },\r\n-//     {\r\n-//       utterance: \"go back\",\r\n-//       response: \"\",\r\n-//       action: goBack, // Note the use of an action property\r\n-//     },\r\n-//     {\r\n-//       utterance: \"go forward\",\r\n-//       response: \"\",\r\n-//       action: goForward,\r\n-//     },\r\n-//     {\r\n-//       utterance: \"play video\",\r\n-//       // response: \"Playing video.\",\r\n-//       action: playVideo,\r\n-//     },\r\n-//     {\r\n-//       utterance: \"pause video\",\r\n-//       // response: \"Pausing video.\",\r\n-//       action: pauseVideo,\r\n-//     },\r\n-//     {\r\n-//       utterance: \"start video\",\r\n-//       // response: \"Playing video.\",\r\n-//       action: playVideo,\r\n-//     },\r\n-//     {\r\n-//       utterance: \"stop video\",\r\n-//       // response: \"Playing video.\",\r\n-//       action: pauseVideo,\r\n-//     },\r\n-//     {\r\n-//       utterance: \"scroll up\",\r\n-//       // response: \"Scrolling up.\",\r\n-//       action: scrollUp,\r\n-//     },\r\n-//     {\r\n-//       utterance: \"scroll down\",\r\n-//       // response: \"Scrolling down.\",\r\n-//       action: scrollDown,\r\n-//     },\r\n-//     {\r\n-//       utterance: \"go up\",\r\n-\r\n-//       // response: \"Scrolling up.\",\r\n-//       action: scrollUp,\r\n-//     },\r\n-//     {\r\n-//       utterance: \"go down\",\r\n-//       // response: \"Scrolling down.\",\r\n-//       action: scrollDown,\r\n-//     },\r\n-//     {\r\n-//       utterance: \"scroll to top\",\r\n-//       action: scrollToTop,\r\n-//     },\r\n-//     {\r\n-//       utterance: \"scroll to bottom\",\r\n-//       action: scrollToBottom,\r\n-//     },\r\n-//     {\r\n-//       utterance: \"brane stop\",\r\n-//       action: stopListening,\r\n-//     },\r\n-//     {\r\n-//       utterance: \"brane turn off\",\r\n-//       action: stopListening,\r\n-//     },\r\n-//     {\r\n-//       utterance: \"brane stop the bot\",\r\n-//       action: stopListening,\r\n-//     },\r\n-//   ];\r\n-\r\n-//   return (\r\n-//     <div className=\"speech-bot-container\">\r\n-//       <div\r\n-//         className={`button-container ${\r\n-//           isListening ? \"voicebotframeactive\" : \"voicebotframe\"\r\n-//         }`}\r\n-//       >\r\n-//         <button onClick={isListening ? stopListening : startListening}>\r\n-//           {isListening ? \"Stop\" : \"Start\"} Animation\r\n-//         </button>\r\n-//         {/* <button onClick={toggleBotActive}>\r\n-//         {isBotActive ? 'Deactivate Bot' : 'Activate Bot'}\r\n-//       </button> */}\r\n-//       </div>\r\n-//     </div>\r\n-//   );\r\n-// };\r\n-\r\n-// export default VoiceBot;\r\n-\r\n-//Bot Video added but some start issues\r\n-\r\n-// import React, { useState, useEffect, useRef } from \"react\";\r\n-// import { useNavigate, useLocation } from \"react-router-dom\";\r\n-// import Fuse from \"fuse.js\";\r\n-// import \"./VoiceBot.css\";\r\n-\r\n-// const VoiceBot = ({ videoRef }) => {\r\n-//   const [isListening, setIsListening] = useState(false);\r\n-//   const [isSpeaking, setIsSpeaking] = useState(false);\r\n-//   const recognition = useRef(null);\r\n-//   const speechSynthesis = useRef(window.speechSynthesis);\r\n-//   const hasGreeted = useRef(false);\r\n-//   const restartRecognitionTimeout = useRef(null);\r\n-//   const navigate = useNavigate();\r\n-//   const location = useLocation();\r\n-//   const [isRecognitionActive, setIsRecognitionActive] = useState(false); // New state to track recognition status\r\n-\r\n-//   useEffect(() => {\r\n-//     recognition.current = new window.webkitSpeechRecognition();\r\n-//     recognition.current.continuous = true;\r\n-//     recognition.current.interimResults = false;\r\n-//     recognition.current.onresult = onResult;\r\n-//     recognition.current.onend = () => {\r\n-//       console.log(\"Recognition ended.\");\r\n-//       if (isListening) {\r\n-//         startListening();\r\n-//       }\r\n-//     };\r\n-//     recognition.current.onerror = (event) => {\r\n-//       console.error(\"Recognition error:\", event.error);\r\n-//     };\r\n-\r\n-//     return () => {\r\n-//       recognition.current.abort();\r\n-//     };\r\n-//   }, []);\r\n-\r\n-//   // Update useEffect for managing the recognition state based on isListening and isRecognitionActive\r\n-//   useEffect(() => {\r\n-//     if (isListening && !isRecognitionActive) {\r\n-//       startListening();\r\n-//     } else if (!isListening && isRecognitionActive) {\r\n-//       stopListening();\r\n-//     }\r\n-//   }, [isListening, isRecognitionActive]);\r\n-\r\n-//   const goBack = () => {\r\n-//     if (window.history.length > 1) {\r\n-//       navigate(-1);\r\n-//     } else {\r\n-//       speak(\"Can't go back any further.\");\r\n-//     }\r\n-//   };\r\n-\r\n-//   const goForward = () => {\r\n-//     // Unfortunately, there's no direct way to check if you can go forward in the history.\r\n-//     // You might need to manage this state manually based on user navigation.\r\n-//     navigate(1);\r\n-//   };\r\n-\r\n-//   const playVideo = () => {\r\n-//     if (videoRef.current && !videoRef.current.paused) {\r\n-//       speak(\"Video is already playing.\");\r\n-//     } else if (videoRef.current) {\r\n-//       videoRef.current.play();\r\n-//       speak(\"Playing video.\");\r\n-//     } else {\r\n-//       speak(\"No video to play.\");\r\n-//     }\r\n-//   };\r\n-\r\n-//   const pauseVideo = () => {\r\n-//     if (videoRef.current && videoRef.current.paused) {\r\n-//       speak(\"Video is already paused.\");\r\n-//     } else if (videoRef.current) {\r\n-//       videoRef.current.pause();\r\n-//       speak(\"Video paused.\");\r\n-//     } else {\r\n-//       speak(\"No video to pause.\");\r\n-//     }\r\n-//   };\r\n-\r\n-//   const scrollAmount = window.innerHeight * 0.82;\r\n-\r\n-//   const scrollUp = () => {\r\n-//     if (window.pageYOffset === 0) {\r\n-//       speak(\"Already at the top of the page.\");\r\n-//     } else {\r\n-//       window.scrollBy(0, -scrollAmount);\r\n-//       speak(\"Scrolled up.\");\r\n-//     }\r\n-//   };\r\n-\r\n-//   const scrollDown = () => {\r\n-//     const maxScrollTop =\r\n-//       document.documentElement.scrollHeight - window.innerHeight;\r\n-//     if (window.pageYOffset >= maxScrollTop) {\r\n-//       speak(\"Already at the bottom of the page.\");\r\n-//     } else {\r\n-//       window.scrollBy(0, scrollAmount);\r\n-//       speak(\"Scrolled down.\");\r\n-//     }\r\n-//   };\r\n-\r\n-//   const scrollToTop = () => {\r\n-//     if (window.pageYOffset === 0) {\r\n-//       speak(\"Already at the top of the page.\");\r\n-//     } else {\r\n-//       window.scrollTo(0, 0);\r\n-//       speak(\"Scrolled to the top of the page.\");\r\n-//     }\r\n-//   };\r\n-\r\n-//   const scrollToBottom = () => {\r\n-//     const maxScrollTop =\r\n-//       document.documentElement.scrollHeight - window.innerHeight;\r\n-//     if (window.pageYOffset >= maxScrollTop) {\r\n-//       speak(\"Already at the bottom of the page.\");\r\n-//     } else {\r\n-//       window.scrollTo(0, document.body.scrollHeight);\r\n-//       speak(\"Scrolled to the bottom of the page.\");\r\n-//     }\r\n-//   };\r\n-\r\n-//   // const speak = (message) => {\r\n-//   //   const utterance = new SpeechSynthesisUtterance(message);\r\n-//   //   utterance.onend = () => {\r\n-//   //     setIsSpeaking(false);\r\n-//   //     console.log(\"Speaking ended.\");\r\n-//   //     // Only restart recognition if we're still supposed to be listening\r\n-//   //     // if (isListening) {\r\n-//   //     //   if (restartRecognitionTimeout.current) {\r\n-//   //     //     clearTimeout(restartRecognitionTimeout.current);\r\n-//   //     //   }\r\n-//   //     //   restartRecognitionTimeout.current = setTimeout(() => {\r\n-//   //     //     console.log(\"Recognition restarted.\");\r\n-//   //     //     recognition.current.start();\r\n-//   //     //   }, 100); // Delay to prevent immediate restart\r\n-//   //     // }\r\n-//   //     if (isListening && !recognition.current.starting) { // Check the flag before restarting\r\n-//   //       recognition.current.starting = true; // Set the flag when starting recognition\r\n-//   //       recognition.current.start();\r\n-//   //     }\r\n-//   //   };\r\n-\r\n-//   //   setIsSpeaking(true);\r\n-//   //   console.log(\"Speaking started.\");\r\n-//   //   recognition.current.stop(); // Stop recognition when the bot starts speaking\r\n-//   //   speechSynthesis.current.speak(utterance);\r\n-//   // };\r\n-\r\n-//   const speak = (message) => {\r\n-//     console.log(\"speak function called with message:\", message);\r\n-//     const utterance = new SpeechSynthesisUtterance(message);\r\n-//     utterance.onend = () => {\r\n-//       setIsSpeaking(false);\r\n-//       console.log(\"Speaking ended.\");\r\n-//       // Directly handle the restart of recognition here if needed\r\n-//       if (isListening) {\r\n-//         startListening();\r\n-//       }\r\n-//     };\r\n-\r\n-//     setIsSpeaking(true);\r\n-//     console.log(\"Speaking started.\");\r\n-//     recognition.current.stop(); // Ensure to stop recognition before speaking\r\n-//     speechSynthesis.current.speak(utterance);\r\n-//   };\r\n-\r\n-//   const onResult = (event) => {\r\n-//     const resultIndex = event.resultIndex;\r\n-//     const transcript = event.results[resultIndex][0].transcript\r\n-//       .trim()\r\n-//       .toLowerCase();\r\n-\r\n-//     if (event.results[resultIndex].isFinal) {\r\n-//       console.log(`Recognized text: ${transcript}`);\r\n-//       if (transcript.includes(\"brain\")) {\r\n-//         console.log(\"Wake word heard, processing command...\");\r\n-//         handleCommandWithFuse(transcript.replace(\"brain\", \"\"));\r\n-//       }\r\n-//     }\r\n-//   };\r\n-\r\n-//   // const onRecognitionEnd = () => {\r\n-//   //   console.log(\"Recognition ended.\");\r\n-//   //   setIsRecognitionActive(false); // Update state when recognition ends\r\n-//   //   recognition.current.starting = false; // Reset the flag when recognition ends\r\n-//   //   // We now check if the recognition is already running before starting it again\r\n-//   //   if (isListening && !isSpeaking && !recognition.current?.starting) {\r\n-//   //     console.log(\"Restarting recognition.\");\r\n-//   //     recognition.current.start();\r\n-//   //   }\r\n-//   // };\r\n-\r\n-//   // useEffect(() => {\r\n-//   //   if (isListening && !hasGreeted.current) {\r\n-//   //     speak(\"Hello, I'm Brane. How can I assist you today?\");\r\n-//   //     hasGreeted.current = true;\r\n-//   //   } else if (isListening && !isSpeaking) {\r\n-//   //     recognition.current.start();\r\n-//   //   }\r\n-//   // }, [isListening, isSpeaking]);\r\n-\r\n-//   useEffect(() => {\r\n-//     if (isListening && !hasGreeted.current) {\r\n-//       speak(\"Hello, I'm Brane. How can I assist you today?\");\r\n-//       hasGreeted.current = true;\r\n-//     } else if (isListening && !isSpeaking && !recognition.current.starting) {\r\n-//       // Check the flag before starting\r\n-//       recognition.current.starting = true; // Set the flag when starting recognition\r\n-//       recognition.current.start();\r\n-//     }\r\n-//   }, [isListening, isSpeaking]);\r\n-\r\n-//   // const startListening = () => {\r\n-//   //   console.log(\"Attempting to start listening.\");\r\n-//   //   if (recognition.current && !recognition.current.starting) {\r\n-//   //     setIsListening(true);\r\n-//   //     recognition.current.starting = true; // Set the flag when starting recognition\r\n-//   //     recognition.current.start();\r\n-//   //     console.log(\"Listening started.\");\r\n-//   //   }\r\n-//   // };\r\n-\r\n-//   // const stopListening = () => {\r\n-//   //   console.log(\"Stopping listening.\");\r\n-\r\n-//   //   setIsListening(false);\r\n-//   //   recognition.current.stop();\r\n-//   //   if (speechSynthesis.current.speaking) {\r\n-//   //     speechSynthesis.current.cancel();\r\n-//   //   }\r\n-//   //   if (restartRecognitionTimeout.current) {\r\n-//   //     clearTimeout(restartRecognitionTimeout.current);\r\n-//   //   }\r\n-//   //   console.log(\"Listening stopped.\");\r\n-//   // };\r\n-//   // Handle start and stop listening logic\r\n-//   const startListening = () => {\r\n-//     console.log(\"Attempting to start listening.\");\r\n-//     if (!recognition.current.starting) {\r\n-//       setIsListening(true);\r\n-//       recognition.current.starting = true;\r\n-//       recognition.current.start();\r\n-//       console.log(\"Listening started.\");\r\n-//     } else {\r\n-//       console.log(\"Recognition already active.\");\r\n-//     }\r\n-//   };\r\n-\r\n-//   const stopListening = () => {\r\n-//     console.log(\"Stopping listening.\");\r\n-//     if (recognition.current.starting) {\r\n-//       setIsListening(false);\r\n-//       recognition.current.starting = false;\r\n-//       recognition.current.stop();\r\n-//       console.log(\"Listening stopped.\");\r\n-//     } else {\r\n-//       console.log(\"Recognition already inactive.\");\r\n-//     }\r\n-//   };\r\n-\r\n-//   // const handleCommandWithFuse = (command) => {\r\n-//   //   const fuse = new Fuse(commands, { keys: [\"utterance\"], threshold: 0.4 });\r\n-//   //   const results = fuse.search(command);\r\n-//   //   const foundCommand = results.length ? results[0].item : null;\r\n-\r\n-//   //   if (foundCommand) {\r\n-//   //     console.log(\"Command found:\", foundCommand.utterance);\r\n-//   //     speak(foundCommand.response);\r\n-//   //     if (foundCommand.route) {\r\n-//   //       navigate(foundCommand.route); // Navigate to the route specified in the command\r\n-//   //     }\r\n-//   //   } else {\r\n-//   //     console.log(\"No command found.\");\r\n-//   //     speak(\"I'm not sure how to respond to that.\");\r\n-//   //   }\r\n-//   // };\r\n-\r\n-//   const handleCommandWithFuse = (command) => {\r\n-//     const fuse = new Fuse(commands, { keys: [\"utterance\"], threshold: 0.4 });\r\n-//     const results = fuse.search(command);\r\n-//     const foundCommand = results.length ? results[0].item : null;\r\n-\r\n-//     if (foundCommand) {\r\n-//       console.log(\"Command found:\", foundCommand.utterance);\r\n-\r\n-//       if (foundCommand.route) {\r\n-//         if (location.pathname !== foundCommand.route) {\r\n-//           navigate(foundCommand.route);\r\n-//           speak(\r\n-//             `Navigating to ${\r\n-//               foundCommand.routeDescription || \"requested page\"\r\n-//             }.`\r\n-//           );\r\n-//         } else {\r\n-//           speak(\r\n-//             `You are already on the ${\r\n-//               foundCommand.routeDescription || \"requested page\"\r\n-//             }.`\r\n-//           );\r\n-//         }\r\n-//       } else if (foundCommand.action) {\r\n-//         foundCommand.action();\r\n-//       }\r\n-\r\n-//       if (foundCommand.response) {\r\n-//         speak(foundCommand.response);\r\n-//       }\r\n-//     } else {\r\n-//       console.log(\"No command found.\");\r\n-//       speak(\"I'm not sure how to respond to that.\");\r\n-//     }\r\n-//   };\r\n-\r\n-//   const commands = [\r\n-//     {\r\n-//       utterance: \"Hello who are you ?\",\r\n-\r\n-//       response:\r\n-//         \"Hi! This is Brane! your Voice bot from Brane Education How can I Assist you Today ?\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"Hello\",\r\n-\r\n-//       response: \"Hi! How can I assist you today?\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"hello\",\r\n-\r\n-//       response: \"Hi! How can I assist you today?\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"Hi.\",\r\n-\r\n-//       response: \"Hello! How can I assist you today?\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"Hey there\",\r\n-\r\n-//       response: \"Hi! How can I assist you today?\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"Good morning Brane.\",\r\n-\r\n-//       response: \"Hey Hiii! Good morning  ! How can I help you?\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"Good afternoon Brane.\",\r\n-\r\n-//       response: \"Hey Hiii! Good after noon ! How can I help you?\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"Good evening Brane.\",\r\n-\r\n-//       response: \"Hey Hiii! Good evening ! How can I help you?\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"can you please take me to login page\",\r\n-//       route: \"/login\",\r\n-//       routeDescription: \"login page\",\r\n-//       response: \"Navigating to the login page.\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"go to login page\",\r\n-//       route: \"/login\",\r\n-//       routeDescription: \"login page\",\r\n-//       response: \"Navigating to the login page.\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"please take me to login page\",\r\n-//       route: \"/login\",\r\n-//       routeDescription: \"login page\",\r\n-//       response: \"Navigating to the login page.\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"Go to login page\",\r\n-//       route: \"/login\",\r\n-//       routeDescription: \"login page\",\r\n-//       response: \"Navigating to the login page.\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"open login page\",\r\n-//       route: \"/login\",\r\n-//       routeDescription: \"login page\",\r\n-//       response: \"Navigating to the login page.\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"can you please take me to signup page\",\r\n-//       route: \"/signup\",\r\n-//       routeDescription: \"signup page\",\r\n-//       response: \"Navigating to the signup page.\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"take me to signup page\",\r\n-//       route: \"/signup\",\r\n-//       routeDescription: \"signup page\",\r\n-//       response: \"Navigating to the signup page.\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"Go to signup page\",\r\n-//       route: \"/signup\",\r\n-//       routeDescription: \"signup page\",\r\n-//       response: \"Navigating to the signup page.\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"open signup page\",\r\n-//       route: \"/signup\",\r\n-//       routeDescription: \"signup page\",\r\n-//       response: \"Navigating to the signup page.\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"what are platform features\",\r\n-\r\n-//       response:\r\n-//         \"Dashboard, Dynamic time table, Learning Networks, Little Masters, Video Based Dictionary, General Search.\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"Features of platform\",\r\n-\r\n-//       response:\r\n-//         \"Dashboard, Dynamic time table, Learning Networks, Little Masters, Video Based Dictionary, General Search.\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"What does the platform offer\",\r\n-\r\n-//       response:\r\n-//         \"Dashboard, Dynamic time table, Learning Networks, Little Masters, Video Based Dictionary, General Search.\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"Say me the features of platform\",\r\n-\r\n-//       response:\r\n-//         \"Dashboard, Dynamic time table, Learning Networks, Little Masters, Video Based Dictionary, General Search.\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"Say me the services of platform\",\r\n-\r\n-//       response:\r\n-//         \"Dashboard, Dynamic time table, Learning Networks, Little Masters, Video Based Dictionary, General Search.\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"tell me the services offered by the platform\",\r\n-\r\n-//       response:\r\n-//         \"Dashboard, Dynamic time table, Learning Networks, Little Masters, Video Based Dictionary, General Search.\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"explain platform services\",\r\n-\r\n-//       response:\r\n-//         \"Dashboard, Dynamic time table, Learning Networks, Little Masters, Video Based Dictionary, General Search.\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"Give me the Parent voice of Julia Harris\",\r\n-\r\n-//       response:\r\n-//         \"Brane education has helped my son a lot in his studies. He improved a lot in his studies and is now able to score good marks in his exams\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"Play today's motivational video\",\r\n-\r\n-//       response: \"I am playing the video\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"Play today's video\",\r\n-\r\n-//       response: \"I am playing Motivational video\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"Leaders Voice\",\r\n-\r\n-//       response:\r\n-//         \"This Voice-interactive AI Platform is a game Changer. It revolutionizes education.\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"Curriculum Supported by Brane Education\",\r\n-\r\n-//       response:\r\n-//         \"we support multiple Boards let me say few Telangana State Board Andhra Pradesh Board Maharashtra Board Assam Board\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"Boards supported by the platform\",\r\n-\r\n-//       response:\r\n-//         \"we support multiple Boards let me say few Telangana State Board Andhra Pradesh Board Maharashtra Board Assam Board\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"Curriculum\",\r\n-\r\n-//       response:\r\n-//         \"we support multiple Boards let me say few Telangana State Board Andhra Pradesh Board Maharashtra Board Assam Board\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"Go to landing page\",\r\n-\r\n-//       response: \"Okay, I am taking you to the landing page.\",\r\n-\r\n-//       route: \"/childpage\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"take me to landing page\",\r\n-\r\n-//       response: \"Okay, I am taking you to the landing page.\",\r\n-\r\n-//       route: \"/childpage\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"move to landing page\",\r\n-\r\n-//       response: \"Okay, I am taking you to the landing page.\",\r\n-\r\n-//       route: \"/childpage\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"roll back to landing page\",\r\n-\r\n-//       response: \"Okay, I am taking you to the landing page.\",\r\n-\r\n-//       route: \"/childpage\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"move to landing page\",\r\n-\r\n-//       response: \"Okay, I am taking you to the landing page.\",\r\n-\r\n-//       route: \"/childpage\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"what is today's quote\",\r\n-\r\n-//       response:\r\n-//         \"Determination is the power that sees us through all our frustration and obstacles. It helps in building our willpower which is the very basis of success.\",\r\n-\r\n-//       // route: \"/childpage\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"Today's Inspirational quote\",\r\n-\r\n-//       response:\r\n-//         \"Determination is the power that sees us through all our frustration and obstacles. It helps in building our willpower which is the very basis of success.\",\r\n-\r\n-//       // route: \"/childpage\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"say me today's quote\",\r\n-\r\n-//       response:\r\n-//         \"Determination is the power that sees us through all our frustration and obstacles. It helps in building our willpower which is the very basis of success.\",\r\n-\r\n-//       // route: \"/childpage\",\r\n-//     },\r\n-//     {\r\n-//       utterance: \"go back\",\r\n-//       response: \"Going back.\",\r\n-//       action: goBack, // Note the use of an action property\r\n-//     },\r\n-//     {\r\n-//       utterance: \"go forward\",\r\n-//       response: \"Going forward.\",\r\n-//       action: goForward,\r\n-//     },\r\n-//     {\r\n-//       utterance: \"play video\",\r\n-//       // response: \"Playing video.\",\r\n-//       action: playVideo,\r\n-//     },\r\n-//     {\r\n-//       utterance: \"pause video\",\r\n-//       // response: \"Pausing video.\",\r\n-//       action: pauseVideo,\r\n-//     },\r\n-//     {\r\n-//       utterance: \"start video\",\r\n-//       // response: \"Playing video.\",\r\n-//       action: playVideo,\r\n-//     },\r\n-//     {\r\n-//       utterance: \"stop video\",\r\n-//       // response: \"Playing video.\",\r\n-//       action: pauseVideo,\r\n-//     },\r\n-//     {\r\n-//       utterance: \"scroll up\",\r\n-//       // response: \"Scrolling up.\",\r\n-//       action: scrollUp,\r\n-//     },\r\n-//     {\r\n-//       utterance: \"scroll down\",\r\n-//       // response: \"Scrolling down.\",\r\n-//       action: scrollDown,\r\n-//     },\r\n-//     {\r\n-//       utterance: \"go up\",\r\n-\r\n-//       // response: \"Scrolling up.\",\r\n-//       action: scrollUp,\r\n-//     },\r\n-//     {\r\n-//       utterance: \"go down\",\r\n-//       // response: \"Scrolling down.\",\r\n-//       action: scrollDown,\r\n-//     },\r\n-//     {\r\n-//       utterance: \"scroll to top\",\r\n-//       action: scrollToTop,\r\n-//     },\r\n-//     {\r\n-//       utterance: \"scroll to bottom\",\r\n-//       action: scrollToBottom,\r\n-//     },\r\n-//   ];\r\n-//   return (\r\n-//     <div className=\"speech-bot-container\">\r\n-//       <div\r\n-//         className={`button-container ${\r\n-//           isListening ? \"voicebotframeactive\" : \"voicebotframe\"\r\n-//         }`}\r\n-//       >\r\n-//         <div onClick={isListening ? stopListening : startListening}>\r\n-//           <iframe\r\n-//             src={\r\n-//               isListening\r\n-//                 ? \"https://lottie.host/?file=a89aca3f-5407-4052-82c3-2048afca7a9f/NpCdWzLSKD.json\"\r\n-//                 : \"https://lottie.host/?file=d2b6cc0e-fe95-4847-85b5-35365fca7e00/vTudpCuPZq.json\"\r\n-//             }\r\n-//             width=\"120\" // Set your desired width\r\n-//             height=\"120\" // Set your desired height\r\n-//             title={isListening ? \"Stop Animation\" : \"Start Animation\"}\r\n-//             className={isListening ? \"voicebotframeactive\" : \"voicebotframe\"}\r\n-//           ></iframe>\r\n-//           {isListening ? (\r\n-//             <div className=\"overlay\" onClick={stopListening}></div>\r\n-//           ) : (\r\n-//             <div className=\"overlay\" onClick={startListening}></div>\r\n-//           )}\r\n-//         </div>\r\n-//       </div>\r\n-//     </div>\r\n-//   );\r\n-// };\r\n-\r\n-// export default VoiceBot;\r\n-\r\n-// All functionalities but messed up\r\n-\r\n-// import React, { useState, useEffect, useRef } from \"react\";\r\n-// import { useNavigate, useLocation } from \"react-router-dom\";\r\n-// import Fuse from \"fuse.js\";\r\n-// import \"./VoiceBot.css\";\r\n-\r\n-// const VoiceBot = ({ videoRef, takeTestRef, goBackRef }) => {\r\n-//   const [isListening, setIsListening] = useState(false);\r\n-//   const [isSpeaking, setIsSpeaking] = useState(false);\r\n-//   const recognition = useRef(null);\r\n-//   const speechSynthesis = useRef(window.speechSynthesis);\r\n-//   const hasGreeted = useRef(false);\r\n-//   const navigate = useNavigate();\r\n-//   const location = useLocation();\r\n-//   const isRecognitionActive = useRef(false);\r\n-\r\n-//   useEffect(() => {\r\n-//     recognition.current = new window.webkitSpeechRecognition();\r\n-//     recognition.current.continuous = true;\r\n-//     recognition.current.interimResults = false;\r\n-//     recognition.current.onresult = onResult;\r\n-//     recognition.current.onend = onRecognitionEnd;\r\n-\r\n-//     return () => {\r\n-//       if (recognition.current) {\r\n-//         recognition.current.abort();\r\n-//       }\r\n-//     };\r\n-//   }, [location.pathname]);\r\n-\r\n-//   const onResult = (event) => {\r\n-//     const resultIndex = event.resultIndex;\r\n-//     const transcript = event.results[resultIndex][0].transcript\r\n-//       .trim()\r\n-//       .toLowerCase();\r\n-\r\n-//     if (event.results[resultIndex].isFinal) {\r\n-//       console.log(`Recognized text: ${transcript}`);\r\n-//       if (transcript.includes(\"brain\")) {\r\n-//         console.log(\"Wake word heard, processing command...\");\r\n-//         handleCommandWithFuse(transcript.replace(\"brain\", \"\"));\r\n-//       }\r\n-//     }\r\n-//   };\r\n-\r\n-//   const startListening = () => {\r\n-//     if (!isRecognitionActive.current) {\r\n-//       setIsListening(true);\r\n-//       recognition.current.start();\r\n-//       isRecognitionActive.current = true;\r\n-//     }\r\n-//   };\r\n-\r\n-//   const stopListening = () => {\r\n-//     if (isRecognitionActive.current) {\r\n-//       setIsListening(false);\r\n-//       recognition.current.stop();\r\n-//       isRecognitionActive.current = false;\r\n-//     }\r\n-//   };\r\n-\r\n-//   const onRecognitionEnd = () => {\r\n-//     isRecognitionActive.current = false;\r\n-//     if (isListening) {\r\n-//       startListening();\r\n-//     }\r\n-//   };\r\n-\r\n-//   const speak = (message) => {\r\n-//     const utterance = new SpeechSynthesisUtterance(message);\r\n-//     utterance.onend = () => {\r\n-//       setIsSpeaking(false);\r\n-//       if (isListening && !isRecognitionActive.current) {\r\n-//         startListening();\r\n-//       }\r\n-//     };\r\n-\r\n-//     setIsSpeaking(true);\r\n-//     if (isRecognitionActive.current) {\r\n-//       stopListening(); // Adjusted to use stopListening\r\n-//     }\r\n-//     speechSynthesis.current.speak(utterance);\r\n-//   };\r\n-\r\n-//   useEffect(() => {\r\n-//     if (isListening && !hasGreeted.current) {\r\n-//       speak(\"Hello, I'm Brane. How can I assist you today?\");\r\n-//       hasGreeted.current = true;\r\n-//     }\r\n-//   }, [isListening]);\r\n-\r\n-//   const goBack = () => {\r\n-//     if (window.history.length > 1) {\r\n-//       navigate(-1);\r\n-//     } else {\r\n-//       speak(\"Can't go back any further.\");\r\n-//     }\r\n-//   };\r\n-\r\n-//   const goForward = () => {\r\n-//     // Unfortunately, there's no direct way to check if you can go forward in the history.\r\n-//     // You might need to manage this state manually based on user navigation.\r\n-//     navigate(1);\r\n-//   };\r\n-\r\n-//   const playVideo = () => {\r\n-//     if (videoRef.current && !videoRef.current.paused) {\r\n-//       speak(\"Video is already playing.\");\r\n-//     } else if (videoRef.current) {\r\n-//       videoRef.current.play();\r\n-//       speak(\"Playing video.\");\r\n-//     } else {\r\n-//       speak(\"No video to play.\");\r\n-//     }\r\n-//   };\r\n-\r\n-//   const pauseVideo = () => {\r\n-//     if (videoRef.current && videoRef.current.paused) {\r\n-//       speak(\"Video is already paused.\");\r\n-//     } else if (videoRef.current) {\r\n-//       videoRef.current.pause();\r\n-//       speak(\"Video paused.\");\r\n-//     } else {\r\n-//       speak(\"No video to pause.\");\r\n-//     }\r\n-//   };\r\n-\r\n-//   const scrollAmount = window.innerHeight * 0.82;\r\n-\r\n-//   const scrollUp = () => {\r\n-//     if (window.pageYOffset === 0) {\r\n-//       speak(\"Already at the top of the page.\");\r\n-//     } else {\r\n-//       window.scrollBy(0, -scrollAmount);\r\n-//       speak(\"Scrolled up.\");\r\n-//     }\r\n-//   };\r\n-\r\n-//   const scrollDown = () => {\r\n-//     const maxScrollTop =\r\n-//       document.documentElement.scrollHeight - window.innerHeight;\r\n-//     if (window.pageYOffset >= maxScrollTop) {\r\n-//       speak(\"Already at the bottom of the page.\");\r\n-//     } else {\r\n-//       window.scrollBy(0, scrollAmount);\r\n-//       speak(\"Scrolled down.\");\r\n-//     }\r\n-//   };\r\n-\r\n-//   const scrollToTop = () => {\r\n-//     if (window.pageYOffset === 0) {\r\n-//       speak(\"Already at the top of the page.\");\r\n-//     } else {\r\n-//       window.scrollTo(0, 0);\r\n-//       speak(\"Scrolled to the top of the page.\");\r\n-//     }\r\n-//   };\r\n-\r\n-//   const scrollToBottom = () => {\r\n-//     const maxScrollTop =\r\n-//       document.documentElement.scrollHeight - window.innerHeight;\r\n-//     if (window.pageYOffset >= maxScrollTop) {\r\n-//       speak(\"Already at the bottom of the page.\");\r\n-//     } else {\r\n-//       window.scrollTo(0, document.body.scrollHeight);\r\n-//       speak(\"Scrolled to the bottom of the page.\");\r\n-//     }\r\n-//   };\r\n-\r\n-//   // const speak = (message) => {\r\n-//   //   const utterance = new SpeechSynthesisUtterance(message);\r\n-//   //   utterance.onend = () => {\r\n-//   //     setIsSpeaking(false);\r\n-//   //     console.log(\"Speaking ended.\");\r\n-//   //     // Only restart recognition if we're still supposed to be listening\r\n-//   //     // if (isListening) {\r\n-//   //     //   if (restartRecognitionTimeout.current) {\r\n-//   //     //     clearTimeout(restartRecognitionTimeout.current);\r\n-//   //     //   }\r\n-//   //     //   restartRecognitionTimeout.current = setTimeout(() => {\r\n-//   //     //     console.log(\"Recognition restarted.\");\r\n-//   //     //     recognition.current.start();\r\n-//   //     //   }, 100); // Delay to prevent immediate restart\r\n-//   //     // }\r\n-//   //     if (isListening && !recognition.current.starting) { // Check the flag before restarting\r\n-//   //       recognition.current.starting = true; // Set the flag when starting recognition\r\n-//   //       recognition.current.start();\r\n-//   //     }\r\n-//   //   };\r\n-\r\n-//   //   setIsSpeaking(true);\r\n-//   //   console.log(\"Speaking started.\");\r\n-//   //   recognition.current.stop(); // Stop recognition when the bot starts speaking\r\n-//   //   speechSynthesis.current.speak(utterance);\r\n-//   // };\r\n-\r\n-//   // const onRecognitionEnd = () => {\r\n-//   //   console.log(\"Recognition ended.\");\r\n-//   //   setIsRecognitionActive(false); // Update state when recognition ends\r\n-//   //   recognition.current.starting = false; // Reset the flag when recognition ends\r\n-//   //   // We now check if the recognition is already running before starting it again\r\n-//   //   if (isListening && !isSpeaking && !recognition.current?.starting) {\r\n-//   //     console.log(\"Restarting recognition.\");\r\n-//   //     recognition.current.start();\r\n-//   //   }\r\n-//   // };\r\n-\r\n-//   // useEffect(() => {\r\n-//   //   if (isListening && !hasGreeted.current) {\r\n-//   //     speak(\"Hello, I'm Brane. How can I assist you today?\");\r\n-//   //     hasGreeted.current = true;\r\n-//   //   } else if (isListening && !isSpeaking) {\r\n-//   //     recognition.current.start();\r\n-//   //   }\r\n-//   // }, [isListening, isSpeaking]);\r\n-\r\n-//   // const startListening = () => {\r\n-//   //   console.log(\"Attempting to start listening.\");\r\n-//   //   if (recognition.current && !recognition.current.starting) {\r\n-//   //     setIsListening(true);\r\n-//   //     recognition.current.starting = true; // Set the flag when starting recognition\r\n-//   //     recognition.current.start();\r\n-//   //     console.log(\"Listening started.\");\r\n-//   //   }\r\n-//   // };\r\n-\r\n-//   // const stopListening = () => {\r\n-//   //   console.log(\"Stopping listening.\");\r\n-\r\n-//   //   setIsListening(false);\r\n-//   //   recognition.current.stop();\r\n-//   //   if (speechSynthesis.current.speaking) {\r\n-//   //     speechSynthesis.current.cancel();\r\n-//   //   }\r\n-//   //   if (restartRecognitionTimeout.current) {\r\n-//   //     clearTimeout(restartRecognitionTimeout.current);\r\n-//   //   }\r\n-//   //   console.log(\"Listening stopped.\");\r\n-//   // };\r\n-//   // Handle start and stop listening logic\r\n-\r\n-//   useEffect(() => {\r\n-//     if (isListening && !hasGreeted.current) {\r\n-//       speak(\"Hello, I'm Brane. How can I assist you today?\");\r\n-//       hasGreeted.current = true;\r\n-//     }\r\n-//   }, [isListening]);\r\n-\r\n-//   // const handleCommandWithFuse = (command) => {\r\n-//   //   const fuse = new Fuse(commands, { keys: [\"utterance\"], threshold: 0.4 });\r\n-//   //   const results = fuse.search(command);\r\n-//   //   const foundCommand = results.length ? results[0].item : null;\r\n-\r\n-//   //   if (foundCommand) {\r\n-//   //     console.log(\"Command found:\", foundCommand.utterance);\r\n-//   //     speak(foundCommand.response);\r\n-//   //     if (foundCommand.route) {\r\n-//   //       navigate(foundCommand.route); // Navigate to the route specified in the command\r\n-//   //     }\r\n-//   //   } else {\r\n-//   //     console.log(\"No command found.\");\r\n-//   //     speak(\"I'm not sure how to respond to that.\");\r\n-//   //   }\r\n-//   // };\r\n-\r\n-//   const handleCommandWithFuse = (command) => {\r\n-//     const fuse = new Fuse(commands, { keys: [\"utterance\"], threshold: 0.4 });\r\n-//     const results = fuse.search(command);\r\n-//     const foundCommand = results.length ? results[0].item : null;\r\n-\r\n-//     if (foundCommand) {\r\n-//       console.log(\"Command found:\", foundCommand.utterance);\r\n-\r\n-//       if (foundCommand.action) {\r\n-//         foundCommand.action();\r\n-//       } else if (foundCommand.route) {\r\n-//         navigate(foundCommand.route);\r\n-//       }\r\n-\r\n-//       if (foundCommand.response) {\r\n-//         speak(foundCommand.response);\r\n-//       }\r\n-//     } else {\r\n-//       console.log(\"No command found.\");\r\n-//       speak(\"I'm not sure how to respond to that.\");\r\n-//     }\r\n-//   };\r\n-\r\n-//   const commands = [\r\n-//     {\r\n-//       utterance: \"Hello who are you ?\",\r\n-\r\n-//       response:\r\n-//         \"Hi! This is Brane! your Voice bot from Brane Education How can I Assist you Today ?\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"Hello\",\r\n-\r\n-//       response: \"Hi! How can I assist you today?\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"hello\",\r\n-\r\n-//       response: \"Hi! How can I assist you today?\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"Hi.\",\r\n-\r\n-//       response: \"Hello! How can I assist you today?\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"Hey there\",\r\n-\r\n-//       response: \"Hi! How can I assist you today?\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"Good morning Brane.\",\r\n-\r\n-//       response: \"Hey Hiii! Good morning  ! How can I help you?\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"Good afternoon Brane.\",\r\n-\r\n-//       response: \"Hey Hiii! Good after noon ! How can I help you?\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"Good evening Brane.\",\r\n-\r\n-//       response: \"Hey Hiii! Good evening ! How can I help you?\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"can you please take me to login page\",\r\n-//       route: \"/login\",\r\n-//       routeDescription: \"login page\",\r\n-//       response: \"Navigating to the login page.\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"go to login page\",\r\n-//       route: \"/login\",\r\n-//       routeDescription: \"login page\",\r\n-//       response: \"Navigating to the login page.\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"please take me to login page\",\r\n-//       route: \"/login\",\r\n-//       routeDescription: \"login page\",\r\n-//       response: \"Navigating to the login page.\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"Go to login page\",\r\n-//       route: \"/login\",\r\n-//       routeDescription: \"login page\",\r\n-//       response: \"Navigating to the login page.\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"open login page\",\r\n-//       route: \"/login\",\r\n-//       routeDescription: \"login page\",\r\n-//       response: \"Navigating to the login page.\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"can you please take me to signup page\",\r\n-//       route: \"/signup\",\r\n-//       routeDescription: \"signup page\",\r\n-//       response: \"Navigating to the signup page.\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"take me to signup page\",\r\n-//       route: \"/signup\",\r\n-//       routeDescription: \"signup page\",\r\n-//       response: \"Navigating to the signup page.\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"Go to signup page\",\r\n-//       route: \"/signup\",\r\n-//       routeDescription: \"signup page\",\r\n-//       response: \"Navigating to the signup page.\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"open signup page\",\r\n-//       route: \"/signup\",\r\n-//       routeDescription: \"signup page\",\r\n-//       response: \"Navigating to the signup page.\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"what are platform features\",\r\n-\r\n-//       response:\r\n-//         \"Dashboard, Dynamic time table, Learning Networks, Little Masters, Video Based Dictionary, General Search.\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"Features of platform\",\r\n-\r\n-//       response:\r\n-//         \"Dashboard, Dynamic time table, Learning Networks, Little Masters, Video Based Dictionary, General Search.\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"What does the platform offer\",\r\n-\r\n-//       response:\r\n-//         \"Dashboard, Dynamic time table, Learning Networks, Little Masters, Video Based Dictionary, General Search.\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"Say me the features of platform\",\r\n-\r\n-//       response:\r\n-//         \"Dashboard, Dynamic time table, Learning Networks, Little Masters, Video Based Dictionary, General Search.\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"Say me the services of platform\",\r\n-\r\n-//       response:\r\n-//         \"Dashboard, Dynamic time table, Learning Networks, Little Masters, Video Based Dictionary, General Search.\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"tell me the services offered by the platform\",\r\n-\r\n-//       response:\r\n-//         \"Dashboard, Dynamic time table, Learning Networks, Little Masters, Video Based Dictionary, General Search.\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"explain platform services\",\r\n-\r\n-//       response:\r\n-//         \"Dashboard, Dynamic time table, Learning Networks, Little Masters, Video Based Dictionary, General Search.\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"Give me the Parent voice of Julia Harris\",\r\n-\r\n-//       response:\r\n-//         \"Brane education has helped my son a lot in his studies. He improved a lot in his studies and is now able to score good marks in his exams\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"Play today's motivational video\",\r\n-\r\n-//       response: \"I am playing the video\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"Play today's video\",\r\n-\r\n-//       response: \"I am playing Motivational video\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"Leaders Voice\",\r\n-\r\n-//       response:\r\n-//         \"This Voice-interactive AI Platform is a game Changer. It revolutionizes education.\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"Curriculum Supported by Brane Education\",\r\n-\r\n-//       response:\r\n-//         \"we support multiple Boards let me say few Telangana State Board Andhra Pradesh Board Maharashtra Board Assam Board\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"Boards supported by the platform\",\r\n-\r\n-//       response:\r\n-//         \"we support multiple Boards let me say few Telangana State Board Andhra Pradesh Board Maharashtra Board Assam Board\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"Curriculum\",\r\n-\r\n-//       response:\r\n-//         \"we support multiple Boards let me say few Telangana State Board Andhra Pradesh Board Maharashtra Board Assam Board\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"Go to landing page\",\r\n-\r\n-//       response: \"Okay, I am taking you to the landing page.\",\r\n-\r\n-//       route: \"/childpage\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"take me to landing page\",\r\n-\r\n-//       response: \"Okay, I am taking you to the landing page.\",\r\n-\r\n-//       route: \"/childpage\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"move to landing page\",\r\n-\r\n-//       response: \"Okay, I am taking you to the landing page.\",\r\n-\r\n-//       route: \"/childpage\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"roll back to landing page\",\r\n-\r\n-//       response: \"Okay, I am taking you to the landing page.\",\r\n-\r\n-//       route: \"/childpage\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"move to landing page\",\r\n-\r\n-//       response: \"Okay, I am taking you to the landing page.\",\r\n-\r\n-//       route: \"/childpage\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"what is today's quote\",\r\n-\r\n-//       response:\r\n-//         \"Determination is the power that sees us through all our frustration and obstacles. It helps in building our willpower which is the very basis of success.\",\r\n-\r\n-//       // route: \"/childpage\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"Today's Inspirational quote\",\r\n-\r\n-//       response:\r\n-//         \"Determination is the power that sees us through all our frustration and obstacles. It helps in building our willpower which is the very basis of success.\",\r\n-\r\n-//       // route: \"/childpage\",\r\n-//     },\r\n-\r\n-//     {\r\n-//       utterance: \"say me today's quote\",\r\n-\r\n-//       response:\r\n-//         \"Determination is the power that sees us through all our frustration and obstacles. It helps in building our willpower which is the very basis of success.\",\r\n-\r\n-//       // route: \"/childpage\",\r\n-//     },\r\n-//     {\r\n-//       utterance: \"go back\",\r\n-//       response: \"Going back.\",\r\n-//       action: goBack, // Note the use of an action property\r\n-//     },\r\n-//     {\r\n-//       utterance: \"go forward\",\r\n-//       response: \"Going forward.\",\r\n-//       action: goForward,\r\n-//     },\r\n-//     {\r\n-//       utterance: \"play video\",\r\n-//       // response: \"Playing video.\",\r\n-//       action: playVideo,\r\n-//     },\r\n-//     {\r\n-//       utterance: \"pause video\",\r\n-//       // response: \"Pausing video.\",\r\n-//       action: pauseVideo,\r\n-//     },\r\n-//     {\r\n-//       utterance: \"start video\",\r\n-//       // response: \"Playing video.\",\r\n-//       action: playVideo,\r\n-//     },\r\n-//     {\r\n-//       utterance: \"stop video\",\r\n-//       // response: \"Playing video.\",\r\n-//       action: pauseVideo,\r\n-//     },\r\n-//     {\r\n-//       utterance: \"scroll up\",\r\n-//       // response: \"Scrolling up.\",\r\n-//       action: scrollUp,\r\n-//     },\r\n-//     {\r\n-//       utterance: \"scroll down\",\r\n-//       // response: \"Scrolling down.\",\r\n-//       action: scrollDown,\r\n-//     },\r\n-//     {\r\n-//       utterance: \"go up\",\r\n-\r\n-//       // response: \"Scrolling up.\",\r\n-//       action: scrollUp,\r\n-//     },\r\n-//     {\r\n-//       utterance: \"go down\",\r\n-//       // response: \"Scrolling down.\",\r\n-//       action: scrollDown,\r\n-//     },\r\n-//     {\r\n-//       utterance: \"scroll to top\",\r\n-//       action: scrollToTop,\r\n-//     },\r\n-//     {\r\n-//       utterance: \"scroll to bottom\",\r\n-//       action: scrollToBottom,\r\n-//     },\r\n-//     {\r\n-//       utterance: \"go back\",\r\n-//       action: goBackRef?.current?.click, // Use goBackRef directly\r\n-//       response: \"Going back.\",\r\n-//     },\r\n-//     {\r\n-//       utterance: \"take test\",\r\n-//       action: takeTestRef?.current?.click, // Use takeTestRef directly\r\n-//       response: \"Starting the test.\",\r\n-//     },\r\n-//   ];\r\n-//   return (\r\n-//     <div className=\"speech-bot-container\">\r\n-//       <div\r\n-//         className={`button-container ${\r\n-//           isListening ? \"voicebotframeactive\" : \"voicebotframe\"\r\n-//         }`}\r\n-//       >\r\n-//         <div onClick={isListening ? stopListening : startListening}>\r\n-//           <iframe\r\n-//             src={\r\n-//               isListening\r\n-//                 ? \"https://lottie.host/?file=a89aca3f-5407-4052-82c3-2048afca7a9f/NpCdWzLSKD.json\"\r\n-//                 : \"https://lottie.host/?file=d2b6cc0e-fe95-4847-85b5-35365fca7e00/vTudpCuPZq.json\"\r\n-//             }\r\n-//             width=\"120\" // Set your desired width\r\n-//             height=\"120\" // Set your desired height\r\n-//             title={isListening ? \"Stop Animation\" : \"Start Animation\"}\r\n-//             className={isListening ? \"voicebotframeactive\" : \"voicebotframe\"}\r\n-//           ></iframe>\r\n-//           {isListening ? (\r\n-//             <div className=\"overlay\" onClick={stopListening}></div>\r\n-//           ) : (\r\n-//             <div className=\"overlay\" onClick={startListening}></div>\r\n-//           )}\r\n-//         </div>\r\n-//       </div>\r\n-//     </div>\r\n-//   );\r\n-// };\r\n-\r\n-// export default VoiceBot;\r\n-import React, { useState, useEffect, useRef } from \"react\";\r\n-import { useNavigate, useLocation } from \"react-router-dom\";\r\n-import Fuse from \"fuse.js\";\r\n-import \"./VoiceBot.css\";\r\n-import chatbotimage from \"../../assets/chatbotgif.gif\";\r\n-\r\n-const VoiceBot = ({ videoRefs,setMobileNumber,setPin,triggerLogin, setTriggerRecordAudio }) => {\r\n-  const [isListening, setIsListening] = useState(false);\r\n-  const [isSpeaking, setIsSpeaking] = useState(false);\r\n-  const recognition = useRef(null);\r\n-  const speechSynthesis = useRef(window.speechSynthesis);\r\n-  const [hasGreeted, setHasGreeted] = useState(false);\r\n-  const navigate = useNavigate();\r\n-\r\n-  // Initialize speech recognition\r\n-  useEffect(() => {\r\n-    recognition.current = new window.webkitSpeechRecognition();\r\n-    recognition.current.continuous = true;\r\n-    recognition.current.interimResults = false;\r\n-    recognition.current.onresult = onResult;\r\n-    recognition.current.onend = onRecognitionEnd;\r\n-    recognition.current.starting = false;\r\n-\r\n-    recognition.current.onerror = (event) => {\r\n-      console.error(\"Recognition error:\", event.error);\r\n-      if (isListening && !isSpeaking) {\r\n-        restartRecognition();\r\n-      }\r\n-    };\r\n-\r\n-    return () => {\r\n-      if (recognition.current) {\r\n-        recognition.current.abort();\r\n-      }\r\n-    };\r\n-  }, []);\r\n-\r\n-  useEffect(() => {\r\n-    const checkRecognition = () => {\r\n-      if (isListening && !isSpeaking && !recognition.current.starting) {\r\n-        console.log(\"Restarting recognition because it's not active.\");\r\n-        recognition.current.starting = true;\r\n-        recognition.current.start();\r\n-        console.log(\"Restarted recognition.\");\r\n-      }\r\n-    };\r\n-\r\n-    const recognitionCheckInterval = setInterval(checkRecognition, 500); // Check every .5 second\r\n-\r\n-    return () => {\r\n-      clearInterval(recognitionCheckInterval);\r\n-    };\r\n-  }, [isListening, isSpeaking]);\r\n-\r\n-  const historyStack = useRef([]);\r\n-\r\n-  useEffect(() => {\r\n-    return () => {\r\n-      // Clean up the listener when the component unmounts\r\n-      window.removeEventListener(\"popstate\", handlePopState);\r\n-    };\r\n-  }, []);\r\n-\r\n-  const handlePopState = () => {\r\n-    // This needs to handle both back and forward browser actions\r\n-    // Use some logic to determine whether it's a back or forward action\r\n-    // For simplicity, assume it's always back\r\n-    historyStack.current.pop();\r\n-    forwardStack.current.length = 0; // Clear forward stack on manual navigation\r\n-  };\r\n-\r\n-  // Listen to popstate events to update the history stack\r\n-  useEffect(() => {\r\n-    window.addEventListener(\"popstate\", handlePopState);\r\n-  }, []);\r\n-\r\n-  const forwardStack = useRef([]);\r\n-\r\n-  const goBack = () => {\r\n-    if (window.history.state && window.history.state.idx > 0) {\r\n-      window.history.back();\r\n-      speak(\"Going back\");\r\n-    } else {\r\n-      speak(\"Can't go back any further.\");\r\n-    }\r\n-  };\r\n-\r\n-  const goForward = () => {\r\n-    if (\r\n-      window.history.state &&\r\n-      window.history.state.idx < window.history.length - 1\r\n-    ) {\r\n-      window.history.forward();\r\n-      speak(\"Going forward\");\r\n-    } else {\r\n-      speak(\"No forward history available.\");\r\n-    }\r\n-  };\r\n-\r\n-  const scrollAmount = window.innerHeight * 0.82;\r\n-\r\n-  const scrollUp = () => {\r\n-    if (window.pageYOffset === 0) {\r\n-      speak(\"Already at the top of the page.\");\r\n-    } else {\r\n-      window.scrollBy(0, -scrollAmount);\r\n-      speak(\"Scrolled up.\");\r\n-    }\r\n-  };\r\n-\r\n-  const scrollDown = () => {\r\n-    const maxScrollTop =\r\n-      document.documentElement.scrollHeight - window.innerHeight;\r\n-    if (window.pageYOffset >= maxScrollTop) {\r\n-      speak(\"Already at the bottom of the page.\");\r\n-    } else {\r\n-      window.scrollBy(0, scrollAmount);\r\n-      speak(\"Scrolled down.\");\r\n-    }\r\n-  };\r\n-\r\n-  const scrollToTop = () => {\r\n-    if (window.pageYOffset === 0) {\r\n-      speak(\"Already at the top of the page.\");\r\n-    } else {\r\n-      window.scrollTo(0, 0);\r\n-      speak(\"Scrolled to the top of the page.\");\r\n-    }\r\n-  };\r\n-\r\n-  const scrollToBottom = () => {\r\n-    const maxScrollTop =\r\n-      document.documentElement.scrollHeight - window.innerHeight;\r\n-    if (window.pageYOffset >= maxScrollTop) {\r\n-      speak(\"Already at the bottom of the page.\");\r\n-    } else {\r\n-      window.scrollTo(0, document.body.scrollHeight);\r\n-      speak(\"Scrolled to the bottom of the page.\");\r\n-    }\r\n-  };\r\n-\r\n-  const controlVideo = (videoId, action) => {\r\n-    const videoRef = videoRefs.current.get(videoId);\r\n-    if (videoRef && videoRef.current) {\r\n-      switch (action) {\r\n-        case \"play\":\r\n-          videoRef.current.play();\r\n-          break;\r\n-        case \"pause\":\r\n-          videoRef.current.pause();\r\n-          break;\r\n-        case \"mute\":\r\n-          videoRef.current.muted = true;\r\n-          break;\r\n-        case \"unmute\":\r\n-          videoRef.current.muted = false;\r\n-          break;\r\n-        case \"fullscreen\":\r\n-          if (videoRef.current.requestFullscreen) {\r\n-            videoRef.current.requestFullscreen();\r\n-          } else if (videoRef.current.webkitRequestFullscreen) {\r\n-            // Safari\r\n-            videoRef.current.webkitRequestFullscreen();\r\n-          } else if (videoRef.current.msRequestFullscreen) {\r\n-            // IE11\r\n-            videoRef.current.msRequestFullscreen();\r\n-          }\r\n-          break;\r\n-        case \"exitFullscreen\":\r\n-          if (document.exitFullscreen) {\r\n-            document.exitFullscreen();\r\n-          } else if (document.webkitExitFullscreen) {\r\n-            // Safari\r\n-            document.webkitExitFullscreen();\r\n-          } else if (document.msExitFullscreen) {\r\n-            // IE11\r\n-            document.msExitFullscreen();\r\n-          }\r\n-          break;\r\n-        case \"increaseVolume\":\r\n-          if (videoRef.current.volume < 1) {\r\n-            videoRef.current.volume = Math.min(\r\n-              1,\r\n-              videoRef.current.volume + 0.1\r\n-            );\r\n-          }\r\n-          break;\r\n-        case \"decreaseVolume\":\r\n-          if (videoRef.current.volume > 0) {\r\n-            videoRef.current.volume = Math.max(\r\n-              0,\r\n-              videoRef.current.volume - 0.1\r\n-            );\r\n-          }\r\n-          break;\r\n-        // Add other cases as needed\r\n-      }\r\n-      speak(\r\n-        `${\r\n-          action.charAt(0).toUpperCase() +\r\n-          action\r\n-            .slice(1)\r\n-            .replace(/([A-Z])/g, \" $1\")\r\n-            .toLowerCase()\r\n-        }ing video.`\r\n-      );\r\n-    } else {\r\n-      speak(`Video not found.`);\r\n-    }\r\n-  };\r\n-\r\n-  const speak = (message) => {\r\n-    const utterance = new SpeechSynthesisUtterance(message);\r\n-    utterance.onend = () => {\r\n-      setIsSpeaking(false);\r\n-      // Restart recognition after speaking has ended\r\n-      if (isListening) {\r\n-        restartRecognition();\r\n-      }\r\n-    };\r\n-\r\n-    setIsSpeaking(true);\r\n-    // Stop recognition when the bot starts speaking\r\n-    if (recognition.current) {\r\n-      recognition.current.abort();\r\n-    }\r\n-    speechSynthesis.current.speak(utterance);\r\n-  };\r\n-\r\n-  const restartRecognition = () => {\r\n-    // Check if recognition is not already started and if the bot is set to listen\r\n-    if (\r\n-      recognition.current &&\r\n-      !recognition.current.starting &&\r\n-      isListening &&\r\n-      !isSpeaking\r\n-    ) {\r\n-      recognition.current.abort(); // Ensure any ongoing recognition is stopped\r\n-      recognition.current.starting = true;\r\n-      recognition.current.start();\r\n-    }\r\n-  };\r\n-\r\n-  // Restart recognition when bot finishes speaking and isListening is true\r\n-  useEffect(() => {\r\n-    if (!isSpeaking && isListening) {\r\n-      restartRecognition();\r\n-    }\r\n-  }, [isSpeaking, isListening]);\r\n-\r\n-  const onResult = (event) => {\r\n-    const resultIndex = event.resultIndex;\r\n-    const transcript = event.results[resultIndex][0].transcript\r\n-      .trim()\r\n-      .toLowerCase();\r\n-\r\n-    if (event.results[resultIndex].isFinal) {\r\n-      console.log(`Recognized text: ${transcript}`);\r\n-      if (transcript.includes(\"brain\")) {\r\n-        console.log(\"Wake word heard, processing command...\");\r\n-        handleCommandWithFuse(transcript.replace(\"brain\", \"\"));\r\n-      }\r\n-    }\r\n-  };\r\n-\r\n-  const onRecognitionEnd = () => {\r\n-    recognition.current.starting = false;\r\n-    if (isListening && !isSpeaking) {\r\n-      restartRecognition();\r\n-    }\r\n-  };\r\n-\r\n-  useEffect(() => {\r\n-    if (isListening && !hasGreeted) {\r\n-      speak(\"Hello, I'm Brane. How can I help you today?\");\r\n-      setHasGreeted(true);\r\n-    }\r\n-  }, [isListening, hasGreeted]);\r\n-\r\n-  // Updated startListening function\r\n-  const startListening = () => {\r\n-    setIsListening(true);\r\n-    if (!recognition.current.starting) {\r\n-      restartRecognition();\r\n-    }\r\n-  };\r\n-\r\n-  // Updated stopListening function\r\n-  const stopListening = () => {\r\n-    setIsListening(false);\r\n-    if (speechSynthesis.current.speaking) {\r\n-      speechSynthesis.current.cancel();\r\n-    }\r\n-    recognition.current.abort();\r\n-  };\r\n-\r\n-  const handleCommandWithFuse = (command) => {\r\n-    const fuse = new Fuse(commands, { keys: [\"utterance\"], threshold: 0.4 });\r\n-    const results = fuse.search(command);\r\n-    const foundCommand = results.length ? results[0].item : null;\r\n-\r\n-    if (foundCommand) {\r\n-      console.log(\"Command text to process:\", command);\r\n-      console.log(\"Command found:\", foundCommand.utterance);\r\n-      if (foundCommand.action) {\r\n-        foundCommand.action(command); // Pass the command text to the action function\r\n-      } else if (foundCommand.route) {\r\n-        navigate(foundCommand.route);\r\n-      }\r\n-\r\n-      // Speak after performing the action or navigation\r\n-      speak(foundCommand.response);\r\n-    } else {\r\n-      console.log(\"No command found.\");\r\n-      speak(\"I'm not sure how to respond to that.\");\r\n-    }\r\n-  };\r\n-\r\n-  const extractNumber = (spokenText) => {\r\n-    if (!spokenText) return null; // Return null if spokenText is undefined or null\r\n-  \r\n-    const sanitizedText = spokenText.replace(/[.,]/g, '');\r\n-    const matches = sanitizedText.match(/\\d+/);\r\n-    return matches ? matches[0] : null;\r\n-  };\r\n-\r\n-\r\n-  const commands = [\r\n-    {\r\n-      utterance: \"Hello who are you ?\",\r\n-\r\n-      response:\r\n-        \"Hi! This is Brane! your Voice bot from Brane Education How can I Assist you Today ?\",\r\n-    },\r\n-\r\n-    {\r\n-      utterance: \"Hello\",\r\n-\r\n-      response: \"Hi! How can I assist you today?\",\r\n-    },\r\n-\r\n-    {\r\n-      utterance: \"hello\",\r\n-\r\n-      response: \"Hi! How can I assist you today?\",\r\n-    },\r\n-\r\n-    {\r\n-      utterance: \"Hi.\",\r\n-\r\n-      response: \"Hello! How can I assist you today?\",\r\n-    },\r\n-\r\n-    {\r\n-      utterance: \"Hey there\",\r\n-\r\n-      response: \"Hi! How can I assist you today?\",\r\n-    },\r\n-\r\n-    {\r\n-      utterance: \"Good morning Brane.\",\r\n-\r\n-      response: \"Hey Hiii! Good morning  ! How can I help you?\",\r\n-    },\r\n-\r\n-    {\r\n-      utterance: \"Good afternoon Brane.\",\r\n-\r\n-      response: \"Hey Hiii! Good after noon ! How can I help you?\",\r\n-    },\r\n-\r\n-    {\r\n-      utterance: \"Good evening Brane.\",\r\n-\r\n-      response: \"Hey Hiii! Good evening ! How can I help you?\",\r\n-    },\r\n-\r\n-    {\r\n-      utterance: \"take me to homepage\",\r\n-\r\n-      route: \"/\",\r\n-\r\n-      response: \"You're in Homepage now\",\r\n-    },\r\n-    {\r\n-      utterance: \"open homepage\",\r\n-\r\n-      route: \"/\",\r\n-\r\n-      response: \"You're in Homepage now\",\r\n-    },\r\n-    {\r\n-      utterance: \"go to homepage\",\r\n-\r\n-      route: \"/\",\r\n-\r\n-      response: \"You're in Homepage now\",\r\n-    },\r\n-    {\r\n-      utterance: \"go back to homepage\",\r\n-\r\n-      route: \"/\",\r\n-\r\n-      response: \"You're in Homepage now\",\r\n-    },\r\n-    {\r\n-      utterance: \"can you please take me to login page\",\r\n-\r\n-      route: \"/login\",\r\n-\r\n-      response: \"Here's the Login Page, Please Login\",\r\n-    },\r\n-\r\n-    {\r\n-      utterance: \"please take me to login page\",\r\n-\r\n-      route: \"/login\",\r\n-\r\n-      response: \"Here's the Login Page, Please Login\",\r\n-    },\r\n-\r\n-    {\r\n-      utterance: \"Go to login page\",\r\n-\r\n-      route: \"/login\",\r\n-\r\n-      response: \"Here's the Login Page, Please Login\",\r\n-    },\r\n-\r\n-    {\r\n-      utterance: \"open login page\",\r\n-\r\n-      route: \"/login\",\r\n-\r\n-      response: \"Here's the Login Page, Please Login\",\r\n-    },\r\n-\r\n-    {\r\n-      utterance: \"can you please take me to signup page\",\r\n-\r\n-      route: \"/signup\",\r\n-\r\n-      response: \"Here's the signup page. Please proceed With Registration.\",\r\n-    },\r\n-\r\n-    {\r\n-      utterance: \"take me to signup page\",\r\n-\r\n-      route: \"/signup\",\r\n-\r\n-      response: \"Here's the signup page. Please proceed With Registration.\",\r\n-    },\r\n-\r\n-    {\r\n-      utterance: \"Go to signup page\",\r\n-\r\n-      route: \"/signup\",\r\n-\r\n-      response: \"Here's the signup page. Please proceed With Registration.\",\r\n-    },\r\n-\r\n-    {\r\n-      utterance: \"open signup page\",\r\n-\r\n-      route: \"/signup\",\r\n-\r\n-      response: \"Here's the signup page. Please proceed With Registration.\",\r\n-    },\r\n-\r\n-    {\r\n-      utterance: \"Go to face id\",\r\n-\r\n-      route: \"/login/faceid\",\r\n-\r\n-      response: \"Here's Face ID Login. Please proceed.\",\r\n-    },\r\n-\r\n-    {\r\n-      utterance: \"Go to face id login\",\r\n-\r\n-      route: \"/login/faceid\",\r\n-\r\n-      response: \"Here's Face ID Login. Please proceed.\",\r\n-    },\r\n-    {\r\n-      utterance: \"Go to face login\",\r\n-\r\n-      route: \"/login/faceid\",\r\n-\r\n-      response: \"Here's Face ID Login. Please proceed.\",\r\n-    },\r\n-\r\n-    {\r\n-      utterance: \"login with face id\",\r\n-\r\n-      route: \"/login/faceid\",\r\n-\r\n-      response: \"Here's Face ID Login. Please proceed.\",\r\n-    },\r\n-\r\n-    {\r\n-      utterance: \"login with face\",\r\n-\r\n-      route: \"/login/faceid\",\r\n-\r\n-      response: \"Here's Face ID Login. Please proceed.\",\r\n-    },\r\n-\r\n-    {\r\n-      utterance: \"i want to login with face\",\r\n-\r\n-      route: \"/login/faceid\",\r\n-\r\n-      response: \"Here's Face ID Login. Please proceed.\",\r\n-    },\r\n-\r\n-    {\r\n-      utterance: \"login with voice\",\r\n-\r\n-      route: \"/login/voiceid\",\r\n-\r\n-      response: \"Here's Voice Login. Please proceed.\",\r\n-    },\r\n-\r\n-    {\r\n-      utterance: \"i want to login with voice\",\r\n-\r\n-      route: \"/login/voiceid\",\r\n-\r\n-      response: \"Here's Voice Login. Please proceed.\",\r\n-    },\r\n-\r\n-    {\r\n-      utterance: \"go to voice login\",\r\n-\r\n-      route: \"/login/voiceid\",\r\n-\r\n-      response: \"Here's Voice Login. Please proceed.\",\r\n-    },\r\n-\r\n-    {\r\n-      utterance: \"login with voice\",\r\n-\r\n-      route: \"/login/voiceid\",\r\n-\r\n-      response: \"Here's Voice Login. Please proceed.\",\r\n-    },\r\n-\r\n-    {\r\n-      utterance: \"login with mobile\",\r\n-\r\n-      route: \"/login/mobile\",\r\n-\r\n-      response: \"Here's Mobile Login. Please proceed.\",\r\n-    },\r\n-\r\n-    {\r\n-      utterance: \"i want to login with mobile\",\r\n-\r\n-      route: \"/login/mobile\",\r\n-\r\n-      response: \"Here's Mobile Login. Please proceed.\",\r\n-    },\r\n-    {\r\n-      utterance: \"go to mobile login\",\r\n-\r\n-      route: \"/login/mobile\",\r\n-\r\n-      response: \"Here's Mobile Login. Please proceed.\",\r\n-    },\r\n-    {\r\n-      utterance: \"go to about page\",\r\n-\r\n-      route: \"/aboutus\",\r\n-\r\n-      response: \"This is About us.\",\r\n-    },\r\n-    {\r\n-      utterance: \"go to about us page\",\r\n-\r\n-      route: \"/aboutus\",\r\n-\r\n-      response: \"This is About us.\",\r\n-    },\r\n-    {\r\n-      utterance: \"open about us page\",\r\n-\r\n-      route: \"/aboutus\",\r\n-\r\n-      response: \"This is About us.\",\r\n-    },\r\n-    {\r\n-      utterance: \"open about page\",\r\n-\r\n-      route: \"/aboutus\",\r\n-\r\n-      response: \"This is About us.\",\r\n-    },\r\n-    {\r\n-      utterance: \"take me to about page\",\r\n-\r\n-      route: \"/aboutus\",\r\n-\r\n-      response: \"This is About us.\",\r\n-    },\r\n-    {\r\n-      utterance: \"take me to about us page\",\r\n-\r\n-      route: \"/aboutus\",\r\n-\r\n-      response: \"This is About us.\",\r\n-    },\r\n-\r\n-    {\r\n-      utterance: \"go to contact page\",\r\n-\r\n-      route: \"/contactus\",\r\n-\r\n-      response: \"You can contact us from here\",\r\n-    },\r\n-    {\r\n-      utterance: \"go to contact us page\",\r\n-\r\n-      route: \"/contactus\",\r\n-\r\n-      response: \"You can contact us from here\",\r\n-    },\r\n-    {\r\n-      utterance: \"open contact us page\",\r\n-\r\n-      route: \"/contactus\",\r\n-\r\n-      response: \"You can contact us from here\",\r\n-    },\r\n-    {\r\n-      utterance: \"open contact page\",\r\n-\r\n-      route: \"/contactus\",\r\n-\r\n-      response: \"You can contact us from here\",\r\n-    },\r\n-    {\r\n-      utterance: \"take me to about page\",\r\n-\r\n-      route: \"/contactus\",\r\n-\r\n-      response: \"You can contact us from here\",\r\n-    },\r\n-    {\r\n-      utterance: \"take me to contact us page\",\r\n-\r\n-      route: \"/contactus\",\r\n-\r\n-      response: \"You can contact us from here\",\r\n-    },\r\n-\r\n-    {\r\n-      utterance: \"what are platform features\",\r\n-\r\n-      response:\r\n-        \"Dashboard, Dynamic time table, Learning Networks, Little Masters, Video Based Dictionary, General Search.\",\r\n-    },\r\n-\r\n-    {\r\n-      utterance: \"Features of platform\",\r\n-\r\n-      response:\r\n-        \"Dashboard, Dynamic time table, Learning Networks, Little Masters, Video Based Dictionary, General Search.\",\r\n-    },\r\n-\r\n-    {\r\n-      utterance: \"What does the platform offer\",\r\n-\r\n-      response:\r\n-        \"Dashboard, Dynamic time table, Learning Networks, Little Masters, Video Based Dictionary, General Search.\",\r\n-    },\r\n-\r\n-    {\r\n-      utterance: \"Say me the features of platform\",\r\n-\r\n-      response:\r\n-        \"Dashboard, Dynamic time table, Learning Networks, Little Masters, Video Based Dictionary, General Search.\",\r\n-    },\r\n-\r\n-    {\r\n-      utterance: \"Say me the services of platform\",\r\n-\r\n-      response:\r\n-        \"Dashboard, Dynamic time table, Learning Networks, Little Masters, Video Based Dictionary, General Search.\",\r\n-    },\r\n-\r\n-    {\r\n-      utterance: \"tell me the services offered by the platform\",\r\n-\r\n-      response:\r\n-        \"Dashboard, Dynamic time table, Learning Networks, Little Masters, Video Based Dictionary, General Search.\",\r\n-    },\r\n-\r\n-    {\r\n-      utterance: \"explain platform services\",\r\n-\r\n-      response:\r\n-        \"Dashboard, Dynamic time table, Learning Networks, Little Masters, Video Based Dictionary, General Search.\",\r\n-    },\r\n-\r\n-    {\r\n-      utterance: \"Give me the Parent voice of Julia Harris\",\r\n-\r\n-      response:\r\n-        \"Brane education has helped my son a lot in his studies. He improved a lot in his studies and is now able to score good marks in his exams\",\r\n-    },\r\n-\r\n-    {\r\n-      utterance: \"Leaders Voice\",\r\n-\r\n-      response:\r\n-        \"This Voice-interactive AI Platform is a game Changer. It revolutionizes education.\",\r\n-    },\r\n-\r\n-    {\r\n-      utterance: \"Curriculum Supported by Brane Education\",\r\n-\r\n-      response:\r\n-        \"we support multiple Boards let me say few Telangana State Board Andhra Pradesh Board Maharashtra Board Assam Board\",\r\n-    },\r\n-\r\n-    {\r\n-      utterance: \"Boards supported by the platform\",\r\n-\r\n-      response:\r\n-        \"we support multiple Boards let me say few Telangana State Board Andhra Pradesh Board Maharashtra Board Assam Board\",\r\n-    },\r\n-\r\n-    {\r\n-      utterance: \"Curriculum\",\r\n-\r\n-      response:\r\n-        \"we support multiple Boards let me say few Telangana State Board Andhra Pradesh Board Maharashtra Board Assam Board\",\r\n-    },\r\n-\r\n-    {\r\n-      utterance: \"what is today's quote\",\r\n-\r\n-      response:\r\n-        \"Determination is the power that sees us through all our frustration and obstacles. It helps in building our willpower which is the very basis of success.\",\r\n-\r\n-      route: \"/childpage\",\r\n-    },\r\n-\r\n-    {\r\n-      utterance: \"Today's Inspirational quote\",\r\n-\r\n-      response:\r\n-        \"Determination is the power that sees us through all our frustration and obstacles. It helps in building our willpower which is the very basis of success.\",\r\n-\r\n-      route: \"/childpage\",\r\n-    },\r\n-\r\n-    {\r\n-      utterance: \"say me today's quote\",\r\n-\r\n-      response:\r\n-        \"Determination is the power that sees us through all our frustration and obstacles. It helps in building our willpower which is the very basis of success.\",\r\n-\r\n-      route: \"/childpage\",\r\n-    },\r\n-    {\r\n-      utterance: \"go back\",\r\n-      response: \"\",\r\n-      action: goBack, // Note the use of an action property\r\n-    },\r\n-    {\r\n-      utterance: \"go forward\",\r\n-      response: \"\",\r\n-      action: goForward,\r\n-    },\r\n-    // {\r\n-    //   utterance: \"play video\",\r\n-    //   // response: \"Playing video.\",\r\n-    //   action: playVideo,\r\n-    // },\r\n-    // {\r\n-    //   utterance: \"pause video\",\r\n-    //   // response: \"Pausing video.\",\r\n-    //   action: pauseVideo,\r\n-    // },\r\n-    // {\r\n-    //   utterance: \"start video\",\r\n-    //   // response: \"Playing video.\",\r\n-    //   action: playVideo,\r\n-    // },\r\n-    // {\r\n-    //   utterance: \"stop video\",\r\n-    //   // response: \"Playing video.\",\r\n-    //   action: pauseVideo,\r\n-    // },\r\n-    {\r\n-      utterance: \"scroll up\",\r\n-      // response: \"Scrolling up.\",\r\n-      action: scrollUp,\r\n-    },\r\n-    {\r\n-      utterance: \"scroll down\",\r\n-      // response: \"Scrolling down.\",\r\n-      action: scrollDown,\r\n-    },\r\n-    {\r\n-      utterance: \"go up\",\r\n-\r\n-      // response: \"Scrolling up.\",\r\n-      action: scrollUp,\r\n-    },\r\n-    {\r\n-      utterance: \"go down\",\r\n-      // response: \"Scrolling down.\",\r\n-      action: scrollDown,\r\n-    },\r\n-    {\r\n-      utterance: \"scroll to top\",\r\n-      action: scrollToTop,\r\n-    },\r\n-    {\r\n-      utterance: \"scroll to bottom\",\r\n-      action: scrollToBottom,\r\n-    },\r\n-    {\r\n-      utterance: \"brane stop\",\r\n-      action: stopListening,\r\n-    },\r\n-    {\r\n-      utterance: \"brane turn off\",\r\n-      action: stopListening,\r\n-    },\r\n-    {\r\n-      utterance: \"brane stop the bot\",\r\n-      action: stopListening,\r\n-    },\r\n-    // {\r\n-    //   utterance: \"mute the video\",\r\n-    //   action: muteVideo,\r\n-    // },\r\n-    // {\r\n-    //   utterance: \"unmute the video\",\r\n-    //   action: unmuteVideo,\r\n-    // },\r\n-    // {\r\n-    //   utterance: \"stop the video sound\",\r\n-    //   action: muteVideo,\r\n-    // },\r\n-    // {\r\n-    //   utterance: \"play the video sound\",\r\n-    //   action: unmuteVideo,\r\n-    // },\r\n-    {\r\n-      utterance: \"play transforming education video\",\r\n-      action: () => controlVideo(\"ourProjectsVideo\", \"play\"),\r\n-    },\r\n-    {\r\n-      utterance: \"start transforming education video\",\r\n-      action: () => controlVideo(\"ourProjectsVideo\", \"play\"),\r\n-    },\r\n-    {\r\n-      utterance: \"pause transforming education video\",\r\n-      action: () => controlVideo(\"ourProjectsVideo\", \"pause\"),\r\n-    },\r\n-    {\r\n-      utterance: \"stop transforming education video\",\r\n-      action: () => controlVideo(\"ourProjectsVideo\", \"pause\"),\r\n-    },\r\n-    {\r\n-      utterance: \"mute transforming education video\",\r\n-      action: () => controlVideo(\"ourProjectsVideo\", \"mute\"),\r\n-    },\r\n-    {\r\n-      utterance: \"unmute transforming education video\",\r\n-      action: () => controlVideo(\"ourProjectsVideo\", \"unmute\"),\r\n-    },\r\n-    {\r\n-      utterance: \"fullscreen transforming education video\",\r\n-      action: () => controlVideo(\"ourProjectsVideo\", \"fullscreen\"),\r\n-    },\r\n-    {\r\n-      utterance: \"exit fullscreen transforming education video\",\r\n-      action: () => controlVideo(\"ourProjectsVideo\", \"exitFullscreen\"),\r\n-    },\r\n-    {\r\n-      utterance: \"increase volume transforming education video\",\r\n-      action: () => controlVideo(\"ourProjectsVideo\", \"increaseVolume\"),\r\n-    },\r\n-    {\r\n-      utterance: \"decrease volume transforming education video\",\r\n-      action: () => controlVideo(\"ourProjectsVideo\", \"decreaseVolume\"),\r\n-    },\r\n-    {\r\n-      utterance: \"play the video about transforming education\",\r\n-      action: () => controlVideo(\"ourProjectsVideo\", \"play\"),\r\n-    },\r\n-    {\r\n-      utterance: \"start the transforming education video\",\r\n-      action: () => controlVideo(\"ourProjectsVideo\", \"play\"),\r\n-    },\r\n-    {\r\n-      utterance: \"can you pause the video on transforming education\",\r\n-      action: () => controlVideo(\"ourProjectsVideo\", \"pause\"),\r\n-    },\r\n-    {\r\n-      utterance: \"stop the video about transforming education\",\r\n-      action: () => controlVideo(\"ourProjectsVideo\", \"pause\"),\r\n-    },\r\n-    {\r\n-      utterance: \"mute the transforming education video\",\r\n-      action: () => controlVideo(\"ourProjectsVideo\", \"mute\"),\r\n-    },\r\n-    {\r\n-      utterance: \"unmute the video on transforming education\",\r\n-      action: () => controlVideo(\"ourProjectsVideo\", \"unmute\"),\r\n-    },\r\n-    {\r\n-      utterance: \"make the transforming education video fullscreen\",\r\n-      action: () => controlVideo(\"ourProjectsVideo\", \"fullscreen\"),\r\n-    },\r\n-    {\r\n-      utterance: \"exit fullscreen on the transforming education video\",\r\n-      action: () => controlVideo(\"ourProjectsVideo\", \"exitFullscreen\"),\r\n-    },\r\n-    {\r\n-      utterance: \"increase the volume of the transforming education video\",\r\n-      action: () => controlVideo(\"ourProjectsVideo\", \"increaseVolume\"),\r\n-    },\r\n-    {\r\n-      utterance: \"decrease the volume of the transforming education video\",\r\n-      action: () => controlVideo(\"ourProjectsVideo\", \"decreaseVolume\"),\r\n-    },\r\n-\r\n-    {\r\n-      utterance: \"play leaders voice video\",\r\n-      action: () => controlVideo(\"leadersVoiceVideo\", \"play\"),\r\n-    },\r\n-    {\r\n-      utterance: \"start leaders voice video\",\r\n-      action: () => controlVideo(\"leadersVoiceVideo\", \"play\"),\r\n-    },\r\n-    {\r\n-      utterance: \"pause leaders voice video\",\r\n-      action: () => controlVideo(\"leadersVoiceVideo\", \"pause\"),\r\n-    },\r\n-    {\r\n-      utterance: \"stop leaders voice video\",\r\n-      action: () => controlVideo(\"leadersVoiceVideo\", \"pause\"),\r\n-    },\r\n-    {\r\n-      utterance: \"mute leaders voice video\",\r\n-      action: () => controlVideo(\"leadersVoiceVideo\", \"mute\"),\r\n-    },\r\n-    {\r\n-      utterance: \"unmute leaders voice video\",\r\n-      action: () => controlVideo(\"leadersVoiceVideo\", \"unmute\"),\r\n-    },\r\n-    {\r\n-      utterance: \"fullscreen leaders voice video\",\r\n-      action: () => controlVideo(\"leadersVoiceVideo\", \"fullscreen\"),\r\n-    },\r\n-    {\r\n-      utterance: \"exit fullscreen leaders voice video\",\r\n-      action: () => controlVideo(\"leadersVoiceVideo\", \"exitFullscreen\"),\r\n-    },\r\n-    {\r\n-      utterance: \"increase volume leaders voice video\",\r\n-      action: () => controlVideo(\"leadersVoiceVideo\", \"increaseVolume\"),\r\n-    },\r\n-    {\r\n-      utterance: \"decrease volume leaders voice video\",\r\n-      action: () => controlVideo(\"leadersVoiceVideo\", \"decreaseVolume\"),\r\n-    },\r\n-\r\n-    {\r\n-      utterance: \"set mobile number to *\",\r\n-      action: (spokenText) => {\r\n-        if (!spokenText) {\r\n-          speak(\"I couldn't understand the command.\");\r\n-          return;\r\n-        }\r\n-        const mobileNumber = extractNumber(spokenText);\r\n-        if (mobileNumber) {\r\n-          setMobileNumber(mobileNumber);\r\n-        } else {\r\n-          speak(\"I couldn't find a number in your command.\");\r\n-        }\r\n-      },\r\n-    },\r\n-    {\r\n-      utterance: \"enter mobile number as *\",\r\n-      action: (spokenText) => {\r\n-        if (!spokenText) {\r\n-          speak(\"I couldn't understand the command.\");\r\n-          return;\r\n-        }\r\n-        const mobileNumber = extractNumber(spokenText);\r\n-        if (mobileNumber) {\r\n-          setMobileNumber(mobileNumber);\r\n-        } else {\r\n-          speak(\"I couldn't find a number in your command.\");\r\n-        }\r\n-      },\r\n-    },\r\n-    {\r\n-      utterance: \"enter my mobile number as *\",\r\n-      action: (spokenText) => {\r\n-        if (!spokenText) {\r\n-          speak(\"I couldn't understand the command.\");\r\n-          return;\r\n-        }\r\n-        const mobileNumber = extractNumber(spokenText);\r\n-        if (mobileNumber) {\r\n-          setMobileNumber(mobileNumber);\r\n-        } else {\r\n-          speak(\"I couldn't find a number in your command.\");\r\n-        }\r\n-      },\r\n-    },\r\n-    {\r\n-      utterance: \"set mobile number as *\",\r\n-      action: (spokenText) => {\r\n-        if (!spokenText) {\r\n-          speak(\"I couldn't understand the command.\");\r\n-          return;\r\n-        }\r\n-        const mobileNumber = extractNumber(spokenText);\r\n-        if (mobileNumber) {\r\n-          setMobileNumber(mobileNumber);\r\n-        } else {\r\n-          speak(\"I couldn't find a number in your command.\");\r\n-        }\r\n-      },\r\n-    },\r\n-    {\r\n-      utterance: \"fill mobile number as *\",\r\n-      action: (spokenText) => {\r\n-        if (!spokenText) {\r\n-          speak(\"I couldn't understand the command.\");\r\n-          return;\r\n-        }\r\n-        const mobileNumber = extractNumber(spokenText);\r\n-        if (mobileNumber) {\r\n-          setMobileNumber(mobileNumber);\r\n-        } else {\r\n-          speak(\"I couldn't find a number in your command.\");\r\n-        }\r\n-      },\r\n-    },\r\n-    {\r\n-      utterance: \"set password as *\",\r\n-      action: (spokenText) => {\r\n-        if (!spokenText) {\r\n-          speak(\"I couldn't understand the command.\");\r\n-          return;\r\n-        }\r\n-        const pin = extractNumber(spokenText);\r\n-        if (pin) {\r\n-          setPin(pin);\r\n-        } else {\r\n-          speak(\"I couldn't find a number in your command.\");\r\n-        }\r\n-      },\r\n-    },\r\n-    {\r\n-      utterance: \"enter password as *\",\r\n-      action: (spokenText) => {\r\n-        if (!spokenText) {\r\n-          speak(\"I couldn't understand the command.\");\r\n-          return;\r\n-        }\r\n-        const pin = extractNumber(spokenText);\r\n-        if (pin) {\r\n-          setPin(pin);\r\n-        } else {\r\n-          speak(\"I couldn't find a number in your command.\");\r\n-        }\r\n-      },\r\n-    },\r\n-    {\r\n-      utterance: \"change password to *\",\r\n-      action: (spokenText) => {\r\n-        if (!spokenText) {\r\n-          speak(\"I couldn't understand the command.\");\r\n-          return;\r\n-        }\r\n-        const pin = extractNumber(spokenText);\r\n-        if (pin) {\r\n-          setPin(pin);\r\n-        } else {\r\n-          speak(\"I couldn't find a number in your command.\");\r\n-        }\r\n-      },\r\n-    },\r\n-    {\r\n-      utterance: \"fill password as *\",\r\n-      action: (spokenText) => {\r\n-        if (!spokenText) {\r\n-          speak(\"I couldn't understand the command.\");\r\n-          return;\r\n-        }\r\n-        const pin = extractNumber(spokenText);\r\n-        if (pin) {\r\n-          setPin(pin);\r\n-        } else {\r\n-          speak(\"I couldn't find a number in your command.\");\r\n-        }\r\n-      },\r\n-    },\r\n-    {\r\n-      utterance: \"set pin as *\",\r\n-      action: (spokenText) => {\r\n-        if (!spokenText) {\r\n-          speak(\"I couldn't understand the command.\");\r\n-          return;\r\n-        }\r\n-        const pin = extractNumber(spokenText);\r\n-        if (pin) {\r\n-          setPin(pin);\r\n-        } else {\r\n-          speak(\"I couldn't find a number in your command.\");\r\n-        }\r\n-      },\r\n-    },\r\n-    {\r\n-      utterance: \"set pin to *\",\r\n-      action: (spokenText) => {\r\n-        if (!spokenText) {\r\n-          speak(\"I couldn't understand the command.\");\r\n-          return;\r\n-        }\r\n-        const pin = extractNumber(spokenText);\r\n-        if (pin) {\r\n-          setPin(pin);\r\n-        } else {\r\n-          speak(\"I couldn't find a number in your command.\");\r\n-        }\r\n-      },\r\n-    },\r\n-    {\r\n-      utterance: \"enter pin as *\",\r\n-      action: (spokenText) => {\r\n-        if (!spokenText) {\r\n-          speak(\"I couldn't understand the command.\");\r\n-          return;\r\n-        }\r\n-        const pin = extractNumber(spokenText);\r\n-        if (pin) {\r\n-          setPin(pin);\r\n-        } else {\r\n-          speak(\"I couldn't find a number in your command.\");\r\n-        }\r\n-      },\r\n-    },\r\n-    {\r\n-      utterance: \"fill pin as *\",\r\n-      action: (spokenText) => {\r\n-        if (!spokenText) {\r\n-          speak(\"I couldn't understand the command.\");\r\n-          return;\r\n-        }\r\n-        const pin = extractNumber(spokenText);\r\n-        if (pin) {\r\n-          setPin(pin);\r\n-        } else {\r\n-          speak(\"I couldn't find a number in your command.\");\r\n-        }\r\n-      },\r\n-    },\r\n-    {\r\n-      utterance: \"press login\",\r\n-      action: () => {\r\n         triggerLogin();\r\n         speak(\"Attempting to log in.\");\r\n       },\r\n     },\r\n     {\r\n-      utterance: \"press login button\",\r\n-      action: () => {\r\n-        triggerLogin();\r\n-        speak(\"Attempting to log in.\");\r\n-      },\r\n-    },\r\n-    {\r\n       utterance: \"press record audio\",\r\n       action: () => {\r\n         console.log(\"Record Audio command detected\");\r\n         setTriggerRecordAudio(true);\r\n"
                },
                {
                    "date": 1700826209685,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1203,8 +1203,16 @@\n         setTriggerRecordAudio(true);\r\n       },\r\n       response: \"Started\"\r\n     },\r\n+    {\r\n+      utterance: \"click record audio\",\r\n+      action: () => {\r\n+        console.log(\"Record Audio command detected\");\r\n+        setTriggerRecordAudio(true);\r\n+      },\r\n+      response: \"Started\"\r\n+    },\r\n     \r\n   ];\r\n \r\n   return (\r\n"
                },
                {
                    "date": 1700826217781,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1204,8 +1204,16 @@\n       },\r\n       response: \"Started\"\r\n     },\r\n     {\r\n+      utterance: \"press record audio button\",\r\n+      action: () => {\r\n+        console.log(\"Record Audio command detected\");\r\n+        setTriggerRecordAudio(true);\r\n+      },\r\n+      response: \"Started\"\r\n+    },\r\n+    {\r\n       utterance: \"click record audio\",\r\n       action: () => {\r\n         console.log(\"Record Audio command detected\");\r\n         setTriggerRecordAudio(true);\r\n"
                },
                {
                    "date": 1700826230728,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1219,8 +1219,16 @@\n         setTriggerRecordAudio(true);\r\n       },\r\n       response: \"Started\"\r\n     },\r\n+    {\r\n+      utterance: \"click record audio button\",\r\n+      action: () => {\r\n+        console.log(\"Record Audio command detected\");\r\n+        setTriggerRecordAudio(true);\r\n+      },\r\n+      response: \"Started\"\r\n+    },\r\n     \r\n   ];\r\n \r\n   return (\r\n"
                }
            ],
            "date": 1700643137796,
            "name": "Commit-0",
            "content": "import React, { useState, useEffect, useRef } from \"react\";\r\nimport { useNavigate, useLocation } from \"react-router-dom\";\r\nimport Fuse from \"fuse.js\";\r\nimport \"./VoiceBot.css\";\r\nimport chatbotimage from \"../../assets/chatbotgif.gif\"\r\n\r\nconst VoiceBot = ({ videoRef}) => {\r\n  const [isListening, setIsListening] = useState(false);\r\n  const [isSpeaking, setIsSpeaking] = useState(false);\r\n  const recognition = useRef(null);\r\n  const speechSynthesis = useRef(window.speechSynthesis);\r\n  const [hasGreeted, setHasGreeted] = useState(false);\r\n  const navigate = useNavigate();\r\n\r\n\r\n // Initialize speech recognition\r\n useEffect(() => {\r\n  recognition.current = new window.webkitSpeechRecognition();\r\n  recognition.current.continuous = true;\r\n  recognition.current.interimResults = false;\r\n  recognition.current.onresult = onResult;\r\n  recognition.current.onend = onRecognitionEnd;\r\n  recognition.current.starting = false;\r\n\r\n  recognition.current.onerror = (event) => {\r\n    console.error(\"Recognition error:\", event.error);\r\n    if (isListening && !isSpeaking) {\r\n      restartRecognition();\r\n    }\r\n  };\r\n\r\n  return () => {\r\n    if (recognition.current) {\r\n      recognition.current.abort();\r\n    }\r\n  };\r\n}, []);\r\n\r\n  useEffect(() => {\r\n    const checkRecognition = () => {\r\n      if (isListening && !isSpeaking && !recognition.current.starting) {\r\n        console.log(\"Restarting recognition because it's not active.\");\r\n        recognition.current.starting = true;\r\n        recognition.current.start();\r\n        console.log(\"Restarted recognition.\");\r\n      }\r\n    };\r\n\r\n    const recognitionCheckInterval = setInterval(checkRecognition, 500); // Check every .5 second\r\n\r\n    return () => {\r\n      clearInterval(recognitionCheckInterval);\r\n    };\r\n  }, [isListening, isSpeaking]);\r\n\r\n\r\n  const historyStack = useRef([]);\r\n\r\n  useEffect(() => {\r\n    return () => {\r\n      // Clean up the listener when the component unmounts\r\n      window.removeEventListener(\"popstate\", handlePopState);\r\n    };\r\n  }, []);\r\n\r\n  const handlePopState = () => {\r\n    // This needs to handle both back and forward browser actions\r\n    // Use some logic to determine whether it's a back or forward action\r\n    // For simplicity, assume it's always back\r\n    historyStack.current.pop();\r\n    forwardStack.current.length = 0; // Clear forward stack on manual navigation\r\n  };\r\n  \r\n\r\n  // Add a new entry to the stack whenever navigate is called\r\n  const customNavigate = (to, options) => {\r\n    historyStack.current.push(to);\r\n    navigate(to, options);\r\n  };\r\n\r\n  // Listen to popstate events to update the history stack\r\n  useEffect(() => {\r\n    window.addEventListener(\"popstate\", handlePopState);\r\n  }, []);\r\n\r\n  const forwardStack = useRef([]);\r\n\r\n  const goBack = () => {\r\n    if (window.history.state && window.history.state.idx > 0) {\r\n      window.history.back();\r\n      speak(\"Going back\");\r\n    } else {\r\n      speak(\"Can't go back any further.\");\r\n    }\r\n  };\r\n\r\n  const goForward = () => {\r\n    if (window.history.state && window.history.state.idx < window.history.length - 1) {\r\n      window.history.forward();\r\n      speak(\"Going forward\");\r\n    } else {\r\n      speak(\"No forward history available.\");\r\n    }\r\n  };\r\n\r\n  const playVideo = () => {\r\n    if (videoRef.current) {\r\n      videoRef.current.play();\r\n      speak(\"Playing video.\");\r\n    } else {\r\n      speak(\"No video to play.\");\r\n    }\r\n  };\r\n\r\n  const pauseVideo = () => {\r\n    if (videoRef.current) {\r\n      videoRef.current.pause();\r\n      speak(\"Video paused.\");\r\n    } else {\r\n      speak(\"No video to pause.\");\r\n    }\r\n  };\r\n\r\n  const scrollAmount = window.innerHeight * 0.82;\r\n\r\n  const scrollUp = () => {\r\n    if (window.pageYOffset === 0) {\r\n      speak(\"Already at the top of the page.\");\r\n    } else {\r\n      window.scrollBy(0, -scrollAmount);\r\n      speak(\"Scrolled up.\");\r\n    }\r\n  };\r\n\r\n  const scrollDown = () => {\r\n    const maxScrollTop =\r\n      document.documentElement.scrollHeight - window.innerHeight;\r\n    if (window.pageYOffset >= maxScrollTop) {\r\n      speak(\"Already at the bottom of the page.\");\r\n    } else {\r\n      window.scrollBy(0, scrollAmount);\r\n      speak(\"Scrolled down.\");\r\n    }\r\n  };\r\n\r\n  const scrollToTop = () => {\r\n    if (window.pageYOffset === 0) {\r\n      speak(\"Already at the top of the page.\");\r\n    } else {\r\n      window.scrollTo(0, 0);\r\n      speak(\"Scrolled to the top of the page.\");\r\n    }\r\n  };\r\n\r\n  const scrollToBottom = () => {\r\n    const maxScrollTop =\r\n      document.documentElement.scrollHeight - window.innerHeight;\r\n    if (window.pageYOffset >= maxScrollTop) {\r\n      speak(\"Already at the bottom of the page.\");\r\n    } else {\r\n      window.scrollTo(0, document.body.scrollHeight);\r\n      speak(\"Scrolled to the bottom of the page.\");\r\n    }\r\n  };\r\n\r\n  const speak = (message) => {\r\n    const utterance = new SpeechSynthesisUtterance(message);\r\n    utterance.onend = () => {\r\n      setIsSpeaking(false);\r\n      // Restart recognition after speaking has ended\r\n      if (isListening) {\r\n        restartRecognition();\r\n      }\r\n    };\r\n  \r\n    setIsSpeaking(true);\r\n    // Stop recognition when the bot starts speaking\r\n    if (recognition.current) {\r\n      recognition.current.abort();\r\n    }\r\n    speechSynthesis.current.speak(utterance);\r\n  };\r\n  \r\n\r\n  const restartRecognition = () => {\r\n    // Check if recognition is not already started and if the bot is set to listen\r\n    if (recognition.current && !recognition.current.starting && isListening && !isSpeaking) {\r\n      recognition.current.abort(); // Ensure any ongoing recognition is stopped\r\n      recognition.current.starting = true;\r\n      recognition.current.start();\r\n    }\r\n  };\r\n  \r\n    // Restart recognition when bot finishes speaking and isListening is true\r\n    useEffect(() => {\r\n      if (!isSpeaking && isListening) {\r\n        restartRecognition();\r\n      }\r\n    }, [isSpeaking, isListening]);\r\n\r\n  const onResult = (event) => {\r\n    const resultIndex = event.resultIndex;\r\n    const transcript = event.results[resultIndex][0].transcript\r\n      .trim()\r\n      .toLowerCase();\r\n\r\n    if (event.results[resultIndex].isFinal) {\r\n      console.log(`Recognized text: ${transcript}`);\r\n      if (transcript.includes(\"brain\")) {\r\n        console.log(\"Wake word heard, processing command...\");\r\n        handleCommandWithFuse(transcript.replace(\"brain\", \"\"));\r\n      }\r\n    }\r\n  };\r\n\r\n  const onRecognitionEnd = () => {\r\n    recognition.current.starting = false;\r\n    if (isListening && !isSpeaking) {\r\n      restartRecognition();\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (isListening && !hasGreeted) {\r\n      speak(\"Hello, I'm Brane. How can I help you today?\");\r\n      setHasGreeted(true);\r\n    }\r\n  }, [isListening, hasGreeted]);\r\n\r\n\r\n  // Updated startListening function\r\n  const startListening = () => {\r\n    setIsListening(true);\r\n    if (!recognition.current.starting) {\r\n      restartRecognition();\r\n    }\r\n  };\r\n\r\n  // Updated stopListening function\r\n  const stopListening = () => {\r\n    setIsListening(false);\r\n    if (speechSynthesis.current.speaking) {\r\n      speechSynthesis.current.cancel();\r\n    }\r\n    recognition.current.abort();\r\n  };\r\n\r\n\r\n  const handleCommandWithFuse = (command) => {\r\n    const fuse = new Fuse(commands, { keys: [\"utterance\"], threshold: 0.4 });\r\n    const results = fuse.search(command);\r\n    const foundCommand = results.length ? results[0].item : null;\r\n\r\n    if (foundCommand) {\r\n      console.log(\"Command found:\", foundCommand.utterance);\r\n\r\n      if (foundCommand.action) {\r\n        foundCommand.action();\r\n      } else if (foundCommand.route) {\r\n        navigate(foundCommand.route);\r\n      }\r\n\r\n      // Speak after performing the action or navigation\r\n      speak(foundCommand.response);\r\n    } else {\r\n      console.log(\"No command found.\");\r\n      speak(\"I'm not sure how to respond to that.\");\r\n    }\r\n  };\r\n\r\n  const commands = [\r\n    {\r\n      utterance: \"Hello who are you ?\",\r\n\r\n      response:\r\n        \"Hi! This is Brane! your Voice bot from Brane Education How can I Assist you Today ?\",\r\n    },\r\n\r\n    {\r\n      utterance: \"Hello\",\r\n\r\n      response: \"Hi! How can I assist you today?\",\r\n    },\r\n\r\n    {\r\n      utterance: \"hello\",\r\n\r\n      response: \"Hi! How can I assist you today?\",\r\n    },\r\n\r\n    {\r\n      utterance: \"Hi.\",\r\n\r\n      response: \"Hello! How can I assist you today?\",\r\n    },\r\n\r\n    {\r\n      utterance: \"Hey there\",\r\n\r\n      response: \"Hi! How can I assist you today?\",\r\n    },\r\n\r\n    {\r\n      utterance: \"Good morning Brane.\",\r\n\r\n      response: \"Hey Hiii! Good morning  ! How can I help you?\",\r\n    },\r\n\r\n    {\r\n      utterance: \"Good afternoon Brane.\",\r\n\r\n      response: \"Hey Hiii! Good after noon ! How can I help you?\",\r\n    },\r\n\r\n    {\r\n      utterance: \"Good evening Brane.\",\r\n\r\n      response: \"Hey Hiii! Good evening ! How can I help you?\",\r\n    },\r\n\r\n    {\r\n      utterance: \"can you please take me to login page\",\r\n\r\n      route: \"/login\",\r\n\r\n      response: \"Here's the Login Page, Please Login\",\r\n    },\r\n\r\n    {\r\n      utterance: \"please take me to login page\",\r\n\r\n      route: \"/login\",\r\n\r\n      response: \"Here's the Login Page, Please Login\",\r\n    },\r\n\r\n    {\r\n      utterance: \"Go to login page\",\r\n\r\n      route: \"/login\",\r\n\r\n      response: \"Here's the Login Page, Please Login\",\r\n    },\r\n\r\n    {\r\n      utterance: \"open login page\",\r\n\r\n      route: \"/login\",\r\n\r\n      response: \"Here's the Login Page, Please Login\",\r\n    },\r\n\r\n    {\r\n      utterance: \"can you please take me to signup page\",\r\n\r\n      route: \"/signup\",\r\n\r\n      response: \"Here's the signup page. Please proceed With Registration.\",\r\n    },\r\n\r\n    {\r\n      utterance: \"take me to signup page\",\r\n\r\n      route: \"/signup\",\r\n\r\n      response: \"Here's the signup page. Please proceed With Registration.\",\r\n    },\r\n\r\n    {\r\n      utterance: \"Go to signup page\",\r\n\r\n      route: \"/signup\",\r\n\r\n      response: \"Here's the signup page. Please proceed With Registration.\",\r\n    },\r\n\r\n    {\r\n      utterance: \"open signup page\",\r\n\r\n      route: \"/signup\",\r\n\r\n      response: \"Here's the signup page. Please proceed With Registration.\",\r\n    },\r\n\r\n    {\r\n      utterance: \"Go to face id\",\r\n\r\n      route: \"/login/faceid\",\r\n\r\n      response: \"Here's Face ID Login. Please proceed.\",\r\n    },\r\n\r\n    {\r\n      utterance: \"Go to face id login\",\r\n\r\n      route: \"/login/faceid\",\r\n\r\n      response: \"Here's Face ID Login. Please proceed.\",\r\n    },\r\n    {\r\n      utterance: \"Go to face login\",\r\n\r\n      route: \"/login/faceid\",\r\n\r\n      response: \"Here's Face ID Login. Please proceed.\",\r\n    },\r\n\r\n    {\r\n      utterance: \"login with face id\",\r\n\r\n      route: \"/login/faceid\",\r\n\r\n      response: \"Here's Face ID Login. Please proceed.\",\r\n    },\r\n\r\n    {\r\n      utterance: \"login with face\",\r\n\r\n      route: \"/login/faceid\",\r\n\r\n      response: \"Here's Face ID Login. Please proceed.\",\r\n    },\r\n\r\n    {\r\n      utterance: \"i want to login with face\",\r\n\r\n      route: \"/login/faceid\",\r\n\r\n      response: \"Here's Face ID Login. Please proceed.\",\r\n    },\r\n\r\n    {\r\n      utterance: \"login with voice\",\r\n\r\n      route: \"/login/voiceid\",\r\n\r\n      response: \"Here's Voice Login. Please proceed.\",\r\n    },\r\n\r\n    {\r\n      utterance: \"i want to login with voice\",\r\n\r\n      route: \"/login/voiceid\",\r\n\r\n      response: \"Here's Voice Login. Please proceed.\",\r\n    },\r\n\r\n    {\r\n      utterance: \"go to voice login\",\r\n\r\n      route: \"/login/voiceid\",\r\n\r\n      response: \"Here's Voice Login. Please proceed.\",\r\n    },\r\n\r\n    {\r\n      utterance: \"login with voice\",\r\n\r\n      route: \"/login/voiceid\",\r\n\r\n      response: \"Here's Voice Login. Please proceed.\",\r\n    },\r\n\r\n    {\r\n      utterance: \"login with mobile\",\r\n\r\n      route: \"/login/mobile\",\r\n\r\n      response: \"Here's Mobile Login. Please proceed.\",\r\n    },\r\n\r\n    {\r\n      utterance: \"i want to login with mobile\",\r\n\r\n      route: \"/login/mobile\",\r\n\r\n      response: \"Here's Mobile Login. Please proceed.\",\r\n    },\r\n    {\r\n      utterance: \"go to mobile login\",\r\n\r\n      route: \"/login/mobile\",\r\n\r\n      response: \"Here's Mobile Login. Please proceed.\",\r\n    },\r\n\r\n    {\r\n      utterance: \"what are platform features\",\r\n\r\n      response:\r\n        \"Dashboard, Dynamic time table, Learning Networks, Little Masters, Video Based Dictionary, General Search.\",\r\n    },\r\n\r\n    {\r\n      utterance: \"Features of platform\",\r\n\r\n      response:\r\n        \"Dashboard, Dynamic time table, Learning Networks, Little Masters, Video Based Dictionary, General Search.\",\r\n    },\r\n\r\n    {\r\n      utterance: \"What does the platform offer\",\r\n\r\n      response:\r\n        \"Dashboard, Dynamic time table, Learning Networks, Little Masters, Video Based Dictionary, General Search.\",\r\n    },\r\n\r\n    {\r\n      utterance: \"Say me the features of platform\",\r\n\r\n      response:\r\n        \"Dashboard, Dynamic time table, Learning Networks, Little Masters, Video Based Dictionary, General Search.\",\r\n    },\r\n\r\n    {\r\n      utterance: \"Say me the services of platform\",\r\n\r\n      response:\r\n        \"Dashboard, Dynamic time table, Learning Networks, Little Masters, Video Based Dictionary, General Search.\",\r\n    },\r\n\r\n    {\r\n      utterance: \"tell me the services offered by the platform\",\r\n\r\n      response:\r\n        \"Dashboard, Dynamic time table, Learning Networks, Little Masters, Video Based Dictionary, General Search.\",\r\n    },\r\n\r\n    {\r\n      utterance: \"explain platform services\",\r\n\r\n      response:\r\n        \"Dashboard, Dynamic time table, Learning Networks, Little Masters, Video Based Dictionary, General Search.\",\r\n    },\r\n\r\n    {\r\n      utterance: \"Give me the Parent voice of Julia Harris\",\r\n\r\n      response:\r\n        \"Brane education has helped my son a lot in his studies. He improved a lot in his studies and is now able to score good marks in his exams\",\r\n    },\r\n\r\n    {\r\n      utterance: \"Play today's motivational video\",\r\n\r\n      response: \"I am playing the video\",\r\n    },\r\n\r\n    {\r\n      utterance: \"Play today's video\",\r\n\r\n      response: \"I am playing Motivational video\",\r\n    },\r\n\r\n    {\r\n      utterance: \"Leaders Voice\",\r\n\r\n      response:\r\n        \"This Voice-interactive AI Platform is a game Changer. It revolutionizes education.\",\r\n    },\r\n\r\n    {\r\n      utterance: \"Curriculum Supported by Brane Education\",\r\n\r\n      response:\r\n        \"we support multiple Boards let me say few Telangana State Board Andhra Pradesh Board Maharashtra Board Assam Board\",\r\n    },\r\n\r\n    {\r\n      utterance: \"Boards supported by the platform\",\r\n\r\n      response:\r\n        \"we support multiple Boards let me say few Telangana State Board Andhra Pradesh Board Maharashtra Board Assam Board\",\r\n    },\r\n\r\n    {\r\n      utterance: \"Curriculum\",\r\n\r\n      response:\r\n        \"we support multiple Boards let me say few Telangana State Board Andhra Pradesh Board Maharashtra Board Assam Board\",\r\n    },\r\n\r\n    {\r\n      utterance: \"Go to landing page\",\r\n\r\n      response: \"Okay, I am taking you to the landing page.\",\r\n\r\n      route: \"/childpage\",\r\n    },\r\n\r\n    {\r\n      utterance: \"take me to landing page\",\r\n\r\n      response: \"Okay, I am taking you to the landing page.\",\r\n\r\n      route: \"/childpage\",\r\n    },\r\n\r\n    {\r\n      utterance: \"move to landing page\",\r\n\r\n      response: \"Okay, I am taking you to the landing page.\",\r\n\r\n      route: \"/childpage\",\r\n    },\r\n\r\n    {\r\n      utterance: \"roll back to landing page\",\r\n\r\n      response: \"Okay, I am taking you to the landing page.\",\r\n\r\n      route: \"/childpage\",\r\n    },\r\n\r\n    {\r\n      utterance: \"move to landing page\",\r\n\r\n      response: \"Okay, I am taking you to the landing page.\",\r\n\r\n      route: \"/childpage\",\r\n    },\r\n\r\n    {\r\n      utterance: \"what is today's quote\",\r\n\r\n      response:\r\n        \"Determination is the power that sees us through all our frustration and obstacles. It helps in building our willpower which is the very basis of success.\",\r\n\r\n      route: \"/childpage\",\r\n    },\r\n\r\n    {\r\n      utterance: \"Today's Inspirational quote\",\r\n\r\n      response:\r\n        \"Determination is the power that sees us through all our frustration and obstacles. It helps in building our willpower which is the very basis of success.\",\r\n\r\n      route: \"/childpage\",\r\n    },\r\n\r\n    {\r\n      utterance: \"say me today's quote\",\r\n\r\n      response:\r\n        \"Determination is the power that sees us through all our frustration and obstacles. It helps in building our willpower which is the very basis of success.\",\r\n\r\n      route: \"/childpage\",\r\n    },\r\n    {\r\n      utterance: \"go back\",\r\n      response: \"\",\r\n      action: goBack, // Note the use of an action property\r\n    },\r\n    {\r\n      utterance: \"go forward\",\r\n      response: \"\",\r\n      action: goForward,\r\n    },\r\n    {\r\n      utterance: \"play video\",\r\n      // response: \"Playing video.\",\r\n      action: playVideo,\r\n    },\r\n    {\r\n      utterance: \"pause video\",\r\n      // response: \"Pausing video.\",\r\n      action: pauseVideo,\r\n    },\r\n    {\r\n      utterance: \"start video\",\r\n      // response: \"Playing video.\",\r\n      action: playVideo,\r\n    },\r\n    {\r\n      utterance: \"stop video\",\r\n      // response: \"Playing video.\",\r\n      action: pauseVideo,\r\n    },\r\n    {\r\n      utterance: \"scroll up\",\r\n      // response: \"Scrolling up.\",\r\n      action: scrollUp,\r\n    },\r\n    {\r\n      utterance: \"scroll down\",\r\n      // response: \"Scrolling down.\",\r\n      action: scrollDown,\r\n    },\r\n    {\r\n      utterance: \"go up\",\r\n\r\n      // response: \"Scrolling up.\",\r\n      action: scrollUp,\r\n    },\r\n    {\r\n      utterance: \"go down\",\r\n      // response: \"Scrolling down.\",\r\n      action: scrollDown,\r\n    },\r\n    {\r\n      utterance: \"scroll to top\",\r\n      action: scrollToTop,\r\n    },\r\n    {\r\n      utterance: \"scroll to bottom\",\r\n      action: scrollToBottom,\r\n    },\r\n    {\r\n      utterance: \"brane stop\",\r\n      action: stopListening,\r\n    },\r\n    {\r\n      utterance: \"brane turn off\",\r\n      action: stopListening,\r\n    },\r\n    {\r\n      utterance: \"brane stop the bot\",\r\n      action: stopListening,\r\n    },\r\n  ];\r\n\r\n  return (\r\n    <div className=\"speech-bot-container\">\r\n      <div\r\n        className={`button-container ${\r\n          isListening ? \"voicebotframeactive\" : \"voicebotframe\"\r\n        }`}\r\n      >\r\n        {/* <button onClick={isListening ? stopListening : startListening}>\r\n          {isListening ? \"Stop\" : \"Start\"} Animation\r\n        </button> */}\r\n        <img \r\n        className=\"botimage\"\r\n          src={chatbotimage} alt=\"\" \r\n          onClick={isListening ? stopListening : startListening}  \r\n        />\r\n\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default VoiceBot;\r\n\r\n\r\n{/* // import React, { useState, useEffect, useRef } from \"react\";\r\n// import { useNavigate, useLocation } from \"react-router-dom\";\r\n// import Fuse from \"fuse.js\";\r\n// import \"./VoiceBot.css\";\r\n\r\n// const VoiceBot = ({ videoRef }) => {\r\n//   const [isListening, setIsListening] = useState(false);\r\n//   const [isSpeaking, setIsSpeaking] = useState(false);\r\n//   const recognition = useRef(null);\r\n//   const speechSynthesis = useRef(window.speechSynthesis);\r\n//   const [hasGreeted, setHasGreeted] = useState(false);\r\n//   const navigate = useNavigate();\r\n\r\n//   useEffect(() => {\r\n//     recognition.current = new window.webkitSpeechRecognition();\r\n//     recognition.current.continuous = true;\r\n//     recognition.current.interimResults = false;\r\n//     recognition.current.onresult = onResult;\r\n//     recognition.current.onend = onRecognitionEnd;\r\n//     recognition.current.starting = false;\r\n\r\n//     // Simplified error handling, removed specific handling for 'no-speech'\r\n//     recognition.current.onerror = (event) => {\r\n//       console.error(\"Recognition error:\", event.error);\r\n//       // Check if listening is true and the bot isn't speaking\r\n//       if (isListening && !isSpeaking) {\r\n//         // Restart recognition\r\n//         restartRecognition();\r\n//       }\r\n//     };\r\n\r\n//     return () => {\r\n//       if (recognition.current) {\r\n//         recognition.current.abort();\r\n//       }\r\n//     };\r\n//   }, []);\r\n\r\n//   useEffect(() => {\r\n//     const checkRecognition = () => {\r\n//       if (isListening && !isSpeaking && !recognition.current.starting) {\r\n//         console.log(\"Restarting recognition because it's not active.\");\r\n//         recognition.current.starting = true;\r\n//         recognition.current.start();\r\n//         console.log(\"Restarted recognition.\");\r\n//       }\r\n//     };\r\n\r\n//     const recognitionCheckInterval = setInterval(checkRecognition, 100); // Check every 1 second\r\n\r\n//     return () => {\r\n//       clearInterval(recognitionCheckInterval);\r\n//     };\r\n//   }, [isListening, isSpeaking]);\r\n\r\n//   const restartRecognition = () => {\r\n//     if (recognition.current.starting) {\r\n//       console.log(\"Recognition is already starting or running.\");\r\n//       return;\r\n//     }\r\n\r\n//     recognition.current.abort(); // Stop any existing recognition process\r\n//     recognition.current.starting = true;\r\n//     recognition.current.start();\r\n//     console.log(\"Recognition restarted.\");\r\n//   };\r\n\r\n//   const historyStack = useRef([]);\r\n\r\n//   useEffect(() => {\r\n//     return () => {\r\n//       // Clean up the listener when the component unmounts\r\n//       window.removeEventListener(\"popstate\", handlePopState);\r\n//     };\r\n//   }, []);\r\n\r\n//   const handlePopState = () => {\r\n//     // This needs to handle both back and forward browser actions\r\n//     // Use some logic to determine whether it's a back or forward action\r\n//     // For simplicity, assume it's always back\r\n//     historyStack.current.pop();\r\n//     forwardStack.current.length = 0; // Clear forward stack on manual navigation\r\n//   };\r\n  \r\n\r\n//   // Add a new entry to the stack whenever navigate is called\r\n//   const customNavigate = (to, options) => {\r\n//     historyStack.current.push(to);\r\n//     navigate(to, options);\r\n//   };\r\n\r\n//   // Listen to popstate events to update the history stack\r\n//   useEffect(() => {\r\n//     window.addEventListener(\"popstate\", handlePopState);\r\n//   }, []);\r\n\r\n//   const forwardStack = useRef([]);\r\n\r\n//   const goBack = () => {\r\n//     if (window.history.state && window.history.state.idx > 0) {\r\n//       window.history.back();\r\n//       speak(\"Going back\");\r\n//     } else {\r\n//       speak(\"Can't go back any further.\");\r\n//     }\r\n//   };\r\n\r\n//   const goForward = () => {\r\n//     if (window.history.state && window.history.state.idx < window.history.length - 1) {\r\n//       window.history.forward();\r\n//       speak(\"Going forward\");\r\n//     } else {\r\n//       speak(\"No forward history available.\");\r\n//     }\r\n//   };\r\n\r\n//   const playVideo = () => {\r\n//     if (videoRef.current) {\r\n//       videoRef.current.play();\r\n//       speak(\"Playing video.\");\r\n//     } else {\r\n//       speak(\"No video to play.\");\r\n//     }\r\n//   };\r\n\r\n//   const pauseVideo = () => {\r\n//     if (videoRef.current) {\r\n//       videoRef.current.pause();\r\n//       speak(\"Video paused.\");\r\n//     } else {\r\n//       speak(\"No video to pause.\");\r\n//     }\r\n//   };\r\n\r\n//   const scrollAmount = window.innerHeight * 0.82;\r\n\r\n//   const scrollUp = () => {\r\n//     if (window.pageYOffset === 0) {\r\n//       speak(\"Already at the top of the page.\");\r\n//     } else {\r\n//       window.scrollBy(0, -scrollAmount);\r\n//       speak(\"Scrolled up.\");\r\n//     }\r\n//   };\r\n\r\n//   const scrollDown = () => {\r\n//     const maxScrollTop =\r\n//       document.documentElement.scrollHeight - window.innerHeight;\r\n//     if (window.pageYOffset >= maxScrollTop) {\r\n//       speak(\"Already at the bottom of the page.\");\r\n//     } else {\r\n//       window.scrollBy(0, scrollAmount);\r\n//       speak(\"Scrolled down.\");\r\n//     }\r\n//   };\r\n\r\n//   const scrollToTop = () => {\r\n//     if (window.pageYOffset === 0) {\r\n//       speak(\"Already at the top of the page.\");\r\n//     } else {\r\n//       window.scrollTo(0, 0);\r\n//       speak(\"Scrolled to the top of the page.\");\r\n//     }\r\n//   };\r\n\r\n//   const scrollToBottom = () => {\r\n//     const maxScrollTop =\r\n//       document.documentElement.scrollHeight - window.innerHeight;\r\n//     if (window.pageYOffset >= maxScrollTop) {\r\n//       speak(\"Already at the bottom of the page.\");\r\n//     } else {\r\n//       window.scrollTo(0, document.body.scrollHeight);\r\n//       speak(\"Scrolled to the bottom of the page.\");\r\n//     }\r\n//   };\r\n\r\n//   const speak = (message) => {\r\n//     console.log(\"speak function called with message:\", message);\r\n//     const utterance = new SpeechSynthesisUtterance(message);\r\n//     utterance.onend = () => {\r\n//       setIsSpeaking(false);\r\n//       console.log(\"Speaking ended.\");\r\n//       if (isListening && !recognition.current.starting) {\r\n//         console.log(\"Restarting recognition after speaking.\");\r\n//         recognition.current.starting = true;\r\n//         recognition.current.start();\r\n//         console.log(\"Restarted recognition after speaking.\");\r\n//       }\r\n//     };\r\n\r\n//     setIsSpeaking(true);\r\n//     console.log(\"Speaking started.\");\r\n//     recognition.current.stop(); // Ensure to stop recognition before speaking\r\n//     speechSynthesis.current.speak(utterance);\r\n//   };\r\n\r\n//   const onResult = (event) => {\r\n//     const resultIndex = event.resultIndex;\r\n//     const transcript = event.results[resultIndex][0].transcript\r\n//       .trim()\r\n//       .toLowerCase();\r\n\r\n//     if (event.results[resultIndex].isFinal) {\r\n//       console.log(`Recognized text: ${transcript}`);\r\n//       if (transcript.includes(\"brain\")) {\r\n//         console.log(\"Wake word heard, processing command...\");\r\n//         handleCommandWithFuse(transcript.replace(\"brain\", \"\"));\r\n//       }\r\n//     }\r\n//   };\r\n\r\n//   const onRecognitionEnd = () => {\r\n//     recognition.current.starting = false;\r\n//     if (isListening && !isSpeaking) {\r\n//       restartRecognition();\r\n//     }\r\n//   };\r\n\r\n//   useEffect(() => {\r\n//     if (isListening) {\r\n//       if (!hasGreeted) {\r\n//         speak(\"Hello, I'm Brane. How can I help you today?\");\r\n//         setHasGreeted(true);\r\n//       } else {\r\n//         speak(\"Listening.\");\r\n//       }\r\n//     }\r\n//   }, [isListening, hasGreeted]);\r\n\r\n\r\n//   const startListening = () => {\r\n//     if (!recognition.current.starting) {\r\n//       setIsListening(true);\r\n//       restartRecognition();\r\n//     }\r\n//   };\r\n\r\n//   const stopListening = () => {\r\n//     setIsListening(false);\r\n//     recognition.current.abort();\r\n//     if (speechSynthesis.current.speaking) {\r\n//       speechSynthesis.current.cancel();\r\n//     }\r\n//   };\r\n\r\n//   const handleCommandWithFuse = (command) => {\r\n//     const fuse = new Fuse(commands, { keys: [\"utterance\"], threshold: 0.4 });\r\n//     const results = fuse.search(command);\r\n//     const foundCommand = results.length ? results[0].item : null;\r\n\r\n//     if (foundCommand) {\r\n//       console.log(\"Command found:\", foundCommand.utterance);\r\n\r\n//       if (foundCommand.action) {\r\n//         foundCommand.action();\r\n//       } else if (foundCommand.route) {\r\n//         navigate(foundCommand.route);\r\n//       }\r\n\r\n//       // Speak after performing the action or navigation\r\n//       speak(foundCommand.response);\r\n//     } else {\r\n//       console.log(\"No command found.\");\r\n//       speak(\"I'm not sure how to respond to that.\");\r\n//     }\r\n//   };\r\n\r\n//   const commands = [\r\n//     {\r\n//       utterance: \"Hello who are you ?\",\r\n\r\n//       response:\r\n//         \"Hi! This is Brane! your Voice bot from Brane Education How can I Assist you Today ?\",\r\n//     },\r\n\r\n//     {\r\n//       utterance: \"Hello\",\r\n\r\n//       response: \"Hi! How can I assist you today?\",\r\n//     },\r\n\r\n//     {\r\n//       utterance: \"hello\",\r\n\r\n//       response: \"Hi! How can I assist you today?\",\r\n//     },\r\n\r\n//     {\r\n//       utterance: \"Hi.\",\r\n\r\n//       response: \"Hello! How can I assist you today?\",\r\n//     },\r\n\r\n//     {\r\n//       utterance: \"Hey there\",\r\n\r\n//       response: \"Hi! How can I assist you today?\",\r\n//     },\r\n\r\n//     {\r\n//       utterance: \"Good morning Brane.\",\r\n\r\n//       response: \"Hey Hiii! Good morning  ! How can I help you?\",\r\n//     },\r\n\r\n//     {\r\n//       utterance: \"Good afternoon Brane.\",\r\n\r\n//       response: \"Hey Hiii! Good after noon ! How can I help you?\",\r\n//     },\r\n\r\n//     {\r\n//       utterance: \"Good evening Brane.\",\r\n\r\n//       response: \"Hey Hiii! Good evening ! How can I help you?\",\r\n//     },\r\n\r\n//     {\r\n//       utterance: \"can you please take me to login page\",\r\n\r\n//       route: \"/login\",\r\n\r\n//       response: \"Here's the Login Page, Please Login\",\r\n//     },\r\n\r\n//     {\r\n//       utterance: \"please take me to login page\",\r\n\r\n//       route: \"/login\",\r\n\r\n//       response: \"Here's the Login Page, Please Login\",\r\n//     },\r\n\r\n//     {\r\n//       utterance: \"Go to login page\",\r\n\r\n//       route: \"/login\",\r\n\r\n//       response: \"Here's the Login Page, Please Login\",\r\n//     },\r\n\r\n//     {\r\n//       utterance: \"open login page\",\r\n\r\n//       route: \"/login\",\r\n\r\n//       response: \"Here's the Login Page, Please Login\",\r\n//     },\r\n\r\n//     {\r\n//       utterance: \"can you please take me to signup page\",\r\n\r\n//       route: \"/signup\",\r\n\r\n//       response: \"Here's the signup page. Please proceed With Registration.\",\r\n//     },\r\n\r\n//     {\r\n//       utterance: \"take me to signup page\",\r\n\r\n//       route: \"/signup\",\r\n\r\n//       response: \"Here's the signup page. Please proceed With Registration.\",\r\n//     },\r\n\r\n//     {\r\n//       utterance: \"Go to signup page\",\r\n\r\n//       route: \"/signup\",\r\n\r\n//       response: \"Here's the signup page. Please proceed With Registration.\",\r\n//     },\r\n\r\n//     {\r\n//       utterance: \"open signup page\",\r\n\r\n//       route: \"/signup\",\r\n\r\n//       response: \"Here's the signup page. Please proceed With Registration.\",\r\n//     },\r\n\r\n//     {\r\n//       utterance: \"Go to face id\",\r\n\r\n//       route: \"/login/faceid\",\r\n\r\n//       response: \"Here's Face ID Login. Please proceed.\",\r\n//     },\r\n\r\n//     {\r\n//       utterance: \"Go to face id login\",\r\n\r\n//       route: \"/login/faceid\",\r\n\r\n//       response: \"Here's Face ID Login. Please proceed.\",\r\n//     },\r\n\r\n//     {\r\n//       utterance: \"login with face id\",\r\n\r\n//       route: \"/login/faceid\",\r\n\r\n//       response: \"Here's Face ID Login. Please proceed.\",\r\n//     },\r\n\r\n//     {\r\n//       utterance: \"login with face\",\r\n\r\n//       route: \"/login/faceid\",\r\n\r\n//       response: \"Here's Face ID Login. Please proceed.\",\r\n//     },\r\n\r\n//     {\r\n//       utterance: \"i want to login with face\",\r\n\r\n//       route: \"/login/faceid\",\r\n\r\n//       response: \"Here's Face ID Login. Please proceed.\",\r\n//     },\r\n\r\n//     {\r\n//       utterance: \"login with voice\",\r\n\r\n//       route: \"/login/voiceid\",\r\n\r\n//       response: \"Here's Voice Login. Please proceed.\",\r\n//     },\r\n\r\n//     {\r\n//       utterance: \"i want to login with voice\",\r\n\r\n//       route: \"/login/voiceid\",\r\n\r\n//       response: \"Here's Voice Login. Please proceed.\",\r\n//     },\r\n\r\n//     {\r\n//       utterance: \"go to voice login\",\r\n\r\n//       route: \"/login/voiceid\",\r\n\r\n//       response: \"Here's Voice Login. Please proceed.\",\r\n//     },\r\n\r\n//     {\r\n//       utterance: \"login with voice\",\r\n\r\n//       route: \"/login/voiceid\",\r\n\r\n//       response: \"Here's Voice Login. Please proceed.\",\r\n//     },\r\n\r\n//     {\r\n//       utterance: \"login with mobile\",\r\n\r\n//       route: \"/login/mobile\",\r\n\r\n//       response: \"Here's Mobile Login. Please proceed.\",\r\n//     },\r\n\r\n//     {\r\n//       utterance: \"i want to login with mobile\",\r\n\r\n//       route: \"/login/mobile\",\r\n\r\n//       response: \"Here's Mobile Login. Please proceed.\",\r\n//     },\r\n//     {\r\n//       utterance: \"go to mobile login\",\r\n\r\n//       route: \"/login/mobile\",\r\n\r\n//       response: \"Here's Mobile Login. Please proceed.\",\r\n//     },\r\n\r\n//     {\r\n//       utterance: \"what are platform features\",\r\n\r\n//       response:\r\n//         \"Dashboard, Dynamic time table, Learning Networks, Little Masters, Video Based Dictionary, General Search.\",\r\n//     },\r\n\r\n//     {\r\n//       utterance: \"Features of platform\",\r\n\r\n//       response:\r\n//         \"Dashboard, Dynamic time table, Learning Networks, Little Masters, Video Based Dictionary, General Search.\",\r\n//     },\r\n\r\n//     {\r\n//       utterance: \"What does the platform offer\",\r\n\r\n//       response:\r\n//         \"Dashboard, Dynamic time table, Learning Networks, Little Masters, Video Based Dictionary, General Search.\",\r\n//     },\r\n\r\n//     {\r\n//       utterance: \"Say me the features of platform\",\r\n\r\n//       response:\r\n//         \"Dashboard, Dynamic time table, Learning Networks, Little Masters, Video Based Dictionary, General Search.\",\r\n//     },\r\n\r\n//     {\r\n//       utterance: \"Say me the services of platform\",\r\n\r\n//       response:\r\n//         \"Dashboard, Dynamic time table, Learning Networks, Little Masters, Video Based Dictionary, General Search.\",\r\n//     },\r\n\r\n//     {\r\n//       utterance: \"tell me the services offered by the platform\",\r\n\r\n//       response:\r\n//         \"Dashboard, Dynamic time table, Learning Networks, Little Masters, Video Based Dictionary, General Search.\",\r\n//     },\r\n\r\n//     {\r\n//       utterance: \"explain platform services\",\r\n\r\n//       response:\r\n//         \"Dashboard, Dynamic time table, Learning Networks, Little Masters, Video Based Dictionary, General Search.\",\r\n//     },\r\n\r\n//     {\r\n//       utterance: \"Give me the Parent voice of Julia Harris\",\r\n\r\n//       response:\r\n//         \"Brane education has helped my son a lot in his studies. He improved a lot in his studies and is now able to score good marks in his exams\",\r\n//     },\r\n\r\n//     {\r\n//       utterance: \"Play today's motivational video\",\r\n\r\n//       response: \"I am playing the video\",\r\n//     },\r\n\r\n//     {\r\n//       utterance: \"Play today's video\",\r\n\r\n//       response: \"I am playing Motivational video\",\r\n//     },\r\n\r\n//     {\r\n//       utterance: \"Leaders Voice\",\r\n\r\n//       response:\r\n//         \"This Voice-interactive AI Platform is a game Changer. It revolutionizes education.\",\r\n//     },\r\n\r\n//     {\r\n//       utterance: \"Curriculum Supported by Brane Education\",\r\n\r\n//       response:\r\n//         \"we support multiple Boards let me say few Telangana State Board Andhra Pradesh Board Maharashtra Board Assam Board\",\r\n//     },\r\n\r\n//     {\r\n//       utterance: \"Boards supported by the platform\",\r\n\r\n//       response:\r\n//         \"we support multiple Boards let me say few Telangana State Board Andhra Pradesh Board Maharashtra Board Assam Board\",\r\n//     },\r\n\r\n//     {\r\n//       utterance: \"Curriculum\",\r\n\r\n//       response:\r\n//         \"we support multiple Boards let me say few Telangana State Board Andhra Pradesh Board Maharashtra Board Assam Board\",\r\n//     },\r\n\r\n//     {\r\n//       utterance: \"Go to landing page\",\r\n\r\n//       response: \"Okay, I am taking you to the landing page.\",\r\n\r\n//       route: \"/childpage\",\r\n//     },\r\n\r\n//     {\r\n//       utterance: \"take me to landing page\",\r\n\r\n//       response: \"Okay, I am taking you to the landing page.\",\r\n\r\n//       route: \"/childpage\",\r\n//     },\r\n\r\n//     {\r\n//       utterance: \"move to landing page\",\r\n\r\n//       response: \"Okay, I am taking you to the landing page.\",\r\n\r\n//       route: \"/childpage\",\r\n//     },\r\n\r\n//     {\r\n//       utterance: \"roll back to landing page\",\r\n\r\n//       response: \"Okay, I am taking you to the landing page.\",\r\n\r\n//       route: \"/childpage\",\r\n//     },\r\n\r\n//     {\r\n//       utterance: \"move to landing page\",\r\n\r\n//       response: \"Okay, I am taking you to the landing page.\",\r\n\r\n//       route: \"/childpage\",\r\n//     },\r\n\r\n//     {\r\n//       utterance: \"what is today's quote\",\r\n\r\n//       response:\r\n//         \"Determination is the power that sees us through all our frustration and obstacles. It helps in building our willpower which is the very basis of success.\",\r\n\r\n//       route: \"/childpage\",\r\n//     },\r\n\r\n//     {\r\n//       utterance: \"Today's Inspirational quote\",\r\n\r\n//       response:\r\n//         \"Determination is the power that sees us through all our frustration and obstacles. It helps in building our willpower which is the very basis of success.\",\r\n\r\n//       route: \"/childpage\",\r\n//     },\r\n\r\n//     {\r\n//       utterance: \"say me today's quote\",\r\n\r\n//       response:\r\n//         \"Determination is the power that sees us through all our frustration and obstacles. It helps in building our willpower which is the very basis of success.\",\r\n\r\n//       route: \"/childpage\",\r\n//     },\r\n//     {\r\n//       utterance: \"go back\",\r\n//       response: \"\",\r\n//       action: goBack, // Note the use of an action property\r\n//     },\r\n//     {\r\n//       utterance: \"go forward\",\r\n//       response: \"\",\r\n//       action: goForward,\r\n//     },\r\n//     {\r\n//       utterance: \"play video\",\r\n//       // response: \"Playing video.\",\r\n//       action: playVideo,\r\n//     },\r\n//     {\r\n//       utterance: \"pause video\",\r\n//       // response: \"Pausing video.\",\r\n//       action: pauseVideo,\r\n//     },\r\n//     {\r\n//       utterance: \"start video\",\r\n//       // response: \"Playing video.\",\r\n//       action: playVideo,\r\n//     },\r\n//     {\r\n//       utterance: \"stop video\",\r\n//       // response: \"Playing video.\",\r\n//       action: pauseVideo,\r\n//     },\r\n//     {\r\n//       utterance: \"scroll up\",\r\n//       // response: \"Scrolling up.\",\r\n//       action: scrollUp,\r\n//     },\r\n//     {\r\n//       utterance: \"scroll down\",\r\n//       // response: \"Scrolling down.\",\r\n//       action: scrollDown,\r\n//     },\r\n//     {\r\n//       utterance: \"go up\",\r\n\r\n//       // response: \"Scrolling up.\",\r\n//       action: scrollUp,\r\n//     },\r\n//     {\r\n//       utterance: \"go down\",\r\n//       // response: \"Scrolling down.\",\r\n//       action: scrollDown,\r\n//     },\r\n//     {\r\n//       utterance: \"scroll to top\",\r\n//       action: scrollToTop,\r\n//     },\r\n//     {\r\n//       utterance: \"scroll to bottom\",\r\n//       action: scrollToBottom,\r\n//     },\r\n//     {\r\n//       utterance: \"brane stop\",\r\n//       action: stopListening,\r\n//     },\r\n//     {\r\n//       utterance: \"brane turn off\",\r\n//       action: stopListening,\r\n//     },\r\n//     {\r\n//       utterance: \"brane stop the bot\",\r\n//       action: stopListening,\r\n//     },\r\n//   ];\r\n\r\n//   return (\r\n//     <div className=\"speech-bot-container\">\r\n//       <div\r\n//         className={`button-container ${\r\n//           isListening ? \"voicebotframeactive\" : \"voicebotframe\"\r\n//         }`}\r\n//       >\r\n//         <button onClick={isListening ? stopListening : startListening}>\r\n//           {isListening ? \"Stop\" : \"Start\"} Animation\r\n//         </button>\r\n//         {/* <button onClick={toggleBotActive}>\r\n//         {isBotActive ? 'Deactivate Bot' : 'Activate Bot'}\r\n//       </button> \r\n//       </div>\r\n//     </div>\r\n//   );\r\n// };\r\n\r\n// export default VoiceBot; */}\r\n\r\n\r\n\r\n//iska v1\r\n\r\n// import React, { useState, useEffect, useRef } from \"react\";\r\n// import { useNavigate, useLocation } from \"react-router-dom\";\r\n// import Fuse from \"fuse.js\";\r\n// import \"./VoiceBot.css\";\r\n\r\n// const VoiceBot = ({ videoRef}) => {\r\n//   const [isListening, setIsListening] = useState(false);\r\n//   const [isSpeaking, setIsSpeaking] = useState(false);\r\n//   const recognition = useRef(null);\r\n//   const speechSynthesis = useRef(window.speechSynthesis);\r\n//   const [hasGreeted, setHasGreeted] = useState(false);\r\n//   const navigate = useNavigate();\r\n\r\n\r\n//  // Initialize speech recognition\r\n//  useEffect(() => {\r\n//   recognition.current = new window.webkitSpeechRecognition();\r\n//   recognition.current.continuous = true;\r\n//   recognition.current.interimResults = false;\r\n//   recognition.current.onresult = onResult;\r\n//   recognition.current.onend = onRecognitionEnd;\r\n//   recognition.current.starting = false;\r\n\r\n//   recognition.current.onerror = (event) => {\r\n//     console.error(\"Recognition error:\", event.error);\r\n//     if (isListening && !isSpeaking) {\r\n//       restartRecognition();\r\n//     }\r\n//   };\r\n\r\n//   return () => {\r\n//     if (recognition.current) {\r\n//       recognition.current.abort();\r\n//     }\r\n//   };\r\n// }, []);\r\n\r\n//   // useEffect(() => {\r\n//   //   const checkRecognition = () => {\r\n//   //     if (isListening && !isSpeaking && !recognition.current.starting) {\r\n//   //       console.log(\"Restarting recognition because it's not active.\");\r\n//   //       recognition.current.starting = true;\r\n//   //       recognition.current.start();\r\n//   //       console.log(\"Restarted recognition.\");\r\n//   //     }\r\n//   //   };\r\n\r\n//   //   const recognitionCheckInterval = setInterval(checkRecognition, 100); // Check every .5 second\r\n\r\n//   //   return () => {\r\n//   //     clearInterval(recognitionCheckInterval);\r\n//   //   };\r\n//   // }, [isListening, isSpeaking]);\r\n\r\n\r\n//   const historyStack = useRef([]);\r\n\r\n//   useEffect(() => {\r\n//     return () => {\r\n//       // Clean up the listener when the component unmounts\r\n//       window.removeEventListener(\"popstate\", handlePopState);\r\n//     };\r\n//   }, []);\r\n\r\n//   const handlePopState = () => {\r\n//     // This needs to handle both back and forward browser actions\r\n//     // Use some logic to determine whether it's a back or forward action\r\n//     // For simplicity, assume it's always back\r\n//     historyStack.current.pop();\r\n//     forwardStack.current.length = 0; // Clear forward stack on manual navigation\r\n//   };\r\n  \r\n\r\n//   // Add a new entry to the stack whenever navigate is called\r\n//   const customNavigate = (to, options) => {\r\n//     historyStack.current.push(to);\r\n//     navigate(to, options);\r\n//   };\r\n\r\n//   // Listen to popstate events to update the history stack\r\n//   useEffect(() => {\r\n//     window.addEventListener(\"popstate\", handlePopState);\r\n//   }, []);\r\n\r\n//   const forwardStack = useRef([]);\r\n\r\n//   const goBack = () => {\r\n//     if (window.history.state && window.history.state.idx > 0) {\r\n//       window.history.back();\r\n//       speak(\"Going back\");\r\n//     } else {\r\n//       speak(\"Can't go back any further.\");\r\n//     }\r\n//   };\r\n\r\n//   const goForward = () => {\r\n//     if (window.history.state && window.history.state.idx < window.history.length - 1) {\r\n//       window.history.forward();\r\n//       speak(\"Going forward\");\r\n//     } else {\r\n//       speak(\"No forward history available.\");\r\n//     }\r\n//   };\r\n\r\n//   const playVideo = () => {\r\n//     if (videoRef.current) {\r\n//       videoRef.current.play();\r\n//       speak(\"Playing video.\");\r\n//     } else {\r\n//       speak(\"No video to play.\");\r\n//     }\r\n//   };\r\n\r\n//   const pauseVideo = () => {\r\n//     if (videoRef.current) {\r\n//       videoRef.current.pause();\r\n//       speak(\"Video paused.\");\r\n//     } else {\r\n//       speak(\"No video to pause.\");\r\n//     }\r\n//   };\r\n\r\n//   const scrollAmount = window.innerHeight * 0.82;\r\n\r\n//   const scrollUp = () => {\r\n//     if (window.pageYOffset === 0) {\r\n//       speak(\"Already at the top of the page.\");\r\n//     } else {\r\n//       window.scrollBy(0, -scrollAmount);\r\n//       speak(\"Scrolled up.\");\r\n//     }\r\n//   };\r\n\r\n//   const scrollDown = () => {\r\n//     const maxScrollTop =\r\n//       document.documentElement.scrollHeight - window.innerHeight;\r\n//     if (window.pageYOffset >= maxScrollTop) {\r\n//       speak(\"Already at the bottom of the page.\");\r\n//     } else {\r\n//       window.scrollBy(0, scrollAmount);\r\n//       speak(\"Scrolled down.\");\r\n//     }\r\n//   };\r\n\r\n//   const scrollToTop = () => {\r\n//     if (window.pageYOffset === 0) {\r\n//       speak(\"Already at the top of the page.\");\r\n//     } else {\r\n//       window.scrollTo(0, 0);\r\n//       speak(\"Scrolled to the top of the page.\");\r\n//     }\r\n//   };\r\n\r\n//   const scrollToBottom = () => {\r\n//     const maxScrollTop =\r\n//       document.documentElement.scrollHeight - window.innerHeight;\r\n//     if (window.pageYOffset >= maxScrollTop) {\r\n//       speak(\"Already at the bottom of the page.\");\r\n//     } else {\r\n//       window.scrollTo(0, document.body.scrollHeight);\r\n//       speak(\"Scrolled to the bottom of the page.\");\r\n//     }\r\n//   };\r\n\r\n//   const speak = (message) => {\r\n//     const utterance = new SpeechSynthesisUtterance(message);\r\n//     utterance.onend = () => {\r\n//       setIsSpeaking(false);\r\n//       // Restart recognition after speaking has ended\r\n//       if (isListening) {\r\n//         restartRecognition();\r\n//       }\r\n//     };\r\n  \r\n//     setIsSpeaking(true);\r\n//     // Stop recognition when the bot starts speaking\r\n//     if (recognition.current) {\r\n//       recognition.current.abort();\r\n//     }\r\n//     speechSynthesis.current.speak(utterance);\r\n//   };\r\n  \r\n\r\n//   const restartRecognition = () => {\r\n//     // Check if recognition is not already started and if the bot is set to listen\r\n//     if (recognition.current && !recognition.current.starting && isListening && !isSpeaking) {\r\n//       // Only start recognition if it's not already active\r\n//       if (recognition.current.state !== 'active') {\r\n//         recognition.current.abort(); // Ensure any ongoing recognition is stopped\r\n//         recognition.current.starting = true;\r\n//         recognition.current.start();\r\n//       }\r\n//     }\r\n//   };\r\n  \r\n  \r\n//     // Restart recognition when bot finishes speaking and isListening is true\r\n//     useEffect(() => {\r\n//       if (!isSpeaking && isListening) {\r\n//         restartRecognition();\r\n//       }\r\n//     }, [isSpeaking, isListening]);\r\n\r\n//   const onResult = (event) => {\r\n//     const resultIndex = event.resultIndex;\r\n//     const transcript = event.results[resultIndex][0].transcript\r\n//       .trim()\r\n//       .toLowerCase();\r\n\r\n//     if (event.results[resultIndex].isFinal) {\r\n//       console.log(`Recognized text: ${transcript}`);\r\n//       if (transcript.includes(\"brain\")) {\r\n//         console.log(\"Wake word heard, processing command...\");\r\n//         handleCommandWithFuse(transcript.replace(\"brain\", \"\"));\r\n//       }\r\n//     }\r\n//   };\r\n\r\n//   const onRecognitionEnd = () => {\r\n//     recognition.current.starting = false;\r\n//     if (isListening && !isSpeaking) {\r\n//       restartRecognition();\r\n//     }\r\n//   };\r\n\r\n//   useEffect(() => {\r\n//     if (isListening && !hasGreeted) {\r\n//       speak(\"Hello, I'm Brane. How can I help you today?\");\r\n//       setHasGreeted(true);\r\n//     }\r\n//   }, [isListening, hasGreeted]);\r\n\r\n\r\n// // Updated startListening function\r\n// const startListening = () => {\r\n//   setIsListening(true);\r\n//   if (recognition.current && !recognition.current.starting) {\r\n//     recognition.current.start();\r\n//   }\r\n// };\r\n\r\n// // Updated stopListening function\r\n// const stopListening = () => {\r\n//   setIsListening(false);\r\n//   setIsSpeaking(false); // Reset speaking state\r\n//   setHasGreeted(false); // Reset greeting state if needed\r\n//   if (recognition.current) {\r\n//     recognition.current.abort(); // Stop any ongoing speech recognition\r\n//   }\r\n//   if (speechSynthesis.current.speaking) {\r\n//     speechSynthesis.current.cancel(); // Stop any ongoing speech synthesis\r\n//   }\r\n// };\r\n\r\n\r\n\r\n//   const handleCommandWithFuse = (command) => {\r\n//     const fuse = new Fuse(commands, { keys: [\"utterance\"], threshold: 0.4 });\r\n//     const results = fuse.search(command);\r\n//     const foundCommand = results.length ? results[0].item : null;\r\n\r\n//     if (foundCommand) {\r\n//       console.log(\"Command found:\", foundCommand.utterance);\r\n\r\n//       if (foundCommand.action) {\r\n//         foundCommand.action();\r\n//       } else if (foundCommand.route) {\r\n//         navigate(foundCommand.route);\r\n//       }\r\n\r\n//       // Speak after performing the action or navigation\r\n//       speak(foundCommand.response);\r\n//     } else {\r\n//       console.log(\"No command found.\");\r\n//       speak(\"I'm not sure how to respond to that.\");\r\n//     }\r\n//   };\r\n\r\n//   const commands = [\r\n//     {\r\n//       utterance: \"Hello who are you ?\",\r\n\r\n//       response:\r\n//         \"Hi! This is Brane! your Voice bot from Brane Education How can I Assist you Today ?\",\r\n//     },\r\n\r\n//     {\r\n//       utterance: \"Hello\",\r\n\r\n//       response: \"Hi! How can I assist you today?\",\r\n//     },\r\n\r\n//     {\r\n//       utterance: \"hello\",\r\n\r\n//       response: \"Hi! How can I assist you today?\",\r\n//     },\r\n\r\n//     {\r\n//       utterance: \"Hi.\",\r\n\r\n//       response: \"Hello! How can I assist you today?\",\r\n//     },\r\n\r\n//     {\r\n//       utterance: \"Hey there\",\r\n\r\n//       response: \"Hi! How can I assist you today?\",\r\n//     },\r\n\r\n//     {\r\n//       utterance: \"Good morning Brane.\",\r\n\r\n//       response: \"Hey Hiii! Good morning  ! How can I help you?\",\r\n//     },\r\n\r\n//     {\r\n//       utterance: \"Good afternoon Brane.\",\r\n\r\n//       response: \"Hey Hiii! Good after noon ! How can I help you?\",\r\n//     },\r\n\r\n//     {\r\n//       utterance: \"Good evening Brane.\",\r\n\r\n//       response: \"Hey Hiii! Good evening ! How can I help you?\",\r\n//     },\r\n\r\n//     {\r\n//       utterance: \"can you please take me to login page\",\r\n\r\n//       route: \"/login\",\r\n\r\n//       response: \"Here's the Login Page, Please Login\",\r\n//     },\r\n\r\n//     {\r\n//       utterance: \"please take me to login page\",\r\n\r\n//       route: \"/login\",\r\n\r\n//       response: \"Here's the Login Page, Please Login\",\r\n//     },\r\n\r\n//     {\r\n//       utterance: \"Go to login page\",\r\n\r\n//       route: \"/login\",\r\n\r\n//       response: \"Here's the Login Page, Please Login\",\r\n//     },\r\n\r\n//     {\r\n//       utterance: \"open login page\",\r\n\r\n//       route: \"/login\",\r\n\r\n//       response: \"Here's the Login Page, Please Login\",\r\n//     },\r\n\r\n//     {\r\n//       utterance: \"can you please take me to signup page\",\r\n\r\n//       route: \"/signup\",\r\n\r\n//       response: \"Here's the signup page. Please proceed With Registration.\",\r\n//     },\r\n\r\n//     {\r\n//       utterance: \"take me to signup page\",\r\n\r\n//       route: \"/signup\",\r\n\r\n//       response: \"Here's the signup page. Please proceed With Registration.\",\r\n//     },\r\n\r\n//     {\r\n//       utterance: \"Go to signup page\",\r\n\r\n//       route: \"/signup\",\r\n\r\n//       response: \"Here's the signup page. Please proceed With Registration.\",\r\n//     },\r\n\r\n//     {\r\n//       utterance: \"open signup page\",\r\n\r\n//       route: \"/signup\",\r\n\r\n//       response: \"Here's the signup page. Please proceed With Registration.\",\r\n//     },\r\n\r\n//     {\r\n//       utterance: \"Go to face id\",\r\n\r\n//       route: \"/login/faceid\",\r\n\r\n//       response: \"Here's Face ID Login. Please proceed.\",\r\n//     },\r\n\r\n//     {\r\n//       utterance: \"Go to face id login\",\r\n\r\n//       route: \"/login/faceid\",\r\n\r\n//       response: \"Here's Face ID Login. Please proceed.\",\r\n//     },\r\n//     {\r\n//       utterance: \"Go to face login\",\r\n\r\n//       route: \"/login/faceid\",\r\n\r\n//       response: \"Here's Face ID Login. Please proceed.\",\r\n//     },\r\n\r\n//     {\r\n//       utterance: \"login with face id\",\r\n\r\n//       route: \"/login/faceid\",\r\n\r\n//       response: \"Here's Face ID Login. Please proceed.\",\r\n//     },\r\n\r\n//     {\r\n//       utterance: \"login with face\",\r\n\r\n//       route: \"/login/faceid\",\r\n\r\n//       response: \"Here's Face ID Login. Please proceed.\",\r\n//     },\r\n\r\n//     {\r\n//       utterance: \"i want to login with face\",\r\n\r\n//       route: \"/login/faceid\",\r\n\r\n//       response: \"Here's Face ID Login. Please proceed.\",\r\n//     },\r\n\r\n//     {\r\n//       utterance: \"login with voice\",\r\n\r\n//       route: \"/login/voiceid\",\r\n\r\n//       response: \"Here's Voice Login. Please proceed.\",\r\n//     },\r\n\r\n//     {\r\n//       utterance: \"i want to login with voice\",\r\n\r\n//       route: \"/login/voiceid\",\r\n\r\n//       response: \"Here's Voice Login. Please proceed.\",\r\n//     },\r\n\r\n//     {\r\n//       utterance: \"go to voice login\",\r\n\r\n//       route: \"/login/voiceid\",\r\n\r\n//       response: \"Here's Voice Login. Please proceed.\",\r\n//     },\r\n\r\n//     {\r\n//       utterance: \"login with voice\",\r\n\r\n//       route: \"/login/voiceid\",\r\n\r\n//       response: \"Here's Voice Login. Please proceed.\",\r\n//     },\r\n\r\n//     {\r\n//       utterance: \"login with mobile\",\r\n\r\n//       route: \"/login/mobile\",\r\n\r\n//       response: \"Here's Mobile Login. Please proceed.\",\r\n//     },\r\n\r\n//     {\r\n//       utterance: \"i want to login with mobile\",\r\n\r\n//       route: \"/login/mobile\",\r\n\r\n//       response: \"Here's Mobile Login. Please proceed.\",\r\n//     },\r\n//     {\r\n//       utterance: \"go to mobile login\",\r\n\r\n//       route: \"/login/mobile\",\r\n\r\n//       response: \"Here's Mobile Login. Please proceed.\",\r\n//     },\r\n\r\n//     {\r\n//       utterance: \"what are platform features\",\r\n\r\n//       response:\r\n//         \"Dashboard, Dynamic time table, Learning Networks, Little Masters, Video Based Dictionary, General Search.\",\r\n//     },\r\n\r\n//     {\r\n//       utterance: \"Features of platform\",\r\n\r\n//       response:\r\n//         \"Dashboard, Dynamic time table, Learning Networks, Little Masters, Video Based Dictionary, General Search.\",\r\n//     },\r\n\r\n//     {\r\n//       utterance: \"What does the platform offer\",\r\n\r\n//       response:\r\n//         \"Dashboard, Dynamic time table, Learning Networks, Little Masters, Video Based Dictionary, General Search.\",\r\n//     },\r\n\r\n//     {\r\n//       utterance: \"Say me the features of platform\",\r\n\r\n//       response:\r\n//         \"Dashboard, Dynamic time table, Learning Networks, Little Masters, Video Based Dictionary, General Search.\",\r\n//     },\r\n\r\n//     {\r\n//       utterance: \"Say me the services of platform\",\r\n\r\n//       response:\r\n//         \"Dashboard, Dynamic time table, Learning Networks, Little Masters, Video Based Dictionary, General Search.\",\r\n//     },\r\n\r\n//     {\r\n//       utterance: \"tell me the services offered by the platform\",\r\n\r\n//       response:\r\n//         \"Dashboard, Dynamic time table, Learning Networks, Little Masters, Video Based Dictionary, General Search.\",\r\n//     },\r\n\r\n//     {\r\n//       utterance: \"explain platform services\",\r\n\r\n//       response:\r\n//         \"Dashboard, Dynamic time table, Learning Networks, Little Masters, Video Based Dictionary, General Search.\",\r\n//     },\r\n\r\n//     {\r\n//       utterance: \"Give me the Parent voice of Julia Harris\",\r\n\r\n//       response:\r\n//         \"Brane education has helped my son a lot in his studies. He improved a lot in his studies and is now able to score good marks in his exams\",\r\n//     },\r\n\r\n//     {\r\n//       utterance: \"Play today's motivational video\",\r\n\r\n//       response: \"I am playing the video\",\r\n//     },\r\n\r\n//     {\r\n//       utterance: \"Play today's video\",\r\n\r\n//       response: \"I am playing Motivational video\",\r\n//     },\r\n\r\n//     {\r\n//       utterance: \"Leaders Voice\",\r\n\r\n//       response:\r\n//         \"This Voice-interactive AI Platform is a game Changer. It revolutionizes education.\",\r\n//     },\r\n\r\n//     {\r\n//       utterance: \"Curriculum Supported by Brane Education\",\r\n\r\n//       response:\r\n//         \"we support multiple Boards let me say few Telangana State Board Andhra Pradesh Board Maharashtra Board Assam Board\",\r\n//     },\r\n\r\n//     {\r\n//       utterance: \"Boards supported by the platform\",\r\n\r\n//       response:\r\n//         \"we support multiple Boards let me say few Telangana State Board Andhra Pradesh Board Maharashtra Board Assam Board\",\r\n//     },\r\n\r\n//     {\r\n//       utterance: \"Curriculum\",\r\n\r\n//       response:\r\n//         \"we support multiple Boards let me say few Telangana State Board Andhra Pradesh Board Maharashtra Board Assam Board\",\r\n//     },\r\n\r\n//     {\r\n//       utterance: \"Go to landing page\",\r\n\r\n//       response: \"Okay, I am taking you to the landing page.\",\r\n\r\n//       route: \"/childpage\",\r\n//     },\r\n\r\n//     {\r\n//       utterance: \"take me to landing page\",\r\n\r\n//       response: \"Okay, I am taking you to the landing page.\",\r\n\r\n//       route: \"/childpage\",\r\n//     },\r\n\r\n//     {\r\n//       utterance: \"move to landing page\",\r\n\r\n//       response: \"Okay, I am taking you to the landing page.\",\r\n\r\n//       route: \"/childpage\",\r\n//     },\r\n\r\n//     {\r\n//       utterance: \"roll back to landing page\",\r\n\r\n//       response: \"Okay, I am taking you to the landing page.\",\r\n\r\n//       route: \"/childpage\",\r\n//     },\r\n\r\n//     {\r\n//       utterance: \"move to landing page\",\r\n\r\n//       response: \"Okay, I am taking you to the landing page.\",\r\n\r\n//       route: \"/childpage\",\r\n//     },\r\n\r\n//     {\r\n//       utterance: \"what is today's quote\",\r\n\r\n//       response:\r\n//         \"Determination is the power that sees us through all our frustration and obstacles. It helps in building our willpower which is the very basis of success.\",\r\n\r\n//       route: \"/childpage\",\r\n//     },\r\n\r\n//     {\r\n//       utterance: \"Today's Inspirational quote\",\r\n\r\n//       response:\r\n//         \"Determination is the power that sees us through all our frustration and obstacles. It helps in building our willpower which is the very basis of success.\",\r\n\r\n//       route: \"/childpage\",\r\n//     },\r\n\r\n//     {\r\n//       utterance: \"say me today's quote\",\r\n\r\n//       response:\r\n//         \"Determination is the power that sees us through all our frustration and obstacles. It helps in building our willpower which is the very basis of success.\",\r\n\r\n//       route: \"/childpage\",\r\n//     },\r\n//     {\r\n//       utterance: \"go back\",\r\n//       response: \"\",\r\n//       action: goBack, // Note the use of an action property\r\n//     },\r\n//     {\r\n//       utterance: \"go forward\",\r\n//       response: \"\",\r\n//       action: goForward,\r\n//     },\r\n//     {\r\n//       utterance: \"play video\",\r\n//       // response: \"Playing video.\",\r\n//       action: playVideo,\r\n//     },\r\n//     {\r\n//       utterance: \"pause video\",\r\n//       // response: \"Pausing video.\",\r\n//       action: pauseVideo,\r\n//     },\r\n//     {\r\n//       utterance: \"start video\",\r\n//       // response: \"Playing video.\",\r\n//       action: playVideo,\r\n//     },\r\n//     {\r\n//       utterance: \"stop video\",\r\n//       // response: \"Playing video.\",\r\n//       action: pauseVideo,\r\n//     },\r\n//     {\r\n//       utterance: \"scroll up\",\r\n//       // response: \"Scrolling up.\",\r\n//       action: scrollUp,\r\n//     },\r\n//     {\r\n//       utterance: \"scroll down\",\r\n//       // response: \"Scrolling down.\",\r\n//       action: scrollDown,\r\n//     },\r\n//     {\r\n//       utterance: \"go up\",\r\n\r\n//       // response: \"Scrolling up.\",\r\n//       action: scrollUp,\r\n//     },\r\n//     {\r\n//       utterance: \"go down\",\r\n//       // response: \"Scrolling down.\",\r\n//       action: scrollDown,\r\n//     },\r\n//     {\r\n//       utterance: \"scroll to top\",\r\n//       action: scrollToTop,\r\n//     },\r\n//     {\r\n//       utterance: \"scroll to bottom\",\r\n//       action: scrollToBottom,\r\n//     },\r\n//     {\r\n//       utterance: \"brane stop\",\r\n//       action: stopListening,\r\n//     },\r\n//     {\r\n//       utterance: \"brane turn off\",\r\n//       action: stopListening,\r\n//     },\r\n//     {\r\n//       utterance: \"brane stop the bot\",\r\n//       action: stopListening,\r\n//     },\r\n//   ];\r\n\r\n//   return (\r\n//     <div className=\"speech-bot-container\">\r\n//       <div\r\n//         className={`button-container ${\r\n//           isListening ? \"voicebotframeactive\" : \"voicebotframe\"\r\n//         }`}\r\n//       >\r\n//         <button onClick={isListening ? stopListening : startListening}>\r\n//           {isListening ? \"Stop\" : \"Start\"} Animation\r\n//         </button>\r\n//         {/* <button onClick={toggleBotActive}>\r\n//         {isBotActive ? 'Deactivate Bot' : 'Activate Bot'}\r\n//       </button> */}\r\n//       </div>\r\n//     </div>\r\n//   );\r\n// };\r\n\r\n// export default VoiceBot;\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n//Bot Video added but some start issues\r\n\r\n// import React, { useState, useEffect, useRef } from \"react\";\r\n// import { useNavigate, useLocation } from \"react-router-dom\";\r\n// import Fuse from \"fuse.js\";\r\n// import \"./VoiceBot.css\";\r\n\r\n// const VoiceBot = ({ videoRef }) => {\r\n//   const [isListening, setIsListening] = useState(false);\r\n//   const [isSpeaking, setIsSpeaking] = useState(false);\r\n//   const recognition = useRef(null);\r\n//   const speechSynthesis = useRef(window.speechSynthesis);\r\n//   const hasGreeted = useRef(false);\r\n//   const restartRecognitionTimeout = useRef(null);\r\n//   const navigate = useNavigate();\r\n//   const location = useLocation();\r\n//   const [isRecognitionActive, setIsRecognitionActive] = useState(false); // New state to track recognition status\r\n\r\n//   useEffect(() => {\r\n//     recognition.current = new window.webkitSpeechRecognition();\r\n//     recognition.current.continuous = true;\r\n//     recognition.current.interimResults = false;\r\n//     recognition.current.onresult = onResult;\r\n//     recognition.current.onend = () => {\r\n//       console.log(\"Recognition ended.\");\r\n//       if (isListening) {\r\n//         startListening();\r\n//       }\r\n//     };\r\n//     recognition.current.onerror = (event) => {\r\n//       console.error(\"Recognition error:\", event.error);\r\n//     };\r\n\r\n//     return () => {\r\n//       recognition.current.abort();\r\n//     };\r\n//   }, []);\r\n\r\n//   // Update useEffect for managing the recognition state based on isListening and isRecognitionActive\r\n//   useEffect(() => {\r\n//     if (isListening && !isRecognitionActive) {\r\n//       startListening();\r\n//     } else if (!isListening && isRecognitionActive) {\r\n//       stopListening();\r\n//     }\r\n//   }, [isListening, isRecognitionActive]);\r\n\r\n//   const goBack = () => {\r\n//     if (window.history.length > 1) {\r\n//       navigate(-1);\r\n//     } else {\r\n//       speak(\"Can't go back any further.\");\r\n//     }\r\n//   };\r\n\r\n//   const goForward = () => {\r\n//     // Unfortunately, there's no direct way to check if you can go forward in the history.\r\n//     // You might need to manage this state manually based on user navigation.\r\n//     navigate(1);\r\n//   };\r\n\r\n//   const playVideo = () => {\r\n//     if (videoRef.current && !videoRef.current.paused) {\r\n//       speak(\"Video is already playing.\");\r\n//     } else if (videoRef.current) {\r\n//       videoRef.current.play();\r\n//       speak(\"Playing video.\");\r\n//     } else {\r\n//       speak(\"No video to play.\");\r\n//     }\r\n//   };\r\n\r\n//   const pauseVideo = () => {\r\n//     if (videoRef.current && videoRef.current.paused) {\r\n//       speak(\"Video is already paused.\");\r\n//     } else if (videoRef.current) {\r\n//       videoRef.current.pause();\r\n//       speak(\"Video paused.\");\r\n//     } else {\r\n//       speak(\"No video to pause.\");\r\n//     }\r\n//   };\r\n\r\n//   const scrollAmount = window.innerHeight * 0.82;\r\n\r\n//   const scrollUp = () => {\r\n//     if (window.pageYOffset === 0) {\r\n//       speak(\"Already at the top of the page.\");\r\n//     } else {\r\n//       window.scrollBy(0, -scrollAmount);\r\n//       speak(\"Scrolled up.\");\r\n//     }\r\n//   };\r\n\r\n//   const scrollDown = () => {\r\n//     const maxScrollTop =\r\n//       document.documentElement.scrollHeight - window.innerHeight;\r\n//     if (window.pageYOffset >= maxScrollTop) {\r\n//       speak(\"Already at the bottom of the page.\");\r\n//     } else {\r\n//       window.scrollBy(0, scrollAmount);\r\n//       speak(\"Scrolled down.\");\r\n//     }\r\n//   };\r\n\r\n//   const scrollToTop = () => {\r\n//     if (window.pageYOffset === 0) {\r\n//       speak(\"Already at the top of the page.\");\r\n//     } else {\r\n//       window.scrollTo(0, 0);\r\n//       speak(\"Scrolled to the top of the page.\");\r\n//     }\r\n//   };\r\n\r\n//   const scrollToBottom = () => {\r\n//     const maxScrollTop =\r\n//       document.documentElement.scrollHeight - window.innerHeight;\r\n//     if (window.pageYOffset >= maxScrollTop) {\r\n//       speak(\"Already at the bottom of the page.\");\r\n//     } else {\r\n//       window.scrollTo(0, document.body.scrollHeight);\r\n//       speak(\"Scrolled to the bottom of the page.\");\r\n//     }\r\n//   };\r\n\r\n//   // const speak = (message) => {\r\n//   //   const utterance = new SpeechSynthesisUtterance(message);\r\n//   //   utterance.onend = () => {\r\n//   //     setIsSpeaking(false);\r\n//   //     console.log(\"Speaking ended.\");\r\n//   //     // Only restart recognition if we're still supposed to be listening\r\n//   //     // if (isListening) {\r\n//   //     //   if (restartRecognitionTimeout.current) {\r\n//   //     //     clearTimeout(restartRecognitionTimeout.current);\r\n//   //     //   }\r\n//   //     //   restartRecognitionTimeout.current = setTimeout(() => {\r\n//   //     //     console.log(\"Recognition restarted.\");\r\n//   //     //     recognition.current.start();\r\n//   //     //   }, 100); // Delay to prevent immediate restart\r\n//   //     // }\r\n//   //     if (isListening && !recognition.current.starting) { // Check the flag before restarting\r\n//   //       recognition.current.starting = true; // Set the flag when starting recognition\r\n//   //       recognition.current.start();\r\n//   //     }\r\n//   //   };\r\n\r\n//   //   setIsSpeaking(true);\r\n//   //   console.log(\"Speaking started.\");\r\n//   //   recognition.current.stop(); // Stop recognition when the bot starts speaking\r\n//   //   speechSynthesis.current.speak(utterance);\r\n//   // };\r\n\r\n//   const speak = (message) => {\r\n//     console.log(\"speak function called with message:\", message);\r\n//     const utterance = new SpeechSynthesisUtterance(message);\r\n//     utterance.onend = () => {\r\n//       setIsSpeaking(false);\r\n//       console.log(\"Speaking ended.\");\r\n//       // Directly handle the restart of recognition here if needed\r\n//       if (isListening) {\r\n//         startListening();\r\n//       }\r\n//     };\r\n\r\n//     setIsSpeaking(true);\r\n//     console.log(\"Speaking started.\");\r\n//     recognition.current.stop(); // Ensure to stop recognition before speaking\r\n//     speechSynthesis.current.speak(utterance);\r\n//   };\r\n\r\n//   const onResult = (event) => {\r\n//     const resultIndex = event.resultIndex;\r\n//     const transcript = event.results[resultIndex][0].transcript\r\n//       .trim()\r\n//       .toLowerCase();\r\n\r\n//     if (event.results[resultIndex].isFinal) {\r\n//       console.log(`Recognized text: ${transcript}`);\r\n//       if (transcript.includes(\"brain\")) {\r\n//         console.log(\"Wake word heard, processing command...\");\r\n//         handleCommandWithFuse(transcript.replace(\"brain\", \"\"));\r\n//       }\r\n//     }\r\n//   };\r\n\r\n//   // const onRecognitionEnd = () => {\r\n//   //   console.log(\"Recognition ended.\");\r\n//   //   setIsRecognitionActive(false); // Update state when recognition ends\r\n//   //   recognition.current.starting = false; // Reset the flag when recognition ends\r\n//   //   // We now check if the recognition is already running before starting it again\r\n//   //   if (isListening && !isSpeaking && !recognition.current?.starting) {\r\n//   //     console.log(\"Restarting recognition.\");\r\n//   //     recognition.current.start();\r\n//   //   }\r\n//   // };\r\n\r\n//   // useEffect(() => {\r\n//   //   if (isListening && !hasGreeted.current) {\r\n//   //     speak(\"Hello, I'm Brane. How can I assist you today?\");\r\n//   //     hasGreeted.current = true;\r\n//   //   } else if (isListening && !isSpeaking) {\r\n//   //     recognition.current.start();\r\n//   //   }\r\n//   // }, [isListening, isSpeaking]);\r\n\r\n//   useEffect(() => {\r\n//     if (isListening && !hasGreeted.current) {\r\n//       speak(\"Hello, I'm Brane. How can I assist you today?\");\r\n//       hasGreeted.current = true;\r\n//     } else if (isListening && !isSpeaking && !recognition.current.starting) {\r\n//       // Check the flag before starting\r\n//       recognition.current.starting = true; // Set the flag when starting recognition\r\n//       recognition.current.start();\r\n//     }\r\n//   }, [isListening, isSpeaking]);\r\n\r\n//   // const startListening = () => {\r\n//   //   console.log(\"Attempting to start listening.\");\r\n//   //   if (recognition.current && !recognition.current.starting) {\r\n//   //     setIsListening(true);\r\n//   //     recognition.current.starting = true; // Set the flag when starting recognition\r\n//   //     recognition.current.start();\r\n//   //     console.log(\"Listening started.\");\r\n//   //   }\r\n//   // };\r\n\r\n//   // const stopListening = () => {\r\n//   //   console.log(\"Stopping listening.\");\r\n\r\n//   //   setIsListening(false);\r\n//   //   recognition.current.stop();\r\n//   //   if (speechSynthesis.current.speaking) {\r\n//   //     speechSynthesis.current.cancel();\r\n//   //   }\r\n//   //   if (restartRecognitionTimeout.current) {\r\n//   //     clearTimeout(restartRecognitionTimeout.current);\r\n//   //   }\r\n//   //   console.log(\"Listening stopped.\");\r\n//   // };\r\n//   // Handle start and stop listening logic\r\n//   const startListening = () => {\r\n//     console.log(\"Attempting to start listening.\");\r\n//     if (!recognition.current.starting) {\r\n//       setIsListening(true);\r\n//       recognition.current.starting = true;\r\n//       recognition.current.start();\r\n//       console.log(\"Listening started.\");\r\n//     } else {\r\n//       console.log(\"Recognition already active.\");\r\n//     }\r\n//   };\r\n\r\n//   const stopListening = () => {\r\n//     console.log(\"Stopping listening.\");\r\n//     if (recognition.current.starting) {\r\n//       setIsListening(false);\r\n//       recognition.current.starting = false;\r\n//       recognition.current.stop();\r\n//       console.log(\"Listening stopped.\");\r\n//     } else {\r\n//       console.log(\"Recognition already inactive.\");\r\n//     }\r\n//   };\r\n\r\n//   // const handleCommandWithFuse = (command) => {\r\n//   //   const fuse = new Fuse(commands, { keys: [\"utterance\"], threshold: 0.4 });\r\n//   //   const results = fuse.search(command);\r\n//   //   const foundCommand = results.length ? results[0].item : null;\r\n\r\n//   //   if (foundCommand) {\r\n//   //     console.log(\"Command found:\", foundCommand.utterance);\r\n//   //     speak(foundCommand.response);\r\n//   //     if (foundCommand.route) {\r\n//   //       navigate(foundCommand.route); // Navigate to the route specified in the command\r\n//   //     }\r\n//   //   } else {\r\n//   //     console.log(\"No command found.\");\r\n//   //     speak(\"I'm not sure how to respond to that.\");\r\n//   //   }\r\n//   // };\r\n\r\n//   const handleCommandWithFuse = (command) => {\r\n//     const fuse = new Fuse(commands, { keys: [\"utterance\"], threshold: 0.4 });\r\n//     const results = fuse.search(command);\r\n//     const foundCommand = results.length ? results[0].item : null;\r\n\r\n//     if (foundCommand) {\r\n//       console.log(\"Command found:\", foundCommand.utterance);\r\n\r\n//       if (foundCommand.route) {\r\n//         if (location.pathname !== foundCommand.route) {\r\n//           navigate(foundCommand.route);\r\n//           speak(\r\n//             `Navigating to ${\r\n//               foundCommand.routeDescription || \"requested page\"\r\n//             }.`\r\n//           );\r\n//         } else {\r\n//           speak(\r\n//             `You are already on the ${\r\n//               foundCommand.routeDescription || \"requested page\"\r\n//             }.`\r\n//           );\r\n//         }\r\n//       } else if (foundCommand.action) {\r\n//         foundCommand.action();\r\n//       }\r\n\r\n//       if (foundCommand.response) {\r\n//         speak(foundCommand.response);\r\n//       }\r\n//     } else {\r\n//       console.log(\"No command found.\");\r\n//       speak(\"I'm not sure how to respond to that.\");\r\n//     }\r\n//   };\r\n\r\n//   const commands = [\r\n//     {\r\n//       utterance: \"Hello who are you ?\",\r\n\r\n//       response:\r\n//         \"Hi! This is Brane! your Voice bot from Brane Education How can I Assist you Today ?\",\r\n//     },\r\n\r\n//     {\r\n//       utterance: \"Hello\",\r\n\r\n//       response: \"Hi! How can I assist you today?\",\r\n//     },\r\n\r\n//     {\r\n//       utterance: \"hello\",\r\n\r\n//       response: \"Hi! How can I assist you today?\",\r\n//     },\r\n\r\n//     {\r\n//       utterance: \"Hi.\",\r\n\r\n//       response: \"Hello! How can I assist you today?\",\r\n//     },\r\n\r\n//     {\r\n//       utterance: \"Hey there\",\r\n\r\n//       response: \"Hi! How can I assist you today?\",\r\n//     },\r\n\r\n//     {\r\n//       utterance: \"Good morning Brane.\",\r\n\r\n//       response: \"Hey Hiii! Good morning  ! How can I help you?\",\r\n//     },\r\n\r\n//     {\r\n//       utterance: \"Good afternoon Brane.\",\r\n\r\n//       response: \"Hey Hiii! Good after noon ! How can I help you?\",\r\n//     },\r\n\r\n//     {\r\n//       utterance: \"Good evening Brane.\",\r\n\r\n//       response: \"Hey Hiii! Good evening ! How can I help you?\",\r\n//     },\r\n\r\n//     {\r\n//       utterance: \"can you please take me to login page\",\r\n//       route: \"/login\",\r\n//       routeDescription: \"login page\",\r\n//       response: \"Navigating to the login page.\",\r\n//     },\r\n\r\n//     {\r\n//       utterance: \"go to login page\",\r\n//       route: \"/login\",\r\n//       routeDescription: \"login page\",\r\n//       response: \"Navigating to the login page.\",\r\n//     },\r\n\r\n//     {\r\n//       utterance: \"please take me to login page\",\r\n//       route: \"/login\",\r\n//       routeDescription: \"login page\",\r\n//       response: \"Navigating to the login page.\",\r\n//     },\r\n\r\n//     {\r\n//       utterance: \"Go to login page\",\r\n//       route: \"/login\",\r\n//       routeDescription: \"login page\",\r\n//       response: \"Navigating to the login page.\",\r\n//     },\r\n\r\n//     {\r\n//       utterance: \"open login page\",\r\n//       route: \"/login\",\r\n//       routeDescription: \"login page\",\r\n//       response: \"Navigating to the login page.\",\r\n//     },\r\n\r\n//     {\r\n//       utterance: \"can you please take me to signup page\",\r\n//       route: \"/signup\",\r\n//       routeDescription: \"signup page\",\r\n//       response: \"Navigating to the signup page.\",\r\n//     },\r\n\r\n//     {\r\n//       utterance: \"take me to signup page\",\r\n//       route: \"/signup\",\r\n//       routeDescription: \"signup page\",\r\n//       response: \"Navigating to the signup page.\",\r\n//     },\r\n\r\n//     {\r\n//       utterance: \"Go to signup page\",\r\n//       route: \"/signup\",\r\n//       routeDescription: \"signup page\",\r\n//       response: \"Navigating to the signup page.\",\r\n//     },\r\n\r\n//     {\r\n//       utterance: \"open signup page\",\r\n//       route: \"/signup\",\r\n//       routeDescription: \"signup page\",\r\n//       response: \"Navigating to the signup page.\",\r\n//     },\r\n\r\n//     {\r\n//       utterance: \"what are platform features\",\r\n\r\n//       response:\r\n//         \"Dashboard, Dynamic time table, Learning Networks, Little Masters, Video Based Dictionary, General Search.\",\r\n//     },\r\n\r\n//     {\r\n//       utterance: \"Features of platform\",\r\n\r\n//       response:\r\n//         \"Dashboard, Dynamic time table, Learning Networks, Little Masters, Video Based Dictionary, General Search.\",\r\n//     },\r\n\r\n//     {\r\n//       utterance: \"What does the platform offer\",\r\n\r\n//       response:\r\n//         \"Dashboard, Dynamic time table, Learning Networks, Little Masters, Video Based Dictionary, General Search.\",\r\n//     },\r\n\r\n//     {\r\n//       utterance: \"Say me the features of platform\",\r\n\r\n//       response:\r\n//         \"Dashboard, Dynamic time table, Learning Networks, Little Masters, Video Based Dictionary, General Search.\",\r\n//     },\r\n\r\n//     {\r\n//       utterance: \"Say me the services of platform\",\r\n\r\n//       response:\r\n//         \"Dashboard, Dynamic time table, Learning Networks, Little Masters, Video Based Dictionary, General Search.\",\r\n//     },\r\n\r\n//     {\r\n//       utterance: \"tell me the services offered by the platform\",\r\n\r\n//       response:\r\n//         \"Dashboard, Dynamic time table, Learning Networks, Little Masters, Video Based Dictionary, General Search.\",\r\n//     },\r\n\r\n//     {\r\n//       utterance: \"explain platform services\",\r\n\r\n//       response:\r\n//         \"Dashboard, Dynamic time table, Learning Networks, Little Masters, Video Based Dictionary, General Search.\",\r\n//     },\r\n\r\n//     {\r\n//       utterance: \"Give me the Parent voice of Julia Harris\",\r\n\r\n//       response:\r\n//         \"Brane education has helped my son a lot in his studies. He improved a lot in his studies and is now able to score good marks in his exams\",\r\n//     },\r\n\r\n//     {\r\n//       utterance: \"Play today's motivational video\",\r\n\r\n//       response: \"I am playing the video\",\r\n//     },\r\n\r\n//     {\r\n//       utterance: \"Play today's video\",\r\n\r\n//       response: \"I am playing Motivational video\",\r\n//     },\r\n\r\n//     {\r\n//       utterance: \"Leaders Voice\",\r\n\r\n//       response:\r\n//         \"This Voice-interactive AI Platform is a game Changer. It revolutionizes education.\",\r\n//     },\r\n\r\n//     {\r\n//       utterance: \"Curriculum Supported by Brane Education\",\r\n\r\n//       response:\r\n//         \"we support multiple Boards let me say few Telangana State Board Andhra Pradesh Board Maharashtra Board Assam Board\",\r\n//     },\r\n\r\n//     {\r\n//       utterance: \"Boards supported by the platform\",\r\n\r\n//       response:\r\n//         \"we support multiple Boards let me say few Telangana State Board Andhra Pradesh Board Maharashtra Board Assam Board\",\r\n//     },\r\n\r\n//     {\r\n//       utterance: \"Curriculum\",\r\n\r\n//       response:\r\n//         \"we support multiple Boards let me say few Telangana State Board Andhra Pradesh Board Maharashtra Board Assam Board\",\r\n//     },\r\n\r\n//     {\r\n//       utterance: \"Go to landing page\",\r\n\r\n//       response: \"Okay, I am taking you to the landing page.\",\r\n\r\n//       route: \"/childpage\",\r\n//     },\r\n\r\n//     {\r\n//       utterance: \"take me to landing page\",\r\n\r\n//       response: \"Okay, I am taking you to the landing page.\",\r\n\r\n//       route: \"/childpage\",\r\n//     },\r\n\r\n//     {\r\n//       utterance: \"move to landing page\",\r\n\r\n//       response: \"Okay, I am taking you to the landing page.\",\r\n\r\n//       route: \"/childpage\",\r\n//     },\r\n\r\n//     {\r\n//       utterance: \"roll back to landing page\",\r\n\r\n//       response: \"Okay, I am taking you to the landing page.\",\r\n\r\n//       route: \"/childpage\",\r\n//     },\r\n\r\n//     {\r\n//       utterance: \"move to landing page\",\r\n\r\n//       response: \"Okay, I am taking you to the landing page.\",\r\n\r\n//       route: \"/childpage\",\r\n//     },\r\n\r\n//     {\r\n//       utterance: \"what is today's quote\",\r\n\r\n//       response:\r\n//         \"Determination is the power that sees us through all our frustration and obstacles. It helps in building our willpower which is the very basis of success.\",\r\n\r\n//       // route: \"/childpage\",\r\n//     },\r\n\r\n//     {\r\n//       utterance: \"Today's Inspirational quote\",\r\n\r\n//       response:\r\n//         \"Determination is the power that sees us through all our frustration and obstacles. It helps in building our willpower which is the very basis of success.\",\r\n\r\n//       // route: \"/childpage\",\r\n//     },\r\n\r\n//     {\r\n//       utterance: \"say me today's quote\",\r\n\r\n//       response:\r\n//         \"Determination is the power that sees us through all our frustration and obstacles. It helps in building our willpower which is the very basis of success.\",\r\n\r\n//       // route: \"/childpage\",\r\n//     },\r\n//     {\r\n//       utterance: \"go back\",\r\n//       response: \"Going back.\",\r\n//       action: goBack, // Note the use of an action property\r\n//     },\r\n//     {\r\n//       utterance: \"go forward\",\r\n//       response: \"Going forward.\",\r\n//       action: goForward,\r\n//     },\r\n//     {\r\n//       utterance: \"play video\",\r\n//       // response: \"Playing video.\",\r\n//       action: playVideo,\r\n//     },\r\n//     {\r\n//       utterance: \"pause video\",\r\n//       // response: \"Pausing video.\",\r\n//       action: pauseVideo,\r\n//     },\r\n//     {\r\n//       utterance: \"start video\",\r\n//       // response: \"Playing video.\",\r\n//       action: playVideo,\r\n//     },\r\n//     {\r\n//       utterance: \"stop video\",\r\n//       // response: \"Playing video.\",\r\n//       action: pauseVideo,\r\n//     },\r\n//     {\r\n//       utterance: \"scroll up\",\r\n//       // response: \"Scrolling up.\",\r\n//       action: scrollUp,\r\n//     },\r\n//     {\r\n//       utterance: \"scroll down\",\r\n//       // response: \"Scrolling down.\",\r\n//       action: scrollDown,\r\n//     },\r\n//     {\r\n//       utterance: \"go up\",\r\n\r\n//       // response: \"Scrolling up.\",\r\n//       action: scrollUp,\r\n//     },\r\n//     {\r\n//       utterance: \"go down\",\r\n//       // response: \"Scrolling down.\",\r\n//       action: scrollDown,\r\n//     },\r\n//     {\r\n//       utterance: \"scroll to top\",\r\n//       action: scrollToTop,\r\n//     },\r\n//     {\r\n//       utterance: \"scroll to bottom\",\r\n//       action: scrollToBottom,\r\n//     },\r\n//   ];\r\n//   return (\r\n//     <div className=\"speech-bot-container\">\r\n//       <div\r\n//         className={`button-container ${\r\n//           isListening ? \"voicebotframeactive\" : \"voicebotframe\"\r\n//         }`}\r\n//       >\r\n//         <div onClick={isListening ? stopListening : startListening}>\r\n//           <iframe\r\n//             src={\r\n//               isListening\r\n//                 ? \"https://lottie.host/?file=a89aca3f-5407-4052-82c3-2048afca7a9f/NpCdWzLSKD.json\"\r\n//                 : \"https://lottie.host/?file=d2b6cc0e-fe95-4847-85b5-35365fca7e00/vTudpCuPZq.json\"\r\n//             }\r\n//             width=\"120\" // Set your desired width\r\n//             height=\"120\" // Set your desired height\r\n//             title={isListening ? \"Stop Animation\" : \"Start Animation\"}\r\n//             className={isListening ? \"voicebotframeactive\" : \"voicebotframe\"}\r\n//           ></iframe>\r\n//           {isListening ? (\r\n//             <div className=\"overlay\" onClick={stopListening}></div>\r\n//           ) : (\r\n//             <div className=\"overlay\" onClick={startListening}></div>\r\n//           )}\r\n//         </div>\r\n//       </div>\r\n//     </div>\r\n//   );\r\n// };\r\n\r\n// export default VoiceBot;\r\n\r\n// All functionalities but messed up\r\n\r\n// import React, { useState, useEffect, useRef } from \"react\";\r\n// import { useNavigate, useLocation } from \"react-router-dom\";\r\n// import Fuse from \"fuse.js\";\r\n// import \"./VoiceBot.css\";\r\n\r\n// const VoiceBot = ({ videoRef, takeTestRef, goBackRef }) => {\r\n//   const [isListening, setIsListening] = useState(false);\r\n//   const [isSpeaking, setIsSpeaking] = useState(false);\r\n//   const recognition = useRef(null);\r\n//   const speechSynthesis = useRef(window.speechSynthesis);\r\n//   const hasGreeted = useRef(false);\r\n//   const navigate = useNavigate();\r\n//   const location = useLocation();\r\n//   const isRecognitionActive = useRef(false);\r\n\r\n//   useEffect(() => {\r\n//     recognition.current = new window.webkitSpeechRecognition();\r\n//     recognition.current.continuous = true;\r\n//     recognition.current.interimResults = false;\r\n//     recognition.current.onresult = onResult;\r\n//     recognition.current.onend = onRecognitionEnd;\r\n\r\n//     return () => {\r\n//       if (recognition.current) {\r\n//         recognition.current.abort();\r\n//       }\r\n//     };\r\n//   }, [location.pathname]);\r\n\r\n//   const onResult = (event) => {\r\n//     const resultIndex = event.resultIndex;\r\n//     const transcript = event.results[resultIndex][0].transcript\r\n//       .trim()\r\n//       .toLowerCase();\r\n\r\n//     if (event.results[resultIndex].isFinal) {\r\n//       console.log(`Recognized text: ${transcript}`);\r\n//       if (transcript.includes(\"brain\")) {\r\n//         console.log(\"Wake word heard, processing command...\");\r\n//         handleCommandWithFuse(transcript.replace(\"brain\", \"\"));\r\n//       }\r\n//     }\r\n//   };\r\n\r\n//   const startListening = () => {\r\n//     if (!isRecognitionActive.current) {\r\n//       setIsListening(true);\r\n//       recognition.current.start();\r\n//       isRecognitionActive.current = true;\r\n//     }\r\n//   };\r\n\r\n//   const stopListening = () => {\r\n//     if (isRecognitionActive.current) {\r\n//       setIsListening(false);\r\n//       recognition.current.stop();\r\n//       isRecognitionActive.current = false;\r\n//     }\r\n//   };\r\n\r\n//   const onRecognitionEnd = () => {\r\n//     isRecognitionActive.current = false;\r\n//     if (isListening) {\r\n//       startListening();\r\n//     }\r\n//   };\r\n\r\n//   const speak = (message) => {\r\n//     const utterance = new SpeechSynthesisUtterance(message);\r\n//     utterance.onend = () => {\r\n//       setIsSpeaking(false);\r\n//       if (isListening && !isRecognitionActive.current) {\r\n//         startListening();\r\n//       }\r\n//     };\r\n\r\n//     setIsSpeaking(true);\r\n//     if (isRecognitionActive.current) {\r\n//       stopListening(); // Adjusted to use stopListening\r\n//     }\r\n//     speechSynthesis.current.speak(utterance);\r\n//   };\r\n\r\n//   useEffect(() => {\r\n//     if (isListening && !hasGreeted.current) {\r\n//       speak(\"Hello, I'm Brane. How can I assist you today?\");\r\n//       hasGreeted.current = true;\r\n//     }\r\n//   }, [isListening]);\r\n\r\n//   const goBack = () => {\r\n//     if (window.history.length > 1) {\r\n//       navigate(-1);\r\n//     } else {\r\n//       speak(\"Can't go back any further.\");\r\n//     }\r\n//   };\r\n\r\n//   const goForward = () => {\r\n//     // Unfortunately, there's no direct way to check if you can go forward in the history.\r\n//     // You might need to manage this state manually based on user navigation.\r\n//     navigate(1);\r\n//   };\r\n\r\n//   const playVideo = () => {\r\n//     if (videoRef.current && !videoRef.current.paused) {\r\n//       speak(\"Video is already playing.\");\r\n//     } else if (videoRef.current) {\r\n//       videoRef.current.play();\r\n//       speak(\"Playing video.\");\r\n//     } else {\r\n//       speak(\"No video to play.\");\r\n//     }\r\n//   };\r\n\r\n//   const pauseVideo = () => {\r\n//     if (videoRef.current && videoRef.current.paused) {\r\n//       speak(\"Video is already paused.\");\r\n//     } else if (videoRef.current) {\r\n//       videoRef.current.pause();\r\n//       speak(\"Video paused.\");\r\n//     } else {\r\n//       speak(\"No video to pause.\");\r\n//     }\r\n//   };\r\n\r\n//   const scrollAmount = window.innerHeight * 0.82;\r\n\r\n//   const scrollUp = () => {\r\n//     if (window.pageYOffset === 0) {\r\n//       speak(\"Already at the top of the page.\");\r\n//     } else {\r\n//       window.scrollBy(0, -scrollAmount);\r\n//       speak(\"Scrolled up.\");\r\n//     }\r\n//   };\r\n\r\n//   const scrollDown = () => {\r\n//     const maxScrollTop =\r\n//       document.documentElement.scrollHeight - window.innerHeight;\r\n//     if (window.pageYOffset >= maxScrollTop) {\r\n//       speak(\"Already at the bottom of the page.\");\r\n//     } else {\r\n//       window.scrollBy(0, scrollAmount);\r\n//       speak(\"Scrolled down.\");\r\n//     }\r\n//   };\r\n\r\n//   const scrollToTop = () => {\r\n//     if (window.pageYOffset === 0) {\r\n//       speak(\"Already at the top of the page.\");\r\n//     } else {\r\n//       window.scrollTo(0, 0);\r\n//       speak(\"Scrolled to the top of the page.\");\r\n//     }\r\n//   };\r\n\r\n//   const scrollToBottom = () => {\r\n//     const maxScrollTop =\r\n//       document.documentElement.scrollHeight - window.innerHeight;\r\n//     if (window.pageYOffset >= maxScrollTop) {\r\n//       speak(\"Already at the bottom of the page.\");\r\n//     } else {\r\n//       window.scrollTo(0, document.body.scrollHeight);\r\n//       speak(\"Scrolled to the bottom of the page.\");\r\n//     }\r\n//   };\r\n\r\n//   // const speak = (message) => {\r\n//   //   const utterance = new SpeechSynthesisUtterance(message);\r\n//   //   utterance.onend = () => {\r\n//   //     setIsSpeaking(false);\r\n//   //     console.log(\"Speaking ended.\");\r\n//   //     // Only restart recognition if we're still supposed to be listening\r\n//   //     // if (isListening) {\r\n//   //     //   if (restartRecognitionTimeout.current) {\r\n//   //     //     clearTimeout(restartRecognitionTimeout.current);\r\n//   //     //   }\r\n//   //     //   restartRecognitionTimeout.current = setTimeout(() => {\r\n//   //     //     console.log(\"Recognition restarted.\");\r\n//   //     //     recognition.current.start();\r\n//   //     //   }, 100); // Delay to prevent immediate restart\r\n//   //     // }\r\n//   //     if (isListening && !recognition.current.starting) { // Check the flag before restarting\r\n//   //       recognition.current.starting = true; // Set the flag when starting recognition\r\n//   //       recognition.current.start();\r\n//   //     }\r\n//   //   };\r\n\r\n//   //   setIsSpeaking(true);\r\n//   //   console.log(\"Speaking started.\");\r\n//   //   recognition.current.stop(); // Stop recognition when the bot starts speaking\r\n//   //   speechSynthesis.current.speak(utterance);\r\n//   // };\r\n\r\n//   // const onRecognitionEnd = () => {\r\n//   //   console.log(\"Recognition ended.\");\r\n//   //   setIsRecognitionActive(false); // Update state when recognition ends\r\n//   //   recognition.current.starting = false; // Reset the flag when recognition ends\r\n//   //   // We now check if the recognition is already running before starting it again\r\n//   //   if (isListening && !isSpeaking && !recognition.current?.starting) {\r\n//   //     console.log(\"Restarting recognition.\");\r\n//   //     recognition.current.start();\r\n//   //   }\r\n//   // };\r\n\r\n//   // useEffect(() => {\r\n//   //   if (isListening && !hasGreeted.current) {\r\n//   //     speak(\"Hello, I'm Brane. How can I assist you today?\");\r\n//   //     hasGreeted.current = true;\r\n//   //   } else if (isListening && !isSpeaking) {\r\n//   //     recognition.current.start();\r\n//   //   }\r\n//   // }, [isListening, isSpeaking]);\r\n\r\n//   // const startListening = () => {\r\n//   //   console.log(\"Attempting to start listening.\");\r\n//   //   if (recognition.current && !recognition.current.starting) {\r\n//   //     setIsListening(true);\r\n//   //     recognition.current.starting = true; // Set the flag when starting recognition\r\n//   //     recognition.current.start();\r\n//   //     console.log(\"Listening started.\");\r\n//   //   }\r\n//   // };\r\n\r\n//   // const stopListening = () => {\r\n//   //   console.log(\"Stopping listening.\");\r\n\r\n//   //   setIsListening(false);\r\n//   //   recognition.current.stop();\r\n//   //   if (speechSynthesis.current.speaking) {\r\n//   //     speechSynthesis.current.cancel();\r\n//   //   }\r\n//   //   if (restartRecognitionTimeout.current) {\r\n//   //     clearTimeout(restartRecognitionTimeout.current);\r\n//   //   }\r\n//   //   console.log(\"Listening stopped.\");\r\n//   // };\r\n//   // Handle start and stop listening logic\r\n\r\n//   useEffect(() => {\r\n//     if (isListening && !hasGreeted.current) {\r\n//       speak(\"Hello, I'm Brane. How can I assist you today?\");\r\n//       hasGreeted.current = true;\r\n//     }\r\n//   }, [isListening]);\r\n\r\n//   // const handleCommandWithFuse = (command) => {\r\n//   //   const fuse = new Fuse(commands, { keys: [\"utterance\"], threshold: 0.4 });\r\n//   //   const results = fuse.search(command);\r\n//   //   const foundCommand = results.length ? results[0].item : null;\r\n\r\n//   //   if (foundCommand) {\r\n//   //     console.log(\"Command found:\", foundCommand.utterance);\r\n//   //     speak(foundCommand.response);\r\n//   //     if (foundCommand.route) {\r\n//   //       navigate(foundCommand.route); // Navigate to the route specified in the command\r\n//   //     }\r\n//   //   } else {\r\n//   //     console.log(\"No command found.\");\r\n//   //     speak(\"I'm not sure how to respond to that.\");\r\n//   //   }\r\n//   // };\r\n\r\n//   const handleCommandWithFuse = (command) => {\r\n//     const fuse = new Fuse(commands, { keys: [\"utterance\"], threshold: 0.4 });\r\n//     const results = fuse.search(command);\r\n//     const foundCommand = results.length ? results[0].item : null;\r\n\r\n//     if (foundCommand) {\r\n//       console.log(\"Command found:\", foundCommand.utterance);\r\n\r\n//       if (foundCommand.action) {\r\n//         foundCommand.action();\r\n//       } else if (foundCommand.route) {\r\n//         navigate(foundCommand.route);\r\n//       }\r\n\r\n//       if (foundCommand.response) {\r\n//         speak(foundCommand.response);\r\n//       }\r\n//     } else {\r\n//       console.log(\"No command found.\");\r\n//       speak(\"I'm not sure how to respond to that.\");\r\n//     }\r\n//   };\r\n\r\n//   const commands = [\r\n//     {\r\n//       utterance: \"Hello who are you ?\",\r\n\r\n//       response:\r\n//         \"Hi! This is Brane! your Voice bot from Brane Education How can I Assist you Today ?\",\r\n//     },\r\n\r\n//     {\r\n//       utterance: \"Hello\",\r\n\r\n//       response: \"Hi! How can I assist you today?\",\r\n//     },\r\n\r\n//     {\r\n//       utterance: \"hello\",\r\n\r\n//       response: \"Hi! How can I assist you today?\",\r\n//     },\r\n\r\n//     {\r\n//       utterance: \"Hi.\",\r\n\r\n//       response: \"Hello! How can I assist you today?\",\r\n//     },\r\n\r\n//     {\r\n//       utterance: \"Hey there\",\r\n\r\n//       response: \"Hi! How can I assist you today?\",\r\n//     },\r\n\r\n//     {\r\n//       utterance: \"Good morning Brane.\",\r\n\r\n//       response: \"Hey Hiii! Good morning  ! How can I help you?\",\r\n//     },\r\n\r\n//     {\r\n//       utterance: \"Good afternoon Brane.\",\r\n\r\n//       response: \"Hey Hiii! Good after noon ! How can I help you?\",\r\n//     },\r\n\r\n//     {\r\n//       utterance: \"Good evening Brane.\",\r\n\r\n//       response: \"Hey Hiii! Good evening ! How can I help you?\",\r\n//     },\r\n\r\n//     {\r\n//       utterance: \"can you please take me to login page\",\r\n//       route: \"/login\",\r\n//       routeDescription: \"login page\",\r\n//       response: \"Navigating to the login page.\",\r\n//     },\r\n\r\n//     {\r\n//       utterance: \"go to login page\",\r\n//       route: \"/login\",\r\n//       routeDescription: \"login page\",\r\n//       response: \"Navigating to the login page.\",\r\n//     },\r\n\r\n//     {\r\n//       utterance: \"please take me to login page\",\r\n//       route: \"/login\",\r\n//       routeDescription: \"login page\",\r\n//       response: \"Navigating to the login page.\",\r\n//     },\r\n\r\n//     {\r\n//       utterance: \"Go to login page\",\r\n//       route: \"/login\",\r\n//       routeDescription: \"login page\",\r\n//       response: \"Navigating to the login page.\",\r\n//     },\r\n\r\n//     {\r\n//       utterance: \"open login page\",\r\n//       route: \"/login\",\r\n//       routeDescription: \"login page\",\r\n//       response: \"Navigating to the login page.\",\r\n//     },\r\n\r\n//     {\r\n//       utterance: \"can you please take me to signup page\",\r\n//       route: \"/signup\",\r\n//       routeDescription: \"signup page\",\r\n//       response: \"Navigating to the signup page.\",\r\n//     },\r\n\r\n//     {\r\n//       utterance: \"take me to signup page\",\r\n//       route: \"/signup\",\r\n//       routeDescription: \"signup page\",\r\n//       response: \"Navigating to the signup page.\",\r\n//     },\r\n\r\n//     {\r\n//       utterance: \"Go to signup page\",\r\n//       route: \"/signup\",\r\n//       routeDescription: \"signup page\",\r\n//       response: \"Navigating to the signup page.\",\r\n//     },\r\n\r\n//     {\r\n//       utterance: \"open signup page\",\r\n//       route: \"/signup\",\r\n//       routeDescription: \"signup page\",\r\n//       response: \"Navigating to the signup page.\",\r\n//     },\r\n\r\n//     {\r\n//       utterance: \"what are platform features\",\r\n\r\n//       response:\r\n//         \"Dashboard, Dynamic time table, Learning Networks, Little Masters, Video Based Dictionary, General Search.\",\r\n//     },\r\n\r\n//     {\r\n//       utterance: \"Features of platform\",\r\n\r\n//       response:\r\n//         \"Dashboard, Dynamic time table, Learning Networks, Little Masters, Video Based Dictionary, General Search.\",\r\n//     },\r\n\r\n//     {\r\n//       utterance: \"What does the platform offer\",\r\n\r\n//       response:\r\n//         \"Dashboard, Dynamic time table, Learning Networks, Little Masters, Video Based Dictionary, General Search.\",\r\n//     },\r\n\r\n//     {\r\n//       utterance: \"Say me the features of platform\",\r\n\r\n//       response:\r\n//         \"Dashboard, Dynamic time table, Learning Networks, Little Masters, Video Based Dictionary, General Search.\",\r\n//     },\r\n\r\n//     {\r\n//       utterance: \"Say me the services of platform\",\r\n\r\n//       response:\r\n//         \"Dashboard, Dynamic time table, Learning Networks, Little Masters, Video Based Dictionary, General Search.\",\r\n//     },\r\n\r\n//     {\r\n//       utterance: \"tell me the services offered by the platform\",\r\n\r\n//       response:\r\n//         \"Dashboard, Dynamic time table, Learning Networks, Little Masters, Video Based Dictionary, General Search.\",\r\n//     },\r\n\r\n//     {\r\n//       utterance: \"explain platform services\",\r\n\r\n//       response:\r\n//         \"Dashboard, Dynamic time table, Learning Networks, Little Masters, Video Based Dictionary, General Search.\",\r\n//     },\r\n\r\n//     {\r\n//       utterance: \"Give me the Parent voice of Julia Harris\",\r\n\r\n//       response:\r\n//         \"Brane education has helped my son a lot in his studies. He improved a lot in his studies and is now able to score good marks in his exams\",\r\n//     },\r\n\r\n//     {\r\n//       utterance: \"Play today's motivational video\",\r\n\r\n//       response: \"I am playing the video\",\r\n//     },\r\n\r\n//     {\r\n//       utterance: \"Play today's video\",\r\n\r\n//       response: \"I am playing Motivational video\",\r\n//     },\r\n\r\n//     {\r\n//       utterance: \"Leaders Voice\",\r\n\r\n//       response:\r\n//         \"This Voice-interactive AI Platform is a game Changer. It revolutionizes education.\",\r\n//     },\r\n\r\n//     {\r\n//       utterance: \"Curriculum Supported by Brane Education\",\r\n\r\n//       response:\r\n//         \"we support multiple Boards let me say few Telangana State Board Andhra Pradesh Board Maharashtra Board Assam Board\",\r\n//     },\r\n\r\n//     {\r\n//       utterance: \"Boards supported by the platform\",\r\n\r\n//       response:\r\n//         \"we support multiple Boards let me say few Telangana State Board Andhra Pradesh Board Maharashtra Board Assam Board\",\r\n//     },\r\n\r\n//     {\r\n//       utterance: \"Curriculum\",\r\n\r\n//       response:\r\n//         \"we support multiple Boards let me say few Telangana State Board Andhra Pradesh Board Maharashtra Board Assam Board\",\r\n//     },\r\n\r\n//     {\r\n//       utterance: \"Go to landing page\",\r\n\r\n//       response: \"Okay, I am taking you to the landing page.\",\r\n\r\n//       route: \"/childpage\",\r\n//     },\r\n\r\n//     {\r\n//       utterance: \"take me to landing page\",\r\n\r\n//       response: \"Okay, I am taking you to the landing page.\",\r\n\r\n//       route: \"/childpage\",\r\n//     },\r\n\r\n//     {\r\n//       utterance: \"move to landing page\",\r\n\r\n//       response: \"Okay, I am taking you to the landing page.\",\r\n\r\n//       route: \"/childpage\",\r\n//     },\r\n\r\n//     {\r\n//       utterance: \"roll back to landing page\",\r\n\r\n//       response: \"Okay, I am taking you to the landing page.\",\r\n\r\n//       route: \"/childpage\",\r\n//     },\r\n\r\n//     {\r\n//       utterance: \"move to landing page\",\r\n\r\n//       response: \"Okay, I am taking you to the landing page.\",\r\n\r\n//       route: \"/childpage\",\r\n//     },\r\n\r\n//     {\r\n//       utterance: \"what is today's quote\",\r\n\r\n//       response:\r\n//         \"Determination is the power that sees us through all our frustration and obstacles. It helps in building our willpower which is the very basis of success.\",\r\n\r\n//       // route: \"/childpage\",\r\n//     },\r\n\r\n//     {\r\n//       utterance: \"Today's Inspirational quote\",\r\n\r\n//       response:\r\n//         \"Determination is the power that sees us through all our frustration and obstacles. It helps in building our willpower which is the very basis of success.\",\r\n\r\n//       // route: \"/childpage\",\r\n//     },\r\n\r\n//     {\r\n//       utterance: \"say me today's quote\",\r\n\r\n//       response:\r\n//         \"Determination is the power that sees us through all our frustration and obstacles. It helps in building our willpower which is the very basis of success.\",\r\n\r\n//       // route: \"/childpage\",\r\n//     },\r\n//     {\r\n//       utterance: \"go back\",\r\n//       response: \"Going back.\",\r\n//       action: goBack, // Note the use of an action property\r\n//     },\r\n//     {\r\n//       utterance: \"go forward\",\r\n//       response: \"Going forward.\",\r\n//       action: goForward,\r\n//     },\r\n//     {\r\n//       utterance: \"play video\",\r\n//       // response: \"Playing video.\",\r\n//       action: playVideo,\r\n//     },\r\n//     {\r\n//       utterance: \"pause video\",\r\n//       // response: \"Pausing video.\",\r\n//       action: pauseVideo,\r\n//     },\r\n//     {\r\n//       utterance: \"start video\",\r\n//       // response: \"Playing video.\",\r\n//       action: playVideo,\r\n//     },\r\n//     {\r\n//       utterance: \"stop video\",\r\n//       // response: \"Playing video.\",\r\n//       action: pauseVideo,\r\n//     },\r\n//     {\r\n//       utterance: \"scroll up\",\r\n//       // response: \"Scrolling up.\",\r\n//       action: scrollUp,\r\n//     },\r\n//     {\r\n//       utterance: \"scroll down\",\r\n//       // response: \"Scrolling down.\",\r\n//       action: scrollDown,\r\n//     },\r\n//     {\r\n//       utterance: \"go up\",\r\n\r\n//       // response: \"Scrolling up.\",\r\n//       action: scrollUp,\r\n//     },\r\n//     {\r\n//       utterance: \"go down\",\r\n//       // response: \"Scrolling down.\",\r\n//       action: scrollDown,\r\n//     },\r\n//     {\r\n//       utterance: \"scroll to top\",\r\n//       action: scrollToTop,\r\n//     },\r\n//     {\r\n//       utterance: \"scroll to bottom\",\r\n//       action: scrollToBottom,\r\n//     },\r\n//     {\r\n//       utterance: \"go back\",\r\n//       action: goBackRef?.current?.click, // Use goBackRef directly\r\n//       response: \"Going back.\",\r\n//     },\r\n//     {\r\n//       utterance: \"take test\",\r\n//       action: takeTestRef?.current?.click, // Use takeTestRef directly\r\n//       response: \"Starting the test.\",\r\n//     },\r\n//   ];\r\n//   return (\r\n//     <div className=\"speech-bot-container\">\r\n//       <div\r\n//         className={`button-container ${\r\n//           isListening ? \"voicebotframeactive\" : \"voicebotframe\"\r\n//         }`}\r\n//       >\r\n//         <div onClick={isListening ? stopListening : startListening}>\r\n//           <iframe\r\n//             src={\r\n//               isListening\r\n//                 ? \"https://lottie.host/?file=a89aca3f-5407-4052-82c3-2048afca7a9f/NpCdWzLSKD.json\"\r\n//                 : \"https://lottie.host/?file=d2b6cc0e-fe95-4847-85b5-35365fca7e00/vTudpCuPZq.json\"\r\n//             }\r\n//             width=\"120\" // Set your desired width\r\n//             height=\"120\" // Set your desired height\r\n//             title={isListening ? \"Stop Animation\" : \"Start Animation\"}\r\n//             className={isListening ? \"voicebotframeactive\" : \"voicebotframe\"}\r\n//           ></iframe>\r\n//           {isListening ? (\r\n//             <div className=\"overlay\" onClick={stopListening}></div>\r\n//           ) : (\r\n//             <div className=\"overlay\" onClick={startListening}></div>\r\n//           )}\r\n//         </div>\r\n//       </div>\r\n//     </div>\r\n//   );\r\n// };\r\n\r\n// export default VoiceBot;\r\n"
        }
    ]
}